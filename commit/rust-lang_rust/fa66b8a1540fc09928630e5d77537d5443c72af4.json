{"sha": "fa66b8a1540fc09928630e5d77537d5443c72af4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNjZiOGExNTQwZmMwOTkyODYzMGU1ZDc3NTM3ZDU0NDNjNzJhZjQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-27T12:12:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-27T12:12:42Z"}, "message": "Rollup merge of #60316 - mgeier:rename-capacity-parameter, r=joshtriplett\n\nUse \"capacity\" as parameter name in with_capacity() methods\n\nSee #60271.\n\nThe only place where I didn't change the parameter name is `RawVec`. The problem is that it has a `.cap()` method instead of the usual `.capacity()`:\n\nhttps://github.com/rust-lang/rust/blob/597f432489f12a3f33419daa039ccef11a12c4fd/src/liballoc/raw_vec.rs#L200-L210\n\nChanging this would be a breaking change, and I guess that's not worth it.\n\nBut since I didn't change `.cap()` there, I didn't change the `cap` parameter name to `capacity`, either.", "tree": {"sha": "13fb0a065979b9f24a7ff84dfcefcf95c8aad128", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13fb0a065979b9f24a7ff84dfcefcf95c8aad128"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa66b8a1540fc09928630e5d77537d5443c72af4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcxEc6CRBK7hj4Ov3rIwAAdHIIAEqEkeiwnmpVn9fX728SYRh2\n5LEBzLzpApqyNfq/T4VPE0kg8QPp63ISP1RctbbfRXJ0TaxV/A47GODF82y4dUVZ\nBQ9P9uicH1Sldqrs3zHIuWUTrKWwUl1NcCGP17kNmchjZx5TNvUb+6HI9iKD1TAZ\nQyh7fnLIOMe5Zn7OT+Tcq0Rmm3JU7cXW+eNPNnKt3tYSFYei2RBOaSfs/+1uHW/f\n4AY9n0TCXm6pT8gK9fsO6IBg+QxgLplpxh5TInMeF3rPceEWQ22M2uCkvfHtmEXy\nIXE6OjtUT7H/tJ+Um21QYw43SGDkOTmOVfCFDf9k1LXYsoCcD6tWfeWpzypSOUA=\n=OHNW\n-----END PGP SIGNATURE-----\n", "payload": "tree 13fb0a065979b9f24a7ff84dfcefcf95c8aad128\nparent 7475db5cfa39438c7e0ef8e0d05d6c286f1ae48d\nparent be12ab070d733303355d433d68efb870e3da753b\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1556367162 +0200\ncommitter GitHub <noreply@github.com> 1556367162 +0200\n\nRollup merge of #60316 - mgeier:rename-capacity-parameter, r=joshtriplett\n\nUse \"capacity\" as parameter name in with_capacity() methods\n\nSee #60271.\n\nThe only place where I didn't change the parameter name is `RawVec`. The problem is that it has a `.cap()` method instead of the usual `.capacity()`:\n\nhttps://github.com/rust-lang/rust/blob/597f432489f12a3f33419daa039ccef11a12c4fd/src/liballoc/raw_vec.rs#L200-L210\n\nChanging this would be a breaking change, and I guess that's not worth it.\n\nBut since I didn't change `.cap()` there, I didn't change the `cap` parameter name to `capacity`, either.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa66b8a1540fc09928630e5d77537d5443c72af4", "html_url": "https://github.com/rust-lang/rust/commit/fa66b8a1540fc09928630e5d77537d5443c72af4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa66b8a1540fc09928630e5d77537d5443c72af4/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7475db5cfa39438c7e0ef8e0d05d6c286f1ae48d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7475db5cfa39438c7e0ef8e0d05d6c286f1ae48d", "html_url": "https://github.com/rust-lang/rust/commit/7475db5cfa39438c7e0ef8e0d05d6c286f1ae48d"}, {"sha": "be12ab070d733303355d433d68efb870e3da753b", "url": "https://api.github.com/repos/rust-lang/rust/commits/be12ab070d733303355d433d68efb870e3da753b", "html_url": "https://github.com/rust-lang/rust/commit/be12ab070d733303355d433d68efb870e3da753b"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "d65c24f7350ae30766dfff3cfa5de9c10bd90243", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fa66b8a1540fc09928630e5d77537d5443c72af4/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa66b8a1540fc09928630e5d77537d5443c72af4/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=fa66b8a1540fc09928630e5d77537d5443c72af4", "patch": "@@ -369,7 +369,7 @@ impl<T> VecDeque<T> {\n         VecDeque::with_capacity(INITIAL_CAPACITY)\n     }\n \n-    /// Creates an empty `VecDeque` with space for at least `n` elements.\n+    /// Creates an empty `VecDeque` with space for at least `capacity` elements.\n     ///\n     /// # Examples\n     ///\n@@ -379,10 +379,10 @@ impl<T> VecDeque<T> {\n     /// let vector: VecDeque<u32> = VecDeque::with_capacity(10);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn with_capacity(n: usize) -> VecDeque<T> {\n+    pub fn with_capacity(capacity: usize) -> VecDeque<T> {\n         // +1 since the ringbuffer always leaves one space empty\n-        let cap = cmp::max(n + 1, MINIMUM_CAPACITY + 1).next_power_of_two();\n-        assert!(cap > n, \"capacity overflow\");\n+        let cap = cmp::max(capacity + 1, MINIMUM_CAPACITY + 1).next_power_of_two();\n+        assert!(cap > capacity, \"capacity overflow\");\n \n         VecDeque {\n             tail: 0,"}, {"sha": "ec7ff3bd813975d835d00e20295bc634c6ec2cb3", "filename": "src/librustc_data_structures/bit_set.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa66b8a1540fc09928630e5d77537d5443c72af4/src%2Flibrustc_data_structures%2Fbit_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa66b8a1540fc09928630e5d77537d5443c72af4/src%2Flibrustc_data_structures%2Fbit_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fbit_set.rs?ref=fa66b8a1540fc09928630e5d77537d5443c72af4", "patch": "@@ -607,8 +607,8 @@ impl<T: Idx> GrowableBitSet<T> {\n         GrowableBitSet { bit_set: BitSet::new_empty(0) }\n     }\n \n-    pub fn with_capacity(bits: usize) -> GrowableBitSet<T> {\n-        GrowableBitSet { bit_set: BitSet::new_empty(bits) }\n+    pub fn with_capacity(capacity: usize) -> GrowableBitSet<T> {\n+        GrowableBitSet { bit_set: BitSet::new_empty(capacity) }\n     }\n \n     /// Returns `true` if the set has changed."}, {"sha": "e6c8e26fa92d8ed5ae7b47e39429a2bf4e0aaf1f", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fa66b8a1540fc09928630e5d77537d5443c72af4/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa66b8a1540fc09928630e5d77537d5443c72af4/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=fa66b8a1540fc09928630e5d77537d5443c72af4", "patch": "@@ -92,10 +92,10 @@ impl<R: Read> BufReader<R> {\n     /// }\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn with_capacity(cap: usize, inner: R) -> BufReader<R> {\n+    pub fn with_capacity(capacity: usize, inner: R) -> BufReader<R> {\n         unsafe {\n-            let mut buffer = Vec::with_capacity(cap);\n-            buffer.set_len(cap);\n+            let mut buffer = Vec::with_capacity(capacity);\n+            buffer.set_len(capacity);\n             inner.initializer().initialize(&mut buffer);\n             BufReader {\n                 inner,\n@@ -477,10 +477,10 @@ impl<W: Write> BufWriter<W> {\n     /// let mut buffer = BufWriter::with_capacity(100, stream);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn with_capacity(cap: usize, inner: W) -> BufWriter<W> {\n+    pub fn with_capacity(capacity: usize, inner: W) -> BufWriter<W> {\n         BufWriter {\n             inner: Some(inner),\n-            buf: Vec::with_capacity(cap),\n+            buf: Vec::with_capacity(capacity),\n             panicked: false,\n         }\n     }\n@@ -851,9 +851,9 @@ impl<W: Write> LineWriter<W> {\n     /// }\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn with_capacity(cap: usize, inner: W) -> LineWriter<W> {\n+    pub fn with_capacity(capacity: usize, inner: W) -> LineWriter<W> {\n         LineWriter {\n-            inner: BufWriter::with_capacity(cap, inner),\n+            inner: BufWriter::with_capacity(capacity, inner),\n             need_flush: false,\n         }\n     }"}, {"sha": "81e606fc16583bc8f11cc84a62363beaea8da887", "filename": "src/libstd/sys_common/wtf8.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fa66b8a1540fc09928630e5d77537d5443c72af4/src%2Flibstd%2Fsys_common%2Fwtf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa66b8a1540fc09928630e5d77537d5443c72af4/src%2Flibstd%2Fsys_common%2Fwtf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fwtf8.rs?ref=fa66b8a1540fc09928630e5d77537d5443c72af4", "patch": "@@ -146,10 +146,10 @@ impl Wtf8Buf {\n         Wtf8Buf { bytes: Vec::new() }\n     }\n \n-    /// Creates a new, empty WTF-8 string with pre-allocated capacity for `n` bytes.\n+    /// Creates a new, empty WTF-8 string with pre-allocated capacity for `capacity` bytes.\n     #[inline]\n-    pub fn with_capacity(n: usize) -> Wtf8Buf {\n-        Wtf8Buf { bytes: Vec::with_capacity(n) }\n+    pub fn with_capacity(capacity: usize) -> Wtf8Buf {\n+        Wtf8Buf { bytes: Vec::with_capacity(capacity) }\n     }\n \n     /// Creates a WTF-8 string from a UTF-8 `String`."}]}