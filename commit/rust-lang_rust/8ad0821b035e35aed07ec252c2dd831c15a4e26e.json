{"sha": "8ad0821b035e35aed07ec252c2dd831c15a4e26e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhZDA4MjFiMDM1ZTM1YWVkMDdlYzI1MmMyZGQ4MzFjMTVhNGUyNmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-23T23:44:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-23T23:44:49Z"}, "message": "Auto merge of #83729 - JohnTitor:issue-43913, r=estebank\n\nAdd a suggestion when using a type alias instead of trait alias\n\nFixes #43913\n\nr? `@estebank`", "tree": {"sha": "a5b32fe60523876762c5a1064c7db4e084c06e7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5b32fe60523876762c5a1064c7db4e084c06e7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ad0821b035e35aed07ec252c2dd831c15a4e26e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ad0821b035e35aed07ec252c2dd831c15a4e26e", "html_url": "https://github.com/rust-lang/rust/commit/8ad0821b035e35aed07ec252c2dd831c15a4e26e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ad0821b035e35aed07ec252c2dd831c15a4e26e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb491ed23937aef876622e4beb68ae95938b3bf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb491ed23937aef876622e4beb68ae95938b3bf9", "html_url": "https://github.com/rust-lang/rust/commit/bb491ed23937aef876622e4beb68ae95938b3bf9"}, {"sha": "eea27b81366a6a91a5b05153cd9ab6207d7f11bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/eea27b81366a6a91a5b05153cd9ab6207d7f11bc", "html_url": "https://github.com/rust-lang/rust/commit/eea27b81366a6a91a5b05153cd9ab6207d7f11bc"}], "stats": {"total": 104, "additions": 81, "deletions": 23}, "files": [{"sha": "d6fa51e618c4c121b502aeaeaf919fad8aff8f8d", "filename": "compiler/rustc_error_codes/src/error_codes/E0404.md", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8ad0821b035e35aed07ec252c2dd831c15a4e26e/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0404.md", "raw_url": "https://github.com/rust-lang/rust/raw/8ad0821b035e35aed07ec252c2dd831c15a4e26e/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0404.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0404.md?ref=8ad0821b035e35aed07ec252c2dd831c15a4e26e", "patch": "@@ -8,14 +8,15 @@ struct Foo;\n struct Bar;\n \n impl Foo for Bar {} // error: `Foo` is not a trait\n+fn baz<T: Foo>(t: T) {} // error: `Foo` is not a trait\n ```\n \n Another erroneous code example:\n \n ```compile_fail,E0404\n-struct Foo;\n+type Foo = Iterator<Item=String>;\n \n-fn bar<T: Foo>(t: T) {} // error: `Foo` is not a trait\n+fn bar<T: Foo>(t: T) {} // error: `Foo` is a type alias\n ```\n \n Please verify that the trait's name was not misspelled or that the right\n@@ -30,14 +31,27 @@ struct Bar;\n impl Foo for Bar { // ok!\n     // functions implementation\n }\n+\n+fn baz<T: Foo>(t: T) {} // ok!\n ```\n \n-or:\n+Alternatively, you could introduce a new trait with your desired restrictions\n+as a super trait:\n \n ```\n-trait Foo {\n-    // some functions\n-}\n+# trait Foo {}\n+# struct Bar;\n+# impl Foo for Bar {}\n+trait Qux: Foo {} // Anything that implements Qux also needs to implement Foo\n+fn baz<T: Qux>(t: T) {} // also ok!\n+```\n+\n+Finally, if you are on nightly and want to use a trait alias\n+instead of a type alias, you should use `#![feature(trait_alias)]`:\n+\n+```\n+#![feature(trait_alias)]\n+trait Foo = Iterator<Item=String>;\n \n fn bar<T: Foo>(t: T) {} // ok!\n ```"}, {"sha": "e33c374f562e2452d6d68625d3b93810f1bfbd18", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8ad0821b035e35aed07ec252c2dd831c15a4e26e/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ad0821b035e35aed07ec252c2dd831c15a4e26e/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=8ad0821b035e35aed07ec252c2dd831c15a4e26e", "patch": "@@ -930,7 +930,14 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                     let msg = \"you might have meant to use `#![feature(trait_alias)]` instead of a \\\n                                `type` alias\";\n                     if let Some(span) = self.def_span(def_id) {\n-                        err.span_help(span, msg);\n+                        if let Ok(snip) = self.r.session.source_map().span_to_snippet(span) {\n+                            // The span contains a type alias so we should be able to\n+                            // replace `type` with `trait`.\n+                            let snip = snip.replacen(\"type\", \"trait\", 1);\n+                            err.span_suggestion(span, msg, snip, Applicability::MaybeIncorrect);\n+                        } else {\n+                            err.span_help(span, msg);\n+                        }\n                     } else {\n                         err.help(msg);\n                     }"}, {"sha": "aff51ee9e2f541514975efbd1175be5e2b24b67a", "filename": "src/test/ui/codemap_tests/two_files.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8ad0821b035e35aed07ec252c2dd831c15a4e26e/src%2Ftest%2Fui%2Fcodemap_tests%2Ftwo_files.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8ad0821b035e35aed07ec252c2dd831c15a4e26e/src%2Ftest%2Fui%2Fcodemap_tests%2Ftwo_files.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftwo_files.stderr?ref=8ad0821b035e35aed07ec252c2dd831c15a4e26e", "patch": "@@ -5,10 +5,9 @@ LL | impl Bar for Baz { }\n    |      ^^^ type aliases cannot be used as traits\n    |\n help: you might have meant to use `#![feature(trait_alias)]` instead of a `type` alias\n-  --> $DIR/two_files_data.rs:5:1\n    |\n-LL | type Bar = dyn Foo;\n-   | ^^^^^^^^^^^^^^^^^^^\n+LL | trait Bar = dyn Foo;\n+   |\n \n error: aborting due to previous error\n "}, {"sha": "6fc61cae84339961affc8a8340dfebb45fb7af02", "filename": "src/test/ui/resolve/issue-3907.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8ad0821b035e35aed07ec252c2dd831c15a4e26e/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8ad0821b035e35aed07ec252c2dd831c15a4e26e/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr?ref=8ad0821b035e35aed07ec252c2dd831c15a4e26e", "patch": "@@ -5,10 +5,9 @@ LL | impl Foo for S {\n    |      ^^^ type aliases cannot be used as traits\n    |\n help: you might have meant to use `#![feature(trait_alias)]` instead of a `type` alias\n-  --> $DIR/issue-3907.rs:5:1\n    |\n-LL | type Foo = dyn issue_3907::Foo;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | trait Foo = dyn issue_3907::Foo;\n+   |\n help: consider importing this trait instead\n    |\n LL | use issue_3907::Foo;"}, {"sha": "a8aa50b7c3ab2247e8d64fa1e72dbeb921e95b26", "filename": "src/test/ui/resolve/issue-5035.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8ad0821b035e35aed07ec252c2dd831c15a4e26e/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8ad0821b035e35aed07ec252c2dd831c15a4e26e/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr?ref=8ad0821b035e35aed07ec252c2dd831c15a4e26e", "patch": "@@ -11,16 +11,16 @@ LL | trait I {}\n    | ------- similarly named trait `I` defined here\n LL | type K = dyn I;\n LL | impl K for isize {}\n-   |      ^\n-   |      |\n-   |      type aliases cannot be used as traits\n-   |      help: a trait with a similar name exists: `I`\n+   |      ^ type aliases cannot be used as traits\n    |\n help: you might have meant to use `#![feature(trait_alias)]` instead of a `type` alias\n-  --> $DIR/issue-5035.rs:2:1\n    |\n-LL | type K = dyn I;\n-   | ^^^^^^^^^^^^^^^\n+LL | trait K = dyn I;\n+   |\n+help: a trait with a similar name exists\n+   |\n+LL | impl I for isize {}\n+   |      ^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "8addc0303fb915aab5b859e12a47b7b93094ca02", "filename": "src/test/ui/resolve/unboxed-closure-sugar-nonexistent-trait.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8ad0821b035e35aed07ec252c2dd831c15a4e26e/src%2Ftest%2Fui%2Fresolve%2Funboxed-closure-sugar-nonexistent-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8ad0821b035e35aed07ec252c2dd831c15a4e26e/src%2Ftest%2Fui%2Fresolve%2Funboxed-closure-sugar-nonexistent-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Funboxed-closure-sugar-nonexistent-trait.stderr?ref=8ad0821b035e35aed07ec252c2dd831c15a4e26e", "patch": "@@ -11,10 +11,9 @@ LL | fn g<F:Typedef(isize) -> isize>(x: F) {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^ type aliases cannot be used as traits\n    |\n help: you might have meant to use `#![feature(trait_alias)]` instead of a `type` alias\n-  --> $DIR/unboxed-closure-sugar-nonexistent-trait.rs:4:1\n    |\n-LL | type Typedef = isize;\n-   | ^^^^^^^^^^^^^^^^^^^^^\n+LL | trait Typedef = isize;\n+   |\n \n error: aborting due to 2 previous errors\n "}, {"sha": "8a94abaeb07441243a24539757cabac3ea9806dd", "filename": "src/test/ui/traits/alias/suggest-trait-alias-instead-of-type.fixed", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8ad0821b035e35aed07ec252c2dd831c15a4e26e/src%2Ftest%2Fui%2Ftraits%2Falias%2Fsuggest-trait-alias-instead-of-type.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/8ad0821b035e35aed07ec252c2dd831c15a4e26e/src%2Ftest%2Fui%2Ftraits%2Falias%2Fsuggest-trait-alias-instead-of-type.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Falias%2Fsuggest-trait-alias-instead-of-type.fixed?ref=8ad0821b035e35aed07ec252c2dd831c15a4e26e", "patch": "@@ -0,0 +1,13 @@\n+// Regression test of #43913.\n+\n+// run-rustfix\n+\n+#![feature(trait_alias)]\n+#![allow(bare_trait_objects, dead_code)]\n+\n+trait Strings = Iterator<Item=String>;\n+\n+struct Struct<S: Strings>(S);\n+//~^ ERROR: expected trait, found type alias `Strings`\n+\n+fn main() {}"}, {"sha": "40c678c281f4c65e4da28abb96f9b917becbde78", "filename": "src/test/ui/traits/alias/suggest-trait-alias-instead-of-type.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8ad0821b035e35aed07ec252c2dd831c15a4e26e/src%2Ftest%2Fui%2Ftraits%2Falias%2Fsuggest-trait-alias-instead-of-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ad0821b035e35aed07ec252c2dd831c15a4e26e/src%2Ftest%2Fui%2Ftraits%2Falias%2Fsuggest-trait-alias-instead-of-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Falias%2Fsuggest-trait-alias-instead-of-type.rs?ref=8ad0821b035e35aed07ec252c2dd831c15a4e26e", "patch": "@@ -0,0 +1,13 @@\n+// Regression test of #43913.\n+\n+// run-rustfix\n+\n+#![feature(trait_alias)]\n+#![allow(bare_trait_objects, dead_code)]\n+\n+type Strings = Iterator<Item=String>;\n+\n+struct Struct<S: Strings>(S);\n+//~^ ERROR: expected trait, found type alias `Strings`\n+\n+fn main() {}"}, {"sha": "6e03eeada499c46d864f9597bafb9d8581c5d042", "filename": "src/test/ui/traits/alias/suggest-trait-alias-instead-of-type.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8ad0821b035e35aed07ec252c2dd831c15a4e26e/src%2Ftest%2Fui%2Ftraits%2Falias%2Fsuggest-trait-alias-instead-of-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8ad0821b035e35aed07ec252c2dd831c15a4e26e/src%2Ftest%2Fui%2Ftraits%2Falias%2Fsuggest-trait-alias-instead-of-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Falias%2Fsuggest-trait-alias-instead-of-type.stderr?ref=8ad0821b035e35aed07ec252c2dd831c15a4e26e", "patch": "@@ -0,0 +1,14 @@\n+error[E0404]: expected trait, found type alias `Strings`\n+  --> $DIR/suggest-trait-alias-instead-of-type.rs:10:18\n+   |\n+LL | struct Struct<S: Strings>(S);\n+   |                  ^^^^^^^ type aliases cannot be used as traits\n+   |\n+help: you might have meant to use `#![feature(trait_alias)]` instead of a `type` alias\n+   |\n+LL | trait Strings = Iterator<Item=String>;\n+   |\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0404`."}]}