{"sha": "02aaa1180eca1c1a5979eb5b106ed1befba8a42e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyYWFhMTE4MGVjYTFjMWE1OTc5ZWI1YjEwNmVkMWJlZmJhOGE0MmU=", "commit": {"author": {"name": "Martin Hoffmann", "email": "hn@nvnc.de", "date": "2017-08-16T15:02:39Z"}, "committer": {"name": "Martin Hoffmann", "email": "hn@nvnc.de", "date": "2017-08-16T15:02:39Z"}, "message": "Document that std::hash::Hasher::finish() does not reset the hasher.", "tree": {"sha": "f2c7a958b3861c807ddd4744ee9d21142982436f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2c7a958b3861c807ddd4744ee9d21142982436f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02aaa1180eca1c1a5979eb5b106ed1befba8a42e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02aaa1180eca1c1a5979eb5b106ed1befba8a42e", "html_url": "https://github.com/rust-lang/rust/commit/02aaa1180eca1c1a5979eb5b106ed1befba8a42e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02aaa1180eca1c1a5979eb5b106ed1befba8a42e/comments", "author": {"login": "partim", "id": 1318494, "node_id": "MDQ6VXNlcjEzMTg0OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1318494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/partim", "html_url": "https://github.com/partim", "followers_url": "https://api.github.com/users/partim/followers", "following_url": "https://api.github.com/users/partim/following{/other_user}", "gists_url": "https://api.github.com/users/partim/gists{/gist_id}", "starred_url": "https://api.github.com/users/partim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/partim/subscriptions", "organizations_url": "https://api.github.com/users/partim/orgs", "repos_url": "https://api.github.com/users/partim/repos", "events_url": "https://api.github.com/users/partim/events{/privacy}", "received_events_url": "https://api.github.com/users/partim/received_events", "type": "User", "site_admin": false}, "committer": {"login": "partim", "id": 1318494, "node_id": "MDQ6VXNlcjEzMTg0OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1318494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/partim", "html_url": "https://github.com/partim", "followers_url": "https://api.github.com/users/partim/followers", "following_url": "https://api.github.com/users/partim/following{/other_user}", "gists_url": "https://api.github.com/users/partim/gists{/gist_id}", "starred_url": "https://api.github.com/users/partim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/partim/subscriptions", "organizations_url": "https://api.github.com/users/partim/orgs", "repos_url": "https://api.github.com/users/partim/repos", "events_url": "https://api.github.com/users/partim/events{/privacy}", "received_events_url": "https://api.github.com/users/partim/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85eadf84f3945dc431643ea43d34f15193fdafb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/85eadf84f3945dc431643ea43d34f15193fdafb4", "html_url": "https://github.com/rust-lang/rust/commit/85eadf84f3945dc431643ea43d34f15193fdafb4"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "a8b84203d6a6c61402d1ef4a26a586a4fd7df0c9", "filename": "src/libcore/hash/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/02aaa1180eca1c1a5979eb5b106ed1befba8a42e/src%2Flibcore%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02aaa1180eca1c1a5979eb5b106ed1befba8a42e/src%2Flibcore%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash%2Fmod.rs?ref=02aaa1180eca1c1a5979eb5b106ed1befba8a42e", "patch": "@@ -240,7 +240,12 @@ pub trait Hash {\n /// [`write_u8`]: #method.write_u8\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Hasher {\n-    /// Completes a round of hashing, producing the output hash generated.\n+    /// Returns the hash value for the values written so far.\n+    ///\n+    /// Despite its name, the method does not reset the hasher\u2019s internal\n+    /// state. Additional [`write`]s will continue from the current value.\n+    /// If you need to start a fresh hash value, you will have to create\n+    /// a new hasher.\n     ///\n     /// # Examples\n     ///\n@@ -253,6 +258,8 @@ pub trait Hasher {\n     ///\n     /// println!(\"Hash is {:x}!\", hasher.finish());\n     /// ```\n+    ///\n+    /// ['write']: #tymethod.write\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn finish(&self) -> u64;\n "}]}