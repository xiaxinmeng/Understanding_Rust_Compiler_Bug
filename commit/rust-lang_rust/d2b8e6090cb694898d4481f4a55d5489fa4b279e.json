{"sha": "d2b8e6090cb694898d4481f4a55d5489fa4b279e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyYjhlNjA5MGNiNjk0ODk4ZDQ0ODFmNGE1NWQ1NDg5ZmE0YjI3OWU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-06-12T22:13:43Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-06-16T02:46:27Z"}, "message": "Account for derived obligations to suggest `?Sized` bound\n\nFix #27964.", "tree": {"sha": "7e8d032c1f0cb91f1501802a41d31f99e8dd42f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e8d032c1f0cb91f1501802a41d31f99e8dd42f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2b8e6090cb694898d4481f4a55d5489fa4b279e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2b8e6090cb694898d4481f4a55d5489fa4b279e", "html_url": "https://github.com/rust-lang/rust/commit/d2b8e6090cb694898d4481f4a55d5489fa4b279e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2b8e6090cb694898d4481f4a55d5489fa4b279e/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95e56051088e5c03cd5c5146739bd6b783d61445", "url": "https://api.github.com/repos/rust-lang/rust/commits/95e56051088e5c03cd5c5146739bd6b783d61445", "html_url": "https://github.com/rust-lang/rust/commit/95e56051088e5c03cd5c5146739bd6b783d61445"}], "stats": {"total": 52, "additions": 44, "deletions": 8}, "files": [{"sha": "a99c14f763f3f052eb98ee2bf5757e4198693ebb", "filename": "src/librustc_trait_selection/traits/error_reporting/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d2b8e6090cb694898d4481f4a55d5489fa4b279e/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2b8e6090cb694898d4481f4a55d5489fa4b279e/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=d2b8e6090cb694898d4481f4a55d5489fa4b279e", "patch": "@@ -1696,14 +1696,14 @@ impl<'a, 'tcx> InferCtxtPrivExt<'tcx> for InferCtxt<'a, 'tcx> {\n         err: &mut DiagnosticBuilder<'tcx>,\n         obligation: &PredicateObligation<'tcx>,\n     ) {\n-        let (pred, item_def_id, span) = match (obligation.predicate.kind(), &obligation.cause.code)\n-        {\n-            (\n-                ty::PredicateKind::Trait(pred, _),\n-                ObligationCauseCode::BindingObligation(item_def_id, span),\n-            ) => (pred, item_def_id, span),\n-            _ => return,\n-        };\n+        let (pred, item_def_id, span) =\n+            match (obligation.predicate.kind(), &obligation.cause.code.peel_derives()) {\n+                (\n+                    ty::PredicateKind::Trait(pred, _),\n+                    ObligationCauseCode::BindingObligation(item_def_id, span),\n+                ) => (pred, item_def_id, span),\n+                _ => return,\n+            };\n \n         let node = match (\n             self.tcx.hir().get_if_local(*item_def_id),"}, {"sha": "006a334021b1419428d1f9813cfd2f85318e382d", "filename": "src/test/ui/dst/dst-sized-trait-param.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2b8e6090cb694898d4481f4a55d5489fa4b279e/src%2Ftest%2Fui%2Fdst%2Fdst-sized-trait-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d2b8e6090cb694898d4481f4a55d5489fa4b279e/src%2Ftest%2Fui%2Fdst%2Fdst-sized-trait-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdst%2Fdst-sized-trait-param.stderr?ref=d2b8e6090cb694898d4481f4a55d5489fa4b279e", "patch": "@@ -9,6 +9,10 @@ LL | impl Foo<[isize]> for usize { }\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `[isize]`\n    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n+help: consider relaxing the implicit `Sized` restriction\n+   |\n+LL | trait Foo<T: ?Sized> : Sized { fn take(self, x: &T) { } } // Note: T is sized\n+   |            ^^^^^^^^\n \n error[E0277]: the size for values of type `[usize]` cannot be known at compilation time\n   --> $DIR/dst-sized-trait-param.rs:10:6"}, {"sha": "0c7995fde3273f838194afc92f360afe2fa229f0", "filename": "src/test/ui/extern/extern-types-unsized.stderr", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d2b8e6090cb694898d4481f4a55d5489fa4b279e/src%2Ftest%2Fui%2Fextern%2Fextern-types-unsized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d2b8e6090cb694898d4481f4a55d5489fa4b279e/src%2Ftest%2Fui%2Fextern%2Fextern-types-unsized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-types-unsized.stderr?ref=d2b8e6090cb694898d4481f4a55d5489fa4b279e", "patch": "@@ -26,6 +26,10 @@ LL |     assert_sized::<Foo>();\n    = help: within `Foo`, the trait `std::marker::Sized` is not implemented for `A`\n    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n    = note: required because it appears within the type `Foo`\n+help: consider relaxing the implicit `Sized` restriction\n+   |\n+LL | fn assert_sized<T: ?Sized>() { }\n+   |                  ^^^^^^^^\n \n error[E0277]: the size for values of type `A` cannot be known at compilation time\n   --> $DIR/extern-types-unsized.rs:28:5\n@@ -39,6 +43,10 @@ LL |     assert_sized::<Bar<A>>();\n    = help: within `Bar<A>`, the trait `std::marker::Sized` is not implemented for `A`\n    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n    = note: required because it appears within the type `Bar<A>`\n+help: consider relaxing the implicit `Sized` restriction\n+   |\n+LL | fn assert_sized<T: ?Sized>() { }\n+   |                  ^^^^^^^^\n \n error[E0277]: the size for values of type `A` cannot be known at compilation time\n   --> $DIR/extern-types-unsized.rs:31:5\n@@ -53,6 +61,10 @@ LL |     assert_sized::<Bar<Bar<A>>>();\n    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n    = note: required because it appears within the type `Bar<A>`\n    = note: required because it appears within the type `Bar<Bar<A>>`\n+help: consider relaxing the implicit `Sized` restriction\n+   |\n+LL | fn assert_sized<T: ?Sized>() { }\n+   |                  ^^^^^^^^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "d7a4bf4f21f18dc946084e62b64fa2ce0796d2f8", "filename": "src/test/ui/issues/issue-10412.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2b8e6090cb694898d4481f4a55d5489fa4b279e/src%2Ftest%2Fui%2Fissues%2Fissue-10412.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d2b8e6090cb694898d4481f4a55d5489fa4b279e/src%2Ftest%2Fui%2Fissues%2Fissue-10412.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10412.stderr?ref=d2b8e6090cb694898d4481f4a55d5489fa4b279e", "patch": "@@ -57,6 +57,10 @@ LL | impl<'self> Serializable<str> for &'self str {\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `str`\n    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n+help: consider relaxing the implicit `Sized` restriction\n+   |\n+LL | trait Serializable<'self, T: ?Sized> {\n+   |                            ^^^^^^^^\n \n error: aborting due to 9 previous errors\n "}, {"sha": "e423a9bdeab6f9f1c00b86f6a5ca516fdb3c9df9", "filename": "src/test/ui/unsized/unsized-trait-impl-trait-arg.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2b8e6090cb694898d4481f4a55d5489fa4b279e/src%2Ftest%2Fui%2Funsized%2Funsized-trait-impl-trait-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d2b8e6090cb694898d4481f4a55d5489fa4b279e/src%2Ftest%2Fui%2Funsized%2Funsized-trait-impl-trait-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized%2Funsized-trait-impl-trait-arg.stderr?ref=d2b8e6090cb694898d4481f4a55d5489fa4b279e", "patch": "@@ -11,6 +11,10 @@ LL | impl<X: ?Sized> T2<X> for S4<X> {\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `X`\n    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n+help: consider relaxing the implicit `Sized` restriction\n+   |\n+LL | trait T2<Z: ?Sized> {\n+   |           ^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "e0a0389dc46908247f7093f74dd12a77d554e496", "filename": "src/test/ui/unsized3.stderr", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d2b8e6090cb694898d4481f4a55d5489fa4b279e/src%2Ftest%2Fui%2Funsized3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d2b8e6090cb694898d4481f4a55d5489fa4b279e/src%2Ftest%2Fui%2Funsized3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized3.stderr?ref=d2b8e6090cb694898d4481f4a55d5489fa4b279e", "patch": "@@ -48,6 +48,10 @@ LL |     f5(x1);\n    = help: within `S<X>`, the trait `std::marker::Sized` is not implemented for `X`\n    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n    = note: required because it appears within the type `S<X>`\n+help: consider relaxing the implicit `Sized` restriction\n+   |\n+LL | fn f5<Y: ?Sized>(x: &Y) {}\n+   |        ^^^^^^^^\n \n error[E0277]: the size for values of type `X` cannot be known at compilation time\n   --> $DIR/unsized3.rs:40:8\n@@ -91,6 +95,10 @@ LL |     f5(&(32, *x1));\n    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n    = note: required because it appears within the type `S<X>`\n    = note: required because it appears within the type `({integer}, S<X>)`\n+help: consider relaxing the implicit `Sized` restriction\n+   |\n+LL | fn f5<Y: ?Sized>(x: &Y) {}\n+   |        ^^^^^^^^\n \n error: aborting due to 6 previous errors\n "}, {"sha": "e616a5cf0f9c216a7a473b472f883df748f27de8", "filename": "src/test/ui/unsized7.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2b8e6090cb694898d4481f4a55d5489fa4b279e/src%2Ftest%2Fui%2Funsized7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d2b8e6090cb694898d4481f4a55d5489fa4b279e/src%2Ftest%2Fui%2Funsized7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized7.stderr?ref=d2b8e6090cb694898d4481f4a55d5489fa4b279e", "patch": "@@ -11,6 +11,10 @@ LL | impl<X: ?Sized + T> T1<X> for S3<X> {\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `X`\n    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n+help: consider relaxing the implicit `Sized` restriction\n+   |\n+LL | trait T1<Z: T + ?Sized> {\n+   |               ^^^^^^^^\n \n error: aborting due to previous error\n "}]}