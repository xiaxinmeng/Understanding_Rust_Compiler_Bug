{"sha": "f0b30c7ded69123cffe26b54fb1feedf45d1c5a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwYjMwYzdkZWQ2OTEyM2NmZmUyNmI1NGZiMWZlZWRmNDVkMWM1YTg=", "commit": {"author": {"name": "Andreas Jonson", "email": "andjo403@users.noreply.github.com", "date": "2019-09-01T06:49:26Z"}, "committer": {"name": "Andreas Jonson", "email": "andjo403@users.noreply.github.com", "date": "2019-09-01T06:50:23Z"}, "message": "remove the unstable rustdoc parameter --linker\n\nuse the code generation parameter -Clinker (same parameter as rustc)\nto control what linker to use for building the rustdoc test executables.\n\ncloses: #63816", "tree": {"sha": "12867b40dfd5b5a0a0af1e816859f2be9167fde4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12867b40dfd5b5a0a0af1e816859f2be9167fde4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8", "html_url": "https://github.com/rust-lang/rust/commit/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/comments", "author": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59cc53e6e708e9b9e86822c1b4d69f28f6c45eae", "url": "https://api.github.com/repos/rust-lang/rust/commits/59cc53e6e708e9b9e86822c1b4d69f28f6c45eae", "html_url": "https://github.com/rust-lang/rust/commit/59cc53e6e708e9b9e86822c1b4d69f28f6c45eae"}], "stats": {"total": 37, "additions": 6, "deletions": 31}, "files": [{"sha": "a13ff69a7b56f79f91a490541f3808cff974c004", "filename": "src/bootstrap/bin/rustdoc.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustdoc.rs?ref=f0b30c7ded69123cffe26b54fb1feedf45d1c5a8", "patch": "@@ -5,6 +5,7 @@\n use std::env;\n use std::process::Command;\n use std::path::PathBuf;\n+use std::ffi::OsString;\n \n fn main() {\n     let args = env::args_os().skip(1).collect::<Vec<_>>();\n@@ -44,7 +45,9 @@ fn main() {\n         cmd.arg(\"-Z\").arg(\"force-unstable-if-unmarked\");\n     }\n     if let Some(linker) = env::var_os(\"RUSTC_TARGET_LINKER\") {\n-        cmd.arg(\"--linker\").arg(linker).arg(\"-Z\").arg(\"unstable-options\");\n+        let mut arg = OsString::from(\"-Clinker=\");\n+        arg.push(&linker);\n+        cmd.arg(arg);\n     }\n \n     // Bootstrap's Cargo-command builder sets this variable to the current Rust version; let's pick"}, {"sha": "993fc8412836e17c0cab32ad05460f50baa47932", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=f0b30c7ded69123cffe26b54fb1feedf45d1c5a8", "patch": "@@ -311,19 +311,6 @@ When `rustdoc` receives this flag, it will print an extra \"Version (version)\" in\n the crate root's docs. You can use this flag to differentiate between different versions of your\n library's documentation.\n \n-### `--linker`: control the linker used for documentation tests\n-\n-Using this flag looks like this:\n-\n-```bash\n-$ rustdoc --test src/lib.rs -Z unstable-options --linker foo\n-$ rustdoc --test README.md -Z unstable-options --linker foo\n-```\n-\n-When `rustdoc` runs your documentation tests, it needs to compile and link the tests as executables\n-before running them. This flag can be used to change the linker used on these executables. It's\n-equivalent to passing `-C linker=foo` to `rustc`.\n-\n ### `--sort-modules-by-appearance`: control how items on module pages are sorted\n \n Using this flag looks like this:"}, {"sha": "d261408fc148ac348b66f1371ce8b9d95d5d90ac", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=f0b30c7ded69123cffe26b54fb1feedf45d1c5a8", "patch": "@@ -60,8 +60,6 @@ pub struct Options {\n     pub edition: Edition,\n     /// The path to the sysroot. Used during the compilation process.\n     pub maybe_sysroot: Option<PathBuf>,\n-    /// Linker to use when building doctests.\n-    pub linker: Option<PathBuf>,\n     /// Lint information passed over the command-line.\n     pub lint_opts: Vec<(String, Level)>,\n     /// Whether to ask rustc to describe the lints it knows. Practically speaking, this will not be\n@@ -130,7 +128,6 @@ impl fmt::Debug for Options {\n             .field(\"target\", &self.target)\n             .field(\"edition\", &self.edition)\n             .field(\"maybe_sysroot\", &self.maybe_sysroot)\n-            .field(\"linker\", &self.linker)\n             .field(\"lint_opts\", &self.lint_opts)\n             .field(\"describe_lints\", &self.describe_lints)\n             .field(\"lint_cap\", &self.lint_cap)\n@@ -454,7 +451,6 @@ impl Options {\n         let playground_url = matches.opt_str(\"playground-url\");\n         let maybe_sysroot = matches.opt_str(\"sysroot\").map(PathBuf::from);\n         let display_warnings = matches.opt_present(\"display-warnings\");\n-        let linker = matches.opt_str(\"linker\").map(PathBuf::from);\n         let sort_modules_alphabetically = !matches.opt_present(\"sort-modules-by-appearance\");\n         let resource_suffix = matches.opt_str(\"resource-suffix\").unwrap_or_default();\n         let enable_minification = !matches.opt_present(\"disable-minification\");\n@@ -489,7 +485,6 @@ impl Options {\n             target,\n             edition,\n             maybe_sysroot,\n-            linker,\n             lint_opts,\n             describe_lints,\n             lint_cap,"}, {"sha": "dfa0db0d23b74378deb6193dc0b2784d679cb349", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=f0b30c7ded69123cffe26b54fb1feedf45d1c5a8", "patch": "@@ -242,9 +242,6 @@ fn opts() -> Vec<RustcOptGroup> {\n         unstable(\"crate-version\", |o| {\n             o.optopt(\"\", \"crate-version\", \"crate version to print into documentation\", \"VERSION\")\n         }),\n-        unstable(\"linker\", |o| {\n-            o.optopt(\"\", \"linker\", \"linker used for building executable test code\", \"PATH\")\n-        }),\n         unstable(\"sort-modules-by-appearance\", |o| {\n             o.optflag(\"\", \"sort-modules-by-appearance\", \"sort modules by where they appear in the \\\n                                                          program, rather than alphabetically\")"}, {"sha": "41df1ff8cd04ed48180c40e76d57837f3a1d7847", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=f0b30c7ded69123cffe26b54fb1feedf45d1c5a8", "patch": "@@ -266,9 +266,6 @@ fn run_test(\n     for codegen_options_str in &options.codegen_options_strs {\n         compiler.arg(\"-C\").arg(&codegen_options_str);\n     }\n-    if let Some(linker) = options.linker {\n-        compiler.arg(&format!(\"-C linker={:?}\", linker));\n-    }\n     if no_run {\n         compiler.arg(\"--emit=metadata\");\n     }"}, {"sha": "9a113b7fa6370145e2ed15b14a7b35e1f33a3640", "filename": "src/test/run-make-fulldeps/tools.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk?ref=f0b30c7ded69123cffe26b54fb1feedf45d1c5a8", "patch": "@@ -12,7 +12,7 @@ RUSTC := $(BARE_RUSTC) --out-dir $(TMPDIR) -L $(TMPDIR) $(RUSTFLAGS)\n RUSTDOC := $(BARE_RUSTDOC) -L $(TARGET_RPATH_DIR)\n ifdef RUSTC_LINKER\n RUSTC := $(RUSTC) -Clinker=$(RUSTC_LINKER)\n-RUSTDOC := $(RUSTDOC) --linker $(RUSTC_LINKER) -Z unstable-options\n+RUSTDOC := $(RUSTDOC) -Clinker=$(RUSTC_LINKER)\n endif\n #CC := $(CC) -L $(TMPDIR)\n HTMLDOCCK := $(PYTHON) $(S)/src/etc/htmldocck.py"}, {"sha": "03c5177ee52027dfcaa2846ca508d46753ae4fa5", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b30c7ded69123cffe26b54fb1feedf45d1c5a8/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=f0b30c7ded69123cffe26b54fb1feedf45d1c5a8", "patch": "@@ -1603,11 +1603,7 @@ impl<'test> TestCx<'test> {\n             .args(&self.props.compile_flags);\n \n         if let Some(ref linker) = self.config.linker {\n-            rustdoc\n-                .arg(\"--linker\")\n-                .arg(linker)\n-                .arg(\"-Z\")\n-                .arg(\"unstable-options\");\n+            rustdoc.arg(format!(\"-Clinker={}\", linker));\n         }\n \n         self.compose_and_run_compiler(rustdoc, None)"}]}