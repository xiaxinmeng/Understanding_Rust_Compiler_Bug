{"sha": "e39bd35ae14ff228a002e36ead0f94194d8f7247", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzOWJkMzVhZTE0ZmYyMjhhMDAyZTM2ZWFkMGY5NDE5NGQ4ZjcyNDc=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-09-12T01:55:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-12T01:55:41Z"}, "message": "Merge pull request #3010 from topecongiro/issue-3009\n\nRefactor the corner case of handling long function", "tree": {"sha": "864272a05c901342446966d35de3e3ce12482f2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/864272a05c901342446966d35de3e3ce12482f2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e39bd35ae14ff228a002e36ead0f94194d8f7247", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbmHIdCRBK7hj4Ov3rIwAAdHIIAK9eA1qjSjrIa6Ba4CKGNN7k\nxl/rjucD1pm5aJjA1uehZtAFyPs89oFtHEi5YPN/B284cJtpO7qjD4vc1LmLr9g+\nRKeeMyb5Td9LYUo4/00gzNpBXLdocIfrNEis4LhWqYrjDjuW/w0RVPnnYarEp7Vw\nz2DqbYHddR6sH4Dmd74Ts8Flt9iNTvFutbnkK7OfX0DSsm/34xDq0Z/oiqWk0sGr\nBTeZgElFSru7wshWjaoO925SykoAJlk9jiXgTSHnX7KkYybZkI6gZiTeOQ4e6WLd\n7cdSW3tjhPy6fKrXdLf0OKmxLqA1Nx7ulozZ1mnM/EQTynDhmygflsPl+5WMpnY=\n=havL\n-----END PGP SIGNATURE-----\n", "payload": "tree 864272a05c901342446966d35de3e3ce12482f2c\nparent bba7dbf2d7cd19cfe8a17f94d458810a27f1a117\nparent d8357484ac07db3e9f4fe03bf09bea3b0f925f1e\nauthor Nick Cameron <nrc@ncameron.org> 1536717341 +1200\ncommitter GitHub <noreply@github.com> 1536717341 +1200\n\nMerge pull request #3010 from topecongiro/issue-3009\n\nRefactor the corner case of handling long function"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e39bd35ae14ff228a002e36ead0f94194d8f7247", "html_url": "https://github.com/rust-lang/rust/commit/e39bd35ae14ff228a002e36ead0f94194d8f7247", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e39bd35ae14ff228a002e36ead0f94194d8f7247/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bba7dbf2d7cd19cfe8a17f94d458810a27f1a117", "url": "https://api.github.com/repos/rust-lang/rust/commits/bba7dbf2d7cd19cfe8a17f94d458810a27f1a117", "html_url": "https://github.com/rust-lang/rust/commit/bba7dbf2d7cd19cfe8a17f94d458810a27f1a117"}, {"sha": "d8357484ac07db3e9f4fe03bf09bea3b0f925f1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8357484ac07db3e9f4fe03bf09bea3b0f925f1e", "html_url": "https://github.com/rust-lang/rust/commit/d8357484ac07db3e9f4fe03bf09bea3b0f925f1e"}], "stats": {"total": 41, "additions": 33, "deletions": 8}, "files": [{"sha": "44d8889d832bcd707cb400108d3174cd15729181", "filename": "src/items.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e39bd35ae14ff228a002e36ead0f94194d8f7247/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e39bd35ae14ff228a002e36ead0f94194d8f7247/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=e39bd35ae14ff228a002e36ead0f94194d8f7247", "patch": "@@ -2040,18 +2040,16 @@ fn rewrite_fn_base(\n         let used_width = last_line_used_width(&result, indent.width()) + first_line_width(&ret_str);\n         // Put the closing brace on the next line if it overflows the max width.\n         // 1 = `)`\n-        if fd.inputs.is_empty() && used_width + 1 > context.config.max_width() {\n-            result.push('\\n');\n-        }\n+        let closing_paren_overflow_max_width =\n+            fd.inputs.is_empty() && used_width + 1 > context.config.max_width();\n         // If the last line of args contains comment, we cannot put the closing paren\n         // on the same line.\n-        if arg_str\n+        args_last_line_contains_comment = arg_str\n             .lines()\n             .last()\n-            .map_or(false, |last_line| last_line.contains(\"//\"))\n-        {\n-            args_last_line_contains_comment = true;\n-            result.push_str(&arg_indent.to_string_with_newline(context.config));\n+            .map_or(false, |last_line| last_line.contains(\"//\"));\n+        if closing_paren_overflow_max_width || args_last_line_contains_comment {\n+            result.push_str(&indent.to_string_with_newline(context.config));\n         }\n         result.push(')');\n     }"}, {"sha": "1f53d78802d648b6772daeecb31bdd419e1ada65", "filename": "tests/source/long-fn-1.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e39bd35ae14ff228a002e36ead0f94194d8f7247/tests%2Fsource%2Flong-fn-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e39bd35ae14ff228a002e36ead0f94194d8f7247/tests%2Fsource%2Flong-fn-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Flong-fn-1.rs?ref=e39bd35ae14ff228a002e36ead0f94194d8f7247", "patch": "@@ -0,0 +1,20 @@\n+// Tests that a function which is almost short enough, but not quite, gets\n+// formatted correctly.\n+\n+impl Foo {\n+    fn some_input(&mut self, input: Input, input_path: Option<PathBuf>, ) -> (Input, Option<PathBuf>) {}\n+\n+    fn some_inpu(&mut self, input: Input, input_path: Option<PathBuf>) -> (Input, Option<PathBuf>) {}\n+}\n+\n+// #1843\n+#[allow(non_snake_case)]\n+pub extern \"C\" fn Java_com_exonum_binding_storage_indices_ValueSetIndexProxy_nativeContainsByHash() -> bool {\n+    false\n+}\n+\n+// #3009\n+impl Something {\n+    fn my_function_name_is_way_to_long_but_used_as_a_case_study_or_an_example_its_fine(\n+) -> Result<  (), String  > {}\n+}"}, {"sha": "5fd605dd3155491c66ac1f7b8f597320fbc653ef", "filename": "tests/target/long-fn-1.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e39bd35ae14ff228a002e36ead0f94194d8f7247/tests%2Ftarget%2Flong-fn-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e39bd35ae14ff228a002e36ead0f94194d8f7247/tests%2Ftarget%2Flong-fn-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Flong-fn-1.rs?ref=e39bd35ae14ff228a002e36ead0f94194d8f7247", "patch": "@@ -19,3 +19,10 @@ pub extern \"C\" fn Java_com_exonum_binding_storage_indices_ValueSetIndexProxy_nat\n ) -> bool {\n     false\n }\n+\n+// #3009\n+impl Something {\n+    fn my_function_name_is_way_to_long_but_used_as_a_case_study_or_an_example_its_fine(\n+    ) -> Result<(), String> {\n+    }\n+}"}]}