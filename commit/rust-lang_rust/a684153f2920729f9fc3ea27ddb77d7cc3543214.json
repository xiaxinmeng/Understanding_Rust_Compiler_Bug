{"sha": "a684153f2920729f9fc3ea27ddb77d7cc3543214", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ODQxNTNmMjkyMDcyOWY5ZmMzZWEyN2RkYjc3ZDdjYzM1NDMyMTQ=", "commit": {"author": {"name": "Tavian Barnes", "email": "tavianator@tavianator.com", "date": "2020-09-09T15:10:43Z"}, "committer": {"name": "Tavian Barnes", "email": "tavianator@tavianator.com", "date": "2020-09-09T15:10:43Z"}, "message": "Only call pthread_attr_destroy() after getattr_np() succeeds on all libcs\n\nThe calling convention of pthread_getattr_np() is to initialize the\npthread_attr_t, so _destroy() is only necessary on success (and _init()\nisn't necessary beforehand).  On the other hand, FreeBSD wants the\nattr_t to be initialized before pthread_attr_get_np(), and therefore it\nshould always be destroyed afterwards.", "tree": {"sha": "68ab222c3d8799a75c2b023eb755eb130a8c29a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68ab222c3d8799a75c2b023eb755eb130a8c29a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a684153f2920729f9fc3ea27ddb77d7cc3543214", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a684153f2920729f9fc3ea27ddb77d7cc3543214", "html_url": "https://github.com/rust-lang/rust/commit/a684153f2920729f9fc3ea27ddb77d7cc3543214", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a684153f2920729f9fc3ea27ddb77d7cc3543214/comments", "author": {"login": "tavianator", "id": 1692591, "node_id": "MDQ6VXNlcjE2OTI1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1692591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tavianator", "html_url": "https://github.com/tavianator", "followers_url": "https://api.github.com/users/tavianator/followers", "following_url": "https://api.github.com/users/tavianator/following{/other_user}", "gists_url": "https://api.github.com/users/tavianator/gists{/gist_id}", "starred_url": "https://api.github.com/users/tavianator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tavianator/subscriptions", "organizations_url": "https://api.github.com/users/tavianator/orgs", "repos_url": "https://api.github.com/users/tavianator/repos", "events_url": "https://api.github.com/users/tavianator/events{/privacy}", "received_events_url": "https://api.github.com/users/tavianator/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tavianator", "id": 1692591, "node_id": "MDQ6VXNlcjE2OTI1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1692591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tavianator", "html_url": "https://github.com/tavianator", "followers_url": "https://api.github.com/users/tavianator/followers", "following_url": "https://api.github.com/users/tavianator/following{/other_user}", "gists_url": "https://api.github.com/users/tavianator/gists{/gist_id}", "starred_url": "https://api.github.com/users/tavianator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tavianator/subscriptions", "organizations_url": "https://api.github.com/users/tavianator/orgs", "repos_url": "https://api.github.com/users/tavianator/repos", "events_url": "https://api.github.com/users/tavianator/events{/privacy}", "received_events_url": "https://api.github.com/users/tavianator/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a06edda3ad9abd4f07d07bbe46cb488efeebbbd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a06edda3ad9abd4f07d07bbe46cb488efeebbbd0", "html_url": "https://github.com/rust-lang/rust/commit/a06edda3ad9abd4f07d07bbe46cb488efeebbbd0"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "652219e28f6e03a382a422ac0da567ddc51ac543", "filename": "library/std/src/sys/unix/thread.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a684153f2920729f9fc3ea27ddb77d7cc3543214/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a684153f2920729f9fc3ea27ddb77d7cc3543214/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs?ref=a684153f2920729f9fc3ea27ddb77d7cc3543214", "patch": "@@ -294,6 +294,7 @@ pub mod guard {\n     unsafe fn get_stack_start() -> Option<*mut libc::c_void> {\n         let mut ret = None;\n         let mut attr: libc::pthread_attr_t = crate::mem::zeroed();\n+        #[cfg(target_os = \"freebsd\")]\n         assert_eq!(libc::pthread_attr_init(&mut attr), 0);\n         #[cfg(target_os = \"freebsd\")]\n         let e = libc::pthread_attr_get_np(libc::pthread_self(), &mut attr);\n@@ -305,7 +306,7 @@ pub mod guard {\n             assert_eq!(libc::pthread_attr_getstack(&attr, &mut stackaddr, &mut stacksize), 0);\n             ret = Some(stackaddr);\n         }\n-        if e == 0 || cfg!(not(target_env = \"gnu\")) {\n+        if e == 0 || cfg!(target_os = \"freebsd\") {\n             assert_eq!(libc::pthread_attr_destroy(&mut attr), 0);\n         }\n         ret\n@@ -405,6 +406,7 @@ pub mod guard {\n     pub unsafe fn current() -> Option<Guard> {\n         let mut ret = None;\n         let mut attr: libc::pthread_attr_t = crate::mem::zeroed();\n+        #[cfg(target_os = \"freebsd\")]\n         assert_eq!(libc::pthread_attr_init(&mut attr), 0);\n         #[cfg(target_os = \"freebsd\")]\n         let e = libc::pthread_attr_get_np(libc::pthread_self(), &mut attr);\n@@ -448,7 +450,7 @@ pub mod guard {\n                 Some(stackaddr..stackaddr + guardsize)\n             };\n         }\n-        if e == 0 || cfg!(not(target_env = \"gnu\")) {\n+        if e == 0 || cfg!(target_os = \"freebsd\") {\n             assert_eq!(libc::pthread_attr_destroy(&mut attr), 0);\n         }\n         ret"}]}