{"sha": "b744e3d7f516f1c679a4f6315110e856b9731de4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NDRlM2Q3ZjUxNmYxYzY3OWE0ZjYzMTUxMTBlODU2Yjk3MzFkZTQ=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2018-04-12T20:07:53Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2018-04-13T16:30:57Z"}, "message": "[doc] note the special type inference handling for shifts", "tree": {"sha": "0731c10a625c184166342d21212bb577e7a1c25f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0731c10a625c184166342d21212bb577e7a1c25f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b744e3d7f516f1c679a4f6315110e856b9731de4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b744e3d7f516f1c679a4f6315110e856b9731de4", "html_url": "https://github.com/rust-lang/rust/commit/b744e3d7f516f1c679a4f6315110e856b9731de4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b744e3d7f516f1c679a4f6315110e856b9731de4/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c537493d01694cc6e0a614dff12c475055aa2b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c537493d01694cc6e0a614dff12c475055aa2b4", "html_url": "https://github.com/rust-lang/rust/commit/6c537493d01694cc6e0a614dff12c475055aa2b4"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "ec1e65be774fa707031cf211011c44c2844b2506", "filename": "src/libcore/ops/bit.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b744e3d7f516f1c679a4f6315110e856b9731de4/src%2Flibcore%2Fops%2Fbit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b744e3d7f516f1c679a4f6315110e856b9731de4/src%2Flibcore%2Fops%2Fbit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Fbit.rs?ref=b744e3d7f516f1c679a4f6315110e856b9731de4", "patch": "@@ -315,7 +315,12 @@ macro_rules! bitxor_impl {\n \n bitxor_impl! { bool usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 }\n \n-/// The left shift operator `<<`.\n+/// The left shift operator `<<`. Note that because this trait is implemented\n+/// for all integer types with multiple right-hand-side types, Rust's type\n+/// checker has special handling for `_ << _`, setting the result type for\n+/// integer operations to the type of the left-hand-side operand. This means\n+/// that though `a << b` and `a.shl(b)` are one and the same from an evaluation\n+/// standpoint, they are different when it comes to type inference.\n ///\n /// # Examples\n ///\n@@ -417,7 +422,12 @@ macro_rules! shl_impl_all {\n \n shl_impl_all! { u8 u16 u32 u64 u128 usize i8 i16 i32 i64 isize i128 }\n \n-/// The right shift operator `>>`.\n+/// The right shift operator `>>`. Note that because this trait is implemented\n+/// for all integer types with multiple right-hand-side types, Rust's type\n+/// checker has special handling for `_ >> _`, setting the result type for\n+/// integer operations to the type of the left-hand-side operand. This means\n+/// that though `a >> b` and `a.shr(b)` are one and the same from an evaluation\n+/// standpoint, they are different when it comes to type inference.\n ///\n /// # Examples\n ///"}]}