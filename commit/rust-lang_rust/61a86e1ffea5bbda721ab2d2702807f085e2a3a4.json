{"sha": "61a86e1ffea5bbda721ab2d2702807f085e2a3a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYTg2ZTFmZmVhNWJiZGE3MjFhYjJkMjcwMjgwN2YwODVlMmEzYTQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-04T07:37:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-04T07:37:40Z"}, "message": "Windows lock primitives: check that we are truly sinle-threaded", "tree": {"sha": "e2407724eb15f665335606e371c94b22bf2af3eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2407724eb15f665335606e371c94b22bf2af3eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61a86e1ffea5bbda721ab2d2702807f085e2a3a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61a86e1ffea5bbda721ab2d2702807f085e2a3a4", "html_url": "https://github.com/rust-lang/rust/commit/61a86e1ffea5bbda721ab2d2702807f085e2a3a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61a86e1ffea5bbda721ab2d2702807f085e2a3a4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e87c9f8baef4b132d9956497569839b20a309e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e87c9f8baef4b132d9956497569839b20a309e7", "html_url": "https://github.com/rust-lang/rust/commit/1e87c9f8baef4b132d9956497569839b20a309e7"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "f55b5b8450e04f47ba98e0494531d4f30a3e97fa", "filename": "src/shims/foreign_items/windows.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61a86e1ffea5bbda721ab2d2702807f085e2a3a4/src%2Fshims%2Fforeign_items%2Fwindows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61a86e1ffea5bbda721ab2d2702807f085e2a3a4/src%2Fshims%2Fforeign_items%2Fwindows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fwindows.rs?ref=61a86e1ffea5bbda721ab2d2702807f085e2a3a4", "patch": "@@ -236,12 +236,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             | \"LeaveCriticalSection\"\n             | \"DeleteCriticalSection\" if this.frame().instance.to_string().starts_with(\"std::sys::windows::\")\n             => {\n+                assert_eq!(this.get_total_thread_count()?, 1, \"concurrency on Windows not supported\");\n                 // Nothing to do, not even a return value.\n                 // (Windows locks are reentrant, and we have only 1 thread,\n                 // so not doing any futher checks here is at least not incorrect.)\n             }\n             \"TryEnterCriticalSection\" if this.frame().instance.to_string().starts_with(\"std::sys::windows::\")\n             => {\n+                assert_eq!(this.get_total_thread_count()?, 1, \"concurrency on Windows not supported\");\n                 // There is only one thread, so this always succeeds and returns TRUE\n                 this.write_scalar(Scalar::from_i32(1), dest)?;\n             }"}]}