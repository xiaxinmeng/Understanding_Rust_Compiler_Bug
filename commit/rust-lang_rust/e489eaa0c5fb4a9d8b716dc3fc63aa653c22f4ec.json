{"sha": "e489eaa0c5fb4a9d8b716dc3fc63aa653c22f4ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ODllYWEwYzVmYjRhOWQ4YjcxNmRjM2ZjNjNhYTY1M2MyMmY0ZWM=", "commit": {"author": {"name": "Andrew Hobden", "email": "andrew@hoverbear.org", "date": "2015-03-29T17:03:49Z"}, "committer": {"name": "Andrew Hobden", "email": "andrew@hoverbear.org", "date": "2015-03-29T17:03:49Z"}, "message": "Update `std::error` example\n\nTo not use `old_io` and `os`, which are deprecated. Since there is no more `MemoryMap` used byte parsing instead to generate the second potential error.", "tree": {"sha": "30e2c52f5df39c984db54d0b3c5e2b6c75445453", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30e2c52f5df39c984db54d0b3c5e2b6c75445453"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e489eaa0c5fb4a9d8b716dc3fc63aa653c22f4ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e489eaa0c5fb4a9d8b716dc3fc63aa653c22f4ec", "html_url": "https://github.com/rust-lang/rust/commit/e489eaa0c5fb4a9d8b716dc3fc63aa653c22f4ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e489eaa0c5fb4a9d8b716dc3fc63aa653c22f4ec/comments", "author": null, "committer": null, "parents": [{"sha": "b27ba527c5cee06f43967daf3a0dd01a2258a0fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/b27ba527c5cee06f43967daf3a0dd01a2258a0fa", "html_url": "https://github.com/rust-lang/rust/commit/b27ba527c5cee06f43967daf3a0dd01a2258a0fa"}], "stats": {"total": 38, "additions": 16, "deletions": 22}, "files": [{"sha": "5e6acb2142c78411d26c09dd35f540daa1714679", "filename": "src/libcore/error.rs", "status": "modified", "additions": 16, "deletions": 22, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/e489eaa0c5fb4a9d8b716dc3fc63aa653c22f4ec/src%2Flibcore%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e489eaa0c5fb4a9d8b716dc3fc63aa653c22f4ec/src%2Flibcore%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ferror.rs?ref=e489eaa0c5fb4a9d8b716dc3fc63aa653c22f4ec", "patch": "@@ -48,33 +48,27 @@\n //! For example,\n //!\n //! ```\n-//! # #![feature(os, old_io, old_path)]\n+//! #![feature(core)]\n //! use std::error::FromError;\n-//! use std::old_io::{File, IoError};\n-//! use std::os::{MemoryMap, MapError};\n-//! use std::old_path::Path;\n-//!\n-//! enum MyError {\n-//!     Io(IoError),\n-//!     Map(MapError)\n+//! use std::{io, str};\n+//! use std::fs::File;\n+//! \n+//! enum MyError { Io(io::Error), Utf8(str::Utf8Error), }\n+//! \n+//! impl FromError<io::Error> for MyError {\n+//!     fn from_error(err: io::Error) -> MyError { MyError::Io(err) }\n //! }\n-//!\n-//! impl FromError<IoError> for MyError {\n-//!     fn from_error(err: IoError) -> MyError {\n-//!         MyError::Io(err)\n-//!     }\n+//! \n+//! impl FromError<str::Utf8Error> for MyError {\n+//!     fn from_error(err: str::Utf8Error) -> MyError { MyError::Utf8(err) }\n //! }\n-//!\n-//! impl FromError<MapError> for MyError {\n-//!     fn from_error(err: MapError) -> MyError {\n-//!         MyError::Map(err)\n-//!     }\n-//! }\n-//!\n+//! \n //! #[allow(unused_variables)]\n //! fn open_and_map() -> Result<(), MyError> {\n-//!     let f = try!(File::open(&Path::new(\"foo.txt\")));\n-//!     let m = try!(MemoryMap::new(0, &[]));\n+//!     let b = b\"foo.txt\";\n+//!     let s = try!(str::from_utf8(b));\n+//!     let f = try!(File::open(s));\n+//! \n //!     // do something interesting here...\n //!     Ok(())\n //! }"}]}