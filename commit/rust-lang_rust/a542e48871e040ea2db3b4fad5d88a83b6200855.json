{"sha": "a542e48871e040ea2db3b4fad5d88a83b6200855", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NDJlNDg4NzFlMDQwZWEyZGIzYjRmYWQ1ZDg4YTgzYjYyMDA4NTU=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-11-24T22:12:16Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-11-27T19:08:41Z"}, "message": "remove feature gate", "tree": {"sha": "b5499ba9604d940477ba8f2b3559bea993cb3196", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5499ba9604d940477ba8f2b3559bea993cb3196"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a542e48871e040ea2db3b4fad5d88a83b6200855", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a542e48871e040ea2db3b4fad5d88a83b6200855", "html_url": "https://github.com/rust-lang/rust/commit/a542e48871e040ea2db3b4fad5d88a83b6200855", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a542e48871e040ea2db3b4fad5d88a83b6200855/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c75ed34732f67ce41faf84e22e4896cabab14a40", "url": "https://api.github.com/repos/rust-lang/rust/commits/c75ed34732f67ce41faf84e22e4896cabab14a40", "html_url": "https://github.com/rust-lang/rust/commit/c75ed34732f67ce41faf84e22e4896cabab14a40"}], "stats": {"total": 49, "additions": 7, "deletions": 42}, "files": [{"sha": "c8ece7b3a88fdcd52e047edd1736f4e157bcead0", "filename": "src/libsyntax/ext/tt/quoted.rs", "status": "modified", "additions": 7, "deletions": 39, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/a542e48871e040ea2db3b4fad5d88a83b6200855/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a542e48871e040ea2db3b4fad5d88a83b6200855/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs?ref=a542e48871e040ea2db3b4fad5d88a83b6200855", "patch": "@@ -576,22 +576,7 @@ where\n     let span = match parse_kleene_op(input, span) {\n         // #1 is a `?` (needs feature gate)\n         Ok(Ok((op, op1_span))) if op == KleeneOp::ZeroOrOne => {\n-            if !features.macro_at_most_once_rep\n-                && !attr::contains_name(attrs, \"allow_internal_unstable\")\n-            {\n-                let explain = feature_gate::EXPLAIN_MACRO_AT_MOST_ONCE_REP;\n-                emit_feature_err(\n-                    sess,\n-                    \"macro_at_most_once_rep\",\n-                    op1_span,\n-                    GateIssue::Language,\n-                    explain,\n-                );\n-\n-                op1_span\n-            } else {\n-                return (None, op);\n-            }\n+            return (None, op);\n         }\n \n         // #1 is a `+` or `*` KleeneOp\n@@ -602,22 +587,10 @@ where\n             // #2 is the `?` Kleene op, which does not take a separator (error)\n             Ok(Ok((op, op2_span))) if op == KleeneOp::ZeroOrOne => {\n                 // Error!\n-\n-                if !features.macro_at_most_once_rep\n-                    && !attr::contains_name(attrs, \"allow_internal_unstable\")\n-                {\n-                    // FIXME: when `?` as a Kleene op is stabilized, we only need the \"does not\n-                    // take a macro separator\" error (i.e. the `else` case).\n-                    sess.span_diagnostic\n-                        .struct_span_err(op2_span, \"expected `*` or `+`\")\n-                        .note(\"`?` is not a macro repetition operator\")\n-                        .emit();\n-                } else {\n-                    sess.span_diagnostic.span_err(\n-                        span,\n-                        \"the `?` macro repetition operator does not take a separator\",\n-                    );\n-                }\n+                sess.span_diagnostic.span_err(\n+                    span,\n+                    \"the `?` macro repetition operator does not take a separator\",\n+                );\n \n                 // Return a dummy\n                 return (None, KleeneOp::ZeroOrMore);\n@@ -638,13 +611,8 @@ where\n     };\n \n     // If we ever get to this point, we have experienced an \"unexpected token\" error\n-\n-    if !features.macro_at_most_once_rep && !attr::contains_name(attrs, \"allow_internal_unstable\") {\n-        sess.span_diagnostic.span_err(span, \"expected `*` or `+`\");\n-    } else {\n-        sess.span_diagnostic\n-            .span_err(span, \"expected one of: `*`, `+`, or `?`\");\n-    }\n+    sess.span_diagnostic\n+        .span_err(span, \"expected one of: `*`, `+`, or `?`\");\n \n     // Return a dummy\n     (None, KleeneOp::ZeroOrMore)"}, {"sha": "3bc349170514cbc8f2146695b1d74a8fc0a180a8", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a542e48871e040ea2db3b4fad5d88a83b6200855/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a542e48871e040ea2db3b4fad5d88a83b6200855/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=a542e48871e040ea2db3b4fad5d88a83b6200855", "patch": "@@ -1426,9 +1426,6 @@ pub const EXPLAIN_DERIVE_UNDERSCORE: &'static str =\n pub const EXPLAIN_UNSIZED_TUPLE_COERCION: &'static str =\n     \"unsized tuple coercion is not stable enough for use and is subject to change\";\n \n-pub const EXPLAIN_MACRO_AT_MOST_ONCE_REP: &'static str =\n-    \"using the `?` macro Kleene operator for \\\"at most one\\\" repetition is unstable\";\n-\n struct PostExpansionVisitor<'a> {\n     context: &'a Context<'a>,\n }"}]}