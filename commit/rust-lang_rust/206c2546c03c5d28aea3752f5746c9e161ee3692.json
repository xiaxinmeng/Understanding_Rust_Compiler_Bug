{"sha": "206c2546c03c5d28aea3752f5746c9e161ee3692", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwNmMyNTQ2YzAzYzVkMjhhZWEzNzUyZjU3NDZjOWUxNjFlZTM2OTI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-23T18:02:31Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-24T23:21:20Z"}, "message": "Improve debug output from coherence.", "tree": {"sha": "28102d098977fe5a2e64d3f8183bd56ea485481b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28102d098977fe5a2e64d3f8183bd56ea485481b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/206c2546c03c5d28aea3752f5746c9e161ee3692", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/206c2546c03c5d28aea3752f5746c9e161ee3692", "html_url": "https://github.com/rust-lang/rust/commit/206c2546c03c5d28aea3752f5746c9e161ee3692", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/206c2546c03c5d28aea3752f5746c9e161ee3692/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb841fc44a821fdfd23117b3a35958935752c857", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb841fc44a821fdfd23117b3a35958935752c857", "html_url": "https://github.com/rust-lang/rust/commit/eb841fc44a821fdfd23117b3a35958935752c857"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "62b81f0ebe7dba8b98e7d4368d755f4aba55da64", "filename": "src/librustc/middle/traits/coherence.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/206c2546c03c5d28aea3752f5746c9e161ee3692/src%2Flibrustc%2Fmiddle%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/206c2546c03c5d28aea3752f5746c9e161ee3692/src%2Flibrustc%2Fmiddle%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fcoherence.rs?ref=206c2546c03c5d28aea3752f5746c9e161ee3692", "patch": "@@ -52,9 +52,16 @@ fn overlap(selcx: &mut SelectionContext,\n            b_def_id: ast::DefId)\n            -> bool\n {\n+    debug!(\"overlap(a_def_id={}, b_def_id={})\",\n+           a_def_id.repr(selcx.tcx()),\n+           b_def_id.repr(selcx.tcx()));\n+\n     let (a_trait_ref, a_obligations) = impl_trait_ref_and_oblig(selcx, a_def_id);\n     let (b_trait_ref, b_obligations) = impl_trait_ref_and_oblig(selcx, b_def_id);\n \n+    debug!(\"overlap: a_trait_ref={}\", a_trait_ref.repr(selcx.tcx()));\n+    debug!(\"overlap: b_trait_ref={}\", b_trait_ref.repr(selcx.tcx()));\n+\n     // Does `a <: b` hold? If not, no overlap.\n     if let Err(_) = infer::mk_sub_poly_trait_refs(selcx.infcx(),\n                                                   true,\n@@ -64,10 +71,20 @@ fn overlap(selcx: &mut SelectionContext,\n         return false;\n     }\n \n+    debug!(\"overlap: subtraitref check succeeded\");\n+\n     // Are any of the obligations unsatisfiable? If so, no overlap.\n-    a_obligations.iter()\n-                 .chain(b_obligations.iter())\n-                 .all(|o| selcx.evaluate_obligation(o))\n+    let opt_failing_obligation =\n+        a_obligations.iter()\n+                     .chain(b_obligations.iter())\n+                     .find(|o| !selcx.evaluate_obligation(o));\n+\n+    if let Some(failing_obligation) = opt_failing_obligation {\n+        debug!(\"overlap: obligation unsatisfiable {}\", failing_obligation.repr(selcx.tcx()));\n+        return false;\n+    }\n+\n+    true\n }\n \n /// Instantiate fresh variables for all bound parameters of the impl"}]}