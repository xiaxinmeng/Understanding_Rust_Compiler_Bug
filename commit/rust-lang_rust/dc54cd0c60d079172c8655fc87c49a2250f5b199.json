{"sha": "dc54cd0c60d079172c8655fc87c49a2250f5b199", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjNTRjZDBjNjBkMDc5MTcyYzg2NTVmYzg3YzQ5YTIyNTBmNWIxOTk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-05T20:53:56Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-05T20:53:56Z"}, "message": "fix typo in enum variant name", "tree": {"sha": "106ea9ea87357763952bff8ce0e1d09a9358a5b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/106ea9ea87357763952bff8ce0e1d09a9358a5b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc54cd0c60d079172c8655fc87c49a2250f5b199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc54cd0c60d079172c8655fc87c49a2250f5b199", "html_url": "https://github.com/rust-lang/rust/commit/dc54cd0c60d079172c8655fc87c49a2250f5b199", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc54cd0c60d079172c8655fc87c49a2250f5b199/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6b16987645dd8980f40efe7c72d4f3fd4b399d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6b16987645dd8980f40efe7c72d4f3fd4b399d3", "html_url": "https://github.com/rust-lang/rust/commit/c6b16987645dd8980f40efe7c72d4f3fd4b399d3"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "12708c074ca692792a1ad6e77d8c4cb4099d7875", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dc54cd0c60d079172c8655fc87c49a2250f5b199/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc54cd0c60d079172c8655fc87c49a2250f5b199/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=dc54cd0c60d079172c8655fc87c49a2250f5b199", "patch": "@@ -66,7 +66,7 @@ macro_rules! try_validation {\n pub enum PathElem {\n     Field(Symbol),\n     Variant(Symbol),\n-    GeneratoreState(VariantIdx),\n+    GeneratorState(VariantIdx),\n     ClosureVar(Symbol),\n     ArrayElem(usize),\n     TupleElem(usize),\n@@ -101,7 +101,7 @@ fn path_format(path: &Vec<PathElem>) -> String {\n         match elem {\n             Field(name) => write!(out, \".{}\", name),\n             Variant(name) => write!(out, \".<downcast-variant({})>\", name),\n-            GeneratoreState(idx) => write!(out, \".<generator-state({})>\", idx.index()),\n+            GeneratorState(idx) => write!(out, \".<generator-state({})>\", idx.index()),\n             ClosureVar(name) => write!(out, \".<closure-var({})>\", name),\n             TupleElem(idx) => write!(out, \".{}\", idx),\n             ArrayElem(idx) => write!(out, \"[{}]\", idx),\n@@ -267,7 +267,7 @@ impl<'rt, 'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>>\n         let name = match old_op.layout.ty.sty {\n             ty::Adt(adt, _) => PathElem::Variant(adt.variants[variant_id].ident.name),\n             // Generators also have variants\n-            ty::Generator(..) => PathElem::GeneratoreState(variant_id),\n+            ty::Generator(..) => PathElem::GeneratorState(variant_id),\n             _ => bug!(\"Unexpected type with variant: {:?}\", old_op.layout.ty),\n         };\n         self.visit_elem(new_op, name)"}]}