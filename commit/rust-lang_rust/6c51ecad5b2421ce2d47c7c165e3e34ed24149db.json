{"sha": "6c51ecad5b2421ce2d47c7c165e3e34ed24149db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNTFlY2FkNWIyNDIxY2UyZDQ3YzdjMTY1ZTNlMzRlZDI0MTQ5ZGI=", "commit": {"author": {"name": "Blake Wyatt", "email": "894305+nabakin@users.noreply.github.com", "date": "2021-09-04T23:28:59Z"}, "committer": {"name": "Blake Wyatt", "email": "894305+nabakin@users.noreply.github.com", "date": "2021-09-04T23:28:59Z"}, "message": "Add completion for raw identifiers", "tree": {"sha": "03620402491ed08c1f5a1af87ae11578f3c2ae8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03620402491ed08c1f5a1af87ae11578f3c2ae8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c51ecad5b2421ce2d47c7c165e3e34ed24149db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c51ecad5b2421ce2d47c7c165e3e34ed24149db", "html_url": "https://github.com/rust-lang/rust/commit/6c51ecad5b2421ce2d47c7c165e3e34ed24149db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c51ecad5b2421ce2d47c7c165e3e34ed24149db/comments", "author": {"login": "xNul", "id": 894305, "node_id": "MDQ6VXNlcjg5NDMwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/894305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xNul", "html_url": "https://github.com/xNul", "followers_url": "https://api.github.com/users/xNul/followers", "following_url": "https://api.github.com/users/xNul/following{/other_user}", "gists_url": "https://api.github.com/users/xNul/gists{/gist_id}", "starred_url": "https://api.github.com/users/xNul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xNul/subscriptions", "organizations_url": "https://api.github.com/users/xNul/orgs", "repos_url": "https://api.github.com/users/xNul/repos", "events_url": "https://api.github.com/users/xNul/events{/privacy}", "received_events_url": "https://api.github.com/users/xNul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xNul", "id": 894305, "node_id": "MDQ6VXNlcjg5NDMwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/894305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xNul", "html_url": "https://github.com/xNul", "followers_url": "https://api.github.com/users/xNul/followers", "following_url": "https://api.github.com/users/xNul/following{/other_user}", "gists_url": "https://api.github.com/users/xNul/gists{/gist_id}", "starred_url": "https://api.github.com/users/xNul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xNul/subscriptions", "organizations_url": "https://api.github.com/users/xNul/orgs", "repos_url": "https://api.github.com/users/xNul/repos", "events_url": "https://api.github.com/users/xNul/events{/privacy}", "received_events_url": "https://api.github.com/users/xNul/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c16e6474f9e4d11d967e5309735b0e673f4c24da", "url": "https://api.github.com/repos/rust-lang/rust/commits/c16e6474f9e4d11d967e5309735b0e673f4c24da", "html_url": "https://github.com/rust-lang/rust/commit/c16e6474f9e4d11d967e5309735b0e673f4c24da"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "91f565a5f8c7ebd221b0c5c8ae7d2e56d9b9527c", "filename": "crates/ide_completion/src/render.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6c51ecad5b2421ce2d47c7c165e3e34ed24149db/crates%2Fide_completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c51ecad5b2421ce2d47c7c165e3e34ed24149db/crates%2Fide_completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender.rs?ref=6c51ecad5b2421ce2d47c7c165e3e34ed24149db", "patch": "@@ -16,7 +16,7 @@ use ide_db::{\n     helpers::{item_name, SnippetCap},\n     RootDatabase, SymbolKind,\n };\n-use syntax::TextRange;\n+use syntax::{SyntaxKind, TextRange};\n \n use crate::{\n     context::{PathCompletionContext, PathKind},\n@@ -91,14 +91,18 @@ pub(crate) fn render_field(\n     );\n     item.set_relevance(CompletionRelevance {\n         type_match: compute_type_match(ctx.completion, ty),\n-        exact_name_match: compute_exact_name_match(ctx.completion, &name),\n+        exact_name_match: compute_exact_name_match(ctx.completion, name.as_str()),\n         ..CompletionRelevance::default()\n     });\n     item.kind(SymbolKind::Field)\n         .detail(ty.display(ctx.db()).to_string())\n         .set_documentation(field.docs(ctx.db()))\n         .set_deprecated(is_deprecated)\n-        .lookup_by(name);\n+        .lookup_by(name.as_str());\n+    let is_keyword = SyntaxKind::from_keyword(name.as_str()).is_some();\n+    if is_keyword && !matches!(name.as_str(), \"self\" | \"crate\" | \"super\" | \"Self\") {\n+        item.insert_text(String::from(\"r#\") + name.as_str());\n+    }\n     if let Some(_ref_match) = compute_ref_match(ctx.completion, ty) {\n         // FIXME\n         // For now we don't properly calculate the edits for ref match\n@@ -821,6 +825,23 @@ struct ManualVtable { f: fn(u8, u8) }\n fn main() -> ManualVtable {\n     ManualVtable { f: foo }\n }\n+\"#,\n+        );\n+        check_edit(\n+            \"type\",\n+            r#\"\n+struct RawIdentTable { r#type: u32 }\n+\n+fn main() -> RawIdentTable {\n+    RawIdentTable { t$0: 42 }\n+}\n+\"#,\n+            r#\"\n+struct RawIdentTable { r#type: u32 }\n+\n+fn main() -> RawIdentTable {\n+    RawIdentTable { r#type: 42 }\n+}\n \"#,\n         );\n     }"}]}