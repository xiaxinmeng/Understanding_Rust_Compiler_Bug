{"sha": "c7ee2a2857b0b8f1346bb02aabf19ce46184530f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ZWUyYTI4NTdiMGI4ZjEzNDZiYjAyYWFiZjE5Y2U0NjE4NDUzMGY=", "commit": {"author": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2018-12-13T12:34:01Z"}, "committer": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2018-12-13T12:35:15Z"}, "message": "Don't ignore parse error when constructing report", "tree": {"sha": "824a13d214747f4b192790670cbabeae0286843f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/824a13d214747f4b192790670cbabeae0286843f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7ee2a2857b0b8f1346bb02aabf19ce46184530f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ee2a2857b0b8f1346bb02aabf19ce46184530f", "html_url": "https://github.com/rust-lang/rust/commit/c7ee2a2857b0b8f1346bb02aabf19ce46184530f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7ee2a2857b0b8f1346bb02aabf19ce46184530f/comments", "author": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2042a64700840310be96041e039877383db14f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2042a64700840310be96041e039877383db14f2", "html_url": "https://github.com/rust-lang/rust/commit/a2042a64700840310be96041e039877383db14f2"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "f909086f0e084e94e4bc15e7301921f58a5240b8", "filename": "src/formatting.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c7ee2a2857b0b8f1346bb02aabf19ce46184530f/src%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7ee2a2857b0b8f1346bb02aabf19ce46184530f/src%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformatting.rs?ref=c7ee2a2857b0b8f1346bb02aabf19ce46184530f", "patch": "@@ -73,7 +73,12 @@ fn format_project<T: FormatHandler>(\n     let source_map = Rc::new(SourceMap::new(FilePathMapping::empty()));\n     let mut parse_session = make_parse_sess(source_map.clone(), config);\n     let mut report = FormatReport::new();\n-    let krate = parse_crate(input, &parse_session, config, &mut report)?;\n+    let krate = match parse_crate(input, &parse_session, config, &mut report) {\n+        Ok(krate) => krate,\n+        // Surface parse error via Session (errors are merged there from report)\n+        Err(ErrorKind::ParseError) => return Ok(report),\n+        Err(e) => return Err(e),\n+    };\n     timer = timer.done_parsing();\n \n     // Suppress error output if we have to do any further parsing."}]}