{"sha": "6bf57b8110138f1fbbf91da0e7c6750d30575cc9", "node_id": "C_kwDOAAsO6NoAKDZiZjU3YjgxMTAxMzhmMWZiYmY5MWRhMGU3YzY3NTBkMzA1NzVjYzk", "commit": {"author": {"name": "nils", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-01-12T14:44:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-12T14:44:50Z"}, "message": "Rollup merge of #105806 - mejrs:eager2, r=davidtwco\n\nSupport eager subdiagnostics again\n\nSee https://github.com/rust-lang/rust/pull/104941#discussion_r1051135746\n\nI'm not sure how to add a test for this. But I did pick some of the diagnostic structs in the mentioned PR and it works with them.", "tree": {"sha": "4f743bb2e02cd4a910198469383904bfff12f34b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f743bb2e02cd4a910198469383904bfff12f34b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bf57b8110138f1fbbf91da0e7c6750d30575cc9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjwBziCRBK7hj4Ov3rIwAAf8gIAIOrUfGUW7neMxYe/H8FhxP7\na2IJUROqYaevsbin2J5oCY1ukTy4SWZgkI8xXceawqGgefqEuTCeIddZ6UTZH3ll\nioWRORkclY1s8SwLsGowmtuR28Q0/rXdIhs9OS9ducBXPKHcRzVCx6db5Osx1JRz\nn5VVsRslTX+e6RNDiMAFig5KCmV+mbULXXcr2Q1x/nkA+/Dq7vcMkrB1J4/yxrlS\nE7pQQcsKbo41N4miDmhA6T8dnjfMBNDFONNzRYkLTzVQnZ0Y0kwZH9ufYy8e6dhF\nHfriQ5LvPG6TayKJSrjloRZoBca0o2zaz/zGVYJAabZK7uqpR/kqCBWsURma1OE=\n=GM5H\n-----END PGP SIGNATURE-----\n", "payload": "tree 4f743bb2e02cd4a910198469383904bfff12f34b\nparent 606c3907251397a42e23d3e60de31be9d32525d5\nparent 7aff210ead0eba3b4c6e6b2cbae5157e1ffe0562\nauthor nils <48135649+Nilstrieb@users.noreply.github.com> 1673534690 +0100\ncommitter GitHub <noreply@github.com> 1673534690 +0100\n\nRollup merge of #105806 - mejrs:eager2, r=davidtwco\n\nSupport eager subdiagnostics again\n\nSee https://github.com/rust-lang/rust/pull/104941#discussion_r1051135746\n\nI'm not sure how to add a test for this. But I did pick some of the diagnostic structs in the mentioned PR and it works with them.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bf57b8110138f1fbbf91da0e7c6750d30575cc9", "html_url": "https://github.com/rust-lang/rust/commit/6bf57b8110138f1fbbf91da0e7c6750d30575cc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bf57b8110138f1fbbf91da0e7c6750d30575cc9/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "606c3907251397a42e23d3e60de31be9d32525d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/606c3907251397a42e23d3e60de31be9d32525d5", "html_url": "https://github.com/rust-lang/rust/commit/606c3907251397a42e23d3e60de31be9d32525d5"}, {"sha": "7aff210ead0eba3b4c6e6b2cbae5157e1ffe0562", "url": "https://api.github.com/repos/rust-lang/rust/commits/7aff210ead0eba3b4c6e6b2cbae5157e1ffe0562", "html_url": "https://github.com/rust-lang/rust/commit/7aff210ead0eba3b4c6e6b2cbae5157e1ffe0562"}], "stats": {"total": 59, "additions": 29, "deletions": 30}, "files": [{"sha": "e405462bbb862268856c601acf1e0711bbce8cdd", "filename": "compiler/rustc_macros/src/diagnostics/diagnostic_builder.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6bf57b8110138f1fbbf91da0e7c6750d30575cc9/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bf57b8110138f1fbbf91da0e7c6750d30575cc9/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fdiagnostic_builder.rs?ref=6bf57b8110138f1fbbf91da0e7c6750d30575cc9", "patch": "@@ -382,10 +382,26 @@ impl<'a> DiagnosticDeriveVariantBuilder<'a> {\n                     return Ok(quote! { #diag.subdiagnostic(#binding); });\n                 }\n             }\n-            (Meta::List(_), \"subdiagnostic\") => {\n-                throw_invalid_attr!(attr, &meta, |diag| {\n-                    diag.help(\"`subdiagnostic` does not support nested attributes\")\n-                })\n+            (Meta::List(MetaList { ref nested, .. }), \"subdiagnostic\") => {\n+                if nested.len() == 1\n+                    && let Some(NestedMeta::Meta(Meta::Path(path))) = nested.first()\n+                    && path.is_ident(\"eager\") {\n+                        let handler = match &self.parent.kind {\n+                            DiagnosticDeriveKind::Diagnostic { handler } => handler,\n+                            DiagnosticDeriveKind::LintDiagnostic => {\n+                                throw_invalid_attr!(attr, &meta, |diag| {\n+                                    diag.help(\"eager subdiagnostics are not supported on lints\")\n+                                })\n+                            }\n+                        };\n+                        return Ok(quote! { #diag.eager_subdiagnostic(#handler, #binding); });\n+                } else {\n+                    throw_invalid_attr!(attr, &meta, |diag| {\n+                        diag.help(\n+                            \"`eager` is the only supported nested attribute for `subdiagnostic`\",\n+                        )\n+                    })\n+                }\n             }\n             _ => (),\n         }"}, {"sha": "bb3722fe156e03b8d01a47d6bbdfe08675e16730", "filename": "compiler/rustc_macros/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6bf57b8110138f1fbbf91da0e7c6750d30575cc9/compiler%2Frustc_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bf57b8110138f1fbbf91da0e7c6750d30575cc9/compiler%2Frustc_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Flib.rs?ref=6bf57b8110138f1fbbf91da0e7c6750d30575cc9", "patch": "@@ -1,5 +1,6 @@\n #![feature(allow_internal_unstable)]\n #![feature(if_let_guard)]\n+#![feature(let_chains)]\n #![feature(never_type)]\n #![feature(proc_macro_diagnostic)]\n #![feature(proc_macro_span)]"}, {"sha": "65d9601e78ab6980d05557915901a44ad72abfd9", "filename": "tests/ui-fulldeps/session-diagnostic/diagnostic-derive.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bf57b8110138f1fbbf91da0e7c6750d30575cc9/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bf57b8110138f1fbbf91da0e7c6750d30575cc9/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs?ref=6bf57b8110138f1fbbf91da0e7c6750d30575cc9", "patch": "@@ -723,7 +723,6 @@ struct SubdiagnosticEagerLint {\n #[diag(compiletest_example)]\n struct SubdiagnosticEagerCorrect {\n     #[subdiagnostic(eager)]\n-    //~^ ERROR `#[subdiagnostic(...)]` is not a valid attribute\n     note: Note,\n }\n \n@@ -744,7 +743,6 @@ pub(crate) struct SubdiagnosticWithSuggestion {\n #[diag(compiletest_example)]\n struct SubdiagnosticEagerSuggestion {\n     #[subdiagnostic(eager)]\n-    //~^ ERROR `#[subdiagnostic(...)]` is not a valid attribute\n     sub: SubdiagnosticWithSuggestion,\n }\n "}, {"sha": "13e806a434f637f9e4bb2ca8efec71b06f922ef4", "filename": "tests/ui-fulldeps/session-diagnostic/diagnostic-derive.stderr", "status": "modified", "additions": 8, "deletions": 24, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/6bf57b8110138f1fbbf91da0e7c6750d30575cc9/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6bf57b8110138f1fbbf91da0e7c6750d30575cc9/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr?ref=6bf57b8110138f1fbbf91da0e7c6750d30575cc9", "patch": "@@ -539,7 +539,7 @@ error: `#[subdiagnostic(...)]` is not a valid attribute\n LL |     #[subdiagnostic(bad)]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: `subdiagnostic` does not support nested attributes\n+   = help: `eager` is the only supported nested attribute for `subdiagnostic`\n \n error: `#[subdiagnostic = ...]` is not a valid attribute\n   --> $DIR/diagnostic-derive.rs:693:5\n@@ -553,54 +553,38 @@ error: `#[subdiagnostic(...)]` is not a valid attribute\n LL |     #[subdiagnostic(bad, bad)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: `subdiagnostic` does not support nested attributes\n+   = help: `eager` is the only supported nested attribute for `subdiagnostic`\n \n error: `#[subdiagnostic(...)]` is not a valid attribute\n   --> $DIR/diagnostic-derive.rs:709:5\n    |\n LL |     #[subdiagnostic(\"bad\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: `subdiagnostic` does not support nested attributes\n+   = help: `eager` is the only supported nested attribute for `subdiagnostic`\n \n error: `#[subdiagnostic(...)]` is not a valid attribute\n   --> $DIR/diagnostic-derive.rs:717:5\n    |\n LL |     #[subdiagnostic(eager)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: `subdiagnostic` does not support nested attributes\n-\n-error: `#[subdiagnostic(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:725:5\n-   |\n-LL |     #[subdiagnostic(eager)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: `subdiagnostic` does not support nested attributes\n-\n-error: `#[subdiagnostic(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:746:5\n-   |\n-LL |     #[subdiagnostic(eager)]\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: `subdiagnostic` does not support nested attributes\n+   = help: eager subdiagnostics are not supported on lints\n \n error: expected at least one string literal for `code(...)`\n-  --> $DIR/diagnostic-derive.rs:777:18\n+  --> $DIR/diagnostic-derive.rs:775:18\n    |\n LL |     #[suggestion(code())]\n    |                  ^^^^^^\n \n error: `code(...)` must contain only string literals\n-  --> $DIR/diagnostic-derive.rs:785:23\n+  --> $DIR/diagnostic-derive.rs:783:23\n    |\n LL |     #[suggestion(code(foo))]\n    |                       ^^^\n \n error: `code = \"...\"`/`code(...)` must contain only string literals\n-  --> $DIR/diagnostic-derive.rs:793:18\n+  --> $DIR/diagnostic-derive.rs:791:18\n    |\n LL |     #[suggestion(code = 3)]\n    |                  ^^^^^^^^\n@@ -676,7 +660,7 @@ note: required by a bound in `DiagnosticBuilder::<'a, G>::set_arg`\n   --> $COMPILER_DIR/rustc_errors/src/diagnostic_builder.rs:LL:CC\n    = note: this error originates in the derive macro `Diagnostic` which comes from the expansion of the macro `forward` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 85 previous errors\n+error: aborting due to 83 previous errors\n \n Some errors have detailed explanations: E0277, E0425.\n For more information about an error, try `rustc --explain E0277`."}]}