{"sha": "1d0bba8224686d054378bcc4e853798d56fdfecf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMGJiYTgyMjQ2ODZkMDU0Mzc4YmNjNGU4NTM3OThkNTZmZGZlY2Y=", "commit": {"author": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-11-29T01:25:47Z"}, "committer": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-11-29T01:25:47Z"}, "message": "Move stdout/err flush into sys", "tree": {"sha": "e50c33389112f9b43f8b4b2f443f6120518a663a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e50c33389112f9b43f8b4b2f443f6120518a663a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d0bba8224686d054378bcc4e853798d56fdfecf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d0bba8224686d054378bcc4e853798d56fdfecf", "html_url": "https://github.com/rust-lang/rust/commit/1d0bba8224686d054378bcc4e853798d56fdfecf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d0bba8224686d054378bcc4e853798d56fdfecf/comments", "author": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ec21327f25e4646ce64a2e331bb4702cf96dc99", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ec21327f25e4646ce64a2e331bb4702cf96dc99", "html_url": "https://github.com/rust-lang/rust/commit/2ec21327f25e4646ce64a2e331bb4702cf96dc99"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "6419a9ff683de75e0700d73e890afd72b72c38c0", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1d0bba8224686d054378bcc4e853798d56fdfecf/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d0bba8224686d054378bcc4e853798d56fdfecf/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=1d0bba8224686d054378bcc4e853798d56fdfecf", "patch": "@@ -81,16 +81,10 @@ impl Read for StdinRaw {\n }\n impl Write for StdoutRaw {\n     fn write(&mut self, buf: &[u8]) -> io::Result<usize> { self.0.write(buf) }\n-    #[cfg(not(target_os = \"redox\"))]\n-    fn flush(&mut self) -> io::Result<()> { Ok(()) }\n-    #[cfg(target_os = \"redox\")]\n     fn flush(&mut self) -> io::Result<()> { self.0.flush() }\n }\n impl Write for StderrRaw {\n     fn write(&mut self, buf: &[u8]) -> io::Result<usize> { self.0.write(buf) }\n-    #[cfg(not(target_os = \"redox\"))]\n-    fn flush(&mut self) -> io::Result<()> { Ok(()) }\n-    #[cfg(target_os = \"redox\")]\n     fn flush(&mut self) -> io::Result<()> { self.0.flush() }\n }\n "}, {"sha": "aa8329bc28386d1a64010a863a903fdc68fe8b9d", "filename": "src/libstd/sys/redox/stdio.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d0bba8224686d054378bcc4e853798d56fdfecf/src%2Flibstd%2Fsys%2Fredox%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d0bba8224686d054378bcc4e853798d56fdfecf/src%2Flibstd%2Fsys%2Fredox%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fstdio.rs?ref=1d0bba8224686d054378bcc4e853798d56fdfecf", "patch": "@@ -73,7 +73,7 @@ impl io::Write for Stderr {\n     }\n \n     fn flush(&mut self) -> io::Result<()> {\n-        cvt(syscall::fsync(2)).and(Ok(()))\n+        Stderr::flush(self)\n     }\n }\n "}, {"sha": "1002c60d30337af8eb76a26498a17926d0d46a53", "filename": "src/libstd/sys/unix/stdio.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1d0bba8224686d054378bcc4e853798d56fdfecf/src%2Flibstd%2Fsys%2Funix%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d0bba8224686d054378bcc4e853798d56fdfecf/src%2Flibstd%2Fsys%2Funix%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fstdio.rs?ref=1d0bba8224686d054378bcc4e853798d56fdfecf", "patch": "@@ -43,6 +43,10 @@ impl Stdout {\n         fd.into_raw();\n         ret\n     }\n+\n+    pub fn flush(&self) -> io::Result<()> {\n+        Ok(())\n+    }\n }\n \n impl Stderr {\n@@ -54,6 +58,10 @@ impl Stderr {\n         fd.into_raw();\n         ret\n     }\n+\n+    pub fn flush(&self) -> io::Result<()> {\n+        Ok(())\n+    }\n }\n \n // FIXME: right now this raw stderr handle is used in a few places because\n@@ -63,7 +71,10 @@ impl io::Write for Stderr {\n     fn write(&mut self, data: &[u8]) -> io::Result<usize> {\n         Stderr::write(self, data)\n     }\n-    fn flush(&mut self) -> io::Result<()> { Ok(()) }\n+    \n+    fn flush(&mut self) -> io::Result<()> {\n+        Stderr::flush(self)\n+    }\n }\n \n pub const EBADF_ERR: i32 = ::libc::EBADF as i32;"}, {"sha": "0d58da29323ed7f22e176655672e928d5e56b593", "filename": "src/libstd/sys/windows/stdio.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1d0bba8224686d054378bcc4e853798d56fdfecf/src%2Flibstd%2Fsys%2Fwindows%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d0bba8224686d054378bcc4e853798d56fdfecf/src%2Flibstd%2Fsys%2Fwindows%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fstdio.rs?ref=1d0bba8224686d054378bcc4e853798d56fdfecf", "patch": "@@ -156,6 +156,10 @@ impl Stdout {\n     pub fn write(&self, data: &[u8]) -> io::Result<usize> {\n         write(&self.0, data)\n     }\n+\n+    pub fn flush(&self) -> io::Result<()> {\n+        Ok(())\n+    }\n }\n \n impl Stderr {\n@@ -166,6 +170,10 @@ impl Stderr {\n     pub fn write(&self, data: &[u8]) -> io::Result<usize> {\n         write(&self.0, data)\n     }\n+\n+    pub fn flush(&self) -> io::Result<()> {\n+        Ok(())\n+    }\n }\n \n // FIXME: right now this raw stderr handle is used in a few places because\n@@ -175,7 +183,10 @@ impl io::Write for Stderr {\n     fn write(&mut self, data: &[u8]) -> io::Result<usize> {\n         Stderr::write(self, data)\n     }\n-    fn flush(&mut self) -> io::Result<()> { Ok(()) }\n+    \n+    fn flush(&mut self) -> io::Result<()> {\n+        Stderr::flush(self)\n+    }\n }\n \n impl NoClose {"}]}