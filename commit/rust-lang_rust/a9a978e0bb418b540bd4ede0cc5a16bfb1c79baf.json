{"sha": "a9a978e0bb418b540bd4ede0cc5a16bfb1c79baf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5YTk3OGUwYmI0MThiNTQwYmQ0ZWRlMGNjNWExNmJmYjFjNzliYWY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-27T08:17:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-27T08:17:10Z"}, "message": "Merge #9021\n\n9021: internal: explain the motivation behind early configuration r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "5b0a12bb421cffa9e4b7ee0d966b9df2d1bd93bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b0a12bb421cffa9e4b7ee0d966b9df2d1bd93bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9a978e0bb418b540bd4ede0cc5a16bfb1c79baf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgr1WGCRBK7hj4Ov3rIwAAFLQIAGztUVaj5wkQufSDGfhcIgZq\nTTMc9WItQ8uvcykfPmNr6yCeE3Iru3z0tdzOBkVxLUW0C34u3I/riRa8n4gBQJGM\nUJuy9KS7fxjAfgo07pR2B7XfakgsmzPRCP4H/AgrkB9Cz0oMl+vHRsFCRbdaBtR3\nJkIdEieC+rkvJVXNG963O3s2kagIf1tHym0NZ1bCa8MigjHFZXlXA6eH1MWYJq2F\nbiyI3YZjJ5w0/pCu22BHxfnGuCieBgz5WZnfQOglOrStQguYYURK9H8lF0ieUYcr\nV+vO3P2YQqmat6/9FXvdeUtNvEnjhST9S8QlNr2QsnhdJ4nZEgl/fHXD6WLvqWE=\n=usIg\n-----END PGP SIGNATURE-----\n", "payload": "tree 5b0a12bb421cffa9e4b7ee0d966b9df2d1bd93bb\nparent 7d1653dcdc94347cccaf8d50d45d896a3c286d93\nparent cabb679cbb7d94fba5bdbcfdb0dc66e9fdd47415\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1622103430 +0000\ncommitter GitHub <noreply@github.com> 1622103430 +0000\n\nMerge #9021\n\n9021: internal: explain the motivation behind early configuration r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9a978e0bb418b540bd4ede0cc5a16bfb1c79baf", "html_url": "https://github.com/rust-lang/rust/commit/a9a978e0bb418b540bd4ede0cc5a16bfb1c79baf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9a978e0bb418b540bd4ede0cc5a16bfb1c79baf/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d1653dcdc94347cccaf8d50d45d896a3c286d93", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d1653dcdc94347cccaf8d50d45d896a3c286d93", "html_url": "https://github.com/rust-lang/rust/commit/7d1653dcdc94347cccaf8d50d45d896a3c286d93"}, {"sha": "cabb679cbb7d94fba5bdbcfdb0dc66e9fdd47415", "url": "https://api.github.com/repos/rust-lang/rust/commits/cabb679cbb7d94fba5bdbcfdb0dc66e9fdd47415", "html_url": "https://github.com/rust-lang/rust/commit/cabb679cbb7d94fba5bdbcfdb0dc66e9fdd47415"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "11a3dd04e8e30378a8636494e121222ccddeb5c9", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a9a978e0bb418b540bd4ede0cc5a16bfb1c79baf/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/a9a978e0bb418b540bd4ede0cc5a16bfb1c79baf/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=a9a978e0bb418b540bd4ede0cc5a16bfb1c79baf", "patch": "@@ -25,15 +25,21 @@ rust-analyzer supports clangd's extension for opting into UTF-8 as the coordinat\n \n https://clangd.llvm.org/extensions.html#utf-8-offsets\n \n-## `initializationOptions`\n+## Configuration in `initializationOptions`\n+\n+**Issue:** https://github.com/microsoft/language-server-protocol/issues/567\n+\n+The `initializationOptions` filed of the `InitializeParams` of the initialization request should contain `\"rust-analyzer\"` section of the configuration.\n+\n+`rust-analyzer` normally sends a `\"workspace/configuration\"` request with `{ \"items\": [\"rust-analyzer\"] }` payload.\n+However, the server can't do this during initialization.\n+At the same time some essential configuration parameters are needed early on, before servicing requests.\n+For this reason, we ask that `initializationOptions` contains the configuration, as if the server did make a `\"workspace/configuration\"` request.\n \n-For `initializationOptions`, `rust-analyzer` expects `\"rust-analyzer\"` section of the configuration.\n-That is, `rust-analyzer` usually sends `\"workspace/configuration\"` request with `{ \"items\": [\"rust-analyzer\"] }` payload.\n-`initializationOptions` should contain the same data that would be in the first item of the result.\n If a language client does not know about `rust-analyzer`'s configuration options it can get sensible defaults by doing any of the following:\n  * Not sending `initializationOptions`\n- * Send `\"initializationOptions\": null`\n- * Send `\"initializationOptions\": {}`\n+ * Sending `\"initializationOptions\": null`\n+ * Sending `\"initializationOptions\": {}`\n \n ## Snippet `TextEdit`\n "}]}