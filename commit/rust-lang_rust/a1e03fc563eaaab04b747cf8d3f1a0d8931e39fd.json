{"sha": "a1e03fc563eaaab04b747cf8d3f1a0d8931e39fd", "node_id": "C_kwDOAAsO6NoAKGExZTAzZmM1NjNlYWFhYjA0Yjc0N2NmOGQzZjFhMGQ4OTMxZTM5ZmQ", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-10-11T19:17:41Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-10-11T19:17:41Z"}, "message": "Add library tracking issue for poll_ready feature", "tree": {"sha": "6ae669fb1e309de7e28b745a68f238c2c3bdac0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ae669fb1e309de7e28b745a68f238c2c3bdac0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1e03fc563eaaab04b747cf8d3f1a0d8931e39fd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmFkjdUACgkQ+boUO5X/\nbYLtDA/8DP1k3X72c0Hm3aeIPhtYKxjXmxIPRan2guaH45aY08rAUFSo9Ifwpjjy\nWmgAeGYgDhQMGcX9YrGTCDRE3Re32AXvHcmY9vHQDxZi64hSKAvpFqhtkZVVSDnq\ndCwZ5AuLgn2zOaK00MeNAzL3hIGx2FGAgRxFYc5O6NneXWwKZ+r9RFgLqsnXpa/G\nSYage1cINeuqv8US/OvkU+Fu5dk26yhotBzY4drJ/0EdPa4beveXgaq4gUPG5Tbf\nsgST9j4ssuR0nkTnMbPIk0+EntrsKThyS+t+HaaZ5OjsEcO7hurPYU39Wfl9vtxf\nsGxfwrIavVtQ6SqbOEKySOxHo9JR3TP+LBKcUe4duYWUXJ+Y5fu8DGL7EfYFiI6X\nTJsNWMFP85RPO30LfywDhPW7l5KnFsRtkywcjplchLSP6Xh4oIv4Ot6diHhnc8PJ\nSLerZWh560KyIVyBL9BGkCYp53pxdx/fcWuHz3zjAvAb0DywysaNU3IiogGodAal\njMG98g2kbOwdqk53OB8ofg3WbCUgW51W48R20xJggZzgQqeaxDFDaw4nQ09CWiPC\naA34N0g37j7MVYhOJpkw6WQ7aPm89aSqIU9AiPY+iUueewTveogOUajoh57Hy70w\nxfCWxkVEQtTqtzTdfI0G9XSafS92FkgVRi0Hpgw4JWngwDj0LiU=\n=E8el\n-----END PGP SIGNATURE-----", "payload": "tree 6ae669fb1e309de7e28b745a68f238c2c3bdac0b\nparent 7a7dfa8b67364be9a6fcd0d5876ed1c55b55843b\nauthor David Tolnay <dtolnay@gmail.com> 1633979861 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1633979861 -0700\n\nAdd library tracking issue for poll_ready feature\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1e03fc563eaaab04b747cf8d3f1a0d8931e39fd", "html_url": "https://github.com/rust-lang/rust/commit/a1e03fc563eaaab04b747cf8d3f1a0d8931e39fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1e03fc563eaaab04b747cf8d3f1a0d8931e39fd/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a7dfa8b67364be9a6fcd0d5876ed1c55b55843b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a7dfa8b67364be9a6fcd0d5876ed1c55b55843b", "html_url": "https://github.com/rust-lang/rust/commit/7a7dfa8b67364be9a6fcd0d5876ed1c55b55843b"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "71a67a2793a46bfa83331c7a93d6f80d089ec2ef", "filename": "library/core/src/task/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a1e03fc563eaaab04b747cf8d3f1a0d8931e39fd/library%2Fcore%2Fsrc%2Ftask%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1e03fc563eaaab04b747cf8d3f1a0d8931e39fd/library%2Fcore%2Fsrc%2Ftask%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fmod.rs?ref=a1e03fc563eaaab04b747cf8d3f1a0d8931e39fd", "patch": "@@ -13,5 +13,5 @@ pub use self::wake::{Context, RawWaker, RawWakerVTable, Waker};\n mod ready;\n #[unstable(feature = \"ready_macro\", issue = \"70922\")]\n pub use ready::ready;\n-#[unstable(feature = \"poll_ready\", issue = \"none\")]\n+#[unstable(feature = \"poll_ready\", issue = \"89780\")]\n pub use ready::Ready;"}, {"sha": "3e0b3e89758a64ac2e3824955320730fffd1f67a", "filename": "library/core/src/task/poll.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a1e03fc563eaaab04b747cf8d3f1a0d8931e39fd/library%2Fcore%2Fsrc%2Ftask%2Fpoll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1e03fc563eaaab04b747cf8d3f1a0d8931e39fd/library%2Fcore%2Fsrc%2Ftask%2Fpoll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fpoll.rs?ref=a1e03fc563eaaab04b747cf8d3f1a0d8931e39fd", "patch": "@@ -121,7 +121,7 @@ impl<T> Poll<T> {\n     /// }\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"poll_ready\", issue = \"none\")]\n+    #[unstable(feature = \"poll_ready\", issue = \"89780\")]\n     pub fn ready(self) -> Ready<T> {\n         Ready(self)\n     }"}, {"sha": "174ca67546033d2aa4942b3a03971f8d1c8069b0", "filename": "library/core/src/task/ready.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a1e03fc563eaaab04b747cf8d3f1a0d8931e39fd/library%2Fcore%2Fsrc%2Ftask%2Fready.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1e03fc563eaaab04b747cf8d3f1a0d8931e39fd/library%2Fcore%2Fsrc%2Ftask%2Fready.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fready.rs?ref=a1e03fc563eaaab04b747cf8d3f1a0d8931e39fd", "patch": "@@ -67,10 +67,10 @@ pub macro ready($e:expr) {\n /// Extracts the successful type of a [`Poll<T>`].\n ///\n /// See [`Poll::ready`] for details.\n-#[unstable(feature = \"poll_ready\", issue = \"none\")]\n+#[unstable(feature = \"poll_ready\", issue = \"89780\")]\n pub struct Ready<T>(pub(crate) Poll<T>);\n \n-#[unstable(feature = \"poll_ready\", issue = \"none\")]\n+#[unstable(feature = \"poll_ready\", issue = \"89780\")]\n impl<T> Try for Ready<T> {\n     type Output = T;\n     type Residual = Ready<convert::Infallible>;\n@@ -89,7 +89,7 @@ impl<T> Try for Ready<T> {\n     }\n }\n \n-#[unstable(feature = \"poll_ready\", issue = \"none\")]\n+#[unstable(feature = \"poll_ready\", issue = \"89780\")]\n impl<T> FromResidual for Ready<T> {\n     #[inline]\n     fn from_residual(residual: Ready<convert::Infallible>) -> Self {\n@@ -99,7 +99,7 @@ impl<T> FromResidual for Ready<T> {\n     }\n }\n \n-#[unstable(feature = \"poll_ready\", issue = \"none\")]\n+#[unstable(feature = \"poll_ready\", issue = \"89780\")]\n impl<T> FromResidual<Ready<convert::Infallible>> for Poll<T> {\n     #[inline]\n     fn from_residual(residual: Ready<convert::Infallible>) -> Self {\n@@ -109,7 +109,7 @@ impl<T> FromResidual<Ready<convert::Infallible>> for Poll<T> {\n     }\n }\n \n-#[unstable(feature = \"poll_ready\", issue = \"none\")]\n+#[unstable(feature = \"poll_ready\", issue = \"89780\")]\n impl<T> fmt::Debug for Ready<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         f.debug_tuple(\"Ready\").finish()"}]}