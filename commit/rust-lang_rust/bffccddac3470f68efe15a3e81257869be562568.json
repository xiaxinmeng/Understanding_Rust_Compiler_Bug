{"sha": "bffccddac3470f68efe15a3e81257869be562568", "node_id": "C_kwDOAAsO6NoAKGJmZmNjZGRhYzM0NzBmNjhlZmUxNWEzZTgxMjU3ODY5YmU1NjI1Njg", "commit": {"author": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2023-04-10T01:53:50Z"}, "committer": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2023-05-06T01:34:55Z"}, "message": "correct import of owned_slice", "tree": {"sha": "78d3a390f37b3055d1dbb19a2f63a9b5e1808cfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78d3a390f37b3055d1dbb19a2f63a9b5e1808cfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bffccddac3470f68efe15a3e81257869be562568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bffccddac3470f68efe15a3e81257869be562568", "html_url": "https://github.com/rust-lang/rust/commit/bffccddac3470f68efe15a3e81257869be562568", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bffccddac3470f68efe15a3e81257869be562568/comments", "author": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "089a38880b6e3b05a2c59644469233dbda411158", "url": "https://api.github.com/repos/rust-lang/rust/commits/089a38880b6e3b05a2c59644469233dbda411158", "html_url": "https://github.com/rust-lang/rust/commit/089a38880b6e3b05a2c59644469233dbda411158"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "579f54c5f715bb51067135e218b136f0ecb7d19b", "filename": "compiler/rustc_data_structures/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bffccddac3470f68efe15a3e81257869be562568/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bffccddac3470f68efe15a3e81257869be562568/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs?ref=bffccddac3470f68efe15a3e81257869be562568", "patch": "@@ -29,7 +29,8 @@\n #![feature(allocator_api)]\n #![feature(get_mut_unchecked)]\n #![feature(lint_reasons)]\n-#![feature(unwrap_infallible)]#![feature(const_mut_refs)]\n+#![feature(unwrap_infallible)]\n+#![feature(const_mut_refs)]\n #![feature(const_trait_impl)]\n #![feature(strict_provenance)]\n #![feature(ptr_alignment_type)]"}, {"sha": "e23a10839ee179b3ce33090bbe108b8f411f89c0", "filename": "compiler/rustc_data_structures/src/marker.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bffccddac3470f68efe15a3e81257869be562568/compiler%2Frustc_data_structures%2Fsrc%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bffccddac3470f68efe15a3e81257869be562568/compiler%2Frustc_data_structures%2Fsrc%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fmarker.rs?ref=bffccddac3470f68efe15a3e81257869be562568", "patch": "@@ -72,6 +72,7 @@ cfg_if!(\n             [rustc_arena::DroplessArena]\n             [crate::memmap::Mmap]\n             [crate::profiling::SelfProfiler]\n+            [crate::owned_slice::OwnedSlice]\n         );\n \n         macro_rules! impl_dyn_send {\n@@ -98,11 +99,6 @@ cfg_if!(\n             [indexmap::IndexMap<K, V, S> where K: DynSend, V: DynSend, S: DynSend]\n             [thin_vec::ThinVec<T> where T: DynSend]\n             [smallvec::SmallVec<A> where A: smallvec::Array + DynSend]\n-\n-            // We use `Send` here, since they are only used in `Send` situations now.\n-            // In this case we don't need copy or change the codes in `crate::owning_ref`.\n-            [crate::owning_ref::OwningRef<O, T> where O: Send, T: ?Sized + Send]\n-            [crate::owning_ref::OwningRefMut<O, T> where O: Send, T: ?Sized + Send]\n         );\n \n         macro_rules! impls_dyn_sync_neg {\n@@ -154,6 +150,7 @@ cfg_if!(\n             [jobserver_crate::Client]\n             [crate::memmap::Mmap]\n             [crate::profiling::SelfProfiler]\n+            [crate::owned_slice::OwnedSlice]\n         );\n \n         macro_rules! impl_dyn_sync {\n@@ -184,11 +181,6 @@ cfg_if!(\n             [indexmap::IndexMap<K, V, S> where K: DynSync, V: DynSync, S: DynSync]\n             [smallvec::SmallVec<A> where A: smallvec::Array + DynSync]\n             [thin_vec::ThinVec<T> where T: DynSync]\n-\n-            // We use `Sync` here, since they are only used in `Sync` situations now.\n-            // In this case we don't need copy or change the codes in `crate::owning_ref`.\n-            [crate::owning_ref::OwningRef<O, T> where O: Sync, T: ?Sized + Sync]\n-            [crate::owning_ref::OwningRefMut<O, T> where O: Sync, T: ?Sized + Sync]\n         );\n     }\n );"}, {"sha": "e151b8c2de04e6aff81c0df365eb495fec9e8c06", "filename": "compiler/rustc_data_structures/src/owned_slice/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bffccddac3470f68efe15a3e81257869be562568/compiler%2Frustc_data_structures%2Fsrc%2Fowned_slice%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bffccddac3470f68efe15a3e81257869be562568/compiler%2Frustc_data_structures%2Fsrc%2Fowned_slice%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fowned_slice%2Ftests.rs?ref=bffccddac3470f68efe15a3e81257869be562568", "patch": "@@ -69,6 +69,6 @@ fn drop_drops() {\n \n #[test]\n fn send_sync() {\n-    crate::sync::assert_send::<OwnedSlice>();\n-    crate::sync::assert_sync::<OwnedSlice>();\n+    crate::sync::assert_dyn_send::<OwnedSlice>();\n+    crate::sync::assert_dyn_sync::<OwnedSlice>();\n }"}]}