{"sha": "2874f09534b39b98b23a649e8300e8bdd2fb1823", "node_id": "C_kwDOAAsO6NoAKDI4NzRmMDk1MzRiMzliOThiMjNhNjQ5ZTgzMDBlOGJkZDJmYjE4MjM", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-29T14:50:26Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-07-05T15:00:20Z"}, "message": "lint: `LintDiagnosticBuilder` into `rustc_errors`\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "fe251a5c76fb70967462a19b46704c61585ddd83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe251a5c76fb70967462a19b46704c61585ddd83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2874f09534b39b98b23a649e8300e8bdd2fb1823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2874f09534b39b98b23a649e8300e8bdd2fb1823", "html_url": "https://github.com/rust-lang/rust/commit/2874f09534b39b98b23a649e8300e8bdd2fb1823", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2874f09534b39b98b23a649e8300e8bdd2fb1823/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84ec77769f4bf0bbd1b913747e9a1a7226a6116f", "url": "https://api.github.com/repos/rust-lang/rust/commits/84ec77769f4bf0bbd1b913747e9a1a7226a6116f", "html_url": "https://github.com/rust-lang/rust/commit/84ec77769f4bf0bbd1b913747e9a1a7226a6116f"}], "stats": {"total": 81, "additions": 39, "deletions": 42}, "files": [{"sha": "c3341fd68f4a53addf046ef4f1f368050e29ebc7", "filename": "compiler/rustc_errors/src/diagnostic_builder.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs?ref=2874f09534b39b98b23a649e8300e8bdd2fb1823", "patch": "@@ -589,3 +589,26 @@ macro_rules! struct_span_err {\n macro_rules! error_code {\n     ($code:ident) => {{ $crate::DiagnosticId::Error(stringify!($code).to_owned()) }};\n }\n+\n+/// Wrapper around a `DiagnosticBuilder` for creating lints.\n+pub struct LintDiagnosticBuilder<'a, G: EmissionGuarantee>(DiagnosticBuilder<'a, G>);\n+\n+impl<'a, G: EmissionGuarantee> LintDiagnosticBuilder<'a, G> {\n+    /// Return the inner `DiagnosticBuilder`, first setting the primary message to `msg`.\n+    pub fn build(mut self, msg: impl Into<DiagnosticMessage>) -> DiagnosticBuilder<'a, G> {\n+        self.0.set_primary_message(msg);\n+        self.0.set_is_lint();\n+        self.0\n+    }\n+\n+    /// Create a `LintDiagnosticBuilder` from some existing `DiagnosticBuilder`.\n+    pub fn new(err: DiagnosticBuilder<'a, G>) -> LintDiagnosticBuilder<'a, G> {\n+        LintDiagnosticBuilder(err)\n+    }\n+}\n+\n+impl<'a> LintDiagnosticBuilder<'a, ErrorGuaranteed> {\n+    pub fn forget_guarantee(self) -> LintDiagnosticBuilder<'a, ()> {\n+        LintDiagnosticBuilder(self.0.forget_guarantee())\n+    }\n+}"}, {"sha": "a64dd42ec775e272db3ca826b9fd05c61f70f7d4", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=2874f09534b39b98b23a649e8300e8bdd2fb1823", "patch": "@@ -373,7 +373,7 @@ pub use diagnostic::{\n     AddSubdiagnostic, Diagnostic, DiagnosticArg, DiagnosticArgValue, DiagnosticId,\n     DiagnosticStyledString, IntoDiagnosticArg, SubDiagnostic,\n };\n-pub use diagnostic_builder::{DiagnosticBuilder, EmissionGuarantee};\n+pub use diagnostic_builder::{DiagnosticBuilder, EmissionGuarantee, LintDiagnosticBuilder};\n use std::backtrace::Backtrace;\n \n /// A handler deals with errors and other compiler output."}, {"sha": "6a089fceb2858853e8b9a3ffaa03c36562495c03", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=2874f09534b39b98b23a649e8300e8bdd2fb1823", "patch": "@@ -32,15 +32,16 @@ use rustc_ast_pretty::pprust::{self, expr_to_string};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::stack::ensure_sufficient_stack;\n use rustc_errors::{\n-    fluent, Applicability, Diagnostic, DiagnosticMessage, DiagnosticStyledString, MultiSpan,\n+    fluent, Applicability, Diagnostic, DiagnosticMessage, DiagnosticStyledString,\n+    LintDiagnosticBuilder, MultiSpan,\n };\n use rustc_feature::{deprecated_attributes, AttributeGate, BuiltinAttribute, GateIssue, Stability};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{DefId, LocalDefId, LocalDefIdSet, CRATE_DEF_ID};\n use rustc_hir::{ForeignItemKind, GenericParamKind, HirId, PatKind, PredicateOrigin};\n use rustc_index::vec::Idx;\n-use rustc_middle::lint::{in_external_macro, LintDiagnosticBuilder};\n+use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::layout::{LayoutError, LayoutOf};\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::subst::GenericArgKind;"}, {"sha": "1e1c423982b2daa36c731033dd00da978fdf8dd7", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=2874f09534b39b98b23a649e8300e8bdd2fb1823", "patch": "@@ -22,12 +22,11 @@ use rustc_ast::util::unicode::TEXT_FLOW_CONTROL_CHARS;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync;\n use rustc_errors::{add_elided_lifetime_in_path_suggestion, struct_span_err};\n-use rustc_errors::{Applicability, MultiSpan, SuggestionStyle};\n+use rustc_errors::{Applicability, LintDiagnosticBuilder, MultiSpan, SuggestionStyle};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::def_id::{CrateNum, DefId};\n use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n-use rustc_middle::lint::LintDiagnosticBuilder;\n use rustc_middle::middle::privacy::AccessLevels;\n use rustc_middle::middle::stability;\n use rustc_middle::ty::layout::{LayoutError, LayoutOfHelpers, TyAndLayout};"}, {"sha": "00e96f20d1aaaec4ecd24c2349ecad72949e58da", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=2874f09534b39b98b23a649e8300e8bdd2fb1823", "patch": "@@ -3,13 +3,13 @@ use crate::late::unerased_lint_store;\n use rustc_ast as ast;\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_errors::{struct_span_err, Applicability, Diagnostic, MultiSpan};\n+use rustc_errors::{struct_span_err, Applicability, Diagnostic, LintDiagnosticBuilder, MultiSpan};\n use rustc_hir as hir;\n use rustc_hir::{intravisit, HirId};\n use rustc_middle::hir::nested_filter;\n use rustc_middle::lint::{\n-    struct_lint_level, LevelAndSource, LintDiagnosticBuilder, LintExpectation, LintLevelMap,\n-    LintLevelSets, LintLevelSource, LintSet, LintStackIndex, COMMAND_LINE,\n+    struct_lint_level, LevelAndSource, LintExpectation, LintLevelMap, LintLevelSets,\n+    LintLevelSource, LintSet, LintStackIndex, COMMAND_LINE,\n };\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{RegisteredTools, TyCtxt};"}, {"sha": "4b156de410d88efcb57b2745fad3b5262c0f9602", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=2874f09534b39b98b23a649e8300e8bdd2fb1823", "patch": "@@ -2,10 +2,7 @@ use std::cmp;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n-use rustc_errors::{\n-    Diagnostic, DiagnosticBuilder, DiagnosticId, DiagnosticMessage, EmissionGuarantee,\n-    ErrorGuaranteed, MultiSpan,\n-};\n+use rustc_errors::{Diagnostic, DiagnosticId, LintDiagnosticBuilder, MultiSpan};\n use rustc_hir::HirId;\n use rustc_index::vec::IndexVec;\n use rustc_query_system::ich::StableHashingContext;\n@@ -228,28 +225,6 @@ impl LintExpectation {\n     }\n }\n \n-pub struct LintDiagnosticBuilder<'a, G: EmissionGuarantee>(DiagnosticBuilder<'a, G>);\n-\n-impl<'a, G: EmissionGuarantee> LintDiagnosticBuilder<'a, G> {\n-    /// Return the inner `DiagnosticBuilder`, first setting the primary message to `msg`.\n-    pub fn build(mut self, msg: impl Into<DiagnosticMessage>) -> DiagnosticBuilder<'a, G> {\n-        self.0.set_primary_message(msg);\n-        self.0.set_is_lint();\n-        self.0\n-    }\n-\n-    /// Create a `LintDiagnosticBuilder` from some existing `DiagnosticBuilder`.\n-    pub fn new(err: DiagnosticBuilder<'a, G>) -> LintDiagnosticBuilder<'a, G> {\n-        LintDiagnosticBuilder(err)\n-    }\n-}\n-\n-impl<'a> LintDiagnosticBuilder<'a, ErrorGuaranteed> {\n-    pub fn forget_guarantee(self) -> LintDiagnosticBuilder<'a, ()> {\n-        LintDiagnosticBuilder(self.0.forget_guarantee())\n-    }\n-}\n-\n pub fn explain_lint_level_source(\n     lint: &'static Lint,\n     level: Level,"}, {"sha": "e0942f86f16889db0b5bbe32ca57d67b19639045", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=2874f09534b39b98b23a649e8300e8bdd2fb1823", "patch": "@@ -4,7 +4,7 @@ use crate::arena::Arena;\n use crate::dep_graph::{DepGraph, DepKind, DepKindStruct};\n use crate::hir::place::Place as HirPlace;\n use crate::infer::canonical::{Canonical, CanonicalVarInfo, CanonicalVarInfos};\n-use crate::lint::{struct_lint_level, LintDiagnosticBuilder, LintLevelSource};\n+use crate::lint::{struct_lint_level, LintLevelSource};\n use crate::middle::codegen_fn_attrs::CodegenFnAttrs;\n use crate::middle::resolve_lifetime;\n use crate::middle::stability;\n@@ -34,7 +34,7 @@ use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::steal::Steal;\n use rustc_data_structures::sync::{self, Lock, Lrc, WorkerLocal};\n use rustc_data_structures::vec_map::VecMap;\n-use rustc_errors::{ErrorGuaranteed, MultiSpan};\n+use rustc_errors::{ErrorGuaranteed, LintDiagnosticBuilder, MultiSpan};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, LocalDefId, LOCAL_CRATE};"}, {"sha": "8838b14c53a589898278d121d398a475dcba4320", "filename": "compiler/rustc_mir_transform/src/check_const_item_mutation.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_const_item_mutation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_const_item_mutation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_const_item_mutation.rs?ref=2874f09534b39b98b23a649e8300e8bdd2fb1823", "patch": "@@ -1,5 +1,4 @@\n-use rustc_errors::DiagnosticBuilder;\n-use rustc_middle::lint::LintDiagnosticBuilder;\n+use rustc_errors::{DiagnosticBuilder, LintDiagnosticBuilder};\n use rustc_middle::mir::visit::Visitor;\n use rustc_middle::mir::*;\n use rustc_middle::ty::TyCtxt;"}, {"sha": "7efb0360b7f25c7582108dddea2481ced0a445d6", "filename": "compiler/rustc_trait_selection/src/traits/specialize/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2874f09534b39b98b23a649e8300e8bdd2fb1823/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs?ref=2874f09534b39b98b23a649e8300e8bdd2fb1823", "patch": "@@ -16,9 +16,8 @@ use crate::infer::{InferCtxt, InferOk, TyCtxtInferExt};\n use crate::traits::select::IntercrateAmbiguityCause;\n use crate::traits::{self, coherence, FutureCompatOverlapErrorKind, ObligationCause, TraitEngine};\n use rustc_data_structures::fx::FxHashSet;\n-use rustc_errors::{struct_span_err, EmissionGuarantee};\n+use rustc_errors::{struct_span_err, EmissionGuarantee, LintDiagnosticBuilder};\n use rustc_hir::def_id::{DefId, LocalDefId};\n-use rustc_middle::lint::LintDiagnosticBuilder;\n use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use rustc_middle::ty::{self, ImplSubject, TyCtxt};\n use rustc_session::lint::builtin::COHERENCE_LEAK_CHECK;"}, {"sha": "8bf0971ccb5a566643eb30c30bfbb5cabbc3edd4", "filename": "src/librustdoc/passes/check_code_block_syntax.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2874f09534b39b98b23a649e8300e8bdd2fb1823/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2874f09534b39b98b23a649e8300e8bdd2fb1823/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs?ref=2874f09534b39b98b23a649e8300e8bdd2fb1823", "patch": "@@ -1,7 +1,8 @@\n //! Validates syntax inside Rust code blocks (\\`\\`\\`rust).\n use rustc_data_structures::sync::{Lock, Lrc};\n-use rustc_errors::{emitter::Emitter, Applicability, Diagnostic, Handler, LazyFallbackBundle};\n-use rustc_middle::lint::LintDiagnosticBuilder;\n+use rustc_errors::{\n+    emitter::Emitter, Applicability, Diagnostic, Handler, LazyFallbackBundle, LintDiagnosticBuilder,\n+};\n use rustc_parse::parse_stream_from_source_str;\n use rustc_session::parse::ParseSess;\n use rustc_span::hygiene::{AstPass, ExpnData, ExpnKind, LocalExpnId};"}]}