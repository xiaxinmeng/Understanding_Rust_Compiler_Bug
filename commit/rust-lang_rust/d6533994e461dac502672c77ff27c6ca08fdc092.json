{"sha": "d6533994e461dac502672c77ff27c6ca08fdc092", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2NTMzOTk0ZTQ2MWRhYzUwMjY3MmM3N2ZmMjdjNmNhMDhmZGMwOTI=", "commit": {"author": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2019-06-18T15:50:57Z"}, "committer": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2019-06-19T06:28:50Z"}, "message": "fix: box_pattern\n\nChange-Id: I45a856d74fb616d3bce33050f9e69d327186bd59", "tree": {"sha": "70c83566743f087a987f09f0d64f293ac6fda0d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70c83566743f087a987f09f0d64f293ac6fda0d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6533994e461dac502672c77ff27c6ca08fdc092", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6533994e461dac502672c77ff27c6ca08fdc092", "html_url": "https://github.com/rust-lang/rust/commit/d6533994e461dac502672c77ff27c6ca08fdc092", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6533994e461dac502672c77ff27c6ca08fdc092/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5999733ca60e37c54d761b0a669e154b97b121b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5999733ca60e37c54d761b0a669e154b97b121b1", "html_url": "https://github.com/rust-lang/rust/commit/5999733ca60e37c54d761b0a669e154b97b121b1"}], "stats": {"total": 105, "additions": 94, "deletions": 11}, "files": [{"sha": "795dccea15201eca6752676ad15384a43ddea052", "filename": "crates/ra_parser/src/grammar/expressions.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=d6533994e461dac502672c77ff27c6ca08fdc092", "patch": "@@ -583,8 +583,3 @@ pub(crate) fn named_field_list(p: &mut Parser) {\n     p.expect(T!['}']);\n     m.complete(p, NAMED_FIELD_LIST);\n }\n-\n-// test box_syntax\n-// fn foo() {\n-//     let x = box 1i32;\n-// }"}, {"sha": "41be283d00af9f2c9900c0dd8a5f65059a867444", "filename": "crates/ra_parser/src/grammar/expressions/atom.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=d6533994e461dac502672c77ff27c6ca08fdc092", "patch": "@@ -74,6 +74,7 @@ pub(super) fn atom_expr(p: &mut Parser, r: Restrictions) -> Option<(CompletedMar\n         T![if] => if_expr(p),\n \n         T![loop] => loop_expr(p, None),\n+        T![box] => box_expr(p, None),\n         T![for] => for_expr(p, None),\n         T![while] => while_expr(p, None),\n         T![try] => try_block_expr(p, None),\n@@ -507,3 +508,17 @@ fn try_block_expr(p: &mut Parser, m: Option<Marker>) -> CompletedMarker {\n     block(p);\n     m.complete(p, TRY_EXPR)\n }\n+\n+// test box_expr\n+// fn foo() {\n+//     let x = box 1i32;\n+// }\n+fn box_expr(p: &mut Parser, m: Option<Marker>) -> CompletedMarker {\n+    assert!(p.at(T![box]));\n+    let m = m.unwrap_or_else(|| p.start());\n+    p.bump();\n+    if p.at_ts(EXPR_FIRST) {\n+        expr(p);\n+    }\n+    m.complete(p, BOX_EXPR)\n+}"}, {"sha": "46034942a93ec6e0a31859aac6373975031ffe04", "filename": "crates/ra_parser/src/grammar/patterns.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=d6533994e461dac502672c77ff27c6ca08fdc092", "patch": "@@ -60,6 +60,7 @@ fn atom_pat(p: &mut Parser, recovery_set: TokenSet) -> Option<CompletedMarker> {\n     let la1 = p.nth(1);\n     if la0 == T![ref]\n         || la0 == T![mut]\n+        || la0 == T![box]\n         || (la0 == IDENT && !(la1 == T![::] || la1 == T!['('] || la1 == T!['{'] || la1 == T![!]))\n     {\n         return Some(bind_pat(p, true));\n@@ -260,9 +261,11 @@ fn pat_list(p: &mut Parser, ket: SyntaxKind) {\n //     let ref mut d = ();\n //     let e @ _ = ();\n //     let ref mut f @ g @ _ = ();\n+//     let box i = Box::new(1i32);\n // }\n fn bind_pat(p: &mut Parser, with_at: bool) -> CompletedMarker {\n     let m = p.start();\n+    p.eat(T![box]);\n     p.eat(T![ref]);\n     p.eat(T![mut]);\n     name(p);"}, {"sha": "374fd5aec584e55b5de020ee7c3d65c76b019aac", "filename": "crates/ra_parser/src/syntax_kind/generated.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=d6533994e461dac502672c77ff27c6ca08fdc092", "patch": "@@ -104,6 +104,7 @@ pub enum SyntaxKind {\n     MOVE_KW,\n     RETURN_KW,\n     TRY_KW,\n+    BOX_KW,\n     AUTO_KW,\n     DEFAULT_KW,\n     EXISTENTIAL_KW,\n@@ -187,6 +188,7 @@ pub enum SyntaxKind {\n     NAMED_FIELD_LIST,\n     NAMED_FIELD,\n     TRY_BLOCK_EXPR,\n+    BOX_EXPR,\n     CALL_EXPR,\n     INDEX_EXPR,\n     METHOD_CALL_EXPR,\n@@ -335,6 +337,7 @@ macro_rules! T {\n     (move) => { $crate::SyntaxKind::MOVE_KW };\n     (return) => { $crate::SyntaxKind::RETURN_KW };\n     (try) => { $crate::SyntaxKind::TRY_KW };\n+    (box) => { $crate::SyntaxKind::BOX_KW };\n     (auto) => { $crate::SyntaxKind::AUTO_KW };\n     (default) => { $crate::SyntaxKind::DEFAULT_KW };\n     (existential) => { $crate::SyntaxKind::EXISTENTIAL_KW };\n@@ -394,6 +397,7 @@ impl SyntaxKind {\n             | MOVE_KW\n             | RETURN_KW\n             | TRY_KW\n+            | BOX_KW\n             | AUTO_KW\n             | DEFAULT_KW\n             | EXISTENTIAL_KW\n@@ -567,6 +571,7 @@ impl SyntaxKind {\n             MOVE_KW => &SyntaxInfo { name: \"MOVE_KW\" },\n             RETURN_KW => &SyntaxInfo { name: \"RETURN_KW\" },\n             TRY_KW => &SyntaxInfo { name: \"TRY_KW\" },\n+            BOX_KW => &SyntaxInfo { name: \"BOX_KW\" },\n             AUTO_KW => &SyntaxInfo { name: \"AUTO_KW\" },\n             DEFAULT_KW => &SyntaxInfo { name: \"DEFAULT_KW\" },\n             EXISTENTIAL_KW => &SyntaxInfo { name: \"EXISTENTIAL_KW\" },\n@@ -650,6 +655,7 @@ impl SyntaxKind {\n             NAMED_FIELD_LIST => &SyntaxInfo { name: \"NAMED_FIELD_LIST\" },\n             NAMED_FIELD => &SyntaxInfo { name: \"NAMED_FIELD\" },\n             TRY_BLOCK_EXPR => &SyntaxInfo { name: \"TRY_BLOCK_EXPR\" },\n+            BOX_EXPR => &SyntaxInfo { name: \"BOX_EXPR\" },\n             CALL_EXPR => &SyntaxInfo { name: \"CALL_EXPR\" },\n             INDEX_EXPR => &SyntaxInfo { name: \"INDEX_EXPR\" },\n             METHOD_CALL_EXPR => &SyntaxInfo { name: \"METHOD_CALL_EXPR\" },\n@@ -745,6 +751,7 @@ impl SyntaxKind {\n             \"move\" => MOVE_KW,\n             \"return\" => RETURN_KW,\n             \"try\" => TRY_KW,\n+            \"box\" => BOX_KW,\n             _ => return None,\n         };\n         Some(kw)"}, {"sha": "6c075a700f78eab9ebbc9f08260c40aa0e1f1363", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=d6533994e461dac502672c77ff27c6ca08fdc092", "patch": "@@ -96,6 +96,7 @@ Grammar(\n         \"move\",\n         \"return\",\n         \"try\",\n+        \"box\",\n     ],\n     contextual_keywords: [\n         \"auto\",\n@@ -192,6 +193,7 @@ Grammar(\n         \"NAMED_FIELD_LIST\",\n         \"NAMED_FIELD\",\n         \"TRY_BLOCK_EXPR\",\n+        \"BOX_EXPR\",\n \n         // postfix\n         \"CALL_EXPR\","}, {"sha": "5a93469af59a8bb4a5e3b663b6fa2bc7f0668ce4", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0112_bind_pat.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0112_bind_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0112_bind_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0112_bind_pat.rs?ref=d6533994e461dac502672c77ff27c6ca08fdc092", "patch": "@@ -5,4 +5,5 @@ fn main() {\n     let ref mut d = ();\n     let e @ _ = ();\n     let ref mut f @ g @ _ = ();\n+    let box i = Box::new(1i32);\n }"}, {"sha": "189254a19a5f172c42bd2b3d7fbde8f6b694d714", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0112_bind_pat.txt", "status": "modified", "additions": 35, "deletions": 6, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0112_bind_pat.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0112_bind_pat.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0112_bind_pat.txt?ref=d6533994e461dac502672c77ff27c6ca08fdc092", "patch": "@@ -1,5 +1,5 @@\n-SOURCE_FILE@[0; 146)\n-  FN_DEF@[0; 145)\n+SOURCE_FILE@[0; 178)\n+  FN_DEF@[0; 177)\n     FN_KW@[0; 2) \"fn\"\n     WHITESPACE@[2; 3) \" \"\n     NAME@[3; 7)\n@@ -8,7 +8,7 @@ SOURCE_FILE@[0; 146)\n       L_PAREN@[7; 8) \"(\"\n       R_PAREN@[8; 9) \")\"\n     WHITESPACE@[9; 10) \" \"\n-    BLOCK@[10; 145)\n+    BLOCK@[10; 177)\n       L_CURLY@[10; 11) \"{\"\n       WHITESPACE@[11; 16) \"\\n    \"\n       LET_STMT@[16; 27)\n@@ -122,6 +122,35 @@ SOURCE_FILE@[0; 146)\n           L_PAREN@[140; 141) \"(\"\n           R_PAREN@[141; 142) \")\"\n         SEMI@[142; 143) \";\"\n-      WHITESPACE@[143; 144) \"\\n\"\n-      R_CURLY@[144; 145) \"}\"\n-  WHITESPACE@[145; 146) \"\\n\"\n+      WHITESPACE@[143; 148) \"\\n    \"\n+      LET_STMT@[148; 175)\n+        LET_KW@[148; 151) \"let\"\n+        WHITESPACE@[151; 152) \" \"\n+        BIND_PAT@[152; 157)\n+          BOX_KW@[152; 155) \"box\"\n+          WHITESPACE@[155; 156) \" \"\n+          NAME@[156; 157)\n+            IDENT@[156; 157) \"i\"\n+        WHITESPACE@[157; 158) \" \"\n+        EQ@[158; 159) \"=\"\n+        WHITESPACE@[159; 160) \" \"\n+        CALL_EXPR@[160; 174)\n+          PATH_EXPR@[160; 168)\n+            PATH@[160; 168)\n+              PATH@[160; 163)\n+                PATH_SEGMENT@[160; 163)\n+                  NAME_REF@[160; 163)\n+                    IDENT@[160; 163) \"Box\"\n+              COLONCOLON@[163; 165) \"::\"\n+              PATH_SEGMENT@[165; 168)\n+                NAME_REF@[165; 168)\n+                  IDENT@[165; 168) \"new\"\n+          ARG_LIST@[168; 174)\n+            L_PAREN@[168; 169) \"(\"\n+            LITERAL@[169; 173)\n+              INT_NUMBER@[169; 173) \"1i32\"\n+            R_PAREN@[173; 174) \")\"\n+        SEMI@[174; 175) \";\"\n+      WHITESPACE@[175; 176) \"\\n\"\n+      R_CURLY@[176; 177) \"}\"\n+  WHITESPACE@[177; 178) \"\\n\""}, {"sha": "e69c81e22a93157176038cb14786d4c3b8c1aa23", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0132_box_expr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0132_box_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0132_box_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0132_box_expr.rs?ref=d6533994e461dac502672c77ff27c6ca08fdc092", "previous_filename": "crates/ra_syntax/tests/data/parser/inline/ok/0132_box_syntax.rs"}, {"sha": "f4eeb7e24ede691a5e9a12798a8caf62e347ec1b", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0132_box_expr.txt", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0132_box_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d6533994e461dac502672c77ff27c6ca08fdc092/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0132_box_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0132_box_expr.txt?ref=d6533994e461dac502672c77ff27c6ca08fdc092", "patch": "@@ -0,0 +1,31 @@\n+SOURCE_FILE@[0; 35)\n+  FN_DEF@[0; 34)\n+    FN_KW@[0; 2) \"fn\"\n+    WHITESPACE@[2; 3) \" \"\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7) \"(\"\n+      R_PAREN@[7; 8) \")\"\n+    WHITESPACE@[8; 9) \" \"\n+    BLOCK@[9; 34)\n+      L_CURLY@[9; 10) \"{\"\n+      WHITESPACE@[10; 15) \"\\n    \"\n+      LET_STMT@[15; 32)\n+        LET_KW@[15; 18) \"let\"\n+        WHITESPACE@[18; 19) \" \"\n+        BIND_PAT@[19; 20)\n+          NAME@[19; 20)\n+            IDENT@[19; 20) \"x\"\n+        WHITESPACE@[20; 21) \" \"\n+        EQ@[21; 22) \"=\"\n+        WHITESPACE@[22; 23) \" \"\n+        BOX_EXPR@[23; 31)\n+          BOX_KW@[23; 26) \"box\"\n+          WHITESPACE@[26; 27) \" \"\n+          LITERAL@[27; 31)\n+            INT_NUMBER@[27; 31) \"1i32\"\n+        SEMI@[31; 32) \";\"\n+      WHITESPACE@[32; 33) \"\\n\"\n+      R_CURLY@[33; 34) \"}\"\n+  WHITESPACE@[34; 35) \"\\n\""}]}