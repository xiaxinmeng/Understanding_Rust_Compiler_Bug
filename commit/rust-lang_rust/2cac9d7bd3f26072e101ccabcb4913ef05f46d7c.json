{"sha": "2cac9d7bd3f26072e101ccabcb4913ef05f46d7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYWM5ZDdiZDNmMjYwNzJlMTAxY2NhYmNiNDkxM2VmMDVmNDZkN2M=", "commit": {"author": {"name": "Jack O'Connor", "email": "oconnor663@gmail.com", "date": "2016-01-30T18:44:45Z"}, "committer": {"name": "Jack O'Connor", "email": "oconnor663@gmail.com", "date": "2016-02-16T02:50:30Z"}, "message": "clarify how insert() doesn't update keys\n\nThe first time I read the docs for `insert()`, I thought it was saying\nit didn't update existing *values*, and I was confused. Reword the docs\nto make it clear that `insert()` does update values.", "tree": {"sha": "596f2c2db9eb2077198e574e233de4fb4150ba4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/596f2c2db9eb2077198e574e233de4fb4150ba4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cac9d7bd3f26072e101ccabcb4913ef05f46d7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cac9d7bd3f26072e101ccabcb4913ef05f46d7c", "html_url": "https://github.com/rust-lang/rust/commit/2cac9d7bd3f26072e101ccabcb4913ef05f46d7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cac9d7bd3f26072e101ccabcb4913ef05f46d7c/comments", "author": {"login": "oconnor663", "id": 860932, "node_id": "MDQ6VXNlcjg2MDkzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/860932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oconnor663", "html_url": "https://github.com/oconnor663", "followers_url": "https://api.github.com/users/oconnor663/followers", "following_url": "https://api.github.com/users/oconnor663/following{/other_user}", "gists_url": "https://api.github.com/users/oconnor663/gists{/gist_id}", "starred_url": "https://api.github.com/users/oconnor663/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oconnor663/subscriptions", "organizations_url": "https://api.github.com/users/oconnor663/orgs", "repos_url": "https://api.github.com/users/oconnor663/repos", "events_url": "https://api.github.com/users/oconnor663/events{/privacy}", "received_events_url": "https://api.github.com/users/oconnor663/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oconnor663", "id": 860932, "node_id": "MDQ6VXNlcjg2MDkzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/860932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oconnor663", "html_url": "https://github.com/oconnor663", "followers_url": "https://api.github.com/users/oconnor663/followers", "following_url": "https://api.github.com/users/oconnor663/following{/other_user}", "gists_url": "https://api.github.com/users/oconnor663/gists{/gist_id}", "starred_url": "https://api.github.com/users/oconnor663/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oconnor663/subscriptions", "organizations_url": "https://api.github.com/users/oconnor663/orgs", "repos_url": "https://api.github.com/users/oconnor663/repos", "events_url": "https://api.github.com/users/oconnor663/events{/privacy}", "received_events_url": "https://api.github.com/users/oconnor663/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17d284b4b5af8aa2d58c3bf05b937d5b9d1adeb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/17d284b4b5af8aa2d58c3bf05b937d5b9d1adeb0", "html_url": "https://github.com/rust-lang/rust/commit/17d284b4b5af8aa2d58c3bf05b937d5b9d1adeb0"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "7207e7b151c1eae3966022d942574d4cc9a672c2", "filename": "src/libcollections/btree/map.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2cac9d7bd3f26072e101ccabcb4913ef05f46d7c/src%2Flibcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cac9d7bd3f26072e101ccabcb4913ef05f46d7c/src%2Flibcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fmap.rs?ref=2cac9d7bd3f26072e101ccabcb4913ef05f46d7c", "patch": "@@ -375,9 +375,10 @@ impl<K: Ord, V> BTreeMap<K, V> {\n     ///\n     /// If the map did not have this key present, `None` is returned.\n     ///\n-    /// If the map did have this key present, the key is not updated, the\n-    /// value is updated and the old value is returned.\n-    /// See the [module-level documentation] for more.\n+    /// If the map did have this key present, the value is updated, and the old\n+    /// value is returned. The key is not updated, though; this matters for\n+    /// types that can be `==` without being identical. See the [module-level\n+    /// documentation] for more.\n     ///\n     /// [module-level documentation]: index.html#insert-and-complex-keys\n     ///"}, {"sha": "7220690469c2a62080bb6170efdf23f7e2f2baa8", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2cac9d7bd3f26072e101ccabcb4913ef05f46d7c/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cac9d7bd3f26072e101ccabcb4913ef05f46d7c/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=2cac9d7bd3f26072e101ccabcb4913ef05f46d7c", "patch": "@@ -1157,9 +1157,10 @@ impl<K, V, S> HashMap<K, V, S>\n     ///\n     /// If the map did not have this key present, `None` is returned.\n     ///\n-    /// If the map did have this key present, the key is not updated, the\n-    /// value is updated and the old value is returned.\n-    /// See the [module-level documentation] for more.\n+    /// If the map did have this key present, the value is updated, and the old\n+    /// value is returned. The key is not updated, though; this matters for\n+    /// types that can be `==` without being identical. See the [module-level\n+    /// documentation] for more.\n     ///\n     /// [module-level documentation]: index.html#insert-and-complex-keys\n     ///"}, {"sha": "06c14157606b2a40b7f2b9a96f6487cea445bd93", "filename": "src/libstd/collections/mod.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2cac9d7bd3f26072e101ccabcb4913ef05f46d7c/src%2Flibstd%2Fcollections%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cac9d7bd3f26072e101ccabcb4913ef05f46d7c/src%2Flibstd%2Fcollections%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fmod.rs?ref=2cac9d7bd3f26072e101ccabcb4913ef05f46d7c", "patch": "@@ -397,12 +397,15 @@\n //! }\n //!\n //! let mut map = BTreeMap::new();\n-//! map.insert(Foo { a: 1, b: \"baz\" }, ());\n+//! map.insert(Foo { a: 1, b: \"baz\" }, 99);\n //!\n //! // We already have a Foo with an a of 1, so this will be updating the value.\n-//! map.insert(Foo { a: 1, b: \"xyz\" }, ());\n+//! map.insert(Foo { a: 1, b: \"xyz\" }, 100);\n //!\n-//! // ... but the key hasn't changed. b is still \"baz\", not \"xyz\"\n+//! // The value has been updated...\n+//! assert_eq!(map.values().next().unwrap(), &100);\n+//!\n+//! // ...but the key hasn't changed. b is still \"baz\", not \"xyz\".\n //! assert_eq!(map.keys().next().unwrap().b, \"baz\");\n //! ```\n "}]}