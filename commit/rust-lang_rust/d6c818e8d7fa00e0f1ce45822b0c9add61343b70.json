{"sha": "d6c818e8d7fa00e0f1ce45822b0c9add61343b70", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2YzgxOGU4ZDdmYTAwZTBmMWNlNDU4MjJiMGM5YWRkNjEzNDNiNzA=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2019-07-06T16:52:26Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2019-07-12T22:16:40Z"}, "message": "Update CPU printing for SubtargetSubTypeKV\n\nCPUs now use SubtargetSubTypeKV rather than SubtargetFeatureKV and\nno longer have a description.", "tree": {"sha": "695d98bb359fedbd0a076cfa1d96f8f3a0c78dda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/695d98bb359fedbd0a076cfa1d96f8f3a0c78dda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6c818e8d7fa00e0f1ce45822b0c9add61343b70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6c818e8d7fa00e0f1ce45822b0c9add61343b70", "html_url": "https://github.com/rust-lang/rust/commit/d6c818e8d7fa00e0f1ce45822b0c9add61343b70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6c818e8d7fa00e0f1ce45822b0c9add61343b70/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "624fca6c12796ae0025161ca15f70d20f732494a", "url": "https://api.github.com/repos/rust-lang/rust/commits/624fca6c12796ae0025161ca15f70d20f732494a", "html_url": "https://github.com/rust-lang/rust/commit/624fca6c12796ae0025161ca15f70d20f732494a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a2c427a9dba125f215d14fadeb3671d4014606f0", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6c818e8d7fa00e0f1ce45822b0c9add61343b70/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/d6c818e8d7fa00e0f1ce45822b0c9add61343b70/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=d6c818e8d7fa00e0f1ce45822b0c9add61343b70", "patch": "@@ -266,8 +266,8 @@ static Optional<Reloc::Model> fromRust(LLVMRustRelocMode RustReloc) {\n \n #ifdef LLVM_RUSTLLVM\n /// getLongestEntryLength - Return the length of the longest entry in the table.\n-///\n-static size_t getLongestEntryLength(ArrayRef<SubtargetFeatureKV> Table) {\n+template<typename KV>\n+static size_t getLongestEntryLength(ArrayRef<KV> Table) {\n   size_t MaxLen = 0;\n   for (auto &I : Table)\n     MaxLen = std::max(MaxLen, std::strlen(I.Key));\n@@ -279,7 +279,7 @@ extern \"C\" void LLVMRustPrintTargetCPUs(LLVMTargetMachineRef TM) {\n   const MCSubtargetInfo *MCInfo = Target->getMCSubtargetInfo();\n   const Triple::ArchType HostArch = Triple(sys::getProcessTriple()).getArch();\n   const Triple::ArchType TargetArch = Target->getTargetTriple().getArch();\n-  const ArrayRef<SubtargetFeatureKV> CPUTable = MCInfo->getCPUTable();\n+  const ArrayRef<SubtargetSubTypeKV> CPUTable = MCInfo->getCPUTable();\n   unsigned MaxCPULen = getLongestEntryLength(CPUTable);\n \n   printf(\"Available CPUs for this target:\\n\");\n@@ -289,7 +289,7 @@ extern \"C\" void LLVMRustPrintTargetCPUs(LLVMTargetMachineRef TM) {\n       MaxCPULen, \"native\", (int)HostCPU.size(), HostCPU.data());\n   }\n   for (auto &CPU : CPUTable)\n-    printf(\"    %-*s - %s.\\n\", MaxCPULen, CPU.Key, CPU.Desc);\n+    printf(\"    %-*s\\n\", MaxCPULen, CPU.Key);\n   printf(\"\\n\");\n }\n "}]}