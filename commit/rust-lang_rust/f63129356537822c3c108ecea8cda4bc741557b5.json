{"sha": "f63129356537822c3c108ecea8cda4bc741557b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2MzEyOTM1NjUzNzgyMmMzYzEwOGVjZWE4Y2RhNGJjNzQxNTU3YjU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-09-16T10:34:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-16T10:34:29Z"}, "message": "Rollup merge of #76717 - ehuss:fix-rustc-book-libdir, r=Mark-Simulacrum\n\nFix generating rustc docs with non-default lib directory.\n\nIf `libdir` is set in `config.toml`, then the tool to generate the rustc docs was unable to run `rustc` because it could not find the shared libraries. The solution is to set the dylib search path to include the libdir.\n\nI changed the API of `add_rustc_lib_path` to take `Command` instead of `Cargo` to try to share the code in several places. This is how it worked before https://github.com/rust-lang/rust/pull/64316, and I think this still retains the spirit of that change.\n\nFixes #76702", "tree": {"sha": "05487dfb7b864c32f3391dcd8d964e7f86459a39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05487dfb7b864c32f3391dcd8d964e7f86459a39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f63129356537822c3c108ecea8cda4bc741557b5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfYeo1CRBK7hj4Ov3rIwAAdHIIAEFPjV8RDStiBBYstzVdzg32\nFYc0krhXUhNM2qtmXg7y9tvyneow4mJlT2DIaZN6/Zc5ewzexIGdp8owdy3P6W9d\neHJouLhoUs9ZlxdEYoYStOsJpvhzuDKOC9gsbfBWZ3QivDScz0aGajlUs21Q5ZTc\nKDU7I+XEpsnvRdkbz+VhArUNvMxZhDpnMPWefso+YpH2tJV+CSMuo6Kk6+10oFO0\nbFo+2w5vKh7fQVjB19qTVBVbyF0nkbqrqGZA6TwjuxG7n9ypEtFHaifr8GecgOmj\nM6l1uvorccjzBw4j6RI1yt8QdohlYipa63H1/dzPClLNyYj1g4HFJ5HnIfHVQuU=\n=LnJ5\n-----END PGP SIGNATURE-----\n", "payload": "tree 05487dfb7b864c32f3391dcd8d964e7f86459a39\nparent b25261f40ce029af95a9146783eace53441d2e71\nparent 9dad90814543bdd10b1989020edad70939b0e869\nauthor Dylan DPC <dylan.dpc@gmail.com> 1600252469 +0200\ncommitter GitHub <noreply@github.com> 1600252469 +0200\n\nRollup merge of #76717 - ehuss:fix-rustc-book-libdir, r=Mark-Simulacrum\n\nFix generating rustc docs with non-default lib directory.\n\nIf `libdir` is set in `config.toml`, then the tool to generate the rustc docs was unable to run `rustc` because it could not find the shared libraries. The solution is to set the dylib search path to include the libdir.\n\nI changed the API of `add_rustc_lib_path` to take `Command` instead of `Cargo` to try to share the code in several places. This is how it worked before https://github.com/rust-lang/rust/pull/64316, and I think this still retains the spirit of that change.\n\nFixes #76702\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f63129356537822c3c108ecea8cda4bc741557b5", "html_url": "https://github.com/rust-lang/rust/commit/f63129356537822c3c108ecea8cda4bc741557b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f63129356537822c3c108ecea8cda4bc741557b5/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b25261f40ce029af95a9146783eace53441d2e71", "url": "https://api.github.com/repos/rust-lang/rust/commits/b25261f40ce029af95a9146783eace53441d2e71", "html_url": "https://github.com/rust-lang/rust/commit/b25261f40ce029af95a9146783eace53441d2e71"}, {"sha": "9dad90814543bdd10b1989020edad70939b0e869", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dad90814543bdd10b1989020edad70939b0e869", "html_url": "https://github.com/rust-lang/rust/commit/9dad90814543bdd10b1989020edad70939b0e869"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "140507eab66e66bf2786d2957638111e96e3d559", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f63129356537822c3c108ecea8cda4bc741557b5/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f63129356537822c3c108ecea8cda4bc741557b5/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=f63129356537822c3c108ecea8cda4bc741557b5", "patch": "@@ -683,15 +683,15 @@ impl<'a> Builder<'a> {\n \n     /// Adds the compiler's directory of dynamic libraries to `cmd`'s dynamic\n     /// library lookup path.\n-    pub fn add_rustc_lib_path(&self, compiler: Compiler, cmd: &mut Cargo) {\n+    pub fn add_rustc_lib_path(&self, compiler: Compiler, cmd: &mut Command) {\n         // Windows doesn't need dylib path munging because the dlls for the\n         // compiler live next to the compiler and the system will find them\n         // automatically.\n         if cfg!(windows) {\n             return;\n         }\n \n-        add_dylib_path(vec![self.rustc_libdir(compiler)], &mut cmd.command);\n+        add_dylib_path(vec![self.rustc_libdir(compiler)], cmd);\n     }\n \n     /// Gets a path to the compiler specified.\n@@ -1488,6 +1488,10 @@ impl Cargo {\n         self.command.env(key.as_ref(), value.as_ref());\n         self\n     }\n+\n+    pub fn add_rustc_lib_path(&mut self, builder: &Builder<'_>, compiler: Compiler) {\n+        builder.add_rustc_lib_path(compiler, &mut self.command);\n+    }\n }\n \n impl From<Cargo> for Command {"}, {"sha": "f90e76a4f4ea68f8a8ee331a125bc9c5c0f56f3c", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f63129356537822c3c108ecea8cda4bc741557b5/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f63129356537822c3c108ecea8cda4bc741557b5/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=f63129356537822c3c108ecea8cda4bc741557b5", "patch": "@@ -766,6 +766,10 @@ impl Step for RustcBook {\n         if builder.config.verbose() {\n             cmd.arg(\"--verbose\");\n         }\n+        // If the lib directories are in an unusual location (changed in\n+        // config.toml), then this needs to explicitly update the dylib search\n+        // path.\n+        builder.add_rustc_lib_path(self.compiler, &mut cmd);\n         builder.run(&mut cmd);\n         // Run rustbook/mdbook to generate the HTML pages.\n         builder.ensure(RustbookSrc {"}, {"sha": "ba5f75c49ac7769e2de63b3686afc88ec98ee89e", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f63129356537822c3c108ecea8cda4bc741557b5/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f63129356537822c3c108ecea8cda4bc741557b5/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=f63129356537822c3c108ecea8cda4bc741557b5", "patch": "@@ -270,7 +270,7 @@ impl Step for Rls {\n             &[],\n         );\n \n-        builder.add_rustc_lib_path(compiler, &mut cargo);\n+        cargo.add_rustc_lib_path(builder, compiler);\n         cargo.arg(\"--\").args(builder.config.cmd.test_args());\n \n         if try_run(builder, &mut cargo.into()) {\n@@ -328,7 +328,7 @@ impl Step for Rustfmt {\n         t!(fs::create_dir_all(&dir));\n         cargo.env(\"RUSTFMT_TEST_DIR\", dir);\n \n-        builder.add_rustc_lib_path(compiler, &mut cargo);\n+        cargo.add_rustc_lib_path(builder, compiler);\n \n         if try_run(builder, &mut cargo.into()) {\n             builder.save_toolstate(\"rustfmt\", ToolState::TestPass);\n@@ -449,7 +449,7 @@ impl Step for Miri {\n \n             cargo.arg(\"--\").args(builder.config.cmd.test_args());\n \n-            builder.add_rustc_lib_path(compiler, &mut cargo);\n+            cargo.add_rustc_lib_path(builder, compiler);\n \n             if !try_run(builder, &mut cargo.into()) {\n                 return;\n@@ -554,7 +554,7 @@ impl Step for Clippy {\n \n         cargo.arg(\"--\").args(builder.config.cmd.test_args());\n \n-        builder.add_rustc_lib_path(compiler, &mut cargo);\n+        cargo.add_rustc_lib_path(builder, compiler);\n \n         builder.run(&mut cargo.into());\n     }"}, {"sha": "92b3d186fa141a6294cf22f70a5a5649af9417ec", "filename": "src/tools/lint-docs/src/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f63129356537822c3c108ecea8cda4bc741557b5/src%2Ftools%2Flint-docs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f63129356537822c3c108ecea8cda4bc741557b5/src%2Ftools%2Flint-docs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flint-docs%2Fsrc%2Flib.rs?ref=f63129356537822c3c108ecea8cda4bc741557b5", "patch": "@@ -402,9 +402,12 @@ fn generate_lint_output(\n                 None => {\n                     let rendered: Vec<&str> =\n                         msgs.iter().filter_map(|msg| msg[\"rendered\"].as_str()).collect();\n+                    let non_json: Vec<&str> =\n+                        stderr.lines().filter(|line| !line.starts_with('{')).collect();\n                     Err(format!(\n-                        \"did not find lint `{}` in output of example, got:\\n{}\",\n+                        \"did not find lint `{}` in output of example, got:\\n{}\\n{}\",\n                         name,\n+                        non_json.join(\"\\n\"),\n                         rendered.join(\"\\n\")\n                     )\n                     .into())"}]}