{"sha": "2c60f42825e68d8133854d378d9550139c71d9b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNjBmNDI4MjVlNjhkODEzMzg1NGQzNzhkOTU1MDEzOWM3MWQ5YjQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-22T14:21:48Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-22T14:21:48Z"}, "message": "Separate defs from imports", "tree": {"sha": "758ae7afaa82f127f7967e53dcd373092aa9fc81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/758ae7afaa82f127f7967e53dcd373092aa9fc81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c60f42825e68d8133854d378d9550139c71d9b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c60f42825e68d8133854d378d9550139c71d9b4", "html_url": "https://github.com/rust-lang/rust/commit/2c60f42825e68d8133854d378d9550139c71d9b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c60f42825e68d8133854d378d9550139c71d9b4/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e69af8596262931f8e55b7f9203f65d14827e2d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e69af8596262931f8e55b7f9203f65d14827e2d8", "html_url": "https://github.com/rust-lang/rust/commit/e69af8596262931f8e55b7f9203f65d14827e2d8"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "b5c07ed5ff1465f4e3ed05df873bbe7e3c8ed1d5", "filename": "crates/ra_hir_def/src/item_scope.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2c60f42825e68d8133854d378d9550139c71d9b4/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c60f42825e68d8133854d378d9550139c71d9b4/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs?ref=2c60f42825e68d8133854d378d9550139c71d9b4", "patch": "@@ -10,6 +10,7 @@ use crate::{per_ns::PerNs, AdtId, BuiltinType, ImplId, MacroDefId, ModuleDefId,\n #[derive(Debug, Default, PartialEq, Eq)]\n pub struct ItemScope {\n     visible: FxHashMap<Name, Resolution>,\n+    defs: Vec<ModuleDefId>,\n     impls: Vec<ImplId>,\n     /// Macros visible in current module in legacy textual scope\n     ///\n@@ -53,11 +54,7 @@ impl ItemScope {\n     }\n \n     pub fn declarations(&self) -> impl Iterator<Item = ModuleDefId> + '_ {\n-        self.entries()\n-            .filter_map(|(_name, res)| if !res.import { Some(res.def) } else { None })\n-            .flat_map(|per_ns| {\n-                per_ns.take_types().into_iter().chain(per_ns.take_values().into_iter())\n-            })\n+        self.defs.iter().copied()\n     }\n \n     pub fn impls(&self) -> impl Iterator<Item = ImplId> + ExactSizeIterator + '_ {\n@@ -100,6 +97,10 @@ impl ItemScope {\n         })\n     }\n \n+    pub(crate) fn define_def(&mut self, def: ModuleDefId) {\n+        self.defs.push(def)\n+    }\n+\n     pub(crate) fn get_legacy_macro(&self, name: &Name) -> Option<MacroDefId> {\n         self.legacy_macros.get(name).copied()\n     }"}, {"sha": "745e31c0d33902e8d24589e26b52e59794a3b546", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c60f42825e68d8133854d378d9550139c71d9b4/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c60f42825e68d8133854d378d9550139c71d9b4/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=2c60f42825e68d8133854d378d9550139c71d9b4", "patch": "@@ -716,6 +716,7 @@ where\n         modules[self.module_id].children.insert(name.clone(), res);\n         let module = ModuleId { krate: self.def_collector.def_map.krate, local_id: res };\n         let def: ModuleDefId = module.into();\n+        self.def_collector.def_map.modules[self.module_id].scope.define_def(def);\n         let resolution = Resolution { def: def.into(), import: false };\n         self.def_collector.update(self.module_id, None, &[(name, resolution)]);\n         res\n@@ -775,6 +776,7 @@ where\n             .intern(self.def_collector.db)\n             .into(),\n         };\n+        self.def_collector.def_map.modules[self.module_id].scope.define_def(def);\n         let resolution = Resolution { def: def.into(), import: false };\n         self.def_collector.update(self.module_id, None, &[(name, resolution)])\n     }"}]}