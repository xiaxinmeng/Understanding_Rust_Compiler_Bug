{"sha": "c433b703ead56ec4dd05b5f3ad39301d27e19953", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MzNiNzAzZWFkNTZlYzRkZDA1YjVmM2FkMzkzMDFkMjdlMTk5NTM=", "commit": {"author": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-03-02T05:58:04Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-03-14T20:46:54Z"}, "message": "refactor derive-no-std test, add empty struct/enum", "tree": {"sha": "d694ae70b5200153a5c858890d275f44216ccb5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d694ae70b5200153a5c858890d275f44216ccb5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c433b703ead56ec4dd05b5f3ad39301d27e19953", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c433b703ead56ec4dd05b5f3ad39301d27e19953", "html_url": "https://github.com/rust-lang/rust/commit/c433b703ead56ec4dd05b5f3ad39301d27e19953", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c433b703ead56ec4dd05b5f3ad39301d27e19953/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d19f1b629918a556709e6b89a1929305db6449dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/d19f1b629918a556709e6b89a1929305db6449dc", "html_url": "https://github.com/rust-lang/rust/commit/d19f1b629918a556709e6b89a1929305db6449dc"}], "stats": {"total": 51, "additions": 37, "deletions": 14}, "files": [{"sha": "f083e10bfdb3262554bc098d30eb9edb5a26dfad", "filename": "src/test/auxiliary/derive-no-std.rs", "status": "renamed", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c433b703ead56ec4dd05b5f3ad39301d27e19953/src%2Ftest%2Fauxiliary%2Fderive-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c433b703ead56ec4dd05b5f3ad39301d27e19953/src%2Ftest%2Fauxiliary%2Fderive-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fderive-no-std.rs?ref=c433b703ead56ec4dd05b5f3ad39301d27e19953", "patch": "@@ -8,32 +8,33 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(rand, collections, rustc_private)]\n-#![no_std]\n+// no-prefer-dynamic\n \n-extern crate rand;\n-extern crate serialize as rustc_serialize;\n-extern crate collections;\n+#![crate_type = \"rlib\"]\n+#![no_std]\n \n // Issue #16803\n \n #[derive(Clone, Hash, PartialEq, Eq, PartialOrd, Ord,\n          Debug, Default, Copy)]\n-struct Foo {\n-    x: u32,\n+pub struct Foo {\n+    pub x: u32,\n }\n \n #[derive(Clone, Hash, PartialEq, Eq, PartialOrd, Ord,\n          Debug, Copy)]\n-enum Bar {\n+pub enum Bar {\n     Qux,\n     Quux(u32),\n }\n \n-enum Baz { A=0, B=5, }\n+#[derive(Clone, Hash, PartialEq, Eq, PartialOrd, Ord,\n+         Debug, Copy)]\n+pub enum Void {}\n+#[derive(Clone, Hash, PartialEq, Eq, PartialOrd, Ord,\n+         Debug, Copy)]\n+pub struct Empty;\n+#[derive(Clone, Hash, PartialEq, Eq, PartialOrd, Ord,\n+         Debug, Copy)]\n+pub struct AlsoEmpty {}\n \n-fn main() {\n-    Foo { x: 0 };\n-    Bar::Quux(3);\n-    Baz::A;\n-}", "previous_filename": "src/test/run-pass-fulldeps/derive-no-std.rs"}, {"sha": "0cbe4f4ebd0edc42bc59d8fb9bbb53b71e1b02ae", "filename": "src/test/run-pass/derive-no-std.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c433b703ead56ec4dd05b5f3ad39301d27e19953/src%2Ftest%2Frun-pass%2Fderive-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c433b703ead56ec4dd05b5f3ad39301d27e19953/src%2Ftest%2Frun-pass%2Fderive-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderive-no-std.rs?ref=c433b703ead56ec4dd05b5f3ad39301d27e19953", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:derive-no-std.rs\n+\n+extern crate derive_no_std;\n+use derive_no_std::*;\n+\n+fn main() {\n+    let f = Foo { x: 0 };\n+    assert_eq!(f.clone(), Foo::default());\n+\n+    assert!(Bar::Qux < Bar::Quux(42));\n+}\n+"}]}