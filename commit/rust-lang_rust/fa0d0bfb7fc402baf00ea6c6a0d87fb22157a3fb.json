{"sha": "fa0d0bfb7fc402baf00ea6c6a0d87fb22157a3fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMGQwYmZiN2ZjNDAyYmFmMDBlYTZjNmEwZDg3ZmIyMjE1N2EzZmI=", "commit": {"author": {"name": "Aramis Razzaghipour", "email": "aramisnoah@gmail.com", "date": "2021-05-24T03:16:08Z"}, "committer": {"name": "Aramis Razzaghipour", "email": "aramisnoah@gmail.com", "date": "2021-05-24T04:54:16Z"}, "message": "Add testing of foreign item highlighting", "tree": {"sha": "16ee852de7bb86049e4be0202c82d7096523918a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16ee852de7bb86049e4be0202c82d7096523918a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa0d0bfb7fc402baf00ea6c6a0d87fb22157a3fb", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEqQsXYYwP2wJc1ykb94j36ZATYAMFAmCrMZcACgkQ94j36ZAT\nYAMBNxAAiIjiLxJ0rkyqxQfz7RPOWlmOc2fpWYOEb1+GZaFtKypU1i7MzMyDIGj2\nlBnASIUslD0tBmfsBD8yqizzZc+AS3UHM/TCVRPRbxpV4scAOm9UxkuuBCI5HhMq\n9uK9VNwvRcc5MU1L4h9ig3D0mIX1A6EOXvE++FdTTb9H6OtTI7+AeTRP9Q7BLb0n\nl7IXgUv71p4MozRdp3mnDwxMyo3fYUCvsJy6kMUzdmo44F1nxySDgTHZMMXmz0wO\ndi0c9W3X2kft8b57thR6FMQ2ygRp1jS4xPiOMmHnlAMj8xNaAApFKZ7zO8fqZOxP\nbk6DYY+aQ4IeNEGdf0rLLD4o6vwJXSrQgdwTKu3Wj86toYCTNlyRpnGhuOByM4oP\n3olpQ+rzEWesek4G4IzUS8EE4yp/fSuBgxMtiw1YpbOZIa8UFP7lCLkitDAcYmBA\n3sube+N3DMpueZMiOg4u1M6iv8twWrUY2zS80tbgZxbdZukhauN4HciIp13hvP39\nTP94ED+1wFaRrYQTOFkOd32xj+UbPwk76hDv2TakI2jpyVLz2eWEsGuMvp+7Rt/C\nKgpeBBQpIdXX/B/pHMrAXovIdJVEgYMhCwrf+iP6c6JAC78KaWjKVBrgpP8roN4W\nKnS4jlKz4LQdQ2L47nNU4lhMHszcISw/rRoDWufvezMe1pnC7sQ=\n=Rps4\n-----END PGP SIGNATURE-----", "payload": "tree 16ee852de7bb86049e4be0202c82d7096523918a\nparent b4cddc0705665f549b7feaf9899d91cd6ced4931\nauthor Aramis Razzaghipour <aramisnoah@gmail.com> 1621826168 +1000\ncommitter Aramis Razzaghipour <aramisnoah@gmail.com> 1621832056 +1000\n\nAdd testing of foreign item highlighting\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa0d0bfb7fc402baf00ea6c6a0d87fb22157a3fb", "html_url": "https://github.com/rust-lang/rust/commit/fa0d0bfb7fc402baf00ea6c6a0d87fb22157a3fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa0d0bfb7fc402baf00ea6c6a0d87fb22157a3fb/comments", "author": {"login": "lunacookies", "id": 31783266, "node_id": "MDQ6VXNlcjMxNzgzMjY2", "avatar_url": "https://avatars.githubusercontent.com/u/31783266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lunacookies", "html_url": "https://github.com/lunacookies", "followers_url": "https://api.github.com/users/lunacookies/followers", "following_url": "https://api.github.com/users/lunacookies/following{/other_user}", "gists_url": "https://api.github.com/users/lunacookies/gists{/gist_id}", "starred_url": "https://api.github.com/users/lunacookies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lunacookies/subscriptions", "organizations_url": "https://api.github.com/users/lunacookies/orgs", "repos_url": "https://api.github.com/users/lunacookies/repos", "events_url": "https://api.github.com/users/lunacookies/events{/privacy}", "received_events_url": "https://api.github.com/users/lunacookies/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lunacookies", "id": 31783266, "node_id": "MDQ6VXNlcjMxNzgzMjY2", "avatar_url": "https://avatars.githubusercontent.com/u/31783266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lunacookies", "html_url": "https://github.com/lunacookies", "followers_url": "https://api.github.com/users/lunacookies/followers", "following_url": "https://api.github.com/users/lunacookies/following{/other_user}", "gists_url": "https://api.github.com/users/lunacookies/gists{/gist_id}", "starred_url": "https://api.github.com/users/lunacookies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lunacookies/subscriptions", "organizations_url": "https://api.github.com/users/lunacookies/orgs", "repos_url": "https://api.github.com/users/lunacookies/repos", "events_url": "https://api.github.com/users/lunacookies/events{/privacy}", "received_events_url": "https://api.github.com/users/lunacookies/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4cddc0705665f549b7feaf9899d91cd6ced4931", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4cddc0705665f549b7feaf9899d91cd6ced4931", "html_url": "https://github.com/rust-lang/rust/commit/b4cddc0705665f549b7feaf9899d91cd6ced4931"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "e65dd3ff9177b760189d3dd50dd20603f4ca82a9", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fa0d0bfb7fc402baf00ea6c6a0d87fb22157a3fb/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/fa0d0bfb7fc402baf00ea6c6a0d87fb22157a3fb/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=fa0d0bfb7fc402baf00ea6c6a0d87fb22157a3fb", "patch": "@@ -248,4 +248,20 @@\n <span class=\"brace\">}</span>\n \n <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration unsafe\">Dangerous</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-<span class=\"keyword\">impl</span> <span class=\"trait unsafe\">Dangerous</span> <span class=\"keyword\">for</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file\n+<span class=\"keyword\">impl</span> <span class=\"trait unsafe\">Dangerous</span> <span class=\"keyword\">for</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">use_foo_items</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">bob</span> <span class=\"operator\">=</span> <span class=\"module foreign\">foo</span><span class=\"operator\">::</span><span class=\"struct foreign\">Person</span> <span class=\"brace\">{</span>\n+        <span class=\"field foreign\">name</span><span class=\"colon\">:</span> <span class=\"string_literal\">\"Bob\"</span><span class=\"comma\">,</span>\n+        <span class=\"field foreign\">age</span><span class=\"colon\">:</span> <span class=\"module foreign\">foo</span><span class=\"operator\">::</span><span class=\"module foreign\">consts</span><span class=\"operator\">::</span><span class=\"constant foreign\">NUMBER</span><span class=\"comma\">,</span>\n+    <span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n+\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">control_flow</span> <span class=\"operator\">=</span> <span class=\"module foreign\">foo</span><span class=\"operator\">::</span><span class=\"function foreign\">identity</span><span class=\"parenthesis\">(</span><span class=\"module foreign\">foo</span><span class=\"operator\">::</span><span class=\"enum foreign\">ControlFlow</span><span class=\"operator\">::</span><span class=\"enum_variant foreign\">Continue</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+\n+    <span class=\"keyword control\">if</span> <span class=\"keyword\">let</span> <span class=\"module foreign\">foo</span><span class=\"operator\">::</span><span class=\"enum foreign\">ControlFlow</span><span class=\"operator\">::</span><span class=\"enum_variant foreign\">Die</span> <span class=\"operator\">=</span> <span class=\"variable\">control_flow</span> <span class=\"brace\">{</span>\n+        foo::<span class=\"macro\">die!</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"brace\">}</span>\n+<span class=\"brace\">}</span>\n+\n+\n+</code></pre>\n\\ No newline at end of file"}, {"sha": "be4447ebbf4c64d33825cd3be01e0575b1f90864", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/fa0d0bfb7fc402baf00ea6c6a0d87fb22157a3fb/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa0d0bfb7fc402baf00ea6c6a0d87fb22157a3fb/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=fa0d0bfb7fc402baf00ea6c6a0d87fb22157a3fb", "patch": "@@ -10,6 +10,7 @@ use crate::{fixture, FileRange, HlTag, TextRange};\n fn test_highlighting() {\n     check_highlighting(\n         r#\"\n+//- /main.rs crate:main deps:foo\n use inner::{self as inner_mod};\n mod inner {}\n \n@@ -222,6 +223,43 @@ async fn async_main() {\n \n unsafe trait Dangerous {}\n impl Dangerous for () {}\n+\n+fn use_foo_items() {\n+    let bob = foo::Person {\n+        name: \"Bob\",\n+        age: foo::consts::NUMBER,\n+    };\n+\n+    let control_flow = foo::identity(foo::ControlFlow::Continue);\n+\n+    if let foo::ControlFlow::Die = control_flow {\n+        foo::die!();\n+    }\n+}\n+\n+\n+//- /foo.rs crate:foo\n+pub struct Person {\n+    pub name: &'static str,\n+    pub age: u8,\n+}\n+\n+pub enum ControlFlow {\n+    Continue,\n+    Die,\n+}\n+\n+pub fn identity<T>(x: T) -> T { x }\n+\n+pub mod consts {\n+    pub const NUMBER: i64 = 92;\n+}\n+\n+macro_rules! die {\n+    () => {\n+        panic!();\n+    };\n+}\n \"#\n         .trim(),\n         expect_file![\"./test_data/highlighting.html\"],"}]}