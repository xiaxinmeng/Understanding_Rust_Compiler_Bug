{"sha": "34277fcddc41e924ffed7ddacb573d240854cff0", "node_id": "C_kwDOAAsO6NoAKDM0Mjc3ZmNkZGM0MWU5MjRmZmVkN2RkYWNiNTczZDI0MDg1NGNmZjA", "commit": {"author": {"name": "mejrs", "email": "", "date": "2022-11-29T15:50:28Z"}, "committer": {"name": "mejrs", "email": "", "date": "2022-11-29T16:33:51Z"}, "message": "Rebase", "tree": {"sha": "9b4a25156661025ad5d2f99f9b3bb1880919c865", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b4a25156661025ad5d2f99f9b3bb1880919c865"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34277fcddc41e924ffed7ddacb573d240854cff0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34277fcddc41e924ffed7ddacb573d240854cff0", "html_url": "https://github.com/rust-lang/rust/commit/34277fcddc41e924ffed7ddacb573d240854cff0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34277fcddc41e924ffed7ddacb573d240854cff0/comments", "author": {}, "committer": {}, "parents": [{"sha": "b209ff27f32425e0d3a6ae704669a617f2f2235a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b209ff27f32425e0d3a6ae704669a617f2f2235a", "html_url": "https://github.com/rust-lang/rust/commit/b209ff27f32425e0d3a6ae704669a617f2f2235a"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "5d1fb516357d52850327e0e192acf39487e948d9", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/34277fcddc41e924ffed7ddacb573d240854cff0/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34277fcddc41e924ffed7ddacb573d240854cff0/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=34277fcddc41e924ffed7ddacb573d240854cff0", "patch": "@@ -46,7 +46,6 @@ use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::layout::{LayoutError, LayoutOf};\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::subst::GenericArgKind;\n-use rustc_middle::ty::List;\n use rustc_middle::ty::{self, Instance, Ty, TyCtxt, VariantDef};\n use rustc_session::lint::{BuiltinLintDiagnostics, FutureIncompatibilityReason};\n use rustc_span::edition::Edition;\n@@ -769,12 +768,8 @@ impl<'tcx> LateLintPass<'tcx> for MissingCopyImplementations {\n         // We shouldn't recommend implementing `Copy` on stateful things,\n         // such as iterators.\n         if let Some(iter_trait) = cx.tcx.get_diagnostic_item(sym::Iterator) {\n-            if cx.tcx.infer_ctxt().build().type_implements_trait(\n-                iter_trait,\n-                ty,\n-                List::empty(),\n-                param_env,\n-            ) == EvaluationResult::EvaluatedToOk\n+            if cx.tcx.infer_ctxt().build().type_implements_trait(iter_trait, [ty], param_env)\n+                == EvaluationResult::EvaluatedToOk\n             {\n                 return;\n             }"}]}