{"sha": "46156de5f1d8a4ebfb874d170ba6844462b5781b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2MTU2ZGU1ZjFkOGE0ZWJmYjg3NGQxNzBiYTY4NDQ0NjJiNTc4MWI=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2015-08-15T03:35:33Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2015-08-20T00:00:15Z"}, "message": "Add `TimedOut::timed_out`", "tree": {"sha": "61707f3901bedf7fad0b5a65c985c9c227751095", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61707f3901bedf7fad0b5a65c985c9c227751095"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46156de5f1d8a4ebfb874d170ba6844462b5781b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46156de5f1d8a4ebfb874d170ba6844462b5781b", "html_url": "https://github.com/rust-lang/rust/commit/46156de5f1d8a4ebfb874d170ba6844462b5781b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46156de5f1d8a4ebfb874d170ba6844462b5781b/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42a386fcf89a40e6c3a8806ccf381514c2a77c10", "url": "https://api.github.com/repos/rust-lang/rust/commits/42a386fcf89a40e6c3a8806ccf381514c2a77c10", "html_url": "https://github.com/rust-lang/rust/commit/42a386fcf89a40e6c3a8806ccf381514c2a77c10"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "f33cdc36683ad6c155e3e0d223260e3acdf5f20b", "filename": "src/libstd/sync/condvar.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/46156de5f1d8a4ebfb874d170ba6844462b5781b/src%2Flibstd%2Fsync%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46156de5f1d8a4ebfb874d170ba6844462b5781b/src%2Flibstd%2Fsync%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fcondvar.rs?ref=46156de5f1d8a4ebfb874d170ba6844462b5781b", "patch": "@@ -20,7 +20,7 @@ use time::Duration;\n \n /// A type indicating whether a timed wait on a condition variable returned\n /// due to a time out or not.\n-#[derive(Debug, PartialEq, Eq)]\n+#[derive(Debug, PartialEq, Eq, Copy, Clone)]\n #[unstable(feature = \"wait_timeout\", reason = \"newly added\")]\n pub enum TimedOut {\n     /// The wait timed out.\n@@ -29,6 +29,13 @@ pub enum TimedOut {\n     No\n }\n \n+impl TimedOut {\n+    /// Returns `true` iff the value of `self` is `Yes`.\n+    pub fn timed_out(&self) -> bool {\n+        *self == TimedOut::Yes\n+    }\n+}\n+\n /// A Condition Variable\n ///\n /// Condition variables represent the ability to block a thread such that it"}]}