{"sha": "b2f7386f7ed34f24f293c201779a89cbc08f8243", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyZjczODZmN2VkMzRmMjRmMjkzYzIwMTc3OWE4OWNiYzA4ZjgyNDM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-17T10:41:20Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-17T10:55:49Z"}, "message": "Fix fn(&T) -> for<'l> fn(&'l T) write", "tree": {"sha": "6d1c34a2b0f0a269d90f182c80fd7b1878085f42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d1c34a2b0f0a269d90f182c80fd7b1878085f42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2f7386f7ed34f24f293c201779a89cbc08f8243", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2f7386f7ed34f24f293c201779a89cbc08f8243", "html_url": "https://github.com/rust-lang/rust/commit/b2f7386f7ed34f24f293c201779a89cbc08f8243", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2f7386f7ed34f24f293c201779a89cbc08f8243/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "158294de5ca26e80de243da5f3aa3fcf82eb0ca3", "url": "https://api.github.com/repos/rust-lang/rust/commits/158294de5ca26e80de243da5f3aa3fcf82eb0ca3", "html_url": "https://github.com/rust-lang/rust/commit/158294de5ca26e80de243da5f3aa3fcf82eb0ca3"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "e3f13260e8b1b3957f276f81d08f8d9b4e8fc9ff", "filename": "src/common.rs", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b2f7386f7ed34f24f293c201779a89cbc08f8243/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2f7386f7ed34f24f293c201779a89cbc08f8243/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=b2f7386f7ed34f24f293c201779a89cbc08f8243", "patch": "@@ -370,8 +370,10 @@ impl<'a, 'tcx: 'a> CPlace<'tcx> {\n     }\n \n     pub fn write_cvalue(self, fx: &mut FunctionCx<'a, 'tcx, impl Backend>, from: CValue<'tcx>) {\n-        match (&self.layout().ty.sty, &from.layout().ty.sty) {\n-            (ty::Ref(_, t, dest_mut), ty::Ref(_, u, src_mut))\n+        let from_ty = from.layout().ty;\n+        let to_ty = self.layout().ty;\n+        match (&from_ty.sty, &to_ty.sty) {\n+            (ty::Ref(_, t, src_mut), ty::Ref(_, u, dest_mut))\n                 if (if *dest_mut != crate::rustc::hir::Mutability::MutImmutable\n                     && src_mut != dest_mut\n                 {\n@@ -385,13 +387,26 @@ impl<'a, 'tcx: 'a> CPlace<'tcx> {\n                 // &mut T -> &T is allowed\n                 // &'a T -> &'b T is allowed\n             }\n+            (ty::FnPtr(_), ty::FnPtr(_)) => {\n+                let from_sig = fx.tcx.normalize_erasing_late_bound_regions(ParamEnv::reveal_all(), &from_ty.fn_sig(fx.tcx));\n+                let to_sig = fx.tcx.normalize_erasing_late_bound_regions(ParamEnv::reveal_all(), &to_ty.fn_sig(fx.tcx));\n+                assert_eq!(\n+                    from_sig,\n+                    to_sig,\n+                    \"Can't write fn ptr with incompatible sig {:?} to place with sig {:?}\\n\\n{:#?}\",\n+                    from_sig,\n+                    to_sig,\n+                    fx,\n+                );\n+                // fn(&T) -> for<'l> fn(&'l T) is allowed\n+            }\n             _ => {\n                 assert_eq!(\n-                    self.layout().ty,\n-                    from.layout().ty,\n-                    \"Can't write value of incompatible type to place {:?} {:?}\\n\\n{:#?}\",\n-                    self.layout().ty.sty,\n-                    from.layout().ty.sty,\n+                    from_ty,\n+                    to_ty,\n+                    \"Can't write value with incompatible type {:?} to place with type {:?}\\n\\n{:#?}\",\n+                    from_ty.sty,\n+                    to_ty.sty,\n                     fx,\n                 );\n             }"}]}