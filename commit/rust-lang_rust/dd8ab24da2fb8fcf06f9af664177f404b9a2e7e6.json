{"sha": "dd8ab24da2fb8fcf06f9af664177f404b9a2e7e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkOGFiMjRkYTJmYjhmY2YwNmY5YWY2NjQxNzdmNDA0YjlhMmU3ZTY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-08T19:08:43Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-08T21:07:41Z"}, "message": "Add a map from external cnums to local cnums in cstore::crate_metadata\n\nOnce populated, this will allow us to load type info for types defined in\nexternal crates referenced by other external crates.", "tree": {"sha": "92f1f2d5a2432d69631dd2473f3f925522e012d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92f1f2d5a2432d69631dd2473f3f925522e012d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd8ab24da2fb8fcf06f9af664177f404b9a2e7e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd8ab24da2fb8fcf06f9af664177f404b9a2e7e6", "html_url": "https://github.com/rust-lang/rust/commit/dd8ab24da2fb8fcf06f9af664177f404b9a2e7e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd8ab24da2fb8fcf06f9af664177f404b9a2e7e6/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "061bcb2e42537c598c7b6d2b5c54c60d390334eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/061bcb2e42537c598c7b6d2b5c54c60d390334eb", "html_url": "https://github.com/rust-lang/rust/commit/061bcb2e42537c598c7b6d2b5c54c60d390334eb"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "a0dd2687cb0a3891f9b8cedaa2c2c965e41639e2", "filename": "src/comp/metadata/creader.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dd8ab24da2fb8fcf06f9af664177f404b9a2e7e6/src%2Fcomp%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd8ab24da2fb8fcf06f9af664177f404b9a2e7e6/src%2Fcomp%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcreader.rs?ref=dd8ab24da2fb8fcf06f9af664177f404b9a2e7e6", "patch": "@@ -22,6 +22,7 @@ import std::option;\n import std::option::none;\n import std::option::some;\n import std::map::hashmap;\n+import std::map::new_int_hash;\n import syntax::print::pprust;\n import common::*;\n \n@@ -225,8 +226,10 @@ fn load_library_crate(&session::session sess, span span, ast::crate_num cnum,\n     alt (find_library_crate(sess, ident, metas, library_search_paths)) {\n         case (some(?t)) {\n             auto cstore = sess.get_cstore();\n-            cstore::set_crate_data(cstore, cnum,\n-                                   rec(name=ident, data=t._1));\n+            auto cmeta = rec(name=ident,\n+                             data=t._1,\n+                             cnum_map = new_int_hash[ast::crate_num]());\n+            cstore::set_crate_data(cstore, cnum, cmeta);\n             cstore::add_used_crate_file(cstore, t._0);\n             ret;\n         }"}, {"sha": "bf1bafc354c939b23a5065c86d3328b8c533caba", "filename": "src/comp/metadata/cstore.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd8ab24da2fb8fcf06f9af664177f404b9a2e7e6/src%2Fcomp%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd8ab24da2fb8fcf06f9af664177f404b9a2e7e6/src%2Fcomp%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcstore.rs?ref=dd8ab24da2fb8fcf06f9af664177f404b9a2e7e6", "patch": "@@ -6,7 +6,15 @@ import std::vec;\n import std::str;\n import syntax::ast;\n \n-type crate_metadata = rec(str name, vec[u8] data);\n+// A map from external crate numbers (as decoded from some crate file) to\n+// local crate numbers (as generated during this session). Each external\n+// crate may refer to types in other external crates, and each has their\n+// own crate numbers.\n+type cnum_map = map::hashmap[ast::crate_num, ast::crate_num];\n+\n+type crate_metadata = rec(str name,\n+                          vec[u8] data,\n+                          cnum_map cnum_map);\n \n // Map from node_id's of local use statements to crate numbers\n type use_crate_map = map::hashmap[ast::node_id, ast::crate_num];"}]}