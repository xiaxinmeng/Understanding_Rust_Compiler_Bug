{"sha": "33527755a33674880093199e311f1d578edd7397", "node_id": "C_kwDOAAsO6NoAKDMzNTI3NzU1YTMzNjc0ODgwMDkzMTk5ZTMxMWYxZDU3OGVkZDczOTc", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-11T03:25:32Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-11T03:25:32Z"}, "message": "Inline and remove `renumber_regions`.\n\nIt has a single callsite.", "tree": {"sha": "68cd3c43296d8eb66616a0103bda2c49edf9b4e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68cd3c43296d8eb66616a0103bda2c49edf9b4e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33527755a33674880093199e311f1d578edd7397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33527755a33674880093199e311f1d578edd7397", "html_url": "https://github.com/rust-lang/rust/commit/33527755a33674880093199e311f1d578edd7397", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33527755a33674880093199e311f1d578edd7397/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88fb1b922b047981fc0cfc62aa1418b4361ae72e", "url": "https://api.github.com/repos/rust-lang/rust/commits/88fb1b922b047981fc0cfc62aa1418b4361ae72e", "html_url": "https://github.com/rust-lang/rust/commit/88fb1b922b047981fc0cfc62aa1418b4361ae72e"}], "stats": {"total": 25, "additions": 6, "deletions": 19}, "files": [{"sha": "6913d74af9432933330b2929f232ff65d365715f", "filename": "compiler/rustc_borrowck/src/renumber.rs", "status": "modified", "additions": 6, "deletions": 19, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/33527755a33674880093199e311f1d578edd7397/compiler%2Frustc_borrowck%2Fsrc%2Frenumber.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33527755a33674880093199e311f1d578edd7397/compiler%2Frustc_borrowck%2Fsrc%2Frenumber.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Frenumber.rs?ref=33527755a33674880093199e311f1d578edd7397", "patch": "@@ -29,24 +29,6 @@ pub fn renumber_mir<'tcx>(\n     visitor.visit_body(body);\n }\n \n-/// Replaces all regions appearing in `value` with fresh inference\n-/// variables.\n-#[instrument(skip(infcx, get_ctxt_fn), level = \"debug\")]\n-pub(crate) fn renumber_regions<'tcx, T, F>(\n-    infcx: &BorrowckInferCtxt<'_, 'tcx>,\n-    value: T,\n-    get_ctxt_fn: F,\n-) -> T\n-where\n-    T: TypeFoldable<TyCtxt<'tcx>>,\n-    F: Fn() -> RegionCtxt,\n-{\n-    infcx.tcx.fold_regions(value, |_region, _depth| {\n-        let origin = NllRegionVariableOrigin::Existential { from_forall: false };\n-        infcx.next_nll_region_var(origin, || get_ctxt_fn())\n-    })\n-}\n-\n #[derive(Copy, Clone, Debug, Eq, PartialEq, Hash)]\n pub(crate) enum BoundRegionInfo {\n     Name(Symbol),\n@@ -87,12 +69,17 @@ struct NllVisitor<'a, 'tcx> {\n }\n \n impl<'a, 'tcx> NllVisitor<'a, 'tcx> {\n+    /// Replaces all regions appearing in `value` with fresh inference\n+    /// variables.\n     fn renumber_regions<T, F>(&mut self, value: T, region_ctxt_fn: F) -> T\n     where\n         T: TypeFoldable<TyCtxt<'tcx>>,\n         F: Fn() -> RegionCtxt,\n     {\n-        renumber_regions(self.infcx, value, region_ctxt_fn)\n+        let origin = NllRegionVariableOrigin::Existential { from_forall: false };\n+        self.infcx.tcx.fold_regions(value, |_region, _depth| {\n+            self.infcx.next_nll_region_var(origin, || region_ctxt_fn())\n+        })\n     }\n }\n "}]}