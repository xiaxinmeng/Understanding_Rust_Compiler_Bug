{"sha": "96cb0dc8a0804256c8620dfabaa415be99562ccc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2Y2IwZGM4YTA4MDQyNTZjODYyMGRmYWJhYTQxNWJlOTk1NjJjY2M=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-05-18T09:10:12Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-05-18T09:10:12Z"}, "message": "use n{0..11} instead of _{0..12} for accessor method names", "tree": {"sha": "46c72993ebf9b68f5c6ade3213d7731f88c5ddb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46c72993ebf9b68f5c6ade3213d7731f88c5ddb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96cb0dc8a0804256c8620dfabaa415be99562ccc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96cb0dc8a0804256c8620dfabaa415be99562ccc", "html_url": "https://github.com/rust-lang/rust/commit/96cb0dc8a0804256c8620dfabaa415be99562ccc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96cb0dc8a0804256c8620dfabaa415be99562ccc/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6742f91192da67324b33cf882383a283a2599f7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6742f91192da67324b33cf882383a283a2599f7b", "html_url": "https://github.com/rust-lang/rust/commit/6742f91192da67324b33cf882383a283a2599f7b"}], "stats": {"total": 200, "additions": 100, "deletions": 100}, "files": [{"sha": "7c583859483716dfa5a3247644e0f6216adc6f3d", "filename": "src/libcore/tuple.rs", "status": "modified", "additions": 100, "deletions": 100, "changes": 200, "blob_url": "https://github.com/rust-lang/rust/blob/96cb0dc8a0804256c8620dfabaa415be99562ccc/src%2Flibcore%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96cb0dc8a0804256c8620dfabaa415be99562ccc/src%2Flibcore%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftuple.rs?ref=96cb0dc8a0804256c8620dfabaa415be99562ccc", "patch": "@@ -256,17 +256,17 @@ macro_rules! n_tuple(\n     )\n )\n \n-n_tuple!(Tuple2: _0:A, _1:B)\n-n_tuple!(Tuple3: _0:A, _1:B, _2:C)\n-n_tuple!(Tuple4: _0:A, _1:B, _2:C, _3:D)\n-n_tuple!(Tuple5: _0:A, _1:B, _2:C, _3:D, _4:E)\n-n_tuple!(Tuple6: _0:A, _1:B, _2:C, _3:D, _4:E, _5:F)\n-n_tuple!(Tuple7: _0:A, _1:B, _2:C, _3:D, _4:E, _5:F, _6:G)\n-n_tuple!(Tuple8: _0:A, _1:B, _2:C, _3:D, _4:E, _5:F, _6:G, _7:H)\n-n_tuple!(Tuple9: _0:A, _1:B, _2:C, _3:D, _4:E, _5:F, _6:G, _7:H, _8:I)\n-n_tuple!(Tuple10: _0:A, _1:B, _2:C, _3:D, _4:E, _5:F, _6:G, _7:H, _8:I, _9:J)\n-n_tuple!(Tuple11: _0:A, _1:B, _2:C, _3:D, _4:E, _5:F, _6:G, _7:H, _8:I, _9:J, _10:K)\n-n_tuple!(Tuple12: _0:A, _1:B, _2:C, _3:D, _4:E, _5:F, _6:G, _7:H, _8:I, _9:J, _10:K, _11:L)\n+n_tuple!(Tuple2: n0:A, n1:B)\n+n_tuple!(Tuple3: n0:A, n1:B, n2:C)\n+n_tuple!(Tuple4: n0:A, n1:B, n2:C, n3:D)\n+n_tuple!(Tuple5: n0:A, n1:B, n2:C, n3:D, n4:E)\n+n_tuple!(Tuple6: n0:A, n1:B, n2:C, n3:D, n4:E, n5:F)\n+n_tuple!(Tuple7: n0:A, n1:B, n2:C, n3:D, n4:E, n5:F, n6:G)\n+n_tuple!(Tuple8: n0:A, n1:B, n2:C, n3:D, n4:E, n5:F, n6:G, n7:H)\n+n_tuple!(Tuple9: n0:A, n1:B, n2:C, n3:D, n4:E, n5:F, n6:G, n7:H, n8:I)\n+n_tuple!(Tuple10: n0:A, n1:B, n2:C, n3:D, n4:E, n5:F, n6:G, n7:H, n8:I, n9:J)\n+n_tuple!(Tuple11: n0:A, n1:B, n2:C, n3:D, n4:E, n5:F, n6:G, n7:H, n8:I, n9:J, n10:K)\n+n_tuple!(Tuple12: n0:A, n1:B, n2:C, n3:D, n4:E, n5:F, n6:G, n7:H, n8:I, n9:J, n10:K, n11:L)\n \n // Tuple element accessor trait implementations\n \n@@ -285,113 +285,113 @@ macro_rules! impl_n_tuple(\n )\n \n impl_n_tuple!(Tuple2:\n-    _0 -> A { (a,_) => a }\n-    _1 -> B { (_,b) => b }\n+    n0 -> A { (a,_) => a }\n+    n1 -> B { (_,b) => b }\n )\n \n impl_n_tuple!(Tuple3:\n-    _0 -> A { (a,_,_) => a }\n-    _1 -> B { (_,b,_) => b }\n-    _2 -> C { (_,_,c) => c }\n+    n0 -> A { (a,_,_) => a }\n+    n1 -> B { (_,b,_) => b }\n+    n2 -> C { (_,_,c) => c }\n )\n \n impl_n_tuple!(Tuple4:\n-    _0 -> A { (a,_,_,_) => a }\n-    _1 -> B { (_,b,_,_) => b }\n-    _2 -> C { (_,_,c,_) => c }\n-    _3 -> D { (_,_,_,d) => d }\n+    n0 -> A { (a,_,_,_) => a }\n+    n1 -> B { (_,b,_,_) => b }\n+    n2 -> C { (_,_,c,_) => c }\n+    n3 -> D { (_,_,_,d) => d }\n )\n \n impl_n_tuple!(Tuple5:\n-    _0 -> A { (a,_,_,_,_) => a }\n-    _1 -> B { (_,b,_,_,_) => b }\n-    _2 -> C { (_,_,c,_,_) => c }\n-    _3 -> D { (_,_,_,d,_) => d }\n-    _4 -> E { (_,_,_,_,e) => e }\n+    n0 -> A { (a,_,_,_,_) => a }\n+    n1 -> B { (_,b,_,_,_) => b }\n+    n2 -> C { (_,_,c,_,_) => c }\n+    n3 -> D { (_,_,_,d,_) => d }\n+    n4 -> E { (_,_,_,_,e) => e }\n )\n \n impl_n_tuple!(Tuple6:\n-    _0 -> A { (a,_,_,_,_,_) => a }\n-    _1 -> B { (_,b,_,_,_,_) => b }\n-    _2 -> C { (_,_,c,_,_,_) => c }\n-    _3 -> D { (_,_,_,d,_,_) => d }\n-    _4 -> E { (_,_,_,_,e,_) => e }\n-    _5 -> F { (_,_,_,_,_,f) => f }\n+    n0 -> A { (a,_,_,_,_,_) => a }\n+    n1 -> B { (_,b,_,_,_,_) => b }\n+    n2 -> C { (_,_,c,_,_,_) => c }\n+    n3 -> D { (_,_,_,d,_,_) => d }\n+    n4 -> E { (_,_,_,_,e,_) => e }\n+    n5 -> F { (_,_,_,_,_,f) => f }\n )\n \n impl_n_tuple!(Tuple7:\n-    _0 -> A { (a,_,_,_,_,_,_) => a }\n-    _1 -> B { (_,b,_,_,_,_,_) => b }\n-    _2 -> C { (_,_,c,_,_,_,_) => c }\n-    _3 -> D { (_,_,_,d,_,_,_) => d }\n-    _4 -> E { (_,_,_,_,e,_,_) => e }\n-    _5 -> F { (_,_,_,_,_,f,_) => f }\n-    _6 -> G { (_,_,_,_,_,_,g) => g }\n+    n0 -> A { (a,_,_,_,_,_,_) => a }\n+    n1 -> B { (_,b,_,_,_,_,_) => b }\n+    n2 -> C { (_,_,c,_,_,_,_) => c }\n+    n3 -> D { (_,_,_,d,_,_,_) => d }\n+    n4 -> E { (_,_,_,_,e,_,_) => e }\n+    n5 -> F { (_,_,_,_,_,f,_) => f }\n+    n6 -> G { (_,_,_,_,_,_,g) => g }\n )\n \n impl_n_tuple!(Tuple8:\n-    _0 -> A { (a,_,_,_,_,_,_,_) => a }\n-    _1 -> B { (_,b,_,_,_,_,_,_) => b }\n-    _2 -> C { (_,_,c,_,_,_,_,_) => c }\n-    _3 -> D { (_,_,_,d,_,_,_,_) => d }\n-    _4 -> E { (_,_,_,_,e,_,_,_) => e }\n-    _5 -> F { (_,_,_,_,_,f,_,_) => f }\n-    _6 -> G { (_,_,_,_,_,_,g,_) => g }\n-    _7 -> H { (_,_,_,_,_,_,_,h) => h }\n+    n0 -> A { (a,_,_,_,_,_,_,_) => a }\n+    n1 -> B { (_,b,_,_,_,_,_,_) => b }\n+    n2 -> C { (_,_,c,_,_,_,_,_) => c }\n+    n3 -> D { (_,_,_,d,_,_,_,_) => d }\n+    n4 -> E { (_,_,_,_,e,_,_,_) => e }\n+    n5 -> F { (_,_,_,_,_,f,_,_) => f }\n+    n6 -> G { (_,_,_,_,_,_,g,_) => g }\n+    n7 -> H { (_,_,_,_,_,_,_,h) => h }\n )\n \n impl_n_tuple!(Tuple9:\n-    _0 -> A { (a,_,_,_,_,_,_,_,_) => a }\n-    _1 -> B { (_,b,_,_,_,_,_,_,_) => b }\n-    _2 -> C { (_,_,c,_,_,_,_,_,_) => c }\n-    _3 -> D { (_,_,_,d,_,_,_,_,_) => d }\n-    _4 -> E { (_,_,_,_,e,_,_,_,_) => e }\n-    _5 -> F { (_,_,_,_,_,f,_,_,_) => f }\n-    _6 -> G { (_,_,_,_,_,_,g,_,_) => g }\n-    _7 -> H { (_,_,_,_,_,_,_,h,_) => h }\n-    _8 -> I { (_,_,_,_,_,_,_,_,i) => i }\n+    n0 -> A { (a,_,_,_,_,_,_,_,_) => a }\n+    n1 -> B { (_,b,_,_,_,_,_,_,_) => b }\n+    n2 -> C { (_,_,c,_,_,_,_,_,_) => c }\n+    n3 -> D { (_,_,_,d,_,_,_,_,_) => d }\n+    n4 -> E { (_,_,_,_,e,_,_,_,_) => e }\n+    n5 -> F { (_,_,_,_,_,f,_,_,_) => f }\n+    n6 -> G { (_,_,_,_,_,_,g,_,_) => g }\n+    n7 -> H { (_,_,_,_,_,_,_,h,_) => h }\n+    n8 -> I { (_,_,_,_,_,_,_,_,i) => i }\n )\n \n impl_n_tuple!(Tuple10:\n-    _0 -> A { (a,_,_,_,_,_,_,_,_,_) => a }\n-    _1 -> B { (_,b,_,_,_,_,_,_,_,_) => b }\n-    _2 -> C { (_,_,c,_,_,_,_,_,_,_) => c }\n-    _3 -> D { (_,_,_,d,_,_,_,_,_,_) => d }\n-    _4 -> E { (_,_,_,_,e,_,_,_,_,_) => e }\n-    _5 -> F { (_,_,_,_,_,f,_,_,_,_) => f }\n-    _6 -> G { (_,_,_,_,_,_,g,_,_,_) => g }\n-    _7 -> H { (_,_,_,_,_,_,_,h,_,_) => h }\n-    _8 -> I { (_,_,_,_,_,_,_,_,i,_) => i }\n-    _9 -> J { (_,_,_,_,_,_,_,_,_,j) => j }\n+    n0 -> A { (a,_,_,_,_,_,_,_,_,_) => a }\n+    n1 -> B { (_,b,_,_,_,_,_,_,_,_) => b }\n+    n2 -> C { (_,_,c,_,_,_,_,_,_,_) => c }\n+    n3 -> D { (_,_,_,d,_,_,_,_,_,_) => d }\n+    n4 -> E { (_,_,_,_,e,_,_,_,_,_) => e }\n+    n5 -> F { (_,_,_,_,_,f,_,_,_,_) => f }\n+    n6 -> G { (_,_,_,_,_,_,g,_,_,_) => g }\n+    n7 -> H { (_,_,_,_,_,_,_,h,_,_) => h }\n+    n8 -> I { (_,_,_,_,_,_,_,_,i,_) => i }\n+    n9 -> J { (_,_,_,_,_,_,_,_,_,j) => j }\n )\n \n impl_n_tuple!(Tuple11:\n-    _0 -> A { (a,_,_,_,_,_,_,_,_,_,_) => a }\n-    _1 -> B { (_,b,_,_,_,_,_,_,_,_,_) => b }\n-    _2 -> C { (_,_,c,_,_,_,_,_,_,_,_) => c }\n-    _3 -> D { (_,_,_,d,_,_,_,_,_,_,_) => d }\n-    _4 -> E { (_,_,_,_,e,_,_,_,_,_,_) => e }\n-    _5 -> F { (_,_,_,_,_,f,_,_,_,_,_) => f }\n-    _6 -> G { (_,_,_,_,_,_,g,_,_,_,_) => g }\n-    _7 -> H { (_,_,_,_,_,_,_,h,_,_,_) => h }\n-    _8 -> I { (_,_,_,_,_,_,_,_,i,_,_) => i }\n-    _9 -> J { (_,_,_,_,_,_,_,_,_,j,_) => j }\n-    _10 -> K { (_,_,_,_,_,_,_,_,_,_,k) => k }\n+    n0 -> A { (a,_,_,_,_,_,_,_,_,_,_) => a }\n+    n1 -> B { (_,b,_,_,_,_,_,_,_,_,_) => b }\n+    n2 -> C { (_,_,c,_,_,_,_,_,_,_,_) => c }\n+    n3 -> D { (_,_,_,d,_,_,_,_,_,_,_) => d }\n+    n4 -> E { (_,_,_,_,e,_,_,_,_,_,_) => e }\n+    n5 -> F { (_,_,_,_,_,f,_,_,_,_,_) => f }\n+    n6 -> G { (_,_,_,_,_,_,g,_,_,_,_) => g }\n+    n7 -> H { (_,_,_,_,_,_,_,h,_,_,_) => h }\n+    n8 -> I { (_,_,_,_,_,_,_,_,i,_,_) => i }\n+    n9 -> J { (_,_,_,_,_,_,_,_,_,j,_) => j }\n+    n10 -> K { (_,_,_,_,_,_,_,_,_,_,k) => k }\n )\n \n impl_n_tuple!(Tuple12:\n-    _0 -> A { (a,_,_,_,_,_,_,_,_,_,_,_) => a }\n-    _1 -> B { (_,b,_,_,_,_,_,_,_,_,_,_) => b }\n-    _2 -> C { (_,_,c,_,_,_,_,_,_,_,_,_) => c }\n-    _3 -> D { (_,_,_,d,_,_,_,_,_,_,_,_) => d }\n-    _4 -> E { (_,_,_,_,e,_,_,_,_,_,_,_) => e }\n-    _5 -> F { (_,_,_,_,_,f,_,_,_,_,_,_) => f }\n-    _6 -> G { (_,_,_,_,_,_,g,_,_,_,_,_) => g }\n-    _7 -> H { (_,_,_,_,_,_,_,h,_,_,_,_) => h }\n-    _8 -> I { (_,_,_,_,_,_,_,_,i,_,_,_) => i }\n-    _9 -> J { (_,_,_,_,_,_,_,_,_,j,_,_) => j }\n-    _10 -> K { (_,_,_,_,_,_,_,_,_,_,k,_) => k }\n-    _11 -> L { (_,_,_,_,_,_,_,_,_,_,_,l) => l }\n+    n0 -> A { (a,_,_,_,_,_,_,_,_,_,_,_) => a }\n+    n1 -> B { (_,b,_,_,_,_,_,_,_,_,_,_) => b }\n+    n2 -> C { (_,_,c,_,_,_,_,_,_,_,_,_) => c }\n+    n3 -> D { (_,_,_,d,_,_,_,_,_,_,_,_) => d }\n+    n4 -> E { (_,_,_,_,e,_,_,_,_,_,_,_) => e }\n+    n5 -> F { (_,_,_,_,_,f,_,_,_,_,_,_) => f }\n+    n6 -> G { (_,_,_,_,_,_,g,_,_,_,_,_) => g }\n+    n7 -> H { (_,_,_,_,_,_,_,h,_,_,_,_) => h }\n+    n8 -> I { (_,_,_,_,_,_,_,_,i,_,_,_) => i }\n+    n9 -> J { (_,_,_,_,_,_,_,_,_,j,_,_) => j }\n+    n10 -> K { (_,_,_,_,_,_,_,_,_,_,k,_) => k }\n+    n11 -> L { (_,_,_,_,_,_,_,_,_,_,_,l) => l }\n )\n \n #[test]\n@@ -420,16 +420,16 @@ fn test_clone() {\n #[test]\n fn test_n_tuple() {\n     let t = (0u8, 1u16, 2u32, 3u64, 4u, 5i8, 6i16, 7i32, 8i64, 9i, 10f32, 11f64);\n-    assert_eq!(t._0(), 0u8);\n-    assert_eq!(t._1(), 1u16);\n-    assert_eq!(t._2(), 2u32);\n-    assert_eq!(t._3(), 3u64);\n-    assert_eq!(t._4(), 4u);\n-    assert_eq!(t._5(), 5i8);\n-    assert_eq!(t._6(), 6i16);\n-    assert_eq!(t._7(), 7i32);\n-    assert_eq!(t._8(), 8i64);\n-    assert_eq!(t._9(), 9i);\n-    assert_eq!(t._10(), 10f32);\n-    assert_eq!(t._11(), 11f64);\n+    assert_eq!(t.n0(), 0u8);\n+    assert_eq!(t.n1(), 1u16);\n+    assert_eq!(t.n2(), 2u32);\n+    assert_eq!(t.n3(), 3u64);\n+    assert_eq!(t.n4(), 4u);\n+    assert_eq!(t.n5(), 5i8);\n+    assert_eq!(t.n6(), 6i16);\n+    assert_eq!(t.n7(), 7i32);\n+    assert_eq!(t.n8(), 8i64);\n+    assert_eq!(t.n9(), 9i);\n+    assert_eq!(t.n10(), 10f32);\n+    assert_eq!(t.n11(), 11f64);\n }"}]}