{"sha": "19645ac05a3e5cd4e508e9819f4939fc2f959b5b", "node_id": "C_kwDOAAsO6NoAKDE5NjQ1YWMwNWEzZTVjZDRlNTA4ZTk4MTlmNDkzOWZjMmY5NTliNWI", "commit": {"author": {"name": "ltdk", "email": "usr@ltdk.xyz", "date": "2021-12-29T01:59:50Z"}, "committer": {"name": "ltdk", "email": "usr@ltdk.xyz", "date": "2022-01-29T23:37:55Z"}, "message": "Add Result::{ok, err, and, or, unwrap_or} as const", "tree": {"sha": "276ff62c9c9e3c7839f8538149400f407569dfe8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/276ff62c9c9e3c7839f8538149400f407569dfe8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19645ac05a3e5cd4e508e9819f4939fc2f959b5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19645ac05a3e5cd4e508e9819f4939fc2f959b5b", "html_url": "https://github.com/rust-lang/rust/commit/19645ac05a3e5cd4e508e9819f4939fc2f959b5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19645ac05a3e5cd4e508e9819f4939fc2f959b5b/comments", "author": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a00e130dae74a213338e2b095ec855156d8f3d8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a00e130dae74a213338e2b095ec855156d8f3d8a", "html_url": "https://github.com/rust-lang/rust/commit/a00e130dae74a213338e2b095ec855156d8f3d8a"}], "stats": {"total": 55, "additions": 45, "deletions": 10}, "files": [{"sha": "65812b2e0c3752dd143388d162350e6cb1364cc3", "filename": "library/core/src/result.rs", "status": "modified", "additions": 45, "deletions": 10, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/19645ac05a3e5cd4e508e9819f4939fc2f959b5b/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19645ac05a3e5cd4e508e9819f4939fc2f959b5b/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=19645ac05a3e5cd4e508e9819f4939fc2f959b5b", "patch": "@@ -632,10 +632,16 @@ impl<T, E> Result<T, E> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn ok(self) -> Option<T> {\n+    #[rustc_const_unstable(feature = \"const_result_drop\", issue = \"92384\")]\n+    pub const fn ok(self) -> Option<T>\n+    where\n+        E: ~const Drop,\n+    {\n         match self {\n             Ok(x) => Some(x),\n-            Err(_) => None,\n+            // FIXME: ~const Drop doesn't quite work right yet\n+            #[allow(unused_variables)]\n+            Err(x) => None,\n         }\n     }\n \n@@ -657,9 +663,15 @@ impl<T, E> Result<T, E> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn err(self) -> Option<E> {\n+    #[rustc_const_unstable(feature = \"const_result_drop\", issue = \"92384\")]\n+    pub const fn err(self) -> Option<E>\n+    where\n+        T: ~const Drop,\n+    {\n         match self {\n-            Ok(_) => None,\n+            // FIXME: ~const Drop doesn't quite work right yet\n+            #[allow(unused_variables)]\n+            Ok(x) => None,\n             Err(x) => Some(x),\n         }\n     }\n@@ -1266,10 +1278,18 @@ impl<T, E> Result<T, E> {\n     /// assert_eq!(x.and(y), Ok(\"different result type\"));\n     /// ```\n     #[inline]\n+    #[rustc_const_unstable(feature = \"const_result_drop\", issue = \"92384\")]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn and<U>(self, res: Result<U, E>) -> Result<U, E> {\n+    pub const fn and<U>(self, res: Result<U, E>) -> Result<U, E>\n+    where\n+        T: ~const Drop,\n+        U: ~const Drop,\n+        E: ~const Drop,\n+    {\n         match self {\n-            Ok(_) => res,\n+            // FIXME: ~const Drop doesn't quite work right yet\n+            #[allow(unused_variables)]\n+            Ok(x) => res,\n             Err(e) => Err(e),\n         }\n     }\n@@ -1331,11 +1351,19 @@ impl<T, E> Result<T, E> {\n     /// assert_eq!(x.or(y), Ok(2));\n     /// ```\n     #[inline]\n+    #[rustc_const_unstable(feature = \"const_result_drop\", issue = \"92384\")]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn or<F>(self, res: Result<T, F>) -> Result<T, F> {\n+    pub const fn or<F>(self, res: Result<T, F>) -> Result<T, F>\n+    where\n+        T: ~const Drop,\n+        E: ~const Drop,\n+        F: ~const Drop,\n+    {\n         match self {\n             Ok(v) => Ok(v),\n-            Err(_) => res,\n+            // FIXME: ~const Drop doesn't quite work right yet\n+            #[allow(unused_variables)]\n+            Err(e) => res,\n         }\n     }\n \n@@ -1387,11 +1415,18 @@ impl<T, E> Result<T, E> {\n     /// assert_eq!(x.unwrap_or(default), default);\n     /// ```\n     #[inline]\n+    #[rustc_const_unstable(feature = \"const_result_drop\", issue = \"92384\")]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn unwrap_or(self, default: T) -> T {\n+    pub const fn unwrap_or(self, default: T) -> T\n+    where\n+        T: ~const Drop,\n+        E: ~const Drop,\n+    {\n         match self {\n             Ok(t) => t,\n-            Err(_) => default,\n+            // FIXME: ~const Drop doesn't quite work right yet\n+            #[allow(unused_variables)]\n+            Err(e) => default,\n         }\n     }\n "}]}