{"sha": "e6d84268fa18da997918b37e5b0325bed240939a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ZDg0MjY4ZmExOGRhOTk3OTE4YjM3ZTViMDMyNWJlZDI0MDkzOWE=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-02-11T16:28:41Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-02-19T18:02:51Z"}, "message": "Change functions from taking ~str to taking &str", "tree": {"sha": "26c3664b706f201105a937d7cb927fdfb930e81e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26c3664b706f201105a937d7cb927fdfb930e81e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6d84268fa18da997918b37e5b0325bed240939a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6d84268fa18da997918b37e5b0325bed240939a", "html_url": "https://github.com/rust-lang/rust/commit/e6d84268fa18da997918b37e5b0325bed240939a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6d84268fa18da997918b37e5b0325bed240939a/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9da641bd8c186412813dca899cc8a0eb509122d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9da641bd8c186412813dca899cc8a0eb509122d9", "html_url": "https://github.com/rust-lang/rust/commit/9da641bd8c186412813dca899cc8a0eb509122d9"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "02f1877e2f93b1501f6f8cd9d199348453b74570", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e6d84268fa18da997918b37e5b0325bed240939a/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6d84268fa18da997918b37e5b0325bed240939a/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=e6d84268fa18da997918b37e5b0325bed240939a", "patch": "@@ -487,12 +487,12 @@ pub fn build_link_meta(sess: Session, c: &ast::crate, output: &Path,\n     fn crate_meta_extras_hash(symbol_hasher: &hash::State,\n                               -cmh_items: ~[@ast::meta_item],\n                               dep_hashes: ~[~str]) -> @str {\n-        fn len_and_str(s: ~str) -> ~str {\n-            return fmt!(\"%u_%s\", str::len(s), s);\n+        fn len_and_str(s: &str) -> ~str {\n+            fmt!(\"%u_%s\", s.len(), s)\n         }\n \n         fn len_and_str_lit(l: ast::lit) -> ~str {\n-            return len_and_str(pprust::lit_to_str(@l));\n+            len_and_str(pprust::lit_to_str(@l))\n         }\n \n         let cmh_items = attr::sort_meta_items(cmh_items);\n@@ -615,7 +615,7 @@ pub fn get_symbol_hash(ccx: @crate_ctxt, t: ty::t) -> @str {\n \n // Name sanitation. LLVM will happily accept identifiers with weird names, but\n // gas doesn't!\n-pub fn sanitize(s: ~str) -> ~str {\n+pub fn sanitize(s: &str) -> ~str {\n     let mut result = ~\"\";\n     for str::chars_each(s) |c| {\n         match c {\n@@ -629,10 +629,10 @@ pub fn sanitize(s: ~str) -> ~str {\n           'a' .. 'z'\n           | 'A' .. 'Z'\n           | '0' .. '9'\n-          | '_' => str::push_char(&mut result, c),\n+          | '_' => result.push_char(c),\n           _ => {\n             if c > 'z' && char::is_XID_continue(c) {\n-                str::push_char(&mut result, c);\n+                result.push_char(c);\n             }\n           }\n         }"}, {"sha": "e27784d1f6b4477c5331f44cc852db46767a445d", "filename": "src/libsyntax/parse/comments.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e6d84268fa18da997918b37e5b0325bed240939a/src%2Flibsyntax%2Fparse%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6d84268fa18da997918b37e5b0325bed240939a/src%2Flibsyntax%2Fparse%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fcomments.rs?ref=e6d84268fa18da997918b37e5b0325bed240939a", "patch": "@@ -46,14 +46,14 @@ impl cmp::Eq for cmnt_style {\n \n pub type cmnt = {style: cmnt_style, lines: ~[~str], pos: BytePos};\n \n-pub fn is_doc_comment(s: ~str) -> bool {\n+pub fn is_doc_comment(s: &str) -> bool {\n     (s.starts_with(~\"///\") && !is_line_non_doc_comment(s)) ||\n     s.starts_with(~\"//!\") ||\n     (s.starts_with(~\"/**\") && !is_block_non_doc_comment(s)) ||\n     s.starts_with(~\"/*!\")\n }\n \n-pub fn doc_comment_style(comment: ~str) -> ast::attr_style {\n+pub fn doc_comment_style(comment: &str) -> ast::attr_style {\n     assert is_doc_comment(comment);\n     if comment.starts_with(~\"//!\") || comment.starts_with(~\"/*!\") {\n         ast::attr_inner\n@@ -62,7 +62,7 @@ pub fn doc_comment_style(comment: ~str) -> ast::attr_style {\n     }\n }\n \n-pub fn strip_doc_comment_decoration(comment: ~str) -> ~str {\n+pub fn strip_doc_comment_decoration(comment: &str) -> ~str {\n \n     /// remove whitespace-only lines from the start/end of lines\n     fn vertical_trim(lines: ~[~str]) -> ~[~str] {"}]}