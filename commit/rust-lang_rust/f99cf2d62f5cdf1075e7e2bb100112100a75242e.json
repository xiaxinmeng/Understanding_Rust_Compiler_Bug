{"sha": "f99cf2d62f5cdf1075e7e2bb100112100a75242e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5OWNmMmQ2MmY1Y2RmMTA3NWU3ZTJiYjEwMDExMjEwMGE3NTI0MmU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-08T00:01:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-12T00:31:39Z"}, "message": "Add a number of unwinding tests\n\nIssue #236", "tree": {"sha": "879d62e21ca77dff2e0fdf89074e33000c6481f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/879d62e21ca77dff2e0fdf89074e33000c6481f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f99cf2d62f5cdf1075e7e2bb100112100a75242e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f99cf2d62f5cdf1075e7e2bb100112100a75242e", "html_url": "https://github.com/rust-lang/rust/commit/f99cf2d62f5cdf1075e7e2bb100112100a75242e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f99cf2d62f5cdf1075e7e2bb100112100a75242e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fba02c7e99758da1773069dca2afaa7f2e9cd31", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fba02c7e99758da1773069dca2afaa7f2e9cd31", "html_url": "https://github.com/rust-lang/rust/commit/4fba02c7e99758da1773069dca2afaa7f2e9cd31"}], "stats": {"total": 130, "additions": 130, "deletions": 0}, "files": [{"sha": "e7aeedcf505885be12be1fe12cf8d3ec52b4693a", "filename": "src/test/run-fail/unwind-assert.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-assert.rs?ref=f99cf2d62f5cdf1075e7e2bb100112100a75242e", "patch": "@@ -0,0 +1,6 @@\n+// error-pattern:fail\n+\n+fn main() {\n+    let a = @0;\n+    assert false;\n+}\n\\ No newline at end of file"}, {"sha": "e01cc969cea61764e512790b6228153def93abb1", "filename": "src/test/run-fail/unwind-check.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-check.rs?ref=f99cf2d62f5cdf1075e7e2bb100112100a75242e", "patch": "@@ -0,0 +1,8 @@\n+// error-pattern:fail\n+\n+pure fn p(a: @int) -> bool { false }\n+\n+fn main() {\n+    let a = @0;\n+    check p(a);\n+}\n\\ No newline at end of file"}, {"sha": "216ae0549472d8f4620a8568051c627aafec98a1", "filename": "src/test/run-fail/unwind-closure.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-closure.rs?ref=f99cf2d62f5cdf1075e7e2bb100112100a75242e", "patch": "@@ -0,0 +1,10 @@\n+// error-pattern:fail\n+\n+fn f(a: @int) {\n+    fail;\n+}\n+\n+fn main() {\n+    let g = bind f(@0);\n+    g();\n+}\n\\ No newline at end of file"}, {"sha": "b3dc0d3eaeb7b5fcb022155d114a293ba4b37ee1", "filename": "src/test/run-fail/unwind-initializer.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-initializer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-initializer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-initializer.rs?ref=f99cf2d62f5cdf1075e7e2bb100112100a75242e", "patch": "@@ -0,0 +1,7 @@\n+// error-pattern:fail\n+\n+fn main() {\n+    let a: @int = {\n+        fail;\n+    };\n+}\n\\ No newline at end of file"}, {"sha": "fa64b0ad78cd07b80801d13d799643b72b0927e7", "filename": "src/test/run-fail/unwind-iter.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-iter.rs?ref=f99cf2d62f5cdf1075e7e2bb100112100a75242e", "patch": "@@ -0,0 +1,12 @@\n+// error-pattern:fail\n+\n+iter x() -> int {\n+    fail;\n+    put 0;\n+}\n+\n+fn main() {\n+    let a = @0;\n+    for each x in x() {\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "48e3063c6dde1e9d31955d08cb15a6f04d40ee1d", "filename": "src/test/run-fail/unwind-nested.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-nested.rs?ref=f99cf2d62f5cdf1075e7e2bb100112100a75242e", "patch": "@@ -0,0 +1,11 @@\n+// error-pattern:fail\n+\n+fn main() {\n+    let a = @0;\n+    {\n+        let b = @0;\n+        {\n+            fail;\n+        }\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "bf5258cee7d8ad7f9f66daf1ade9327289ea6c1d", "filename": "src/test/run-fail/unwind-stacked.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-stacked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-stacked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-stacked.rs?ref=f99cf2d62f5cdf1075e7e2bb100112100a75242e", "patch": "@@ -0,0 +1,16 @@\n+// error-pattern:fail\n+\n+fn f() {\n+    let a = @0;\n+    fail;\n+}\n+\n+fn g() {\n+    let b = @0;\n+    f();\n+}\n+\n+fn main() {\n+    let a = @0;\n+    g();\n+}\n\\ No newline at end of file"}, {"sha": "35269b3871462344ed72ca79e2c3076fd27fca66", "filename": "src/test/run-fail/unwind-uninitialized.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-uninitialized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-fail%2Funwind-uninitialized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-uninitialized.rs?ref=f99cf2d62f5cdf1075e7e2bb100112100a75242e", "patch": "@@ -0,0 +1,10 @@\n+// error-pattern:fail\n+\n+fn f() {\n+    fail;\n+}\n+\n+fn main() {\n+    f();\n+    let a = @0;\n+}\n\\ No newline at end of file"}, {"sha": "692a62c82721558fb42028cd3f7f82055a60568a", "filename": "src/test/run-pass/unwind-box.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-pass%2Funwind-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-pass%2Funwind-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-box.rs?ref=f99cf2d62f5cdf1075e7e2bb100112100a75242e", "patch": "@@ -0,0 +1,13 @@\n+use std;\n+import std::task;\n+\n+fn f() {\n+    task::unsupervise();\n+    let a = @0;\n+    fail;\n+}\n+\n+fn main() {\n+    let g = f;\n+    task::spawn(g);\n+}\n\\ No newline at end of file"}, {"sha": "cd25e43dfced38ecb9e3bb9c0ae6ff2ee0ef899e", "filename": "src/test/run-pass/unwind-resource.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-pass%2Funwind-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-pass%2Funwind-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-resource.rs?ref=f99cf2d62f5cdf1075e7e2bb100112100a75242e", "patch": "@@ -0,0 +1,20 @@\n+use std;\n+import std::task;\n+import std::comm;\n+\n+resource complainer(c: comm::chan<bool>) {\n+    comm::send(c, true);\n+}\n+\n+fn f(c: -comm::chan<bool>) {\n+    task::unsupervise();\n+    let c <- complainer(c);\n+    fail;\n+}\n+\n+fn main() {\n+    let p = comm::port();\n+    let c = comm::chan(p);\n+    task::spawn(bind f(c));\n+    assert comm::recv(p);\n+}\n\\ No newline at end of file"}, {"sha": "d2797f5154a17eb7acc4a5cc9dc4ab72cf26c646", "filename": "src/test/run-pass/unwind-resource2.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-pass%2Funwind-resource2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f99cf2d62f5cdf1075e7e2bb100112100a75242e/src%2Ftest%2Frun-pass%2Funwind-resource2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-resource2.rs?ref=f99cf2d62f5cdf1075e7e2bb100112100a75242e", "patch": "@@ -0,0 +1,17 @@\n+use std;\n+import std::task;\n+import std::comm;\n+\n+resource complainer(c: @int) {\n+}\n+\n+fn f() {\n+    task::unsupervise();\n+    let c <- complainer(@0);\n+    fail;\n+}\n+\n+fn main() {\n+    let g = f;\n+    task::spawn(g);\n+}\n\\ No newline at end of file"}]}