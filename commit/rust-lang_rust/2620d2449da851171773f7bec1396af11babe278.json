{"sha": "2620d2449da851171773f7bec1396af11babe278", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2MjBkMjQ0OWRhODUxMTcxNzczZjdiZWMxMzk2YWYxMWJhYmUyNzg=", "commit": {"author": {"name": "Vardan Margaryan", "email": "v.t.margaryan@gmail.com", "date": "2020-05-15T21:06:52Z"}, "committer": {"name": "Vardan Margaryan", "email": "v.t.margaryan@gmail.com", "date": "2020-05-15T21:06:52Z"}, "message": "Fix check for missing enum variants from match expressions\n\nTupleStruct matches are checked for exhaustiveness", "tree": {"sha": "dfebbe34dce3d46506295a2108898ea8116c2e8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfebbe34dce3d46506295a2108898ea8116c2e8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2620d2449da851171773f7bec1396af11babe278", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2620d2449da851171773f7bec1396af11babe278", "html_url": "https://github.com/rust-lang/rust/commit/2620d2449da851171773f7bec1396af11babe278", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2620d2449da851171773f7bec1396af11babe278/comments", "author": {"login": "vtmargaryan", "id": 8739550, "node_id": "MDQ6VXNlcjg3Mzk1NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8739550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtmargaryan", "html_url": "https://github.com/vtmargaryan", "followers_url": "https://api.github.com/users/vtmargaryan/followers", "following_url": "https://api.github.com/users/vtmargaryan/following{/other_user}", "gists_url": "https://api.github.com/users/vtmargaryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtmargaryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtmargaryan/subscriptions", "organizations_url": "https://api.github.com/users/vtmargaryan/orgs", "repos_url": "https://api.github.com/users/vtmargaryan/repos", "events_url": "https://api.github.com/users/vtmargaryan/events{/privacy}", "received_events_url": "https://api.github.com/users/vtmargaryan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vtmargaryan", "id": 8739550, "node_id": "MDQ6VXNlcjg3Mzk1NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8739550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtmargaryan", "html_url": "https://github.com/vtmargaryan", "followers_url": "https://api.github.com/users/vtmargaryan/followers", "following_url": "https://api.github.com/users/vtmargaryan/following{/other_user}", "gists_url": "https://api.github.com/users/vtmargaryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtmargaryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtmargaryan/subscriptions", "organizations_url": "https://api.github.com/users/vtmargaryan/orgs", "repos_url": "https://api.github.com/users/vtmargaryan/repos", "events_url": "https://api.github.com/users/vtmargaryan/events{/privacy}", "received_events_url": "https://api.github.com/users/vtmargaryan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10313a2631efa6a01dc86199d554ce5a7c1bb51a", "url": "https://api.github.com/repos/rust-lang/rust/commits/10313a2631efa6a01dc86199d554ce5a7c1bb51a", "html_url": "https://github.com/rust-lang/rust/commit/10313a2631efa6a01dc86199d554ce5a7c1bb51a"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "7d722820800c879b33db156e59e074bc6b610dcb", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2620d2449da851171773f7bec1396af11babe278/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2620d2449da851171773f7bec1396af11babe278/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=2620d2449da851171773f7bec1396af11babe278", "patch": "@@ -764,9 +764,21 @@ fn check_wild_enum_match(cx: &LateContext<'_, '_>, ex: &Expr<'_>, arms: &[Arm<'_\n                 if let QPath::Resolved(_, p) = path {\n                     missing_variants.retain(|e| e.ctor_def_id != Some(p.res.def_id()));\n                 }\n-            } else if let PatKind::TupleStruct(ref path, ..) = arm.pat.kind {\n+            } else if let PatKind::TupleStruct(ref path, ref patterns, ..) = arm.pat.kind {\n                 if let QPath::Resolved(_, p) = path {\n-                    missing_variants.retain(|e| e.ctor_def_id != Some(p.res.def_id()));\n+                    // Some simple checks for exhaustive patterns.\n+                    // There is a room for improvements to detect more cases,\n+                    // but it can be more expensive to do so.\n+                    let is_pattern_exhaustive = |pat: &&Pat<'_>| {\n+                        if let PatKind::Wild | PatKind::Binding(.., None) = pat.kind {\n+                            true\n+                        } else {\n+                            false\n+                        }\n+                    };\n+                    if patterns.iter().all(is_pattern_exhaustive) {\n+                        missing_variants.retain(|e| e.ctor_def_id != Some(p.res.def_id()));\n+                    }\n                 }\n             }\n         }"}, {"sha": "7545235e64670be0e51c3e48bfaf1a7e236bccf3", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2620d2449da851171773f7bec1396af11babe278/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2620d2449da851171773f7bec1396af11babe278/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=2620d2449da851171773f7bec1396af11babe278", "patch": "@@ -372,7 +372,7 @@ pub fn trait_ref_of_method<'tcx>(cx: &LateContext<'_, 'tcx>, hir_id: HirId) -> O\n pub fn has_drop<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, ty: Ty<'tcx>) -> bool {\n     match ty.ty_adt_def() {\n         Some(def) => def.has_dtor(cx.tcx),\n-        _ => false,\n+        None => false,\n     }\n }\n "}]}