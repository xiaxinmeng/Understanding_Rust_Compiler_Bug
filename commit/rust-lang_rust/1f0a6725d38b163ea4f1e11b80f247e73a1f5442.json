{"sha": "1f0a6725d38b163ea4f1e11b80f247e73a1f5442", "node_id": "C_kwDOAAsO6NoAKDFmMGE2NzI1ZDM4YjE2M2VhNGYxZTExYjgwZjI0N2U3M2ExZjU0NDI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-06T18:59:28Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-06T18:59:28Z"}, "message": "bump rustc-build-sysroot", "tree": {"sha": "3f0fa356a56891b7890b9959391964513484266c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f0fa356a56891b7890b9959391964513484266c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f0a6725d38b163ea4f1e11b80f247e73a1f5442", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f0a6725d38b163ea4f1e11b80f247e73a1f5442", "html_url": "https://github.com/rust-lang/rust/commit/1f0a6725d38b163ea4f1e11b80f247e73a1f5442", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f0a6725d38b163ea4f1e11b80f247e73a1f5442/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "724c1a0c4d782bd6190f7d8ad7607f16dde24f38", "url": "https://api.github.com/repos/rust-lang/rust/commits/724c1a0c4d782bd6190f7d8ad7607f16dde24f38", "html_url": "https://github.com/rust-lang/rust/commit/724c1a0c4d782bd6190f7d8ad7607f16dde24f38"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "3e5d388668b3e64130fea4c5700026dc2ab8cf27", "filename": "src/tools/miri/cargo-miri/Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f0a6725d38b163ea4f1e11b80f247e73a1f5442/src%2Ftools%2Fmiri%2Fcargo-miri%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/1f0a6725d38b163ea4f1e11b80f247e73a1f5442/src%2Ftools%2Fmiri%2Fcargo-miri%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fcargo-miri%2FCargo.lock?ref=1f0a6725d38b163ea4f1e11b80f247e73a1f5442", "patch": "@@ -175,9 +175,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-build-sysroot\"\n-version = \"0.3.3\"\n+version = \"0.4.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ec5f3689b6c560d6a3a17fcbe54204cd870b4fcf46342d60de16715b660d2c92\"\n+checksum = \"20c4b4625eeb148cccf82d5e9b90ad7fab3b11a0204cf75cc7fa04981a0fdffd\"\n dependencies = [\n  \"anyhow\",\n  \"rustc_version\","}, {"sha": "ce8457469e7cf029887514a193b9691961ddc777", "filename": "src/tools/miri/cargo-miri/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f0a6725d38b163ea4f1e11b80f247e73a1f5442/src%2Ftools%2Fmiri%2Fcargo-miri%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1f0a6725d38b163ea4f1e11b80f247e73a1f5442/src%2Ftools%2Fmiri%2Fcargo-miri%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fcargo-miri%2FCargo.toml?ref=1f0a6725d38b163ea4f1e11b80f247e73a1f5442", "patch": "@@ -18,7 +18,7 @@ directories = \"4\"\n rustc_version = \"0.4\"\n serde_json = \"1.0.40\"\n cargo_metadata = \"0.15.0\"\n-rustc-build-sysroot = \"0.3.3\"\n+rustc-build-sysroot = \"0.4\"\n \n # A noop dependency that changes in the Rust repository, it's a bit of a hack.\n # See the `src/tools/rustc-workspace-hack/README.md` file in `rust-lang/rust`"}, {"sha": "eb7d6b38a9e75251ac13524595b4d74aabef9ec6", "filename": "src/tools/miri/cargo-miri/src/setup.rs", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/1f0a6725d38b163ea4f1e11b80f247e73a1f5442/src%2Ftools%2Fmiri%2Fcargo-miri%2Fsrc%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f0a6725d38b163ea4f1e11b80f247e73a1f5442/src%2Ftools%2Fmiri%2Fcargo-miri%2Fsrc%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fcargo-miri%2Fsrc%2Fsetup.rs?ref=1f0a6725d38b163ea4f1e11b80f247e73a1f5442", "patch": "@@ -5,7 +5,7 @@ use std::ffi::OsStr;\n use std::path::PathBuf;\n use std::process::{self, Command};\n \n-use rustc_build_sysroot::{BuildMode, Sysroot, SysrootConfig};\n+use rustc_build_sysroot::{BuildMode, SysrootBuilder, SysrootConfig};\n use rustc_version::VersionMeta;\n \n use crate::util::*;\n@@ -67,9 +67,11 @@ pub fn setup(subcommand: &MiriCommand, target: &str, rustc_version: &VersionMeta\n     let sysroot_config = if std::env::var_os(\"MIRI_NO_STD\").is_some() {\n         SysrootConfig::NoStd\n     } else {\n-        SysrootConfig::WithStd { std_features: &[\"panic_unwind\", \"backtrace\"] }\n+        SysrootConfig::WithStd {\n+            std_features: [\"panic_unwind\", \"backtrace\"].into_iter().map(Into::into).collect(),\n+        }\n     };\n-    let cargo_cmd = || {\n+    let cargo_cmd = {\n         let mut command = cargo();\n         // Use Miri as rustc to build a libstd compatible with us (and use the right flags).\n         // However, when we are running in bootstrap, we cannot just overwrite `RUSTC`,\n@@ -103,13 +105,14 @@ pub fn setup(subcommand: &MiriCommand, target: &str, rustc_version: &VersionMeta\n             command.stdout(process::Stdio::null());\n             command.stderr(process::Stdio::null());\n         }\n-        // Disable debug assertions in the standard library -- Miri is already slow enough.\n-        // But keep the overflow checks, they are cheap. This completely overwrites flags\n-        // the user might have set, which is consistent with normal `cargo build` that does\n-        // not apply `RUSTFLAGS` to the sysroot either.\n-        let rustflags = vec![\"-Cdebug-assertions=off\".into(), \"-Coverflow-checks=on\".into()];\n-        (command, rustflags)\n+\n+        command\n     };\n+    // Disable debug assertions in the standard library -- Miri is already slow enough.\n+    // But keep the overflow checks, they are cheap. This completely overwrites flags\n+    // the user might have set, which is consistent with normal `cargo build` that does\n+    // not apply `RUSTFLAGS` to the sysroot either.\n+    let rustflags = &[\"-Cdebug-assertions=off\", \"-Coverflow-checks=on\"];\n     // Make sure all target-level Miri invocations know their sysroot.\n     std::env::set_var(\"MIRI_SYSROOT\", sysroot_dir);\n \n@@ -121,8 +124,13 @@ pub fn setup(subcommand: &MiriCommand, target: &str, rustc_version: &VersionMeta\n         // We want to be quiet, but still let the user know that something is happening.\n         eprint!(\"Preparing a sysroot for Miri (target: {target})... \");\n     }\n-    Sysroot::new(sysroot_dir, target)\n-        .build_from_source(&rust_src, BuildMode::Check, sysroot_config, rustc_version, cargo_cmd)\n+    SysrootBuilder::new(sysroot_dir, target)\n+        .build_mode(BuildMode::Check)\n+        .rustc_version(rustc_version.clone())\n+        .sysroot_config(sysroot_config)\n+        .rustflags(rustflags)\n+        .cargo(cargo_cmd)\n+        .build_from_source(&rust_src)\n         .unwrap_or_else(|_| {\n             if only_setup {\n                 show_error!(\"failed to build sysroot, see error details above\")"}]}