{"sha": "c42a64518af371fe7cc6b70607b5c35144b96575", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MmE2NDUxOGFmMzcxZmU3Y2M2YjcwNjA3YjVjMzUxNDRiOTY1NzU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-10-24T14:42:47Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-10-31T16:41:37Z"}, "message": "execute liveness, write a simple test", "tree": {"sha": "92769b0dd56f1d7706afdfcc9569b17dbcc044ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92769b0dd56f1d7706afdfcc9569b17dbcc044ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c42a64518af371fe7cc6b70607b5c35144b96575", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c42a64518af371fe7cc6b70607b5c35144b96575", "html_url": "https://github.com/rust-lang/rust/commit/c42a64518af371fe7cc6b70607b5c35144b96575", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c42a64518af371fe7cc6b70607b5c35144b96575/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6713736275181abb3304730603afd785b0470ae3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6713736275181abb3304730603afd785b0470ae3", "html_url": "https://github.com/rust-lang/rust/commit/6713736275181abb3304730603afd785b0470ae3"}], "stats": {"total": 75, "additions": 72, "deletions": 3}, "files": [{"sha": "ebc241e44ffdd823b11d1418fcd26a3fcc19ee48", "filename": "src/librustc_mir/transform/nll/mod.rs", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c42a64518af371fe7cc6b70607b5c35144b96575/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c42a64518af371fe7cc6b70607b5c35144b96575/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fnll%2Fmod.rs?ref=c42a64518af371fe7cc6b70607b5c35144b96575", "patch": "@@ -21,6 +21,7 @@ use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n use syntax_pos::DUMMY_SP;\n use std::collections::HashMap;\n use std::fmt;\n+use util::liveness;\n \n use util as mir_util;\n use self::mir_util::PassWhere;\n@@ -151,13 +152,34 @@ impl MirPass for NLL {\n         tcx.infer_ctxt().enter(|infcx| {\n             // Clone mir so we can mutate it without disturbing the rest of the compiler\n             let mut renumbered_mir = mir.clone();\n+\n             let mut visitor = NLLVisitor::new(&infcx);\n             visitor.visit_mir(&mut renumbered_mir);\n+\n+            let liveness = liveness::liveness_of_locals(&renumbered_mir);\n+\n             mir_util::dump_mir(tcx, None, \"nll\", &0, source, mir, |pass_where, out| {\n-                if let PassWhere::BeforeCFG = pass_where {\n-                    for (index, value) in visitor.regions.iter_enumerated() {\n-                        writeln!(out, \"// R{:03}: {:?}\", index.0, value)?;\n+                match pass_where {\n+                    // Before the CFG, dump out the values for each region variable.\n+                    PassWhere::BeforeCFG => {\n+                        for (index, value) in visitor.regions.iter_enumerated() {\n+                            writeln!(out, \"| R{:03}: {:?}\", index.0, value)?;\n+                        }\n                     }\n+\n+                    // Before each basic block, dump out the values\n+                    // that are live on entry to the basic block.\n+                    PassWhere::BeforeBlock(bb) => {\n+                        let local_set = &liveness.ins[bb];\n+                        writeln!(out, \"    | Variables live on entry to the block {:?}:\", bb)?;\n+                        for local in local_set.iter() {\n+                            writeln!(out, \"    | - {:?}\", local)?;\n+                        }\n+                    }\n+\n+                    PassWhere::InCFG(_) => { }\n+\n+                    PassWhere::AfterCFG => { }\n                 }\n                 Ok(())\n             });"}, {"sha": "e3c7ab3cc0cdd6f4f0ae44fc6c711e996253e3cf", "filename": "src/test/mir-opt/nll/liveness-interblock.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/c42a64518af371fe7cc6b70607b5c35144b96575/src%2Ftest%2Fmir-opt%2Fnll%2Fliveness-interblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c42a64518af371fe7cc6b70607b5c35144b96575/src%2Ftest%2Fmir-opt%2Fnll%2Fliveness-interblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fliveness-interblock.rs?ref=c42a64518af371fe7cc6b70607b5c35144b96575", "patch": "@@ -0,0 +1,47 @@\n+// Copyright 2012-2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:-Znll\n+\n+fn cond() -> bool { false }\n+\n+fn make_live(x: usize) { }\n+\n+fn make_dead() { }\n+\n+fn main() {\n+    let x = 5;\n+\n+    if cond() {\n+        make_live(x);\n+    } else {\n+        // x should be dead on entry to this block\n+        make_dead();\n+    }\n+}\n+\n+// END RUST SOURCE\n+// START rustc.node18.nll.0.mir\n+//     | Variables live on entry to the block bb2:\n+//     | - _1\n+//     bb2: {\n+//         StorageLive(_4);\n+//         _4 = _1;\n+//         _3 = const make_live(_4) -> bb4;\n+//     }\n+// END rustc.node18.nll.0.mir\n+// START rustc.node18.nll.0.mir\n+//     | Variables live on entry to the block bb3:\n+//     bb3: {\n+//         _5 = const make_dead() -> bb5;\n+//     }\n+// END rustc.node18.nll.0.mir\n+\n+"}]}