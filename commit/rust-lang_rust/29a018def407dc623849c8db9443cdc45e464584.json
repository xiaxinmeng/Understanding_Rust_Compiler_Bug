{"sha": "29a018def407dc623849c8db9443cdc45e464584", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YTAxOGRlZjQwN2RjNjIzODQ5YzhkYjk0NDNjZGM0NWU0NjQ1ODQ=", "commit": {"author": {"name": "Ryan Levick", "email": "rylev@users.noreply.github.com", "date": "2021-09-06T10:38:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-06T10:38:54Z"}, "message": "Rollup merge of #88647 - ChrisDenton:win-symlink-docs, r=joshtriplett\n\nDocument when to use Windows' `symlink_dir` vs. `symlink_file`\n\nIt was previously unclear why there are two functions and when they should be used.\n\nFixes: #88635", "tree": {"sha": "db0de6021cd07ea1532d30cbb587c2bd8432ddb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db0de6021cd07ea1532d30cbb587c2bd8432ddb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29a018def407dc623849c8db9443cdc45e464584", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhNe++CRBK7hj4Ov3rIwAAf1IIABPnGcbB7EYzxYXllwfOKOau\nUsbos2lOHciulsxiqdYkd6sKKXZYFE0LpckPQjGU964KaeMthN6Wnvp6YxhMbzbR\nvBiXTYUKhVzShOePSO5jwRv1AetyBg6NSSh+IXOJG1kD1+ZJLnZtfMjv1TldQzAK\nGqb7cGApHbUxsv0t7574Yandm9W+Bz6uf5CxXUZ9V500uyeeCCQcCMVKowzXo/za\nCD7Jh7aExQbdIVmxW2jJL3s5ZiRYz4/03laeWrbbrwO9HBkj53jexgKw3vIIS1Wr\nIn5EdiOGpdkiWYzxnFRKMM7j9X/m5d3uu+odswM/Lo1v4G6Wn4EWGIYPdj6ypG4=\n=E5mr\n-----END PGP SIGNATURE-----\n", "payload": "tree db0de6021cd07ea1532d30cbb587c2bd8432ddb6\nparent dcd0e1d835c16e41dab49037e7887cb80d746aef\nparent 2d95b5bce7119ae5549499083d24d143eae34d6b\nauthor Ryan Levick <rylev@users.noreply.github.com> 1630924734 +0200\ncommitter GitHub <noreply@github.com> 1630924734 +0200\n\nRollup merge of #88647 - ChrisDenton:win-symlink-docs, r=joshtriplett\n\nDocument when to use Windows' `symlink_dir` vs. `symlink_file`\n\nIt was previously unclear why there are two functions and when they should be used.\n\nFixes: #88635\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29a018def407dc623849c8db9443cdc45e464584", "html_url": "https://github.com/rust-lang/rust/commit/29a018def407dc623849c8db9443cdc45e464584", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29a018def407dc623849c8db9443cdc45e464584/comments", "author": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcd0e1d835c16e41dab49037e7887cb80d746aef", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcd0e1d835c16e41dab49037e7887cb80d746aef", "html_url": "https://github.com/rust-lang/rust/commit/dcd0e1d835c16e41dab49037e7887cb80d746aef"}, {"sha": "2d95b5bce7119ae5549499083d24d143eae34d6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d95b5bce7119ae5549499083d24d143eae34d6b", "html_url": "https://github.com/rust-lang/rust/commit/2d95b5bce7119ae5549499083d24d143eae34d6b"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "71563a02dcbb931290b75a22c20ed4cc6bc1be80", "filename": "library/std/src/os/windows/fs.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/29a018def407dc623849c8db9443cdc45e464584/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29a018def407dc623849c8db9443cdc45e464584/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Ffs.rs?ref=29a018def407dc623849c8db9443cdc45e464584", "patch": "@@ -517,11 +517,20 @@ impl FileTypeExt for fs::FileType {\n     }\n }\n \n-/// Creates a new file symbolic link on the filesystem.\n+/// Creates a new symlink to a non-directory file on the filesystem.\n ///\n /// The `link` path will be a file symbolic link pointing to the `original`\n /// path.\n ///\n+/// The `original` path should not be a directory or a symlink to a directory,\n+/// otherwise the symlink will be broken. Use [`symlink_dir`] for directories.\n+///\n+/// This function currently corresponds to [`CreateSymbolicLinkW`][CreateSymbolicLinkW].\n+/// Note that this [may change in the future][changes].\n+///\n+/// [CreateSymbolicLinkW]: https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createsymboliclinkw\n+/// [changes]: io#platform-specific-behavior\n+///\n /// # Examples\n ///\n /// ```no_run\n@@ -537,11 +546,20 @@ pub fn symlink_file<P: AsRef<Path>, Q: AsRef<Path>>(original: P, link: Q) -> io:\n     sys::fs::symlink_inner(original.as_ref(), link.as_ref(), false)\n }\n \n-/// Creates a new directory symlink on the filesystem.\n+/// Creates a new symlink to a directory on the filesystem.\n ///\n /// The `link` path will be a directory symbolic link pointing to the `original`\n /// path.\n ///\n+/// The `original` path must be a directory or a symlink to a directory,\n+/// otherwise the symlink will be broken. Use [`symlink_file`] for other files.\n+///\n+/// This function currently corresponds to [`CreateSymbolicLinkW`][CreateSymbolicLinkW].\n+/// Note that this [may change in the future][changes].\n+///\n+/// [CreateSymbolicLinkW]: https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createsymboliclinkw\n+/// [changes]: io#platform-specific-behavior\n+///\n /// # Examples\n ///\n /// ```no_run"}]}