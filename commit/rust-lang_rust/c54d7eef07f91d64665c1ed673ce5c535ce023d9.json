{"sha": "c54d7eef07f91d64665c1ed673ce5c535ce023d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1NGQ3ZWVmMDdmOTFkNjQ2NjVjMWVkNjczY2U1YzUzNWNlMDIzZDk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-01-07T18:41:18Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-01-07T18:41:18Z"}, "message": "expand docs", "tree": {"sha": "0b8e746aaf8f9a07ac7a68ab85eab41d91cbd1a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b8e746aaf8f9a07ac7a68ab85eab41d91cbd1a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c54d7eef07f91d64665c1ed673ce5c535ce023d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c54d7eef07f91d64665c1ed673ce5c535ce023d9", "html_url": "https://github.com/rust-lang/rust/commit/c54d7eef07f91d64665c1ed673ce5c535ce023d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c54d7eef07f91d64665c1ed673ce5c535ce023d9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44612aa8348fd204b0678b385e285271874ebc26", "url": "https://api.github.com/repos/rust-lang/rust/commits/44612aa8348fd204b0678b385e285271874ebc26", "html_url": "https://github.com/rust-lang/rust/commit/44612aa8348fd204b0678b385e285271874ebc26"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "80fc98a86965d1814a698f024d0a0e0d818e2ac9", "filename": "src/range_map.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c54d7eef07f91d64665c1ed673ce5c535ce023d9/src%2Frange_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54d7eef07f91d64665c1ed673ce5c535ce023d9/src%2Frange_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frange_map.rs?ref=c54d7eef07f91d64665c1ed673ce5c535ce023d9", "patch": "@@ -117,6 +117,7 @@ impl<T> RangeMap<T> {\n     /// Provide mutable iteration over everything in the given range.  As a side-effect,\n     /// this will split entries in the map that are only partially hit by the given range,\n     /// to make sure that when they are mutated, the effect is constrained to the given range.\n+    /// Moreover, this will opportunistically merge neighbouring equal blocks.\n     pub fn iter_mut<'a>(\n         &'a mut self,\n         offset: Size,"}]}