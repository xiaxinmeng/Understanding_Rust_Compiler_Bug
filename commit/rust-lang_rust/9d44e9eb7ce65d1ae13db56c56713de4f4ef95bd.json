{"sha": "9d44e9eb7ce65d1ae13db56c56713de4f4ef95bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNDRlOWViN2NlNjVkMWFlMTNkYjU2YzU2NzEzZGU0ZjRlZjk1YmQ=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2018-09-28T20:20:16Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2018-10-01T19:44:45Z"}, "message": "enable using the evaluation cache on predicates with LBRs\n\nThere is no reason not to do it.", "tree": {"sha": "8e12dc2f881c063483a0d884e925db0e34645854", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e12dc2f881c063483a0d884e925db0e34645854"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d44e9eb7ce65d1ae13db56c56713de4f4ef95bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d44e9eb7ce65d1ae13db56c56713de4f4ef95bd", "html_url": "https://github.com/rust-lang/rust/commit/9d44e9eb7ce65d1ae13db56c56713de4f4ef95bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d44e9eb7ce65d1ae13db56c56713de4f4ef95bd/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53a4b3990974ddad56fd37e6b164e57a3993694c", "url": "https://api.github.com/repos/rust-lang/rust/commits/53a4b3990974ddad56fd37e6b164e57a3993694c", "html_url": "https://github.com/rust-lang/rust/commit/53a4b3990974ddad56fd37e6b164e57a3993694c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e6bf02cd73e0da09757bd7aea4c33c934ed7c14e", "filename": "src/librustc/traits/fulfill.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d44e9eb7ce65d1ae13db56c56713de4f4ef95bd/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d44e9eb7ce65d1ae13db56c56713de4f4ef95bd/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ffulfill.rs?ref=9d44e9eb7ce65d1ae13db56c56713de4f4ef95bd", "patch": "@@ -292,7 +292,7 @@ impl<'a, 'b, 'gcx, 'tcx> ObligationProcessor for FulfillProcessor<'a, 'b, 'gcx,\n             ty::Predicate::Trait(ref data) => {\n                 let trait_obligation = obligation.with(data.clone());\n \n-                if data.is_global() && !data.has_late_bound_regions() {\n+                if data.is_global() {\n                     // no type variables present, can use evaluation for better caching.\n                     // FIXME: consider caching errors too.\n                     if self.selcx.infcx().predicate_must_hold(&obligation) {"}]}