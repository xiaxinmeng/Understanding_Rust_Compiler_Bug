{"sha": "c857cbeb0610db7148682808c7305073546b6a63", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NTdjYmViMDYxMGRiNzE0ODY4MjgwOGM3MzA1MDczNTQ2YjZhNjM=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-12-07T23:10:48Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-12-29T21:30:02Z"}, "message": "Lint on redundant trailing semicolon after item\n\nWe now lint on code like this:\n\n```rust\nfn main() {\n    fn foo() {};\n    struct Bar {};\n}\n```\n\nPreviously, this caused warnings in Cargo, so it was disabled.", "tree": {"sha": "4a04a5f388d89b7f9acf9f205617e6d652fdb857", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a04a5f388d89b7f9acf9f205617e6d652fdb857"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c857cbeb0610db7148682808c7305073546b6a63", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl/rn9oACgkQtAh+UQ6Y\nsWSqgQ/6Aru7mI48xfRvZpEKInTEJsLlHIfG46hzNCoBRuKJVyo84+61HBTUBgBR\nKYggygTdkUeNyY85/Y7m90/k9egUDMHoq+jNzFrcN6iHCXlQtq0HAnMV+uCZzF9d\nZtnNRWToOzcoj7djHkTrzxUrnK3UYWv9RULvzagon87L+/RUYfY5gBnJyCf0IlGM\nLSGf+c3QBrPN1GOXl3TeXEX5HsxlLecqbI3Z1H1tPchdsfQMtKsnt5ybHF1SkAX2\ndumno0KiH6GlqKTsIPuwob1Z+3RuN+8UfTTX7Pkf9jT1Bs1AEyRA+5FAt/em43U+\nI+jqoYWfclVqciXbQDk7Qujk5m7THJ9TvYc2WYjaBJqAjKt3qB92qQESweGY5grC\nVfk5qq5JSqUzsGAgYyAfbMwF2KZ8OOsXi2kiTG+CvQc0X+SrttqWOWWHWECo6L7q\nGlluE62tGuh1jdEksjg/WvH8v3UI8UPPaNSkr2BjsZeuNwl67w9ut0xqgCV1olX2\nS/FVAn61rtfLurmVx2Gzg+YtzYybl/3iBdszr+p+vwZC6+OvExshRQgHJdlXX61o\n+kSqEdVp/4A75OoPMUetQlnJZuvyzUy45lLFqVUQ7yynyhORVpb5eiSR7dmY3SBY\nBJ5iVwE9IHx3YPTGqPtL1UtdFdb3LqpMOHC0NTY8nqKGIYZy1XQ=\n=9SJo\n-----END PGP SIGNATURE-----", "payload": "tree 4a04a5f388d89b7f9acf9f205617e6d652fdb857\nparent 158f8d034b15e65ba8dc0d066358dd0632bfcd6e\nauthor Aaron Hill <aa1ronham@gmail.com> 1607382648 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1609277402 -0500\n\nLint on redundant trailing semicolon after item\n\nWe now lint on code like this:\n\n```rust\nfn main() {\n    fn foo() {};\n    struct Bar {};\n}\n```\n\nPreviously, this caused warnings in Cargo, so it was disabled.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c857cbeb0610db7148682808c7305073546b6a63", "html_url": "https://github.com/rust-lang/rust/commit/c857cbeb0610db7148682808c7305073546b6a63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c857cbeb0610db7148682808c7305073546b6a63/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "158f8d034b15e65ba8dc0d066358dd0632bfcd6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/158f8d034b15e65ba8dc0d066358dd0632bfcd6e", "html_url": "https://github.com/rust-lang/rust/commit/158f8d034b15e65ba8dc0d066358dd0632bfcd6e"}], "stats": {"total": 48, "additions": 25, "deletions": 23}, "files": [{"sha": "0fe6564880f010b8e46de5a64a3c589753a39f34", "filename": "compiler/rustc_lint/src/redundant_semicolon.rs", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c857cbeb0610db7148682808c7305073546b6a63/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c857cbeb0610db7148682808c7305073546b6a63/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs?ref=c857cbeb0610db7148682808c7305073546b6a63", "patch": "@@ -28,40 +28,26 @@ declare_lint_pass!(RedundantSemicolons => [REDUNDANT_SEMICOLONS]);\n \n impl EarlyLintPass for RedundantSemicolons {\n     fn check_block(&mut self, cx: &EarlyContext<'_>, block: &Block) {\n-        let mut after_item_stmt = false;\n         let mut seq = None;\n         for stmt in block.stmts.iter() {\n             match (&stmt.kind, &mut seq) {\n                 (StmtKind::Empty, None) => seq = Some((stmt.span, false)),\n                 (StmtKind::Empty, Some(seq)) => *seq = (seq.0.to(stmt.span), true),\n-                (_, seq) => {\n-                    maybe_lint_redundant_semis(cx, seq, after_item_stmt);\n-                    after_item_stmt = matches!(stmt.kind, StmtKind::Item(_));\n-                }\n+                (_, seq) => maybe_lint_redundant_semis(cx, seq),\n             }\n         }\n-        maybe_lint_redundant_semis(cx, &mut seq, after_item_stmt);\n+        maybe_lint_redundant_semis(cx, &mut seq);\n     }\n }\n \n-fn maybe_lint_redundant_semis(\n-    cx: &EarlyContext<'_>,\n-    seq: &mut Option<(Span, bool)>,\n-    after_item_stmt: bool,\n-) {\n+fn maybe_lint_redundant_semis(cx: &EarlyContext<'_>, seq: &mut Option<(Span, bool)>) {\n     if let Some((span, multiple)) = seq.take() {\n         // FIXME: Find a better way of ignoring the trailing\n         // semicolon from macro expansion\n         if span == rustc_span::DUMMY_SP {\n             return;\n         }\n \n-        // FIXME: Lint on semicolons after item statements\n-        // once doing so doesn't break bootstrapping\n-        if after_item_stmt {\n-            return;\n-        }\n-\n         cx.struct_span_lint(REDUNDANT_SEMICOLONS, span, |lint| {\n             let (msg, rem) = if multiple {\n                 (\"unnecessary trailing semicolons\", \"remove these semicolons\")"}, {"sha": "8c79630b7fd2cb5fb9776ae49f8be6843b63e894", "filename": "src/test/ui/lint/redundant-semicolon/item-stmt-semi.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c857cbeb0610db7148682808c7305073546b6a63/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c857cbeb0610db7148682808c7305073546b6a63/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.rs?ref=c857cbeb0610db7148682808c7305073546b6a63", "patch": "@@ -1,10 +1,6 @@\n-// check-pass\n-// This test should stop compiling\n-// we decide to enable this lint for item statements.\n-\n #![deny(redundant_semicolons)]\n \n fn main() {\n-    fn inner() {};\n-    struct Bar {};\n+    fn inner() {}; //~ ERROR unnecessary\n+    struct Bar {}; //~ ERROR unnecessary\n }"}, {"sha": "451b152cbe5a05f4318e8f3508a7425dc3d9601f", "filename": "src/test/ui/lint/redundant-semicolon/item-stmt-semi.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c857cbeb0610db7148682808c7305073546b6a63/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c857cbeb0610db7148682808c7305073546b6a63/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fredundant-semicolon%2Fitem-stmt-semi.stderr?ref=c857cbeb0610db7148682808c7305073546b6a63", "patch": "@@ -0,0 +1,20 @@\n+error: unnecessary trailing semicolon\n+  --> $DIR/item-stmt-semi.rs:4:18\n+   |\n+LL |     fn inner() {};\n+   |                  ^ help: remove this semicolon\n+   |\n+note: the lint level is defined here\n+  --> $DIR/item-stmt-semi.rs:1:9\n+   |\n+LL | #![deny(redundant_semicolons)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: unnecessary trailing semicolon\n+  --> $DIR/item-stmt-semi.rs:5:18\n+   |\n+LL |     struct Bar {};\n+   |                  ^ help: remove this semicolon\n+\n+error: aborting due to 2 previous errors\n+"}]}