{"sha": "bd3c4fb2f6accf64c23ac3aff9e4e96506e2f7b1", "node_id": "C_kwDOAAsO6NoAKGJkM2M0ZmIyZjZhY2NmNjRjMjNhYzNhZmY5ZTRlOTY1MDZlMmY3YjE", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-11-09T21:37:17Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-11-09T21:38:10Z"}, "message": "Display help message when fluent arg was referenced incorrectly\n\nThe fluent argument syntax is a little special and easy to get wrong, so\nwe emit a small help message when someone gets it wrong.\n\nExample:\n```\nparser_mismatched_closing_delimiter = mismatched closing delimiter: `${delimiter}`\n```\npanics with\n```\nthread 'rustc' panicked at 'Encountered errors while formatting message for `parser_mismatched_closing_delimiter`\nhelp: Argument `delimiter` exists but was not referenced correctly. Try using `{$delimiter}` instead\nattr: `None`\nargs: `FluentArgs([(\"delimiter\", String(\"}\"))])`\nerrors: `[ResolverError(Reference(Message { id: \"delimiter\", attribute: None }))]`', compiler/rustc_errors/src/translation.rs:123:21\n```", "tree": {"sha": "d0521ea87ff3eabb9671a530d43a7a481bc13769", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0521ea87ff3eabb9671a530d43a7a481bc13769"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd3c4fb2f6accf64c23ac3aff9e4e96506e2f7b1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgbSfWKRQb2tiqhuHtakDJeupmrF\nChDbM0msU+PXaBOk8AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQJ+jiWG5+06kwTsMvtCq7Dt4SUxzHZoHVgn6S/L+TghNsrVH25cdHyiq+TJxnKHvrB\n2ktgaaT6BqQqk2o6dhKgs=\n-----END SSH SIGNATURE-----", "payload": "tree d0521ea87ff3eabb9671a530d43a7a481bc13769\nparent cc9b259b5e94e4543b96dca236e3a1af5ec496c9\nauthor Nilstrieb <48135649+Nilstrieb@users.noreply.github.com> 1668029837 +0100\ncommitter Nilstrieb <48135649+Nilstrieb@users.noreply.github.com> 1668029890 +0100\n\nDisplay help message when fluent arg was referenced incorrectly\n\nThe fluent argument syntax is a little special and easy to get wrong, so\nwe emit a small help message when someone gets it wrong.\n\nExample:\n```\nparser_mismatched_closing_delimiter = mismatched closing delimiter: `${delimiter}`\n```\npanics with\n```\nthread 'rustc' panicked at 'Encountered errors while formatting message for `parser_mismatched_closing_delimiter`\nhelp: Argument `delimiter` exists but was not referenced correctly. Try using `{$delimiter}` instead\nattr: `None`\nargs: `FluentArgs([(\"delimiter\", String(\"}\"))])`\nerrors: `[ResolverError(Reference(Message { id: \"delimiter\", attribute: None }))]`', compiler/rustc_errors/src/translation.rs:123:21\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd3c4fb2f6accf64c23ac3aff9e4e96506e2f7b1", "html_url": "https://github.com/rust-lang/rust/commit/bd3c4fb2f6accf64c23ac3aff9e4e96506e2f7b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd3c4fb2f6accf64c23ac3aff9e4e96506e2f7b1/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc9b259b5e94e4543b96dca236e3a1af5ec496c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc9b259b5e94e4543b96dca236e3a1af5ec496c9", "html_url": "https://github.com/rust-lang/rust/commit/cc9b259b5e94e4543b96dca236e3a1af5ec496c9"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "3467dfdbb4789c9f1681dcf6a750373253677aac", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bd3c4fb2f6accf64c23ac3aff9e4e96506e2f7b1/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd3c4fb2f6accf64c23ac3aff9e4e96506e2f7b1/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=bd3c4fb2f6accf64c23ac3aff9e4e96506e2f7b1", "patch": "@@ -30,7 +30,8 @@ use intl_memoizer::concurrent::IntlLangMemoizer;\n #[cfg(not(parallel_compiler))]\n use intl_memoizer::IntlLangMemoizer;\n \n-pub use fluent_bundle::{FluentArgs, FluentError, FluentValue};\n+pub use fluent_bundle::{self, FluentArgs, FluentError, FluentValue};\n+\n pub use unic_langid::{langid, LanguageIdentifier};\n \n // Generates `DEFAULT_LOCALE_RESOURCES` static and `fluent_generated` module."}, {"sha": "a452fac074787348a0bf5666d5b7b55cfa00421f", "filename": "compiler/rustc_errors/src/translation.rs", "status": "modified", "additions": 29, "deletions": 9, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/bd3c4fb2f6accf64c23ac3aff9e4e96506e2f7b1/compiler%2Frustc_errors%2Fsrc%2Ftranslation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd3c4fb2f6accf64c23ac3aff9e4e96506e2f7b1/compiler%2Frustc_errors%2Fsrc%2Ftranslation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Ftranslation.rs?ref=bd3c4fb2f6accf64c23ac3aff9e4e96506e2f7b1", "patch": "@@ -1,7 +1,10 @@\n use crate::snippet::Style;\n use crate::{DiagnosticArg, DiagnosticMessage, FluentBundle};\n use rustc_data_structures::sync::Lrc;\n-use rustc_error_messages::FluentArgs;\n+use rustc_error_messages::{\n+    fluent_bundle::resolver::errors::{ReferenceKind, ResolverError},\n+    FluentArgs, FluentError,\n+};\n use std::borrow::Cow;\n \n /// Convert diagnostic arguments (a rustc internal type that exists to implement\n@@ -102,14 +105,31 @@ pub trait Translate {\n             .or_else(|| translate_with_bundle(self.fallback_fluent_bundle()))\n             .map(|(translated, errs)| {\n                 // Always bail out for errors with the fallback bundle.\n-                assert!(\n-                    errs.is_empty(),\n-                    \"identifier: {:?}, attr: {:?}, args: {:?}, errors: {:?}\",\n-                    identifier,\n-                    attr,\n-                    args,\n-                    errs\n-                );\n+\n+                let mut help_messages = vec![];\n+\n+                if !errs.is_empty() {\n+                    for error in &errs {\n+                        match error {\n+                            FluentError::ResolverError(ResolverError::Reference(\n+                                ReferenceKind::Message { id, .. },\n+                            )) if args.iter().any(|(arg_id, _)| arg_id == id) => {\n+                                help_messages.push(format!(\"Argument `{id}` exists but was not referenced correctly. Try using `{{${id}}}` instead\"));\n+                            }\n+                            _ => {}\n+                        }\n+                    }\n+\n+                    panic!(\n+                        \"Encountered errors while formatting message for `{identifier}`\\n\\\n+                        help: {}\\n\\\n+                        attr: `{attr:?}`\\n\\\n+                        args: `{args:?}`\\n\\\n+                        errors: `{errs:?}`\",\n+                        help_messages.join(\"\\nhelp: \")\n+                    );\n+                }\n+\n                 translated\n             })\n             .expect(\"failed to find message in primary or fallback fluent bundles\")"}]}