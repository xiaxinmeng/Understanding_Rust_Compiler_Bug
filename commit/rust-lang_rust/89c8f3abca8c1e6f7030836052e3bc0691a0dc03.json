{"sha": "89c8f3abca8c1e6f7030836052e3bc0691a0dc03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5YzhmM2FiY2E4YzFlNmY3MDMwODM2MDUyZTNiYzA2OTFhMGRjMDM=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-10-29T17:17:16Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-11-03T07:23:50Z"}, "message": "rustc: rename {Fn,Arg}TypeExt to {Fn,Arg}AbiExt.", "tree": {"sha": "70b61041a6ebeb9d0a58671785dc484fd5d92895", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70b61041a6ebeb9d0a58671785dc484fd5d92895"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89c8f3abca8c1e6f7030836052e3bc0691a0dc03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89c8f3abca8c1e6f7030836052e3bc0691a0dc03", "html_url": "https://github.com/rust-lang/rust/commit/89c8f3abca8c1e6f7030836052e3bc0691a0dc03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89c8f3abca8c1e6f7030836052e3bc0691a0dc03/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6567154ede38d9bb65413942845bf9739d830a20", "url": "https://api.github.com/repos/rust-lang/rust/commits/6567154ede38d9bb65413942845bf9739d830a20", "html_url": "https://github.com/rust-lang/rust/commit/6567154ede38d9bb65413942845bf9739d830a20"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "95040135eb7d3984c890a8c9de49f0ab0338199a", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/89c8f3abca8c1e6f7030836052e3bc0691a0dc03/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89c8f3abca8c1e6f7030836052e3bc0691a0dc03/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=89c8f3abca8c1e6f7030836052e3bc0691a0dc03", "patch": "@@ -2487,7 +2487,7 @@ impl<'a, 'tcx> HashStable<StableHashingContext<'a>> for LayoutError<'tcx> {\n     }\n }\n \n-pub trait FnTypeExt<'tcx, C>\n+pub trait FnAbiExt<'tcx, C>\n where\n     C: LayoutOf<Ty = Ty<'tcx>, TyLayout = TyLayout<'tcx>>\n         + HasDataLayout\n@@ -2507,7 +2507,7 @@ where\n     fn adjust_for_abi(&mut self, cx: &C, abi: SpecAbi);\n }\n \n-impl<'tcx, C> FnTypeExt<'tcx, C> for call::FnAbi<'tcx, Ty<'tcx>>\n+impl<'tcx, C> FnAbiExt<'tcx, C> for call::FnAbi<'tcx, Ty<'tcx>>\n where\n     C: LayoutOf<Ty = Ty<'tcx>, TyLayout = TyLayout<'tcx>>\n         + HasDataLayout\n@@ -2528,7 +2528,7 @@ where\n     }\n \n     fn new_vtable(cx: &C, sig: ty::FnSig<'tcx>, extra_args: &[Ty<'tcx>]) -> Self {\n-        FnTypeExt::new_internal(cx, sig, extra_args, |ty, arg_idx| {\n+        FnAbiExt::new_internal(cx, sig, extra_args, |ty, arg_idx| {\n             let mut layout = cx.layout_of(ty);\n             // Don't pass the vtable, it's not an argument of the virtual fn.\n             // Instead, pass just the data pointer, but give it the type `*const/mut dyn Trait`"}, {"sha": "31e2fb3eccbaab4b954083a4c0c00213d54add64", "filename": "src/librustc_codegen_llvm/abi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/89c8f3abca8c1e6f7030836052e3bc0691a0dc03/src%2Flibrustc_codegen_llvm%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89c8f3abca8c1e6f7030836052e3bc0691a0dc03/src%2Flibrustc_codegen_llvm%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fabi.rs?ref=89c8f3abca8c1e6f7030836052e3bc0691a0dc03", "patch": "@@ -163,7 +163,7 @@ impl LlvmType for CastTarget {\n     }\n }\n \n-pub trait ArgTypeExt<'ll, 'tcx> {\n+pub trait ArgAbiExt<'ll, 'tcx> {\n     fn memory_ty(&self, cx: &CodegenCx<'ll, 'tcx>) -> &'ll Type;\n     fn store(\n         &self,\n@@ -179,7 +179,7 @@ pub trait ArgTypeExt<'ll, 'tcx> {\n     );\n }\n \n-impl ArgTypeExt<'ll, 'tcx> for ArgAbi<'tcx, Ty<'tcx>> {\n+impl ArgAbiExt<'ll, 'tcx> for ArgAbi<'tcx, Ty<'tcx>> {\n     /// Gets the LLVM type for a place of the original Rust type of\n     /// this argument/return, i.e., the result of `type_of::type_of`.\n     fn memory_ty(&self, cx: &CodegenCx<'ll, 'tcx>) -> &'ll Type {"}, {"sha": "1fe97001fc92bd935e7c5c1fc5468cc7aab61aba", "filename": "src/librustc_codegen_llvm/declare.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89c8f3abca8c1e6f7030836052e3bc0691a0dc03/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89c8f3abca8c1e6f7030836052e3bc0691a0dc03/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdeclare.rs?ref=89c8f3abca8c1e6f7030836052e3bc0691a0dc03", "patch": "@@ -19,7 +19,7 @@ use crate::context::CodegenCx;\n use crate::type_::Type;\n use crate::value::Value;\n use rustc::ty::{self, PolyFnSig};\n-use rustc::ty::layout::{FnTypeExt, LayoutOf};\n+use rustc::ty::layout::{FnAbiExt, LayoutOf};\n use rustc::session::config::Sanitizer;\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_codegen_ssa::traits::*;"}, {"sha": "dc68872ede11c664a179ed2059ca65590035f14c", "filename": "src/librustc_codegen_llvm/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89c8f3abca8c1e6f7030836052e3bc0691a0dc03/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89c8f3abca8c1e6f7030836052e3bc0691a0dc03/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_of.rs?ref=89c8f3abca8c1e6f7030836052e3bc0691a0dc03", "patch": "@@ -2,7 +2,7 @@ use crate::abi::{FnAbi};\n use crate::common::*;\n use crate::type_::Type;\n use rustc::ty::{self, Ty, TypeFoldable};\n-use rustc::ty::layout::{self, Align, LayoutOf, FnTypeExt, PointeeInfo, Size, TyLayout};\n+use rustc::ty::layout::{self, Align, LayoutOf, FnAbiExt, PointeeInfo, Size, TyLayout};\n use rustc_target::abi::{FloatTy, TyLayoutMethods};\n use rustc::ty::print::obsolete::DefPathBasedNames;\n use rustc_codegen_ssa::traits::*;"}, {"sha": "07e904300a69655c70a31f5770c8f6b99484b7e2", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89c8f3abca8c1e6f7030836052e3bc0691a0dc03/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89c8f3abca8c1e6f7030836052e3bc0691a0dc03/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=89c8f3abca8c1e6f7030836052e3bc0691a0dc03", "patch": "@@ -1,7 +1,7 @@\n use rustc_index::vec::Idx;\n use rustc::middle::lang_items;\n use rustc::ty::{self, Ty, TypeFoldable, Instance};\n-use rustc::ty::layout::{self, LayoutOf, HasTyCtxt, FnTypeExt};\n+use rustc::ty::layout::{self, LayoutOf, HasTyCtxt, FnAbiExt};\n use rustc::mir::{self, PlaceBase, Static, StaticKind};\n use rustc::mir::interpret::PanicInfo;\n use rustc_target::abi::call::{ArgAbi, FnAbi, PassMode};"}, {"sha": "fec31f07a349b73c8a8f7bee06091de23b5a0922", "filename": "src/librustc_codegen_ssa/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89c8f3abca8c1e6f7030836052e3bc0691a0dc03/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89c8f3abca8c1e6f7030836052e3bc0691a0dc03/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs?ref=89c8f3abca8c1e6f7030836052e3bc0691a0dc03", "patch": "@@ -1,5 +1,5 @@\n use rustc::ty::{self, Ty, TypeFoldable, Instance};\n-use rustc::ty::layout::{TyLayout, HasTyCtxt, FnTypeExt};\n+use rustc::ty::layout::{TyLayout, HasTyCtxt, FnAbiExt};\n use rustc::mir::{self, Body};\n use rustc_target::abi::call::{FnAbi, PassMode};\n use crate::base;"}]}