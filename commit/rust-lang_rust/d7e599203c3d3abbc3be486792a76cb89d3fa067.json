{"sha": "d7e599203c3d3abbc3be486792a76cb89d3fa067", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ZTU5OTIwM2MzZDNhYmJjM2JlNDg2NzkyYTc2Y2I4OWQzZmEwNjc=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-14T05:02:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-14T05:02:23Z"}, "message": "Rollup merge of #68143 - skinny121:const-param-type-elided-lifetime, r=petrochenkov\n\nForbid elided lifetimes within const generic parameter types\n\nDisallows `fn foo<const T: &u32>()`, the lifetime must be explicitly given, i.e. `fn foo<const T: &'static u32>()`.\n\nFixes #67883", "tree": {"sha": "897b1ec459167b5022011e2ce5cfeaf3bedc7255", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/897b1ec459167b5022011e2ce5cfeaf3bedc7255"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7e599203c3d3abbc3be486792a76cb89d3fa067", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeHUtfCRBK7hj4Ov3rIwAAdHIIAGzvGGjUu7zKUbh5UhI/S7OI\ncxXa2GXHzNTy8VsC9Z2Gt8FbWsxg2tTBMZfyLuCcRIm1T6qZY5uYcu37MRvxtZcf\ngIorciBMy+gQS4dth4rZESjb0f4jNff7qvbdl+3ZnYxVxskw+lH5/WfPKUw+MX7e\n5Vd843e5mzYbtS1aRl8GkTOTqxVGq2ryiTsQv/ENvPKmY++YmZiPhTmDNKlOTTp+\ntKYmlpIV/wjVgR5jWzYp3C1zkE+uHBcaF5/hZXeFvI2VjnjkmMfTrW+PgZBIbo1b\nN95eVzu3vLQjH+pO76nMzNYo+h8UgmceqRSZ7MalZgq+P0CG8X4D19dpYp7nY20=\n=1ZPk\n-----END PGP SIGNATURE-----\n", "payload": "tree 897b1ec459167b5022011e2ce5cfeaf3bedc7255\nparent 7da1dcc3e0eee606b61ac7f7039b39b3332dfb6f\nparent 82b90bd9938fb56452b8a10bd004ad84a0f81503\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1578978143 +0900\ncommitter GitHub <noreply@github.com> 1578978143 +0900\n\nRollup merge of #68143 - skinny121:const-param-type-elided-lifetime, r=petrochenkov\n\nForbid elided lifetimes within const generic parameter types\n\nDisallows `fn foo<const T: &u32>()`, the lifetime must be explicitly given, i.e. `fn foo<const T: &'static u32>()`.\n\nFixes #67883\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7e599203c3d3abbc3be486792a76cb89d3fa067", "html_url": "https://github.com/rust-lang/rust/commit/d7e599203c3d3abbc3be486792a76cb89d3fa067", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7e599203c3d3abbc3be486792a76cb89d3fa067/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7da1dcc3e0eee606b61ac7f7039b39b3332dfb6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7da1dcc3e0eee606b61ac7f7039b39b3332dfb6f", "html_url": "https://github.com/rust-lang/rust/commit/7da1dcc3e0eee606b61ac7f7039b39b3332dfb6f"}, {"sha": "82b90bd9938fb56452b8a10bd004ad84a0f81503", "url": "https://api.github.com/repos/rust-lang/rust/commits/82b90bd9938fb56452b8a10bd004ad84a0f81503", "html_url": "https://github.com/rust-lang/rust/commit/82b90bd9938fb56452b8a10bd004ad84a0f81503"}], "stats": {"total": 78, "additions": 72, "deletions": 6}, "files": [{"sha": "76a0889c376a22b1367ebf67fcec7cb21dbf249a", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d7e599203c3d3abbc3be486792a76cb89d3fa067/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7e599203c3d3abbc3be486792a76cb89d3fa067/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=d7e599203c3d3abbc3be486792a76cb89d3fa067", "patch": "@@ -2120,12 +2120,14 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n \n                 (hir::ParamName::Plain(param.ident), kind)\n             }\n-            GenericParamKind::Const { ref ty } => (\n-                hir::ParamName::Plain(param.ident),\n-                hir::GenericParamKind::Const {\n-                    ty: self.lower_ty(&ty, ImplTraitContext::disallowed()),\n-                },\n-            ),\n+            GenericParamKind::Const { ref ty } => {\n+                let ty = self\n+                    .with_anonymous_lifetime_mode(AnonymousLifetimeMode::ReportError, |this| {\n+                        this.lower_ty(&ty, ImplTraitContext::disallowed())\n+                    });\n+\n+                (hir::ParamName::Plain(param.ident), hir::GenericParamKind::Const { ty })\n+            }\n         };\n \n         hir::GenericParam {"}, {"sha": "5679dd35c307aace6e575f23c281bcc20b1fa99e", "filename": "src/test/ui/const-generics/const-param-elided-lifetime.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d7e599203c3d3abbc3be486792a76cb89d3fa067/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7e599203c3d3abbc3be486792a76cb89d3fa067/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.rs?ref=d7e599203c3d3abbc3be486792a76cb89d3fa067", "patch": "@@ -0,0 +1,24 @@\n+// Elided lifetimes within the type of a const generic parameters is disallowed. This matches the\n+// behaviour of trait bounds where `fn foo<T: Ord<&u8>>() {}` is illegal. Though we could change\n+// elided lifetimes within the type of a const generic parameters to be 'static, like elided\n+// lifetimes within const/static items.\n+\n+#![feature(const_generics)]\n+//~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n+\n+struct A<const N: &u8>;\n+//~^ ERROR `&` without an explicit lifetime name cannot be used here\n+trait B {}\n+\n+impl<const N: &u8> A<N> { //~ ERROR `&` without an explicit lifetime name cannot be used here\n+    fn foo<const M: &u8>(&self) {}\n+    //~^ ERROR `&` without an explicit lifetime name cannot be used here\n+}\n+\n+impl<const N: &u8> B for A<N> {}\n+//~^ ERROR `&` without an explicit lifetime name cannot be used here\n+\n+fn bar<const N: &u8>() {}\n+//~^ ERROR `&` without an explicit lifetime name cannot be used here\n+\n+fn main() {}"}, {"sha": "93133c507fe40a844d9cd58d04fa566b22b6522c", "filename": "src/test/ui/const-generics/const-param-elided-lifetime.stderr", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/d7e599203c3d3abbc3be486792a76cb89d3fa067/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d7e599203c3d3abbc3be486792a76cb89d3fa067/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-elided-lifetime.stderr?ref=d7e599203c3d3abbc3be486792a76cb89d3fa067", "patch": "@@ -0,0 +1,40 @@\n+error[E0637]: `&` without an explicit lifetime name cannot be used here\n+  --> $DIR/const-param-elided-lifetime.rs:9:19\n+   |\n+LL | struct A<const N: &u8>;\n+   |                   ^ explicit lifetime name needed here\n+\n+error[E0637]: `&` without an explicit lifetime name cannot be used here\n+  --> $DIR/const-param-elided-lifetime.rs:13:15\n+   |\n+LL | impl<const N: &u8> A<N> {\n+   |               ^ explicit lifetime name needed here\n+\n+error[E0637]: `&` without an explicit lifetime name cannot be used here\n+  --> $DIR/const-param-elided-lifetime.rs:14:21\n+   |\n+LL |     fn foo<const M: &u8>(&self) {}\n+   |                     ^ explicit lifetime name needed here\n+\n+error[E0637]: `&` without an explicit lifetime name cannot be used here\n+  --> $DIR/const-param-elided-lifetime.rs:18:15\n+   |\n+LL | impl<const N: &u8> B for A<N> {}\n+   |               ^ explicit lifetime name needed here\n+\n+error[E0637]: `&` without an explicit lifetime name cannot be used here\n+  --> $DIR/const-param-elided-lifetime.rs:21:17\n+   |\n+LL | fn bar<const N: &u8>() {}\n+   |                 ^ explicit lifetime name needed here\n+\n+warning: the feature `const_generics` is incomplete and may cause the compiler to crash\n+  --> $DIR/const-param-elided-lifetime.rs:6:12\n+   |\n+LL | #![feature(const_generics)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error: aborting due to 5 previous errors\n+"}]}