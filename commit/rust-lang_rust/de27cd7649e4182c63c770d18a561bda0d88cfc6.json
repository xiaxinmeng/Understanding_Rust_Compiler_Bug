{"sha": "de27cd7649e4182c63c770d18a561bda0d88cfc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMjdjZDc2NDllNDE4MmM2M2M3NzBkMThhNTYxYmRhMGQ4OGNmYzY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-05T06:01:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-05T06:01:08Z"}, "message": "Auto merge of #71846 - petrochenkov:fresh2, r=davidtwco\n\nresolve: Relax fresh binding disambiguation slightly to fix regression\n\nFixes https://github.com/rust-lang/rust/issues/71765", "tree": {"sha": "c9297c4ec7a700f8ce93eaa89a7a1e4265a12e9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9297c4ec7a700f8ce93eaa89a7a1e4265a12e9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de27cd7649e4182c63c770d18a561bda0d88cfc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de27cd7649e4182c63c770d18a561bda0d88cfc6", "html_url": "https://github.com/rust-lang/rust/commit/de27cd7649e4182c63c770d18a561bda0d88cfc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de27cd7649e4182c63c770d18a561bda0d88cfc6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04689e22e946879f2f5e2c73849d2f4e1f2b4b32", "url": "https://api.github.com/repos/rust-lang/rust/commits/04689e22e946879f2f5e2c73849d2f4e1f2b4b32", "html_url": "https://github.com/rust-lang/rust/commit/04689e22e946879f2f5e2c73849d2f4e1f2b4b32"}, {"sha": "5b84d5ff13cad8842c2244a141159d3383d66784", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b84d5ff13cad8842c2244a141159d3383d66784", "html_url": "https://github.com/rust-lang/rust/commit/5b84d5ff13cad8842c2244a141159d3383d66784"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "6214186a901a1e073dad1a1e38ed0b9239798b34", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/de27cd7649e4182c63c770d18a561bda0d88cfc6/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de27cd7649e4182c63c770d18a561bda0d88cfc6/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=de27cd7649e4182c63c770d18a561bda0d88cfc6", "patch": "@@ -1522,23 +1522,27 @@ impl<'a, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n         ident: Ident,\n         has_sub: bool,\n     ) -> Option<Res> {\n+        // An immutable (no `mut`) by-value (no `ref`) binding pattern without\n+        // a sub pattern (no `@ $pat`) is syntactically ambiguous as it could\n+        // also be interpreted as a path to e.g. a constant, variant, etc.\n+        let is_syntactic_ambiguity = !has_sub && bm == BindingMode::ByValue(Mutability::Not);\n+\n         let ls_binding = self.resolve_ident_in_lexical_scope(ident, ValueNS, None, pat.span)?;\n         let (res, binding) = match ls_binding {\n-            LexicalScopeBinding::Item(binding) if binding.is_ambiguity() => {\n+            LexicalScopeBinding::Item(binding)\n+                if is_syntactic_ambiguity && binding.is_ambiguity() =>\n+            {\n                 // For ambiguous bindings we don't know all their definitions and cannot check\n                 // whether they can be shadowed by fresh bindings or not, so force an error.\n+                // issues/33118#issuecomment-233962221 (see below) still applies here,\n+                // but we have to ignore it for backward compatibility.\n                 self.r.record_use(ident, ValueNS, binding, false);\n                 return None;\n             }\n             LexicalScopeBinding::Item(binding) => (binding.res(), Some(binding)),\n             LexicalScopeBinding::Res(res) => (res, None),\n         };\n \n-        // An immutable (no `mut`) by-value (no `ref`) binding pattern without\n-        // a sub pattern (no `@ $pat`) is syntactically ambiguous as it could\n-        // also be interpreted as a path to e.g. a constant, variant, etc.\n-        let is_syntactic_ambiguity = !has_sub && bm == BindingMode::ByValue(Mutability::Not);\n-\n         match res {\n             Res::SelfCtor(_) // See #70549.\n             | Res::Def("}, {"sha": "0f48340c2cd33b09edd56143be4f8e27908b6b9b", "filename": "src/test/ui/binding/ambiguity-item.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de27cd7649e4182c63c770d18a561bda0d88cfc6/src%2Ftest%2Fui%2Fbinding%2Fambiguity-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de27cd7649e4182c63c770d18a561bda0d88cfc6/src%2Ftest%2Fui%2Fbinding%2Fambiguity-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinding%2Fambiguity-item.rs?ref=de27cd7649e4182c63c770d18a561bda0d88cfc6", "patch": "@@ -14,5 +14,6 @@ fn main() {\n     let v = f; //~ ERROR `f` is ambiguous\n     match v {\n         f => {} //~ ERROR `f` is ambiguous\n+        mut f => {} // OK, unambiguously a fresh binding due to `mut`\n     }\n }"}]}