{"sha": "c74eec7e25d0ab505dbb8f31d2e63839e5384c15", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NGVlYzdlMjVkMGFiNTA1ZGJiOGYzMWQyZTYzODM5ZTUzODRjMTU=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-09-23T12:11:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-23T12:11:43Z"}, "message": "Apply suggestions from code review\n\nCo-authored-by: Lokathor <zefria@gmail.com>", "tree": {"sha": "c2aa65350283a8b4d842544b7be034ce87f8e060", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2aa65350283a8b4d842544b7be034ce87f8e060"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c74eec7e25d0ab505dbb8f31d2e63839e5384c15", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfazt/CRBK7hj4Ov3rIwAAdHIIAGKGYJbhvEYh54d/tui3qtgR\nMIM5ko2hmWhV+/JUSZqHtI66tgZnRttVqI3VDqNTu1MKhtPubRO339ZsxY5eKpac\n/Lx5ttomtdlclZGMRNgMksAXkvxergHOb7OXiTZzUtrw2t7sKey1rF3QUcGjGZAq\n8NvveSBNaRSdmSL54A2Aa38E8jrhaSkegSSuvV/9Zof4n8vNiZR4akP9SWGF6oXs\nY9pO7U5DDBLMveaFEzOiXdCHhEyBVuKGOYbc9FXwGf7PYL4sPdMSoqbCn9+HuIXX\nowbBCW8YcNXvtoDX+0ufihittViZphvVI3TroJUEUAWUB5M7saz6yWYdarwKurw=\n=mh4a\n-----END PGP SIGNATURE-----\n", "payload": "tree c2aa65350283a8b4d842544b7be034ce87f8e060\nparent 0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8\nauthor Caleb Zulawski <caleb.zulawski@gmail.com> 1600863103 -0400\ncommitter GitHub <noreply@github.com> 1600863103 -0400\n\nApply suggestions from code review\n\nCo-authored-by: Lokathor <zefria@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c74eec7e25d0ab505dbb8f31d2e63839e5384c15", "html_url": "https://github.com/rust-lang/rust/commit/c74eec7e25d0ab505dbb8f31d2e63839e5384c15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c74eec7e25d0ab505dbb8f31d2e63839e5384c15/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8", "html_url": "https://github.com/rust-lang/rust/commit/0f837a9147a1ba22cfb12a4480ce1c18d3afc6b8"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "b4fc58476f8fa0b11c26c512f6d2f8864550776d", "filename": "crates/core_simd/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c74eec7e25d0ab505dbb8f31d2e63839e5384c15/crates%2Fcore_simd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c74eec7e25d0ab505dbb8f31d2e63839e5384c15/crates%2Fcore_simd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Flib.rs?ref=c74eec7e25d0ab505dbb8f31d2e63839e5384c15", "patch": "@@ -1,5 +1,5 @@\n #![feature(repr_simd)]\n-\n+#![warn(missing_docs)]\n #[macro_use]\n mod macros;\n "}, {"sha": "91c1071a2ee5fbea85bcb3b29936e35a2b60efec", "filename": "crates/core_simd/src/macros.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c74eec7e25d0ab505dbb8f31d2e63839e5384c15/crates%2Fcore_simd%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c74eec7e25d0ab505dbb8f31d2e63839e5384c15/crates%2Fcore_simd%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmacros.rs?ref=c74eec7e25d0ab505dbb8f31d2e63839e5384c15", "patch": "@@ -69,6 +69,7 @@ macro_rules! define_type {\n \n         // splat\n         impl From<$type> for $name {\n+            #[inline]\n             fn from(value: $type) -> Self {\n                 Self::splat(value)\n             }\n@@ -126,16 +127,16 @@ macro_rules! define_type {\n         pub struct $name($($itype),*);\n \n         impl $name {\n-            /// Construct a vector by setting each lane to a single value.\n+            /// Construct a vector by setting all lanes to the given value.\n             #[inline]\n-            pub fn splat(value: $type) -> Self {\n+            pub const fn splat(value: $type) -> Self {\n                 Self($(value as $itype),*)\n             }\n \n-            /// Construct a vector by setting each lane.\n+            /// Construct a vector by setting each lane to the given values.\n             #[allow(clippy::too_many_arguments)]\n             #[inline]\n-            pub fn new($($ivar: $itype),*) -> Self {\n+            pub const fn new($($ivar: $itype),*) -> Self {\n                 Self($($ivar),*)\n             }\n         }"}]}