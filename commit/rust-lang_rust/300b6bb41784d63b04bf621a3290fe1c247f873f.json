{"sha": "300b6bb41784d63b04bf621a3290fe1c247f873f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMGI2YmI0MTc4NGQ2M2IwNGJmNjIxYTMyOTBmZTFjMjQ3Zjg3M2Y=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-04-15T13:59:00Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-05-01T12:58:42Z"}, "message": "Remove `macro_reexport`\n\nIt's subsumed by `feature(use_extern_macros)` and `pub use`", "tree": {"sha": "59e931254ffbba528fcc5e849260e382a97b459f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59e931254ffbba528fcc5e849260e382a97b459f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/300b6bb41784d63b04bf621a3290fe1c247f873f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/300b6bb41784d63b04bf621a3290fe1c247f873f", "html_url": "https://github.com/rust-lang/rust/commit/300b6bb41784d63b04bf621a3290fe1c247f873f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/300b6bb41784d63b04bf621a3290fe1c247f873f/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4a79472598e24a60301fb99f27dc688cc365d5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4a79472598e24a60301fb99f27dc688cc365d5a", "html_url": "https://github.com/rust-lang/rust/commit/a4a79472598e24a60301fb99f27dc688cc365d5a"}], "stats": {"total": 929, "additions": 252, "deletions": 677}, "files": [{"sha": "e5e6c22c7a2963056e1b6ef9fdf28ca9bdf9a834", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=300b6bb41784d63b04bf621a3290fe1c247f873f", "patch": "@@ -71,7 +71,6 @@ impl<'a> ToNameBinding<'a> for (Def, ty::Visibility, Span, Mark) {\n struct LegacyMacroImports {\n     import_all: Option<Span>,\n     imports: Vec<(Name, Span)>,\n-    reexports: Vec<(Name, Span)>,\n }\n \n impl<'a> Resolver<'a> {\n@@ -621,7 +620,7 @@ impl<'a> Resolver<'a> {\n         let legacy_imports = self.legacy_macro_imports(&item.attrs);\n         let mut used = legacy_imports != LegacyMacroImports::default();\n \n-        // `#[macro_use]` and `#[macro_reexport]` are only allowed at the crate root.\n+        // `#[macro_use]` is only allowed at the crate root.\n         if self.current_module.parent.is_some() && used {\n             span_err!(self.session, item.span, E0468,\n                       \"an `extern crate` loading macros must be at the crate root\");\n@@ -669,17 +668,6 @@ impl<'a> Resolver<'a> {\n                 }\n             }\n         }\n-        for (name, span) in legacy_imports.reexports {\n-            self.cstore.export_macros_untracked(module.def_id().unwrap().krate);\n-            let ident = Ident::with_empty_ctxt(name);\n-            let result = self.resolve_ident_in_module(module, ident, MacroNS, false, false, span);\n-            if let Ok(binding) = result {\n-                let (def, vis) = (binding.def(), binding.vis);\n-                self.macro_exports.push(Export { ident, def, vis, span, is_import: true });\n-            } else {\n-                span_err!(self.session, span, E0470, \"re-exported macro not found\");\n-            }\n-        }\n         used\n     }\n \n@@ -721,21 +709,6 @@ impl<'a> Resolver<'a> {\n                     },\n                     None => imports.import_all = Some(attr.span),\n                 }\n-            } else if attr.check_name(\"macro_reexport\") {\n-                let bad_macro_reexport = |this: &mut Self, span| {\n-                    span_err!(this.session, span, E0467, \"bad macro re-export\");\n-                };\n-                if let Some(names) = attr.meta_item_list() {\n-                    for attr in names {\n-                        if let Some(word) = attr.word() {\n-                            imports.reexports.push((word.ident.name, attr.span()));\n-                        } else {\n-                            bad_macro_reexport(self, attr.span());\n-                        }\n-                    }\n-                } else {\n-                    bad_macro_reexport(self, attr.span());\n-                }\n             }\n         }\n         imports"}, {"sha": "232a32deb864ea456b32657417a03bfe29512f06", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 71, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=300b6bb41784d63b04bf621a3290fe1c247f873f", "patch": "@@ -1395,35 +1395,6 @@ If you would like to import all exported macros, write `macro_use` with no\n arguments.\n \"##,\n \n-E0467: r##\"\n-Macro re-export declarations were empty or malformed.\n-\n-Erroneous code examples:\n-\n-```compile_fail,E0467\n-#[macro_reexport]                    // error: no macros listed for export\n-extern crate core as macros_for_good;\n-\n-#[macro_reexport(fun_macro = \"foo\")] // error: not a macro identifier\n-extern crate core as other_macros_for_good;\n-```\n-\n-This is a syntax error at the level of attribute declarations.\n-\n-Currently, `macro_reexport` requires at least one macro name to be listed.\n-Unlike `macro_use`, listing no names does not re-export all macros from the\n-given crate.\n-\n-Decide which macros you would like to export and list them properly.\n-\n-These are proper re-export declarations:\n-\n-```ignore (cannot-doctest-multicrate-project)\n-#[macro_reexport(some_macro, another_macro)]\n-extern crate macros_for_good;\n-```\n-\"##,\n-\n E0468: r##\"\n A non-root module attempts to import macros from another crate.\n \n@@ -1496,48 +1467,6 @@ extern crate some_crate; //ok!\n ```\n \"##,\n \n-E0470: r##\"\n-A macro listed for re-export was not found.\n-\n-Erroneous code example:\n-\n-```compile_fail,E0470\n-#[macro_reexport(drink, be_merry)]\n-extern crate alloc;\n-\n-fn main() {\n-    // ...\n-}\n-```\n-\n-Either the listed macro is not contained in the imported crate, or it is not\n-exported from the given crate.\n-\n-This could be caused by a typo. Did you misspell the macro's name?\n-\n-Double-check the names of the macros listed for re-export, and that the crate\n-in question exports them.\n-\n-A working version:\n-\n-```ignore (cannot-doctest-multicrate-project)\n-// In some_crate crate:\n-#[macro_export]\n-macro_rules! eat {\n-    ...\n-}\n-\n-#[macro_export]\n-macro_rules! drink {\n-    ...\n-}\n-\n-// In your_crate:\n-#[macro_reexport(eat, drink)]\n-extern crate some_crate;\n-```\n-\"##,\n-\n E0530: r##\"\n A binding shadowed something it shouldn't.\n \n@@ -1715,6 +1644,8 @@ register_diagnostics! {\n //  E0421, merged into 531\n     E0531, // unresolved pattern path kind `name`\n //  E0427, merged into 530\n+//  E0467, removed\n+//  E0470, removed\n     E0573,\n     E0574,\n     E0575,"}, {"sha": "6db02cc6cc105b7301d725aeef69535ff3ff4465", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=300b6bb41784d63b04bf621a3290fe1c247f873f", "patch": "@@ -49,7 +49,6 @@ pub struct RustdocVisitor<'a, 'tcx: 'a, 'rcx: 'a> {\n     inlining: bool,\n     /// Is the current module and all of its parents public?\n     inside_public_path: bool,\n-    reexported_macros: FxHashSet<DefId>,\n     exact_paths: Option<FxHashMap<DefId, Vec<String>>>,\n }\n \n@@ -66,7 +65,6 @@ impl<'a, 'tcx, 'rcx> RustdocVisitor<'a, 'tcx, 'rcx> {\n             view_item_stack: stack,\n             inlining: false,\n             inside_public_path: true,\n-            reexported_macros: FxHashSet(),\n             exact_paths: Some(FxHashMap()),\n             cstore,\n         }\n@@ -221,7 +219,7 @@ impl<'a, 'tcx, 'rcx> RustdocVisitor<'a, 'tcx, 'rcx> {\n         if let Some(exports) = self.cx.tcx.module_exports(def_id) {\n             for export in exports.iter().filter(|e| e.vis == Visibility::Public) {\n                 if let Def::Macro(def_id, ..) = export.def {\n-                    if def_id.krate == LOCAL_CRATE || self.reexported_macros.contains(&def_id) {\n+                    if def_id.krate == LOCAL_CRATE {\n                         continue // These are `krate.exported_macros`, handled in `self.visit()`.\n                     }\n \n@@ -298,17 +296,6 @@ impl<'a, 'tcx, 'rcx> RustdocVisitor<'a, 'tcx, 'rcx> {\n         let is_no_inline = use_attrs.lists(\"doc\").has_word(\"no_inline\") ||\n                            use_attrs.lists(\"doc\").has_word(\"hidden\");\n \n-        // Memoize the non-inlined `pub use`'d macros so we don't push an extra\n-        // declaration in `visit_mod_contents()`\n-        if !def_did.is_local() {\n-            if let Def::Macro(did, _) = def {\n-                if please_inline { return true }\n-                debug!(\"memoizing non-inlined macro export: {:?}\", def);\n-                self.reexported_macros.insert(did);\n-                return false;\n-            }\n-        }\n-\n         // For cross-crate impl inlining we need to know whether items are\n         // reachable in documentation - a previously nonreachable item can be\n         // made reachable by cross-crate inlining which we're checking here."}, {"sha": "c6ee5b57be2da6080e1e5a4ca6c03317f31739ca", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=300b6bb41784d63b04bf621a3290fe1c247f873f", "patch": "@@ -273,7 +273,6 @@\n #![feature(libc)]\n #![feature(link_args)]\n #![feature(linkage)]\n-#![feature(macro_reexport)]\n #![feature(macro_vis_matcher)]\n #![feature(needs_panic_runtime)]\n #![feature(never_type)]\n@@ -313,6 +312,7 @@\n #![feature(unboxed_closures)]\n #![feature(untagged_unions)]\n #![feature(unwind_attributes)]\n+#![feature(use_extern_macros)]\n #![feature(vec_push_all)]\n #![feature(doc_cfg)]\n #![feature(doc_masked)]\n@@ -347,15 +347,13 @@ use prelude::v1::*;\n #[cfg(test)] extern crate test;\n #[cfg(test)] extern crate rand;\n \n-// We want to re-export a few macros from core but libcore has already been\n-// imported by the compiler (via our #[no_std] attribute) In this case we just\n-// add a new crate name so we can attach the re-exports to it.\n-#[macro_reexport(assert_eq, assert_ne, debug_assert, debug_assert_eq,\n-                 debug_assert_ne, unreachable, unimplemented, write, writeln, try)]\n-extern crate core as __core;\n+// Re-export a few macros from core\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub use core::{assert_eq, assert_ne, debug_assert, debug_assert_eq, debug_assert_ne};\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub use core::{unreachable, unimplemented, write, writeln, try};\n \n #[macro_use]\n-#[macro_reexport(vec, format)]\n extern crate alloc as alloc_crate;\n extern crate alloc_system;\n #[doc(masked)]\n@@ -450,6 +448,8 @@ pub use alloc_crate::borrow;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use alloc_crate::fmt;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub use alloc_crate::format;\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use alloc_crate::slice;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use alloc_crate::str;"}, {"sha": "e373013b3f92e66e4373d8461a8be5eb3da92b3e", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=300b6bb41784d63b04bf621a3290fe1c247f873f", "patch": "@@ -162,9 +162,6 @@ declare_features! (\n     // OIBIT specific features\n     (active, optin_builtin_traits, \"1.0.0\", Some(13231), None),\n \n-    // macro re-export needs more discussion and stabilization\n-    (active, macro_reexport, \"1.0.0\", Some(29638), None),\n-\n     // Allows use of #[staged_api]\n     // rustc internal\n     (active, staged_api, \"1.0.0\", None, None),\n@@ -484,6 +481,8 @@ declare_features! (\n     (removed, simd, \"1.0.0\", Some(27731), None),\n     // Merged into `slice_patterns`\n     (removed, advanced_slice_patterns, \"1.0.0\", Some(23121), None),\n+    // Subsumed by `use`\n+    (removed, macro_reexport, \"1.0.0\", Some(29638), None),\n );\n \n declare_features! (\n@@ -673,7 +672,6 @@ pub const BUILTIN_ATTRIBUTES: &'static [(&'static str, AttributeType, AttributeG\n     (\"forbid\", Normal, Ungated),\n     (\"deny\", Normal, Ungated),\n \n-    (\"macro_reexport\", Normal, Ungated),\n     (\"macro_use\", Normal, Ungated),\n     (\"macro_export\", Normal, Ungated),\n     (\"plugin_registrar\", Normal, Ungated),\n@@ -1516,11 +1514,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                     gate_feature_post!(&self, underscore_imports, i.span,\n                                        \"renaming extern crates with `_` is unstable\");\n                 }\n-                if let Some(attr) = attr::find_by_name(&i.attrs[..], \"macro_reexport\") {\n-                    gate_feature_post!(&self, macro_reexport, attr.span,\n-                                       \"macros re-exports are experimental \\\n-                                        and possibly buggy\");\n-                }\n             }\n \n             ast::ItemKind::ForeignMod(ref foreign_module) => {"}, {"sha": "8b448e401bd2536118d3325513326dcbe01d475d", "filename": "src/test/compile-fail-fulldeps/gated-macro-reexports.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail-fulldeps%2Fgated-macro-reexports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail-fulldeps%2Fgated-macro-reexports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fgated-macro-reexports.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,21 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// Test that macro re-exports item are gated by `macro_reexport` feature gate.\n-\n-// aux-build:macro_reexport_1.rs\n-// gate-test-macro_reexport\n-\n-#![crate_type = \"dylib\"]\n-\n-#[macro_reexport(reexported)]\n-//~^ ERROR macros re-exports are experimental and possibly buggy\n-#[macro_use] #[no_link]\n-extern crate macro_reexport_1;"}, {"sha": "910fcd2e3671d55321f570f364cd4046bfc0e753", "filename": "src/test/compile-fail/auxiliary/macro_non_reexport_2.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fmacro_non_reexport_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fmacro_non_reexport_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fmacro_non_reexport_2.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,19 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![crate_type = \"dylib\"]\n-\n-// Since we load a serialized macro with all its attributes, accidentally\n-// re-exporting a `#[macro_export] macro_rules!` is something of a concern!\n-//\n-// We avoid it at the moment only because of the order in which we do things.\n-\n-#[macro_use] #[no_link]\n-extern crate macro_reexport_1;"}, {"sha": "aaeccc6e89883865bdbdb5607523f9d6ce369f0c", "filename": "src/test/compile-fail/auxiliary/macro_reexport_1.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fmacro_reexport_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fmacro_reexport_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fauxiliary%2Fmacro_reexport_1.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,15 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![crate_type = \"dylib\"]\n-#[macro_export]\n-macro_rules! reexported {\n-    () => ( 3 )\n-}"}, {"sha": "07467e06eb2df9346f1272b56466899c110c50db", "filename": "src/test/compile-fail/macro-no-implicit-reexport.rs", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail%2Fmacro-no-implicit-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail%2Fmacro-no-implicit-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-no-implicit-reexport.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,20 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:macro_reexport_1.rs\n-// aux-build:macro_non_reexport_2.rs\n-\n-#[macro_use] #[no_link]\n-extern crate macro_non_reexport_2;\n-\n-fn main() {\n-    assert_eq!(reexported!(), 3);\n-    //~^ ERROR cannot find macro `reexported!` in this scope\n-}"}, {"sha": "36a6fce00a13a05f9e6b20607ba30e727ee1606e", "filename": "src/test/compile-fail/macro-reexport-malformed-1.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-1.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,16 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![no_std]\n-#![feature(macro_reexport)]\n-\n-#[allow(unused_extern_crates)]\n-#[macro_reexport]  //~ ERROR bad macro re-export\n-extern crate std;"}, {"sha": "5f741d010de806e0d4910ad5b5887988f8e5d007", "filename": "src/test/compile-fail/macro-reexport-malformed-2.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-2.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,16 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![no_std]\n-#![feature(macro_reexport)]\n-\n-#[allow(unused_extern_crates)]\n-#[macro_reexport=\"foo\"]  //~ ERROR bad macro re-export\n-extern crate std;"}, {"sha": "1a7e3b918cd966d53b8d68230f1f89556ce74a8c", "filename": "src/test/compile-fail/macro-reexport-malformed-3.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-malformed-3.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,16 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![no_std]\n-#![feature(macro_reexport)]\n-\n-#[allow(unused_extern_crates)]\n-#[macro_reexport(foo=\"bar\")]  //~ ERROR bad macro re-export\n-extern crate std;"}, {"sha": "54a74b0e134315b99bd1dfb12b49696a23b864bb", "filename": "src/test/compile-fail/macro-reexport-not-locally-visible.rs", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-not-locally-visible.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-not-locally-visible.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-reexport-not-locally-visible.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,22 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:macro_reexport_1.rs\n-\n-#![feature(macro_reexport)]\n-\n-#[macro_reexport(reexported)]\n-#[no_link]\n-extern crate macro_reexport_1;\n-\n-fn main() {\n-    assert_eq!(reexported!(), 3);\n-    //~^ ERROR cannot find macro\n-}"}, {"sha": "cfaf913216a5c68a3b10a8002c89ad7d7eef89a9", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/derive-reexport.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-reexport.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,16 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-test not a test, auxiliary\n-\n-#![feature(macro_reexport)]\n-\n-#[macro_reexport(A)]\n-extern crate derive_a;"}, {"sha": "03dfeb1f5c9a5ce99edcd0f506352d5df154bd97", "filename": "src/test/run-pass-fulldeps/proc-macro/use-reexport.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fuse-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fuse-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fuse-reexport.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,21 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:derive-a.rs\n-// aux-build:derive-reexport.rs\n-// ignore-stage1\n-\n-#[macro_use]\n-extern crate derive_reexport;\n-\n-#[derive(Debug, PartialEq, A, Eq, Copy, Clone)]\n-struct A;\n-\n-fn main() {}"}, {"sha": "aaeccc6e89883865bdbdb5607523f9d6ce369f0c", "filename": "src/test/run-pass/auxiliary/macro_reexport_1.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Frun-pass%2Fauxiliary%2Fmacro_reexport_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Frun-pass%2Fauxiliary%2Fmacro_reexport_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauxiliary%2Fmacro_reexport_1.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,15 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![crate_type = \"dylib\"]\n-#[macro_export]\n-macro_rules! reexported {\n-    () => ( 3 )\n-}"}, {"sha": "3918be88d867684e1d27b1a3eee7248da595e024", "filename": "src/test/run-pass/auxiliary/macro_reexport_2.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Frun-pass%2Fauxiliary%2Fmacro_reexport_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Frun-pass%2Fauxiliary%2Fmacro_reexport_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauxiliary%2Fmacro_reexport_2.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,16 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![crate_type = \"dylib\"]\n-#![feature(macro_reexport)]\n-\n-#[macro_reexport(reexported)]\n-#[macro_use] #[no_link]\n-extern crate macro_reexport_1;"}, {"sha": "1d3dc26b0b4cb6beb04a03699bac8ec8709f0e54", "filename": "src/test/run-pass/auxiliary/macro_reexport_2_no_use.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Frun-pass%2Fauxiliary%2Fmacro_reexport_2_no_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Frun-pass%2Fauxiliary%2Fmacro_reexport_2_no_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauxiliary%2Fmacro_reexport_2_no_use.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,16 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![crate_type = \"dylib\"]\n-#![feature(macro_reexport)]\n-\n-#[macro_reexport(reexported)]\n-#[no_link]\n-extern crate macro_reexport_1;"}, {"sha": "de7df1ec02125bc07988b98ca36c6b410cc5f64b", "filename": "src/test/run-pass/macro-reexport-no-intermediate-use.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Frun-pass%2Fmacro-reexport-no-intermediate-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Frun-pass%2Fmacro-reexport-no-intermediate-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-reexport-no-intermediate-use.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,19 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:macro_reexport_1.rs\n-// aux-build:macro_reexport_2_no_use.rs\n-\n-#[macro_use] #[no_link]\n-extern crate macro_reexport_2_no_use;\n-\n-fn main() {\n-    assert_eq!(reexported!(), 3_usize);\n-}"}, {"sha": "b8926eca9e996fc20489bb996fb2c1e001eb2069", "filename": "src/test/run-pass/macro-reexport.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Frun-pass%2Fmacro-reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4a79472598e24a60301fb99f27dc688cc365d5a/src%2Ftest%2Frun-pass%2Fmacro-reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-reexport.rs?ref=a4a79472598e24a60301fb99f27dc688cc365d5a", "patch": "@@ -1,19 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:macro_reexport_1.rs\n-// aux-build:macro_reexport_2.rs\n-\n-#[macro_use] #[no_link]\n-extern crate macro_reexport_2;\n-\n-fn main() {\n-    assert_eq!(reexported!(), 3_usize);\n-}"}, {"sha": "57d54585d84bc57a0dea284babe9c3e14142b6ad", "filename": "src/test/rustdoc/pub-use-extern-macros.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Ftest%2Frustdoc%2Fpub-use-extern-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Ftest%2Frustdoc%2Fpub-use-extern-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fpub-use-extern-macros.rs?ref=300b6bb41784d63b04bf621a3290fe1c247f873f", "patch": "@@ -10,22 +10,19 @@\n \n // aux-build:pub-use-extern-macros.rs\n \n-#![feature(use_extern_macros, macro_reexport)]\n+#![feature(use_extern_macros)]\n \n-// @has pub_use_extern_macros/macro.foo.html\n-// @!has pub_use_extern_macros/index.html 'pub use macros::foo;'\n-#[macro_reexport(foo)] extern crate macros;\n+extern crate macros;\n \n-// @has pub_use_extern_macros/index.html 'pub use macros::bar;'\n-// @!has pub_use_extern_macros/macro.bar.html\n+// @has pub_use_extern_macros/macro.bar.html\n pub use macros::bar;\n \n // @has pub_use_extern_macros/macro.baz.html\n // @!has pub_use_extern_macros/index.html 'pub use macros::baz;'\n #[doc(inline)]\n pub use macros::baz;\n \n-// @!has pub_use_extern_macros/macro.quux.html\n+// @has pub_use_extern_macros/macro.quux.html\n // @!has pub_use_extern_macros/index.html 'pub use macros::quux;'\n #[doc(hidden)]\n pub use macros::quux;"}, {"sha": "76fb09f27bedf7919166d9fabf344ffd3e377697", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-builtin-attrs.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.rs?ref=300b6bb41784d63b04bf621a3290fe1c247f873f", "patch": "@@ -50,7 +50,6 @@\n #![allow                       (x5300)] //~ WARN unknown lint: `x5300`\n #![forbid                      (x5200)] //~ WARN unknown lint: `x5200`\n #![deny                        (x5100)] //~ WARN unknown lint: `x5100`\n-#![macro_reexport             = \"5000\"] //~ WARN unused attribute\n #![macro_use] // (allowed if no argument; see issue-43160-gating-of-macro_use.rs)\n #![macro_export               = \"4800\"] //~ WARN unused attribute\n #![plugin_registrar           = \"4700\"] //~ WARN unused attribute\n@@ -186,25 +185,6 @@ mod deny {\n     //~^ WARN unknown lint: `x5100`\n }\n \n-#[macro_reexport = \"5000\"]\n-//~^ WARN unused attribute\n-mod macro_reexport {\n-    mod inner { #![macro_reexport=\"5000\"] }\n-    //~^ WARN unused attribute\n-\n-    #[macro_reexport = \"5000\"] fn f() { }\n-    //~^ WARN unused attribute\n-\n-    #[macro_reexport = \"5000\"] struct S;\n-    //~^ WARN unused attribute\n-\n-    #[macro_reexport = \"5000\"] type T = S;\n-    //~^ WARN unused attribute\n-\n-    #[macro_reexport = \"5000\"] impl S { }\n-    //~^ WARN unused attribute\n-}\n-\n #[macro_use]\n mod macro_use {\n     mod inner { #![macro_use] }"}, {"sha": "7a94c1f0351b2ece37a93433d898522236836fbb", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 213, "deletions": 247, "changes": 460, "blob_url": "https://github.com/rust-lang/rust/blob/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=300b6bb41784d63b04bf621a3290fe1c247f873f", "patch": "@@ -1,17 +1,25 @@\n warning: macro_escape is a deprecated synonym for macro_use\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:513:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:493:1\n    |\n LL | #[macro_escape]\n    | ^^^^^^^^^^^^^^^\n \n warning: macro_escape is a deprecated synonym for macro_use\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:516:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:496:17\n    |\n LL |     mod inner { #![macro_escape] }\n    |                 ^^^^^^^^^^^^^^^^\n    |\n    = help: consider an outer attribute, #[macro_use] mod ...\n \n+warning: `#[must_use]` on functions is experimental (see issue #43302)\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:643:5\n+   |\n+LL |     #[must_use = \"1400\"] fn f() { }\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(fn_must_use)] to the crate attributes to enable\n+\n warning: unknown lint: `x5400`\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:49:33\n    |\n@@ -43,154 +51,154 @@ LL | #![deny                        (x5100)] //~ WARN unknown lint: `x5100`\n    |                                 ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:113:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:112:8\n    |\n LL | #[warn(x5400)]\n    |        ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:116:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:115:25\n    |\n LL |     mod inner { #![warn(x5400)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:119:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:118:12\n    |\n LL |     #[warn(x5400)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:122:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:121:12\n    |\n LL |     #[warn(x5400)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:125:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:124:12\n    |\n LL |     #[warn(x5400)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:128:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:127:12\n    |\n LL |     #[warn(x5400)] impl S { }\n    |            ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:132:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:131:9\n    |\n LL | #[allow(x5300)]\n    |         ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:135:26\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:134:26\n    |\n LL |     mod inner { #![allow(x5300)] }\n    |                          ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:138:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:137:13\n    |\n LL |     #[allow(x5300)] fn f() { }\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:141:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:140:13\n    |\n LL |     #[allow(x5300)] struct S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:144:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:143:13\n    |\n LL |     #[allow(x5300)] type T = S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:147:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:146:13\n    |\n LL |     #[allow(x5300)] impl S { }\n    |             ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:151:10\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:150:10\n    |\n LL | #[forbid(x5200)]\n    |          ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:154:27\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:153:27\n    |\n LL |     mod inner { #![forbid(x5200)] }\n    |                           ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:157:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:156:14\n    |\n LL |     #[forbid(x5200)] fn f() { }\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:160:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:159:14\n    |\n LL |     #[forbid(x5200)] struct S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:163:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:162:14\n    |\n LL |     #[forbid(x5200)] type T = S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:166:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:165:14\n    |\n LL |     #[forbid(x5200)] impl S { }\n    |              ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:170:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:169:8\n    |\n LL | #[deny(x5100)]\n    |        ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:173:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:172:25\n    |\n LL |     mod inner { #![deny(x5100)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:176:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:175:12\n    |\n LL |     #[deny(x5100)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:179:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:178:12\n    |\n LL |     #[deny(x5100)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:182:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:181:12\n    |\n LL |     #[deny(x5100)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:185:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:184:12\n    |\n LL |     #[deny(x5100)] impl S { }\n    |            ^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:192:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:192:5\n    |\n-LL |     mod inner { #![macro_reexport=\"5000\"] }\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[macro_use] fn f() { }\n+   |     ^^^^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:44:9\n@@ -201,311 +209,275 @@ LL | #![warn(unused_attributes, unknown_lints)]\n warning: unused attribute\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:195:5\n    |\n-LL |     #[macro_reexport = \"5000\"] fn f() { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:198:5\n-   |\n-LL |     #[macro_reexport = \"5000\"] struct S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:201:5\n-   |\n-LL |     #[macro_reexport = \"5000\"] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:204:5\n-   |\n-LL |     #[macro_reexport = \"5000\"] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:189:1\n-   |\n-LL | #[macro_reexport = \"5000\"]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:212:5\n-   |\n-LL |     #[macro_use] fn f() { }\n-   |     ^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:215:5\n-   |\n LL |     #[macro_use] struct S;\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:218:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:198:5\n    |\n LL |     #[macro_use] type T = S;\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:221:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:201:5\n    |\n LL |     #[macro_use] impl S { }\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:228:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:208:17\n    |\n LL |     mod inner { #![macro_export=\"4800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:231:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:211:5\n    |\n LL |     #[macro_export = \"4800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:234:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:214:5\n    |\n LL |     #[macro_export = \"4800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:237:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:217:5\n    |\n LL |     #[macro_export = \"4800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:240:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:220:5\n    |\n LL |     #[macro_export = \"4800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:225:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:205:1\n    |\n LL | #[macro_export = \"4800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:247:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:227:17\n    |\n LL |     mod inner { #![plugin_registrar=\"4700\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:252:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:232:5\n    |\n LL |     #[plugin_registrar = \"4700\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:255:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:235:5\n    |\n LL |     #[plugin_registrar = \"4700\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:258:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:238:5\n    |\n LL |     #[plugin_registrar = \"4700\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:244:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:224:1\n    |\n LL | #[plugin_registrar = \"4700\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:265:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:245:17\n    |\n LL |     mod inner { #![main=\"4300\"] }\n    |                 ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:270:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:250:5\n    |\n LL |     #[main = \"4400\"] struct S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:273:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:253:5\n    |\n LL |     #[main = \"4400\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:276:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:256:5\n    |\n LL |     #[main = \"4400\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:262:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:242:1\n    |\n LL | #[main = \"4400\"]\n    | ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:283:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:263:17\n    |\n LL |     mod inner { #![start=\"4300\"] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:288:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:268:5\n    |\n LL |     #[start = \"4300\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:291:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:271:5\n    |\n LL |     #[start = \"4300\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:294:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:274:5\n    |\n LL |     #[start = \"4300\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:280:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:260:1\n    |\n LL | #[start = \"4300\"]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:333:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:313:17\n    |\n LL |     mod inner { #![repr=\"3900\"] }\n    |                 ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:336:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:316:5\n    |\n LL |     #[repr = \"3900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:341:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:321:5\n    |\n LL |     #[repr = \"3900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:344:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:324:5\n    |\n LL |     #[repr = \"3900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:330:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:310:1\n    |\n LL | #[repr = \"3900\"]\n    | ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:352:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:332:5\n    |\n LL |     #[path = \"3800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:355:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:335:5\n    |\n LL |     #[path = \"3800\"]  struct S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:358:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:338:5\n    |\n LL |     #[path = \"3800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:361:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:341:5\n    |\n LL |     #[path = \"3800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:368:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:348:17\n    |\n LL |     mod inner { #![abi=\"3700\"] }\n    |                 ^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:371:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:351:5\n    |\n LL |     #[abi = \"3700\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:374:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:354:5\n    |\n LL |     #[abi = \"3700\"] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:377:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:357:5\n    |\n LL |     #[abi = \"3700\"] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:380:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:360:5\n    |\n LL |     #[abi = \"3700\"] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:365:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:345:1\n    |\n LL | #[abi = \"3700\"]\n    | ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:387:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:367:17\n    |\n LL |     mod inner { #![automatically_derived=\"3600\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:390:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:370:5\n    |\n LL |     #[automatically_derived = \"3600\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:393:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:373:5\n    |\n LL |     #[automatically_derived = \"3600\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:396:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:376:5\n    |\n LL |     #[automatically_derived = \"3600\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:399:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:379:5\n    |\n LL |     #[automatically_derived = \"3600\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:384:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:364:1\n    |\n LL | #[automatically_derived = \"3600\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: function is marked #[no_mangle], but not exported\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:407:27\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:387:27\n    |\n LL |     #[no_mangle = \"3500\"] fn f() { }\n    |                           -^^^^^^^^^\n@@ -515,793 +487,787 @@ LL |     #[no_mangle = \"3500\"] fn f() { }\n    = note: #[warn(private_no_mangle_fns)] on by default\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:420:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:400:17\n    |\n LL |     mod inner { #![no_link=\"3400\"] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:423:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:403:5\n    |\n LL |     #[no_link = \"3400\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:426:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:406:5\n    |\n LL |     #[no_link = \"3400\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:429:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:409:5\n    |\n LL |     #[no_link = \"3400\"]type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:432:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:412:5\n    |\n LL |     #[no_link = \"3400\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:417:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:397:1\n    |\n LL | #[no_link = \"3400\"]\n    | ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:439:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:419:17\n    |\n LL |     mod inner { #![should_panic=\"3200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:442:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:422:5\n    |\n LL |     #[should_panic = \"3200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:445:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:425:5\n    |\n LL |     #[should_panic = \"3200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:448:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:428:5\n    |\n LL |     #[should_panic = \"3200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:451:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:431:5\n    |\n LL |     #[should_panic = \"3200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:436:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:416:1\n    |\n LL | #[should_panic = \"3200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:458:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:438:17\n    |\n LL |     mod inner { #![ignore=\"3100\"] }\n    |                 ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:461:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:441:5\n    |\n LL |     #[ignore = \"3100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:464:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:444:5\n    |\n LL |     #[ignore = \"3100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:467:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:447:5\n    |\n LL |     #[ignore = \"3100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:470:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:450:5\n    |\n LL |     #[ignore = \"3100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:455:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:435:1\n    |\n LL | #[ignore = \"3100\"]\n    | ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:477:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:457:17\n    |\n LL |     mod inner { #![no_implicit_prelude=\"3000\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:480:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:460:5\n    |\n LL |     #[no_implicit_prelude = \"3000\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:483:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:463:5\n    |\n LL |     #[no_implicit_prelude = \"3000\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:486:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:466:5\n    |\n LL |     #[no_implicit_prelude = \"3000\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:489:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:469:5\n    |\n LL |     #[no_implicit_prelude = \"3000\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:474:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:454:1\n    |\n LL | #[no_implicit_prelude = \"3000\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:496:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:476:17\n    |\n LL |     mod inner { #![reexport_test_harness_main=\"2900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:499:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:479:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:502:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:482:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:505:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:485:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:508:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:488:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:493:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:473:1\n    |\n LL | #[reexport_test_harness_main = \"2900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:519:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:499:5\n    |\n LL |     #[macro_escape] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:522:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:502:5\n    |\n LL |     #[macro_escape] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:525:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:505:5\n    |\n LL |     #[macro_escape] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:528:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:508:5\n    |\n LL |     #[macro_escape] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:536:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:516:17\n    |\n LL |     mod inner { #![no_std=\"2600\"] }\n    |                 ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:536:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:516:17\n    |\n LL |     mod inner { #![no_std=\"2600\"] }\n    |                 ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:540:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:520:5\n    |\n LL |     #[no_std = \"2600\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:540:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:520:5\n    |\n LL |     #[no_std = \"2600\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:544:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:524:5\n    |\n LL |     #[no_std = \"2600\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:544:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:524:5\n    |\n LL |     #[no_std = \"2600\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:548:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:528:5\n    |\n LL |     #[no_std = \"2600\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:548:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:528:5\n    |\n LL |     #[no_std = \"2600\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:552:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:532:5\n    |\n LL |     #[no_std = \"2600\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:552:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:532:5\n    |\n LL |     #[no_std = \"2600\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:532:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:512:1\n    |\n LL | #[no_std = \"2600\"]\n    | ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:532:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:512:1\n    |\n LL | #[no_std = \"2600\"]\n    | ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:691:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:672:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:691:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:672:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:695:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:676:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:695:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:676:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:699:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:680:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:699:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:680:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:703:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:684:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:703:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:684:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:707:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:688:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:707:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:688:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:687:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:687:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:716:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:697:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:716:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:697:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:720:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:701:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:720:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:701:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:724:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:705:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:724:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:705:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:728:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:709:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:728:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:709:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:732:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:713:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:732:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:713:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:712:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:712:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:741:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:722:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:741:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:722:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:745:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:726:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:745:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:726:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:749:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:730:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:749:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:730:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:753:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:734:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:753:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:734:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:757:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:738:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:757:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:738:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:737:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:718:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:737:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:718:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:767:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:748:17\n    |\n LL |     mod inner { #![no_main=\"0400\"] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:767:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:748:17\n    |\n LL |     mod inner { #![no_main=\"0400\"] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:771:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:752:5\n    |\n LL |     #[no_main = \"0400\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:771:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:752:5\n    |\n LL |     #[no_main = \"0400\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:775:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:756:5\n    |\n LL |     #[no_main = \"0400\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:775:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:756:5\n    |\n LL |     #[no_main = \"0400\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:779:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:760:5\n    |\n LL |     #[no_main = \"0400\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:779:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:760:5\n    |\n LL |     #[no_main = \"0400\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:783:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:764:5\n    |\n LL |     #[no_main = \"0400\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:783:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:764:5\n    |\n LL |     #[no_main = \"0400\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:763:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:744:1\n    |\n LL | #[no_main = \"0400\"]\n    | ^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:763:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:744:1\n    |\n LL | #[no_main = \"0400\"]\n    | ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:805:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:786:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:805:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:786:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:809:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:790:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:809:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:790:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:813:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:794:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:813:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:794:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:817:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:798:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:817:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:798:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:821:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:802:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:821:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:802:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:801:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:782:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:801:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:782:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:830:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:811:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:830:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:811:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:834:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:815:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:834:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:815:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:838:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:819:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:838:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:819:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:842:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:823:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:842:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:823:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:846:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:827:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:846:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:827:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:826:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:807:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: #![foo]\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:826:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:807:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:53:1\n-   |\n-LL | #![macro_reexport             = \"5000\"] //~ WARN unused attribute\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:55:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:54:1\n    |\n LL | #![macro_export               = \"4800\"] //~ WARN unused attribute\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:56:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:55:1\n    |\n LL | #![plugin_registrar           = \"4700\"] //~ WARN unused attribute\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:59:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:58:1\n    |\n LL | #![main                      = \"x4400\"] //~ WARN unused attribute\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:60:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:59:1\n    |\n LL | #![start                     = \"x4300\"] //~ WARN unused attribute\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:63:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:62:1\n    |\n LL | #![repr                       = \"3900\"] //~ WARN unused attribute\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:64:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:63:1\n    |\n LL | #![path                       = \"3800\"] //~ WARN unused attribute\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:65:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:64:1\n    |\n LL | #![abi                        = \"3700\"] //~ WARN unused attribute\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:66:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:65:1\n    |\n LL | #![automatically_derived      = \"3600\"] //~ WARN unused attribute\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:68:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:67:1\n    |\n LL | #![no_link                    = \"3400\"] //~ WARN unused attribute\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:70:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:69:1\n    |\n LL | #![should_panic               = \"3200\"] //~ WARN unused attribute\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:71:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:70:1\n    |\n LL | #![ignore                     = \"3100\"] //~ WARN unused attribute\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:77:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:76:1\n    |\n LL | #![proc_macro_derive          = \"2500\"] //~ WARN unused attribute\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: compilation successful\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:857:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:838:1\n    |\n LL | / fn main() { //~ ERROR compilation successful\n LL | |     println!(\"Hello World\");"}, {"sha": "bab583da37b4d0107ede750ec02131233e217142", "filename": "src/test/ui/macro-reexport-removed.rs", "status": "renamed", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Ftest%2Fui%2Fmacro-reexport-removed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Ftest%2Fui%2Fmacro-reexport-removed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacro-reexport-removed.rs?ref=300b6bb41784d63b04bf621a3290fe1c247f873f", "patch": "@@ -10,12 +10,9 @@\n \n // aux-build:two_macros.rs\n \n-#![feature(macro_reexport)]\n+#![feature(macro_reexport)] //~ ERROR feature has been removed\n \n-#[macro_use(macro_two)]\n-#[macro_reexport(no_way)] //~ ERROR re-exported macro not found\n+#[macro_reexport(macro_one)] //~ ERROR attribute `macro_reexport` is currently unknown\n extern crate two_macros;\n \n-pub fn main() {\n-    macro_two!();\n-}\n+fn main() {}", "previous_filename": "src/test/compile-fail/macro-reexport-undef.rs"}, {"sha": "4d262e9608185887b8cff8a8a42c0e0cc884d061", "filename": "src/test/ui/macro-reexport-removed.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Ftest%2Fui%2Fmacro-reexport-removed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/300b6bb41784d63b04bf621a3290fe1c247f873f/src%2Ftest%2Fui%2Fmacro-reexport-removed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacro-reexport-removed.stderr?ref=300b6bb41784d63b04bf621a3290fe1c247f873f", "patch": "@@ -0,0 +1,18 @@\n+error[E0557]: feature has been removed\n+  --> $DIR/macro-reexport-removed.rs:13:12\n+   |\n+LL | #![feature(macro_reexport)] //~ ERROR feature has been removed\n+   |            ^^^^^^^^^^^^^^\n+\n+error[E0658]: The attribute `macro_reexport` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)\n+  --> $DIR/macro-reexport-removed.rs:15:1\n+   |\n+LL | #[macro_reexport(macro_one)] //~ ERROR attribute `macro_reexport` is currently unknown\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0557, E0658.\n+For more information about an error, try `rustc --explain E0557`."}]}