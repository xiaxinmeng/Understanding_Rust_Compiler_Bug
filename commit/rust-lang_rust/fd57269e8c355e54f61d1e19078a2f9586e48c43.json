{"sha": "fd57269e8c355e54f61d1e19078a2f9586e48c43", "node_id": "C_kwDOAAsO6NoAKGZkNTcyNjllOGMzNTVlNTRmNjFkMWUxOTA3OGEyZjk1ODZlNDhjNDM", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-27T13:40:55Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-30T07:59:21Z"}, "message": "lint: port hidden unicode codepoints diagnostics\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "5c49f4bdc06ed589f9e57fa51e0c8745c7e5d82e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c49f4bdc06ed589f9e57fa51e0c8745c7e5d82e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd57269e8c355e54f61d1e19078a2f9586e48c43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd57269e8c355e54f61d1e19078a2f9586e48c43", "html_url": "https://github.com/rust-lang/rust/commit/fd57269e8c355e54f61d1e19078a2f9586e48c43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd57269e8c355e54f61d1e19078a2f9586e48c43/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0624eb6c9236323eda00379a8342fba0af2e78d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0624eb6c9236323eda00379a8342fba0af2e78d", "html_url": "https://github.com/rust-lang/rust/commit/a0624eb6c9236323eda00379a8342fba0af2e78d"}], "stats": {"total": 57, "additions": 27, "deletions": 30}, "files": [{"sha": "474f902bff6d5afc857ca812a4ca6e6c3b8d6f8e", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fd57269e8c355e54f61d1e19078a2f9586e48c43/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/fd57269e8c355e54f61d1e19078a2f9586e48c43/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=fd57269e8c355e54f61d1e19078a2f9586e48c43", "patch": "@@ -15,3 +15,16 @@ lint-enum-intrinsics-mem-variant =\n \n lint-expectation = this lint expectation is unfulfilled\n     .note = the `unfulfilled_lint_expectations` lint can't be expected and will always produce this message\n+\n+lint-hidden-unicode-codepoints = unicode codepoint changing visible direction of text present in {$label}\n+    .label = this {$label} contains {$count ->\n+        [one] an invisible\n+        *[other] invisible\n+    } unicode text flow control {$count ->\n+        [one] codepoint\n+        *[other] codepoints\n+    }\n+    .note = these kind of unicode codepoints change the way text flows on applications that support them, but can cause confusion because they change the order of characters on the screen\n+    .suggestion-remove = if their presence wasn't intentional, you can remove them\n+    .suggestion-escape = if you want to keep them but make them visible in your source code, you can escape them\n+    .no-suggestion-note-escape = if you want to keep them but make them visible in your source code, you can escape them: {$escaped}"}, {"sha": "fe2712525eea5e2c6e3e73e487b2b2feff89ba14", "filename": "compiler/rustc_lint/src/hidden_unicode_codepoints.rs", "status": "modified", "additions": 14, "deletions": 30, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/fd57269e8c355e54f61d1e19078a2f9586e48c43/compiler%2Frustc_lint%2Fsrc%2Fhidden_unicode_codepoints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd57269e8c355e54f61d1e19078a2f9586e48c43/compiler%2Frustc_lint%2Fsrc%2Fhidden_unicode_codepoints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fhidden_unicode_codepoints.rs?ref=fd57269e8c355e54f61d1e19078a2f9586e48c43", "patch": "@@ -1,7 +1,7 @@\n use crate::{EarlyContext, EarlyLintPass, LintContext};\n use ast::util::unicode::{contains_text_flow_control_chars, TEXT_FLOW_CONTROL_CHARS};\n use rustc_ast as ast;\n-use rustc_errors::{Applicability, SuggestionStyle};\n+use rustc_errors::{fluent, Applicability, SuggestionStyle};\n use rustc_span::{BytePos, Span, Symbol};\n \n declare_lint! {\n@@ -61,41 +61,25 @@ impl HiddenUnicodeCodepoints {\n             .collect();\n \n         cx.struct_span_lint(TEXT_DIRECTION_CODEPOINT_IN_LITERAL, span, |lint| {\n-            let mut err = lint.build(&format!(\n-                \"unicode codepoint changing visible direction of text present in {}\",\n-                label\n-            ));\n-            let (an, s) = match spans.len() {\n-                1 => (\"an \", \"\"),\n-                _ => (\"\", \"s\"),\n-            };\n-            err.span_label(\n-                span,\n-                &format!(\n-                    \"this {} contains {}invisible unicode text flow control codepoint{}\",\n-                    label, an, s,\n-                ),\n-            );\n+            let mut err = lint.build(fluent::lint::hidden_unicode_codepoints);\n+            err.set_arg(\"label\", label);\n+            err.set_arg(\"count\", spans.len());\n+            err.span_label(span, fluent::lint::label);\n+            err.note(fluent::lint::note);\n             if point_at_inner_spans {\n                 for (c, span) in &spans {\n                     err.span_label(*span, format!(\"{:?}\", c));\n                 }\n             }\n-            err.note(\n-                \"these kind of unicode codepoints change the way text flows on applications that \\\n-                 support them, but can cause confusion because they change the order of \\\n-                 characters on the screen\",\n-            );\n             if point_at_inner_spans && !spans.is_empty() {\n                 err.multipart_suggestion_with_style(\n-                    \"if their presence wasn't intentional, you can remove them\",\n+                    fluent::lint::suggestion_remove,\n                     spans.iter().map(|(_, span)| (*span, \"\".to_string())).collect(),\n                     Applicability::MachineApplicable,\n                     SuggestionStyle::HideCodeAlways,\n                 );\n                 err.multipart_suggestion(\n-                    \"if you want to keep them but make them visible in your source code, you can \\\n-                    escape them\",\n+                    fluent::lint::suggestion_escape,\n                     spans\n                         .into_iter()\n                         .map(|(c, span)| {\n@@ -109,16 +93,16 @@ impl HiddenUnicodeCodepoints {\n                 // FIXME: in other suggestions we've reversed the inner spans of doc comments. We\n                 // should do the same here to provide the same good suggestions as we do for\n                 // literals above.\n-                err.note(\"if their presence wasn't intentional, you can remove them\");\n-                err.note(&format!(\n-                    \"if you want to keep them but make them visible in your source code, you can \\\n-                     escape them: {}\",\n+                err.set_arg(\n+                    \"escaped\",\n                     spans\n                         .into_iter()\n-                        .map(|(c, _)| { format!(\"{:?}\", c) })\n+                        .map(|(c, _)| format!(\"{:?}\", c))\n                         .collect::<Vec<String>>()\n                         .join(\", \"),\n-                ));\n+                );\n+                err.note(fluent::lint::suggestion_remove);\n+                err.note(fluent::lint::no_suggestion_note_escape);\n             }\n             err.emit();\n         });"}]}