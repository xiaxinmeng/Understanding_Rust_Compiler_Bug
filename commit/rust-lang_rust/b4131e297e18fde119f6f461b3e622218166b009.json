{"sha": "b4131e297e18fde119f6f461b3e622218166b009", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MTMxZTI5N2UxOGZkZTExOWY2ZjQ2MWIzZTYyMjIxODE2NmIwMDk=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-04-26T15:58:14Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-04-26T15:58:14Z"}, "message": "Limit internalization in LLVM 8 ThinLTO", "tree": {"sha": "493ba59c731fdcc56615567fd5d8c8de1cfd42a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/493ba59c731fdcc56615567fd5d8c8de1cfd42a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4131e297e18fde119f6f461b3e622218166b009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4131e297e18fde119f6f461b3e622218166b009", "html_url": "https://github.com/rust-lang/rust/commit/b4131e297e18fde119f6f461b3e622218166b009", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4131e297e18fde119f6f461b3e622218166b009/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd31c392f286d61caac0babee68c900cdaa8b504", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd31c392f286d61caac0babee68c900cdaa8b504", "html_url": "https://github.com/rust-lang/rust/commit/bd31c392f286d61caac0babee68c900cdaa8b504"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "0ebef82d3768068380689db349b4c484953e662b", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b4131e297e18fde119f6f461b3e622218166b009/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b4131e297e18fde119f6f461b3e622218166b009/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=b4131e297e18fde119f6f461b3e622218166b009", "patch": "@@ -873,8 +873,11 @@ LLVMRustCreateThinLTOData(LLVMRustThinLTOModule *modules,\n     return PrevailingType::Unknown;\n   };\n #if LLVM_VERSION_GE(8, 0)\n+  // We don't have a complete picture in our use of ThinLTO, just our immediate\n+  // crate, so we need `ImportEnabled = false` to limit internalization.\n+  // Otherwise, we sometimes lose `static` values -- see #60184.\n   computeDeadSymbolsWithConstProp(Ret->Index, Ret->GUIDPreservedSymbols,\n-                                  deadIsPrevailing, /* ImportEnabled = */ true);\n+                                  deadIsPrevailing, /* ImportEnabled = */ false);\n #else\n   computeDeadSymbols(Ret->Index, Ret->GUIDPreservedSymbols, deadIsPrevailing);\n #endif"}]}