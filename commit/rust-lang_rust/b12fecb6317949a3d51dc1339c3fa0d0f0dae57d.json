{"sha": "b12fecb6317949a3d51dc1339c3fa0d0f0dae57d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxMmZlY2I2MzE3OTQ5YTNkNTFkYzEzMzljM2ZhMGQwZjBkYWU1N2Q=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-09-19T02:41:05Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-09-19T02:41:05Z"}, "message": "Use horizontal layout for a function with a single argument\n\nfoo(long_arg)\n\ninstead of\n\nfoo(\n    long_arg,\n)", "tree": {"sha": "b6b52db257edb40387271cebdb5017e82b5eeaa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6b52db257edb40387271cebdb5017e82b5eeaa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b12fecb6317949a3d51dc1339c3fa0d0f0dae57d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b12fecb6317949a3d51dc1339c3fa0d0f0dae57d", "html_url": "https://github.com/rust-lang/rust/commit/b12fecb6317949a3d51dc1339c3fa0d0f0dae57d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b12fecb6317949a3d51dc1339c3fa0d0f0dae57d/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7510306405943c2e1188894ff1e0b300a69fbfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7510306405943c2e1188894ff1e0b300a69fbfc", "html_url": "https://github.com/rust-lang/rust/commit/b7510306405943c2e1188894ff1e0b300a69fbfc"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "dc6504de0b1146affb13268a8a45eb1b308683d2", "filename": "src/expr.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b12fecb6317949a3d51dc1339c3fa0d0f0dae57d/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b12fecb6317949a3d51dc1339c3fa0d0f0dae57d/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=b12fecb6317949a3d51dc1339c3fa0d0f0dae57d", "patch": "@@ -2215,12 +2215,23 @@ where\n         _ if args.len() >= 1 => {\n             item_vec[args.len() - 1].item = args.last()\n                 .and_then(|last_arg| last_arg.rewrite(context, shape));\n-            tactic = definitive_tactic(\n-                &*item_vec,\n-                ListTactic::LimitedHorizontalVertical(args_max_width),\n-                Separator::Comma,\n-                one_line_width,\n-            );\n+            // Use horizontal layout for a function with a single argument as long as\n+            // everything fits in a single line.\n+            if args.len() == 1\n+                && args_max_width != 0 // Vertical layout is forced.\n+                && !item_vec[0].has_comment()\n+                && !item_vec[0].inner_as_ref().contains('\\n')\n+                && ::lists::total_item_width(&item_vec[0]) <= one_line_width\n+            {\n+                tactic = DefinitiveListTactic::Horizontal;\n+            } else {\n+                tactic = definitive_tactic(\n+                    &*item_vec,\n+                    ListTactic::LimitedHorizontalVertical(args_max_width),\n+                    Separator::Comma,\n+                    one_line_width,\n+                );\n+            }\n         }\n         _ => (),\n     }"}, {"sha": "e499377e48a4073d7f71f5850dd17bde82ccd9d1", "filename": "src/lists.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b12fecb6317949a3d51dc1339c3fa0d0f0dae57d/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b12fecb6317949a3d51dc1339c3fa0d0f0dae57d/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=b12fecb6317949a3d51dc1339c3fa0d0f0dae57d", "patch": "@@ -713,7 +713,7 @@ where\n         .fold((0, 0), |acc, l| (acc.0 + 1, acc.1 + l))\n }\n \n-fn total_item_width(item: &ListItem) -> usize {\n+pub fn total_item_width(item: &ListItem) -> usize {\n     comment_len(item.pre_comment.as_ref().map(|x| &(*x)[..]))\n         + comment_len(item.post_comment.as_ref().map(|x| &(*x)[..]))\n         + item.item.as_ref().map_or(0, |str| str.len())"}]}