{"sha": "84e6732d1e41ad8f928132cf9035a099a65c7010", "node_id": "C_kwDOAAsO6NoAKDg0ZTY3MzJkMWU0MWFkOGY5MjgxMzJjZjkwMzVhMDk5YTY1YzcwMTA", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-22T11:59:45Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-24T09:49:40Z"}, "message": "also smoke-test 'cargo miri test'", "tree": {"sha": "e8c7caab5e99e8ba418d74f14506d0ebfcbf723a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8c7caab5e99e8ba418d74f14506d0ebfcbf723a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84e6732d1e41ad8f928132cf9035a099a65c7010", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84e6732d1e41ad8f928132cf9035a099a65c7010", "html_url": "https://github.com/rust-lang/rust/commit/84e6732d1e41ad8f928132cf9035a099a65c7010", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84e6732d1e41ad8f928132cf9035a099a65c7010/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a61737ed6e169c64c851dd9a6f9bbcf5d78f70b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a61737ed6e169c64c851dd9a6f9bbcf5d78f70b4", "html_url": "https://github.com/rust-lang/rust/commit/a61737ed6e169c64c851dd9a6f9bbcf5d78f70b4"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "ebac73d8aad207d45a2e9cf18d8864b1997109c6", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/84e6732d1e41ad8f928132cf9035a099a65c7010/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84e6732d1e41ad8f928132cf9035a099a65c7010/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=84e6732d1e41ad8f928132cf9035a099a65c7010", "patch": "@@ -563,10 +563,10 @@ impl Step for Miri {\n         cargo.add_rustc_lib_path(builder, compiler);\n \n         // miri tests need to know about the stage sysroot\n-        cargo.env(\"MIRI_SYSROOT\", miri_sysroot);\n+        cargo.env(\"MIRI_SYSROOT\", &miri_sysroot);\n         cargo.env(\"MIRI_HOST_SYSROOT\", sysroot);\n         cargo.env(\"RUSTC_LIB_PATH\", builder.rustc_libdir(compiler));\n-        cargo.env(\"MIRI\", miri);\n+        cargo.env(\"MIRI\", &miri);\n         // propagate --bless\n         if builder.config.cmd.bless() {\n             cargo.env(\"MIRI_BLESS\", \"Gesundheit\");\n@@ -579,6 +579,40 @@ impl Step for Miri {\n \n         let mut cargo = Command::from(cargo);\n         builder.run(&mut cargo);\n+\n+        // # Run `cargo miri test`.\n+        // This is just a smoke test (Miri's own CI invokes this in a bunch of different ways and ensures\n+        // that we get the desired output), but that is sufficient to make sure that the libtest harness\n+        // itself executes properly under Miri.\n+        let mut cargo = tool::prepare_tool_cargo(\n+            builder,\n+            compiler,\n+            Mode::ToolRustc,\n+            host,\n+            \"run\",\n+            \"src/tools/miri/cargo-miri\",\n+            SourceType::Submodule,\n+            &[],\n+        );\n+        cargo.add_rustc_lib_path(builder, compiler);\n+        cargo.arg(\"--\").arg(\"miri\").arg(\"test\");\n+        cargo\n+            .arg(\"--manifest-path\")\n+            .arg(builder.src.join(\"src/tools/miri/test-cargo-miri/Cargo.toml\"));\n+        cargo.arg(\"--target\").arg(target.rustc_target_arg());\n+        cargo.arg(\"--tests\"); // don't run doctests, they are too confused by the staging\n+        cargo.arg(\"--\").args(builder.config.cmd.test_args());\n+\n+        // Tell `cargo miri` where to find things.\n+        cargo.env(\"MIRI_SYSROOT\", &miri_sysroot);\n+        cargo.env(\"MIRI_HOST_SYSROOT\", sysroot);\n+        cargo.env(\"RUSTC_LIB_PATH\", builder.rustc_libdir(compiler));\n+        cargo.env(\"MIRI\", &miri);\n+        // Debug things.\n+        cargo.env(\"RUST_BACKTRACE\", \"1\");\n+\n+        let mut cargo = Command::from(cargo);\n+        builder.run(&mut cargo);\n     }\n }\n "}]}