{"sha": "7dce32e65d53ff9cfd8dba89121efa4c977030de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkY2UzMmU2NWQ1M2ZmOWNmZDhkYmE4OTEyMWVmYTRjOTc3MDMwZGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-20T23:53:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-20T23:53:24Z"}, "message": "Auto merge of #30982 - KiChjang:zst-collections-tests, r=bluss\n\nFixes #28518.", "tree": {"sha": "e45ff7c757e7f3ca71a1f3c68e1221ab1698f8ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e45ff7c757e7f3ca71a1f3c68e1221ab1698f8ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dce32e65d53ff9cfd8dba89121efa4c977030de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dce32e65d53ff9cfd8dba89121efa4c977030de", "html_url": "https://github.com/rust-lang/rust/commit/7dce32e65d53ff9cfd8dba89121efa4c977030de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dce32e65d53ff9cfd8dba89121efa4c977030de/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bb9d453cf9640b08d97543cd5ed9ded52fd757f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bb9d453cf9640b08d97543cd5ed9ded52fd757f", "html_url": "https://github.com/rust-lang/rust/commit/4bb9d453cf9640b08d97543cd5ed9ded52fd757f"}, {"sha": "aca4e6a89aa0c12507e632f6df57e006d284eba0", "url": "https://api.github.com/repos/rust-lang/rust/commits/aca4e6a89aa0c12507e632f6df57e006d284eba0", "html_url": "https://github.com/rust-lang/rust/commit/aca4e6a89aa0c12507e632f6df57e006d284eba0"}], "stats": {"total": 126, "additions": 126, "deletions": 0}, "files": [{"sha": "0866a767934d6fea76d9e9a58ed38f6d28d5e38d", "filename": "src/test/run-pass/zero-sized-binary-heap-push.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7dce32e65d53ff9cfd8dba89121efa4c977030de/src%2Ftest%2Frun-pass%2Fzero-sized-binary-heap-push.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dce32e65d53ff9cfd8dba89121efa4c977030de/src%2Ftest%2Frun-pass%2Fzero-sized-binary-heap-push.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fzero-sized-binary-heap-push.rs?ref=7dce32e65d53ff9cfd8dba89121efa4c977030de", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::collections::BinaryHeap;\n+use std::iter::Iterator;\n+\n+fn main() {\n+    const N: usize = 8;\n+\n+    for len in 0..N {\n+        let mut tester = BinaryHeap::with_capacity(len);\n+        assert_eq!(tester.len(), 0);\n+        assert!(tester.capacity() >= len);\n+        for bit in 0..len {\n+            tester.push(());\n+        }\n+        assert_eq!(tester.len(), len);\n+        assert_eq!(tester.iter().count(), len);\n+        tester.clear();\n+    }\n+}"}, {"sha": "aff124c30ec611ca60de5a911c9d1578ee7de323", "filename": "src/test/run-pass/zero-sized-btreemap-insert.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/7dce32e65d53ff9cfd8dba89121efa4c977030de/src%2Ftest%2Frun-pass%2Fzero-sized-btreemap-insert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dce32e65d53ff9cfd8dba89121efa4c977030de/src%2Ftest%2Frun-pass%2Fzero-sized-btreemap-insert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fzero-sized-btreemap-insert.rs?ref=7dce32e65d53ff9cfd8dba89121efa4c977030de", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::cmp::{Ord, Ordering, PartialOrd};\n+use std::collections::BTreeMap;\n+use std::iter::Iterator;\n+\n+#[derive(Eq, Hash, Debug, Ord, PartialEq, PartialOrd)]\n+struct Zst;\n+\n+fn main() {\n+    const N: usize = 8;\n+\n+    for len in 0..N {\n+        let mut tester = BTreeMap::new();\n+        assert_eq!(tester.len(), 0);\n+        for bit in 0..len {\n+            tester.insert(Zst, ());\n+        }\n+        assert_eq!(tester.len(), if len == 0 { 0 } else { 1 });\n+        assert_eq!(tester.iter().count(), if len == 0 { 0 } else { 1 });\n+        assert_eq!(tester.get(&Zst).is_some(), len > 0);\n+        tester.clear();\n+    }\n+}"}, {"sha": "9c424854d482c93caeee54af39668021e270054a", "filename": "src/test/run-pass/zero-sized-linkedlist-push.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/7dce32e65d53ff9cfd8dba89121efa4c977030de/src%2Ftest%2Frun-pass%2Fzero-sized-linkedlist-push.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dce32e65d53ff9cfd8dba89121efa4c977030de/src%2Ftest%2Frun-pass%2Fzero-sized-linkedlist-push.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fzero-sized-linkedlist-push.rs?ref=7dce32e65d53ff9cfd8dba89121efa4c977030de", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::collections::LinkedList;\n+use std::iter::Iterator;\n+\n+fn main() {\n+    const N: usize = 8;\n+\n+    // Test that for all possible sequences of push_front / push_back,\n+    // we end up with a LinkedList of the correct size\n+\n+    for len in 0..N {\n+        let mut tester = LinkedList::new();\n+        assert_eq!(tester.len(), 0);\n+        assert_eq!(tester.front(), None);\n+        for case in 0..(1 << len) {\n+            assert_eq!(tester.len(), 0);\n+            for bit in 0..len {\n+                if case & (1 << bit) != 0 {\n+                    tester.push_front(());\n+                } else {\n+                    tester.push_back(());\n+                }\n+            }\n+            assert_eq!(tester.len(), len);\n+            assert_eq!(tester.iter().count(), len);\n+            tester.clear();\n+        }\n+    }\n+}"}, {"sha": "e472e9380a369e30ebf1eeca2e30e77a9433e5a5", "filename": "src/test/run-pass/zero-sized-vec-push.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7dce32e65d53ff9cfd8dba89121efa4c977030de/src%2Ftest%2Frun-pass%2Fzero-sized-vec-push.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7dce32e65d53ff9cfd8dba89121efa4c977030de/src%2Ftest%2Frun-pass%2Fzero-sized-vec-push.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fzero-sized-vec-push.rs?ref=7dce32e65d53ff9cfd8dba89121efa4c977030de", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::iter::Iterator;\n+use std::vec::Vec;\n+\n+fn main() {\n+    const N: usize = 8;\n+\n+    for len in 0..N {\n+        let mut tester = Vec::with_capacity(len);\n+        assert_eq!(tester.len(), 0);\n+        assert!(tester.capacity() >= len);\n+        for bit in 0..len {\n+            tester.push(());\n+        }\n+        assert_eq!(tester.len(), len);\n+        assert_eq!(tester.iter().count(), len);\n+        tester.clear();\n+    }\n+}"}]}