{"sha": "af7134e7de793ea3bba30bc350daef76ea9de755", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmNzEzNGU3ZGU3OTNlYTNiYmEzMGJjMzUwZGFlZjc2ZWE5ZGU3NTU=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-01-03T08:19:52Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-01-03T09:07:22Z"}, "message": "Move variable into the only branch where it is relevant\n\nAt the `if` branch `filter` (the `let` binding) is `None` iff `filter` (the parameter) was `None`.\nWe can branch on the parameter, move the binding into the `if`, and the complexity of handling\n`Option<Option<_>` largely dissolves.", "tree": {"sha": "3bc2a8de7f4b08dfc9aba4f90d818591f1cadbfb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bc2a8de7f4b08dfc9aba4f90d818591f1cadbfb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af7134e7de793ea3bba30bc350daef76ea9de755", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af7134e7de793ea3bba30bc350daef76ea9de755", "html_url": "https://github.com/rust-lang/rust/commit/af7134e7de793ea3bba30bc350daef76ea9de755", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af7134e7de793ea3bba30bc350daef76ea9de755/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18d855b8f6358d34dbee033faccc82b8c849a4b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/18d855b8f6358d34dbee033faccc82b8c849a4b3", "html_url": "https://github.com/rust-lang/rust/commit/18d855b8f6358d34dbee033faccc82b8c849a4b3"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "4aaacdc593faf2dfb17b58ae988c18aad57074eb", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/af7134e7de793ea3bba30bc350daef76ea9de755/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af7134e7de793ea3bba30bc350daef76ea9de755/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=af7134e7de793ea3bba30bc350daef76ea9de755", "patch": "@@ -1345,15 +1345,14 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n             return &[];\n         }\n \n-        // Do a reverse lookup beforehand to avoid touching the crate_num\n-        // hash map in the loop below.\n-        let filter = match filter.map(|def_id| self.reverse_translate_def_id(def_id)) {\n-            Some(Some(def_id)) => Some((def_id.krate.as_u32(), def_id.index)),\n-            Some(None) => return &[],\n-            None => None,\n-        };\n+        if let Some(def_id) = filter {\n+            // Do a reverse lookup beforehand to avoid touching the crate_num\n+            // hash map in the loop below.\n+            let filter = match self.reverse_translate_def_id(def_id) {\n+                Some(def_id) => (def_id.krate.as_u32(), def_id.index),\n+                None => return &[],\n+            };\n \n-        if let Some(filter) = filter {\n             if let Some(impls) = self.trait_impls.get(&filter) {\n                 tcx.arena.alloc_from_iter(\n                     impls.decode(self).map(|(idx, simplified_self_ty)| {"}]}