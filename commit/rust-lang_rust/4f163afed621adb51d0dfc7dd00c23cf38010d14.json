{"sha": "4f163afed621adb51d0dfc7dd00c23cf38010d14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmMTYzYWZlZDYyMWFkYjUxZDBkZmM3ZGQwMGMyM2NmMzgwMTBkMTQ=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-01-13T00:39:41Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-01-13T00:39:41Z"}, "message": "Fix destructor return value in emcc.rs", "tree": {"sha": "58f1e8b57521627fb9f751642be41158bcd233a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58f1e8b57521627fb9f751642be41158bcd233a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f163afed621adb51d0dfc7dd00c23cf38010d14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f163afed621adb51d0dfc7dd00c23cf38010d14", "html_url": "https://github.com/rust-lang/rust/commit/4f163afed621adb51d0dfc7dd00c23cf38010d14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f163afed621adb51d0dfc7dd00c23cf38010d14/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f60db8da8f7f159dbe93ce481a4608633c4c1bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f60db8da8f7f159dbe93ce481a4608633c4c1bf", "html_url": "https://github.com/rust-lang/rust/commit/8f60db8da8f7f159dbe93ce481a4608633c4c1bf"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "0f93140238bc424a3af25cb7a3b6c778150e4a9a", "filename": "src/libpanic_unwind/emcc.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4f163afed621adb51d0dfc7dd00c23cf38010d14/src%2Flibpanic_unwind%2Femcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f163afed621adb51d0dfc7dd00c23cf38010d14/src%2Flibpanic_unwind%2Femcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Femcc.rs?ref=4f163afed621adb51d0dfc7dd00c23cf38010d14", "patch": "@@ -76,12 +76,20 @@ pub unsafe fn panic(data: Box<dyn Any + Send>) -> u32 {\n     }\n     ptr::write(exception, Exception { data: Some(data) });\n     __cxa_throw(exception as *mut _, &EXCEPTION_TYPE_INFO, exception_cleanup);\n+}\n \n-    extern \"C\" fn exception_cleanup(ptr: *mut libc::c_void) {\n-        unsafe {\n-            ptr::drop_in_place(ptr as *mut Exception);\n-            super::__rust_drop_panic();\n-        }\n+// On WASM and ARM, the destructor returns the pointer to the object.\n+cfg_if::cfg_if! {\n+    if #[cfg(any(target_arch = \"arm\", target_arch = \"wasm32\"))] {\n+        type DestructorRet = *mut libc::c_void;\n+    } else {\n+        type DestructorRet = ();\n+    }\n+}\n+extern \"C\" fn exception_cleanup(ptr: *mut libc::c_void) -> DestructorRet {\n+    unsafe {\n+        ptr::drop_in_place(ptr as *mut Exception);\n+        super::__rust_drop_panic();\n     }\n }\n \n@@ -104,7 +112,7 @@ extern \"C\" {\n     fn __cxa_throw(\n         thrown_exception: *mut libc::c_void,\n         tinfo: *const TypeInfo,\n-        dest: extern \"C\" fn(*mut libc::c_void),\n+        dest: extern \"C\" fn(*mut libc::c_void) -> DestructorRet,\n     ) -> !;\n     fn __gxx_personality_v0(\n         version: c_int,"}]}