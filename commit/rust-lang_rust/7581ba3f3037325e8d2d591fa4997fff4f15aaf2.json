{"sha": "7581ba3f3037325e8d2d591fa4997fff4f15aaf2", "node_id": "C_kwDOAAsO6NoAKDc1ODFiYTNmMzAzNzMyNWU4ZDJkNTkxZmE0OTk3ZmZmNGYxNWFhZjI", "commit": {"author": {"name": "Anatol Ulrich", "email": "anatol.ulrich@ferrous-systems.com", "date": "2021-11-03T13:21:29Z"}, "committer": {"name": "Anatol Ulrich", "email": "anatol.ulrich@ferrous-systems.com", "date": "2021-11-03T13:21:29Z"}, "message": "forgot a dbg", "tree": {"sha": "2cf4375f9199047061e6f7df50d286251429e093", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2cf4375f9199047061e6f7df50d286251429e093"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7581ba3f3037325e8d2d591fa4997fff4f15aaf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7581ba3f3037325e8d2d591fa4997fff4f15aaf2", "html_url": "https://github.com/rust-lang/rust/commit/7581ba3f3037325e8d2d591fa4997fff4f15aaf2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7581ba3f3037325e8d2d591fa4997fff4f15aaf2/comments", "author": null, "committer": null, "parents": [{"sha": "9bce4d669647c11c87be39fd08db5a68bf324c12", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bce4d669647c11c87be39fd08db5a68bf324c12", "html_url": "https://github.com/rust-lang/rust/commit/9bce4d669647c11c87be39fd08db5a68bf324c12"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "95b575db17b6bd3888e77403a9c1c02ce1838ae2", "filename": "crates/text_edit/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7581ba3f3037325e8d2d591fa4997fff4f15aaf2/crates%2Ftext_edit%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7581ba3f3037325e8d2d591fa4997fff4f15aaf2/crates%2Ftext_edit%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftext_edit%2Fsrc%2Flib.rs?ref=7581ba3f3037325e8d2d591fa4997fff4f15aaf2", "patch": "@@ -116,7 +116,6 @@ impl TextEdit {\n     }\n \n     pub fn union(&mut self, other: TextEdit) -> Result<(), TextEdit> {\n-        dbg!(&self, &other);\n         // FIXME: can be done without allocating intermediate vector\n         let mut all = self.iter().chain(other.iter()).collect::<Vec<_>>();\n         if !check_disjoint_or_equal(&mut all) {"}]}