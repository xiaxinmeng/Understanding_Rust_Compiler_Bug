{"sha": "2633d5f5d0fad269e968586295a8587308314be1", "node_id": "C_kwDOAAsO6NoAKDI2MzNkNWY1ZDBmYWQyNjllOTY4NTg2Mjk1YTg1ODczMDgzMTRiZTE", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-01-11T19:41:07Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-01-12T17:03:03Z"}, "message": "Fix not displayed re-export of `doc(hidden)` item", "tree": {"sha": "33c64d124290b63efc21b12d7502e9145b4ec63e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33c64d124290b63efc21b12d7502e9145b4ec63e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2633d5f5d0fad269e968586295a8587308314be1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2633d5f5d0fad269e968586295a8587308314be1", "html_url": "https://github.com/rust-lang/rust/commit/2633d5f5d0fad269e968586295a8587308314be1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2633d5f5d0fad269e968586295a8587308314be1/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "606c3907251397a42e23d3e60de31be9d32525d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/606c3907251397a42e23d3e60de31be9d32525d5", "html_url": "https://github.com/rust-lang/rust/commit/606c3907251397a42e23d3e60de31be9d32525d5"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "4c992e94833d6f4f6a5906bdd24838f5cb61f3fc", "filename": "src/librustdoc/passes/strip_priv_imports.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2633d5f5d0fad269e968586295a8587308314be1/src%2Flibrustdoc%2Fpasses%2Fstrip_priv_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2633d5f5d0fad269e968586295a8587308314be1/src%2Flibrustdoc%2Fpasses%2Fstrip_priv_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_priv_imports.rs?ref=2633d5f5d0fad269e968586295a8587308314be1", "patch": "@@ -12,5 +12,6 @@ pub(crate) const STRIP_PRIV_IMPORTS: Pass = Pass {\n };\n \n pub(crate) fn strip_priv_imports(krate: clean::Crate, cx: &mut DocContext<'_>) -> clean::Crate {\n-    ImportStripper { tcx: cx.tcx }.fold_crate(krate)\n+    let is_json_output = cx.output_format.is_json() && !cx.show_coverage;\n+    ImportStripper { tcx: cx.tcx, is_json_output }.fold_crate(krate)\n }"}, {"sha": "bb6dccb7c949939bf3e36ef98b2264a1807692fe", "filename": "src/librustdoc/passes/strip_private.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2633d5f5d0fad269e968586295a8587308314be1/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2633d5f5d0fad269e968586295a8587308314be1/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs?ref=2633d5f5d0fad269e968586295a8587308314be1", "patch": "@@ -28,7 +28,8 @@ pub(crate) fn strip_private(mut krate: clean::Crate, cx: &mut DocContext<'_>) ->\n             is_json_output,\n             tcx: cx.tcx,\n         };\n-        krate = ImportStripper { tcx: cx.tcx }.fold_crate(stripper.fold_crate(krate));\n+        krate =\n+            ImportStripper { tcx: cx.tcx, is_json_output }.fold_crate(stripper.fold_crate(krate));\n     }\n \n     // strip all impls referencing private items"}, {"sha": "f5501b3d5238b82c1ef80326f4a85061e0ddd0da", "filename": "src/librustdoc/passes/stripper.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2633d5f5d0fad269e968586295a8587308314be1/src%2Flibrustdoc%2Fpasses%2Fstripper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2633d5f5d0fad269e968586295a8587308314be1/src%2Flibrustdoc%2Fpasses%2Fstripper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstripper.rs?ref=2633d5f5d0fad269e968586295a8587308314be1", "patch": "@@ -243,12 +243,25 @@ impl<'a> DocFolder for ImplStripper<'a, '_> {\n /// This stripper discards all private import statements (`use`, `extern crate`)\n pub(crate) struct ImportStripper<'tcx> {\n     pub(crate) tcx: TyCtxt<'tcx>,\n+    pub(crate) is_json_output: bool,\n+}\n+\n+impl<'tcx> ImportStripper<'tcx> {\n+    fn import_should_be_hidden(&self, i: &Item, imp: &clean::Import) -> bool {\n+        if self.is_json_output {\n+            // FIXME: This should be handled the same way as for HTML output.\n+            imp.imported_item_is_doc_hidden(self.tcx)\n+        } else {\n+            i.attrs.lists(sym::doc).has_word(sym::hidden)\n+        }\n+    }\n }\n \n impl<'tcx> DocFolder for ImportStripper<'tcx> {\n     fn fold_item(&mut self, i: Item) -> Option<Item> {\n         match *i.kind {\n-            clean::ImportItem(imp) if imp.imported_item_is_doc_hidden(self.tcx) => None,\n+            clean::ImportItem(imp) if self.import_should_be_hidden(&i, &imp) => None,\n+            clean::ImportItem(_) if i.attrs.lists(sym::doc).has_word(sym::hidden) => None,\n             clean::ExternCrateItem { .. } | clean::ImportItem(..)\n                 if i.visibility(self.tcx) != Some(Visibility::Public) =>\n             {"}]}