{"sha": "79fa6ce7a140efb47c67567f80e59a4f19b452a6", "node_id": "C_kwDOAAsO6NoAKDc5ZmE2Y2U3YTE0MGVmYjQ3YzY3NTY3ZjgwZTU5YTRmMTliNDUyYTY", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-09-10T10:55:02Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-05-11T14:23:31Z"}, "message": "Inline AllocFnFactory kind field", "tree": {"sha": "50e68d84f0b9291be2895bc8a1e9e5ee0c41fe98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50e68d84f0b9291be2895bc8a1e9e5ee0c41fe98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79fa6ce7a140efb47c67567f80e59a4f19b452a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79fa6ce7a140efb47c67567f80e59a4f19b452a6", "html_url": "https://github.com/rust-lang/rust/commit/79fa6ce7a140efb47c67567f80e59a4f19b452a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79fa6ce7a140efb47c67567f80e59a4f19b452a6/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8d8ffa2eba53928662dc57bc3a6c5608beb26f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8d8ffa2eba53928662dc57bc3a6c5608beb26f1", "html_url": "https://github.com/rust-lang/rust/commit/f8d8ffa2eba53928662dc57bc3a6c5608beb26f1"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "1dd6a700e65811147f9f9b6719021ba87e468db7", "filename": "compiler/rustc_builtin_macros/src/global_allocator.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/79fa6ce7a140efb47c67567f80e59a4f19b452a6/compiler%2Frustc_builtin_macros%2Fsrc%2Fglobal_allocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79fa6ce7a140efb47c67567f80e59a4f19b452a6/compiler%2Frustc_builtin_macros%2Fsrc%2Fglobal_allocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fglobal_allocator.rs?ref=79fa6ce7a140efb47c67567f80e59a4f19b452a6", "patch": "@@ -40,8 +40,7 @@ pub fn expand(\n \n     // Generate a bunch of new items using the AllocFnFactory\n     let span = ecx.with_def_site_ctxt(item.span);\n-    let f =\n-        AllocFnFactory { span, ty_span, kind: AllocatorKind::Global, global: item.ident, cx: ecx };\n+    let f = AllocFnFactory { span, ty_span, global: item.ident, cx: ecx };\n \n     // Generate item statements for the allocator methods.\n     let stmts = ALLOCATOR_METHODS.iter().map(|method| f.allocator_fn(method)).collect();\n@@ -63,7 +62,6 @@ pub fn expand(\n struct AllocFnFactory<'a, 'b> {\n     span: Span,\n     ty_span: Span,\n-    kind: AllocatorKind,\n     global: Ident,\n     cx: &'b ExtCtxt<'a>,\n }\n@@ -92,7 +90,7 @@ impl AllocFnFactory<'_, '_> {\n         }));\n         let item = self.cx.item(\n             self.span,\n-            Ident::from_str_and_span(&self.kind.fn_name(method.name), self.span),\n+            Ident::from_str_and_span(&AllocatorKind::Global.fn_name(method.name), self.span),\n             self.attrs(),\n             kind,\n         );"}]}