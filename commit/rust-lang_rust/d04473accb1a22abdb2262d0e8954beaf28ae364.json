{"sha": "d04473accb1a22abdb2262d0e8954beaf28ae364", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwNDQ3M2FjY2IxYTIyYWJkYjIyNjJkMGU4OTU0YmVhZjI4YWUzNjQ=", "commit": {"author": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2019-06-19T06:25:10Z"}, "committer": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2019-06-19T10:37:38Z"}, "message": "fix: specialization(with blindly parsing)\n\nChange-Id: Ic5d2767e8781568d76d4d0013cd6081e95ae8a95", "tree": {"sha": "4b4783e389168a39f9a930a30bfb29e1f883d237", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b4783e389168a39f9a930a30bfb29e1f883d237"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d04473accb1a22abdb2262d0e8954beaf28ae364", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d04473accb1a22abdb2262d0e8954beaf28ae364", "html_url": "https://github.com/rust-lang/rust/commit/d04473accb1a22abdb2262d0e8954beaf28ae364", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d04473accb1a22abdb2262d0e8954beaf28ae364/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7da575a98799aa2fffffe504d7fa4a314819c7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7da575a98799aa2fffffe504d7fa4a314819c7c", "html_url": "https://github.com/rust-lang/rust/commit/f7da575a98799aa2fffffe504d7fa4a314819c7c"}], "stats": {"total": 150, "additions": 149, "deletions": 1}, "files": [{"sha": "424d0476d28cfdf27332d096a6a79162a8b88152", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/d04473accb1a22abdb2262d0e8954beaf28ae364/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d04473accb1a22abdb2262d0e8954beaf28ae364/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=d04473accb1a22abdb2262d0e8954beaf28ae364", "patch": "@@ -103,7 +103,21 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n         p.bump_remap(T![auto]);\n         has_mods = true;\n     }\n-    if p.at(IDENT) && p.at_contextual_kw(\"default\") && p.nth(1) == T![impl] {\n+\n+    if p.at(IDENT)\n+        && p.at_contextual_kw(\"default\")\n+        && (match p.nth(1) {\n+            T![impl] => true,\n+            T![fn] | T![type] => {\n+                if let ItemFlavor::Mod = flavor {\n+                    true\n+                } else {\n+                    false\n+                }\n+            }\n+            _ => false,\n+        })\n+    {\n         p.bump_remap(T![default]);\n         has_mods = true;\n     }\n@@ -163,12 +177,25 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n         // test default_impl\n         // default impl Foo {}\n \n+        // test_err default_fn_type\n+        // trait T {\n+        //     default type T = Bar;\n+        //     default fn foo() {}\n+        // }\n+\n+        // test default_fn_type\n+        // impl T for Foo {\n+        //     default type T = Bar;\n+        //     default fn foo() {}\n+        // }\n+\n         // test unsafe_default_impl\n         // unsafe default impl Foo {}\n         T![impl] => {\n             traits::impl_block(p);\n             m.complete(p, IMPL_BLOCK);\n         }\n+\n         // test existential_type\n         // existential type Foo: Fn() -> usize;\n         T![type] => {"}, {"sha": "15ba8f4a85e4453298c3a60cb35535f106b572a1", "filename": "crates/ra_syntax/tests/data/parser/inline/err/0014_default_fn_type.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d04473accb1a22abdb2262d0e8954beaf28ae364/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d04473accb1a22abdb2262d0e8954beaf28ae364/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rs?ref=d04473accb1a22abdb2262d0e8954beaf28ae364", "patch": "@@ -0,0 +1,4 @@\n+trait T {\n+    default type T = Bar;\n+    default fn foo() {}\n+}"}, {"sha": "7da4e243ff5c18a8fbf1b1c2a741584bc259d360", "filename": "crates/ra_syntax/tests/data/parser/inline/err/0014_default_fn_type.txt", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/d04473accb1a22abdb2262d0e8954beaf28ae364/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d04473accb1a22abdb2262d0e8954beaf28ae364/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.txt?ref=d04473accb1a22abdb2262d0e8954beaf28ae364", "patch": "@@ -0,0 +1,58 @@\n+SOURCE_FILE@[0; 62)\n+  TRAIT_DEF@[0; 61)\n+    TRAIT_KW@[0; 5) \"trait\"\n+    WHITESPACE@[5; 6) \" \"\n+    NAME@[6; 7)\n+      IDENT@[6; 7) \"T\"\n+    WHITESPACE@[7; 8) \" \"\n+    ITEM_LIST@[8; 61)\n+      L_CURLY@[8; 9) \"{\"\n+      WHITESPACE@[9; 14) \"\\n    \"\n+      MACRO_CALL@[14; 21)\n+        PATH@[14; 21)\n+          PATH_SEGMENT@[14; 21)\n+            NAME_REF@[14; 21)\n+              IDENT@[14; 21) \"default\"\n+      WHITESPACE@[21; 22) \" \"\n+      TYPE_ALIAS_DEF@[22; 35)\n+        TYPE_KW@[22; 26) \"type\"\n+        WHITESPACE@[26; 27) \" \"\n+        NAME@[27; 28)\n+          IDENT@[27; 28) \"T\"\n+        WHITESPACE@[28; 29) \" \"\n+        EQ@[29; 30) \"=\"\n+        WHITESPACE@[30; 31) \" \"\n+        PATH_TYPE@[31; 34)\n+          PATH@[31; 34)\n+            PATH_SEGMENT@[31; 34)\n+              NAME_REF@[31; 34)\n+                IDENT@[31; 34) \"Bar\"\n+        SEMI@[34; 35) \";\"\n+      WHITESPACE@[35; 40) \"\\n    \"\n+      MACRO_CALL@[40; 47)\n+        PATH@[40; 47)\n+          PATH_SEGMENT@[40; 47)\n+            NAME_REF@[40; 47)\n+              IDENT@[40; 47) \"default\"\n+      WHITESPACE@[47; 48) \" \"\n+      FN_DEF@[48; 59)\n+        FN_KW@[48; 50) \"fn\"\n+        WHITESPACE@[50; 51) \" \"\n+        NAME@[51; 54)\n+          IDENT@[51; 54) \"foo\"\n+        PARAM_LIST@[54; 56)\n+          L_PAREN@[54; 55) \"(\"\n+          R_PAREN@[55; 56) \")\"\n+        WHITESPACE@[56; 57) \" \"\n+        BLOCK@[57; 59)\n+          L_CURLY@[57; 58) \"{\"\n+          R_CURLY@[58; 59) \"}\"\n+      WHITESPACE@[59; 60) \"\\n\"\n+      R_CURLY@[60; 61) \"}\"\n+  WHITESPACE@[61; 62) \"\\n\"\n+error 21: expected EXCL\n+error 21: expected `{`, `[`, `(`\n+error 21: expected SEMI\n+error 47: expected EXCL\n+error 47: expected `{`, `[`, `(`\n+error 47: expected SEMI"}, {"sha": "8f5d6111399c92e5372f418883b2abc907340136", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0132_default_fn_type.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d04473accb1a22abdb2262d0e8954beaf28ae364/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d04473accb1a22abdb2262d0e8954beaf28ae364/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rs?ref=d04473accb1a22abdb2262d0e8954beaf28ae364", "patch": "@@ -0,0 +1,4 @@\n+impl T for Foo {\n+    default type T = Bar;\n+    default fn foo() {}\n+}"}, {"sha": "384b203d38b13ecc799bf6a26fa550b7e04258fc", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0132_default_fn_type.txt", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/d04473accb1a22abdb2262d0e8954beaf28ae364/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0132_default_fn_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d04473accb1a22abdb2262d0e8954beaf28ae364/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0132_default_fn_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0132_default_fn_type.txt?ref=d04473accb1a22abdb2262d0e8954beaf28ae364", "patch": "@@ -0,0 +1,55 @@\n+SOURCE_FILE@[0; 69)\n+  IMPL_BLOCK@[0; 68)\n+    IMPL_KW@[0; 4) \"impl\"\n+    WHITESPACE@[4; 5) \" \"\n+    PATH_TYPE@[5; 6)\n+      PATH@[5; 6)\n+        PATH_SEGMENT@[5; 6)\n+          NAME_REF@[5; 6)\n+            IDENT@[5; 6) \"T\"\n+    WHITESPACE@[6; 7) \" \"\n+    FOR_KW@[7; 10) \"for\"\n+    WHITESPACE@[10; 11) \" \"\n+    PATH_TYPE@[11; 14)\n+      PATH@[11; 14)\n+        PATH_SEGMENT@[11; 14)\n+          NAME_REF@[11; 14)\n+            IDENT@[11; 14) \"Foo\"\n+    WHITESPACE@[14; 15) \" \"\n+    ITEM_LIST@[15; 68)\n+      L_CURLY@[15; 16) \"{\"\n+      WHITESPACE@[16; 21) \"\\n    \"\n+      TYPE_ALIAS_DEF@[21; 42)\n+        DEFAULT_KW@[21; 28) \"default\"\n+        WHITESPACE@[28; 29) \" \"\n+        TYPE_KW@[29; 33) \"type\"\n+        WHITESPACE@[33; 34) \" \"\n+        NAME@[34; 35)\n+          IDENT@[34; 35) \"T\"\n+        WHITESPACE@[35; 36) \" \"\n+        EQ@[36; 37) \"=\"\n+        WHITESPACE@[37; 38) \" \"\n+        PATH_TYPE@[38; 41)\n+          PATH@[38; 41)\n+            PATH_SEGMENT@[38; 41)\n+              NAME_REF@[38; 41)\n+                IDENT@[38; 41) \"Bar\"\n+        SEMI@[41; 42) \";\"\n+      WHITESPACE@[42; 47) \"\\n    \"\n+      FN_DEF@[47; 66)\n+        DEFAULT_KW@[47; 54) \"default\"\n+        WHITESPACE@[54; 55) \" \"\n+        FN_KW@[55; 57) \"fn\"\n+        WHITESPACE@[57; 58) \" \"\n+        NAME@[58; 61)\n+          IDENT@[58; 61) \"foo\"\n+        PARAM_LIST@[61; 63)\n+          L_PAREN@[61; 62) \"(\"\n+          R_PAREN@[62; 63) \")\"\n+        WHITESPACE@[63; 64) \" \"\n+        BLOCK@[64; 66)\n+          L_CURLY@[64; 65) \"{\"\n+          R_CURLY@[65; 66) \"}\"\n+      WHITESPACE@[66; 67) \"\\n\"\n+      R_CURLY@[67; 68) \"}\"\n+  WHITESPACE@[68; 69) \"\\n\""}]}