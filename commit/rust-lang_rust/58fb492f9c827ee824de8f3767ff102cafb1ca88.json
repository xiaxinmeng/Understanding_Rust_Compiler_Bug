{"sha": "58fb492f9c827ee824de8f3767ff102cafb1ca88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZmI0OTJmOWM4MjdlZTgyNGRlOGYzNzY3ZmYxMDJjYWZiMWNhODg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-15T01:26:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-15T01:26:30Z"}, "message": "auto merge of #12893 : alexcrichton/rust/cfg-not, r=luqmana\n\nThe two commits have the details of the two fixes", "tree": {"sha": "df00c4ee0fd3d5b0c6982c47f79f475cb26ca128", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df00c4ee0fd3d5b0c6982c47f79f475cb26ca128"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58fb492f9c827ee824de8f3767ff102cafb1ca88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58fb492f9c827ee824de8f3767ff102cafb1ca88", "html_url": "https://github.com/rust-lang/rust/commit/58fb492f9c827ee824de8f3767ff102cafb1ca88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58fb492f9c827ee824de8f3767ff102cafb1ca88/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76e0e26603d723038dae1ad06161cade47e53a55", "url": "https://api.github.com/repos/rust-lang/rust/commits/76e0e26603d723038dae1ad06161cade47e53a55", "html_url": "https://github.com/rust-lang/rust/commit/76e0e26603d723038dae1ad06161cade47e53a55"}, {"sha": "8e5ca4b793e928b5a7545f6d1010b7663a9d30ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e5ca4b793e928b5a7545f6d1010b7663a9d30ae", "html_url": "https://github.com/rust-lang/rust/commit/8e5ca4b793e928b5a7545f6d1010b7663a9d30ae"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "ac34277dcbdc16e35fe57e0b9dd3c7d78879bef9", "filename": "src/libstd/rt/libunwind.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/58fb492f9c827ee824de8f3767ff102cafb1ca88/src%2Flibstd%2Frt%2Flibunwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58fb492f9c827ee824de8f3767ff102cafb1ca88/src%2Flibstd%2Frt%2Flibunwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Flibunwind.rs?ref=58fb492f9c827ee824de8f3767ff102cafb1ca88", "patch": "@@ -101,16 +101,26 @@ extern \"C\" {\n     pub fn _Unwind_Backtrace(trace: _Unwind_Trace_Fn,\n                              trace_argument: *libc::c_void)\n                 -> _Unwind_Reason_Code;\n-    #[cfg(not(target_os = \"android\"))]\n+    #[cfg(stage0, not(target_os = \"android\"))]\n     pub fn _Unwind_GetIP(ctx: *_Unwind_Context) -> libc::uintptr_t;\n-    #[cfg(not(target_os = \"android\"))]\n+    #[cfg(stage0, not(target_os = \"android\"))]\n+    pub fn _Unwind_FindEnclosingFunction(pc: *libc::c_void) -> *libc::c_void;\n+\n+    #[cfg(not(stage0),\n+          not(target_os = \"android\"),\n+          not(target_os = \"linux\", target_arch = \"arm\"))]\n+    pub fn _Unwind_GetIP(ctx: *_Unwind_Context) -> libc::uintptr_t;\n+    #[cfg(not(stage0),\n+          not(target_os = \"android\"),\n+          not(target_os = \"linux\", target_arch = \"arm\"))]\n     pub fn _Unwind_FindEnclosingFunction(pc: *libc::c_void) -> *libc::c_void;\n }\n \n // On android, the function _Unwind_GetIP is a macro, and this is the expansion\n // of the macro. This is all copy/pasted directly from the header file with the\n // definition of _Unwind_GetIP.\n #[cfg(target_os = \"android\")]\n+#[cfg(target_os = \"linux\", target_os = \"arm\")]\n pub unsafe fn _Unwind_GetIP(ctx: *_Unwind_Context) -> libc::uintptr_t {\n     #[repr(C)]\n     enum _Unwind_VRS_Result {\n@@ -154,6 +164,7 @@ pub unsafe fn _Unwind_GetIP(ctx: *_Unwind_Context) -> libc::uintptr_t {\n \n // This function also doesn't exist on android, so make it a no-op\n #[cfg(target_os = \"android\")]\n+#[cfg(target_os = \"linux\", target_os = \"arm\")]\n pub unsafe fn _Unwind_FindEnclosingFunction(pc: *libc::c_void) -> *libc::c_void{\n     pc\n }"}, {"sha": "7ff9a73f29d9b4e412ed8fcbcaaf63f670aa93cc", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/58fb492f9c827ee824de8f3767ff102cafb1ca88/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58fb492f9c827ee824de8f3767ff102cafb1ca88/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=58fb492f9c827ee824de8f3767ff102cafb1ca88", "patch": "@@ -317,9 +317,9 @@ pub fn test_cfg<AM: AttrMetaMethods, It: Iterator<AM>>\n                                 debug!(\"not!\");\n                                 // inside #[cfg(not(...))], so these need to all\n                                 // not match.\n-                                not_cfgs.iter().all(|mi| {\n+                                !not_cfgs.iter().all(|mi| {\n                                     debug!(\"cfg(not({}[...]))\", mi.name());\n-                                    !contains(cfg, *mi)\n+                                    contains(cfg, *mi)\n                                 })\n                             }\n                             _ => contains(cfg, *cfg_mi)"}, {"sha": "f1c91dbaf3549cc97d73c0b1a0d2a6060abf3cd9", "filename": "src/test/run-pass/cfgs-on-items.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/58fb492f9c827ee824de8f3767ff102cafb1ca88/src%2Ftest%2Frun-pass%2Fcfgs-on-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58fb492f9c827ee824de8f3767ff102cafb1ca88/src%2Ftest%2Frun-pass%2Fcfgs-on-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfgs-on-items.rs?ref=58fb492f9c827ee824de8f3767ff102cafb1ca88", "patch": "@@ -16,16 +16,24 @@\n fn foo1() -> int { 1 }\n \n // !fooA AND !bar\n-#[cfg(not(fooA, bar))]\n+#[cfg(not(fooA), not(bar))]\n fn foo2() -> int { 2 }\n \n // fooC OR (fooB AND !bar)\n #[cfg(fooC)]\n #[cfg(fooB, not(bar))]\n fn foo2() -> int { 3 }\n \n+// fooA AND bar\n+#[cfg(fooA, bar)]\n+fn foo3() -> int { 2 }\n+\n+// !(fooA AND bar)\n+#[cfg(not(fooA, bar))]\n+fn foo3() -> int { 3 }\n \n pub fn main() {\n     assert_eq!(1, foo1());\n     assert_eq!(3, foo2());\n+    assert_eq!(3, foo3());\n }"}]}