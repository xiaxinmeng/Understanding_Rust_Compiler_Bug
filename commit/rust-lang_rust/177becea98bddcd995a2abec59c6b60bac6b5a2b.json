{"sha": "177becea98bddcd995a2abec59c6b60bac6b5a2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3N2JlY2VhOThiZGRjZDk5NWEyYWJlYzU5YzZiNjBiYWM2YjVhMmI=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-04-16T13:13:57Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-04-16T13:13:57Z"}, "message": "Add proc-macro cli command for rust-analyzer", "tree": {"sha": "64b7ecca11b93b71aab3e2fc0648d70aa012ee8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64b7ecca11b93b71aab3e2fc0648d70aa012ee8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/177becea98bddcd995a2abec59c6b60bac6b5a2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/177becea98bddcd995a2abec59c6b60bac6b5a2b", "html_url": "https://github.com/rust-lang/rust/commit/177becea98bddcd995a2abec59c6b60bac6b5a2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/177becea98bddcd995a2abec59c6b60bac6b5a2b/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca7dc69a8e87883c6a0c9df88c936fa2a4658c7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca7dc69a8e87883c6a0c9df88c936fa2a4658c7b", "html_url": "https://github.com/rust-lang/rust/commit/ca7dc69a8e87883c6a0c9df88c936fa2a4658c7b"}], "stats": {"total": 73, "additions": 47, "deletions": 26}, "files": [{"sha": "9068064f7ac815eda516e35f8f62cab5077c610c", "filename": ".github/workflows/ci.yaml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/177becea98bddcd995a2abec59c6b60bac6b5a2b/.github%2Fworkflows%2Fci.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/177becea98bddcd995a2abec59c6b60bac6b5a2b/.github%2Fworkflows%2Fci.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yaml?ref=177becea98bddcd995a2abec59c6b60bac6b5a2b", "patch": "@@ -85,9 +85,9 @@ jobs:\n     - name: Compile\n       run: cargo test --no-run\n \n-    # We have to build ra_proc_macro_srv first for running related heavy tests\n-    - name: Build ra_proc_macro_srv\n-      run: cargo build -p ra_proc_macro_srv\n+    # We have to build rust-analyzer first for running related heavy tests\n+    - name: Build rust-analyzer\n+      run: cargo build -p rust-analyzer\n \n     - name: Test\n       run: cargo test"}, {"sha": "8e204d39ff28032b50bb6181ae24abb16c392728", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/177becea98bddcd995a2abec59c6b60bac6b5a2b/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/177becea98bddcd995a2abec59c6b60bac6b5a2b/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=177becea98bddcd995a2abec59c6b60bac6b5a2b", "patch": "@@ -1341,6 +1341,7 @@ dependencies = [\n  \"ra_hir_def\",\n  \"ra_hir_ty\",\n  \"ra_ide\",\n+ \"ra_proc_macro_srv\",\n  \"ra_prof\",\n  \"ra_project_model\",\n  \"ra_syntax\","}, {"sha": "14a675db224406fe7166a9caca4a7247beef2343", "filename": "crates/ra_proc_macro/src/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Fra_proc_macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Fra_proc_macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro%2Fsrc%2Flib.rs?ref=177becea98bddcd995a2abec59c6b60bac6b5a2b", "patch": "@@ -56,8 +56,11 @@ pub struct ProcMacroClient {\n }\n \n impl ProcMacroClient {\n-    pub fn extern_process(process_path: &Path) -> Result<ProcMacroClient, std::io::Error> {\n-        let (thread, process) = ProcMacroProcessSrv::run(process_path)?;\n+    pub fn extern_process<T: AsRef<str>>(\n+        process_path: &Path,\n+        args: &[T],\n+    ) -> Result<ProcMacroClient, std::io::Error> {\n+        let (thread, process) = ProcMacroProcessSrv::run(process_path, args)?;\n         Ok(ProcMacroClient {\n             kind: ProcMacroClientKind::Process { process: Arc::new(process), thread },\n         })"}, {"sha": "b5e8493ac827351a6b250ff94ac1f9935b1e5812", "filename": "crates/ra_proc_macro/src/process.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs?ref=177becea98bddcd995a2abec59c6b60bac6b5a2b", "patch": "@@ -44,8 +44,9 @@ impl Drop for Process {\n }\n \n impl Process {\n-    fn run(process_path: &Path) -> Result<Process, io::Error> {\n+    fn run<T: AsRef<str>>(process_path: &Path, args: &[T]) -> Result<Process, io::Error> {\n         let child = Command::new(process_path.clone())\n+            .args(args.iter().map(|it| it.as_ref()))\n             .stdin(Stdio::piped())\n             .stdout(Stdio::piped())\n             .stderr(Stdio::null())\n@@ -74,10 +75,11 @@ impl Process {\n }\n \n impl ProcMacroProcessSrv {\n-    pub fn run(\n+    pub fn run<T: AsRef<str>>(\n         process_path: &Path,\n+        args: &[T],\n     ) -> Result<(ProcMacroProcessThread, ProcMacroProcessSrv), io::Error> {\n-        let process = Process::run(process_path)?;\n+        let process = Process::run(process_path, args)?;\n \n         let (task_tx, task_rx) = bounded(0);\n         let handle = jod_thread::spawn(move || {"}, {"sha": "c771f2b389115deb6078b4116eecec15bb6852b5", "filename": "crates/ra_proc_macro_srv/src/cli.rs", "status": "renamed", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Fra_proc_macro_srv%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Fra_proc_macro_srv%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Fcli.rs?ref=177becea98bddcd995a2abec59c6b60bac6b5a2b", "patch": "@@ -1,7 +1,7 @@\n //! Driver for proc macro server\n \n+use crate::{expand_task, list_macros};\n use ra_proc_macro::msg::{self, Message};\n-use ra_proc_macro_srv::{expand_task, list_macros};\n \n use std::io;\n \n@@ -24,7 +24,8 @@ fn write_response(res: Result<msg::Response, String>) -> Result<(), io::Error> {\n     let mut stdout = stdout.lock();\n     msg.write(&mut stdout)\n }\n-fn main() {\n+\n+pub fn run() {\n     loop {\n         let req = match read_request() {\n             Err(err) => {", "previous_filename": "crates/ra_proc_macro_srv/src/main.rs"}, {"sha": "c62b0ed893c03db3610ce2f969a2f430cf3a095d", "filename": "crates/ra_proc_macro_srv/src/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Fra_proc_macro_srv%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Fra_proc_macro_srv%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Flib.rs?ref=177becea98bddcd995a2abec59c6b60bac6b5a2b", "patch": "@@ -22,7 +22,7 @@ mod dylib;\n use proc_macro::bridge::client::TokenStream;\n use ra_proc_macro::{ExpansionResult, ExpansionTask, ListMacrosResult, ListMacrosTask};\n \n-pub fn expand_task(task: &ExpansionTask) -> Result<ExpansionResult, String> {\n+pub(crate) fn expand_task(task: &ExpansionTask) -> Result<ExpansionResult, String> {\n     let expander = dylib::Expander::new(&task.lib)\n         .expect(&format!(\"Cannot expand with provided libraries: ${:?}\", &task.lib));\n \n@@ -39,7 +39,7 @@ pub fn expand_task(task: &ExpansionTask) -> Result<ExpansionResult, String> {\n     }\n }\n \n-pub fn list_macros(task: &ListMacrosTask) -> Result<ListMacrosResult, String> {\n+pub(crate) fn list_macros(task: &ListMacrosTask) -> Result<ListMacrosResult, String> {\n     let expander = dylib::Expander::new(&task.lib)\n         .expect(&format!(\"Cannot expand with provided libraries: ${:?}\", &task.lib));\n \n@@ -53,5 +53,7 @@ pub fn list_macros(task: &ListMacrosTask) -> Result<ListMacrosResult, String> {\n     }\n }\n \n+pub mod cli;\n+\n #[cfg(test)]\n mod tests;"}, {"sha": "cee0248b62c545f55917a151e33fd313db08ca1a", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=177becea98bddcd995a2abec59c6b60bac6b5a2b", "patch": "@@ -46,7 +46,7 @@ ra_db = { path = \"../ra_db\" }\n hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n hir_def = { path = \"../ra_hir_def\", package = \"ra_hir_def\" }\n hir_ty = { path = \"../ra_hir_ty\", package = \"ra_hir_ty\" }\n-\n+ra_proc_macro_srv = { path = \"../ra_proc_macro_srv\" }\n \n [target.'cfg(windows)'.dependencies]\n winapi = \"0.3.8\""}, {"sha": "5e19253a65cc69b7add9d7e3dc9b26e05fdf8d95", "filename": "crates/rust-analyzer/src/bin/args.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fargs.rs?ref=177becea98bddcd995a2abec59c6b60bac6b5a2b", "patch": "@@ -45,6 +45,7 @@ pub(crate) enum Command {\n         /// this would include the parser test files.\n         all: bool,\n     },\n+    ProcMacro,\n     RunServer,\n     Version,\n }\n@@ -264,6 +265,7 @@ ARGS:\n \n                 Command::Diagnostics { path, load_output_dirs, with_proc_macro, all }\n             }\n+            \"proc-macro\" => Command::ProcMacro,\n             _ => {\n                 eprintln!(\n                     \"\\"}, {"sha": "28b67cfe2aa47125ad947a9e286c73f106c8bcac", "filename": "crates/rust-analyzer/src/bin/main.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs?ref=177becea98bddcd995a2abec59c6b60bac6b5a2b", "patch": "@@ -51,6 +51,7 @@ fn main() -> Result<()> {\n             cli::diagnostics(path.as_ref(), load_output_dirs, with_proc_macro, all)?\n         }\n \n+        args::Command::ProcMacro => run_proc_macro_sv()?,\n         args::Command::RunServer => run_server()?,\n         args::Command::Version => println!(\"rust-analyzer {}\", env!(\"REV\")),\n     }\n@@ -64,6 +65,11 @@ fn setup_logging() -> Result<()> {\n     Ok(())\n }\n \n+fn run_proc_macro_sv() -> Result<()> {\n+    ra_proc_macro_srv::cli::run();\n+    Ok(())\n+}\n+\n fn run_server() -> Result<()> {\n     log::info!(\"lifecycle: server started\");\n "}, {"sha": "32a9ee339ad15dfbc20b3834c7e724ac0b71d30b", "filename": "crates/rust-analyzer/src/cli/load_cargo.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs?ref=177becea98bddcd995a2abec59c6b60bac6b5a2b", "patch": "@@ -73,7 +73,10 @@ pub(crate) fn load_cargo(\n     let proc_macro_client = if !with_proc_macro {\n         ProcMacroClient::dummy()\n     } else {\n-        ProcMacroClient::extern_process(Path::new(\"ra_proc_macro_srv\")).unwrap()\n+        let mut path = std::env::current_exe()?;\n+        path.pop();\n+        path.push(\"rust-analyzer\");\n+        ProcMacroClient::extern_process(&path, &[\"proc-macro\"]).unwrap()\n     };\n     let host = load(&source_roots, ws, &mut vfs, receiver, extern_dirs, &proc_macro_client);\n     Ok((host, source_roots))"}, {"sha": "2b45f131031574a3aff7c1fd38fe00b0696ae0f0", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=177becea98bddcd995a2abec59c6b60bac6b5a2b", "patch": "@@ -20,7 +20,7 @@ pub struct Config {\n     pub with_sysroot: bool,\n     pub publish_diagnostics: bool,\n     pub lru_capacity: Option<usize>,\n-    pub proc_macro_srv: Option<String>,\n+    pub proc_macro_srv: Option<(String, Vec<String>)>,\n     pub files: FilesConfig,\n     pub notifications: NotificationsConfig,\n \n@@ -134,7 +134,11 @@ impl Config {\n \n         match get::<bool>(value, \"/procMacro/enabled\") {\n             Some(true) => {\n-                set(value, \"/procMacro/serverPath\", &mut self.proc_macro_srv);\n+                if let Ok(mut path) = std::env::current_exe() {\n+                    path.pop();\n+                    path.push(\"rust-analyzer\");\n+                    self.proc_macro_srv = Some((path.to_string_lossy().to_string(), vec![\"proc-macro\".to_string()]));\n+                }\n             }\n             _ => self.proc_macro_srv = None,\n         }"}, {"sha": "f2ad453fafe40ada08c71a450faaca1b1f51b92a", "filename": "crates/rust-analyzer/src/world.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Frust-analyzer%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Frust-analyzer%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fworld.rs?ref=177becea98bddcd995a2abec59c6b60bac6b5a2b", "patch": "@@ -148,9 +148,9 @@ impl WorldState {\n \n         let proc_macro_client = match &config.proc_macro_srv {\n             None => ProcMacroClient::dummy(),\n-            Some(srv) => {\n-                let path = Path::new(&srv);\n-                match ProcMacroClient::extern_process(path) {\n+            Some((path, args)) => {\n+                let path = std::path::Path::new(path);\n+                match ProcMacroClient::extern_process(path, args) {\n                     Ok(it) => it,\n                     Err(err) => {\n                         log::error!("}, {"sha": "1dd2676b6e960428c77050579f71284ff98fe1b1", "filename": "crates/rust-analyzer/tests/heavy_tests/main.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/177becea98bddcd995a2abec59c6b60bac6b5a2b/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs?ref=177becea98bddcd995a2abec59c6b60bac6b5a2b", "patch": "@@ -692,13 +692,15 @@ pub fn foo(_input: TokenStream) -> TokenStream {\n \"###,\n     )\n     .with_config(|config| {\n+        // FIXME: Use env!(\"CARGO_BIN_EXE_ra-analyzer\") instead after\n+        // https://github.com/rust-lang/cargo/pull/7697 landed\n         let macro_srv_path = std::path::Path::new(std::env!(\"CARGO_MANIFEST_DIR\"))\n-            .join(\"../../target/debug/ra_proc_macro_srv\")\n+            .join(\"../../target/debug/rust-analyzer\")\n             .to_string_lossy()\n             .to_string();\n \n         config.cargo.load_out_dirs_from_check = true;\n-        config.proc_macro_srv = Some(macro_srv_path)\n+        config.proc_macro_srv = Some((macro_srv_path, vec![\"proc-macro\".to_string()]));\n     })\n     .root(\"foo\")\n     .root(\"bar\")"}, {"sha": "5ce59e54a96975208bc335fed03738de912e80d4", "filename": "editors/code/package.json", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/177becea98bddcd995a2abec59c6b60bac6b5a2b/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/177becea98bddcd995a2abec59c6b60bac6b5a2b/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=177becea98bddcd995a2abec59c6b60bac6b5a2b", "patch": "@@ -393,11 +393,6 @@\n                     \"description\": \"Enable Proc macro support, cargo.loadOutDirsFromCheck must be enabled.\",\n                     \"type\": \"boolean\",\n                     \"default\": false\n-                },\n-                \"rust-analyzer.procMacro.serverPath\": {\n-                    \"description\": \"Proc macro server path\",\n-                    \"type\": \"string\",\n-                    \"default\": \"ra_proc_macro_srv\"\n                 }\n             }\n         },"}]}