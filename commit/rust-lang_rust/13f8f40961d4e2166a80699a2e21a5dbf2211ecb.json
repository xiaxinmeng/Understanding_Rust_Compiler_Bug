{"sha": "13f8f40961d4e2166a80699a2e21a5dbf2211ecb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzZjhmNDA5NjFkNGUyMTY2YTgwNjk5YTJlMjFhNWRiZjIyMTFlY2I=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-04-21T19:35:39Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-06-14T13:51:49Z"}, "message": "specialize zip: TrustedRandomAccess for Enumerate", "tree": {"sha": "79923c08a4f66c0c8ec27737faa25ff42f16962b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79923c08a4f66c0c8ec27737faa25ff42f16962b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13f8f40961d4e2166a80699a2e21a5dbf2211ecb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13f8f40961d4e2166a80699a2e21a5dbf2211ecb", "html_url": "https://github.com/rust-lang/rust/commit/13f8f40961d4e2166a80699a2e21a5dbf2211ecb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13f8f40961d4e2166a80699a2e21a5dbf2211ecb/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "515c4d3c1e6c38ff2d8bd3b3b3e5bd8b6b4c2322", "url": "https://api.github.com/repos/rust-lang/rust/commits/515c4d3c1e6c38ff2d8bd3b3b3e5bd8b6b4c2322", "html_url": "https://github.com/rust-lang/rust/commit/515c4d3c1e6c38ff2d8bd3b3b3e5bd8b6b4c2322"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "1a2d8e57e8684254188cf906c032f3cf857e2cdc", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/13f8f40961d4e2166a80699a2e21a5dbf2211ecb/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13f8f40961d4e2166a80699a2e21a5dbf2211ecb/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=13f8f40961d4e2166a80699a2e21a5dbf2211ecb", "patch": "@@ -1092,6 +1092,15 @@ impl<I> DoubleEndedIterator for Enumerate<I> where\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<I> ExactSizeIterator for Enumerate<I> where I: ExactSizeIterator {}\n \n+#[doc(hidden)]\n+unsafe impl<I> TrustedRandomAccess for Enumerate<I>\n+    where I: TrustedRandomAccess\n+{\n+    unsafe fn get_unchecked(&mut self, i: usize) -> (usize, I::Item) {\n+        (self.count + i, self.iter.get_unchecked(i))\n+    }\n+}\n+\n /// An iterator with a `peek()` that returns an optional reference to the next\n /// element.\n ///"}]}