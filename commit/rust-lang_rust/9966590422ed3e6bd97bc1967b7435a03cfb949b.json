{"sha": "9966590422ed3e6bd97bc1967b7435a03cfb949b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5NjY1OTA0MjJlZDNlNmJkOTdiYzE5NjdiNzQzNWEwM2NmYjk0OWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-22T11:06:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-22T11:06:16Z"}, "message": "Auto merge of #56862 - arielb1:fundamentally-clean, r=nikomatsakis\n\nstop treating trait objects from #[fundamental] traits as fundamental\n\nThis is a [breaking-change] to code that exploits this functionality (which should be limited to code using `#![feature(fundamental)]`.\n\nFixes #56503.\n\nr? @nikomatsakis", "tree": {"sha": "1e25c60fe39a5d1a8a1c9823417f379d9052ad51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e25c60fe39a5d1a8a1c9823417f379d9052ad51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9966590422ed3e6bd97bc1967b7435a03cfb949b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9966590422ed3e6bd97bc1967b7435a03cfb949b", "html_url": "https://github.com/rust-lang/rust/commit/9966590422ed3e6bd97bc1967b7435a03cfb949b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9966590422ed3e6bd97bc1967b7435a03cfb949b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9689ada83891f63164bf117af35cc0abc37daaf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9689ada83891f63164bf117af35cc0abc37daaf1", "html_url": "https://github.com/rust-lang/rust/commit/9689ada83891f63164bf117af35cc0abc37daaf1"}, {"sha": "c4fa1d2c4739acf03a0df991d1c28f725c2ba20f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4fa1d2c4739acf03a0df991d1c28f725c2ba20f", "html_url": "https://github.com/rust-lang/rust/commit/c4fa1d2c4739acf03a0df991d1c28f725c2ba20f"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "853b54df2b92ff9f705c9a1474842e75db90692a", "filename": "src/librustc/traits/coherence.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9966590422ed3e6bd97bc1967b7435a03cfb949b/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9966590422ed3e6bd97bc1967b7435a03cfb949b/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fcoherence.rs?ref=9966590422ed3e6bd97bc1967b7435a03cfb949b", "patch": "@@ -397,7 +397,7 @@ fn uncovered_tys<'tcx>(tcx: TyCtxt<'_, '_, '_>, ty: Ty<'tcx>, in_crate: InCrate)\n                        -> Vec<Ty<'tcx>> {\n     if ty_is_local_constructor(ty, in_crate) {\n         vec![]\n-    } else if fundamental_ty(tcx, ty) {\n+    } else if fundamental_ty(ty) {\n         ty.walk_shallow()\n           .flat_map(|t| uncovered_tys(tcx, t, in_crate))\n           .collect()\n@@ -415,14 +415,13 @@ fn is_possibly_remote_type(ty: Ty<'_>, _in_crate: InCrate) -> bool {\n \n fn ty_is_local(tcx: TyCtxt<'_, '_, '_>, ty: Ty<'_>, in_crate: InCrate) -> bool {\n     ty_is_local_constructor(ty, in_crate) ||\n-        fundamental_ty(tcx, ty) && ty.walk_shallow().any(|t| ty_is_local(tcx, t, in_crate))\n+        fundamental_ty(ty) && ty.walk_shallow().any(|t| ty_is_local(tcx, t, in_crate))\n }\n \n-fn fundamental_ty(tcx: TyCtxt<'_, '_, '_>, ty: Ty<'_>) -> bool {\n+fn fundamental_ty(ty: Ty<'_>) -> bool {\n     match ty.sty {\n         ty::Ref(..) => true,\n         ty::Adt(def, _) => def.is_fundamental(),\n-        ty::Dynamic(ref data, ..) => tcx.has_attr(data.principal().def_id(), \"fundamental\"),\n         _ => false\n     }\n }"}, {"sha": "21aaea479631ce2772a3c60534b653efe0a5d84e", "filename": "src/test/ui/coherence/auxiliary/coherence_fundamental_trait_lib.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9966590422ed3e6bd97bc1967b7435a03cfb949b/src%2Ftest%2Fui%2Fcoherence%2Fauxiliary%2Fcoherence_fundamental_trait_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9966590422ed3e6bd97bc1967b7435a03cfb949b/src%2Ftest%2Fui%2Fcoherence%2Fauxiliary%2Fcoherence_fundamental_trait_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fauxiliary%2Fcoherence_fundamental_trait_lib.rs?ref=9966590422ed3e6bd97bc1967b7435a03cfb949b", "patch": "@@ -0,0 +1,7 @@\n+#![crate_type = \"rlib\"]\n+#![feature(fundamental)]\n+\n+pub trait Misc {}\n+\n+#[fundamental]\n+pub trait Fundamental<T> {}"}, {"sha": "dd127bf7f4bffa93678967bc15fed74e06233cef", "filename": "src/test/ui/coherence/coherence-fundamental-trait-objects.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9966590422ed3e6bd97bc1967b7435a03cfb949b/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9966590422ed3e6bd97bc1967b7435a03cfb949b/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.rs?ref=9966590422ed3e6bd97bc1967b7435a03cfb949b", "patch": "@@ -0,0 +1,15 @@\n+// Check that trait objects from #[fundamental] traits are not\n+// treated as #[fundamental] types - the 2 meanings of #[fundamental]\n+// are distinct.\n+\n+// aux-build:coherence_fundamental_trait_lib.rs\n+\n+extern crate coherence_fundamental_trait_lib;\n+\n+use coherence_fundamental_trait_lib::{Fundamental, Misc};\n+\n+pub struct Local;\n+impl Misc for dyn Fundamental<Local> {}\n+//~^ ERROR E0117\n+\n+fn main() {}"}, {"sha": "cefcac2c51795782e65adde76ba3bf2911e2b3fb", "filename": "src/test/ui/coherence/coherence-fundamental-trait-objects.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9966590422ed3e6bd97bc1967b7435a03cfb949b/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9966590422ed3e6bd97bc1967b7435a03cfb949b/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.stderr?ref=9966590422ed3e6bd97bc1967b7435a03cfb949b", "patch": "@@ -0,0 +1,12 @@\n+error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n+  --> $DIR/coherence-fundamental-trait-objects.rs:12:1\n+   |\n+LL | impl Misc for dyn Fundamental<Local> {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   |\n+   = note: the impl does not reference any types defined in this crate\n+   = note: define and implement a trait or new type instead\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0117`."}]}