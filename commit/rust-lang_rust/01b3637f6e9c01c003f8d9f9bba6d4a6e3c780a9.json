{"sha": "01b3637f6e9c01c003f8d9f9bba6d4a6e3c780a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxYjM2MzdmNmU5YzAxYzAwM2Y4ZDlmOWJiYTZkNGE2ZTNjNzgwYTk=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-11T08:23:33Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-30T15:44:24Z"}, "message": "coerce documentation", "tree": {"sha": "1ee6676459588880bc1e24d6742c38dd9a81b5af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ee6676459588880bc1e24d6742c38dd9a81b5af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01b3637f6e9c01c003f8d9f9bba6d4a6e3c780a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01b3637f6e9c01c003f8d9f9bba6d4a6e3c780a9", "html_url": "https://github.com/rust-lang/rust/commit/01b3637f6e9c01c003f8d9f9bba6d4a6e3c780a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01b3637f6e9c01c003f8d9f9bba6d4a6e3c780a9/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eece58a8e35c444afba6fa34873bc0244e32cd29", "url": "https://api.github.com/repos/rust-lang/rust/commits/eece58a8e35c444afba6fa34873bc0244e32cd29", "html_url": "https://github.com/rust-lang/rust/commit/eece58a8e35c444afba6fa34873bc0244e32cd29"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "d44b8f554143c3f70fa7d7f842fcd2d32947f636", "filename": "src/librustc_infer/infer/at.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01b3637f6e9c01c003f8d9f9bba6d4a6e3c780a9/src%2Flibrustc_infer%2Finfer%2Fat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b3637f6e9c01c003f8d9f9bba6d4a6e3c780a9/src%2Flibrustc_infer%2Finfer%2Fat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fat.rs?ref=01b3637f6e9c01c003f8d9f9bba6d4a6e3c780a9", "patch": "@@ -186,7 +186,6 @@ impl<'a, 'tcx> At<'a, 'tcx> {\n impl<'a, 'tcx> Trace<'a, 'tcx> {\n     /// Makes `a <: b` where `a` may or may not be expected (if\n     /// `a_is_expected` is true, then `a` is expected).\n-    /// Makes `expected <: actual`.\n     pub fn sub<T>(self, a: &T, b: &T) -> InferResult<'tcx, ()>\n     where\n         T: Relate<'tcx>,"}, {"sha": "e3b16eaaef2a2c013644333e9ca8086c1b4a58e7", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/01b3637f6e9c01c003f8d9f9bba6d4a6e3c780a9/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01b3637f6e9c01c003f8d9f9bba6d4a6e3c780a9/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=01b3637f6e9c01c003f8d9f9bba6d4a6e3c780a9", "patch": "@@ -107,6 +107,7 @@ fn coerce_mutbls<'tcx>(\n     }\n }\n \n+/// Do not require any adjustments, i.e. coerce `x -> x`.\n fn identity(_: Ty<'_>) -> Vec<Adjustment<'_>> {\n     vec![]\n }\n@@ -115,6 +116,7 @@ fn simple(kind: Adjust<'tcx>) -> impl FnOnce(Ty<'tcx>) -> Vec<Adjustment<'tcx>>\n     move |target| vec![Adjustment { kind, target }]\n }\n \n+/// This always returns `Ok(...)`.\n fn success<'tcx>(\n     adj: Vec<Adjustment<'tcx>>,\n     target: Ty<'tcx>,\n@@ -133,6 +135,7 @@ impl<'f, 'tcx> Coerce<'f, 'tcx> {\n     }\n \n     pub fn unify(&self, a: Ty<'tcx>, b: Ty<'tcx>) -> InferResult<'tcx, Ty<'tcx>> {\n+        debug!(\"unify(a: {:?}, b: {:?}, use_lub: {})\", a, b, self.use_lub);\n         self.commit_if_ok(|_| {\n             if self.use_lub {\n                 self.at(&self.cause, self.fcx.param_env).lub(b, a)"}]}