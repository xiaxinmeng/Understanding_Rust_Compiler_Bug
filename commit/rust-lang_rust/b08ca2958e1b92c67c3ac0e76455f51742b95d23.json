{"sha": "b08ca2958e1b92c67c3ac0e76455f51742b95d23", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwOGNhMjk1OGUxYjkyYzY3YzNhYzBlNzY0NTVmNTE3NDJiOTVkMjM=", "commit": {"author": {"name": "Sebastian Dr\u00f6ge", "email": "sebastian@centricular.com", "date": "2018-10-18T07:22:34Z"}, "committer": {"name": "Sebastian Dr\u00f6ge", "email": "sebastian@centricular.com", "date": "2018-10-18T15:51:56Z"}, "message": "Stabilize slice::chunks_exact() and slice::chunks_exact_mut()\n\nFixes #47115", "tree": {"sha": "ceafceabde6543e5cc8727c09e19dee1eeb7f475", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ceafceabde6543e5cc8727c09e19dee1eeb7f475"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b08ca2958e1b92c67c3ac0e76455f51742b95d23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b08ca2958e1b92c67c3ac0e76455f51742b95d23", "html_url": "https://github.com/rust-lang/rust/commit/b08ca2958e1b92c67c3ac0e76455f51742b95d23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b08ca2958e1b92c67c3ac0e76455f51742b95d23/comments", "author": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "121320d5236b255049ef178669b5a279389cd1e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/121320d5236b255049ef178669b5a279389cd1e5", "html_url": "https://github.com/rust-lang/rust/commit/121320d5236b255049ef178669b5a279389cd1e5"}], "stats": {"total": 43, "additions": 18, "deletions": 25}, "files": [{"sha": "540a17774e52db2a8ed444fe446105937bb2b197", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b08ca2958e1b92c67c3ac0e76455f51742b95d23/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b08ca2958e1b92c67c3ac0e76455f51742b95d23/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=b08ca2958e1b92c67c3ac0e76455f51742b95d23", "patch": "@@ -115,7 +115,6 @@\n #![feature(unsize)]\n #![feature(allocator_internals)]\n #![feature(on_unimplemented)]\n-#![feature(chunks_exact)]\n #![feature(rustc_const_unstable)]\n #![feature(const_vec_new)]\n #![feature(slice_partition_dedup)]"}, {"sha": "8ffc043d8165e9bbdf1c2286230b05f163a145b2", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b08ca2958e1b92c67c3ac0e76455f51742b95d23/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b08ca2958e1b92c67c3ac0e76455f51742b95d23/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=b08ca2958e1b92c67c3ac0e76455f51742b95d23", "patch": "@@ -123,7 +123,7 @@ pub use core::slice::{from_raw_parts, from_raw_parts_mut};\n pub use core::slice::{from_ref, from_mut};\n #[stable(feature = \"slice_get_slice\", since = \"1.28.0\")]\n pub use core::slice::SliceIndex;\n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+#[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n pub use core::slice::{ChunksExact, ChunksExactMut};\n #[unstable(feature = \"rchunks\", issue = \"55177\")]\n pub use core::slice::{RChunks, RChunksMut, RChunksExact, RChunksExactMut};"}, {"sha": "5a21976d75dca9923d23a402c9c4eb556427c4fc", "filename": "src/liballoc/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b08ca2958e1b92c67c3ac0e76455f51742b95d23/src%2Fliballoc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b08ca2958e1b92c67c3ac0e76455f51742b95d23/src%2Fliballoc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Flib.rs?ref=b08ca2958e1b92c67c3ac0e76455f51742b95d23", "patch": "@@ -19,7 +19,6 @@\n #![feature(str_escape)]\n #![feature(try_reserve)]\n #![feature(unboxed_closures)]\n-#![feature(chunks_exact)]\n #![feature(rchunks)]\n #![feature(repeat_generic_slice)]\n "}, {"sha": "628d5542ac0fcd1831713b478ae0fcf21cdcdf24", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 17, "deletions": 21, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/b08ca2958e1b92c67c3ac0e76455f51742b95d23/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b08ca2958e1b92c67c3ac0e76455f51742b95d23/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=b08ca2958e1b92c67c3ac0e76455f51742b95d23", "patch": "@@ -713,8 +713,6 @@ impl<T> [T] {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(chunks_exact)]\n-    ///\n     /// let slice = ['l', 'o', 'r', 'e', 'm'];\n     /// let mut iter = slice.chunks_exact(2);\n     /// assert_eq!(iter.next().unwrap(), &['l', 'o']);\n@@ -725,7 +723,7 @@ impl<T> [T] {\n     ///\n     /// [`chunks`]: #method.chunks\n     /// [`rchunks_exact`]: #method.rchunks_exact\n-    #[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+    #[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n     #[inline]\n     pub fn chunks_exact(&self, chunk_size: usize) -> ChunksExact<T> {\n         assert!(chunk_size != 0);\n@@ -756,8 +754,6 @@ impl<T> [T] {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(chunks_exact)]\n-    ///\n     /// let v = &mut [0, 0, 0, 0, 0];\n     /// let mut count = 1;\n     ///\n@@ -772,7 +768,7 @@ impl<T> [T] {\n     ///\n     /// [`chunks_mut`]: #method.chunks_mut\n     /// [`rchunks_exact_mut`]: #method.rchunks_exact_mut\n-    #[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+    #[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n     #[inline]\n     pub fn chunks_exact_mut(&mut self, chunk_size: usize) -> ChunksExactMut<T> {\n         assert!(chunk_size != 0);\n@@ -4022,25 +4018,25 @@ unsafe impl<'a, T> TrustedRandomAccess for ChunksMut<'a, T> {\n /// [`remainder`]: ../../std/slice/struct.ChunksExact.html#method.remainder\n /// [slices]: ../../std/primitive.slice.html\n #[derive(Debug)]\n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+#[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n pub struct ChunksExact<'a, T:'a> {\n     v: &'a [T],\n     rem: &'a [T],\n     chunk_size: usize\n }\n \n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n impl<'a, T> ChunksExact<'a, T> {\n     /// Return the remainder of the original slice that is not going to be\n     /// returned by the iterator. The returned slice has at most `chunk_size-1`\n     /// elements.\n+    #[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n     pub fn remainder(&self) -> &'a [T] {\n         self.rem\n     }\n }\n \n // FIXME(#26925) Remove in favor of `#[derive(Clone)]`\n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+#[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n impl<T> Clone for ChunksExact<'_, T> {\n     fn clone(&self) -> Self {\n         ChunksExact {\n@@ -4051,7 +4047,7 @@ impl<T> Clone for ChunksExact<'_, T> {\n     }\n }\n \n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+#[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n impl<'a, T> Iterator for ChunksExact<'a, T> {\n     type Item = &'a [T];\n \n@@ -4096,7 +4092,7 @@ impl<'a, T> Iterator for ChunksExact<'a, T> {\n     }\n }\n \n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+#[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n impl<'a, T> DoubleEndedIterator for ChunksExact<'a, T> {\n     #[inline]\n     fn next_back(&mut self) -> Option<&'a [T]> {\n@@ -4110,7 +4106,7 @@ impl<'a, T> DoubleEndedIterator for ChunksExact<'a, T> {\n     }\n }\n \n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+#[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n impl<T> ExactSizeIterator for ChunksExact<'_, T> {\n     fn is_empty(&self) -> bool {\n         self.v.is_empty()\n@@ -4120,11 +4116,11 @@ impl<T> ExactSizeIterator for ChunksExact<'_, T> {\n #[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<T> TrustedLen for ChunksExact<'_, T> {}\n \n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+#[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n impl<T> FusedIterator for ChunksExact<'_, T> {}\n \n #[doc(hidden)]\n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+#[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n unsafe impl<'a, T> TrustedRandomAccess for ChunksExact<'a, T> {\n     unsafe fn get_unchecked(&mut self, i: usize) -> &'a [T] {\n         let start = i * self.chunk_size;\n@@ -4146,24 +4142,24 @@ unsafe impl<'a, T> TrustedRandomAccess for ChunksExact<'a, T> {\n /// [`into_remainder`]: ../../std/slice/struct.ChunksExactMut.html#method.into_remainder\n /// [slices]: ../../std/primitive.slice.html\n #[derive(Debug)]\n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+#[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n pub struct ChunksExactMut<'a, T:'a> {\n     v: &'a mut [T],\n     rem: &'a mut [T],\n     chunk_size: usize\n }\n \n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n impl<'a, T> ChunksExactMut<'a, T> {\n     /// Return the remainder of the original slice that is not going to be\n     /// returned by the iterator. The returned slice has at most `chunk_size-1`\n     /// elements.\n+    #[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n     pub fn into_remainder(self) -> &'a mut [T] {\n         self.rem\n     }\n }\n \n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+#[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n impl<'a, T> Iterator for ChunksExactMut<'a, T> {\n     type Item = &'a mut [T];\n \n@@ -4210,7 +4206,7 @@ impl<'a, T> Iterator for ChunksExactMut<'a, T> {\n     }\n }\n \n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+#[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n impl<'a, T> DoubleEndedIterator for ChunksExactMut<'a, T> {\n     #[inline]\n     fn next_back(&mut self) -> Option<&'a mut [T]> {\n@@ -4226,7 +4222,7 @@ impl<'a, T> DoubleEndedIterator for ChunksExactMut<'a, T> {\n     }\n }\n \n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+#[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n impl<T> ExactSizeIterator for ChunksExactMut<'_, T> {\n     fn is_empty(&self) -> bool {\n         self.v.is_empty()\n@@ -4236,11 +4232,11 @@ impl<T> ExactSizeIterator for ChunksExactMut<'_, T> {\n #[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<T> TrustedLen for ChunksExactMut<'_, T> {}\n \n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+#[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n impl<T> FusedIterator for ChunksExactMut<'_, T> {}\n \n #[doc(hidden)]\n-#[unstable(feature = \"chunks_exact\", issue = \"47115\")]\n+#[stable(feature = \"chunks_exact\", since = \"1.31.0\")]\n unsafe impl<'a, T> TrustedRandomAccess for ChunksExactMut<'a, T> {\n     unsafe fn get_unchecked(&mut self, i: usize) -> &'a mut [T] {\n         let start = i * self.chunk_size;"}, {"sha": "affcdbea9d34292c46b0ef9c224bc1bf80f76f41", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b08ca2958e1b92c67c3ac0e76455f51742b95d23/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b08ca2958e1b92c67c3ac0e76455f51742b95d23/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=b08ca2958e1b92c67c3ac0e76455f51742b95d23", "patch": "@@ -34,7 +34,6 @@\n #![feature(trusted_len)]\n #![feature(try_from)]\n #![feature(try_trait)]\n-#![feature(chunks_exact)]\n #![feature(rchunks)]\n #![feature(align_offset)]\n #![feature(reverse_bits)]"}]}