{"sha": "bebee2106de7bbd20f54d7f55d5c56dba0d636b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYmVlMjEwNmRlN2JiZDIwZjU0ZDdmNTVkNWM1NmRiYTBkNjM2YjY=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-16T14:53:34Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-16T14:53:34Z"}, "message": "Don't repeat work in transitive_reverse_dependencies", "tree": {"sha": "327a17b65055010f2d7c8ce5477723b9f3398bf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/327a17b65055010f2d7c8ce5477723b9f3398bf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bebee2106de7bbd20f54d7f55d5c56dba0d636b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bebee2106de7bbd20f54d7f55d5c56dba0d636b6", "html_url": "https://github.com/rust-lang/rust/commit/bebee2106de7bbd20f54d7f55d5c56dba0d636b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bebee2106de7bbd20f54d7f55d5c56dba0d636b6/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75fafd6fcc010c71d770d19bea4b744b92c5267b", "url": "https://api.github.com/repos/rust-lang/rust/commits/75fafd6fcc010c71d770d19bea4b744b92c5267b", "html_url": "https://github.com/rust-lang/rust/commit/75fafd6fcc010c71d770d19bea4b744b92c5267b"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "d0def21815bbe7c49999cee220484799dd637430", "filename": "crates/base_db/src/input.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/bebee2106de7bbd20f54d7f55d5c56dba0d636b6/crates%2Fbase_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bebee2106de7bbd20f54d7f55d5c56dba0d636b6/crates%2Fbase_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Finput.rs?ref=bebee2106de7bbd20f54d7f55d5c56dba0d636b6", "patch": "@@ -281,24 +281,23 @@ impl CrateGraph {\n     ) -> impl Iterator<Item = CrateId> + '_ {\n         let mut worklist = vec![of];\n         let mut rev_deps = FxHashSet::default();\n-        let mut inverted_graph = FxHashMap::default();\n+        let mut inverted_graph = FxHashMap::<_, Vec<_>>::default();\n         self.arena.iter().for_each(|(&krate, data)| {\n-            data.dependencies.iter().for_each(|dep| {\n-                inverted_graph.entry(dep.crate_id).or_insert_with(Vec::default).push(krate)\n-            })\n+            data.dependencies\n+                .iter()\n+                .for_each(|dep| inverted_graph.entry(dep.crate_id).or_default().push(krate))\n         });\n \n         while let Some(krate) = worklist.pop() {\n-            if !rev_deps.insert(krate) {\n-                continue;\n-            }\n-\n-            if let Some(rev_deps) = inverted_graph.get(&krate) {\n-                worklist.extend(rev_deps);\n+            if let Some(krate_rev_deps) = inverted_graph.get(&krate) {\n+                krate_rev_deps\n+                    .iter()\n+                    .copied()\n+                    .filter(|&rev_dep| rev_deps.insert(rev_dep))\n+                    .for_each(|rev_dep| worklist.push(rev_dep));\n             }\n         }\n \n-        rev_deps.remove(&of);\n         rev_deps.into_iter()\n     }\n "}]}