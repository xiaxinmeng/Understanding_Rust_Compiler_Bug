{"sha": "708c3858e3e98d1b362b73510aa48416c3f68e51", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwOGMzODU4ZTNlOThkMWIzNjJiNzM1MTBhYTQ4NDE2YzNmNjhlNTE=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-02-28T20:41:26Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-03-01T11:54:30Z"}, "message": "Use trans_arg_datum in trans_args_under_call_abi\n\nThe logic for the argument translation was duplicated here.", "tree": {"sha": "38148181ec738658e6156d57a6b64bb0375db29a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38148181ec738658e6156d57a6b64bb0375db29a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/708c3858e3e98d1b362b73510aa48416c3f68e51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/708c3858e3e98d1b362b73510aa48416c3f68e51", "html_url": "https://github.com/rust-lang/rust/commit/708c3858e3e98d1b362b73510aa48416c3f68e51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/708c3858e3e98d1b362b73510aa48416c3f68e51/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41f8b1e89b5ca0c79d7bca782ca44085624d4564", "url": "https://api.github.com/repos/rust-lang/rust/commits/41f8b1e89b5ca0c79d7bca782ca44085624d4564", "html_url": "https://github.com/rust-lang/rust/commit/41f8b1e89b5ca0c79d7bca782ca44085624d4564"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "029c6347cd499a7df6e83dbf4500f34ae9099f6f", "filename": "src/librustc_trans/trans/callee.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/708c3858e3e98d1b362b73510aa48416c3f68e51/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/708c3858e3e98d1b362b73510aa48416c3f68e51/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs?ref=708c3858e3e98d1b362b73510aa48416c3f68e51", "patch": "@@ -927,20 +927,21 @@ fn trans_args_under_call_abi<'blk, 'tcx>(\n                                                           tuple_expr.id));\n             let repr = adt::represent_type(bcx.ccx(), tuple_type);\n             let repr_ptr = &*repr;\n-            for i in 0..field_types.len() {\n+            llargs.extend(field_types.iter().enumerate().map(|(i, field_type)| {\n                 let arg_datum = tuple_lvalue_datum.get_element(\n                     bcx,\n-                    field_types[i],\n+                    field_type,\n                     |srcval| {\n                         adt::trans_field_ptr(bcx, repr_ptr, srcval, 0, i)\n-                    });\n-                let arg_datum = arg_datum.to_expr_datum();\n-                let arg_datum =\n-                    unpack_datum!(bcx, arg_datum.to_rvalue_datum(bcx, \"arg\"));\n-                let arg_datum =\n-                    unpack_datum!(bcx, arg_datum.to_appropriate_datum(bcx));\n-                llargs.push(arg_datum.add_clean(bcx.fcx, arg_cleanup_scope));\n-            }\n+                    }).to_expr_datum();\n+                unpack_result!(bcx, trans_arg_datum(\n+                    bcx,\n+                    field_type,\n+                    arg_datum,\n+                    arg_cleanup_scope,\n+                    DontAutorefArg)\n+                )\n+            }));\n         }\n         _ => {\n             bcx.sess().span_bug(tuple_expr.span,"}]}