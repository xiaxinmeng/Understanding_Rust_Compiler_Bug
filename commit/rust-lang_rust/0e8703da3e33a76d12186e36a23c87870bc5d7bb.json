{"sha": "0e8703da3e33a76d12186e36a23c87870bc5d7bb", "node_id": "C_kwDOAAsO6NoAKDBlODcwM2RhM2UzM2E3NmQxMjE4NmUzNmEyM2M4Nzg3MGJjNWQ3YmI", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-05-05T18:27:32Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-05-08T07:07:36Z"}, "message": "make it more accurate by parsing ty", "tree": {"sha": "27e3555b8ce6508fa96b151fe9a2db16162593b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27e3555b8ce6508fa96b151fe9a2db16162593b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e8703da3e33a76d12186e36a23c87870bc5d7bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e8703da3e33a76d12186e36a23c87870bc5d7bb", "html_url": "https://github.com/rust-lang/rust/commit/0e8703da3e33a76d12186e36a23c87870bc5d7bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e8703da3e33a76d12186e36a23c87870bc5d7bb/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b76588222eb1a69f681c00f9d073edb43401ba7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b76588222eb1a69f681c00f9d073edb43401ba7", "html_url": "https://github.com/rust-lang/rust/commit/6b76588222eb1a69f681c00f9d073edb43401ba7"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "49e05efd39d5c36edb11ae2862f44d50e46eded4", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0e8703da3e33a76d12186e36a23c87870bc5d7bb/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e8703da3e33a76d12186e36a23c87870bc5d7bb/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=0e8703da3e33a76d12186e36a23c87870bc5d7bb", "patch": "@@ -1274,18 +1274,28 @@ impl<'a> Parser<'a> {\n             (thin_vec![], false)\n         } else {\n             self.parse_delim_comma_seq(Delimiter::Brace, |p| p.parse_enum_variant()).map_err(\n-                |mut e| {\n-                    e.span_label(id.span, \"while parsing this enum\");\n+                |mut err| {\n+                    err.span_label(id.span, \"while parsing this enum\");\n                     if self.token == token::Colon {\n-                        e.span_suggestion_verbose(\n-                            prev_span,\n-                            \"perhaps you meant to use `struct` here\",\n-                            \"struct\".to_string(),\n-                            Applicability::MaybeIncorrect,\n-                        );\n+                        let snapshot = self.create_snapshot_for_diagnostic();\n+                        self.bump();\n+                        match self.parse_ty() {\n+                            Ok(_) => {\n+                                err.span_suggestion_verbose(\n+                                    prev_span,\n+                                    \"perhaps you meant to use `struct` here\",\n+                                    \"struct\".to_string(),\n+                                    Applicability::MaybeIncorrect,\n+                                );\n+                            }\n+                            Err(e) => {\n+                                e.cancel();\n+                            }\n+                        }\n+                        self.restore_snapshot(snapshot);\n                     }\n                     self.recover_stmt();\n-                    e\n+                    err\n                 },\n             )?\n         };"}]}