{"sha": "32c488f045fb9fe0fc45c6dacb9938ebc6767598", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYzQ4OGYwNDVmYjlmZTBmYzQ1YzZkYWNiOTkzOGViYzY3Njc1OTg=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-06-06T13:54:07Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-06-06T13:54:07Z"}, "message": "remove outdated comment", "tree": {"sha": "709b149836a65c77c9297c1329a7d124005e5b68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/709b149836a65c77c9297c1329a7d124005e5b68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32c488f045fb9fe0fc45c6dacb9938ebc6767598", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32c488f045fb9fe0fc45c6dacb9938ebc6767598", "html_url": "https://github.com/rust-lang/rust/commit/32c488f045fb9fe0fc45c6dacb9938ebc6767598", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32c488f045fb9fe0fc45c6dacb9938ebc6767598/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "826cb062a659f7b719a8a0ab1497a78229318aab", "url": "https://api.github.com/repos/rust-lang/rust/commits/826cb062a659f7b719a8a0ab1497a78229318aab", "html_url": "https://github.com/rust-lang/rust/commit/826cb062a659f7b719a8a0ab1497a78229318aab"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "32a685297122b7d665447e74e7a4e80a8e97f5b1", "filename": "src/librustc_middle/ty/sty.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32c488f045fb9fe0fc45c6dacb9938ebc6767598/src%2Flibrustc_middle%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c488f045fb9fe0fc45c6dacb9938ebc6767598/src%2Flibrustc_middle%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fsty.rs?ref=32c488f045fb9fe0fc45c6dacb9938ebc6767598", "patch": "@@ -724,10 +724,6 @@ impl<'tcx> Binder<&'tcx List<ExistentialPredicate<'tcx>>> {\n ///\n /// Trait references also appear in object types like `Foo<U>`, but in\n /// that case the `Self` parameter is absent from the substitutions.\n-///\n-/// Note that a `TraitRef` introduces a level of region binding, to\n-/// account for higher-ranked trait bounds like `T: for<'a> Foo<&'a U>`\n-/// or higher-ranked object types.\n #[derive(Copy, Clone, PartialEq, Eq, Hash, RustcEncodable, RustcDecodable)]\n #[derive(HashStable, TypeFoldable)]\n pub struct TraitRef<'tcx> {"}]}