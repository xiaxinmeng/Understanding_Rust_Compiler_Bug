{"sha": "79bf00f4063793b3828001a845f6111d628c3349", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5YmYwMGY0MDYzNzkzYjM4MjgwMDFhODQ1ZjYxMTFkNjI4YzMzNDk=", "commit": {"author": {"name": "jD91mZM2", "email": "me@krake.one", "date": "2018-06-27T12:52:08Z"}, "committer": {"name": "jD91mZM2", "email": "me@krake.one", "date": "2018-06-27T13:10:00Z"}, "message": "Fix tidy checks", "tree": {"sha": "bda814fe93c7e89adbc05e56520c443bb0c4e477", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bda814fe93c7e89adbc05e56520c443bb0c4e477"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79bf00f4063793b3828001a845f6111d628c3349", "comment_count": 0, "verification": {"verified": false, "reason": "unverified_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEvF2uTsFosfm5TJhQMFXVRymnJmYFAlszjKgACgkQMFXVRymn\nJmY9qwf/a6xU8eQjXf9aiKKeVjUtZR9Xd3qgHMon3hRy44R/Jmcd9eBU8NYVfU/i\n9XSCvDsKr+m+iXMUj8wHYAs+zD/X5Xsz255zuYM+j/tDOoi01Qe2K2QepmmYRak8\nciDY5v7GKcYecp/Fi2c+A7u/wlgP26gpGIJ7AuU+p0f8jJtfD+S1YwCmJ+hFjRg9\nz4+Wp4Qq2aOG/9QlLdkiD/hURX62WPPulOkI5vZxh4OcTL19amMGz9heTEbMCPnr\nFN9t08cRFZn/GucDB4g1mZrsOl+khZAQkwES5qh//GGozE51zke0NmWol9yitRt8\niJCAK5E6LrKkOoQT32TWEeyePzrQOQ==\n=p4Sw\n-----END PGP SIGNATURE-----", "payload": "tree bda814fe93c7e89adbc05e56520c443bb0c4e477\nparent a4e190546c9aaa06630577adb7310a8674bbac06\nauthor jD91mZM2 <me@krake.one> 1530103928 +0200\ncommitter jD91mZM2 <me@krake.one> 1530105000 +0200\n\nFix tidy checks\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79bf00f4063793b3828001a845f6111d628c3349", "html_url": "https://github.com/rust-lang/rust/commit/79bf00f4063793b3828001a845f6111d628c3349", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79bf00f4063793b3828001a845f6111d628c3349/comments", "author": {"login": "jD91mZM2", "id": 12830969, "node_id": "MDQ6VXNlcjEyODMwOTY5", "avatar_url": "https://avatars.githubusercontent.com/u/12830969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jD91mZM2", "html_url": "https://github.com/jD91mZM2", "followers_url": "https://api.github.com/users/jD91mZM2/followers", "following_url": "https://api.github.com/users/jD91mZM2/following{/other_user}", "gists_url": "https://api.github.com/users/jD91mZM2/gists{/gist_id}", "starred_url": "https://api.github.com/users/jD91mZM2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jD91mZM2/subscriptions", "organizations_url": "https://api.github.com/users/jD91mZM2/orgs", "repos_url": "https://api.github.com/users/jD91mZM2/repos", "events_url": "https://api.github.com/users/jD91mZM2/events{/privacy}", "received_events_url": "https://api.github.com/users/jD91mZM2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jD91mZM2", "id": 12830969, "node_id": "MDQ6VXNlcjEyODMwOTY5", "avatar_url": "https://avatars.githubusercontent.com/u/12830969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jD91mZM2", "html_url": "https://github.com/jD91mZM2", "followers_url": "https://api.github.com/users/jD91mZM2/followers", "following_url": "https://api.github.com/users/jD91mZM2/following{/other_user}", "gists_url": "https://api.github.com/users/jD91mZM2/gists{/gist_id}", "starred_url": "https://api.github.com/users/jD91mZM2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jD91mZM2/subscriptions", "organizations_url": "https://api.github.com/users/jD91mZM2/orgs", "repos_url": "https://api.github.com/users/jD91mZM2/repos", "events_url": "https://api.github.com/users/jD91mZM2/events{/privacy}", "received_events_url": "https://api.github.com/users/jD91mZM2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4e190546c9aaa06630577adb7310a8674bbac06", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4e190546c9aaa06630577adb7310a8674bbac06", "html_url": "https://github.com/rust-lang/rust/commit/a4e190546c9aaa06630577adb7310a8674bbac06"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "16eec67fb87f59097ca1c39e75730c5dafd48ab5", "filename": "src/libstd/sys/redox/ext/net.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/79bf00f4063793b3828001a845f6111d628c3349/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79bf00f4063793b3828001a845f6111d628c3349/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fnet.rs?ref=79bf00f4063793b3828001a845f6111d628c3349", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #![stable(feature = \"unix_socket\", since = \"1.10.0\")]\n #[stable(feature = \"unix_socket\", since = \"1.10.0\")]\n pub use sys_common::unixsocket::*;"}, {"sha": "9251871baf6c31d1c893c61b470ec23a88b5ef08", "filename": "src/libstd/sys/unix/ext/net.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/79bf00f4063793b3828001a845f6111d628c3349/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79bf00f4063793b3828001a845f6111d628c3349/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs?ref=79bf00f4063793b3828001a845f6111d628c3349", "patch": "@@ -323,8 +323,9 @@ impl UnixDatagram {\n     /// ```\n     #[stable(feature = \"unix_socket\", since = \"1.10.0\")]\n     pub fn local_addr(&self) -> io::Result<SocketAddr> {\n-        inner::SocketAddr::new(|addr, len| unsafe { libc::getsockname(*self.0.as_inner(), addr, len) })\n-            .map(SocketAddr)\n+        inner::SocketAddr::new(|addr, len| unsafe {\n+            libc::getsockname(*self.0.as_inner(), addr, len)\n+        }).map(SocketAddr)\n     }\n \n     /// Returns the address of this socket's peer.\n@@ -345,8 +346,9 @@ impl UnixDatagram {\n     /// ```\n     #[stable(feature = \"unix_socket\", since = \"1.10.0\")]\n     pub fn peer_addr(&self) -> io::Result<SocketAddr> {\n-        inner::SocketAddr::new(|addr, len| unsafe { libc::getsockname(*self.0.as_inner(), addr, len) })\n-            .map(SocketAddr)\n+        inner::SocketAddr::new(|addr, len| unsafe {\n+            libc::getsockname(*self.0.as_inner(), addr, len)\n+        }).map(SocketAddr)\n     }\n \n     /// Receives data from the socket."}, {"sha": "7b52a5fcf0d0f9eb65b9fbab02bc0adb14de7ad8", "filename": "src/libstd/sys/unix/ext/unixsocket.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79bf00f4063793b3828001a845f6111d628c3349/src%2Flibstd%2Fsys%2Funix%2Fext%2Funixsocket.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79bf00f4063793b3828001a845f6111d628c3349/src%2Flibstd%2Fsys%2Funix%2Fext%2Funixsocket.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Funixsocket.rs?ref=79bf00f4063793b3828001a845f6111d628c3349", "patch": "@@ -65,7 +65,9 @@ impl SocketAddr {\n         }\n     }\n \n-    pub(crate) fn from_parts(addr: libc::sockaddr_un, mut len: libc::socklen_t) -> io::Result<SocketAddr> {\n+    pub(crate) fn from_parts(addr: libc::sockaddr_un, mut len: libc::socklen_t)\n+        -> io::Result<SocketAddr>\n+    {\n         if len == 0 {\n             // When there is a datagram from unnamed unix socket\n             // linux returns zero bytes of address"}, {"sha": "89f5fd79f406cdc1e034d6109a21567b530996de", "filename": "src/libstd/sys_common/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79bf00f4063793b3828001a845f6111d628c3349/src%2Flibstd%2Fsys_common%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79bf00f4063793b3828001a845f6111d628c3349/src%2Flibstd%2Fsys_common%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fmod.rs?ref=79bf00f4063793b3828001a845f6111d628c3349", "patch": "@@ -54,7 +54,9 @@ pub mod util;\n pub mod wtf8;\n pub mod bytestring;\n pub mod process;\n-pub mod unixsocket;\n+\n+#[cfg(any(all(unix, not(target_os = \"emscripten\")), target_os = \"redox\"))]\n+pub(crate) mod unixsocket;\n \n cfg_if! {\n     if #[cfg(any(target_os = \"cloudabi\", target_os = \"l4re\", target_os = \"redox\"))] {"}, {"sha": "286e0e9f37f86b9b7a8801d28121d402e5d98c09", "filename": "src/libstd/sys_common/unixsocket.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/79bf00f4063793b3828001a845f6111d628c3349/src%2Flibstd%2Fsys_common%2Funixsocket.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79bf00f4063793b3828001a845f6111d628c3349/src%2Flibstd%2Fsys_common%2Funixsocket.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Funixsocket.rs?ref=79bf00f4063793b3828001a845f6111d628c3349", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![cfg(any(all(unix, not(target_os = \"emscripten\")), target_os = \"redox\"))]\n #![stable(feature = \"unix_socket\", since = \"1.10.0\")]\n \n //! Unix-specific networking functionality"}]}