{"sha": "7c98d2e63f732682b057c8c453b08f9e12b262e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjOThkMmU2M2Y3MzI2ODJiMDU3YzhjNDUzYjA4ZjllMTJiMjYyZTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-06T07:02:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-06T07:02:11Z"}, "message": "Auto merge of #52332 - zackmdavis:dead_code_lint_should_say_2_electric_boogaloo, r=pnkfelix\n\ndead-code lint: say \"constructed\" for structs\n\nRespectively.\n\nThis is a sequel to November 2017's #46103 / 1a9dc2e9. It had been\nreported (more than once\u2014at least #19140, #44083, and #44565) that the\n\"never used\" language was confusing for enum variants that were \"used\"\nas match patterns, so the wording was changed to say never \"constructed\"\nspecifically for enum variants. More recently, the same issue was raised\nfor structs (#52325). It seems consistent to say \"constructed\" here,\ntoo, for the same reasons.\n\n~~While we're here, we can also use more specific word \"called\" for unused\nfunctions and methods. (We declined to do this in #46103, but the\nrationale given in the commit message doesn't actually make sense.)~~\n\nThis resolves #52325.", "tree": {"sha": "25a56b170e734cb6dae51cbdc34baa207bdb08d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25a56b170e734cb6dae51cbdc34baa207bdb08d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c98d2e63f732682b057c8c453b08f9e12b262e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c98d2e63f732682b057c8c453b08f9e12b262e6", "html_url": "https://github.com/rust-lang/rust/commit/7c98d2e63f732682b057c8c453b08f9e12b262e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c98d2e63f732682b057c8c453b08f9e12b262e6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa1e6db70900cf5d11a843bc4234de0548677aba", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa1e6db70900cf5d11a843bc4234de0548677aba", "html_url": "https://github.com/rust-lang/rust/commit/aa1e6db70900cf5d11a843bc4234de0548677aba"}, {"sha": "6c50ee5abc1f41aaf587f74cc317819ff8eca7d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c50ee5abc1f41aaf587f74cc317819ff8eca7d8", "html_url": "https://github.com/rust-lang/rust/commit/6c50ee5abc1f41aaf587f74cc317819ff8eca7d8"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "0f889549b58e39ddd058b0db12e96262a02adce5", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7c98d2e63f732682b057c8c453b08f9e12b262e6/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c98d2e63f732682b057c8c453b08f9e12b262e6/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=7c98d2e63f732682b057c8c453b08f9e12b262e6", "patch": "@@ -554,12 +554,16 @@ impl<'a, 'tcx> Visitor<'tcx> for DeadVisitor<'a, 'tcx> {\n                 hir::ItemKind::Impl(..) => self.tcx.sess.codemap().def_span(item.span),\n                 _ => item.span,\n             };\n+            let participle = match item.node {\n+                hir::ItemKind::Struct(..) => \"constructed\", // Issue #52325\n+                _ => \"used\"\n+            };\n             self.warn_dead_code(\n                 item.id,\n                 span,\n                 item.name,\n                 item.node.descriptive_variant(),\n-                \"used\",\n+                participle,\n             );\n         } else {\n             // Only continue if we didn't warn"}, {"sha": "2fe72365bab1cbf5e9d045b13789ac8b985cc18b", "filename": "src/test/compile-fail/lint-dead-code-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7c98d2e63f732682b057c8c453b08f9e12b262e6/src%2Ftest%2Fcompile-fail%2Flint-dead-code-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c98d2e63f732682b057c8c453b08f9e12b262e6/src%2Ftest%2Fcompile-fail%2Flint-dead-code-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-dead-code-1.rs?ref=7c98d2e63f732682b057c8c453b08f9e12b262e6", "patch": "@@ -19,7 +19,7 @@\n pub use foo2::Bar2;\n \n mod foo {\n-    pub struct Bar; //~ ERROR: struct is never used\n+    pub struct Bar; //~ ERROR: struct is never constructed\n }\n \n mod foo2 {\n@@ -42,7 +42,7 @@ const CONST_USED_IN_ENUM_DISCRIMINANT: isize = 11;\n \n pub type typ = *const UsedStruct4;\n pub struct PubStruct;\n-struct PrivStruct; //~ ERROR: struct is never used\n+struct PrivStruct; //~ ERROR: struct is never constructed\n struct UsedStruct1 {\n     #[allow(dead_code)]\n     x: isize"}, {"sha": "112d363095253fa5652967d3f878b479a247aa9d", "filename": "src/test/compile-fail/lint-dead-code-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c98d2e63f732682b057c8c453b08f9e12b262e6/src%2Ftest%2Fcompile-fail%2Flint-dead-code-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c98d2e63f732682b057c8c453b08f9e12b262e6/src%2Ftest%2Fcompile-fail%2Flint-dead-code-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-dead-code-3.rs?ref=7c98d2e63f732682b057c8c453b08f9e12b262e6", "patch": "@@ -20,7 +20,7 @@ extern {\n     pub fn extern_foo();\n }\n \n-struct Foo; //~ ERROR: struct is never used\n+struct Foo; //~ ERROR: struct is never constructed\n impl Foo {\n     fn foo(&self) { //~ ERROR: method is never used\n         bar()"}, {"sha": "7374f15746851c7bd5e7f5f46c1de3943cf375c9", "filename": "src/test/ui/span/macro-span-replacement.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c98d2e63f732682b057c8c453b08f9e12b262e6/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c98d2e63f732682b057c8c453b08f9e12b262e6/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.rs?ref=7c98d2e63f732682b057c8c453b08f9e12b262e6", "patch": "@@ -14,7 +14,7 @@\n \n macro_rules! m {\n     ($a:tt $b:tt) => {\n-        $b $a; //~ WARN struct is never used\n+        $b $a; //~ WARN struct is never constructed\n     }\n }\n "}, {"sha": "b12ca86d3c92939e370ed968c7e15baeca598ea1", "filename": "src/test/ui/span/macro-span-replacement.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7c98d2e63f732682b057c8c453b08f9e12b262e6/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c98d2e63f732682b057c8c453b08f9e12b262e6/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.stderr?ref=7c98d2e63f732682b057c8c453b08f9e12b262e6", "patch": "@@ -1,7 +1,7 @@\n-warning: struct is never used: `S`\n+warning: struct is never constructed: `S`\n   --> $DIR/macro-span-replacement.rs:17:14\n    |\n-LL |         $b $a; //~ WARN struct is never used\n+LL |         $b $a; //~ WARN struct is never constructed\n    |              ^\n ...\n LL |     m!(S struct);"}, {"sha": "c074f03db469cedc8b644f640acb1259b87872e7", "filename": "src/test/ui/span/unused-warning-point-at-signature.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c98d2e63f732682b057c8c453b08f9e12b262e6/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-signature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c98d2e63f732682b057c8c453b08f9e12b262e6/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-signature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-signature.rs?ref=7c98d2e63f732682b057c8c453b08f9e12b262e6", "patch": "@@ -19,7 +19,7 @@ enum Enum { //~ WARN enum is never used\n     D,\n }\n \n-struct Struct { //~ WARN struct is never used\n+struct Struct { //~ WARN struct is never constructed\n     a: usize,\n     b: usize,\n     c: usize,"}, {"sha": "8344853d6def5a6f9bf50bc5ed190283fced210d", "filename": "src/test/ui/span/unused-warning-point-at-signature.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7c98d2e63f732682b057c8c453b08f9e12b262e6/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-signature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c98d2e63f732682b057c8c453b08f9e12b262e6/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-signature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Funused-warning-point-at-signature.stderr?ref=7c98d2e63f732682b057c8c453b08f9e12b262e6", "patch": "@@ -11,10 +11,10 @@ LL | #![warn(unused)]\n    |         ^^^^^^\n    = note: #[warn(dead_code)] implied by #[warn(unused)]\n \n-warning: struct is never used: `Struct`\n+warning: struct is never constructed: `Struct`\n   --> $DIR/unused-warning-point-at-signature.rs:22:1\n    |\n-LL | struct Struct { //~ WARN struct is never used\n+LL | struct Struct { //~ WARN struct is never constructed\n    | ^^^^^^^^^^^^^\n \n warning: function is never used: `func`"}]}