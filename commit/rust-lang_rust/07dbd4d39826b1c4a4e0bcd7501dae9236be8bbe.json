{"sha": "07dbd4d39826b1c4a4e0bcd7501dae9236be8bbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZGJkNGQzOTgyNmIxYzRhNGUwYmNkNzUwMWRhZTkyMzZiZThiYmU=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-06-06T23:27:40Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-06-06T23:27:40Z"}, "message": "Use `try_into` instead of asserting manually", "tree": {"sha": "a530013bb28b4a781601ecb8b8002f374538d988", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a530013bb28b4a781601ecb8b8002f374538d988"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07dbd4d39826b1c4a4e0bcd7501dae9236be8bbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07dbd4d39826b1c4a4e0bcd7501dae9236be8bbe", "html_url": "https://github.com/rust-lang/rust/commit/07dbd4d39826b1c4a4e0bcd7501dae9236be8bbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07dbd4d39826b1c4a4e0bcd7501dae9236be8bbe/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f57d5ba3c9ffef4cd2402e3e7d8934bd1a6e9cc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f57d5ba3c9ffef4cd2402e3e7d8934bd1a6e9cc1", "html_url": "https://github.com/rust-lang/rust/commit/f57d5ba3c9ffef4cd2402e3e7d8934bd1a6e9cc1"}], "stats": {"total": 12, "additions": 2, "deletions": 10}, "files": [{"sha": "8e71ded3d1de6a7dfbbc006d4d7e8525df3d4866", "filename": "compiler/rustc_target/src/abi/mod.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/07dbd4d39826b1c4a4e0bcd7501dae9236be8bbe/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07dbd4d39826b1c4a4e0bcd7501dae9236be8bbe/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs?ref=07dbd4d39826b1c4a4e0bcd7501dae9236be8bbe", "patch": "@@ -753,11 +753,7 @@ impl FieldsShape {\n         match *self {\n             FieldsShape::Primitive => 0,\n             FieldsShape::Union(count) => count.get(),\n-            FieldsShape::Array { count, .. } => {\n-                let usize_count = count as usize;\n-                assert_eq!(usize_count as u64, count);\n-                usize_count\n-            }\n+            FieldsShape::Array { count, .. } => count.try_into().unwrap(),\n             FieldsShape::Arbitrary { ref offsets, .. } => offsets.len(),\n         }\n     }\n@@ -791,11 +787,7 @@ impl FieldsShape {\n                 unreachable!(\"FieldsShape::memory_index: `Primitive`s have no fields\")\n             }\n             FieldsShape::Union(_) | FieldsShape::Array { .. } => i,\n-            FieldsShape::Arbitrary { ref memory_index, .. } => {\n-                let r = memory_index[i];\n-                assert_eq!(r as usize as u32, r);\n-                r as usize\n-            }\n+            FieldsShape::Arbitrary { ref memory_index, .. } => memory_index[i].try_into().unwrap(),\n         }\n     }\n "}]}