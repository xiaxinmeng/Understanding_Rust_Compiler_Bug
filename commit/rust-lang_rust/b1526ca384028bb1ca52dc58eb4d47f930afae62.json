{"sha": "b1526ca384028bb1ca52dc58eb4d47f930afae62", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxNTI2Y2EzODQwMjhiYjFjYTUyZGM1OGViNGQ0N2Y5MzBhZmFlNjI=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2018-03-14T04:36:58Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2018-03-14T04:45:14Z"}, "message": "Fixes after rebase", "tree": {"sha": "128925571868fb536d72705324a32c8dec78eade", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/128925571868fb536d72705324a32c8dec78eade"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1526ca384028bb1ca52dc58eb4d47f930afae62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1526ca384028bb1ca52dc58eb4d47f930afae62", "html_url": "https://github.com/rust-lang/rust/commit/b1526ca384028bb1ca52dc58eb4d47f930afae62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1526ca384028bb1ca52dc58eb4d47f930afae62/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81ae93e3390aa686c09c5ae3a2e25274ad1fdab2", "url": "https://api.github.com/repos/rust-lang/rust/commits/81ae93e3390aa686c09c5ae3a2e25274ad1fdab2", "html_url": "https://github.com/rust-lang/rust/commit/81ae93e3390aa686c09c5ae3a2e25274ad1fdab2"}], "stats": {"total": 55, "additions": 3, "deletions": 52}, "files": [{"sha": "4e0cf59e8a7fd7dc6db068c5f4d60ac62feaab49", "filename": "src/librustc/infer/canonical.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b1526ca384028bb1ca52dc58eb4d47f930afae62/src%2Flibrustc%2Finfer%2Fcanonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1526ca384028bb1ca52dc58eb4d47f930afae62/src%2Flibrustc%2Finfer%2Fcanonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcanonical.rs?ref=b1526ca384028bb1ca52dc58eb4d47f930afae62", "patch": "@@ -609,12 +609,6 @@ impl<'cx, 'gcx, 'tcx> TypeFolder<'gcx, 'tcx> for Canonicalizer<'cx, 'gcx, 'tcx>\n                 bug!(\"encountered a canonical type during canonicalization\")\n             }\n \n-            // Replace a `()` that \"would've fallen back\" to `!` with just `()`.\n-            ty::TyTuple(ref tys, true) => {\n-                assert!(tys.is_empty());\n-                self.tcx().mk_nil()\n-            }\n-\n             ty::TyClosure(..)\n             | ty::TyGenerator(..)\n             | ty::TyGeneratorWitness(..)\n@@ -634,7 +628,7 @@ impl<'cx, 'gcx, 'tcx> TypeFolder<'gcx, 'tcx> for Canonicalizer<'cx, 'gcx, 'tcx>\n             | ty::TyFnPtr(_)\n             | ty::TyDynamic(..)\n             | ty::TyNever\n-            | ty::TyTuple(_, false)\n+            | ty::TyTuple(..)\n             | ty::TyProjection(..)\n             | ty::TyForeign(..)\n             | ty::TyParam(..)"}, {"sha": "1caab6fd89ef982da60af7ec036a874e46663b69", "filename": "src/librustc/traits/query/dropck_outlives.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1526ca384028bb1ca52dc58eb4d47f930afae62/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1526ca384028bb1ca52dc58eb4d47f930afae62/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs?ref=b1526ca384028bb1ca52dc58eb4d47f930afae62", "patch": "@@ -236,7 +236,7 @@ fn trivial_dropck_outlives<'cx, 'tcx>(tcx: TyCtxt<'cx, '_, 'tcx>, ty: Ty<'tcx>)\n \n         // (T1..Tn) and closures have same properties as T1..Tn --\n         // check if *any* of those are trivial.\n-        ty::TyTuple(ref tys, _) => tys.iter().cloned().all(|t| trivial_dropck_outlives(tcx, t)),\n+        ty::TyTuple(ref tys) => tys.iter().cloned().all(|t| trivial_dropck_outlives(tcx, t)),\n         ty::TyClosure(def_id, ref substs) => substs\n             .upvar_tys(def_id, tcx)\n             .all(|t| trivial_dropck_outlives(tcx, t)),"}, {"sha": "2a8cfe5cc06b37ceb4cbbfaee70b02a8f4a69fe8", "filename": "src/librustc_traits/dropck_outlives.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1526ca384028bb1ca52dc58eb4d47f930afae62/src%2Flibrustc_traits%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1526ca384028bb1ca52dc58eb4d47f930afae62/src%2Flibrustc_traits%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fdropck_outlives.rs?ref=b1526ca384028bb1ca52dc58eb4d47f930afae62", "patch": "@@ -184,7 +184,7 @@ fn dtorck_constraint_for_ty<'a, 'gcx, 'tcx>(\n             dtorck_constraint_for_ty(tcx, span, for_ty, depth + 1, ety)\n         }\n \n-        ty::TyTuple(tys, _) => tys.iter()\n+        ty::TyTuple(tys) => tys.iter()\n             .map(|ty| dtorck_constraint_for_ty(tcx, span, for_ty, depth + 1, ty))\n             .collect(),\n "}, {"sha": "187be6d829137ab5324e99f17eff68aff58daef9", "filename": "src/test/ui/feature-gate-never_type.stderr", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/81ae93e3390aa686c09c5ae3a2e25274ad1fdab2/src%2Ftest%2Fui%2Ffeature-gate-never_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81ae93e3390aa686c09c5ae3a2e25274ad1fdab2/src%2Ftest%2Fui%2Ffeature-gate-never_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-never_type.stderr?ref=81ae93e3390aa686c09c5ae3a2e25274ad1fdab2", "patch": "@@ -1,43 +0,0 @@\n-error[E0658]: The `!` type is experimental (see issue #35121)\n-  --> $DIR/feature-gate-never_type.rs:17:17\n-   |\n-LL | type Ma = (u32, !, i32); //~ ERROR type is experimental\n-   |                 ^\n-   |\n-   = help: add #![feature(never_type)] to the crate attributes to enable\n-\n-error[E0658]: The `!` type is experimental (see issue #35121)\n-  --> $DIR/feature-gate-never_type.rs:18:20\n-   |\n-LL | type Meeshka = Vec<!>; //~ ERROR type is experimental\n-   |                    ^\n-   |\n-   = help: add #![feature(never_type)] to the crate attributes to enable\n-\n-error[E0658]: The `!` type is experimental (see issue #35121)\n-  --> $DIR/feature-gate-never_type.rs:19:16\n-   |\n-LL | type Mow = &fn(!) -> !; //~ ERROR type is experimental\n-   |                ^\n-   |\n-   = help: add #![feature(never_type)] to the crate attributes to enable\n-\n-error[E0658]: The `!` type is experimental (see issue #35121)\n-  --> $DIR/feature-gate-never_type.rs:20:19\n-   |\n-LL | type Skwoz = &mut !; //~ ERROR type is experimental\n-   |                   ^\n-   |\n-   = help: add #![feature(never_type)] to the crate attributes to enable\n-\n-error[E0658]: The `!` type is experimental (see issue #35121)\n-  --> $DIR/feature-gate-never_type.rs:23:16\n-   |\n-LL |     type Wub = !; //~ ERROR type is experimental\n-   |                ^\n-   |\n-   = help: add #![feature(never_type)] to the crate attributes to enable\n-\n-error: aborting due to 5 previous errors\n-\n-For more information about this error, try `rustc --explain E0658`."}]}