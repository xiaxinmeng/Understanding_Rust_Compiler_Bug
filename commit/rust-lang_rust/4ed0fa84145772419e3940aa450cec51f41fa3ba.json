{"sha": "4ed0fa84145772419e3940aa450cec51f41fa3ba", "node_id": "C_kwDOAAsO6NoAKDRlZDBmYTg0MTQ1NzcyNDE5ZTM5NDBhYTQ1MGNlYzUxZjQxZmEzYmE", "commit": {"author": {"name": "Yury Ivanou", "email": "lumenian@gmail.com", "date": "2023-05-07T15:21:07Z"}, "committer": {"name": "Yury Ivanou", "email": "lumenian@gmail.com", "date": "2023-05-07T15:21:07Z"}, "message": "Add config for disabling hover memory layout data", "tree": {"sha": "8eaa0c368277fe98daeaef98c5c6be96645de8c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8eaa0c368277fe98daeaef98c5c6be96645de8c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ed0fa84145772419e3940aa450cec51f41fa3ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ed0fa84145772419e3940aa450cec51f41fa3ba", "html_url": "https://github.com/rust-lang/rust/commit/4ed0fa84145772419e3940aa450cec51f41fa3ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ed0fa84145772419e3940aa450cec51f41fa3ba/comments", "author": {"login": "lumenian", "id": 46848997, "node_id": "MDQ6VXNlcjQ2ODQ4OTk3", "avatar_url": "https://avatars.githubusercontent.com/u/46848997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lumenian", "html_url": "https://github.com/lumenian", "followers_url": "https://api.github.com/users/lumenian/followers", "following_url": "https://api.github.com/users/lumenian/following{/other_user}", "gists_url": "https://api.github.com/users/lumenian/gists{/gist_id}", "starred_url": "https://api.github.com/users/lumenian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lumenian/subscriptions", "organizations_url": "https://api.github.com/users/lumenian/orgs", "repos_url": "https://api.github.com/users/lumenian/repos", "events_url": "https://api.github.com/users/lumenian/events{/privacy}", "received_events_url": "https://api.github.com/users/lumenian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lumenian", "id": 46848997, "node_id": "MDQ6VXNlcjQ2ODQ4OTk3", "avatar_url": "https://avatars.githubusercontent.com/u/46848997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lumenian", "html_url": "https://github.com/lumenian", "followers_url": "https://api.github.com/users/lumenian/followers", "following_url": "https://api.github.com/users/lumenian/following{/other_user}", "gists_url": "https://api.github.com/users/lumenian/gists{/gist_id}", "starred_url": "https://api.github.com/users/lumenian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lumenian/subscriptions", "organizations_url": "https://api.github.com/users/lumenian/orgs", "repos_url": "https://api.github.com/users/lumenian/repos", "events_url": "https://api.github.com/users/lumenian/events{/privacy}", "received_events_url": "https://api.github.com/users/lumenian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecc081d6252007ab1ef3749646e7c733296f827b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecc081d6252007ab1ef3749646e7c733296f827b", "html_url": "https://github.com/rust-lang/rust/commit/ecc081d6252007ab1ef3749646e7c733296f827b"}], "stats": {"total": 73, "additions": 63, "deletions": 10}, "files": [{"sha": "baaf8c80480b8af62c1eb262585eb727d7ba006a", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4ed0fa84145772419e3940aa450cec51f41fa3ba/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ed0fa84145772419e3940aa450cec51f41fa3ba/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=4ed0fa84145772419e3940aa450cec51f41fa3ba", "patch": "@@ -27,6 +27,7 @@ use crate::{\n #[derive(Clone, Debug, PartialEq, Eq)]\n pub struct HoverConfig {\n     pub links_in_hover: bool,\n+    pub memory_layout: bool,\n     pub documentation: bool,\n     pub keywords: bool,\n     pub format: HoverDocFormat,"}, {"sha": "078a4de671e4c3c40a40bdb6cda405aab0c00207", "filename": "crates/ide/src/hover/render.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4ed0fa84145772419e3940aa450cec51f41fa3ba/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ed0fa84145772419e3940aa450cec51f41fa3ba/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Frender.rs?ref=4ed0fa84145772419e3940aa450cec51f41fa3ba", "patch": "@@ -415,7 +415,7 @@ pub(super) fn definition(\n     let mod_path = definition_mod_path(db, &def);\n     let (label, docs) = match def {\n         Definition::Macro(it) => label_and_docs(db, it),\n-        Definition::Field(it) => label_and_layout_info_and_docs(db, it, |&it| {\n+        Definition::Field(it) => label_and_layout_info_and_docs(db, it, config, |&it| {\n             let var_def = it.parent_def(db);\n             let id = it.index();\n             let layout = it.layout(db).ok()?;\n@@ -435,7 +435,7 @@ pub(super) fn definition(\n         }),\n         Definition::Module(it) => label_and_docs(db, it),\n         Definition::Function(it) => label_and_docs(db, it),\n-        Definition::Adt(it) => label_and_layout_info_and_docs(db, it, |&it| {\n+        Definition::Adt(it) => label_and_layout_info_and_docs(db, it, config, |&it| {\n             let layout = it.layout(db).ok()?;\n             Some(format!(\"size = {}, align = {}\", layout.size.bytes(), layout.align.abi.bytes()))\n         }),\n@@ -473,7 +473,7 @@ pub(super) fn definition(\n         }),\n         Definition::Trait(it) => label_and_docs(db, it),\n         Definition::TraitAlias(it) => label_and_docs(db, it),\n-        Definition::TypeAlias(it) => label_and_layout_info_and_docs(db, it, |&it| {\n+        Definition::TypeAlias(it) => label_and_layout_info_and_docs(db, it, config, |&it| {\n             let layout = it.ty(db).layout(db).ok()?;\n             Some(format!(\"size = {}, align = {}\", layout.size.bytes(), layout.align.abi.bytes()))\n         }),\n@@ -577,17 +577,17 @@ where\n fn label_and_layout_info_and_docs<D, E, V>(\n     db: &RootDatabase,\n     def: D,\n+    config: &HoverConfig,\n     value_extractor: E,\n ) -> (String, Option<hir::Documentation>)\n where\n     D: HasAttrs + HirDisplay,\n     E: Fn(&D) -> Option<V>,\n     V: Display,\n {\n-    let label = if let Some(value) = value_extractor(&def) {\n-        format!(\"{} // {value}\", def.display(db))\n-    } else {\n-        def.display(db).to_string()\n+    let label = match value_extractor(&def) {\n+        Some(value) if config.memory_layout => format!(\"{} // {value}\", def.display(db)),\n+        _ => def.display(db).to_string(),\n     };\n     let docs = def.attrs(db).docs();\n     (label, docs)"}, {"sha": "559571a1a41578abd5a6aa2c37daed7614d92c85", "filename": "crates/ide/src/hover/tests.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/4ed0fa84145772419e3940aa450cec51f41fa3ba/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ed0fa84145772419e3940aa450cec51f41fa3ba/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs?ref=4ed0fa84145772419e3940aa450cec51f41fa3ba", "patch": "@@ -6,6 +6,7 @@ use crate::{fixture, HoverConfig, HoverDocFormat};\n \n const HOVER_BASE_CONFIG: HoverConfig = HoverConfig {\n     links_in_hover: false,\n+    memory_layout: true,\n     documentation: true,\n     format: HoverDocFormat::Markdown,\n     keywords: true,\n@@ -57,6 +58,23 @@ fn check_hover_no_links(ra_fixture: &str, expect: Expect) {\n     expect.assert_eq(&actual)\n }\n \n+fn check_hover_no_memory_layout(ra_fixture: &str, expect: Expect) {\n+    let (analysis, position) = fixture::position(ra_fixture);\n+    let hover = analysis\n+        .hover(\n+            &HoverConfig { memory_layout: false, ..HOVER_BASE_CONFIG },\n+            FileRange { file_id: position.file_id, range: TextRange::empty(position.offset) },\n+        )\n+        .unwrap()\n+        .unwrap();\n+\n+    let content = analysis.db.file_text(position.file_id);\n+    let hovered_element = &content[hover.range];\n+\n+    let actual = format!(\"*{hovered_element}*\\n{}\\n\", hover.info.markup);\n+    expect.assert_eq(&actual)\n+}\n+\n fn check_hover_no_markdown(ra_fixture: &str, expect: Expect) {\n     let (analysis, position) = fixture::position(ra_fixture);\n     let hover = analysis\n@@ -1745,6 +1763,26 @@ pub fn fo$0o() {}\n     );\n }\n \n+#[test]\n+fn test_hover_no_memory_layout() {\n+    check_hover_no_memory_layout(\n+        r#\"\n+struct Foo { fiel$0d_a: u8, field_b: i32, field_c: i16 }\n+\"#,\n+        expect![[r#\"\n+            *field_a*\n+\n+            ```rust\n+            test::Foo\n+            ```\n+\n+            ```rust\n+            field_a: u8\n+            ```\n+        \"#]],\n+    );\n+}\n+\n #[test]\n fn test_hover_macro_generated_struct_fn_doc_comment() {\n     cov_mark::check!(hover_macro_generated_struct_fn_doc_comment);"}, {"sha": "dd6ec21ffff557f7fdf1bd88d5d47a53001702e5", "filename": "crates/ide/src/static_index.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4ed0fa84145772419e3940aa450cec51f41fa3ba/crates%2Fide%2Fsrc%2Fstatic_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ed0fa84145772419e3940aa450cec51f41fa3ba/crates%2Fide%2Fsrc%2Fstatic_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fstatic_index.rs?ref=4ed0fa84145772419e3940aa450cec51f41fa3ba", "patch": "@@ -137,6 +137,7 @@ impl StaticIndex<'_> {\n         });\n         let hover_config = HoverConfig {\n             links_in_hover: true,\n+            memory_layout: true,\n             documentation: true,\n             keywords: true,\n             format: crate::HoverDocFormat::Markdown,"}, {"sha": "cfb86e8a92a59054cd27039daa34f756aad8788a", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4ed0fa84145772419e3940aa450cec51f41fa3ba/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ed0fa84145772419e3940aa450cec51f41fa3ba/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=4ed0fa84145772419e3940aa450cec51f41fa3ba", "patch": "@@ -313,8 +313,10 @@ config_data! {\n         /// Whether to show keyword hover popups. Only applies when\n         /// `#rust-analyzer.hover.documentation.enable#` is set.\n         hover_documentation_keywords_enable: bool  = \"true\",\n-        /// Use markdown syntax for links in hover.\n+        /// Use markdown syntax for links on hover.\n         hover_links_enable: bool = \"true\",\n+        /// Whether to show memory layout data on hover.\n+        hover_memory_layout_enable: bool = \"true\",\n \n         /// Whether to enforce the import granularity setting for all files. If set to false rust-analyzer will try to keep import styles consistent per file.\n         imports_granularity_enforce: bool              = \"false\",\n@@ -1472,6 +1474,7 @@ impl Config {\n     pub fn hover(&self) -> HoverConfig {\n         HoverConfig {\n             links_in_hover: self.data.hover_links_enable,\n+            memory_layout: self.data.hover_memory_layout_enable,\n             documentation: self.data.hover_documentation_enable,\n             format: {\n                 let is_markdown = try_or_def!(self"}, {"sha": "c46056866b26a1be97f7f8fd61ba4fd5b58a2d6c", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4ed0fa84145772419e3940aa450cec51f41fa3ba/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/4ed0fa84145772419e3940aa450cec51f41fa3ba/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=4ed0fa84145772419e3940aa450cec51f41fa3ba", "patch": "@@ -421,7 +421,12 @@ Whether to show keyword hover popups. Only applies when\n [[rust-analyzer.hover.links.enable]]rust-analyzer.hover.links.enable (default: `true`)::\n +\n --\n-Use markdown syntax for links in hover.\n+Use markdown syntax for links on hover.\n+--\n+[[rust-analyzer.hover.memory.layout.enable]]rust-analyzer.hover.memory.layout.enable (default: `true`)::\n++\n+--\n+Whether to show memory layout data on hover.\n --\n [[rust-analyzer.imports.granularity.enforce]]rust-analyzer.imports.granularity.enforce (default: `false`)::\n +"}, {"sha": "163a95303082f3acbfa602b6fa5e7c34ad5fb250", "filename": "editors/code/package.json", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4ed0fa84145772419e3940aa450cec51f41fa3ba/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/4ed0fa84145772419e3940aa450cec51f41fa3ba/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=4ed0fa84145772419e3940aa450cec51f41fa3ba", "patch": "@@ -955,7 +955,12 @@\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.hover.links.enable\": {\n-                    \"markdownDescription\": \"Use markdown syntax for links in hover.\",\n+                    \"markdownDescription\": \"Use markdown syntax for links on hover.\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n+                \"rust-analyzer.hover.memory.layout.enable\": {\n+                    \"markdownDescription\": \"Whether to show memory layout data on hover.\",\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },"}]}