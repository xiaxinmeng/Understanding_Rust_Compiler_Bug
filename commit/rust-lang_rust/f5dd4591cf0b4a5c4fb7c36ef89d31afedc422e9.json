{"sha": "f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZGQ0NTkxY2YwYjRhNWM0ZmI3YzM2ZWY4OWQzMWFmZWRjNDIyZTk=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-11-23T22:03:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-23T22:03:00Z"}, "message": "Merge pull request #2181 from topecongiro/issue-2111\n\nUse vertical layout when there are single line comments in import", "tree": {"sha": "37b7bf9830a597953877d6420811be64f322041c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37b7bf9830a597953877d6420811be64f322041c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaF0WUCRBK7hj4Ov3rIwAAdHIIAAXlOZxjJFFU/KzB3olE6La8\nGYpFDXLJknV9Z42vj5ndy5jMGtPj1004iJjeziAAiDWs6UxKQZgoeVsrsdmKMFBF\nUtuyuS6aTCbwKcEvlrxE15FHlNXMHMndRG6FUHVmY8GBrFkGBt+oyhlBERCoJ2rf\nGm+cyvNEeFH7GE+aeUVEPxPDJKUP9EELzo/f0D6qkiJI54mCxtC/HE5B9O8O65nH\nwr9fnHjG1dqo+p0vkxjQTn8oze4EpEyNF4/OaZJfwkzdUssU7KNtrtomz99QvbHI\nlAHu23JOyVKz8+zQ6Xo1OqlsylcnBuXyk7rRRjZKSedgf0h73iwTPa7gwkJl1Qo=\n=17vK\n-----END PGP SIGNATURE-----\n", "payload": "tree 37b7bf9830a597953877d6420811be64f322041c\nparent 643ef24b4619c6259a3987866093faf042bc3b72\nparent 5314426bc28a8165a00367e8ed3ecf46cfad29a9\nauthor Nick Cameron <nrc@ncameron.org> 1511474580 +1300\ncommitter GitHub <noreply@github.com> 1511474580 +1300\n\nMerge pull request #2181 from topecongiro/issue-2111\n\nUse vertical layout when there are single line comments in import"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9", "html_url": "https://github.com/rust-lang/rust/commit/f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "643ef24b4619c6259a3987866093faf042bc3b72", "url": "https://api.github.com/repos/rust-lang/rust/commits/643ef24b4619c6259a3987866093faf042bc3b72", "html_url": "https://github.com/rust-lang/rust/commit/643ef24b4619c6259a3987866093faf042bc3b72"}, {"sha": "5314426bc28a8165a00367e8ed3ecf46cfad29a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5314426bc28a8165a00367e8ed3ecf46cfad29a9", "html_url": "https://github.com/rust-lang/rust/commit/5314426bc28a8165a00367e8ed3ecf46cfad29a9"}], "stats": {"total": 79, "additions": 72, "deletions": 7}, "files": [{"sha": "bf0d276574eb4ad8a176f28d780fe462ad25900d", "filename": "src/lists.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9", "patch": "@@ -137,10 +137,10 @@ impl ListItem {\n     pub fn has_comment(&self) -> bool {\n         self.pre_comment\n             .as_ref()\n-            .map_or(false, |comment| comment.starts_with(\"//\"))\n+            .map_or(false, |comment| comment.trim_left().starts_with(\"//\"))\n             || self.post_comment\n                 .as_ref()\n-                .map_or(false, |comment| comment.starts_with(\"//\"))\n+                .map_or(false, |comment| comment.trim_left().starts_with(\"//\"))\n     }\n \n     pub fn from_str<S: Into<String>>(s: S) -> ListItem {\n@@ -410,7 +410,9 @@ where\n                         formatting.config.max_width(),\n                     ));\n                 }\n-                let overhead = if let Some(max_width) = *item_max_width {\n+                let overhead = if starts_with_newline(comment) {\n+                    0\n+                } else if let Some(max_width) = *item_max_width {\n                     max_width + 2\n                 } else {\n                     // 1 = space between item and comment.\n@@ -425,12 +427,17 @@ where\n                     || comment.trim().contains('\\n')\n                     || comment.trim().len() > width;\n \n-                rewrite_comment(comment, block_style, comment_shape, formatting.config)\n+                rewrite_comment(\n+                    comment.trim_left(),\n+                    block_style,\n+                    comment_shape,\n+                    formatting.config,\n+                )\n             };\n \n             let mut formatted_comment = rewrite_post_comment(&mut item_max_width)?;\n \n-            if !starts_with_newline(&formatted_comment) {\n+            if !starts_with_newline(&comment) {\n                 let mut comment_alignment =\n                     post_comment_alignment(item_max_width, inner_item.len());\n                 if first_line_width(&formatted_comment) + last_line_width(&result)\n@@ -448,6 +455,9 @@ where\n                 {\n                     result.push(' ');\n                 }\n+            } else {\n+                result.push('\\n');\n+                result.push_str(&indent_str);\n             }\n             if formatted_comment.contains('\\n') {\n                 item_max_width = None;"}, {"sha": "d1b02053e2a0fa1a3ddd95eeb6146edef82fc673", "filename": "tests/source/issue-2111.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9/tests%2Fsource%2Fissue-2111.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9/tests%2Fsource%2Fissue-2111.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-2111.rs?ref=f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9", "patch": "@@ -0,0 +1,28 @@\n+// rustfmt-normalize_comments: false\n+\n+// An import with single line comments.\n+use super::{\n+    SCHEMA_VERSIONS,\n+    LodaModel,\n+    ModelProperties,\n+    StringMap,\n+    ModelSelector,\n+    RequestDescription,\n+    MethodDescription,\n+    ModelBehaviour,\n+    ModelRequestGraph,\n+    DelayChoice,\n+    Holding,\n+    Destinations,\n+    ModelEdges,\n+    Switch,\n+    //    ModelMetaData,\n+    //    Generated,\n+    //    SecondsString,\n+    //    DateString,\n+    //    ModelConfiguration,\n+    //    ModelRequests,\n+    //    RestResponse,\n+    //    RestResponseCode,\n+    //    UniformHolding\n+};"}, {"sha": "27e0e09653eee3a08076480400cdc7bfa55c0a81", "filename": "tests/target/fn-args-with-last-line-comment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9/tests%2Ftarget%2Ffn-args-with-last-line-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9/tests%2Ftarget%2Ffn-args-with-last-line-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-args-with-last-line-comment.rs?ref=f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9", "patch": "@@ -18,7 +18,7 @@ fn foo(\n     arg5: LongTypeName,\n     arg6: LongTypeName,\n     arg7: LongTypeName,\n-       //arg8: LongTypeName,\n+    //arg8: LongTypeName,\n ) {\n     // do stuff\n }"}, {"sha": "13303a736a31b80c1a70720a5c43cf94d7b02061", "filename": "tests/target/issue-2111.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9/tests%2Ftarget%2Fissue-2111.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9/tests%2Ftarget%2Fissue-2111.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2111.rs?ref=f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9", "patch": "@@ -0,0 +1,26 @@\n+// rustfmt-normalize_comments: false\n+\n+// An import with single line comments.\n+use super::{DelayChoice,\n+            Destinations,\n+            Holding,\n+            LodaModel,\n+            MethodDescription,\n+            ModelBehaviour,\n+            ModelEdges,\n+            ModelProperties,\n+            ModelRequestGraph,\n+            ModelSelector,\n+            RequestDescription,\n+            StringMap,\n+            Switch,\n+            //    ModelMetaData,\n+            //    Generated,\n+            //    SecondsString,\n+            //    DateString,\n+            //    ModelConfiguration,\n+            //    ModelRequests,\n+            //    RestResponse,\n+            //    RestResponseCode,\n+            //    UniformHolding\n+            SCHEMA_VERSIONS};"}, {"sha": "5aef092934e1b336bde15ad74777df20098d77e3", "filename": "tests/target/type_alias.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9/tests%2Ftarget%2Ftype_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9/tests%2Ftarget%2Ftype_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftype_alias.rs?ref=f5dd4591cf0b4a5c4fb7c36ef89d31afedc422e9", "patch": "@@ -47,7 +47,8 @@ pub type GenericsFitButNotEqualTest<\n \n pub type CommentTest<\n     // Lifetime\n-    'a, // Type\n+    'a,\n+    // Type\n     T,\n > = ();\n "}]}