{"sha": "5edfb53439e7da99a6a382d6507723f99755c7ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlZGZiNTM0MzllN2RhOTlhNmEzODJkNjUwNzcyM2Y5OTc1NWM3Y2U=", "commit": {"author": {"name": "Anthony Ramine", "email": "n.oxyde@gmail.com", "date": "2018-04-01T22:43:43Z"}, "committer": {"name": "Anthony Ramine", "email": "n.oxyde@gmail.com", "date": "2018-04-08T22:58:52Z"}, "message": "Properly look for uninhabitedness of variants in niche-filling check", "tree": {"sha": "a003e3b202c70d4d78d722130e2313a464c2479a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a003e3b202c70d4d78d722130e2313a464c2479a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5edfb53439e7da99a6a382d6507723f99755c7ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5edfb53439e7da99a6a382d6507723f99755c7ce", "html_url": "https://github.com/rust-lang/rust/commit/5edfb53439e7da99a6a382d6507723f99755c7ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5edfb53439e7da99a6a382d6507723f99755c7ce/comments", "author": {"login": "nox", "id": 123095, "node_id": "MDQ6VXNlcjEyMzA5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/123095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nox", "html_url": "https://github.com/nox", "followers_url": "https://api.github.com/users/nox/followers", "following_url": "https://api.github.com/users/nox/following{/other_user}", "gists_url": "https://api.github.com/users/nox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nox/subscriptions", "organizations_url": "https://api.github.com/users/nox/orgs", "repos_url": "https://api.github.com/users/nox/repos", "events_url": "https://api.github.com/users/nox/events{/privacy}", "received_events_url": "https://api.github.com/users/nox/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nox", "id": 123095, "node_id": "MDQ6VXNlcjEyMzA5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/123095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nox", "html_url": "https://github.com/nox", "followers_url": "https://api.github.com/users/nox/followers", "following_url": "https://api.github.com/users/nox/following{/other_user}", "gists_url": "https://api.github.com/users/nox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nox/subscriptions", "organizations_url": "https://api.github.com/users/nox/orgs", "repos_url": "https://api.github.com/users/nox/repos", "events_url": "https://api.github.com/users/nox/events{/privacy}", "received_events_url": "https://api.github.com/users/nox/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "804d8c88d973d8a2dff5ddad11893a57ccf37956", "url": "https://api.github.com/repos/rust-lang/rust/commits/804d8c88d973d8a2dff5ddad11893a57ccf37956", "html_url": "https://github.com/rust-lang/rust/commit/804d8c88d973d8a2dff5ddad11893a57ccf37956"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "16d28ff4266ffb391c4bfba4865ce6f3ea7a9f7f", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5edfb53439e7da99a6a382d6507723f99755c7ce/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5edfb53439e7da99a6a382d6507723f99755c7ce/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=5edfb53439e7da99a6a382d6507723f99755c7ce", "patch": "@@ -1471,10 +1471,10 @@ impl<'a, 'tcx> LayoutCx<'tcx, TyCtxt<'a, 'tcx, 'tcx>> {\n \n                     // Find one non-ZST variant.\n                     'variants: for (v, fields) in variants.iter().enumerate() {\n+                        if fields.iter().any(|f| f.abi == Abi::Uninhabited) {\n+                            continue 'variants;\n+                        }\n                         for f in fields {\n-                            if f.abi == Abi::Uninhabited {\n-                                continue 'variants;\n-                            }\n                             if !f.is_zst() {\n                                 if dataful_variant.is_none() {\n                                     dataful_variant = Some(v);"}, {"sha": "0bb18d8729a97d048bdce4fae8fba6cebb851f45", "filename": "src/test/run-pass/type-sizes.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5edfb53439e7da99a6a382d6507723f99755c7ce/src%2Ftest%2Frun-pass%2Ftype-sizes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5edfb53439e7da99a6a382d6507723f99755c7ce/src%2Ftest%2Frun-pass%2Ftype-sizes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-sizes.rs?ref=5edfb53439e7da99a6a382d6507723f99755c7ce", "patch": "@@ -42,6 +42,12 @@ enum ReorderedEnum {\n     B(u8, u16, u8),\n }\n \n+enum NicheFilledEnumWithInhabitedVariant {\n+    A(&'static ()),\n+    B(&'static (), !),\n+    C,\n+}\n+\n pub fn main() {\n     assert_eq!(size_of::<u8>(), 1 as usize);\n     assert_eq!(size_of::<u32>(), 4 as usize);\n@@ -67,4 +73,5 @@ pub fn main() {\n     assert_eq!(size_of::<e3>(), 4 as usize);\n     assert_eq!(size_of::<ReorderedStruct>(), 4);\n     assert_eq!(size_of::<ReorderedEnum>(), 6);\n+    assert_eq!(size_of::<NicheFilledEnumWithInhabitedVariant>(), size_of::<&'static ()>());\n }"}]}