{"sha": "ebe5a916b08d5d58b03fe551a95038d9cf964781", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViZTVhOTE2YjA4ZDVkNThiMDNmZTU1MWE5NTAzOGQ5Y2Y5NjQ3ODE=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-05-26T04:18:47Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-05-26T05:48:45Z"}, "message": "Properly encode AnonConst into crate metadata\n\nFixes #68104\n\nPrevious, we were encoding AnonConst as a regular Const, causing us to\ntreat them differently after being deserialized in another compilation\nsession.", "tree": {"sha": "14acc37a4f7b6f8d26c4d8dff3bec2bf27576b9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14acc37a4f7b6f8d26c4d8dff3bec2bf27576b9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebe5a916b08d5d58b03fe551a95038d9cf964781", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl7Mrb4ACgkQtAh+UQ6Y\nsWTONRAAjDo7Zj3ygYzvQRHW+JyAWSM80Qbtrt6uJfkZJ5SgZp8cHEJG2pDdVuSN\nFUT8u8tSiNY+jo6+7TedApujMzALOuQKNit5Nig8TD96a4dU0rFFQzPVt24nYfvu\ngf1lE6UZ5gle7VZUCgTXscY1Cn53oZ5PJri15ziHcE0u4ahbdkQPLEuvwwpuiCpS\nFvbbYJhT4srh0njZ+jGAqfku4PdSowiYBvk3y0C17DKEvg4ZY35UGudc43IqXBIj\nKguPAxHgXtaLVqYl14clo9F7wFpS2qckgk7fLRVN52zA7p3h2umN6LzsO252Tkty\nRFKiRokTXll7Ld6pL4cnVZQYlRu38CXiHifIV34rOiHRV+NfDtRWzY/G0usSbnPH\nPh49X5P6fGgANU/xY95CHtp5Bv8tkj/gq2beCAuCgOIcrDdmrA9P4AA9XHUPINcy\nc8UpnKoQzounmP+fk6/FK7ZzDFmaIKP92QAxKbho9qf6lfrrxrOOEI7Le4SRPf2J\nq7jtaxDgu4mWV6+Joc2sJFNxTlTJhIeNQwl3DyMuTUWD8Hv1JZcOEipPlWlCK0fR\npagtuBtLiPswMpzL4TKkKmSfm4iZPeyIAjcROXxxdMrtsVv5rrK3UtapOB4Y8l0r\n//AL5ADsCS6Svz8jMWY5RVi9ebFkgyRyj0GZfEfrSZEVpPbm97o=\n=252t\n-----END PGP SIGNATURE-----", "payload": "tree 14acc37a4f7b6f8d26c4d8dff3bec2bf27576b9b\nparent 698c5c6d95218735afebdada8a518ab66e0e9213\nauthor Aaron Hill <aa1ronham@gmail.com> 1590466727 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1590472125 -0400\n\nProperly encode AnonConst into crate metadata\n\nFixes #68104\n\nPrevious, we were encoding AnonConst as a regular Const, causing us to\ntreat them differently after being deserialized in another compilation\nsession.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebe5a916b08d5d58b03fe551a95038d9cf964781", "html_url": "https://github.com/rust-lang/rust/commit/ebe5a916b08d5d58b03fe551a95038d9cf964781", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebe5a916b08d5d58b03fe551a95038d9cf964781/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "698c5c6d95218735afebdada8a518ab66e0e9213", "url": "https://api.github.com/repos/rust-lang/rust/commits/698c5c6d95218735afebdada8a518ab66e0e9213", "html_url": "https://github.com/rust-lang/rust/commit/698c5c6d95218735afebdada8a518ab66e0e9213"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "79c4c5214a60e4ccaad4edebd1c7b645618b2993", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ebe5a916b08d5d58b03fe551a95038d9cf964781/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe5a916b08d5d58b03fe551a95038d9cf964781/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=ebe5a916b08d5d58b03fe551a95038d9cf964781", "patch": "@@ -564,6 +564,7 @@ impl MetadataBlob {\n impl EntryKind {\n     fn def_kind(&self) -> DefKind {\n         match *self {\n+            EntryKind::AnonConst(..) => DefKind::AnonConst,\n             EntryKind::Const(..) => DefKind::Const,\n             EntryKind::AssocConst(..) => DefKind::AssocConst,\n             EntryKind::ImmStatic\n@@ -1121,7 +1122,8 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n \n     fn mir_const_qualif(&self, id: DefIndex) -> mir::ConstQualifs {\n         match self.kind(id) {\n-            EntryKind::Const(qualif, _)\n+            EntryKind::AnonConst(qualif, _)\n+            | EntryKind::Const(qualif, _)\n             | EntryKind::AssocConst(\n                 AssocContainer::ImplDefault\n                 | AssocContainer::ImplFinal\n@@ -1341,7 +1343,9 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n \n     fn get_rendered_const(&self, id: DefIndex) -> String {\n         match self.kind(id) {\n-            EntryKind::Const(_, data) | EntryKind::AssocConst(_, _, data) => data.decode(self).0,\n+            EntryKind::AnonConst(_, data)\n+            | EntryKind::Const(_, data)\n+            | EntryKind::AssocConst(_, _, data) => data.decode(self).0,\n             _ => bug!(),\n         }\n     }"}, {"sha": "25166dd79028a14df4fd50d66cd661c1d95f63bf", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ebe5a916b08d5d58b03fe551a95038d9cf964781/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe5a916b08d5d58b03fe551a95038d9cf964781/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=ebe5a916b08d5d58b03fe551a95038d9cf964781", "patch": "@@ -1342,7 +1342,7 @@ impl EncodeContext<'tcx> {\n         let const_data = self.encode_rendered_const_for_body(body_id);\n         let qualifs = self.tcx.mir_const_qualif(def_id);\n \n-        record!(self.tables.kind[def_id.to_def_id()] <- EntryKind::Const(qualifs, const_data));\n+        record!(self.tables.kind[def_id.to_def_id()] <- EntryKind::AnonConst(qualifs, const_data));\n         record!(self.tables.visibility[def_id.to_def_id()] <- ty::Visibility::Public);\n         record!(self.tables.span[def_id.to_def_id()] <- self.tcx.def_span(def_id));\n         self.encode_item_type(def_id.to_def_id());"}, {"sha": "91febbcee10c18dcdaceb0cde91dd81a2ec1907f", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ebe5a916b08d5d58b03fe551a95038d9cf964781/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe5a916b08d5d58b03fe551a95038d9cf964781/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=ebe5a916b08d5d58b03fe551a95038d9cf964781", "patch": "@@ -281,6 +281,7 @@ define_tables! {\n \n #[derive(Copy, Clone, RustcEncodable, RustcDecodable)]\n enum EntryKind {\n+    AnonConst(mir::ConstQualifs, Lazy<RenderedConst>),\n     Const(mir::ConstQualifs, Lazy<RenderedConst>),\n     ImmStatic,\n     MutStatic,"}, {"sha": "fc993d63927c3d65774c770a63630755670984d0", "filename": "src/test/ui/const-generics/auxiliary/impl-const.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ebe5a916b08d5d58b03fe551a95038d9cf964781/src%2Ftest%2Fui%2Fconst-generics%2Fauxiliary%2Fimpl-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe5a916b08d5d58b03fe551a95038d9cf964781/src%2Ftest%2Fui%2Fconst-generics%2Fauxiliary%2Fimpl-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fauxiliary%2Fimpl-const.rs?ref=ebe5a916b08d5d58b03fe551a95038d9cf964781", "patch": "@@ -0,0 +1,9 @@\n+#![feature(const_generics)]\n+\n+pub struct Num<const N: usize>;\n+\n+// Braces around const expression causes crash\n+impl Num<{5}> {\n+    pub fn five(&self) {\n+    }\n+}"}, {"sha": "bda9ce8767d085dc69b7f7d859475deacd0da0d9", "filename": "src/test/ui/const-generics/issue-68104-print-stack-overflow.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ebe5a916b08d5d58b03fe551a95038d9cf964781/src%2Ftest%2Fui%2Fconst-generics%2Fissue-68104-print-stack-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe5a916b08d5d58b03fe551a95038d9cf964781/src%2Ftest%2Fui%2Fconst-generics%2Fissue-68104-print-stack-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-68104-print-stack-overflow.rs?ref=ebe5a916b08d5d58b03fe551a95038d9cf964781", "patch": "@@ -0,0 +1,14 @@\n+// aux-build:impl-const.rs\n+// run-pass\n+\n+#![feature(const_generics)]\n+#![allow(incomplete_features)]\n+\n+extern crate impl_const;\n+\n+use impl_const::*;\n+\n+pub fn main() {\n+    let n = Num::<5>;\n+    n.five();\n+}"}]}