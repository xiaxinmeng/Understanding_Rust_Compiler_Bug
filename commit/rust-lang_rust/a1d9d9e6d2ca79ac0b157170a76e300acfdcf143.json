{"sha": "a1d9d9e6d2ca79ac0b157170a76e300acfdcf143", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExZDlkOWU2ZDJjYTc5YWMwYjE1NzE3MGE3NmUzMDBhY2ZkY2YxNDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-24T18:26:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-24T18:26:33Z"}, "message": "auto merge of #11744 : alexcrichton/rust/issue-5219, r=thestinger\n\nBy default, the compiler and libraries are all still built with rpaths, but this\r\ncan be opted out of with --disable-rpath to ./configure or --no-rpath to rustc.\r\n\r\nCloses #5219", "tree": {"sha": "07b71b4f010534edd794fafd1c0290923f6e2c17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07b71b4f010534edd794fafd1c0290923f6e2c17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1d9d9e6d2ca79ac0b157170a76e300acfdcf143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1d9d9e6d2ca79ac0b157170a76e300acfdcf143", "html_url": "https://github.com/rust-lang/rust/commit/a1d9d9e6d2ca79ac0b157170a76e300acfdcf143", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1d9d9e6d2ca79ac0b157170a76e300acfdcf143/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c805fa70bdbcbce07862d59eaf6524e4306bf46", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c805fa70bdbcbce07862d59eaf6524e4306bf46", "html_url": "https://github.com/rust-lang/rust/commit/8c805fa70bdbcbce07862d59eaf6524e4306bf46"}, {"sha": "e715cdba31ae2bfee603cfe0c56260390ec36f1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e715cdba31ae2bfee603cfe0c56260390ec36f1c", "html_url": "https://github.com/rust-lang/rust/commit/e715cdba31ae2bfee603cfe0c56260390ec36f1c"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "3380356ee3c5053df09321a21b6ae449e2ed2f81", "filename": "Makefile.in", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a1d9d9e6d2ca79ac0b157170a76e300acfdcf143/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/a1d9d9e6d2ca79ac0b157170a76e300acfdcf143/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=a1d9d9e6d2ca79ac0b157170a76e300acfdcf143", "patch": "@@ -124,6 +124,12 @@ endif\n ifdef TRACE\n   CFG_RUSTC_FLAGS += -Z trace\n endif\n+ifdef DISABLE_RPATH\n+# NOTE: make this CFG_RUSTC_FLAGS after stage0 snapshot\n+RUSTFLAGS_STAGE1 += --no-rpath\n+RUSTFLAGS_STAGE2 += --no-rpath\n+RUSTFLAGS_STAGE3 += --no-rpath\n+endif\n \n # The executables crated during this compilation process have no need to include\n # static copies of libstd and libextra. We also generate dynamic versions of all\n@@ -541,8 +547,21 @@ CFGFLAG$(1)_T_$(2)_H_$(3) = stage1\n endif\n endif\n \n+ifdef CFG_DISABLE_RPATH\n+ifeq ($$(OSTYPE_$(3)),apple-darwin)\n+  RPATH_VAR$(1)_T_$(2)_H_$(3) := \\\n+      DYLD_LIBRARY_PATH=\"$$$$DYLD_LIBRARY_PATH:$$(HLIB$(1)_H_$(3))\"\n+else\n+  RPATH_VAR$(1)_T_$(2)_H_$(3) := \\\n+      LD_LIBRARY_PATH=\"$$$$LD_LIBRARY_PATH:$$(HLIB$(1)_H_$(3))\"\n+endif\n+else\n+    RPATH_VAR$(1)_T_$(2)_H_$(3) :=\n+endif\n+\n STAGE$(1)_T_$(2)_H_$(3) := \t\t\t\t\t\t\\\n-\t$$(Q)$$(call CFG_RUN_TARG_$(3),$(1),\t\t\t\t\\\n+\t$$(Q)$$(RPATH_VAR$(1)_T_$(2)_H_$(3))                            \\\n+\t\t$$(call CFG_RUN_TARG_$(3),$(1),\t\t\t\t\\\n \t\t$$(CFG_VALGRIND_COMPILE$(1)) \t\t\t\\\n \t\t$$(HBIN$(1)_H_$(3))/rustc$$(X_$(3))\t\t\t\\\n \t\t--cfg $$(CFGFLAG$(1)_T_$(2)_H_$(3))\t\t\t\\"}, {"sha": "8a9daabaf61779da95bdc45d501487983e433fc5", "filename": "configure", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a1d9d9e6d2ca79ac0b157170a76e300acfdcf143/configure", "raw_url": "https://github.com/rust-lang/rust/raw/a1d9d9e6d2ca79ac0b157170a76e300acfdcf143/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=a1d9d9e6d2ca79ac0b157170a76e300acfdcf143", "patch": "@@ -382,6 +382,7 @@ opt ccache 0 \"invoke gcc/clang via ccache to reuse object files between builds\"\n opt local-rust 0 \"use an installed rustc rather than downloading a snapshot\"\n opt pax-flags 0 \"apply PaX flags to rustc binaries (required for GRSecurity/PaX-patched kernels)\"\n opt inject-std-version 1 \"inject the current compiler version of libstd into programs\"\n+opt rpath 1 \"build rpaths into rustc itself\"\n valopt prefix \"/usr/local\" \"set installation prefix\"\n valopt local-rust-root \"/usr/local\" \"set prefix for local rust binary\"\n valopt llvm-root \"\" \"set LLVM root\""}, {"sha": "a57f1296969f1572a50cbbef662adbba8def9da5", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a1d9d9e6d2ca79ac0b157170a76e300acfdcf143/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1d9d9e6d2ca79ac0b157170a76e300acfdcf143/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=a1d9d9e6d2ca79ac0b157170a76e300acfdcf143", "patch": "@@ -1089,8 +1089,10 @@ fn link_args(sess: Session,\n             args.push(~\"-dynamiclib\");\n             args.push(~\"-Wl,-dylib\");\n             // FIXME (#9639): This needs to handle non-utf8 paths\n-            args.push(~\"-Wl,-install_name,@rpath/\" +\n-                      out_filename.filename_str().unwrap());\n+            if !sess.opts.no_rpath {\n+                args.push(~\"-Wl,-install_name,@rpath/\" +\n+                          out_filename.filename_str().unwrap());\n+            }\n         } else {\n             args.push(~\"-shared\")\n         }\n@@ -1108,7 +1110,9 @@ fn link_args(sess: Session,\n     // FIXME (#2397): At some point we want to rpath our guesses as to\n     // where extern libraries might live, based on the\n     // addl_lib_search_paths\n-    args.push_all(rpath::get_rpath_flags(sess, out_filename));\n+    if !sess.opts.no_rpath {\n+        args.push_all(rpath::get_rpath_flags(sess, out_filename));\n+    }\n \n     // Finally add all the linker arguments provided on the command line along\n     // with any #[link_args] attributes found inside the crate"}, {"sha": "a2a0660d57510c9215865cd25802a3dc9c28ed38", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a1d9d9e6d2ca79ac0b157170a76e300acfdcf143/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1d9d9e6d2ca79ac0b157170a76e300acfdcf143/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=a1d9d9e6d2ca79ac0b157170a76e300acfdcf143", "patch": "@@ -734,6 +734,7 @@ pub fn build_session_options(binary: ~str,\n     let parse_only = matches.opt_present(\"parse-only\");\n     let no_trans = matches.opt_present(\"no-trans\");\n     let no_analysis = matches.opt_present(\"no-analysis\");\n+    let no_rpath = matches.opt_present(\"no-rpath\");\n \n     let lint_levels = [lint::allow, lint::warn,\n                        lint::deny, lint::forbid];\n@@ -888,6 +889,7 @@ pub fn build_session_options(binary: ~str,\n         parse_only: parse_only,\n         no_trans: no_trans,\n         no_analysis: no_analysis,\n+        no_rpath: no_rpath,\n         debugging_opts: debugging_opts,\n         android_cross_path: android_cross_path,\n         write_dependency_info: write_dependency_info,\n@@ -995,6 +997,7 @@ pub fn optgroups() -> ~[getopts::groups::OptGroup] {\n                         \\\"list\\\" will list all of the available passes\", \"NAMES\"),\n   optopt(\"\", \"llvm-args\", \"A list of arguments to pass to llvm, comma \\\n                            separated\", \"ARGS\"),\n+  optflag(\"\", \"no-rpath\", \"Disables setting the rpath in libs/exes\"),\n   optopt( \"\",  \"out-dir\",\n                         \"Write output to compiler-chosen filename\n                           in <dir>\", \"DIR\"),"}, {"sha": "38fa85fe8089a4b131a4ff8d10e88f9ec21dd351", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a1d9d9e6d2ca79ac0b157170a76e300acfdcf143/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1d9d9e6d2ca79ac0b157170a76e300acfdcf143/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=a1d9d9e6d2ca79ac0b157170a76e300acfdcf143", "patch": "@@ -170,6 +170,7 @@ pub struct Options {\n     parse_only: bool,\n     no_trans: bool,\n     no_analysis: bool,\n+    no_rpath: bool,\n     debugging_opts: u64,\n     android_cross_path: Option<~str>,\n     /// Whether to write dependency files. It's (enabled, optional filename).\n@@ -391,6 +392,7 @@ pub fn basic_options() -> @Options {\n         parse_only: false,\n         no_trans: false,\n         no_analysis: false,\n+        no_rpath: false,\n         debugging_opts: 0,\n         android_cross_path: None,\n         write_dependency_info: (false, None),"}]}