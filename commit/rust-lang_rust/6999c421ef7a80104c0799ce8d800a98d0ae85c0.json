{"sha": "6999c421ef7a80104c0799ce8d800a98d0ae85c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5OTljNDIxZWY3YTgwMTA0YzA3OTljZThkODAwYTk4ZDBhZTg1YzA=", "commit": {"author": {"name": "Steven Allen", "email": "steven@stebalien.com", "date": "2015-10-02T22:41:06Z"}, "committer": {"name": "Steven Allen", "email": "steven@stebalien.com", "date": "2015-10-02T22:41:06Z"}, "message": "libcore: Chain must exhaust a before b.\n\npart of #28810", "tree": {"sha": "e645a915ec11d288800eb9a888a1cdfef4e9996b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e645a915ec11d288800eb9a888a1cdfef4e9996b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6999c421ef7a80104c0799ce8d800a98d0ae85c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6999c421ef7a80104c0799ce8d800a98d0ae85c0", "html_url": "https://github.com/rust-lang/rust/commit/6999c421ef7a80104c0799ce8d800a98d0ae85c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6999c421ef7a80104c0799ce8d800a98d0ae85c0/comments", "author": {"login": "Stebalien", "id": 310393, "node_id": "MDQ6VXNlcjMxMDM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/310393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stebalien", "html_url": "https://github.com/Stebalien", "followers_url": "https://api.github.com/users/Stebalien/followers", "following_url": "https://api.github.com/users/Stebalien/following{/other_user}", "gists_url": "https://api.github.com/users/Stebalien/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stebalien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stebalien/subscriptions", "organizations_url": "https://api.github.com/users/Stebalien/orgs", "repos_url": "https://api.github.com/users/Stebalien/repos", "events_url": "https://api.github.com/users/Stebalien/events{/privacy}", "received_events_url": "https://api.github.com/users/Stebalien/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Stebalien", "id": 310393, "node_id": "MDQ6VXNlcjMxMDM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/310393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stebalien", "html_url": "https://github.com/Stebalien", "followers_url": "https://api.github.com/users/Stebalien/followers", "following_url": "https://api.github.com/users/Stebalien/following{/other_user}", "gists_url": "https://api.github.com/users/Stebalien/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stebalien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stebalien/subscriptions", "organizations_url": "https://api.github.com/users/Stebalien/orgs", "repos_url": "https://api.github.com/users/Stebalien/repos", "events_url": "https://api.github.com/users/Stebalien/events{/privacy}", "received_events_url": "https://api.github.com/users/Stebalien/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef07d7dd40e33d7af95c7b00717503730ce69c11", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef07d7dd40e33d7af95c7b00717503730ce69c11", "html_url": "https://github.com/rust-lang/rust/commit/ef07d7dd40e33d7af95c7b00717503730ce69c11"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "bd24cd4609e4bd13f30eb834053d65756a9b62b6", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6999c421ef7a80104c0799ce8d800a98d0ae85c0/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6999c421ef7a80104c0799ce8d800a98d0ae85c0/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=6999c421ef7a80104c0799ce8d800a98d0ae85c0", "patch": "@@ -1559,7 +1559,12 @@ impl<A, B> Iterator for Chain<A, B> where\n     #[inline]\n     fn last(self) -> Option<A::Item> {\n         match self.state {\n-            ChainState::Both => self.b.last().or(self.a.last()),\n+            ChainState::Both => {\n+                // Must exhaust a before b.\n+                let a_last = self.a.last();\n+                let b_last = self.b.last();\n+                b_last.or(a_last)\n+            },\n             ChainState::Front => self.a.last(),\n             ChainState::Back => self.b.last()\n         }"}]}