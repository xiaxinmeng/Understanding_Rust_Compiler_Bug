{"sha": "cb691b7ed9f0b6c37828d85126b2aaed4c2b57af", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiNjkxYjdlZDlmMGI2YzM3ODI4ZDg1MTI2YjJhYWVkNGMyYjU3YWY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-03T10:42:38Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-03T10:42:38Z"}, "message": "comment on mut-to-shr transmutes", "tree": {"sha": "2acd6b01a865bfa9e540a75919d65f3769dfce77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2acd6b01a865bfa9e540a75919d65f3769dfce77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb691b7ed9f0b6c37828d85126b2aaed4c2b57af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb691b7ed9f0b6c37828d85126b2aaed4c2b57af", "html_url": "https://github.com/rust-lang/rust/commit/cb691b7ed9f0b6c37828d85126b2aaed4c2b57af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb691b7ed9f0b6c37828d85126b2aaed4c2b57af/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ac5d988e237570e24208a05f65bf0b06137d101", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ac5d988e237570e24208a05f65bf0b06137d101", "html_url": "https://github.com/rust-lang/rust/commit/8ac5d988e237570e24208a05f65bf0b06137d101"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "afc76fa375bc3dc823aa8d4fd2147e4c2baff1d5", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cb691b7ed9f0b6c37828d85126b2aaed4c2b57af/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb691b7ed9f0b6c37828d85126b2aaed4c2b57af/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=cb691b7ed9f0b6c37828d85126b2aaed4c2b57af", "patch": "@@ -462,7 +462,8 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for super::MiriEvalContext<'a, 'mir, '\n                 // also using `var`, and that would be okay.\n             }\n             (UsageKind::Read, Borrow::Mut(Mut::Uniq(_))) => {\n-                // A mut got transmuted to shr.  The mut borrow must be reactivatable.\n+                // A mut got transmuted to shr.  Can happen even from compiler transformations:\n+                // `&*x` gets optimized to `x` even when `x` is a `&mut`.\n             }\n             (UsageKind::Write, Borrow::Frz(_)) => {\n                 // This is just invalid."}]}