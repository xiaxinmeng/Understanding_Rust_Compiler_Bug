{"sha": "5d79870aec85d2a2e15b9cac808cae21b5bcbce9", "node_id": "C_kwDOAAsO6NoAKDVkNzk4NzBhZWM4NWQyYTJlMTViOWNhYzgwOGNhZTIxYjViY2JjZTk", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-10-05T21:24:40Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-10-05T21:24:40Z"}, "message": "Document the valid values for `HandleOrNull` and `HandleOrInvalid`.", "tree": {"sha": "e0c13be49359fa0957f55a766be4cf786a55b1e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0c13be49359fa0957f55a766be4cf786a55b1e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d79870aec85d2a2e15b9cac808cae21b5bcbce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d79870aec85d2a2e15b9cac808cae21b5bcbce9", "html_url": "https://github.com/rust-lang/rust/commit/5d79870aec85d2a2e15b9cac808cae21b5bcbce9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d79870aec85d2a2e15b9cac808cae21b5bcbce9/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e102c2a3f2d25fdee6793b45b1d12e14f0c16f93", "url": "https://api.github.com/repos/rust-lang/rust/commits/e102c2a3f2d25fdee6793b45b1d12e14f0c16f93", "html_url": "https://github.com/rust-lang/rust/commit/e102c2a3f2d25fdee6793b45b1d12e14f0c16f93"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "1527f5b6b07e0d05afc2b78fe6b4784b59644889", "filename": "library/std/src/os/windows/io/handle.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5d79870aec85d2a2e15b9cac808cae21b5bcbce9/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d79870aec85d2a2e15b9cac808cae21b5bcbce9/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs?ref=5d79870aec85d2a2e15b9cac808cae21b5bcbce9", "patch": "@@ -68,6 +68,10 @@ pub struct OwnedHandle {\n /// `NULL`. This ensures that such FFI calls cannot start using the handle without\n /// checking for `NULL` first.\n ///\n+/// This type concerns any value other than `NULL` to be valid, including `INVALID_HANDLE_VALUE`.\n+/// This is because APIs that use `NULL` as their sentry value don't treat `INVALID_HANDLE_VALUE`\n+/// as special.\n+///\n /// If this holds a valid handle, it will close the handle on drop.\n #[repr(transparent)]\n #[unstable(feature = \"io_safety\", issue = \"87074\")]\n@@ -84,6 +88,10 @@ pub struct HandleOrNull(OwnedHandle);\n /// `INVALID_HANDLE_VALUE`. This ensures that such FFI calls cannot start using the handle without\n /// checking for `INVALID_HANDLE_VALUE` first.\n ///\n+/// This type concerns any value other than `INVALID_HANDLE_VALUE` to be valid, including `NULL`.\n+/// This is because APIs that use `INVALID_HANDLE_VALUE` as their sentry value may return `NULL`\n+/// under `windows_subsystem = \"windows\"` or other situations where I/O devices are detached.\n+///\n /// If this holds a valid handle, it will close the handle on drop.\n #[repr(transparent)]\n #[unstable(feature = \"io_safety\", issue = \"87074\")]"}]}