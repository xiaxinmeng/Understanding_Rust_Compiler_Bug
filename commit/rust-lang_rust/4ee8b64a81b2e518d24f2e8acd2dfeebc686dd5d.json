{"sha": "4ee8b64a81b2e518d24f2e8acd2dfeebc686dd5d", "node_id": "C_kwDOAAsO6NoAKDRlZThiNjRhODFiMmU1MThkMjRmMmU4YWNkMmRmZWViYzY4NmRkNWQ", "commit": {"author": {"name": "Pyry Kontio", "email": "pyry.kontio@drasa.eu", "date": "2022-03-31T02:27:23Z"}, "committer": {"name": "Pyry Kontio", "email": "pyry.kontio@drasa.eu", "date": "2022-03-31T02:27:23Z"}, "message": "Improve wording of \"NaN as a special value\" top level explanation", "tree": {"sha": "cc995286c463f1e64c1e26d5204ead72786bb54e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc995286c463f1e64c1e26d5204ead72786bb54e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ee8b64a81b2e518d24f2e8acd2dfeebc686dd5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ee8b64a81b2e518d24f2e8acd2dfeebc686dd5d", "html_url": "https://github.com/rust-lang/rust/commit/4ee8b64a81b2e518d24f2e8acd2dfeebc686dd5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ee8b64a81b2e518d24f2e8acd2dfeebc686dd5d/comments", "author": {"login": "golddranks", "id": 2675542, "node_id": "MDQ6VXNlcjI2NzU1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2675542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/golddranks", "html_url": "https://github.com/golddranks", "followers_url": "https://api.github.com/users/golddranks/followers", "following_url": "https://api.github.com/users/golddranks/following{/other_user}", "gists_url": "https://api.github.com/users/golddranks/gists{/gist_id}", "starred_url": "https://api.github.com/users/golddranks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/golddranks/subscriptions", "organizations_url": "https://api.github.com/users/golddranks/orgs", "repos_url": "https://api.github.com/users/golddranks/repos", "events_url": "https://api.github.com/users/golddranks/events{/privacy}", "received_events_url": "https://api.github.com/users/golddranks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "golddranks", "id": 2675542, "node_id": "MDQ6VXNlcjI2NzU1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2675542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/golddranks", "html_url": "https://github.com/golddranks", "followers_url": "https://api.github.com/users/golddranks/followers", "following_url": "https://api.github.com/users/golddranks/following{/other_user}", "gists_url": "https://api.github.com/users/golddranks/gists{/gist_id}", "starred_url": "https://api.github.com/users/golddranks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/golddranks/subscriptions", "organizations_url": "https://api.github.com/users/golddranks/orgs", "repos_url": "https://api.github.com/users/golddranks/repos", "events_url": "https://api.github.com/users/golddranks/events{/privacy}", "received_events_url": "https://api.github.com/users/golddranks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fff5a06f282ae6927fca1fbf8e8ed437e6772b9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fff5a06f282ae6927fca1fbf8e8ed437e6772b9e", "html_url": "https://github.com/rust-lang/rust/commit/fff5a06f282ae6927fca1fbf8e8ed437e6772b9e"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "ab4bb0f26696b2c1dd841027213ebe8a31b8c474", "filename": "library/core/src/primitive_docs.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8b64a81b2e518d24f2e8acd2dfeebc686dd5d/library%2Fcore%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8b64a81b2e518d24f2e8acd2dfeebc686dd5d/library%2Fcore%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fprimitive_docs.rs?ref=4ee8b64a81b2e518d24f2e8acd2dfeebc686dd5d", "patch": "@@ -978,14 +978,15 @@ mod prim_tuple {}\n /// - [NaN (not a number)](#associatedconstant.NAN): this value results from\n ///   calculations like `(-1.0).sqrt()`. NaN has some potentially unexpected\n ///   behavior:\n-///   - It is unequal to any float, including itself!\n+///   - It is unequal to any float, including itself! This is the reason `f32`\n+///     doesn't implement the `Eq` trait.\n ///   - It is also neither smaller nor greater than any float, making it\n-///     impossible to sort by the default comparison operation. This is the\n-///     reason `f32` doesn't implement the `Ord` and `Eq` traits.\n+///     impossible to sort by the default comparison operation, which is the\n+///     reason `f32` doesn't implement the `Ord` trait.\n ///   - It is also considered *infectious* as almost all calculations where one\n ///     of the operands is NaN will also result in NaN. The explanations on this\n ///     page only explicitly document behavior on NaN operands if this default\n-///     is *not* observed by the operation.\n+///     is deviated from.\n ///   - Lastly, there are multiple bit patterns that are considered NaN.\n ///     Rust does not currently guarantee that the bit patterns of NaN are\n ///     preserved over arithmetic operations,"}, {"sha": "ab4bb0f26696b2c1dd841027213ebe8a31b8c474", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8b64a81b2e518d24f2e8acd2dfeebc686dd5d/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8b64a81b2e518d24f2e8acd2dfeebc686dd5d/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=4ee8b64a81b2e518d24f2e8acd2dfeebc686dd5d", "patch": "@@ -978,14 +978,15 @@ mod prim_tuple {}\n /// - [NaN (not a number)](#associatedconstant.NAN): this value results from\n ///   calculations like `(-1.0).sqrt()`. NaN has some potentially unexpected\n ///   behavior:\n-///   - It is unequal to any float, including itself!\n+///   - It is unequal to any float, including itself! This is the reason `f32`\n+///     doesn't implement the `Eq` trait.\n ///   - It is also neither smaller nor greater than any float, making it\n-///     impossible to sort by the default comparison operation. This is the\n-///     reason `f32` doesn't implement the `Ord` and `Eq` traits.\n+///     impossible to sort by the default comparison operation, which is the\n+///     reason `f32` doesn't implement the `Ord` trait.\n ///   - It is also considered *infectious* as almost all calculations where one\n ///     of the operands is NaN will also result in NaN. The explanations on this\n ///     page only explicitly document behavior on NaN operands if this default\n-///     is *not* observed by the operation.\n+///     is deviated from.\n ///   - Lastly, there are multiple bit patterns that are considered NaN.\n ///     Rust does not currently guarantee that the bit patterns of NaN are\n ///     preserved over arithmetic operations,"}]}