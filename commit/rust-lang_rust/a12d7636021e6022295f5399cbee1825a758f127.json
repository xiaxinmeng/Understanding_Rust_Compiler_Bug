{"sha": "a12d7636021e6022295f5399cbee1825a758f127", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExMmQ3NjM2MDIxZTYwMjIyOTVmNTM5OWNiZWUxODI1YTc1OGYxMjc=", "commit": {"author": {"name": "Andrea Pretto", "email": "eulerdisk@gmail.com", "date": "2016-10-05T20:05:54Z"}, "committer": {"name": "Andrea Pretto", "email": "eulerdisk@gmail.com", "date": "2016-10-05T20:05:54Z"}, "message": "Fixes requested by @michaelwoerister", "tree": {"sha": "35e1c0f575aeb5aa58312616c1abe6da0e48d57a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35e1c0f575aeb5aa58312616c1abe6da0e48d57a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a12d7636021e6022295f5399cbee1825a758f127", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a12d7636021e6022295f5399cbee1825a758f127", "html_url": "https://github.com/rust-lang/rust/commit/a12d7636021e6022295f5399cbee1825a758f127", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a12d7636021e6022295f5399cbee1825a758f127/comments", "author": {"login": "eulerdisk", "id": 10089822, "node_id": "MDQ6VXNlcjEwMDg5ODIy", "avatar_url": "https://avatars.githubusercontent.com/u/10089822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eulerdisk", "html_url": "https://github.com/eulerdisk", "followers_url": "https://api.github.com/users/eulerdisk/followers", "following_url": "https://api.github.com/users/eulerdisk/following{/other_user}", "gists_url": "https://api.github.com/users/eulerdisk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eulerdisk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eulerdisk/subscriptions", "organizations_url": "https://api.github.com/users/eulerdisk/orgs", "repos_url": "https://api.github.com/users/eulerdisk/repos", "events_url": "https://api.github.com/users/eulerdisk/events{/privacy}", "received_events_url": "https://api.github.com/users/eulerdisk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eulerdisk", "id": 10089822, "node_id": "MDQ6VXNlcjEwMDg5ODIy", "avatar_url": "https://avatars.githubusercontent.com/u/10089822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eulerdisk", "html_url": "https://github.com/eulerdisk", "followers_url": "https://api.github.com/users/eulerdisk/followers", "following_url": "https://api.github.com/users/eulerdisk/following{/other_user}", "gists_url": "https://api.github.com/users/eulerdisk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eulerdisk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eulerdisk/subscriptions", "organizations_url": "https://api.github.com/users/eulerdisk/orgs", "repos_url": "https://api.github.com/users/eulerdisk/repos", "events_url": "https://api.github.com/users/eulerdisk/events{/privacy}", "received_events_url": "https://api.github.com/users/eulerdisk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "801a580aa8c0eca290fd7ac4ccaf65583e883f08", "url": "https://api.github.com/repos/rust-lang/rust/commits/801a580aa8c0eca290fd7ac4ccaf65583e883f08", "html_url": "https://github.com/rust-lang/rust/commit/801a580aa8c0eca290fd7ac4ccaf65583e883f08"}], "stats": {"total": 63, "additions": 32, "deletions": 31}, "files": [{"sha": "8eccf65e71eb694546fd515a774d511e4e66a2a7", "filename": "src/test/incremental/hashes/trait_defs.rs", "status": "modified", "additions": 32, "deletions": 31, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/a12d7636021e6022295f5399cbee1825a758f127/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a12d7636021e6022295f5399cbee1825a758f127/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs?ref=a12d7636021e6022295f5399cbee1825a758f127", "patch": "@@ -84,6 +84,7 @@ trait TraitChangeMethodName {\n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitChangeMethodName {\n     fn methodChanged();\n@@ -197,7 +198,7 @@ trait TraitChangeMethodParameterType {\n // Change order of method parameters ----------------------------------------------\n #[cfg(cfail1)]\n trait TraitChangeMethodParametersOrder {\n-    fn method(a: i32, b: i32);\n+    fn method(a: i32, b: i64);\n }\n \n #[cfg(not(cfail1))]\n@@ -206,7 +207,7 @@ trait TraitChangeMethodParametersOrder {\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitChangeMethodParametersOrder {\n-    fn method(b: i32, a: i32);\n+    fn method(b: i64, a: i32);\n }\n \n \n@@ -385,8 +386,8 @@ trait TraitAddLifetimeParameterToMethod {\n \n \n // dummy trait for bound\n-trait ReferenceTrait0 { }\n-trait ReferenceTrait1 { }\n+trait ReferencedTrait0 { }\n+trait ReferencedTrait1 { }\n \n // Add trait bound to method type parameter ---------------------------------------\n #[cfg(cfail1)]\n@@ -400,7 +401,7 @@ trait TraitAddTraitBoundToMethodTypeParameter {\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddTraitBoundToMethodTypeParameter {\n-    fn method<T: ReferenceTrait0>();\n+    fn method<T: ReferencedTrait0>();\n }\n \n \n@@ -442,7 +443,7 @@ trait TraitAddLifetimeBoundToMethodTypeParameter {\n // Add second trait bound to method type parameter --------------------------------\n #[cfg(cfail1)]\n trait TraitAddSecondTraitBoundToMethodTypeParameter {\n-    fn method<T: ReferenceTrait0>();\n+    fn method<T: ReferencedTrait0>();\n }\n \n #[cfg(not(cfail1))]\n@@ -451,7 +452,7 @@ trait TraitAddSecondTraitBoundToMethodTypeParameter {\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondTraitBoundToMethodTypeParameter {\n-    fn method<T: ReferenceTrait0 + ReferenceTrait1>();\n+    fn method<T: ReferencedTrait0 + ReferencedTrait1>();\n }\n \n \n@@ -476,7 +477,7 @@ trait TraitAddSecondBuiltinBoundToMethodTypeParameter {\n // Add second lifetime bound to method type parameter -----------------------------\n #[cfg(cfail1)]\n trait TraitAddSecondLifetimeBoundToMethodTypeParameter {\n-    fn method<'a, 'b, 'c>(a: &'a u32, b: &'b u32);\n+    fn method<'a, 'b, 'c: 'a>(a: &'a u32, b: &'b u32);\n }\n \n #[cfg(not(cfail1))]\n@@ -523,7 +524,7 @@ trait TraitAddTraitBoundToAssociatedType {\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddTraitBoundToAssociatedType {\n-    type Associated: ReferenceTrait0;\n+    type Associated: ReferencedTrait0;\n \n     fn mathod();\n }\n@@ -642,7 +643,7 @@ trait TraitAddSuperTrait { }\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-trait TraitAddSuperTrait : ReferenceTrait0 { }\n+trait TraitAddSuperTrait : ReferencedTrait0 { }\n \n \n \n@@ -674,14 +675,14 @@ trait TraitAddStaticLifetimeBound : 'static { }\n \n // Add super trait as second bound ------------------------------------------------\n #[cfg(cfail1)]\n-trait TraitAddTraitAsSecondBound : ReferenceTrait0 { }\n+trait TraitAddTraitAsSecondBound : ReferencedTrait0 { }\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-trait TraitAddTraitAsSecondBound : ReferenceTrait0 + ReferenceTrait1 { }\n+trait TraitAddTraitAsSecondBound : ReferencedTrait0 + ReferencedTrait1 { }\n \n #[cfg(cfail1)]\n trait TraitAddTraitAsSecondBoundFromBuiltin : Send { }\n@@ -691,20 +692,20 @@ trait TraitAddTraitAsSecondBoundFromBuiltin : Send { }\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-trait TraitAddTraitAsSecondBoundFromBuiltin : Send + ReferenceTrait0 { }\n+trait TraitAddTraitAsSecondBoundFromBuiltin : Send + ReferencedTrait0 { }\n \n \n \n // Add builtin bound as second bound ----------------------------------------------\n #[cfg(cfail1)]\n-trait TraitAddBuiltinBoundAsSecondBound : ReferenceTrait0 { }\n+trait TraitAddBuiltinBoundAsSecondBound : ReferencedTrait0 { }\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-trait TraitAddBuiltinBoundAsSecondBound : ReferenceTrait0 + Send { }\n+trait TraitAddBuiltinBoundAsSecondBound : ReferencedTrait0 + Send { }\n \n #[cfg(cfail1)]\n trait TraitAddBuiltinBoundAsSecondBoundFromBuiltin : Send { }\n@@ -720,14 +721,14 @@ trait TraitAddBuiltinBoundAsSecondBoundFromBuiltin: Send + Copy { }\n \n // Add 'static bounds as second bound ---------------------------------------------\n #[cfg(cfail1)]\n-trait TraitAddStaticBoundAsSecondBound : ReferenceTrait0 { }\n+trait TraitAddStaticBoundAsSecondBound : ReferencedTrait0 { }\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-trait TraitAddStaticBoundAsSecondBound : ReferenceTrait0 + 'static { }\n+trait TraitAddStaticBoundAsSecondBound : ReferencedTrait0 + 'static { }\n \n #[cfg(cfail1)]\n trait TraitAddStaticBoundAsSecondBoundFromBuiltin : Send { }\n@@ -776,7 +777,7 @@ trait TraitAddTraitBoundToTypeParameterOfTrait<T> { }\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-trait TraitAddTraitBoundToTypeParameterOfTrait<T: ReferenceTrait0> { }\n+trait TraitAddTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0> { }\n \n \n \n@@ -847,14 +848,14 @@ trait TraitAddSecondLifetimeParameterToTrait<'a, 'b> { }\n \n // Add second trait bound to type parameter of trait ------------------------------\n #[cfg(cfail1)]\n-trait TraitAddSecondTraitBoundToTypeParameterOfTrait<T: ReferenceTrait0> { }\n+trait TraitAddSecondTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0> { }\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-trait TraitAddSecondTraitBoundToTypeParameterOfTrait<T: ReferenceTrait0 + ReferenceTrait1> { }\n+trait TraitAddSecondTraitBoundToTypeParameterOfTrait<T: ReferencedTrait0 + ReferencedTrait1> { }\n \n \n \n@@ -912,7 +913,7 @@ trait TraitAddTraitBoundToTypeParameterOfTraitWhere<T> { }\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n-trait TraitAddTraitBoundToTypeParameterOfTraitWhere<T> where T: ReferenceTrait0 { }\n+trait TraitAddTraitBoundToTypeParameterOfTraitWhere<T> where T: ReferencedTrait0 { }\n \n \n \n@@ -957,15 +958,15 @@ trait TraitAddBuiltinBoundToTypeParameterOfTraitWhere<T> where T: Send { }\n \n // Add second trait bound to type parameter of trait in where clause---------------\n #[cfg(cfail1)]\n-trait TraitAddSecondTraitBoundToTypeParameterOfTraitWhere<T> where T: ReferenceTrait0 { }\n+trait TraitAddSecondTraitBoundToTypeParameterOfTraitWhere<T> where T: ReferencedTrait0 { }\n \n #[cfg(not(cfail1))]\n #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n #[rustc_metadata_dirty(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n trait TraitAddSecondTraitBoundToTypeParameterOfTraitWhere<T>\n-    where T: ReferenceTrait0 + ReferenceTrait1 { }\n+    where T: ReferencedTrait0 + ReferencedTrait1 { }\n \n \n \n@@ -1049,9 +1050,9 @@ mod change_method_parameter_type_indirectly_by_use {\n // Change trait bound of method type parameter indirectly by modifying a use statement\n mod change_method_parameter_type_bound_indirectly_by_use {\n     #[cfg(cfail1)]\n-    use super::ReferenceTrait0 as Bound;\n+    use super::ReferencedTrait0 as Bound;\n     #[cfg(not(cfail1))]\n-    use super::ReferenceTrait1 as Bound;\n+    use super::ReferencedTrait1 as Bound;\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n@@ -1068,9 +1069,9 @@ mod change_method_parameter_type_bound_indirectly_by_use {\n // by modifying a use statement\n mod change_method_parameter_type_bound_indirectly_by_use_where {\n     #[cfg(cfail1)]\n-    use super::ReferenceTrait0 as Bound;\n+    use super::ReferencedTrait0 as Bound;\n     #[cfg(not(cfail1))]\n-    use super::ReferenceTrait1 as Bound;\n+    use super::ReferencedTrait1 as Bound;\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n@@ -1086,9 +1087,9 @@ mod change_method_parameter_type_bound_indirectly_by_use_where {\n // Change trait bound of trait type parameter indirectly by modifying a use statement\n mod change_method_type_parameter_bound_indirectly {\n     #[cfg(cfail1)]\n-    use super::ReferenceTrait0 as Bound;\n+    use super::ReferencedTrait0 as Bound;\n     #[cfg(not(cfail1))]\n-    use super::ReferenceTrait1 as Bound;\n+    use super::ReferencedTrait1 as Bound;\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n@@ -1105,9 +1106,9 @@ mod change_method_type_parameter_bound_indirectly {\n // by modifying a use statement\n mod change_method_type_parameter_bound_indirectly_where {\n     #[cfg(cfail1)]\n-    use super::ReferenceTrait0 as Bound;\n+    use super::ReferencedTrait0 as Bound;\n     #[cfg(not(cfail1))]\n-    use super::ReferenceTrait1 as Bound;\n+    use super::ReferencedTrait1 as Bound;\n \n     #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n     #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]"}]}