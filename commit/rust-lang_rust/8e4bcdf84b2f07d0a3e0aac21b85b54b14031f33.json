{"sha": "8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33", "node_id": "C_kwDOAAsO6NoAKDhlNGJjZGY4NGIyZjA3ZDBhM2UwYWFjMjFiODViNTRiMTQwMzFmMzM", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-01T22:46:08Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-01T23:15:46Z"}, "message": "List all cases explicitly in `Doc{Folder,Visitor}`", "tree": {"sha": "4a0822b3dc11e58e0c5b177c90453e6d0e6621b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a0822b3dc11e58e0c5b177c90453e6d0e6621b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33", "html_url": "https://github.com/rust-lang/rust/commit/8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c03cab3fd07ab070d6ec0fa77655ad8d3a85a372", "url": "https://api.github.com/repos/rust-lang/rust/commits/c03cab3fd07ab070d6ec0fa77655ad8d3a85a372", "html_url": "https://github.com/rust-lang/rust/commit/c03cab3fd07ab070d6ec0fa77655ad8d3a85a372"}], "stats": {"total": 51, "additions": 45, "deletions": 6}, "files": [{"sha": "65cd71307aa3f987be090d453666f395609fc37a", "filename": "src/librustdoc/fold.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33/src%2Flibrustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33/src%2Flibrustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ffold.rs?ref=8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33", "patch": "@@ -60,8 +60,26 @@ crate trait DocFolder: Sized {\n                 }\n                 Variant::CLike => VariantItem(Variant::CLike),\n             },\n-            // FIXME: list all cases explicitly\n-            x => x,\n+            ExternCrateItem { src: _ }\n+            | ImportItem(_)\n+            | FunctionItem(_)\n+            | TypedefItem(_, _)\n+            | OpaqueTyItem(_)\n+            | StaticItem(_)\n+            | ConstantItem(_)\n+            | TraitAliasItem(_)\n+            | TyMethodItem(_)\n+            | MethodItem(_, _)\n+            | StructFieldItem(_)\n+            | ForeignFunctionItem(_)\n+            | ForeignStaticItem(_)\n+            | ForeignTypeItem\n+            | MacroItem(_)\n+            | ProcMacroItem(_)\n+            | PrimitiveItem(_)\n+            | AssocConstItem(_, _)\n+            | AssocTypeItem(_, _)\n+            | KeywordItem(_) => kind,\n         }\n     }\n "}, {"sha": "77513b05ff2f94ca982b0649291ce9aab8c46667", "filename": "src/librustdoc/passes/collect_trait_impls.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs?ref=8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33", "patch": "@@ -1,6 +1,7 @@\n use super::Pass;\n+use crate::clean::*;\n use crate::core::DocContext;\n-use crate::{clean::*, visit::DocVisitor};\n+use crate::visit::DocVisitor;\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir::def_id::DefId;"}, {"sha": "56b222d893262148d94d4e9e794e37022fc90afd", "filename": "src/librustdoc/passes/html_tags.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs?ref=8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33", "patch": "@@ -3,9 +3,11 @@ use crate::clean::*;\n use crate::core::DocContext;\n use crate::html::markdown::main_body_opts;\n use crate::visit::DocVisitor;\n-use core::ops::Range;\n+\n use pulldown_cmark::{Event, Parser, Tag};\n+\n use std::iter::Peekable;\n+use std::ops::Range;\n use std::str::CharIndices;\n \n crate const CHECK_INVALID_HTML_TAGS: Pass = Pass {"}, {"sha": "df4d1558ebdf42f31cb9bfd15cf13fcffc4d7147", "filename": "src/librustdoc/visit.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33/src%2Flibrustdoc%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33/src%2Flibrustdoc%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit.rs?ref=8e4bcdf84b2f07d0a3e0aac21b85b54b14031f33", "patch": "@@ -23,8 +23,26 @@ crate trait DocVisitor: Sized {\n                 Variant::Tuple(fields) => fields.iter().for_each(|x| self.visit_item(x)),\n                 Variant::CLike => {}\n             },\n-            // FIXME: list all cases explicitly\n-            _ => return,\n+            ExternCrateItem { src: _ }\n+            | ImportItem(_)\n+            | FunctionItem(_)\n+            | TypedefItem(_, _)\n+            | OpaqueTyItem(_)\n+            | StaticItem(_)\n+            | ConstantItem(_)\n+            | TraitAliasItem(_)\n+            | TyMethodItem(_)\n+            | MethodItem(_, _)\n+            | StructFieldItem(_)\n+            | ForeignFunctionItem(_)\n+            | ForeignStaticItem(_)\n+            | ForeignTypeItem\n+            | MacroItem(_)\n+            | ProcMacroItem(_)\n+            | PrimitiveItem(_)\n+            | AssocConstItem(_, _)\n+            | AssocTypeItem(_, _)\n+            | KeywordItem(_) => {}\n         }\n     }\n "}]}