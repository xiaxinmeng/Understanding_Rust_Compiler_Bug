{"sha": "bd838a3b7ea3f6b410058e9413f5745586d3a459", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkODM4YTNiN2VhM2Y2YjQxMDA1OGU5NDEzZjU3NDU1ODZkM2E0NTk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-25T05:39:52Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-25T05:41:52Z"}, "message": "rustc: Compare paths with --extern, not bytes\n\nThe right hand side of the comparison in these checks are values of type\nOption<&Path> which are normalized versions of the left-hand side, so they're\nnot guaranteed to be byte-for-byte equivalent even though they're the same path.\n\nFor this reasons, the command line arguments are promoted to paths for\ncomparison of equality.\n\nThis fixes a bug on windows where if a library was specified with --extern it\nwould then be picked up twice because it was not considered to have been\npreviously registered.", "tree": {"sha": "2efbef43f7ea4fb4c112e5d99a7a5631cccd9106", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2efbef43f7ea4fb4c112e5d99a7a5631cccd9106"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd838a3b7ea3f6b410058e9413f5745586d3a459", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd838a3b7ea3f6b410058e9413f5745586d3a459", "html_url": "https://github.com/rust-lang/rust/commit/bd838a3b7ea3f6b410058e9413f5745586d3a459", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd838a3b7ea3f6b410058e9413f5745586d3a459/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9035c26e2c4368b39c8daa979f669d10d484825", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9035c26e2c4368b39c8daa979f669d10d484825", "html_url": "https://github.com/rust-lang/rust/commit/b9035c26e2c4368b39c8daa979f669d10d484825"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "0445b4d4e9e1f2f239a56f21c425c169ddd80ef7", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bd838a3b7ea3f6b410058e9413f5745586d3a459/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd838a3b7ea3f6b410058e9413f5745586d3a459/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=bd838a3b7ea3f6b410058e9413f5745586d3a459", "patch": "@@ -293,13 +293,16 @@ fn existing_match(e: &Env, name: &str,\n         // library. Even though an upstream library may have loaded something of\n         // the same name, we have to make sure it was loaded from the exact same\n         // location as well.\n+        //\n+        // We're also sure to compare *paths*, not actual byte slices. The\n+        // `source` stores paths which are normalized which may be different\n+        // from the strings on the command line.\n         let source = e.sess.cstore.get_used_crate_source(cnum).unwrap();\n-        let dylib = source.dylib.as_ref().map(|p| p.as_vec());\n-        let rlib = source.rlib.as_ref().map(|p| p.as_vec());\n         match e.sess.opts.externs.find_equiv(&name) {\n             Some(locs) => {\n                 let found = locs.iter().any(|l| {\n-                    Some(l.as_bytes()) == dylib || Some(l.as_bytes()) == rlib\n+                    let l = Some(Path::new(l.as_slice()));\n+                    l == source.dylib || l == source.rlib\n                 });\n                 if found {\n                     ret = Some(cnum);"}]}