{"sha": "55b78ae47844f65d8d2703a4edd1b9d5a2bfb93e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1Yjc4YWU0Nzg0NGY2NWQ4ZDI3MDNhNGVkZDFiOWQ1YTJiZmI5M2U=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-07-01T15:41:57Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-07-01T15:44:17Z"}, "message": "Rustup to ea0dc9297283daff6486807f43e190b4eb561412 II", "tree": {"sha": "4e4f75303afed1f113e68aef4b924047c770e1dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e4f75303afed1f113e68aef4b924047c770e1dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55b78ae47844f65d8d2703a4edd1b9d5a2bfb93e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXdo/RAAoJEF5CfHlMukXoK90QALWddnc2Sy78cL1iel/3UO3Z\nMEjCi40sDlfPuVGM9Vclw3+gpy5hct7LOIUdLEh5FWJ8X6XdbevxuxNr/Dl9kpo8\nRqm/TRsaHVFedhSBD14t9vJvN0IxP2MF/G7RSryA3TlR020wq9uCkSohV8672cgF\ngr+VeziJLapJsAwCAAstUHDz+WaejrAEWQRDzufbhjvRnadXc0txkf37hiAwbJiZ\nKDLzDVTWmyo/U7zsP97cIAsLGrU/C/W1VAffVUhXl3caFZppUwEPdVeJq4AcUS3s\no4M2ZHovZ0y8HDoAnlnxUgWCxTKi8smr3qyYxCB1Wwe4hQYjePCCIJ3GhT8Hg2Ob\ntWQvLVPtscw2iIADr7lutrRpSa5SgY4C9dxiIpsjCSY2fuflp12CnT9zuokHs18x\nIatH4XGDlQ73dvE1L6yXzxWO6v5AG0eKfXxZxnkjOaPI7hAuWxA7n64bU4k0D8j+\nqzhbKy/b7or73UC7IdTppXtqEDaw/sZ153X5SFUnarWsLjVPCCsm1y/HnsJzp/N6\nN2DpMpDfIUEXGalN+hgaF5uK9RjUJzmomoVII9gtUM5NaghjstW30OtpYkzL3g2w\n71RMaEH9oygJLtWcJI1d0wCnCAtn7HQppZQ6Gdghi3ENKQJh8Jm69A+jPnHaIo6W\n8U1bLci1uy2Iqvkfdpx6\n=otRq\n-----END PGP SIGNATURE-----", "payload": "tree 4e4f75303afed1f113e68aef4b924047c770e1dd\nparent 3c4af496621cbd5a2a89b2532a2e5f3338cdddf1\nauthor mcarton <cartonmartin+git@gmail.com> 1467387717 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1467387857 +0200\n\nRustup to ea0dc9297283daff6486807f43e190b4eb561412 II\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55b78ae47844f65d8d2703a4edd1b9d5a2bfb93e", "html_url": "https://github.com/rust-lang/rust/commit/55b78ae47844f65d8d2703a4edd1b9d5a2bfb93e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55b78ae47844f65d8d2703a4edd1b9d5a2bfb93e/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c4af496621cbd5a2a89b2532a2e5f3338cdddf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c4af496621cbd5a2a89b2532a2e5f3338cdddf1", "html_url": "https://github.com/rust-lang/rust/commit/3c4af496621cbd5a2a89b2532a2e5f3338cdddf1"}], "stats": {"total": 39, "additions": 16, "deletions": 23}, "files": [{"sha": "5725203727099b132014c28dd882a1b4589bd8f8", "filename": "clippy_lints/src/collapsible_if.rs", "status": "modified", "additions": 11, "deletions": 23, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/55b78ae47844f65d8d2703a4edd1b9d5a2bfb93e/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55b78ae47844f65d8d2703a4edd1b9d5a2bfb93e/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_if.rs?ref=55b78ae47844f65d8d2703a4edd1b9d5a2bfb93e", "patch": "@@ -72,8 +72,8 @@ fn check_if(cx: &EarlyContext, expr: &ast::Expr) {\n fn check_collapsible_maybe_if_let(cx: &EarlyContext, else_: &ast::Expr) {\n     if_let_chain! {[\n         let ast::ExprKind::Block(ref block) = else_.node,\n-        block.stmts.is_empty(),\n-        let Some(ref else_) = block.expr,\n+        let Some(ref else_) = expr_block(block),\n+        !in_macro(cx, else_.span),\n     ], {\n         match else_.node {\n             ast::ExprKind::If(..) | ast::ExprKind::IfLet(..) => {\n@@ -96,7 +96,7 @@ fn check_collapsible_no_if_let(\n     then: &ast::Block,\n ) {\n     if_let_chain! {[\n-        let Some(inner) = single_stmt_of_block(then),\n+        let Some(inner) = expr_block(then),\n         let ast::ExprKind::If(ref check_inner, ref content, None) = inner.node,\n     ], {\n         if expr.span.expn_id != inner.span.expn_id {\n@@ -128,28 +128,16 @@ fn check_to_string(cx: &EarlyContext, e: &ast::Expr) -> Cow<'static, str> {\n     }\n }\n \n-fn single_stmt_of_block(block: &ast::Block) -> Option<&ast::Expr> {\n-    if block.stmts.len() == 1 && block.expr.is_none() {\n-        if let ast::StmtKind::Expr(ref expr, _) = block.stmts[0].node {\n-            single_stmt_of_expr(expr)\n-        } else {\n-            None\n-        }\n-    } else if block.stmts.is_empty() {\n-        if let Some(ref p) = block.expr {\n-            Some(p)\n-        } else {\n-            None\n+/// If the block contains only one expression, returns it.\n+fn expr_block(block: &ast::Block) -> Option<&ast::Expr> {\n+    let mut it = block.stmts.iter();\n+\n+    if let (Some(stmt), None) = (it.next(), it.next()) {\n+        match stmt.node {\n+            ast::StmtKind::Expr(ref expr) | ast::StmtKind::Semi(ref expr) => Some(expr),\n+            _ => None,\n         }\n     } else {\n         None\n     }\n }\n-\n-fn single_stmt_of_expr(expr: &ast::Expr) -> Option<&ast::Expr> {\n-    if let ast::ExprKind::Block(ref block) = expr.node {\n-        single_stmt_of_block(block)\n-    } else {\n-        Some(expr)\n-    }\n-}"}, {"sha": "e51e31c693790b04271b072be3b749b2abc8947c", "filename": "tests/compile-fail/collapsible_if.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/55b78ae47844f65d8d2703a4edd1b9d5a2bfb93e/tests%2Fcompile-fail%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55b78ae47844f65d8d2703a4edd1b9d5a2bfb93e/tests%2Fcompile-fail%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fcollapsible_if.rs?ref=55b78ae47844f65d8d2703a4edd1b9d5a2bfb93e", "patch": "@@ -139,4 +139,9 @@ fn main() {\n             println!(\"world!\")\n         }\n     }\n+\n+    if true {\n+    } else {\n+        assert!(true); // assert! is just an `if`\n+    }\n }"}]}