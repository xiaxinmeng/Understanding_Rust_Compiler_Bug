{"sha": "b710e08868514fb08ab3e93c85c1019aec1c7cf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3MTBlMDg4Njg1MTRmYjA4YWIzZTkzYzg1YzEwMTlhZWMxYzdjZjM=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-06-19T13:28:27Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-06-20T10:47:25Z"}, "message": "remove TyCtx::expr_span (unused)", "tree": {"sha": "ebd7ae21f71201ca54a5810eba81329b72600f48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebd7ae21f71201ca54a5810eba81329b72600f48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b710e08868514fb08ab3e93c85c1019aec1c7cf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b710e08868514fb08ab3e93c85c1019aec1c7cf3", "html_url": "https://github.com/rust-lang/rust/commit/b710e08868514fb08ab3e93c85c1019aec1c7cf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b710e08868514fb08ab3e93c85c1019aec1c7cf3/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44109169a61daecb89e48c182601ba34250d8245", "url": "https://api.github.com/repos/rust-lang/rust/commits/44109169a61daecb89e48c182601ba34250d8245", "html_url": "https://github.com/rust-lang/rust/commit/44109169a61daecb89e48c182601ba34250d8245"}], "stats": {"total": 14, "additions": 0, "deletions": 14}, "files": [{"sha": "e8b75be27e5856a2349819f4040e8b943a3206ca", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b710e08868514fb08ab3e93c85c1019aec1c7cf3/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b710e08868514fb08ab3e93c85c1019aec1c7cf3/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=b710e08868514fb08ab3e93c85c1019aec1c7cf3", "patch": "@@ -2777,20 +2777,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         });\n     }\n \n-    pub fn expr_span(self, id: NodeId) -> Span {\n-        match self.hir().find(id) {\n-            Some(Node::Expr(e)) => {\n-                e.span\n-            }\n-            Some(f) => {\n-                bug!(\"node-ID {} is not an expr: {:?}\", id, f);\n-            }\n-            None => {\n-                bug!(\"node-ID {} is not present in the node map\", id);\n-            }\n-        }\n-    }\n-\n     pub fn provided_trait_methods(self, id: DefId) -> Vec<AssocItem> {\n         self.associated_items(id)\n             .filter(|item| item.kind == AssocKind::Method && item.defaultness.has_value())"}]}