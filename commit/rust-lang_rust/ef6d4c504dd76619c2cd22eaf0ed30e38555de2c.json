{"sha": "ef6d4c504dd76619c2cd22eaf0ed30e38555de2c", "node_id": "C_kwDOAAsO6NoAKGVmNmQ0YzUwNGRkNzY2MTljMmNkMjJlYWYwZWQzMGUzODU1NWRlMmM", "commit": {"author": {"name": "cui fliter", "email": "imcusg@gmail.com", "date": "2023-04-25T16:01:54Z"}, "committer": {"name": "cui fliter", "email": "imcusg@gmail.com", "date": "2023-04-26T16:48:00Z"}, "message": "Remove repeated definite articles\n\nSigned-off-by: cui fliter <imcusg@gmail.com>", "tree": {"sha": "f3396122040a8731b17b52fc967947ab13b37ad4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3396122040a8731b17b52fc967947ab13b37ad4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef6d4c504dd76619c2cd22eaf0ed30e38555de2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef6d4c504dd76619c2cd22eaf0ed30e38555de2c", "html_url": "https://github.com/rust-lang/rust/commit/ef6d4c504dd76619c2cd22eaf0ed30e38555de2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef6d4c504dd76619c2cd22eaf0ed30e38555de2c/comments", "author": {"login": "cuishuang", "id": 15921519, "node_id": "MDQ6VXNlcjE1OTIxNTE5", "avatar_url": "https://avatars.githubusercontent.com/u/15921519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuishuang", "html_url": "https://github.com/cuishuang", "followers_url": "https://api.github.com/users/cuishuang/followers", "following_url": "https://api.github.com/users/cuishuang/following{/other_user}", "gists_url": "https://api.github.com/users/cuishuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuishuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuishuang/subscriptions", "organizations_url": "https://api.github.com/users/cuishuang/orgs", "repos_url": "https://api.github.com/users/cuishuang/repos", "events_url": "https://api.github.com/users/cuishuang/events{/privacy}", "received_events_url": "https://api.github.com/users/cuishuang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuishuang", "id": 15921519, "node_id": "MDQ6VXNlcjE1OTIxNTE5", "avatar_url": "https://avatars.githubusercontent.com/u/15921519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuishuang", "html_url": "https://github.com/cuishuang", "followers_url": "https://api.github.com/users/cuishuang/followers", "following_url": "https://api.github.com/users/cuishuang/following{/other_user}", "gists_url": "https://api.github.com/users/cuishuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuishuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuishuang/subscriptions", "organizations_url": "https://api.github.com/users/cuishuang/orgs", "repos_url": "https://api.github.com/users/cuishuang/repos", "events_url": "https://api.github.com/users/cuishuang/events{/privacy}", "received_events_url": "https://api.github.com/users/cuishuang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20d90b14ffe8c667757a70c08e2d9736ee89f493", "url": "https://api.github.com/repos/rust-lang/rust/commits/20d90b14ffe8c667757a70c08e2d9736ee89f493", "html_url": "https://github.com/rust-lang/rust/commit/20d90b14ffe8c667757a70c08e2d9736ee89f493"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "8b549e187ba81e3711e8cb0360cb1ebe4b08eaa5", "filename": "library/core/src/macros/panic.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef6d4c504dd76619c2cd22eaf0ed30e38555de2c/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md", "raw_url": "https://github.com/rust-lang/rust/raw/ef6d4c504dd76619c2cd22eaf0ed30e38555de2c/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md?ref=ef6d4c504dd76619c2cd22eaf0ed30e38555de2c", "patch": "@@ -42,7 +42,7 @@ the successful result of some computation, `Ok(T)`, or error types that\n represent an anticipated runtime failure mode of that computation, `Err(E)`.\n `Result` is used alongside user defined types which represent the various\n anticipated runtime failure modes that the associated computation could\n-encounter. `Result` must be propagated manually, often with the the help of the\n+encounter. `Result` must be propagated manually, often with the help of the\n `?` operator and `Try` trait, and they must be reported manually, often with\n the help of the `Error` trait.\n "}, {"sha": "e7e83c7aacd477d16d452b7edf74fc483089bb99", "filename": "tests/debuginfo/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef6d4c504dd76619c2cd22eaf0ed30e38555de2c/tests%2Fdebuginfo%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef6d4c504dd76619c2cd22eaf0ed30e38555de2c/tests%2Fdebuginfo%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdebuginfo%2Fthread.rs?ref=ef6d4c504dd76619c2cd22eaf0ed30e38555de2c", "patch": "@@ -1,4 +1,4 @@\n-// Testing the the display of JoinHandle and Thread in cdb.\n+// Testing the display of JoinHandle and Thread in cdb.\n \n // cdb-only\n // min-cdb-version: 10.0.18317.1001"}, {"sha": "0ea81b5aecb9e9757020012941400743eaa33d84", "filename": "tests/ui/generic-associated-types/self-outlives-lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef6d4c504dd76619c2cd22eaf0ed30e38555de2c/tests%2Fui%2Fgeneric-associated-types%2Fself-outlives-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef6d4c504dd76619c2cd22eaf0ed30e38555de2c/tests%2Fui%2Fgeneric-associated-types%2Fself-outlives-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fself-outlives-lint.rs?ref=ef6d4c504dd76619c2cd22eaf0ed30e38555de2c", "patch": "@@ -189,7 +189,7 @@ trait MultipleMethods {\n }\n \n // We would normally require `Self: 'a`, but we can prove that `Self: 'static`\n-// because of the the bounds on the trait, so the bound is proven\n+// because of the bounds on the trait, so the bound is proven\n trait Trait: 'static {\n     type Assoc<'a>;\n     fn make_assoc(_: &u32) -> Self::Assoc<'_>;"}]}