{"sha": "04436fb65b7efa81793f0f89cf375d0fadf99f89", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NDM2ZmI2NWI3ZWZhODE3OTNmMGY4OWNmMzc1ZDBmYWRmOTlmODk=", "commit": {"author": {"name": "Nathan Kleyn", "email": "nathan@nathankleyn.com", "date": "2016-03-09T16:18:31Z"}, "committer": {"name": "Nathan Kleyn", "email": "nathan@nathankleyn.com", "date": "2016-03-09T16:18:31Z"}, "message": "Address review comments to add \"basic usage\" sections to docs.", "tree": {"sha": "084fe6d203f76d539809f27b576db8298705e9df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/084fe6d203f76d539809f27b576db8298705e9df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04436fb65b7efa81793f0f89cf375d0fadf99f89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04436fb65b7efa81793f0f89cf375d0fadf99f89", "html_url": "https://github.com/rust-lang/rust/commit/04436fb65b7efa81793f0f89cf375d0fadf99f89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04436fb65b7efa81793f0f89cf375d0fadf99f89/comments", "author": {"login": "nathankleyn", "id": 220826, "node_id": "MDQ6VXNlcjIyMDgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/220826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathankleyn", "html_url": "https://github.com/nathankleyn", "followers_url": "https://api.github.com/users/nathankleyn/followers", "following_url": "https://api.github.com/users/nathankleyn/following{/other_user}", "gists_url": "https://api.github.com/users/nathankleyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathankleyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathankleyn/subscriptions", "organizations_url": "https://api.github.com/users/nathankleyn/orgs", "repos_url": "https://api.github.com/users/nathankleyn/repos", "events_url": "https://api.github.com/users/nathankleyn/events{/privacy}", "received_events_url": "https://api.github.com/users/nathankleyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathankleyn", "id": 220826, "node_id": "MDQ6VXNlcjIyMDgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/220826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathankleyn", "html_url": "https://github.com/nathankleyn", "followers_url": "https://api.github.com/users/nathankleyn/followers", "following_url": "https://api.github.com/users/nathankleyn/following{/other_user}", "gists_url": "https://api.github.com/users/nathankleyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathankleyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathankleyn/subscriptions", "organizations_url": "https://api.github.com/users/nathankleyn/orgs", "repos_url": "https://api.github.com/users/nathankleyn/repos", "events_url": "https://api.github.com/users/nathankleyn/events{/privacy}", "received_events_url": "https://api.github.com/users/nathankleyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "118b975c805533bab31f8155ad0af29b3635d3fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/118b975c805533bab31f8155ad0af29b3635d3fc", "html_url": "https://github.com/rust-lang/rust/commit/118b975c805533bab31f8155ad0af29b3635d3fc"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "29258180c67bac62be9ec0496f07e6d17713026f", "filename": "src/libcollections/binary_heap.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/04436fb65b7efa81793f0f89cf375d0fadf99f89/src%2Flibcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04436fb65b7efa81793f0f89cf375d0fadf99f89/src%2Flibcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbinary_heap.rs?ref=04436fb65b7efa81793f0f89cf375d0fadf99f89", "patch": "@@ -246,6 +246,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let mut heap = BinaryHeap::new();\n@@ -263,6 +265,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let mut heap = BinaryHeap::with_capacity(10);\n@@ -278,6 +282,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let heap = BinaryHeap::from(vec![1, 2, 3, 4]);\n@@ -296,6 +302,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let mut heap = BinaryHeap::new();\n@@ -316,6 +324,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let mut heap = BinaryHeap::with_capacity(100);\n@@ -340,6 +350,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let mut heap = BinaryHeap::new();\n@@ -361,6 +373,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let mut heap = BinaryHeap::new();\n@@ -377,6 +391,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let mut heap: BinaryHeap<i32> = BinaryHeap::with_capacity(100);\n@@ -395,6 +411,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let mut heap = BinaryHeap::from(vec![1, 3]);\n@@ -418,6 +436,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let mut heap = BinaryHeap::new();\n@@ -440,6 +460,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// #![feature(binary_heap_extras)]\n     ///\n@@ -478,6 +500,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// #![feature(binary_heap_extras)]\n     ///\n@@ -508,6 +532,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let heap = BinaryHeap::from(vec![1, 2, 3, 4, 5, 6, 7]);\n@@ -528,6 +554,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     ///\n@@ -628,6 +656,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let mut heap = BinaryHeap::from(vec![1, 3]);\n@@ -643,6 +673,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let mut heap = BinaryHeap::new();\n@@ -666,6 +698,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let mut heap = BinaryHeap::from(vec![1, 3]);\n@@ -688,6 +722,8 @@ impl<T: Ord> BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let mut heap = BinaryHeap::from(vec![1, 3]);\n@@ -915,6 +951,8 @@ impl<T: Ord> IntoIterator for BinaryHeap<T> {\n     ///\n     /// # Examples\n     ///\n+    /// Basic usage:\n+    ///\n     /// ```\n     /// use std::collections::BinaryHeap;\n     /// let heap = BinaryHeap::from(vec![1, 2, 3, 4]);"}]}