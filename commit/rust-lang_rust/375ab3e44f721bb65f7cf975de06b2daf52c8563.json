{"sha": "375ab3e44f721bb65f7cf975de06b2daf52c8563", "node_id": "C_kwDOAAsO6NoAKDM3NWFiM2U0NGY3MjFiYjY1ZjdjZjk3NWRlMDZiMmRhZjUyYzg1NjM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-29T12:29:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-29T12:29:34Z"}, "message": "Rollup merge of #98516 - dlrobertson:uefi_va_list, r=joshtriplett\n\nlibrary: fix uefi va_list type definition\n\nFor uefi the `va_list` should always be the void pointer variant.\n\nRelated to: https://github.com/rust-lang/rust/issues/44930", "tree": {"sha": "1f17bcbece05d90fc07c93de3213575a50f8d0d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f17bcbece05d90fc07c93de3213575a50f8d0d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/375ab3e44f721bb65f7cf975de06b2daf52c8563", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivEWuCRBK7hj4Ov3rIwAAwZ8IAK1G0UkioMr9TlOv3hIHHT7u\nH0EaHKBeAXP5MRYANdUUOzvYcyWiiEFUPhwkvKK9/RQTenFNGOtJ5ed60jH/YVFh\noivLY331TeBaUj9nlWZ67d+ZPFSTRPHKps69mn+8mc5avPP8/VjDzxEtnZwG+O2/\nHivr3BWKmi/tSe6RaB1CQ897IC7WKYyFdXeR3stF6FkgUIlAzSwxPjtzAQdZ2It8\nTfqrLlCWsGf0KS9BT2YNhFs5BQeRpKgy1bsavWB/mI4yPCCyalUGoJ8hynPsgn2M\nSA4JQOHnzswwuelEOVNyfwyJlo597ebXCRvuBRL65H3reJJPTvbx9l2BTTB3AP0=\n=QEvV\n-----END PGP SIGNATURE-----\n", "payload": "tree 1f17bcbece05d90fc07c93de3213575a50f8d0d1\nparent 7b9a7ef218fbdc3cbb9f7828bc9f032bcfd9a6dc\nparent 3b117c4823bbe0f7250d4bd516bb370d12ca0952\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1656505774 +0530\ncommitter GitHub <noreply@github.com> 1656505774 +0530\n\nRollup merge of #98516 - dlrobertson:uefi_va_list, r=joshtriplett\n\nlibrary: fix uefi va_list type definition\n\nFor uefi the `va_list` should always be the void pointer variant.\n\nRelated to: https://github.com/rust-lang/rust/issues/44930\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/375ab3e44f721bb65f7cf975de06b2daf52c8563", "html_url": "https://github.com/rust-lang/rust/commit/375ab3e44f721bb65f7cf975de06b2daf52c8563", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/375ab3e44f721bb65f7cf975de06b2daf52c8563/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b9a7ef218fbdc3cbb9f7828bc9f032bcfd9a6dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b9a7ef218fbdc3cbb9f7828bc9f032bcfd9a6dc", "html_url": "https://github.com/rust-lang/rust/commit/7b9a7ef218fbdc3cbb9f7828bc9f032bcfd9a6dc"}, {"sha": "3b117c4823bbe0f7250d4bd516bb370d12ca0952", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b117c4823bbe0f7250d4bd516bb370d12ca0952", "html_url": "https://github.com/rust-lang/rust/commit/3b117c4823bbe0f7250d4bd516bb370d12ca0952"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "43e4b7f08e22d37c96f173b39e09685bd37f9453", "filename": "library/core/src/ffi/mod.rs", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/375ab3e44f721bb65f7cf975de06b2daf52c8563/library%2Fcore%2Fsrc%2Fffi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/375ab3e44f721bb65f7cf975de06b2daf52c8563/library%2Fcore%2Fsrc%2Fffi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fffi%2Fmod.rs?ref=375ab3e44f721bb65f7cf975de06b2daf52c8563", "patch": "@@ -231,7 +231,8 @@ impl fmt::Debug for c_void {\n     all(target_arch = \"aarch64\", any(target_os = \"macos\", target_os = \"ios\")),\n     target_family = \"wasm\",\n     target_arch = \"asmjs\",\n-    windows\n+    target_os = \"uefi\",\n+    windows,\n ))]\n #[repr(transparent)]\n #[unstable(\n@@ -254,7 +255,8 @@ pub struct VaListImpl<'f> {\n     all(target_arch = \"aarch64\", any(target_os = \"macos\", target_os = \"ios\")),\n     target_family = \"wasm\",\n     target_arch = \"asmjs\",\n-    windows\n+    target_os = \"uefi\",\n+    windows,\n ))]\n #[unstable(\n     feature = \"c_variadic\",\n@@ -276,7 +278,8 @@ impl<'f> fmt::Debug for VaListImpl<'f> {\n #[cfg(all(\n     target_arch = \"aarch64\",\n     not(any(target_os = \"macos\", target_os = \"ios\")),\n-    not(windows)\n+    not(target_os = \"uefi\"),\n+    not(windows),\n ))]\n #[repr(C)]\n #[derive(Debug)]\n@@ -297,7 +300,7 @@ pub struct VaListImpl<'f> {\n }\n \n /// PowerPC ABI implementation of a `va_list`.\n-#[cfg(all(target_arch = \"powerpc\", not(windows)))]\n+#[cfg(all(target_arch = \"powerpc\", not(target_os = \"uefi\"), not(windows)))]\n #[repr(C)]\n #[derive(Debug)]\n #[unstable(\n@@ -317,7 +320,7 @@ pub struct VaListImpl<'f> {\n }\n \n /// x86_64 ABI implementation of a `va_list`.\n-#[cfg(all(target_arch = \"x86_64\", not(windows)))]\n+#[cfg(all(target_arch = \"x86_64\", not(target_os = \"uefi\"), not(windows)))]\n #[repr(C)]\n #[derive(Debug)]\n #[unstable(\n@@ -354,7 +357,8 @@ pub struct VaList<'a, 'f: 'a> {\n         all(target_arch = \"aarch64\", any(target_os = \"macos\", target_os = \"ios\")),\n         target_family = \"wasm\",\n         target_arch = \"asmjs\",\n-        windows\n+        target_os = \"uefi\",\n+        windows,\n     ))]\n     inner: VaListImpl<'f>,\n \n@@ -363,7 +367,8 @@ pub struct VaList<'a, 'f: 'a> {\n         any(not(target_arch = \"aarch64\"), not(any(target_os = \"macos\", target_os = \"ios\"))),\n         not(target_family = \"wasm\"),\n         not(target_arch = \"asmjs\"),\n-        not(windows)\n+        not(target_os = \"uefi\"),\n+        not(windows),\n     ))]\n     inner: &'a mut VaListImpl<'f>,\n \n@@ -375,7 +380,8 @@ pub struct VaList<'a, 'f: 'a> {\n     all(target_arch = \"aarch64\", any(target_os = \"macos\", target_os = \"ios\")),\n     target_family = \"wasm\",\n     target_arch = \"asmjs\",\n-    windows\n+    target_os = \"uefi\",\n+    windows,\n ))]\n #[unstable(\n     feature = \"c_variadic\",\n@@ -396,7 +402,8 @@ impl<'f> VaListImpl<'f> {\n     any(not(target_arch = \"aarch64\"), not(any(target_os = \"macos\", target_os = \"ios\"))),\n     not(target_family = \"wasm\"),\n     not(target_arch = \"asmjs\"),\n-    not(windows)\n+    not(target_os = \"uefi\"),\n+    not(windows),\n ))]\n #[unstable(\n     feature = \"c_variadic\","}]}