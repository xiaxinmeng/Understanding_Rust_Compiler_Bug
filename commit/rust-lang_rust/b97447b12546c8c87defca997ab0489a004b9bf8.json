{"sha": "b97447b12546c8c87defca997ab0489a004b9bf8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5NzQ0N2IxMjU0NmM4Yzg3ZGVmY2E5OTdhYjA0ODlhMDA0YjliZjg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-01-17T13:50:03Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-01-17T13:50:03Z"}, "message": "Add missing inlines", "tree": {"sha": "302935c89d6f36565232e35a5bf6e490ca0935b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/302935c89d6f36565232e35a5bf6e490ca0935b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b97447b12546c8c87defca997ab0489a004b9bf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b97447b12546c8c87defca997ab0489a004b9bf8", "html_url": "https://github.com/rust-lang/rust/commit/b97447b12546c8c87defca997ab0489a004b9bf8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b97447b12546c8c87defca997ab0489a004b9bf8/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd532e615abdac766ce9110e02e197f674fce375", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd532e615abdac766ce9110e02e197f674fce375", "html_url": "https://github.com/rust-lang/rust/commit/cd532e615abdac766ce9110e02e197f674fce375"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "9ea0e4f9bad916f8935cd25d16945402f23c7afe", "filename": "crates/parser/src/syntax_kind.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b97447b12546c8c87defca997ab0489a004b9bf8/crates%2Fparser%2Fsrc%2Fsyntax_kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b97447b12546c8c87defca997ab0489a004b9bf8/crates%2Fparser%2Fsrc%2Fsyntax_kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fsyntax_kind.rs?ref=b97447b12546c8c87defca997ab0489a004b9bf8", "patch": "@@ -6,19 +6,22 @@ mod generated;\n pub use self::generated::SyntaxKind;\n \n impl From<u16> for SyntaxKind {\n+    #[inline]\n     fn from(d: u16) -> SyntaxKind {\n         assert!(d <= (SyntaxKind::__LAST as u16));\n         unsafe { std::mem::transmute::<u16, SyntaxKind>(d) }\n     }\n }\n \n impl From<SyntaxKind> for u16 {\n+    #[inline]\n     fn from(k: SyntaxKind) -> u16 {\n         k as u16\n     }\n }\n \n impl SyntaxKind {\n+    #[inline]\n     pub fn is_trivia(self) -> bool {\n         matches!(self, SyntaxKind::WHITESPACE | SyntaxKind::COMMENT)\n     }"}]}