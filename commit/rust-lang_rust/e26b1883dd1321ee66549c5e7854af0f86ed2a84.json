{"sha": "e26b1883dd1321ee66549c5e7854af0f86ed2a84", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyNmIxODgzZGQxMzIxZWU2NjU0OWM1ZTc4NTRhZjBmODZlZDJhODQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-20T23:47:59Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-20T23:49:31Z"}, "message": "rt: Stub code for the cycle collector", "tree": {"sha": "15b6006f2ba16de7cf0e88a43309d574aeb5b2a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15b6006f2ba16de7cf0e88a43309d574aeb5b2a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e26b1883dd1321ee66549c5e7854af0f86ed2a84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e26b1883dd1321ee66549c5e7854af0f86ed2a84", "html_url": "https://github.com/rust-lang/rust/commit/e26b1883dd1321ee66549c5e7854af0f86ed2a84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e26b1883dd1321ee66549c5e7854af0f86ed2a84/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c61691110a521bc070ee792fc87919cb75bd97c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c61691110a521bc070ee792fc87919cb75bd97c5", "html_url": "https://github.com/rust-lang/rust/commit/c61691110a521bc070ee792fc87919cb75bd97c5"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "5e5fd8dc986fe53af097ab0c9bdffee420777557", "filename": "mk/rt.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e26b1883dd1321ee66549c5e7854af0f86ed2a84/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/e26b1883dd1321ee66549c5e7854af0f86ed2a84/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=e26b1883dd1321ee66549c5e7854af0f86ed2a84", "patch": "@@ -27,6 +27,7 @@ RUNTIME_CS := rt/sync/timer.cpp \\\n               rt/rust_obstack.cpp \\\n               rt/rust_gc.cpp \\\n               rt/rust_abi.cpp \\\n+              rt/rust_cc.cpp \\\n               rt/memory_region.cpp \\\n               rt/test/rust_test_harness.cpp \\\n               rt/test/rust_test_runtime.cpp \\"}, {"sha": "8129f60fc7c12195b7cadc188e8a65750d90a3fd", "filename": "src/rt/rust_cc.cpp", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/e26b1883dd1321ee66549c5e7854af0f86ed2a84/src%2Frt%2Frust_cc.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e26b1883dd1321ee66549c5e7854af0f86ed2a84/src%2Frt%2Frust_cc.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_cc.cpp?ref=e26b1883dd1321ee66549c5e7854af0f86ed2a84", "patch": "@@ -0,0 +1,57 @@\n+// Rust cycle collector. Temporary, but will probably stick around for some\n+// time until LLVM's GC infrastructure is more mature.\n+\n+#include <cstdio>\n+#include <cstdlib>\n+#include <map>\n+#include <vector>\n+#include \"rust_gc.h\"\n+#include \"rust_internal.h\"\n+#include \"rust_shape.h\"\n+#include \"rust_task.h\"\n+\n+#undef DPRINT\n+#define DPRINT(fmt,...)     fprintf(stderr, fmt, ##__VA_ARGS__)\n+\n+namespace cc {\n+\n+void\n+do_cc(rust_task *task) {\n+    std::map<void *,type_desc *>::iterator begin(task->local_allocs.begin());\n+    std::map<void *,type_desc *>::iterator end(task->local_allocs.end());\n+    while (begin != end) {\n+        void *p = begin->first;\n+        type_desc *tydesc = begin->second;\n+\n+        DPRINT(\"marking allocation: %p, tydesc=%p\\n\", p, tydesc);\n+\n+        // Prevents warnings for now\n+        (void)p;\n+        (void)tydesc;\n+#if 0\n+        shape::arena arena;\n+        shape::type_param *params =\n+            shape::type_param::from_tydesc(tydesc, arena);\n+        mark mark(task, true, tydesc->shape, params, tydesc->shape_tables, p);\n+        mark.walk();\n+#endif\n+\n+        ++begin;\n+    }\n+}\n+\n+void\n+maybe_cc(rust_task *task) {\n+    // FIXME: We ought to lock this.\n+    static int zeal = -1;\n+    if (zeal == -1) {\n+        char *ev = getenv(\"RUST_CC_ZEAL\");\n+        zeal = ev && ev[0] != '\\0' && ev[0] != '0';\n+    }\n+\n+    if (zeal)\n+        do_cc(task);\n+}\n+\n+}   // end namespace cc\n+"}, {"sha": "991e69d5c31962f3baa2a8eb0ec89260aa35732e", "filename": "src/rt/rust_cc.h", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e26b1883dd1321ee66549c5e7854af0f86ed2a84/src%2Frt%2Frust_cc.h", "raw_url": "https://github.com/rust-lang/rust/raw/e26b1883dd1321ee66549c5e7854af0f86ed2a84/src%2Frt%2Frust_cc.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_cc.h?ref=e26b1883dd1321ee66549c5e7854af0f86ed2a84", "patch": "@@ -0,0 +1,17 @@\n+// Rust cycle collector. Temporary, but will probably stick around for some\n+// time until LLVM's GC infrastructure is more mature.\n+\n+#ifndef RUST_CC_H\n+#define RUST_CC_H\n+\n+struct rust_task;\n+\n+namespace cc {\n+\n+void do_cc(rust_task *task);\n+void maybe_cc(rust_task *task);\n+\n+}   // end namespace cc\n+\n+#endif\n+"}, {"sha": "863e22052e7dfaf854d0d8f22356b1dfb04ce7d2", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e26b1883dd1321ee66549c5e7854af0f86ed2a84/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e26b1883dd1321ee66549c5e7854af0f86ed2a84/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=e26b1883dd1321ee66549c5e7854af0f86ed2a84", "patch": "@@ -1,3 +1,4 @@\n+#include \"rust_cc.h\"\n #include \"rust_gc.h\"\n #include \"rust_internal.h\"\n #include \"rust_unwind.h\"\n@@ -61,6 +62,7 @@ upcall_malloc(rust_task *task, size_t nbytes, type_desc *td) {\n         nbytes, td);\n \n     gc::maybe_gc(task);\n+    cc::maybe_cc(task);\n \n     // TODO: Maybe use dladdr here to find a more useful name for the\n     // type_desc."}]}