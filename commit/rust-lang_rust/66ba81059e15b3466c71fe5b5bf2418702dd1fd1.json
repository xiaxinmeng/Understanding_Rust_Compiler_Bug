{"sha": "66ba81059e15b3466c71fe5b5bf2418702dd1fd1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YmE4MTA1OWUxNWIzNDY2YzcxZmU1YjViZjI0MTg3MDJkZDFmZDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-11T07:44:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-11T07:44:58Z"}, "message": "Auto merge of #85994 - tmiasko:monomorphic-needs-drop, r=RalfJung\n\nDisallow non-monomorphic calls to `needs_drop` in interpreter\n\notherwise evaluation could change after further substitutions.", "tree": {"sha": "20d2e049732684104178f7841673193dc5f0625a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20d2e049732684104178f7841673193dc5f0625a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66ba81059e15b3466c71fe5b5bf2418702dd1fd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66ba81059e15b3466c71fe5b5bf2418702dd1fd1", "html_url": "https://github.com/rust-lang/rust/commit/66ba81059e15b3466c71fe5b5bf2418702dd1fd1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66ba81059e15b3466c71fe5b5bf2418702dd1fd1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68aa6b2d832579c156bda878a909f1bbb5261b36", "url": "https://api.github.com/repos/rust-lang/rust/commits/68aa6b2d832579c156bda878a909f1bbb5261b36", "html_url": "https://github.com/rust-lang/rust/commit/68aa6b2d832579c156bda878a909f1bbb5261b36"}, {"sha": "07a03b0a58438778336f525f5e567e44500704c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/07a03b0a58438778336f525f5e567e44500704c5", "html_url": "https://github.com/rust-lang/rust/commit/07a03b0a58438778336f525f5e567e44500704c5"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "4e4166dad50e29b83c7b49c00905fe344941f659", "filename": "compiler/rustc_mir/src/interpret/intrinsics.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/66ba81059e15b3466c71fe5b5bf2418702dd1fd1/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ba81059e15b3466c71fe5b5bf2418702dd1fd1/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs?ref=66ba81059e15b3466c71fe5b5bf2418702dd1fd1", "patch": "@@ -56,8 +56,12 @@ crate fn eval_nullary_intrinsic<'tcx>(\n             let alloc = type_name::alloc_type_name(tcx, tp_ty);\n             ConstValue::Slice { data: alloc, start: 0, end: alloc.len() }\n         }\n-        sym::needs_drop => ConstValue::from_bool(tp_ty.needs_drop(tcx, param_env)),\n+        sym::needs_drop => {\n+            ensure_monomorphic_enough(tcx, tp_ty)?;\n+            ConstValue::from_bool(tp_ty.needs_drop(tcx, param_env))\n+        }\n         sym::min_align_of | sym::pref_align_of => {\n+            // Correctly handles non-monomorphic calls, so there is no need for ensure_monomorphic_enough.\n             let layout = tcx.layout_of(param_env.and(tp_ty)).map_err(|e| err_inval!(Layout(e)))?;\n             let n = match name {\n                 sym::pref_align_of => layout.align.pref.bytes(),\n@@ -71,6 +75,7 @@ crate fn eval_nullary_intrinsic<'tcx>(\n             ConstValue::from_u64(tcx.type_id_hash(tp_ty))\n         }\n         sym::variant_count => match tp_ty.kind() {\n+            // Correctly handles non-monomorphic calls, so there is no need for ensure_monomorphic_enough.\n             ty::Adt(ref adt, _) => ConstValue::from_machine_usize(adt.variants.len() as u64, &tcx),\n             ty::Projection(_)\n             | ty::Opaque(_, _)"}, {"sha": "9f66e3cfa23c0d271b29ff98ce067441f41a3c6b", "filename": "src/test/ui/consts/const-needs_drop-monomorphic.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/66ba81059e15b3466c71fe5b5bf2418702dd1fd1/src%2Ftest%2Fui%2Fconsts%2Fconst-needs_drop-monomorphic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66ba81059e15b3466c71fe5b5bf2418702dd1fd1/src%2Ftest%2Fui%2Fconsts%2Fconst-needs_drop-monomorphic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-needs_drop-monomorphic.rs?ref=66ba81059e15b3466c71fe5b5bf2418702dd1fd1", "patch": "@@ -0,0 +1,17 @@\n+// Check that evaluation of needs_drop<T> fails when T is not monomorphic.\n+#![feature(const_generics)]\n+#![allow(const_evaluatable_unchecked)]\n+#![allow(incomplete_features)]\n+\n+struct Bool<const B: bool> {}\n+impl Bool<true> {\n+    fn assert() {}\n+}\n+fn f<T>() {\n+    Bool::<{ std::mem::needs_drop::<T>() }>::assert();\n+    //~^ ERROR no function or associated item named `assert` found\n+    //~| ERROR constant expression depends on a generic parameter\n+}\n+fn main() {\n+    f::<u32>();\n+}"}, {"sha": "0770d06e15be8c2ca516c3c3715975321207598d", "filename": "src/test/ui/consts/const-needs_drop-monomorphic.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/66ba81059e15b3466c71fe5b5bf2418702dd1fd1/src%2Ftest%2Fui%2Fconsts%2Fconst-needs_drop-monomorphic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66ba81059e15b3466c71fe5b5bf2418702dd1fd1/src%2Ftest%2Fui%2Fconsts%2Fconst-needs_drop-monomorphic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-needs_drop-monomorphic.stderr?ref=66ba81059e15b3466c71fe5b5bf2418702dd1fd1", "patch": "@@ -0,0 +1,20 @@\n+error[E0599]: no function or associated item named `assert` found for struct `Bool<{ std::mem::needs_drop::<T>() }>` in the current scope\n+  --> $DIR/const-needs_drop-monomorphic.rs:11:46\n+   |\n+LL | struct Bool<const B: bool> {}\n+   | -------------------------- function or associated item `assert` not found for this\n+...\n+LL |     Bool::<{ std::mem::needs_drop::<T>() }>::assert();\n+   |                                              ^^^^^^ function or associated item cannot be called on `Bool<{ std::mem::needs_drop::<T>() }>` due to unsatisfied trait bounds\n+\n+error: constant expression depends on a generic parameter\n+  --> $DIR/const-needs_drop-monomorphic.rs:11:5\n+   |\n+LL |     Bool::<{ std::mem::needs_drop::<T>() }>::assert();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: this may fail depending on what value the parameter takes\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0599`."}]}