{"sha": "1cbf5e896219be3e1eda8b1f92d1ba76ae30bd55", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjYmY1ZTg5NjIxOWJlM2UxZWRhOGIxZjkyZDFiYTc2YWUzMGJkNTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-11T01:09:46Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-11T01:09:46Z"}, "message": "leave notes regarding possible alignment checks", "tree": {"sha": "1727d200e351c2ffc32cb358d1f4f8c1402bc1c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1727d200e351c2ffc32cb358d1f4f8c1402bc1c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cbf5e896219be3e1eda8b1f92d1ba76ae30bd55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cbf5e896219be3e1eda8b1f92d1ba76ae30bd55", "html_url": "https://github.com/rust-lang/rust/commit/1cbf5e896219be3e1eda8b1f92d1ba76ae30bd55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cbf5e896219be3e1eda8b1f92d1ba76ae30bd55/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea730ab20f72196a683f313cbd2797456eb28b3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea730ab20f72196a683f313cbd2797456eb28b3e", "html_url": "https://github.com/rust-lang/rust/commit/ea730ab20f72196a683f313cbd2797456eb28b3e"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "0f32ac5183def49cb1fa7f228f737bcdce8ddc37", "filename": "src/memory.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1cbf5e896219be3e1eda8b1f92d1ba76ae30bd55/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cbf5e896219be3e1eda8b1f92d1ba76ae30bd55/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=1cbf5e896219be3e1eda8b1f92d1ba76ae30bd55", "patch": "@@ -663,6 +663,7 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n \n     pub fn copy(&mut self, src: PrimVal, dest: PrimVal, size: u64, align: u64, nonoverlapping: bool) -> EvalResult<'tcx> {\n         if size == 0 {\n+            // TODO: Should we check for alignment here? (Also see write_bytes intrinsic)\n             return Ok(());\n         }\n         let src = src.to_ptr()?;"}, {"sha": "f2b0446618a0692ba1a256991277aa082529cbdd", "filename": "src/terminator/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1cbf5e896219be3e1eda8b1f92d1ba76ae30bd55/src%2Fterminator%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cbf5e896219be3e1eda8b1f92d1ba76ae30bd55/src%2Fterminator%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fintrinsic.rs?ref=1cbf5e896219be3e1eda8b1f92d1ba76ae30bd55", "patch": "@@ -463,6 +463,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 let ptr = arg_vals[0].read_ptr(&self.memory)?;\n                 let count = self.value_to_primval(arg_vals[2], usize)?.to_u64()?;\n                 if count > 0 {\n+                    // TODO: Should we, at least, validate the alignment? (Also see memory::copy)\n                     self.memory.check_align(ptr, ty_align, size * count)?;\n                     self.memory.write_repeat(ptr, val_byte, size * count)?;\n                 }"}]}