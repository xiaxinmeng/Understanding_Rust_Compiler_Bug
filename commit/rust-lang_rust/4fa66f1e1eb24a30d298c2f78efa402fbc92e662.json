{"sha": "4fa66f1e1eb24a30d298c2f78efa402fbc92e662", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmYTY2ZjFlMWViMjRhMzBkMjk4YzJmNzhlZmE0MDJmYmM5MmU2NjI=", "commit": {"author": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2021-07-31T04:20:07Z"}, "committer": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2021-08-02T16:49:36Z"}, "message": "Sort struct enum variant fields", "tree": {"sha": "8173eb7d251c75fb826a5e7f09b3256eac82a195", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8173eb7d251c75fb826a5e7f09b3256eac82a195"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fa66f1e1eb24a30d298c2f78efa402fbc92e662", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fa66f1e1eb24a30d298c2f78efa402fbc92e662", "html_url": "https://github.com/rust-lang/rust/commit/4fa66f1e1eb24a30d298c2f78efa402fbc92e662", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fa66f1e1eb24a30d298c2f78efa402fbc92e662/comments", "author": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f8888cfe70007878deb1e38e58c299e69e8e259", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f8888cfe70007878deb1e38e58c299e69e8e259", "html_url": "https://github.com/rust-lang/rust/commit/6f8888cfe70007878deb1e38e58c299e69e8e259"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "be6fc51c4751dacaefe344e2124e92193405992d", "filename": "crates/ide_assists/src/handlers/sort_items.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/4fa66f1e1eb24a30d298c2f78efa402fbc92e662/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fsort_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fa66f1e1eb24a30d298c2f78efa402fbc92e662/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fsort_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fsort_items.rs?ref=4fa66f1e1eb24a30d298c2f78efa402fbc92e662", "patch": "@@ -26,6 +26,10 @@ pub(crate) fn sort_items(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n         }\n     } else if let Some(union_ast) = ctx.find_node_at_offset::<ast::Union>() {\n         add_sort_fields_assist(acc, union_ast.record_field_list()?)\n+    } else if let Some(enum_struct_variant_ast) = ctx.find_node_at_offset::<ast::RecordFieldList>()\n+    {\n+        // should be above enum and below struct\n+        add_sort_fields_assist(acc, enum_struct_variant_ast)\n     } else if let Some(enum_ast) = ctx.find_node_at_offset::<ast::Enum>() {\n         add_sort_variants_assist(acc, enum_ast.variant_list()?)\n     } else {\n@@ -427,6 +431,29 @@ enum Bar {\n     b = 14,\n     c(u32, usize),\n     d{ first: u32, second: usize},\n+}\n+        \"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn sort_struct_enum_variant() {\n+        check_assist(\n+            sort_items,\n+            r#\"\n+enum Bar {\n+    d$0{ second: usize, first: u32 },\n+    b = 14,\n+    a,\n+    c(u32, usize),\n+}\n+        \"#,\n+            r#\"\n+enum Bar {\n+    d{ first: u32, second: usize },\n+    b = 14,\n+    a,\n+    c(u32, usize),\n }\n         \"#,\n         )"}]}