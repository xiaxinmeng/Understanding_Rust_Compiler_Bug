{"sha": "0d8738f9b52b62991e9c7b44a9d01a13c1398475", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkODczOGY5YjUyYjYyOTkxZTljN2I0NGE5ZDAxYTEzYzEzOTg0NzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-17T23:01:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-17T23:01:10Z"}, "message": "auto merge of #16565 : kaseyc/rust/documentation_fixes, r=pcwalton\n\nCorrected the sample rustdoc command to use --output instead of --output-dir and fixed markdown formatting in debuginfo.rs.", "tree": {"sha": "ffbebcbc2b841f6e12caf8bdb24652d4df30efbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffbebcbc2b841f6e12caf8bdb24652d4df30efbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d8738f9b52b62991e9c7b44a9d01a13c1398475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d8738f9b52b62991e9c7b44a9d01a13c1398475", "html_url": "https://github.com/rust-lang/rust/commit/0d8738f9b52b62991e9c7b44a9d01a13c1398475", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d8738f9b52b62991e9c7b44a9d01a13c1398475/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "776c17f476c4be92f6cfe4dab528886973ea8c03", "url": "https://api.github.com/repos/rust-lang/rust/commits/776c17f476c4be92f6cfe4dab528886973ea8c03", "html_url": "https://github.com/rust-lang/rust/commit/776c17f476c4be92f6cfe4dab528886973ea8c03"}, {"sha": "61b9036bb8612d6330f9cb6bb3b52219bebe1802", "url": "https://api.github.com/repos/rust-lang/rust/commits/61b9036bb8612d6330f9cb6bb3b52219bebe1802", "html_url": "https://github.com/rust-lang/rust/commit/61b9036bb8612d6330f9cb6bb3b52219bebe1802"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "933c1b5a6cd85823d05920bf1034dedb8b9d8d78", "filename": "src/doc/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d8738f9b52b62991e9c7b44a9d01a13c1398475/src%2Fdoc%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/0d8738f9b52b62991e9c7b44a9d01a13c1398475/src%2Fdoc%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2FREADME.md?ref=0d8738f9b52b62991e9c7b44a9d01a13c1398475", "patch": "@@ -19,7 +19,7 @@ for the 'std' and 'extra' libraries.\n To generate HTML documentation from one source file/crate, do something like:\n \n ~~~~\n-rustdoc --output-dir html-doc/ --output-format html ../src/libstd/path.rs\n+rustdoc --output html-doc/ --output-format html ../src/libstd/path.rs\n ~~~~\n \n (This, of course, requires a working build of the `rustdoc` tool.)"}, {"sha": "28319a377fa6c3b53eea8a2b3b78402101140b48", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/0d8738f9b52b62991e9c7b44a9d01a13c1398475/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d8738f9b52b62991e9c7b44a9d01a13c1398475/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=0d8738f9b52b62991e9c7b44a9d01a13c1398475", "patch": "@@ -53,12 +53,13 @@ This file consists of three conceptual sections:\n 3. Minor utility functions\n \n \n-## Recursive Types Some kinds of types, such as structs and enums can be\n-recursive. That means that the type definition of some type X refers to some\n-other type which in turn (transitively) refers to X. This introduces cycles into\n-the type referral graph. A naive algorithm doing an on-demand, depth-first\n-traversal of this graph when describing types, can get trapped in an endless\n-loop when it reaches such a cycle.\n+## Recursive Types\n+\n+Some kinds of types, such as structs and enums can be recursive. That means that\n+the type definition of some type X refers to some other type which in turn (transitively)\n+refers to X. This introduces cycles into the type referral graph. A naive algorithm doing\n+an on-demand, depth-first traversal of this graph when describing types, can get trapped\n+in an endless loop when it reaches such a cycle.\n \n For example, the following simple type for a singly-linked list...\n \n@@ -96,10 +97,12 @@ traversal at the type members after the type has been registered with the cache.\n the future)\n \n \n-## Source Locations and Line Information In addition to data type descriptions\n-the debugging information must also allow to map machine code locations back to\n-source code locations in order to be useful. This functionality is also handled\n-in this module. The following functions allow to control source mappings:\n+## Source Locations and Line Information\n+\n+In addition to data type descriptions the debugging information must also allow\n+to map machine code locations back to source code locations in order to be useful.\n+This functionality is also handled in this module. The following functions allow\n+to control source mappings:\n \n + set_source_location()\n + clear_source_location()\n@@ -139,10 +142,12 @@ of the prologue, however, they are ignored by LLVM's prologue detection. The\n source location emission is still disabled, so there is no need to do anything\n special with source location handling here.\n \n-## Unique Type Identification In order for link-time optimization to work\n-properly, LLVM needs a unique type identifier that tells it across compilation\n-units which types are the same as others. This type identifier is created by\n-TypeMap::get_unique_type_id_of_type() using the following algorithm:\n+## Unique Type Identification\n+\n+In order for link-time optimization to work properly, LLVM needs a unique type\n+identifier that tells it across compilation units which types are the same as\n+others. This type identifier is created by TypeMap::get_unique_type_id_of_type()\n+using the following algorithm:\n \n (1) Primitive types have their name as ID\n (2) Structs, enums and traits have a multipart identifier"}]}