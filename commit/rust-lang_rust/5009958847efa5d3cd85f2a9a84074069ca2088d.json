{"sha": "5009958847efa5d3cd85f2a9a84074069ca2088d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwMDk5NTg4NDdlZmE1ZDNjZDg1ZjJhOWE4NDA3NDA2OWNhMjA4OGQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-02-05T14:16:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-05T14:16:12Z"}, "message": "Merge #7568\n\n7568: Fix merging of `segment_index` in path resolution r=jonas-schievink a=jonas-schievink\n\nThis caused associated item lookup to fail when modifying `resolver.rs` to handle block expressions with inner items.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "c962a851c20d9d9cc0c2aefe6eeae36abf139bbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c962a851c20d9d9cc0c2aefe6eeae36abf139bbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5009958847efa5d3cd85f2a9a84074069ca2088d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgHVMsCRBK7hj4Ov3rIwAAdHIIAJzNH+ih8XncnzDmotv36Csx\nqhiplwXc7m63xa+MrQ+pOxiM3hFrIXnUv9iaU7WFoPwjBL3+cANYK/n2tkVKrr7h\nMty5RN1uBD/SfrQY3y9KfZNC/0c2LWaT4nITTlL+3swKRDTU3TdsErJ6jeV0zv2F\ntBsRZPvkrJUTRXjN3BpD7mEKEBy0UigKTV+2BvgPpjeNJLshzBQkfJFv4enuwAsI\nVOlb2SY6JPZttyJ5iVaYkLV/Pn47dwf2IlQ9u0zsKM43stO5eF9r2j9yOxG0rD2/\nlXSMmCGEvLB2W6Muk7ZoC4ozeIniswPoZnIGvyMHUqxf3MFuvZt7KPGYzs1njKo=\n=TdhP\n-----END PGP SIGNATURE-----\n", "payload": "tree c962a851c20d9d9cc0c2aefe6eeae36abf139bbb\nparent c72b0c3719f93027773983e0384432e33b69f36b\nparent 6239fe47306b6fa5a33e92e82d1e4dba76e4503f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1612534572 +0000\ncommitter GitHub <noreply@github.com> 1612534572 +0000\n\nMerge #7568\n\n7568: Fix merging of `segment_index` in path resolution r=jonas-schievink a=jonas-schievink\n\nThis caused associated item lookup to fail when modifying `resolver.rs` to handle block expressions with inner items.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5009958847efa5d3cd85f2a9a84074069ca2088d", "html_url": "https://github.com/rust-lang/rust/commit/5009958847efa5d3cd85f2a9a84074069ca2088d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5009958847efa5d3cd85f2a9a84074069ca2088d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c72b0c3719f93027773983e0384432e33b69f36b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c72b0c3719f93027773983e0384432e33b69f36b", "html_url": "https://github.com/rust-lang/rust/commit/c72b0c3719f93027773983e0384432e33b69f36b"}, {"sha": "6239fe47306b6fa5a33e92e82d1e4dba76e4503f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6239fe47306b6fa5a33e92e82d1e4dba76e4503f", "html_url": "https://github.com/rust-lang/rust/commit/6239fe47306b6fa5a33e92e82d1e4dba76e4503f"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "036e389b01d4d16b67f13b3ec83303aea002c347", "filename": "crates/hir_def/src/nameres/path_resolution.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5009958847efa5d3cd85f2a9a84074069ca2088d/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5009958847efa5d3cd85f2a9a84074069ca2088d/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs?ref=5009958847efa5d3cd85f2a9a84074069ca2088d", "patch": "@@ -108,7 +108,6 @@ impl DefMap {\n         shadow: BuiltinShadowMode,\n     ) -> ResolvePathResult {\n         let mut result = ResolvePathResult::empty(ReachedFixedPoint::No);\n-        result.segment_index = Some(usize::max_value());\n \n         let mut arc;\n         let mut current_map = self;\n@@ -128,7 +127,11 @@ impl DefMap {\n             }\n             // FIXME: this doesn't seem right; what if the different namespace resolutions come from different crates?\n             result.krate = result.krate.or(new.krate);\n-            result.segment_index = result.segment_index.min(new.segment_index);\n+            result.segment_index = match (result.segment_index, new.segment_index) {\n+                (Some(idx), None) => Some(idx),\n+                (Some(old), Some(new)) => Some(old.max(new)),\n+                (None, new) => new,\n+            };\n \n             match &current_map.block {\n                 Some(block) => {"}]}