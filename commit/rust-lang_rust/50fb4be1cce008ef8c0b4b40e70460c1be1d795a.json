{"sha": "50fb4be1cce008ef8c0b4b40e70460c1be1d795a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwZmI0YmUxY2NlMDA4ZWY4YzBiNGI0MGU3MDQ2MGMxYmUxZDc5NWE=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2013-11-16T23:25:56Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2013-11-19T00:20:09Z"}, "message": "Add Win64 calling convention.", "tree": {"sha": "9745d51c9897a835be05d3ed974fe1c1ebafccb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9745d51c9897a835be05d3ed974fe1c1ebafccb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50fb4be1cce008ef8c0b4b40e70460c1be1d795a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50fb4be1cce008ef8c0b4b40e70460c1be1d795a", "html_url": "https://github.com/rust-lang/rust/commit/50fb4be1cce008ef8c0b4b40e70460c1be1d795a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50fb4be1cce008ef8c0b4b40e70460c1be1d795a/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d569df41de221ce5b0ffd385caaa9fd6d5fb2ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d569df41de221ce5b0ffd385caaa9fd6d5fb2ff", "html_url": "https://github.com/rust-lang/rust/commit/3d569df41de221ce5b0ffd385caaa9fd6d5fb2ff"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "160bc5111688a1fe98695f690f9d6abec2ae2ad3", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50fb4be1cce008ef8c0b4b40e70460c1be1d795a/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50fb4be1cce008ef8c0b4b40e70460c1be1d795a/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=50fb4be1cce008ef8c0b4b40e70460c1be1d795a", "patch": "@@ -33,6 +33,7 @@ pub enum CallConv {\n     ColdCallConv = 9,\n     X86StdcallCallConv = 64,\n     X86FastcallCallConv = 65,\n+    X86_64_Win64 = 79,\n }\n \n pub enum Visibility {"}, {"sha": "161c4ee0d14adfb7fabbab18d3436c90b5506d31", "filename": "src/librustc/middle/trans/foreign.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/50fb4be1cce008ef8c0b4b40e70460c1be1d795a/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50fb4be1cce008ef8c0b4b40e70460c1be1d795a/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=50fb4be1cce008ef8c0b4b40e70460c1be1d795a", "patch": "@@ -33,7 +33,7 @@ use syntax::{ast};\n use syntax::{attr, ast_map};\n use syntax::parse::token::special_idents;\n use syntax::abi::{RustIntrinsic, Rust, Stdcall, Fastcall, System,\n-                  Cdecl, Aapcs, C, AbiSet};\n+                  Cdecl, Aapcs, C, AbiSet, Win64};\n use util::ppaux::{Repr, UserString};\n use middle::trans::type_::Type;\n \n@@ -96,6 +96,7 @@ pub fn llvm_calling_convention(ccx: &mut CrateContext,\n             Stdcall => lib::llvm::X86StdcallCallConv,\n             Fastcall => lib::llvm::X86FastcallCallConv,\n             C => lib::llvm::CCallConv,\n+            Win64 => lib::llvm::X86_64_Win64,\n \n             // NOTE These API constants ought to be more specific\n             Cdecl => lib::llvm::CCallConv,"}, {"sha": "4e9ba5532f37edacec10073d1c70cbb0965d1523", "filename": "src/libsyntax/abi.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/50fb4be1cce008ef8c0b4b40e70460c1be1d795a/src%2Flibsyntax%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50fb4be1cce008ef8c0b4b40e70460c1be1d795a/src%2Flibsyntax%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fabi.rs?ref=50fb4be1cce008ef8c0b4b40e70460c1be1d795a", "patch": "@@ -23,6 +23,7 @@ pub enum Abi {\n     Stdcall,\n     Fastcall,\n     Aapcs,\n+    Win64,\n \n     // Multiplatform ABIs second\n     Rust,\n@@ -73,6 +74,8 @@ static AbiDatas: &'static [AbiData] = &[\n     AbiData {abi: Stdcall, name: \"stdcall\", abi_arch: Archs(IntelBits)},\n     AbiData {abi: Fastcall, name:\"fastcall\", abi_arch: Archs(IntelBits)},\n     AbiData {abi: Aapcs, name: \"aapcs\", abi_arch: Archs(ArmBits)},\n+    AbiData {abi: Win64, name: \"win64\",\n+             abi_arch: Archs(1 << (X86_64 as uint))},\n \n     // Cross-platform ABIs\n     //"}, {"sha": "30579f0fc777bb191ea8e345a1c07bb37fa8f35b", "filename": "src/test/auxiliary/extern_calling_convention.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/50fb4be1cce008ef8c0b4b40e70460c1be1d795a/src%2Ftest%2Fauxiliary%2Fextern_calling_convention.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50fb4be1cce008ef8c0b4b40e70460c1be1d795a/src%2Ftest%2Fauxiliary%2Fextern_calling_convention.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fextern_calling_convention.rs?ref=50fb4be1cce008ef8c0b4b40e70460c1be1d795a", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Make sure Rust generates the correct calling convention for extern\n+// functions.\n+\n+#[inline(never)]\n+pub extern \"win64\" fn foo(a: int, b: int, c: int, d: int) {\n+    assert!(a == 1);\n+    assert!(b == 2);\n+    assert!(c == 3);\n+    assert!(d == 4);\n+    \n+    println!(\"a: {:?}, b: {:?}, c: {:?}, d: {:?}\",\n+             a, b, c, d)\n+}\n+\n+fn main() {\n+    foo(1, 2, 3, 4)\n+}"}, {"sha": "e8609a8b60b1a565621b4944b7fbadcd20f45abb", "filename": "src/test/run-pass/extern-calling-convention-test.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/50fb4be1cce008ef8c0b4b40e70460c1be1d795a/src%2Ftest%2Frun-pass%2Fextern-calling-convention-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50fb4be1cce008ef8c0b4b40e70460c1be1d795a/src%2Ftest%2Frun-pass%2Fextern-calling-convention-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-calling-convention-test.rs?ref=50fb4be1cce008ef8c0b4b40e70460c1be1d795a", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-fast: aux-build not compatible with fast\n+// aux-build:extern_calling_convention.rs\n+\n+extern mod extern_calling_convention;\n+\n+use extern_calling_convention::foo;\n+\n+fn main() {\n+    foo(1, 2, 3, 4);\n+}"}]}