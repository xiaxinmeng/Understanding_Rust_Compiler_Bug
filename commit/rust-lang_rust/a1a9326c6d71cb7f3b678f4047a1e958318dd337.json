{"sha": "a1a9326c6d71cb7f3b678f4047a1e958318dd337", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExYTkzMjZjNmQ3MWNiN2YzYjY3OGY0MDQ3YTFlOTU4MzE4ZGQzMzc=", "commit": {"author": {"name": "gifnksm", "email": "makoto.nksm+github@gmail.com", "date": "2013-04-20T01:44:32Z"}, "committer": {"name": "gifnksm", "email": "makoto.nksm+github@gmail.com", "date": "2013-04-20T02:15:25Z"}, "message": "libcore: Fix assertion failure in vec::windowe.\n\nvec::windowed fails if given window size is greater than vector length + 1.", "tree": {"sha": "ff548faa057a6442510315e75bad7951e549f336", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff548faa057a6442510315e75bad7951e549f336"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1a9326c6d71cb7f3b678f4047a1e958318dd337", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1a9326c6d71cb7f3b678f4047a1e958318dd337", "html_url": "https://github.com/rust-lang/rust/commit/a1a9326c6d71cb7f3b678f4047a1e958318dd337", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1a9326c6d71cb7f3b678f4047a1e958318dd337/comments", "author": {"login": "gifnksm", "id": 164213, "node_id": "MDQ6VXNlcjE2NDIxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/164213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gifnksm", "html_url": "https://github.com/gifnksm", "followers_url": "https://api.github.com/users/gifnksm/followers", "following_url": "https://api.github.com/users/gifnksm/following{/other_user}", "gists_url": "https://api.github.com/users/gifnksm/gists{/gist_id}", "starred_url": "https://api.github.com/users/gifnksm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gifnksm/subscriptions", "organizations_url": "https://api.github.com/users/gifnksm/orgs", "repos_url": "https://api.github.com/users/gifnksm/repos", "events_url": "https://api.github.com/users/gifnksm/events{/privacy}", "received_events_url": "https://api.github.com/users/gifnksm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gifnksm", "id": 164213, "node_id": "MDQ6VXNlcjE2NDIxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/164213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gifnksm", "html_url": "https://github.com/gifnksm", "followers_url": "https://api.github.com/users/gifnksm/followers", "following_url": "https://api.github.com/users/gifnksm/following{/other_user}", "gists_url": "https://api.github.com/users/gifnksm/gists{/gist_id}", "starred_url": "https://api.github.com/users/gifnksm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gifnksm/subscriptions", "organizations_url": "https://api.github.com/users/gifnksm/orgs", "repos_url": "https://api.github.com/users/gifnksm/repos", "events_url": "https://api.github.com/users/gifnksm/events{/privacy}", "received_events_url": "https://api.github.com/users/gifnksm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6510fd92544467a03df93b5124644976aa79f964", "url": "https://api.github.com/repos/rust-lang/rust/commits/6510fd92544467a03df93b5124644976aa79f964", "html_url": "https://github.com/rust-lang/rust/commit/6510fd92544467a03df93b5124644976aa79f964"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "4f2453c4d79ac59d6f1fa4d481f95577dcc51940", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a1a9326c6d71cb7f3b678f4047a1e958318dd337/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1a9326c6d71cb7f3b678f4047a1e958318dd337/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=a1a9326c6d71cb7f3b678f4047a1e958318dd337", "patch": "@@ -1516,6 +1516,7 @@ pub fn each_permutation<T:Copy>(v: &[T], put: &fn(ts: &[T]) -> bool) {\n #[cfg(stage0)] // XXX: lifetimes!\n pub fn windowed<T>(n: uint, v: &[T], it: &fn(&[T]) -> bool) {\n     assert!(1u <= n);\n+    if n > v.len() { return; }\n     for uint::range(0, v.len() - n + 1) |i| {\n         if !it(v.slice(i, i+n)) { return }\n     }\n@@ -1525,6 +1526,7 @@ pub fn windowed<T>(n: uint, v: &[T], it: &fn(&[T]) -> bool) {\n #[cfg(stage3)]\n pub fn windowed<'r, T>(n: uint, v: &'r [T], it: &fn(&'r [T]) -> bool) {\n     assert!(1u <= n);\n+    if n > v.len() { return; }\n     for uint::range(0, v.len() - n + 1) |i| {\n         if !it(v.slice(i, i + n)) { return }\n     }\n@@ -3833,6 +3835,7 @@ mod tests {\n         t(3, &[&[1,2,3],&[2,3,4],&[3,4,5],&[4,5,6]]);\n         t(4, &[&[1,2,3,4],&[2,3,4,5],&[3,4,5,6]]);\n         t(7, &[]);\n+        t(8, &[]);\n     }\n \n     #[test]"}]}