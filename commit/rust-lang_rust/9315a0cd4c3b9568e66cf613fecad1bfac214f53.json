{"sha": "9315a0cd4c3b9568e66cf613fecad1bfac214f53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzMTVhMGNkNGMzYjk1NjhlNjZjZjYxM2ZlY2FkMWJmYWMyMTRmNTM=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-08-12T16:11:44Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-08-12T16:15:58Z"}, "message": "Add tests for `#[no_mangle]` in `impl` blocks that looks like generic `impl` blocks but are actually not", "tree": {"sha": "d2ee44f61c513e2dbbd5596637e5bbf1f7ec2b74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2ee44f61c513e2dbbd5596637e5bbf1f7ec2b74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9315a0cd4c3b9568e66cf613fecad1bfac214f53", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYRVJPhUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLhOkgEAh8AQcLeetWaXXsr85fDxsmYS6CR0\nMAMZzKq8zDMqeNMBAKKI9B80P20HLND2lOsZidtUW44qDrU8b5qn+0tr3mAJ\n=drcx\n-----END PGP SIGNATURE-----", "payload": "tree d2ee44f61c513e2dbbd5596637e5bbf1f7ec2b74\nparent db138485b1caa7cc8be5ba7827c1889ab4ccf532\nauthor hyd-dev <yd-huang@outlook.com> 1628784704 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1628784958 +0800\n\nAdd tests for `#[no_mangle]` in `impl` blocks that looks like generic `impl` blocks but are actually not\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9315a0cd4c3b9568e66cf613fecad1bfac214f53", "html_url": "https://github.com/rust-lang/rust/commit/9315a0cd4c3b9568e66cf613fecad1bfac214f53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9315a0cd4c3b9568e66cf613fecad1bfac214f53/comments", "author": null, "committer": null, "parents": [{"sha": "db138485b1caa7cc8be5ba7827c1889ab4ccf532", "url": "https://api.github.com/repos/rust-lang/rust/commits/db138485b1caa7cc8be5ba7827c1889ab4ccf532", "html_url": "https://github.com/rust-lang/rust/commit/db138485b1caa7cc8be5ba7827c1889ab4ccf532"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "9126ac167cf2aaf3e600bce0368931b04ffcafbd", "filename": "src/test/ui/generics/generic-no-mangle.fixed", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9315a0cd4c3b9568e66cf613fecad1bfac214f53/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-no-mangle.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9315a0cd4c3b9568e66cf613fecad1bfac214f53/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-no-mangle.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-no-mangle.fixed?ref=9315a0cd4c3b9568e66cf613fecad1bfac214f53", "patch": "@@ -89,6 +89,11 @@ impl<T> Bar<T> {\n     pub fn baz<U>() {} //~ ERROR functions generic over types or consts must be mangled\n }\n \n+impl Bar<i32> {\n+    #[no_mangle]\n+    pub fn qux() {}\n+}\n+\n trait Trait3 {\n     fn foo();\n     extern \"C\" fn bar();\n@@ -121,6 +126,14 @@ trait Trait4 {\n     fn bar<'a>(x: &'a i32) -> &i32;\n }\n \n+impl Trait4 for Bar<i32> {\n+    #[no_mangle]\n+    fn foo() {}\n+\n+    #[no_mangle]\n+    fn bar<'b>(x: &'b i32) -> &i32 { x }\n+}\n+\n impl<'a> Trait4 for Baz<'a> {\n     #[no_mangle]\n     fn foo() {}\n@@ -129,4 +142,18 @@ impl<'a> Trait4 for Baz<'a> {\n     fn bar<'b>(x: &'b i32) -> &i32 { x }\n }\n \n+trait Trait5<T> {\n+    fn foo();\n+}\n+\n+impl Trait5<i32> for Foo {\n+    #[no_mangle]\n+    fn foo() {}\n+}\n+\n+impl Trait5<i32> for Bar<i32> {\n+    #[no_mangle]\n+    fn foo() {}\n+}\n+\n fn main() {}"}, {"sha": "e283cf4bfe544335d0c59a7221c6e190d8318c51", "filename": "src/test/ui/generics/generic-no-mangle.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9315a0cd4c3b9568e66cf613fecad1bfac214f53/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-no-mangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9315a0cd4c3b9568e66cf613fecad1bfac214f53/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-no-mangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-no-mangle.rs?ref=9315a0cd4c3b9568e66cf613fecad1bfac214f53", "patch": "@@ -89,6 +89,11 @@ impl<T> Bar<T> {\n     pub fn baz<U>() {} //~ ERROR functions generic over types or consts must be mangled\n }\n \n+impl Bar<i32> {\n+    #[no_mangle]\n+    pub fn qux() {}\n+}\n+\n trait Trait3 {\n     fn foo();\n     extern \"C\" fn bar();\n@@ -121,6 +126,14 @@ trait Trait4 {\n     fn bar<'a>(x: &'a i32) -> &i32;\n }\n \n+impl Trait4 for Bar<i32> {\n+    #[no_mangle]\n+    fn foo() {}\n+\n+    #[no_mangle]\n+    fn bar<'b>(x: &'b i32) -> &i32 { x }\n+}\n+\n impl<'a> Trait4 for Baz<'a> {\n     #[no_mangle]\n     fn foo() {}\n@@ -129,4 +142,18 @@ impl<'a> Trait4 for Baz<'a> {\n     fn bar<'b>(x: &'b i32) -> &i32 { x }\n }\n \n+trait Trait5<T> {\n+    fn foo();\n+}\n+\n+impl Trait5<i32> for Foo {\n+    #[no_mangle]\n+    fn foo() {}\n+}\n+\n+impl Trait5<i32> for Bar<i32> {\n+    #[no_mangle]\n+    fn foo() {}\n+}\n+\n fn main() {}"}, {"sha": "adfddbe9ca791377cc42b0a8bef30e2ca46c635e", "filename": "src/test/ui/generics/generic-no-mangle.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9315a0cd4c3b9568e66cf613fecad1bfac214f53/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-no-mangle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9315a0cd4c3b9568e66cf613fecad1bfac214f53/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-no-mangle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-no-mangle.stderr?ref=9315a0cd4c3b9568e66cf613fecad1bfac214f53", "patch": "@@ -117,23 +117,23 @@ LL |     pub fn baz<U>() {}\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: functions generic over types or consts must be mangled\n-  --> $DIR/generic-no-mangle.rs:100:5\n+  --> $DIR/generic-no-mangle.rs:105:5\n    |\n LL |     #[no_mangle]\n    |     ------------ help: remove this attribute\n LL |     fn foo() {}\n    |     ^^^^^^^^^^^\n \n error: functions generic over types or consts must be mangled\n-  --> $DIR/generic-no-mangle.rs:103:5\n+  --> $DIR/generic-no-mangle.rs:108:5\n    |\n LL |     #[no_mangle]\n    |     ------------ help: remove this attribute\n LL |     extern \"C\" fn bar() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: functions generic over types or consts must be mangled\n-  --> $DIR/generic-no-mangle.rs:106:5\n+  --> $DIR/generic-no-mangle.rs:111:5\n    |\n LL |     #[no_mangle]\n    |     ------------ help: remove this attribute"}]}