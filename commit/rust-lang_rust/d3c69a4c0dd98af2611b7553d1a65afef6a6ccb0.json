{"sha": "d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYzY5YTRjMGRkOThhZjI2MTFiNzU1M2QxYTY1YWZlZjZhNmNjYjA=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2021-01-28T14:56:13Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2021-01-28T14:56:13Z"}, "message": "Warn write-only fields", "tree": {"sha": "7d3144433422bcf97f6812296b5646ed0166771a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d3144433422bcf97f6812296b5646ed0166771a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0", "html_url": "https://github.com/rust-lang/rust/commit/d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e190206e2ff0c13d64701d9b4145bf89a2d0cab", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e190206e2ff0c13d64701d9b4145bf89a2d0cab", "html_url": "https://github.com/rust-lang/rust/commit/0e190206e2ff0c13d64701d9b4145bf89a2d0cab"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "a4798b9ae1f0cde6f550e835a754fa98c3f19fe4", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0", "patch": "@@ -37,6 +37,19 @@ fn should_explore(tcx: TyCtxt<'_>, hir_id: hir::HirId) -> bool {\n     )\n }\n \n+fn base_expr<'a>(expr: &'a hir::Expr<'a>) -> &'a hir::Expr<'a> {\n+    let mut current = expr;\n+    loop {\n+        match current.kind {\n+            hir::ExprKind::Field(base, ..) => {\n+                current = base;\n+            }\n+            _ => break,\n+        }\n+    }\n+    current\n+}\n+\n struct MarkSymbolVisitor<'tcx> {\n     worklist: Vec<hir::HirId>,\n     tcx: TyCtxt<'tcx>,\n@@ -263,6 +276,12 @@ impl<'tcx> Visitor<'tcx> for MarkSymbolVisitor<'tcx> {\n             hir::ExprKind::MethodCall(..) => {\n                 self.lookup_and_handle_method(expr.hir_id);\n             }\n+            hir::ExprKind::Assign(ref left, ref right, ..) => {\n+                // Ignore write to field\n+                self.visit_expr(base_expr(left));\n+                self.visit_expr(right);\n+                return;\n+            }\n             hir::ExprKind::Field(ref lhs, ..) => {\n                 self.handle_field_access(&lhs, expr.hir_id);\n             }"}, {"sha": "dfa3a561ec7ee1b9968635620b200094a89407a6", "filename": "src/test/ui/borrowck/borrowck-assign-to-subfield.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-assign-to-subfield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-assign-to-subfield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-assign-to-subfield.rs?ref=d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0", "patch": "@@ -1,5 +1,6 @@\n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(dead_code)]\n \n pub fn main() {\n     struct A {"}, {"sha": "78cfcfda8f97176cf47c9df0d727ee63b368dcbc", "filename": "src/test/ui/lint/dead-code/write-only-field.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.rs?ref=d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0", "patch": "@@ -0,0 +1,20 @@\n+#![deny(dead_code)]\n+\n+struct S {\n+    f: i32, //~ ERROR: field is never read\n+    sub: Sub, //~ ERROR: field is never read\n+}\n+\n+struct Sub {\n+    f: i32, //~ ERROR: field is never read\n+}\n+\n+fn field_write(s: &mut S) {\n+    s.f = 1;\n+    s.sub.f = 2;\n+}\n+\n+fn main() {\n+    let mut s = S { f: 0, sub: Sub { f: 0 } };\n+    field_write(&mut s);\n+}"}, {"sha": "70d2149665b203720e5512a046526cbb9b90de11", "filename": "src/test/ui/lint/dead-code/write-only-field.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.stderr?ref=d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0", "patch": "@@ -0,0 +1,26 @@\n+error: field is never read: `f`\n+  --> $DIR/write-only-field.rs:4:5\n+   |\n+LL |     f: i32,\n+   |     ^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/write-only-field.rs:1:9\n+   |\n+LL | #![deny(dead_code)]\n+   |         ^^^^^^^^^\n+\n+error: field is never read: `sub`\n+  --> $DIR/write-only-field.rs:5:5\n+   |\n+LL |     sub: Sub,\n+   |     ^^^^^^^^\n+\n+error: field is never read: `f`\n+  --> $DIR/write-only-field.rs:9:5\n+   |\n+LL |     f: i32,\n+   |     ^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}]}