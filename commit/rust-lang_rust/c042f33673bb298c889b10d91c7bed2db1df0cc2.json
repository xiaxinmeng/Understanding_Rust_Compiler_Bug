{"sha": "c042f33673bb298c889b10d91c7bed2db1df0cc2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNDJmMzM2NzNiYjI5OGM4ODliMTBkOTFjN2JlZDJkYjFkZjBjYzI=", "commit": {"author": {"name": "miguel raz", "email": "miguelraz@gmail.com", "date": "2021-06-02T01:05:30Z"}, "committer": {"name": "miguel raz", "email": "miguelraz@gmail.com", "date": "2021-06-02T01:05:30Z"}, "message": "clean up code, fudge approx true", "tree": {"sha": "c571aec4c2ae2f45ffb06d12f6c94ee4e2254e65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c571aec4c2ae2f45ffb06d12f6c94ee4e2254e65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c042f33673bb298c889b10d91c7bed2db1df0cc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c042f33673bb298c889b10d91c7bed2db1df0cc2", "html_url": "https://github.com/rust-lang/rust/commit/c042f33673bb298c889b10d91c7bed2db1df0cc2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c042f33673bb298c889b10d91c7bed2db1df0cc2/comments", "author": {"login": "miguelraz", "id": 13056181, "node_id": "MDQ6VXNlcjEzMDU2MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/13056181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelraz", "html_url": "https://github.com/miguelraz", "followers_url": "https://api.github.com/users/miguelraz/followers", "following_url": "https://api.github.com/users/miguelraz/following{/other_user}", "gists_url": "https://api.github.com/users/miguelraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelraz/subscriptions", "organizations_url": "https://api.github.com/users/miguelraz/orgs", "repos_url": "https://api.github.com/users/miguelraz/repos", "events_url": "https://api.github.com/users/miguelraz/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelraz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "miguelraz", "id": 13056181, "node_id": "MDQ6VXNlcjEzMDU2MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/13056181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelraz", "html_url": "https://github.com/miguelraz", "followers_url": "https://api.github.com/users/miguelraz/followers", "following_url": "https://api.github.com/users/miguelraz/following{/other_user}", "gists_url": "https://api.github.com/users/miguelraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelraz/subscriptions", "organizations_url": "https://api.github.com/users/miguelraz/orgs", "repos_url": "https://api.github.com/users/miguelraz/repos", "events_url": "https://api.github.com/users/miguelraz/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelraz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70305c5fad7da367d1ff2c443076c378a70b6a0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/70305c5fad7da367d1ff2c443076c378a70b6a0d", "html_url": "https://github.com/rust-lang/rust/commit/70305c5fad7da367d1ff2c443076c378a70b6a0d"}], "stats": {"total": 18, "additions": 5, "deletions": 13}, "files": [{"sha": "0bad0c2d557945a585c62199df26110bddc74dbd", "filename": "crates/core_simd/examples/nbody.rs", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c042f33673bb298c889b10d91c7bed2db1df0cc2/crates%2Fcore_simd%2Fexamples%2Fnbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c042f33673bb298c889b10d91c7bed2db1df0cc2/crates%2Fcore_simd%2Fexamples%2Fnbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fexamples%2Fnbody.rs?ref=c042f33673bb298c889b10d91c7bed2db1df0cc2", "patch": "@@ -14,7 +14,6 @@ pub struct Body {\n     pub mass: f64,\n }\n \n-// translation up to here\n const N_BODIES: usize = 5;\n const BODIES: [Body; N_BODIES] = [\n     // sun:\n@@ -134,7 +133,6 @@ pub fn advance(bodies: &mut [Body; N_BODIES], dt: f64) {\n             (r[i + 1] * r[i + 1]).horizontal_sum(),\n         ]);\n         let dmags = f64x2::splat(dt) / (d2s * d2s.sqrt());\n-        // dmags.write_to_slice_unaligned(&mut mag[i..]);\n         mag[i] = dmags[0];\n         mag[i + 1] = dmags[1];\n         i += 2;\n@@ -154,12 +152,6 @@ pub fn advance(bodies: &mut [Body; N_BODIES], dt: f64) {\n     }\n }\n \n-// #[inline]\n-// pub unsafe fn write_to_slice_unaligned(slice: &mut SimdF64::<LANES>) {\n-//     let target_ptr = slice.get_unchecked_mut(0) as *mut f64x2;\n-//     *(target_ptr as *mut f64x2) = SimdF64;\n-// }\n-\n pub fn run(n: usize) -> (f64, f64) {\n     let mut bodies = BODIES;\n     offset_momentum(&mut bodies);\n@@ -172,8 +164,9 @@ pub fn run(n: usize) -> (f64, f64) {\n     (energy_before, energy_after)\n }\n \n-fn approx_eq_f32(a: f32, b: f32) -> bool {\n-    (a - b).abs() < 0.00000001\n+// Good enough for demonstration purposes, not going for strictness here.\n+fn approx_eq_f64(a: f64, b: f64) -> bool {\n+    (a - b).abs() < 0.00001\n }\n \n #[cfg(test)]\n@@ -183,9 +176,8 @@ mod tests {\n         use super::*;\n         const OUTPUT: [f64; 2] = [-0.169075164, -0.169087605];\n         let (energy_before, energy_after) = super::run(1000);\n-        assert!(approx_eq_f32(energy_before as f32, OUTPUT[0] as f32));\n-        assert!(approx_eq_f32(energy_after as f32, OUTPUT[1] as f32));\n-        // }\n+        assert!(approx_eq_f64(energy_before, OUTPUT[0]));\n+        assert!(approx_eq_f64(energy_after, OUTPUT[1]));\n     }\n }\n "}]}