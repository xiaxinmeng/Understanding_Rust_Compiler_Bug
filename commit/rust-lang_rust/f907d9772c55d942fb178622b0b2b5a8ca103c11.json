{"sha": "f907d9772c55d942fb178622b0b2b5a8ca103c11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5MDdkOTc3MmM1NWQ5NDJmYjE3ODYyMmIwYjJiNWE4Y2ExMDNjMTE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-06-12T23:40:10Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-13T20:53:55Z"}, "message": "syntax: parse outer attributes in `quote_item!` calls.\n\nFixes #14857.", "tree": {"sha": "04b61cb264604b465dc9a80c3246734e665942fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04b61cb264604b465dc9a80c3246734e665942fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f907d9772c55d942fb178622b0b2b5a8ca103c11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f907d9772c55d942fb178622b0b2b5a8ca103c11", "html_url": "https://github.com/rust-lang/rust/commit/f907d9772c55d942fb178622b0b2b5a8ca103c11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f907d9772c55d942fb178622b0b2b5a8ca103c11/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d5ec04d184a5d28e75d74b725ebb7cc21b547af", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d5ec04d184a5d28e75d74b725ebb7cc21b547af", "html_url": "https://github.com/rust-lang/rust/commit/9d5ec04d184a5d28e75d74b725ebb7cc21b547af"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "4f1e2ab356e1e794779867de5f51b5ae50e83f0c", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f907d9772c55d942fb178622b0b2b5a8ca103c11/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f907d9772c55d942fb178622b0b2b5a8ca103c11/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=f907d9772c55d942fb178622b0b2b5a8ca103c11", "patch": "@@ -358,9 +358,8 @@ pub fn expand_quote_item(cx: &mut ExtCtxt,\n                          sp: Span,\n                          tts: &[ast::TokenTree])\n                          -> Box<base::MacResult> {\n-    let e_attrs = cx.expr_vec_ng(sp);\n-    let expanded = expand_parse_call(cx, sp, \"parse_item\",\n-                                    vec!(e_attrs), tts);\n+    let expanded = expand_parse_call(cx, sp, \"parse_item_with_outer_attributes\",\n+                                    vec!(), tts);\n     base::MacExpr::new(expanded)\n }\n "}, {"sha": "72c578b87699c5b0f335ee3bad3395cc6e4fd818", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f907d9772c55d942fb178622b0b2b5a8ca103c11/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f907d9772c55d942fb178622b0b2b5a8ca103c11/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=f907d9772c55d942fb178622b0b2b5a8ca103c11", "patch": "@@ -73,8 +73,7 @@ impl<'a> MacResult for ParserAnyMacro<'a> {\n         let mut ret = SmallVector::zero();\n         loop {\n             let mut parser = self.parser.borrow_mut();\n-            let attrs = parser.parse_outer_attributes();\n-            match parser.parse_item(attrs) {\n+            match parser.parse_item_with_outer_attributes() {\n                 Some(item) => ret.push(item),\n                 None => break\n             }"}, {"sha": "1ebcbc8a7d10218452987c26a74d483aecc95e8d", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f907d9772c55d942fb178622b0b2b5a8ca103c11/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f907d9772c55d942fb178622b0b2b5a8ca103c11/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=f907d9772c55d942fb178622b0b2b5a8ca103c11", "patch": "@@ -117,8 +117,7 @@ pub fn parse_item_from_source_str(name: String,\n                                   sess: &ParseSess)\n                                   -> Option<Gc<ast::Item>> {\n     let mut p = new_parser_from_source_str(sess, cfg, name, source);\n-    let attrs = p.parse_outer_attributes();\n-    maybe_aborted(p.parse_item(attrs),p)\n+    maybe_aborted(p.parse_item_with_outer_attributes(),p)\n }\n \n pub fn parse_meta_from_source_str(name: String,"}, {"sha": "d11d303059fa1e026232afee4615f6f03e7612a6", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f907d9772c55d942fb178622b0b2b5a8ca103c11/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f907d9772c55d942fb178622b0b2b5a8ca103c11/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f907d9772c55d942fb178622b0b2b5a8ca103c11", "patch": "@@ -4965,6 +4965,11 @@ impl<'a> Parser<'a> {\n         return IoviNone(attrs);\n     }\n \n+    pub fn parse_item_with_outer_attributes(&mut self) -> Option<Gc<Item>> {\n+        let attrs = self.parse_outer_attributes();\n+        self.parse_item(attrs)\n+    }\n+\n     pub fn parse_item(&mut self, attrs: Vec<Attribute> ) -> Option<Gc<Item>> {\n         match self.parse_item_or_view_item(attrs, true) {\n             IoviNone(_) => None,"}, {"sha": "96f5fca5a2ded14e696f6a5491eff9a55277e461", "filename": "src/test/run-pass-fulldeps/quote-tokens.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f907d9772c55d942fb178622b0b2b5a8ca103c11/src%2Ftest%2Frun-pass-fulldeps%2Fquote-tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f907d9772c55d942fb178622b0b2b5a8ca103c11/src%2Ftest%2Frun-pass-fulldeps%2Fquote-tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fquote-tokens.rs?ref=f907d9772c55d942fb178622b0b2b5a8ca103c11", "patch": "@@ -28,6 +28,9 @@ fn syntax_extension(cx: &ExtCtxt) {\n     let _f: @syntax::ast::Expr = quote_expr!(cx, ());\n     let _g: @syntax::ast::Expr = quote_expr!(cx, true);\n     let _h: @syntax::ast::Expr = quote_expr!(cx, 'a');\n+\n+    let i: Option<@syntax::ast::Item> = quote_item!(cx, #[deriving(Eq)] struct Foo; );\n+    assert!(i.is_some());\n }\n \n fn main() {"}]}