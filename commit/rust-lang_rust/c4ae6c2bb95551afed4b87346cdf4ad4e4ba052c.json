{"sha": "c4ae6c2bb95551afed4b87346cdf4ad4e4ba052c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0YWU2YzJiYjk1NTUxYWZlZDRiODczNDZjZGY0YWQ0ZTRiYTA1MmM=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-10-18T16:05:19Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-10-18T16:05:19Z"}, "message": "Add comment", "tree": {"sha": "e3087946a7b07a257bfe9d9504b77d4f1bf7f61c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3087946a7b07a257bfe9d9504b77d4f1bf7f61c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4ae6c2bb95551afed4b87346cdf4ad4e4ba052c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4ae6c2bb95551afed4b87346cdf4ad4e4ba052c", "html_url": "https://github.com/rust-lang/rust/commit/c4ae6c2bb95551afed4b87346cdf4ad4e4ba052c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4ae6c2bb95551afed4b87346cdf4ad4e4ba052c/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da0ba2f64574e0ecca65d0d1045af00abe1515fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/da0ba2f64574e0ecca65d0d1045af00abe1515fd", "html_url": "https://github.com/rust-lang/rust/commit/da0ba2f64574e0ecca65d0d1045af00abe1515fd"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "a7ddca1b6b632e22e46c46f5a263cc26eac44d56", "filename": "compiler/rustc_mir_build/src/thir/pattern/_match.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c4ae6c2bb95551afed4b87346cdf4ad4e4ba052c/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4ae6c2bb95551afed4b87346cdf4ad4e4ba052c/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2F_match.rs?ref=c4ae6c2bb95551afed4b87346cdf4ad4e4ba052c", "patch": "@@ -2113,6 +2113,9 @@ fn pat_constructor<'tcx>(\n                 match value.ty.kind() {\n                     ty::Float(_) => Some(FloatRange(value, value, RangeEnd::Included)),\n                     ty::Ref(_, t, _) if t.is_str() => Some(Str(value)),\n+                    // All constants that can be structurally matched have already been expanded\n+                    // into the corresponding `Pat`s by `const_to_pat`. Constants that remain are\n+                    // opaque.\n                     _ => Some(Opaque),\n                 }\n             }"}]}