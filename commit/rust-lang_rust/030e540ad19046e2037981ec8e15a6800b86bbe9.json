{"sha": "030e540ad19046e2037981ec8e15a6800b86bbe9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMGU1NDBhZDE5MDQ2ZTIwMzc5ODFlYzhlMTVhNjgwMGI4NmJiZTk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-20T14:51:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-20T15:52:02Z"}, "message": "Reduce visibility", "tree": {"sha": "8fa731c7041357f6d8df7215857715fca985fc26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fa731c7041357f6d8df7215857715fca985fc26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/030e540ad19046e2037981ec8e15a6800b86bbe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/030e540ad19046e2037981ec8e15a6800b86bbe9", "html_url": "https://github.com/rust-lang/rust/commit/030e540ad19046e2037981ec8e15a6800b86bbe9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/030e540ad19046e2037981ec8e15a6800b86bbe9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ce1aa32c40e68ea905c83c315bddfcdd1b7ae26", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ce1aa32c40e68ea905c83c315bddfcdd1b7ae26", "html_url": "https://github.com/rust-lang/rust/commit/2ce1aa32c40e68ea905c83c315bddfcdd1b7ae26"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "996d06db6144208591a2d5e18df6db008558255f", "filename": "crates/ra_hir_def/src/item_scope.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/030e540ad19046e2037981ec8e15a6800b86bbe9/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/030e540ad19046e2037981ec8e15a6800b86bbe9/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_scope.rs?ref=030e540ad19046e2037981ec8e15a6800b86bbe9", "patch": "@@ -36,7 +36,7 @@ static BUILTIN_SCOPE: Lazy<FxHashMap<Name, Resolution>> = Lazy::new(|| {\n \n /// Shadow mode for builtin type which can be shadowed by module.\n #[derive(Debug, Copy, Clone, PartialEq, Eq)]\n-pub enum BuiltinShadowMode {\n+pub(crate) enum BuiltinShadowMode {\n     // Prefer Module\n     Module,\n     // Prefer Other Types\n@@ -60,19 +60,19 @@ impl ItemScope {\n     }\n \n     /// Iterate over all module scoped macros\n-    pub fn macros<'a>(&'a self) -> impl Iterator<Item = (&'a Name, MacroDefId)> + 'a {\n+    pub(crate) fn macros<'a>(&'a self) -> impl Iterator<Item = (&'a Name, MacroDefId)> + 'a {\n         self.items\n             .iter()\n             .filter_map(|(name, res)| res.def.take_macros().map(|macro_| (name, macro_)))\n     }\n \n-    /// Iterate over all legacy textual scoped macros visable at the end of the module\n-    pub fn legacy_macros<'a>(&'a self) -> impl Iterator<Item = (&'a Name, MacroDefId)> + 'a {\n+    /// Iterate over all legacy textual scoped macros visible at the end of the module\n+    pub(crate) fn legacy_macros<'a>(&'a self) -> impl Iterator<Item = (&'a Name, MacroDefId)> + 'a {\n         self.legacy_macros.iter().map(|(name, def)| (name, *def))\n     }\n \n     /// Get a name from current module scope, legacy macros are not included\n-    pub fn get(&self, name: &Name, shadow: BuiltinShadowMode) -> Option<&Resolution> {\n+    pub(crate) fn get(&self, name: &Name, shadow: BuiltinShadowMode) -> Option<&Resolution> {\n         match shadow {\n             BuiltinShadowMode::Module => self.items.get(name).or_else(|| BUILTIN_SCOPE.get(name)),\n             BuiltinShadowMode::Other => {\n@@ -88,7 +88,7 @@ impl ItemScope {\n         }\n     }\n \n-    pub fn traits<'a>(&'a self) -> impl Iterator<Item = TraitId> + 'a {\n+    pub(crate) fn traits<'a>(&'a self) -> impl Iterator<Item = TraitId> + 'a {\n         self.items.values().filter_map(|r| match r.def.take_types() {\n             Some(ModuleDefId::TraitId(t)) => Some(t),\n             _ => None,"}]}