{"sha": "d6236685516420bbc70399fcfc74f3b7e46e8349", "node_id": "C_kwDOAAsO6NoAKGQ2MjM2Njg1NTE2NDIwYmJjNzAzOTlmY2ZjNzRmM2I3ZTQ2ZTgzNDk", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2023-05-16T19:03:28Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2023-05-16T19:03:28Z"}, "message": "Move DebuggerVisualizerFile types from rustc_span to rustc_middle", "tree": {"sha": "ab52c54955005e8abb15f5b1d72f09e4c757e698", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab52c54955005e8abb15f5b1d72f09e4c757e698"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6236685516420bbc70399fcfc74f3b7e46e8349", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6236685516420bbc70399fcfc74f3b7e46e8349", "html_url": "https://github.com/rust-lang/rust/commit/d6236685516420bbc70399fcfc74f3b7e46e8349", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6236685516420bbc70399fcfc74f3b7e46e8349/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7d48800f97fff4948a49d4c8e97619e9a265db4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7d48800f97fff4948a49d4c8e97619e9a265db4", "html_url": "https://github.com/rust-lang/rust/commit/a7d48800f97fff4948a49d4c8e97619e9a265db4"}], "stats": {"total": 108, "additions": 60, "deletions": 48}, "files": [{"sha": "37f30917609aef11ab1d286fc5183abc45e70645", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/gdb.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fgdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fgdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fgdb.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -9,10 +9,9 @@ use rustc_ast::attr;\n use rustc_codegen_ssa::base::collect_debugger_visualizers_transitive;\n use rustc_codegen_ssa::traits::*;\n use rustc_hir::def_id::LOCAL_CRATE;\n-use rustc_middle::bug;\n+use rustc_middle::{bug, middle::debugger_visualizer::DebuggerVisualizerType};\n use rustc_session::config::{CrateType, DebugInfo};\n use rustc_span::symbol::sym;\n-use rustc_span::DebuggerVisualizerType;\n \n /// Inserts a side-effect free instruction sequence that makes sure that the\n /// .debug_gdb_scripts global is referenced, so it isn't removed by the linker."}, {"sha": "d1a2e705498900db322c74751cf16af1e1a09f10", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -9,6 +9,7 @@ use rustc_fs_util::fix_windows_verbatim_for_gcc;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_metadata::find_native_static_library;\n use rustc_metadata::fs::{emit_wrapper_file, METADATA_FILENAME};\n+use rustc_middle::middle::debugger_visualizer::DebuggerVisualizerFile;\n use rustc_middle::middle::dependency_format::Linkage;\n use rustc_middle::middle::exported_symbols::SymbolExportKind;\n use rustc_session::config::{self, CFGuard, CrateType, DebugInfo, LdImpl, Strip};\n@@ -21,7 +22,6 @@ use rustc_session::utils::NativeLibKind;\n /// need out of the shared crate context before we get rid of it.\n use rustc_session::{filesearch, Session};\n use rustc_span::symbol::Symbol;\n-use rustc_span::DebuggerVisualizerFile;\n use rustc_target::spec::crt_objects::{CrtObjects, LinkSelfContainedDefault};\n use rustc_target::spec::{Cc, LinkOutputKind, LinkerFlavor, LinkerFlavorCli, Lld, PanicStrategy};\n use rustc_target::spec::{RelocModel, RelroLevel, SanitizerSet, SplitDebuginfo};"}, {"sha": "15c7847155d2f0a509181ee8d9c8779f68acda64", "filename": "compiler/rustc_codegen_ssa/src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -23,6 +23,7 @@ use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::lang_items::LangItem;\n use rustc_metadata::EncodedMetadata;\n use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrs;\n+use rustc_middle::middle::debugger_visualizer::{DebuggerVisualizerFile, DebuggerVisualizerType};\n use rustc_middle::middle::exported_symbols;\n use rustc_middle::middle::exported_symbols::SymbolExportKind;\n use rustc_middle::middle::lang_items;\n@@ -35,7 +36,6 @@ use rustc_session::config::{self, CrateType, EntryFnType, OutputType};\n use rustc_session::Session;\n use rustc_span::symbol::sym;\n use rustc_span::Symbol;\n-use rustc_span::{DebuggerVisualizerFile, DebuggerVisualizerType};\n use rustc_target::abi::{Align, FIRST_VARIANT};\n \n use std::collections::BTreeSet;"}, {"sha": "f4ce293754824a17f0f1f0a12d16c375970ec0fc", "filename": "compiler/rustc_codegen_ssa/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -28,6 +28,7 @@ use rustc_errors::{DiagnosticMessage, SubdiagnosticMessage};\n use rustc_fluent_macro::fluent_messages;\n use rustc_hir::def_id::CrateNum;\n use rustc_middle::dep_graph::WorkProduct;\n+use rustc_middle::middle::debugger_visualizer::DebuggerVisualizerFile;\n use rustc_middle::middle::dependency_format::Dependencies;\n use rustc_middle::middle::exported_symbols::SymbolExportKind;\n use rustc_middle::query::{ExternProviders, Providers};\n@@ -37,7 +38,6 @@ use rustc_session::config::{CrateType, OutputFilenames, OutputType, RUST_CGU_EXT\n use rustc_session::cstore::{self, CrateSource};\n use rustc_session::utils::NativeLibKind;\n use rustc_span::symbol::Symbol;\n-use rustc_span::DebuggerVisualizerFile;\n use std::collections::BTreeSet;\n use std::io;\n use std::path::{Path, PathBuf};"}, {"sha": "ee83c6e466d547d1a8cec0103800fbb835706252", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -18,6 +18,7 @@ use rustc_hir::definitions::{DefKey, DefPath, DefPathData, DefPathHash};\n use rustc_hir::diagnostic_items::DiagnosticItems;\n use rustc_index::{Idx, IndexVec};\n use rustc_middle::metadata::ModChild;\n+use rustc_middle::middle::debugger_visualizer::DebuggerVisualizerFile;\n use rustc_middle::middle::exported_symbols::{ExportedSymbol, SymbolExportInfo};\n use rustc_middle::mir::interpret::{AllocDecodingSession, AllocDecodingState};\n use rustc_middle::ty::codec::TyDecoder;\n@@ -961,7 +962,7 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n             .decode((self, sess))\n     }\n \n-    fn get_debugger_visualizers(self) -> Vec<rustc_span::DebuggerVisualizerFile> {\n+    fn get_debugger_visualizers(self) -> Vec<DebuggerVisualizerFile> {\n         self.root.debugger_visualizers.decode(self).collect::<Vec<_>>()\n     }\n "}, {"sha": "2d0e033bd548a7794f1fb33f473191d4aa27af44", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -19,6 +19,7 @@ use rustc_hir::definitions::DefPathData;\n use rustc_hir::intravisit::{self, Visitor};\n use rustc_hir::lang_items::LangItem;\n use rustc_middle::hir::nested_filter;\n+use rustc_middle::middle::debugger_visualizer::DebuggerVisualizerFile;\n use rustc_middle::middle::dependency_format::Linkage;\n use rustc_middle::middle::exported_symbols::{\n     metadata_symbol_name, ExportedSymbol, SymbolExportInfo,\n@@ -36,9 +37,7 @@ use rustc_session::config::{CrateType, OptLevel};\n use rustc_session::cstore::{ForeignModule, LinkagePreference, NativeLib};\n use rustc_span::hygiene::{ExpnIndex, HygieneEncodeContext, MacroKind};\n use rustc_span::symbol::{sym, Symbol};\n-use rustc_span::{\n-    self, DebuggerVisualizerFile, ExternalSource, FileName, SourceFile, Span, SyntaxContext,\n-};\n+use rustc_span::{self, ExternalSource, FileName, SourceFile, Span, SyntaxContext};\n use std::borrow::Borrow;\n use std::collections::hash_map::Entry;\n use std::hash::Hash;"}, {"sha": "03b583904f6933bddfa939c6d882f4f67eff4789", "filename": "compiler/rustc_metadata/src/rmeta/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -2,6 +2,7 @@ use crate::creader::CrateMetadataRef;\n use decoder::Metadata;\n use def_path_hash_map::DefPathHashMapRef;\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_middle::middle::debugger_visualizer::DebuggerVisualizerFile;\n use table::TableBuilder;\n \n use rustc_ast as ast;\n@@ -246,7 +247,7 @@ pub(crate) struct CrateRoot {\n     proc_macro_data: Option<ProcMacroData>,\n \n     tables: LazyTables,\n-    debugger_visualizers: LazyArray<rustc_span::DebuggerVisualizerFile>,\n+    debugger_visualizers: LazyArray<DebuggerVisualizerFile>,\n \n     exported_symbols: LazyArray<(ExportedSymbol<'static>, SymbolExportInfo)>,\n "}, {"sha": "3b59df778dc98f1a6486fb4cef98ce8645406c0f", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -1,4 +1,5 @@\n use crate::hir::{ModuleItems, Owner};\n+use crate::middle::debugger_visualizer::DebuggerVisualizerFile;\n use crate::query::LocalCrate;\n use crate::ty::TyCtxt;\n use rustc_ast as ast;\n@@ -15,7 +16,7 @@ use rustc_index::Idx;\n use rustc_middle::hir::nested_filter;\n use rustc_span::def_id::StableCrateId;\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n-use rustc_span::{DebuggerVisualizerFile, Span};\n+use rustc_span::Span;\n use rustc_target::spec::abi::Abi;\n \n #[inline]"}, {"sha": "a0497d805dad06c447e0996563dae0807f8b5780", "filename": "compiler/rustc_middle/src/middle/debugger_visualizer.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fdebugger_visualizer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fdebugger_visualizer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fdebugger_visualizer.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -0,0 +1,38 @@\n+use rustc_data_structures::sync::Lrc;\n+use std::path::PathBuf;\n+\n+#[derive(HashStable)]\n+#[derive(Copy, PartialEq, PartialOrd, Clone, Ord, Eq, Hash, Debug, Encodable, Decodable)]\n+pub enum DebuggerVisualizerType {\n+    Natvis,\n+    GdbPrettyPrinter,\n+}\n+\n+/// A single debugger visualizer file.\n+#[derive(HashStable)]\n+#[derive(Clone, Debug, Hash, PartialEq, Eq, PartialOrd, Ord, Encodable, Decodable)]\n+pub struct DebuggerVisualizerFile {\n+    /// The complete debugger visualizer source.\n+    pub src: Lrc<[u8]>,\n+    /// Indicates which visualizer type this targets.\n+    pub visualizer_type: DebuggerVisualizerType,\n+    /// The file path to the visualizer file. This is used for reporting\n+    /// visualizer files in dep-info. Before it is written to crate metadata,\n+    /// the path is erased to `None`, so as not to emit potentially privacy\n+    /// sensitive data.\n+    pub path: Option<PathBuf>,\n+}\n+\n+impl DebuggerVisualizerFile {\n+    pub fn new(src: Lrc<[u8]>, visualizer_type: DebuggerVisualizerType, path: PathBuf) -> Self {\n+        DebuggerVisualizerFile { src, visualizer_type, path: Some(path) }\n+    }\n+\n+    pub fn path_erased(&self) -> Self {\n+        DebuggerVisualizerFile {\n+            src: self.src.clone(),\n+            visualizer_type: self.visualizer_type,\n+            path: None,\n+        }\n+    }\n+}"}, {"sha": "85c5af9ca13cbf73b9888be6fd84904a6960a192", "filename": "compiler/rustc_middle/src/middle/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fmod.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -1,4 +1,5 @@\n pub mod codegen_fn_attrs;\n+pub mod debugger_visualizer;\n pub mod dependency_format;\n pub mod exported_symbols;\n pub mod lang_items;"}, {"sha": "ab3da4ef8f34c6ab3fa3a1f98b3ead5ed9bd9d6f", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -12,6 +12,7 @@ use crate::infer::canonical::{self, Canonical};\n use crate::lint::LintExpectation;\n use crate::metadata::ModChild;\n use crate::middle::codegen_fn_attrs::CodegenFnAttrs;\n+use crate::middle::debugger_visualizer::DebuggerVisualizerFile;\n use crate::middle::exported_symbols::{ExportedSymbol, SymbolExportInfo};\n use crate::middle::lib_features::LibFeatures;\n use crate::middle::privacy::EffectiveVisibilities;\n@@ -1795,7 +1796,7 @@ rustc_queries! {\n     /// NOTE: This query has to be marked `eval_always` because it reads data\n     ///       directly from disk that is not tracked anywhere else. I.e. it\n     ///       represents a genuine input to the query system.\n-    query debugger_visualizers(_: CrateNum) -> &'tcx Vec<rustc_span::DebuggerVisualizerFile> {\n+    query debugger_visualizers(_: CrateNum) -> &'tcx Vec<DebuggerVisualizerFile> {\n         arena_cache\n         desc { \"looking up the debugger visualizers for this crate\" }\n         separate_provide_extern"}, {"sha": "a2e77d9cdfe38588b19c1a924ddc2488dc8d766e", "filename": "compiler/rustc_middle/src/ty/parameterized.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_middle%2Fsrc%2Fty%2Fparameterized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_middle%2Fsrc%2Fty%2Fparameterized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fparameterized.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -56,6 +56,7 @@ trivially_parameterized_over_tcx! {\n     std::string::String,\n     crate::metadata::ModChild,\n     crate::middle::codegen_fn_attrs::CodegenFnAttrs,\n+    crate::middle::debugger_visualizer::DebuggerVisualizerFile,\n     crate::middle::exported_symbols::SymbolExportInfo,\n     crate::middle::resolve_bound_vars::ObjectLifetimeDefault,\n     crate::mir::ConstQualifs,\n@@ -91,7 +92,6 @@ trivially_parameterized_over_tcx! {\n     rustc_session::cstore::ForeignModule,\n     rustc_session::cstore::LinkagePreference,\n     rustc_session::cstore::NativeLib,\n-    rustc_span::DebuggerVisualizerFile,\n     rustc_span::ExpnData,\n     rustc_span::ExpnHash,\n     rustc_span::ExpnId,"}, {"sha": "41f92227e7c2d21172fe93c1d12298eec3ecced0", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -1915,7 +1915,10 @@ impl CheckAttrVisitor<'_> {\n \n     /// Checks if the items on the `#[debugger_visualizer]` attribute are valid.\n     fn check_debugger_visualizer(&self, attr: &Attribute, target: Target) -> bool {\n-        // FIXME: mention that other checks are done in the query provider\n+        // Here we only check that the #[debugger_visualizer] attribute is attached\n+        // to nothing other than a module. All other checks are done in the\n+        // `debugger_visualizer` query where they need to be done for decoding\n+        // anyway.\n         match target {\n             Target::Mod => {}\n             _ => {"}, {"sha": "73e783b4a14995e4ad9826f67cc4d3d96d266788", "filename": "compiler/rustc_passes/src/debugger_visualizer.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_passes%2Fsrc%2Fdebugger_visualizer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_passes%2Fsrc%2Fdebugger_visualizer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdebugger_visualizer.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -4,11 +4,12 @@ use rustc_ast::Attribute;\n use rustc_data_structures::sync::Lrc;\n use rustc_expand::base::resolve_path;\n use rustc_middle::{\n+    middle::debugger_visualizer::{DebuggerVisualizerFile, DebuggerVisualizerType},\n     query::{LocalCrate, Providers},\n     ty::TyCtxt,\n };\n use rustc_session::Session;\n-use rustc_span::{sym, DebuggerVisualizerFile, DebuggerVisualizerType};\n+use rustc_span::sym;\n \n use crate::errors::{DebugVisualizerInvalid, DebugVisualizerUnreadable};\n "}, {"sha": "8d70aa47f781e61ba08f73b07a4c8b3209b09ff1", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6236685516420bbc70399fcfc74f3b7e46e8349/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=d6236685516420bbc70399fcfc74f3b7e46e8349", "patch": "@@ -1257,39 +1257,6 @@ impl SourceFileHash {\n     }\n }\n \n-#[derive(HashStable_Generic)]\n-#[derive(Copy, PartialEq, PartialOrd, Clone, Ord, Eq, Hash, Debug, Encodable, Decodable)]\n-pub enum DebuggerVisualizerType {\n-    Natvis,\n-    GdbPrettyPrinter,\n-}\n-\n-/// A single debugger visualizer file.\n-#[derive(HashStable_Generic)]\n-#[derive(Clone, Debug, Hash, PartialEq, Eq, PartialOrd, Ord, Encodable, Decodable)]\n-pub struct DebuggerVisualizerFile {\n-    /// The complete debugger visualizer source.\n-    pub src: Lrc<[u8]>,\n-    /// Indicates which visualizer type this targets.\n-    pub visualizer_type: DebuggerVisualizerType,\n-    // FIXME: Docs\n-    pub path: Option<PathBuf>,\n-}\n-\n-impl DebuggerVisualizerFile {\n-    pub fn new(src: Lrc<[u8]>, visualizer_type: DebuggerVisualizerType, path: PathBuf) -> Self {\n-        DebuggerVisualizerFile { src, visualizer_type, path: Some(path) }\n-    }\n-\n-    pub fn path_erased(&self) -> Self {\n-        DebuggerVisualizerFile {\n-            src: self.src.clone(),\n-            visualizer_type: self.visualizer_type,\n-            path: None,\n-        }\n-    }\n-}\n-\n #[derive(Clone)]\n pub enum SourceFileLines {\n     /// The source file lines, in decoded (random-access) form."}]}