{"sha": "0ca166277cb663465430d79e5311bd1ea97a27d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjYTE2NjI3N2NiNjYzNDY1NDMwZDc5ZTUzMTFiZDFlYTk3YTI3ZDU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-09-28T14:11:34Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-09-28T14:11:34Z"}, "message": "Rust upgrade to rustc 1.22.0-nightly (0e6f4cf51 2017-09-27)", "tree": {"sha": "25f070d1863536099ca8f57631c454ba22d5b5bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25f070d1863536099ca8f57631c454ba22d5b5bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ca166277cb663465430d79e5311bd1ea97a27d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ca166277cb663465430d79e5311bd1ea97a27d5", "html_url": "https://github.com/rust-lang/rust/commit/0ca166277cb663465430d79e5311bd1ea97a27d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ca166277cb663465430d79e5311bd1ea97a27d5/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "387efd459c0ad3db7af15f1a573057b8587f9748", "url": "https://api.github.com/repos/rust-lang/rust/commits/387efd459c0ad3db7af15f1a573057b8587f9748", "html_url": "https://github.com/rust-lang/rust/commit/387efd459c0ad3db7af15f1a573057b8587f9748"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "76f1a603f242856a9dcff57cfb40a628a8388387", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ca166277cb663465430d79e5311bd1ea97a27d5/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ca166277cb663465430d79e5311bd1ea97a27d5/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=0ca166277cb663465430d79e5311bd1ea97a27d5", "patch": "@@ -1604,7 +1604,7 @@ fn is_ref_iterable_type(cx: &LateContext, e: &Expr) -> bool {\n fn is_iterable_array(ty: Ty) -> bool {\n     // IntoIterator is currently only implemented for array sizes <= 32 in rustc\n     match ty.sty {\n-        ty::TyArray(_, n) => (0...32).contains(const_to_u64(n)),\n+        ty::TyArray(_, n) => (0..=32).contains(const_to_u64(n)),\n         _ => false,\n     }\n }"}, {"sha": "d376a62912d04519bd555e193abfbf73a68b7751", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0ca166277cb663465430d79e5311bd1ea97a27d5/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ca166277cb663465430d79e5311bd1ea97a27d5/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=0ca166277cb663465430d79e5311bd1ea97a27d5", "patch": "@@ -126,7 +126,7 @@ impl<'a> Sugg<'a> {\n             ast::ExprKind::While(..) |\n             ast::ExprKind::WhileLet(..) => Sugg::NonParen(snippet),\n             ast::ExprKind::Range(.., RangeLimits::HalfOpen) => Sugg::BinOp(AssocOp::DotDot, snippet),\n-            ast::ExprKind::Range(.., RangeLimits::Closed) => Sugg::BinOp(AssocOp::DotDotDot, snippet),\n+            ast::ExprKind::Range(.., RangeLimits::Closed) => Sugg::BinOp(AssocOp::DotDotEq, snippet),\n             ast::ExprKind::Assign(..) => Sugg::BinOp(AssocOp::Assign, snippet),\n             ast::ExprKind::AssignOp(op, ..) => Sugg::BinOp(astbinop2assignop(op), snippet),\n             ast::ExprKind::Binary(op, ..) => Sugg::BinOp(AssocOp::from_ast_binop(op.node), snippet),\n@@ -165,7 +165,7 @@ impl<'a> Sugg<'a> {\n     pub fn range(self, end: Self, limit: ast::RangeLimits) -> Sugg<'static> {\n         match limit {\n             ast::RangeLimits::HalfOpen => make_assoc(AssocOp::DotDot, &self, &end),\n-            ast::RangeLimits::Closed => make_assoc(AssocOp::DotDotDot, &self, &end),\n+            ast::RangeLimits::Closed => make_assoc(AssocOp::DotDotEq, &self, &end),\n         }\n     }\n \n@@ -312,7 +312,7 @@ pub fn make_assoc(op: AssocOp, lhs: &Sugg, rhs: &Sugg) -> Sugg<'static> {\n         AssocOp::AssignOp(op) => format!(\"{} {}= {}\", lhs, token_to_string(&token::BinOp(op)), rhs),\n         AssocOp::As => format!(\"{} as {}\", lhs, rhs),\n         AssocOp::DotDot => format!(\"{}..{}\", lhs, rhs),\n-        AssocOp::DotDotDot => format!(\"{}...{}\", lhs, rhs),\n+        AssocOp::DotDotEq => format!(\"{}...{}\", lhs, rhs),\n         AssocOp::Colon => format!(\"{}: {}\", lhs, rhs),\n     };\n \n@@ -362,7 +362,7 @@ fn associativity(op: &AssocOp) -> Associativity {\n         ShiftLeft |\n         ShiftRight |\n         Subtract => Associativity::Left,\n-        DotDot | DotDotDot => Associativity::None,\n+        DotDot | DotDotEq => Associativity::None,\n     }\n }\n "}]}