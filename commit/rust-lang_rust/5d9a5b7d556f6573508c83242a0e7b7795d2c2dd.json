{"sha": "5d9a5b7d556f6573508c83242a0e7b7795d2c2dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkOWE1YjdkNTU2ZjY1NzM1MDhjODMyNDJhMGU3Yjc3OTVkMmMyZGQ=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-07-07T20:06:38Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-07-08T01:22:27Z"}, "message": "Tightened up the scoping for our various new operators, which should\nmake it harder to use the wrong one.", "tree": {"sha": "2e213089a38b3ae68795b791f3b2345e77567048", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e213089a38b3ae68795b791f3b2345e77567048"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d9a5b7d556f6573508c83242a0e7b7795d2c2dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d9a5b7d556f6573508c83242a0e7b7795d2c2dd", "html_url": "https://github.com/rust-lang/rust/commit/5d9a5b7d556f6573508c83242a0e7b7795d2c2dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d9a5b7d556f6573508c83242a0e7b7795d2c2dd/comments", "author": null, "committer": null, "parents": [{"sha": "8acadb17c2d679291aa94e94af8cc96513cab830", "url": "https://api.github.com/repos/rust-lang/rust/commits/8acadb17c2d679291aa94e94af8cc96513cab830", "html_url": "https://github.com/rust-lang/rust/commit/8acadb17c2d679291aa94e94af8cc96513cab830"}], "stats": {"total": 45, "additions": 34, "deletions": 11}, "files": [{"sha": "a42795c8b64b7f6de2c799d846cd65d8ed4c98ef", "filename": "src/rt/memory.h", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/5d9a5b7d556f6573508c83242a0e7b7795d2c2dd/src%2Frt%2Fmemory.h", "raw_url": "https://github.com/rust-lang/rust/raw/5d9a5b7d556f6573508c83242a0e7b7795d2c2dd/src%2Frt%2Fmemory.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmemory.h?ref=5d9a5b7d556f6573508c83242a0e7b7795d2c2dd", "patch": "@@ -2,33 +2,42 @@\n #ifndef MEMORY_H\n #define MEMORY_H\n \n-inline void *operator new(size_t size, void *mem) {\n-    return mem;\n+#if 0\n+inline void operator delete(void *mem, rust_task *task) {\n+    task->free(mem);\n+    return;\n }\n+#endif\n \n-inline void *operator new(size_t size, rust_kernel *kernel) {\n-    return kernel->malloc(size);\n+// FIXME: It would be really nice to be able to get rid of this.\n+inline void *operator new[](size_t size, rust_task *task) {\n+    return task->malloc(size);\n }\n \n-inline void *operator new(size_t size, rust_task *task) {\n+template <typename T>\n+inline void *task_owned<T>::operator new(size_t size, rust_task *task) {\n     return task->malloc(size);\n }\n \n-inline void *operator new[](size_t size, rust_task *task) {\n+template <typename T>\n+inline void *task_owned<T>::operator new[](size_t size, rust_task *task) {\n     return task->malloc(size);\n }\n \n-inline void *operator new(size_t size, rust_task &task) {\n+template <typename T>\n+inline void *task_owned<T>::operator new(size_t size, rust_task &task) {\n     return task.malloc(size);\n }\n \n-inline void *operator new[](size_t size, rust_task &task) {\n+template <typename T>\n+inline void *task_owned<T>::operator new[](size_t size, rust_task &task) {\n     return task.malloc(size);\n }\n \n-inline void operator delete(void *mem, rust_task *task) {\n-    task->free(mem);\n-    return;\n+template <typename T>\n+inline void *kernel_owned<T>::operator new(size_t size, rust_kernel *kernel) {\n+    return kernel->malloc(size);\n }\n \n+\n #endif /* MEMORY_H */"}, {"sha": "cd4a162cb3caa7e7a354f47b8e6db1d30fc26cc7", "filename": "src/rt/rust_internal.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5d9a5b7d556f6573508c83242a0e7b7795d2c2dd/src%2Frt%2Frust_internal.h", "raw_url": "https://github.com/rust-lang/rust/raw/5d9a5b7d556f6573508c83242a0e7b7795d2c2dd/src%2Frt%2Frust_internal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_internal.h?ref=5d9a5b7d556f6573508c83242a0e7b7795d2c2dd", "patch": "@@ -115,12 +115,22 @@ template <typename T> struct rc_base {\n };\n \n template <typename T> struct task_owned {\n+    inline void *operator new(size_t size, rust_task *task);\n+\n+    inline void *operator new[](size_t size, rust_task *task);\n+\n+    inline void *operator new(size_t size, rust_task &task);\n+\n+    inline void *operator new[](size_t size, rust_task &task);\n+\n     void operator delete(void *ptr) {\n         ((T *)ptr)->task->free(ptr);\n     }\n };\n \n template <typename T> struct kernel_owned {\n+    inline void *operator new(size_t size, rust_kernel *kernel);\n+\n     void operator delete(void *ptr) {\n         ((T *)ptr)->kernel->free(ptr);\n     }"}, {"sha": "b7c742cdb7964d40deaa6f94f5148eb9d281406a", "filename": "src/rt/rust_util.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5d9a5b7d556f6573508c83242a0e7b7795d2c2dd/src%2Frt%2Frust_util.h", "raw_url": "https://github.com/rust-lang/rust/raw/5d9a5b7d556f6573508c83242a0e7b7795d2c2dd/src%2Frt%2Frust_util.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_util.h?ref=5d9a5b7d556f6573508c83242a0e7b7795d2c2dd", "patch": "@@ -184,6 +184,10 @@ rust_vec : public rc_base<rust_vec>\n             memcpy(&data[0], d, fill);\n     }\n     ~rust_vec() {}\n+\n+    inline void *operator new(size_t size, void *mem) {\n+        return mem;\n+    }\n };\n \n // Rust types vec and str look identical from our perspective."}]}