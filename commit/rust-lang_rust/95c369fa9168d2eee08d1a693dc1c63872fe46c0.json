{"sha": "95c369fa9168d2eee08d1a693dc1c63872fe46c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1YzM2OWZhOTE2OGQyZWVlMDhkMWE2OTNkYzFjNjM4NzJmZTQ2YzA=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-20T01:54:54Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-20T01:56:02Z"}, "message": "Add `skip_while_next` lint", "tree": {"sha": "3b276f2376703b8c9d0a0ad0726cc9332cafdba5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b276f2376703b8c9d0a0ad0726cc9332cafdba5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95c369fa9168d2eee08d1a693dc1c63872fe46c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95c369fa9168d2eee08d1a693dc1c63872fe46c0", "html_url": "https://github.com/rust-lang/rust/commit/95c369fa9168d2eee08d1a693dc1c63872fe46c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95c369fa9168d2eee08d1a693dc1c63872fe46c0/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7b3e4f29c5360bb8bc7de906c8959178ab43d0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7b3e4f29c5360bb8bc7de906c8959178ab43d0b", "html_url": "https://github.com/rust-lang/rust/commit/f7b3e4f29c5360bb8bc7de906c8959178ab43d0b"}], "stats": {"total": 107, "additions": 105, "deletions": 2}, "files": [{"sha": "f7e8a4534de6b525f54ed18aee9c40499c8df710", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/95c369fa9168d2eee08d1a693dc1c63872fe46c0/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/95c369fa9168d2eee08d1a693dc1c63872fe46c0/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=95c369fa9168d2eee08d1a693dc1c63872fe46c0", "patch": "@@ -1285,6 +1285,7 @@ Released 2018-09-13\n [`single_char_pattern`]: https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n [`single_match`]: https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n [`single_match_else`]: https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else\n+[`skip_while_next`]: https://rust-lang.github.io/rust-clippy/master/index.html#skip_while_next\n [`slow_vector_initialization`]: https://rust-lang.github.io/rust-clippy/master/index.html#slow_vector_initialization\n [`str_to_string`]: https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string\n [`string_add`]: https://rust-lang.github.io/rust-clippy/master/index.html#string_add"}, {"sha": "d752e5b4cc15a9443ecf6efc5cfdfa1457d0281f", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/95c369fa9168d2eee08d1a693dc1c63872fe46c0/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/95c369fa9168d2eee08d1a693dc1c63872fe46c0/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=95c369fa9168d2eee08d1a693dc1c63872fe46c0", "patch": "@@ -6,7 +6,7 @@\n \n A collection of lints to catch common mistakes and improve your [Rust](https://github.com/rust-lang/rust) code.\n \n-[There are 347 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n+[There are 348 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n \n We have a bunch of lint categories to allow you to choose how much Clippy is supposed to ~~annoy~~ help you:\n "}, {"sha": "962ff38eb6cdf785a26dec43833eb0f7485c17de", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95c369fa9168d2eee08d1a693dc1c63872fe46c0/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95c369fa9168d2eee08d1a693dc1c63872fe46c0/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=95c369fa9168d2eee08d1a693dc1c63872fe46c0", "patch": "@@ -645,6 +645,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &methods::SEARCH_IS_SOME,\n         &methods::SHOULD_IMPLEMENT_TRAIT,\n         &methods::SINGLE_CHAR_PATTERN,\n+        &methods::SKIP_WHILE_NEXT,\n         &methods::STRING_EXTEND_CHARS,\n         &methods::SUSPICIOUS_MAP,\n         &methods::TEMPORARY_CSTRING_AS_PTR,\n@@ -1223,6 +1224,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&methods::SEARCH_IS_SOME),\n         LintId::of(&methods::SHOULD_IMPLEMENT_TRAIT),\n         LintId::of(&methods::SINGLE_CHAR_PATTERN),\n+        LintId::of(&methods::SKIP_WHILE_NEXT),\n         LintId::of(&methods::STRING_EXTEND_CHARS),\n         LintId::of(&methods::SUSPICIOUS_MAP),\n         LintId::of(&methods::TEMPORARY_CSTRING_AS_PTR),\n@@ -1475,6 +1477,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&methods::FLAT_MAP_IDENTITY),\n         LintId::of(&methods::OPTION_AND_THEN_SOME),\n         LintId::of(&methods::SEARCH_IS_SOME),\n+        LintId::of(&methods::SKIP_WHILE_NEXT),\n         LintId::of(&methods::SUSPICIOUS_MAP),\n         LintId::of(&methods::UNNECESSARY_FILTER_MAP),\n         LintId::of(&methods::USELESS_ASREF),"}, {"sha": "8dfebb56f302c8b813e573f9fd64d7c708953f0f", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/95c369fa9168d2eee08d1a693dc1c63872fe46c0/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95c369fa9168d2eee08d1a693dc1c63872fe46c0/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=95c369fa9168d2eee08d1a693dc1c63872fe46c0", "patch": "@@ -375,6 +375,29 @@ declare_clippy_lint! {\n     \"using `filter(p).next()`, which is more succinctly expressed as `.find(p)`\"\n }\n \n+declare_clippy_lint! {\n+    /// **What it does:** Checks for usage of `_.skip_while(condition).next()`.\n+    ///\n+    /// **Why is this bad?** Readability, this can be written more concisely as\n+    /// `_.find(!condition)`.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    /// ```rust\n+    /// # let vec = vec![1];\n+    /// vec.iter().skip_while(|x| **x == 0).next();\n+    /// ```\n+    /// Could be written as\n+    /// ```rust\n+    /// # let vec = vec![1];\n+    /// vec.iter().find(|x| **x != 0);\n+    /// ```\n+    pub SKIP_WHILE_NEXT,\n+    complexity,\n+    \"using `skip_while(p).next()`, which is more succinctly expressed as `.find(!p)`\"\n+}\n+\n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `_.map(_).flatten(_)`,\n     ///\n@@ -1192,6 +1215,7 @@ declare_lint_pass!(Methods => [\n     SEARCH_IS_SOME,\n     TEMPORARY_CSTRING_AS_PTR,\n     FILTER_NEXT,\n+    SKIP_WHILE_NEXT,\n     FILTER_MAP,\n     FILTER_MAP_NEXT,\n     FLAT_MAP_IDENTITY,\n@@ -1237,6 +1261,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Methods {\n             [\"map_or\", ..] => lint_map_or_none(cx, expr, arg_lists[0]),\n             [\"and_then\", ..] => lint_option_and_then_some(cx, expr, arg_lists[0]),\n             [\"next\", \"filter\"] => lint_filter_next(cx, expr, arg_lists[1]),\n+            [\"next\", \"skip_while\"] => lint_skip_while_next(cx, expr, arg_lists[1]),\n             [\"map\", \"filter\"] => lint_filter_map(cx, expr, arg_lists[1], arg_lists[0]),\n             [\"map\", \"filter_map\"] => lint_filter_map_map(cx, expr, arg_lists[1], arg_lists[0]),\n             [\"next\", \"filter_map\"] => lint_filter_map_next(cx, expr, arg_lists[1]),\n@@ -2530,6 +2555,20 @@ fn lint_filter_next<'a, 'tcx>(\n     }\n }\n \n+/// lint use of `skip_while().next()` for `Iterators`\n+fn lint_skip_while_next<'a, 'tcx>(\n+    cx: &LateContext<'a, 'tcx>,\n+    expr: &'tcx hir::Expr<'_>,\n+    _skip_while_args: &'tcx [hir::Expr<'_>],\n+) {\n+    // lint if caller of `.skip_while().next()` is an Iterator\n+    if match_trait_method(cx, expr, &paths::ITERATOR) {\n+        let msg = \"called `skip_while(p).next()` on an `Iterator`. \\\n+                   This is more succinctly expressed by calling `.find(!p)` instead.\";\n+        span_lint(cx, SKIP_WHILE_NEXT, expr.span, msg);\n+    }\n+}\n+\n /// lint use of `filter().map()` for `Iterators`\n fn lint_filter_map<'a, 'tcx>(\n     cx: &LateContext<'a, 'tcx>,"}, {"sha": "dcdfd015393b2a18af6ee2770b44fe258bee5a18", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/95c369fa9168d2eee08d1a693dc1c63872fe46c0/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95c369fa9168d2eee08d1a693dc1c63872fe46c0/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=95c369fa9168d2eee08d1a693dc1c63872fe46c0", "patch": "@@ -6,7 +6,7 @@ pub use lint::Lint;\n pub use lint::LINT_LEVELS;\n \n // begin lint list, do not remove this comment, it\u2019s used in `update_lints`\n-pub const ALL_LINTS: [Lint; 347] = [\n+pub const ALL_LINTS: [Lint; 348] = [\n     Lint {\n         name: \"absurd_extreme_comparisons\",\n         group: \"correctness\",\n@@ -1862,6 +1862,13 @@ pub const ALL_LINTS: [Lint; 347] = [\n         deprecation: None,\n         module: \"matches\",\n     },\n+    Lint {\n+        name: \"skip_while_next\",\n+        group: \"complexity\",\n+        desc: \"using `skip_while(p).next()`, which is more succinctly expressed as `.find(!p)`\",\n+        deprecation: None,\n+        module: \"methods\",\n+    },\n     Lint {\n         name: \"slow_vector_initialization\",\n         group: \"perf\","}, {"sha": "ed11c41e21c1a7e9a738918926bfcc8d933fd8bc", "filename": "tests/ui/auxiliary/option_helpers.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/95c369fa9168d2eee08d1a693dc1c63872fe46c0/tests%2Fui%2Fauxiliary%2Foption_helpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95c369fa9168d2eee08d1a693dc1c63872fe46c0/tests%2Fui%2Fauxiliary%2Foption_helpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Foption_helpers.rs?ref=95c369fa9168d2eee08d1a693dc1c63872fe46c0", "patch": "@@ -44,4 +44,8 @@ impl IteratorFalsePositives {\n     pub fn skip(self, _: usize) -> IteratorFalsePositives {\n         self\n     }\n+\n+    pub fn skip_while(self) -> IteratorFalsePositives {\n+        self\n+    }\n }"}, {"sha": "a522c0f08b207a5abd7cf037c304b39357c4a4b3", "filename": "tests/ui/skip_while_next.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/95c369fa9168d2eee08d1a693dc1c63872fe46c0/tests%2Fui%2Fskip_while_next.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95c369fa9168d2eee08d1a693dc1c63872fe46c0/tests%2Fui%2Fskip_while_next.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fskip_while_next.rs?ref=95c369fa9168d2eee08d1a693dc1c63872fe46c0", "patch": "@@ -0,0 +1,29 @@\n+// aux-build:option_helpers.rs\n+\n+#![warn(clippy::skip_while_next)]\n+#![allow(clippy::blacklisted_name)]\n+\n+extern crate option_helpers;\n+use option_helpers::IteratorFalsePositives;\n+\n+#[rustfmt::skip]\n+fn skip_while_next() {\n+    let v = vec![3, 2, 1, 0, -1, -2, -3];\n+\n+    // Single-line case.\n+    let _ = v.iter().skip_while(|&x| *x < 0).next();\n+\n+    // Multi-line case.\n+    let _ = v.iter().skip_while(|&x| {\n+                                *x < 0\n+                            }\n+                   ).next();\n+\n+    // Check that hat we don't lint if the caller is not an `Iterator`.\n+    let foo = IteratorFalsePositives { foo: 0 };\n+    let _ = foo.skip_while().next();\n+}\n+\n+fn main() {\n+    skip_while_next();\n+}"}, {"sha": "2ce88ac23a56dcef7e2c4ac874d2033cedee1070", "filename": "tests/ui/skip_while_next.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/95c369fa9168d2eee08d1a693dc1c63872fe46c0/tests%2Fui%2Fskip_while_next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/95c369fa9168d2eee08d1a693dc1c63872fe46c0/tests%2Fui%2Fskip_while_next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fskip_while_next.stderr?ref=95c369fa9168d2eee08d1a693dc1c63872fe46c0", "patch": "@@ -0,0 +1,20 @@\n+error: called `skip_while(p).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(!p)` instead.\n+  --> $DIR/skip_while_next.rs:14:13\n+   |\n+LL |     let _ = v.iter().skip_while(|&x| *x < 0).next();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::skip-while-next` implied by `-D warnings`\n+\n+error: called `skip_while(p).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(!p)` instead.\n+  --> $DIR/skip_while_next.rs:17:13\n+   |\n+LL |       let _ = v.iter().skip_while(|&x| {\n+   |  _____________^\n+LL | |                                 *x < 0\n+LL | |                             }\n+LL | |                    ).next();\n+   | |___________________________^\n+\n+error: aborting due to 2 previous errors\n+"}]}