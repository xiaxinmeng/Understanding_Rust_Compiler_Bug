{"sha": "ec2826cc2e0b3a800836bcf8733dee0924f6b7ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMjgyNmNjMmUwYjNhODAwODM2YmNmODczM2RlZTA5MjRmNmI3YWI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-06-03T16:05:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-03T16:05:41Z"}, "message": "Rollup merge of #72924 - JohnTitor:stabilize-buf-capacity, r=shepmaster\n\nStabilize `std::io::Buf{Reader, Writer}::capacity`\n\nCloses #68833\nFCP is done here: https://github.com/rust-lang/rust/issues/68833#issuecomment-637596083", "tree": {"sha": "47316d43cb359f49cff65fe8a92744c5b0f21d8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47316d43cb359f49cff65fe8a92744c5b0f21d8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec2826cc2e0b3a800836bcf8733dee0924f6b7ab", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe18pVCRBK7hj4Ov3rIwAAdHIIAJCQlkNxNuNPriWVornj+Ffb\n1ar6x1wvTBc9iVtzwHHqfygRl0momvEpkoTez/b4+lOjfzqsbbCGKo4AD8RfDN5v\nT+CU53V7afeXKUc7G1bTdV8rVYec98CfNIa3coRfVT7DYVGyzLXu1U829+Rs6VMN\nJeSphZel1KjxY95yCrTHAWUzNJ9nkG0dVtRVTvBYQSrPzgvtVLReQW+dB/S1TjhI\nPpLBzEB6zpkYdhjfx88AAY6M1DIaRB2YX+SwrKb1Tsw7CkRajZ6zqAmb3w8nlKDe\n8/nm38PsZnpmhJeGZs1wPL36oAD1HkL/1vkoeVzQcNGxWWo/dZcwJgtjgzPRiSc=\n=JeWR\n-----END PGP SIGNATURE-----\n", "payload": "tree 47316d43cb359f49cff65fe8a92744c5b0f21d8a\nparent 7973d9381fe813abc83b3849fdf1fd9de8b51e5d\nparent 7d27c631144cdf847d5c1f4ca27e6c7414a068ab\nauthor Dylan DPC <dylan.dpc@gmail.com> 1591200341 +0200\ncommitter GitHub <noreply@github.com> 1591200341 +0200\n\nRollup merge of #72924 - JohnTitor:stabilize-buf-capacity, r=shepmaster\n\nStabilize `std::io::Buf{Reader, Writer}::capacity`\n\nCloses #68833\nFCP is done here: https://github.com/rust-lang/rust/issues/68833#issuecomment-637596083\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec2826cc2e0b3a800836bcf8733dee0924f6b7ab", "html_url": "https://github.com/rust-lang/rust/commit/ec2826cc2e0b3a800836bcf8733dee0924f6b7ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec2826cc2e0b3a800836bcf8733dee0924f6b7ab/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7973d9381fe813abc83b3849fdf1fd9de8b51e5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7973d9381fe813abc83b3849fdf1fd9de8b51e5d", "html_url": "https://github.com/rust-lang/rust/commit/7973d9381fe813abc83b3849fdf1fd9de8b51e5d"}, {"sha": "7d27c631144cdf847d5c1f4ca27e6c7414a068ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d27c631144cdf847d5c1f4ca27e6c7414a068ab", "html_url": "https://github.com/rust-lang/rust/commit/7d27c631144cdf847d5c1f4ca27e6c7414a068ab"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "e986a39eb03e07dd5541be2da99d16101a1ab49e", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ec2826cc2e0b3a800836bcf8733dee0924f6b7ab/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec2826cc2e0b3a800836bcf8733dee0924f6b7ab/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=ec2826cc2e0b3a800836bcf8733dee0924f6b7ab", "patch": "@@ -184,7 +184,6 @@ impl<R> BufReader<R> {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(buffered_io_capacity)]\n     /// use std::io::{BufReader, BufRead};\n     /// use std::fs::File;\n     ///\n@@ -198,7 +197,7 @@ impl<R> BufReader<R> {\n     ///     Ok(())\n     /// }\n     /// ```\n-    #[unstable(feature = \"buffered_io_capacity\", issue = \"68833\")]\n+    #[stable(feature = \"buffered_io_capacity\", since = \"1.46.0\")]\n     pub fn capacity(&self) -> usize {\n         self.buf.len()\n     }\n@@ -609,7 +608,6 @@ impl<W: Write> BufWriter<W> {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(buffered_io_capacity)]\n     /// use std::io::BufWriter;\n     /// use std::net::TcpStream;\n     ///\n@@ -620,7 +618,7 @@ impl<W: Write> BufWriter<W> {\n     /// // Calculate how many bytes can be written without flushing\n     /// let without_flush = capacity - buf_writer.buffer().len();\n     /// ```\n-    #[unstable(feature = \"buffered_io_capacity\", issue = \"68833\")]\n+    #[stable(feature = \"buffered_io_capacity\", since = \"1.46.0\")]\n     pub fn capacity(&self) -> usize {\n         self.buf.capacity()\n     }"}]}