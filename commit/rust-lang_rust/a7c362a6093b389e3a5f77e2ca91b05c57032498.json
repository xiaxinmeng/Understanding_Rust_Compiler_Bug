{"sha": "a7c362a6093b389e3a5f77e2ca91b05c57032498", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3YzM2MmE2MDkzYjM4OWUzYTVmNzdlMmNhOTFiMDVjNTcwMzI0OTg=", "commit": {"author": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-02-10T10:03:21Z"}, "committer": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-02-10T19:32:51Z"}, "message": "Change file_substr to allow for external strings.", "tree": {"sha": "da5c430e410e40b27bfd8d83c05c4efd322e91ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da5c430e410e40b27bfd8d83c05c4efd322e91ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7c362a6093b389e3a5f77e2ca91b05c57032498", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c362a6093b389e3a5f77e2ca91b05c57032498", "html_url": "https://github.com/rust-lang/rust/commit/a7c362a6093b389e3a5f77e2ca91b05c57032498", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7c362a6093b389e3a5f77e2ca91b05c57032498/comments", "author": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f1ea3ef6a92eb82ae66c47954ed955eba6028b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f1ea3ef6a92eb82ae66c47954ed955eba6028b1", "html_url": "https://github.com/rust-lang/rust/commit/7f1ea3ef6a92eb82ae66c47954ed955eba6028b1"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "963f3d02573dc416350e9448e60bfbd3e8caa205", "filename": "src/comp/syntax/codemap.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a7c362a6093b389e3a5f77e2ca91b05c57032498/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c362a6093b389e3a5f77e2ca91b05c57032498/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fcodemap.rs?ref=a7c362a6093b389e3a5f77e2ca91b05c57032498", "patch": "@@ -8,8 +8,11 @@ type file_pos = {ch: uint, byte: uint};\n  * compiler.\n  */\n \n-type file_substr_ = {lo: uint, hi: uint, col: uint, line: uint};\n-type file_substr = option<file_substr_>;\n+enum file_substr {\n+    fss_none,\n+    fss_internal(span),\n+    fss_external({filename: str, line: uint, col: uint})\n+}\n \n type filemap =\n     @{name: filename, substr: file_substr, src: @str,\n@@ -33,16 +36,16 @@ fn new_filemap_w_substr(filename: filename, substr: file_substr,\n fn new_filemap(filename: filename, src: @str,\n                start_pos_ch: uint, start_pos_byte: uint)\n     -> filemap {\n-    ret new_filemap_w_substr(filename, none, src,\n+    ret new_filemap_w_substr(filename, fss_none, src,\n                              start_pos_ch, start_pos_byte);\n }\n \n-fn get_substr_info(cm: codemap, lo: uint, hi: uint)\n-    -> (filename, file_substr_)\n+fn get_substr_info(cm: codemap, sp: span)\n+    -> (filename, file_substr)\n {\n-    let pos = lookup_char_pos(cm, lo);\n+    let pos = lookup_char_pos(cm, sp.lo);\n     let name = #fmt(\"<%s:%u:%u>\", pos.file.name, pos.line, pos.col);\n-    ret (name, {lo: lo, hi: hi, col: pos.col, line: pos.line});\n+    ret (name, fss_internal(sp));\n }\n \n fn next_line(file: filemap, chpos: uint, byte_pos: uint) {"}, {"sha": "d983ff94f15ada026215f799416d9b59f29195d2", "filename": "src/comp/syntax/ext/qquote.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a7c362a6093b389e3a5f77e2ca91b05c57032498/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c362a6093b389e3a5f77e2ca91b05c57032498/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs?ref=a7c362a6093b389e3a5f77e2ca91b05c57032498", "patch": "@@ -149,10 +149,9 @@ fn expand_ast(ecx: ext_ctxt, _sp: span,\n     {\n         let cm = ecx.session().parse_sess.cm;\n         let str = @codemap::span_to_snippet(body.span, cm);\n-        let (fname, ss) = codemap::get_substr_info\n-            (cm, body.span.lo, body.span.hi);\n+        let (fname, ss) = codemap::get_substr_info(cm, body.span);\n         let node = parse_from_source_str\n-            (f, fname, some(ss), str,\n+            (f, fname, ss, str,\n              ecx.session().opts.cfg, ecx.session().parse_sess);\n         ret expand_qquote(ecx, node.span(), *str, node);\n     }\n@@ -229,7 +228,7 @@ fn expand_qquote<N: qq_helper>\n                         \"parse_from_source_str\"],\n                        [node.mk_parse_fn(cx,sp),\n                         mk_str(cx,sp, \"<anon>\"),\n-                        mk_path(cx,sp, [\"option\",\"none\"]),\n+                        mk_path(cx,sp, [\"syntax\", \"codemap\", \"fss_none\"]),\n                         mk_unary(cx,sp, ast::box(ast::imm),\n                                  mk_str(cx,sp, str2)),\n                         mk_access_(cx,sp,"}, {"sha": "2352ac2f9dbc0551ffc5ca7effb63a264df913a3", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7c362a6093b389e3a5f77e2ca91b05c57032498/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c362a6093b389e3a5f77e2ca91b05c57032498/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=a7c362a6093b389e3a5f77e2ca91b05c57032498", "patch": "@@ -2,7 +2,7 @@ import std::{io, fs};\n import either::{left, right};\n import std::map::{hashmap, new_str_hash};\n import token::can_begin_expr;\n-import codemap::span;\n+import codemap::{span,fss_none};\n import util::interner;\n import ast::{node_id, spanned};\n import ast_util::{mk_sp, ident_to_path};\n@@ -2607,7 +2607,7 @@ fn parse_crate_from_source_file(input: str, cfg: ast::crate_cfg,\n \n fn parse_expr_from_source_str(name: str, source: @str, cfg: ast::crate_cfg,\n                               sess: parse_sess) -> @ast::expr {\n-    let p = new_parser_from_source_str(sess, cfg, name, none, source);\n+    let p = new_parser_from_source_str(sess, cfg, name, fss_none, source);\n     let r = parse_expr(p);\n     sess.chpos = p.reader.chpos;\n     sess.byte_pos = sess.byte_pos + p.reader.pos;\n@@ -2629,7 +2629,7 @@ fn parse_from_source_str<T>(f: fn (p: parser) -> T,\n \n fn parse_crate_from_source_str(name: str, source: @str, cfg: ast::crate_cfg,\n                                sess: parse_sess) -> @ast::crate {\n-    let p = new_parser_from_source_str(sess, cfg, name, none, source);\n+    let p = new_parser_from_source_str(sess, cfg, name, fss_none, source);\n     let r = parse_crate_mod(p, cfg);\n     sess.chpos = p.reader.chpos;\n     sess.byte_pos = sess.byte_pos + p.reader.pos;"}, {"sha": "066fad91f37cb5607131418677b1c939a5a0d2b9", "filename": "src/rustdoc/attr_parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7c362a6093b389e3a5f77e2ca91b05c57032498/src%2Frustdoc%2Fattr_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c362a6093b389e3a5f77e2ca91b05c57032498/src%2Frustdoc%2Fattr_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_parser.rs?ref=a7c362a6093b389e3a5f77e2ca91b05c57032498", "patch": "@@ -93,7 +93,7 @@ mod test {\n             mutable byte_pos: 0u\n         };\n         let parser = parser::new_parser_from_source_str(\n-            parse_sess, [], \"-\", none, @source);\n+            parse_sess, [], \"-\", codemap::fss_none, @source);\n \n         parser::parse_outer_attributes(parser)\n     }"}]}