{"sha": "f410df3c4810e80b6703dcfdbc4d48f812eb4889", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0MTBkZjNjNDgxMGU4MGI2NzAzZGNmZGJjNGQ0OGY4MTJlYjQ4ODk=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-06-27T06:56:38Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-09-24T21:02:05Z"}, "message": "make clippy happy (`needless_pass_by_value`, `filter_map` and `find_map`)", "tree": {"sha": "51f650e4dc68396e4aa3fce32240771885519186", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51f650e4dc68396e4aa3fce32240771885519186"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f410df3c4810e80b6703dcfdbc4d48f812eb4889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f410df3c4810e80b6703dcfdbc4d48f812eb4889", "html_url": "https://github.com/rust-lang/rust/commit/f410df3c4810e80b6703dcfdbc4d48f812eb4889", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f410df3c4810e80b6703dcfdbc4d48f812eb4889/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44187383f4724bd7e4b2b220235e93438043947a", "url": "https://api.github.com/repos/rust-lang/rust/commits/44187383f4724bd7e4b2b220235e93438043947a", "html_url": "https://github.com/rust-lang/rust/commit/44187383f4724bd7e4b2b220235e93438043947a"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "f684e7de8f83f366bf4903613fdcf54539987807", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f410df3c4810e80b6703dcfdbc4d48f812eb4889/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f410df3c4810e80b6703dcfdbc4d48f812eb4889/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=f410df3c4810e80b6703dcfdbc4d48f812eb4889", "patch": "@@ -952,7 +952,13 @@ fn get_details_from_idx<'tcx>(\n         e: &Expr<'_>,\n         starts: &[Start<'tcx>],\n     ) -> Option<StartKind<'tcx>> {\n-        starts.iter().find(|var| same_var(cx, e, var.id)).map(|v| v.kind)\n+        starts.iter().find_map(|start| {\n+            if same_var(cx, e, start.id) {\n+                Some(start.kind)\n+            } else {\n+                None\n+            }\n+        })\n     }\n \n     fn get_offset<'tcx>(\n@@ -1059,8 +1065,8 @@ fn build_manual_memcpy_suggestion<'tcx>(\n     start: &Expr<'_>,\n     end: &Expr<'_>,\n     limits: ast::RangeLimits,\n-    dst: IndexExpr<'_>,\n-    src: IndexExpr<'_>,\n+    dst: &IndexExpr<'_>,\n+    src: &IndexExpr<'_>,\n ) -> String {\n     fn print_offset(offset: MinifyingSugg<'static>) -> MinifyingSugg<'static> {\n         if offset.as_str() == \"0\" {\n@@ -1211,7 +1217,7 @@ fn detect_manual_memcpy<'tcx>(\n                         }\n                     })\n                 })\n-                .map(|o| o.map(|(dst, src)| build_manual_memcpy_suggestion(cx, start, end, limits, dst, src)))\n+                .map(|o| o.map(|(dst, src)| build_manual_memcpy_suggestion(cx, start, end, limits, &dst, &src)))\n                 .collect::<Option<Vec<_>>>()\n                 .filter(|v| !v.is_empty())\n                 .map(|v| v.join(\"\\n    \"));\n@@ -2319,10 +2325,13 @@ impl<'a, 'tcx> IncrementVisitor<'a, 'tcx> {\n     }\n \n     fn into_results(self) -> impl Iterator<Item = HirId> {\n-        self.states\n-            .into_iter()\n-            .filter(|(_, state)| *state == IncrementVisitorVarState::IncrOnce)\n-            .map(|(id, _)| id)\n+        self.states.into_iter().filter_map(|(id, state)| {\n+            if state == IncrementVisitorVarState::IncrOnce {\n+                Some(id)\n+            } else {\n+                None\n+            }\n+        })\n     }\n }\n "}]}