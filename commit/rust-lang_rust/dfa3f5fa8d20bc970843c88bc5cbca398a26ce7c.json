{"sha": "dfa3f5fa8d20bc970843c88bc5cbca398a26ce7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmYTNmNWZhOGQyMGJjOTcwODQzYzg4YmM1Y2JjYTM5OGEyNmNlN2M=", "commit": {"author": {"name": "U-NOV2010\\eugals", "email": "C:\\Self\\AppData\\Mail", "date": "2013-09-17T09:36:47Z"}, "committer": {"name": "Evgeny Sologubov", "email": "C:\\Self\\AppData\\Mail", "date": "2013-09-19T14:34:26Z"}, "message": "minor Type::opaque_trait code cleanup", "tree": {"sha": "6d299363798a0fc60fe83845e4460af28beda1ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d299363798a0fc60fe83845e4460af28beda1ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfa3f5fa8d20bc970843c88bc5cbca398a26ce7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfa3f5fa8d20bc970843c88bc5cbca398a26ce7c", "html_url": "https://github.com/rust-lang/rust/commit/dfa3f5fa8d20bc970843c88bc5cbca398a26ce7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfa3f5fa8d20bc970843c88bc5cbca398a26ce7c/comments", "author": null, "committer": null, "parents": [{"sha": "2927ab13df9436ae2042866885ea0b9d29cdcedc", "url": "https://api.github.com/repos/rust-lang/rust/commits/2927ab13df9436ae2042866885ea0b9d29cdcedc", "html_url": "https://github.com/rust-lang/rust/commit/2927ab13df9436ae2042866885ea0b9d29cdcedc"}], "stats": {"total": 23, "additions": 6, "deletions": 17}, "files": [{"sha": "0954302ba81f438cebfdc629de38db1d2bc37c66", "filename": "src/librustc/middle/trans/type_.rs", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/dfa3f5fa8d20bc970843c88bc5cbca398a26ce7c/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfa3f5fa8d20bc970843c88bc5cbca398a26ce7c/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs?ref=dfa3f5fa8d20bc970843c88bc5cbca398a26ce7c", "patch": "@@ -278,23 +278,12 @@ impl Type {\n \n     pub fn opaque_trait(ctx: &CrateContext, store: ty::TraitStore) -> Type {\n         let tydesc_ptr = ctx.tydesc_type.ptr_to();\n-        match store {\n-            ty::BoxTraitStore => {\n-                Type::struct_(\n-                    [ tydesc_ptr, Type::opaque_box(ctx).ptr_to() ],\n-                false)\n-            }\n-            ty::UniqTraitStore => {\n-                Type::struct_(\n-                    [ tydesc_ptr, Type::unique(ctx, &Type::i8()).ptr_to()],\n-                false)\n-            }\n-            ty::RegionTraitStore(*) => {\n-                Type::struct_(\n-                    [ tydesc_ptr, Type::i8().ptr_to() ],\n-                false)\n-            }\n-        }\n+        let box_ty = match store {\n+            ty::BoxTraitStore => Type::opaque_box(ctx),\n+            ty::UniqTraitStore => Type::unique(ctx, &Type::i8()),\n+            ty::RegionTraitStore(*) => Type::i8()\n+        };\n+        Type::struct_([tydesc_ptr, box_ty.ptr_to()], false)\n     }\n \n     pub fn kind(&self) -> TypeKind {"}]}