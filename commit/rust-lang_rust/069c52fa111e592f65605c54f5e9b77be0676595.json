{"sha": "069c52fa111e592f65605c54f5e9b77be0676595", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2OWM1MmZhMTExZTU5MmY2NTYwNWM1NGY1ZTliNzdiZTA2NzY1OTU=", "commit": {"author": {"name": "Petr Hosek", "email": "phosek@google.com", "date": "2019-07-02T00:28:10Z"}, "committer": {"name": "Petr Hosek", "email": "phosek@google.com", "date": "2019-07-02T07:42:56Z"}, "message": "Check if the archive has already been added to avoid duplicates\n\nThis avoids adding archives multiple times, which results in duplicate\nobjects in the resulting rlib, leading to symbol collision and link\nfailures. This could happen when crate contains multiple link attributes\nthat all reference the same archive.", "tree": {"sha": "eea32d8b1d1c934c4517420c8bb76366523526c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eea32d8b1d1c934c4517420c8bb76366523526c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/069c52fa111e592f65605c54f5e9b77be0676595", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/069c52fa111e592f65605c54f5e9b77be0676595", "html_url": "https://github.com/rust-lang/rust/commit/069c52fa111e592f65605c54f5e9b77be0676595", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/069c52fa111e592f65605c54f5e9b77be0676595/comments", "author": {"login": "petrhosek", "id": 283696, "node_id": "MDQ6VXNlcjI4MzY5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrhosek", "id": 283696, "node_id": "MDQ6VXNlcjI4MzY5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17e62f77f954bed97aae839624bfd6dd68342daf", "url": "https://api.github.com/repos/rust-lang/rust/commits/17e62f77f954bed97aae839624bfd6dd68342daf", "html_url": "https://github.com/rust-lang/rust/commit/17e62f77f954bed97aae839624bfd6dd68342daf"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "90c0cf748d1e09736287116680745192d6da0112", "filename": "src/librustc_codegen_llvm/back/archive.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/069c52fa111e592f65605c54f5e9b77be0676595/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/069c52fa111e592f65605c54f5e9b77be0676595/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs?ref=069c52fa111e592f65605c54f5e9b77be0676595", "patch": "@@ -36,11 +36,20 @@ enum Addition {\n         name_in_archive: String,\n     },\n     Archive {\n+        path: PathBuf,\n         archive: ArchiveRO,\n         skip: Box<dyn FnMut(&str) -> bool>,\n     },\n }\n \n+impl Addition {\n+    fn path(&self) -> &Path {\n+        match self {\n+            Addition::File { path, .. } | Addition::Archive { path, .. } => path,\n+        }\n+    }\n+}\n+\n fn is_relevant_child(c: &Child<'_>) -> bool {\n     match c.name() {\n         Some(name) => !name.contains(\"SYMDEF\"),\n@@ -188,12 +197,16 @@ impl<'a> LlvmArchiveBuilder<'a> {\n                       -> io::Result<()>\n         where F: FnMut(&str) -> bool + 'static\n     {\n-        let archive = match ArchiveRO::open(archive) {\n+        let archive_ro = match ArchiveRO::open(archive) {\n             Ok(ar) => ar,\n             Err(e) => return Err(io::Error::new(io::ErrorKind::Other, e)),\n         };\n+        if self.additions.iter().any(|ar| ar.path() == archive) {\n+            return Ok(())\n+        }\n         self.additions.push(Addition::Archive {\n-            archive,\n+            path: archive.to_path_buf(),\n+            archive: archive_ro,\n             skip: Box::new(skip),\n         });\n         Ok(())\n@@ -243,7 +256,7 @@ impl<'a> LlvmArchiveBuilder<'a> {\n                         strings.push(path);\n                         strings.push(name);\n                     }\n-                    Addition::Archive { archive, skip } => {\n+                    Addition::Archive { archive, skip, .. } => {\n                         for child in archive.iter() {\n                             let child = child.map_err(string_to_io_error)?;\n                             if !is_relevant_child(&child) {"}]}