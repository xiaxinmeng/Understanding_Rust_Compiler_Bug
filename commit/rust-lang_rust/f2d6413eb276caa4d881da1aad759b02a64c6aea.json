{"sha": "f2d6413eb276caa4d881da1aad759b02a64c6aea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZDY0MTNlYjI3NmNhYTRkODgxZGExYWFkNzU5YjAyYTY0YzZhZWE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-15T12:13:52Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-15T12:13:52Z"}, "message": "comment -> doc comment", "tree": {"sha": "56e634ab98801b93e2cdf9745173e6989d598062", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56e634ab98801b93e2cdf9745173e6989d598062"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2d6413eb276caa4d881da1aad759b02a64c6aea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2d6413eb276caa4d881da1aad759b02a64c6aea", "html_url": "https://github.com/rust-lang/rust/commit/f2d6413eb276caa4d881da1aad759b02a64c6aea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2d6413eb276caa4d881da1aad759b02a64c6aea/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a605441e049f0b6d5f7715b94b8ac4662fd7fcf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a605441e049f0b6d5f7715b94b8ac4662fd7fcf6", "html_url": "https://github.com/rust-lang/rust/commit/a605441e049f0b6d5f7715b94b8ac4662fd7fcf6"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "65a5405c03772b4ecb3701c54868c251faebf011", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f2d6413eb276caa4d881da1aad759b02a64c6aea/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2d6413eb276caa4d881da1aad759b02a64c6aea/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=f2d6413eb276caa4d881da1aad759b02a64c6aea", "patch": "@@ -5351,9 +5351,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                       directly, not through a function pointer\");\n     }\n \n-    // Resolves `typ` by a single level if `typ` is a type variable.\n-    // If no resolution is possible, then an error is reported.\n-    // Numeric inference variables may be left unresolved.\n+    /// Resolves `typ` by a single level if `typ` is a type variable.\n+    /// If no resolution is possible, then an error is reported.\n+    /// Numeric inference variables may be left unresolved.\n     pub fn structurally_resolved_type(&self, sp: Span, ty: Ty<'tcx>) -> Ty<'tcx> {\n         let ty = self.resolve_vars_with_obligations(ty);\n         if !ty.is_ty_var() {"}]}