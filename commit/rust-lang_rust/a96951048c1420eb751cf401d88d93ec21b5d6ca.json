{"sha": "a96951048c1420eb751cf401d88d93ec21b5d6ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5Njk1MTA0OGMxNDIwZWI3NTFjZjQwMWQ4OGQ5M2VjMjFiNWQ2Y2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-02T04:56:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-02T04:56:54Z"}, "message": "auto merge of #11245 : alexcrichton/rust/issue-11225, r=pcwalton\n\nCommit messages are a little more descriptive.", "tree": {"sha": "a3986d60bf12d2dd47df092805bb190406d894f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3986d60bf12d2dd47df092805bb190406d894f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a96951048c1420eb751cf401d88d93ec21b5d6ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a96951048c1420eb751cf401d88d93ec21b5d6ca", "html_url": "https://github.com/rust-lang/rust/commit/a96951048c1420eb751cf401d88d93ec21b5d6ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a96951048c1420eb751cf401d88d93ec21b5d6ca/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3b49d9873afaa600ba9dc00566dba73c3eae195", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3b49d9873afaa600ba9dc00566dba73c3eae195", "html_url": "https://github.com/rust-lang/rust/commit/b3b49d9873afaa600ba9dc00566dba73c3eae195"}, {"sha": "aca1749493438d7f6283a214aa0d8230166cfa21", "url": "https://api.github.com/repos/rust-lang/rust/commits/aca1749493438d7f6283a214aa0d8230166cfa21", "html_url": "https://github.com/rust-lang/rust/commit/aca1749493438d7f6283a214aa0d8230166cfa21"}], "stats": {"total": 160, "additions": 160, "deletions": 0}, "files": [{"sha": "a0da1680d00412bef250d81bcf59decfe5d630db", "filename": "src/librustc/middle/privacy.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fprivacy.rs?ref=a96951048c1420eb751cf401d88d93ec21b5d6ca", "patch": "@@ -167,6 +167,23 @@ struct EmbargoVisitor<'a> {\n     reexports: HashSet<ast::NodeId>,\n }\n \n+impl<'a> EmbargoVisitor<'a> {\n+    // There are checks inside of privacy which depend on knowing whether a\n+    // trait should be exported or not. The two current consumers of this are:\n+    //\n+    //  1. Should default methods of a trait be exported?\n+    //  2. Should the methods of an implementation of a trait be exported?\n+    //\n+    // The answer to both of these questions partly rely on whether the trait\n+    // itself is exported or not. If the trait is somehow exported, then the\n+    // answers to both questions must be yes. Right now this question involves\n+    // more analysis than is currently done in rustc, so we conservatively\n+    // answer \"yes\" so that all traits need to be exported.\n+    fn exported_trait(&self, _id: ast::NodeId) -> bool {\n+        true\n+    }\n+}\n+\n impl<'a> Visitor<()> for EmbargoVisitor<'a> {\n     fn visit_item(&mut self, item: @ast::item, _: ()) {\n         let orig_all_pub = self.prev_exported;\n@@ -175,6 +192,12 @@ impl<'a> Visitor<()> for EmbargoVisitor<'a> {\n             // cannot have visibility qualifiers on them anyway\n             ast::item_impl(..) | ast::item_foreign_mod(..) => {}\n \n+            // Traits are a little special in that even if they themselves are\n+            // not public they may still be exported.\n+            ast::item_trait(..) => {\n+                self.prev_exported = self.exported_trait(item.id);\n+            }\n+\n             // Private by default, hence we only retain the \"public chain\" if\n             // `pub` is explicitly listed.\n             _ => {"}, {"sha": "13d67ff354a83d398e4eee8146d6f6e8b63ff057", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=a96951048c1420eb751cf401d88d93ec21b5d6ca", "patch": "@@ -53,6 +53,8 @@ Some examples of obvious things you might want to do\n     # let _g = ::std::io::ignore_io_error();\n     let mut file = File::create(&Path::new(\"message.txt\"));\n     file.write(bytes!(\"hello, file!\\n\"));\n+    # drop(file);\n+    # ::std::io::fs::unlink(&Path::new(\"message.txt\"));\n     ```\n \n * Iterate over the lines of a file"}, {"sha": "95fdce99ea654aceea5cf7e5d4033a6a8121bc2d", "filename": "src/libstd/local_data.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Flibstd%2Flocal_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Flibstd%2Flocal_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flocal_data.rs?ref=a96951048c1420eb751cf401d88d93ec21b5d6ca", "patch": "@@ -62,6 +62,7 @@ pub type Key<T> = &'static KeyValue<T>;\n #[allow(missing_doc)]\n pub enum KeyValue<T> { Key }\n \n+#[allow(missing_doc)]\n trait LocalData {}\n impl<T: 'static> LocalData for T {}\n "}, {"sha": "448ef8ef81801f606373c48d242edf1453b836ad", "filename": "src/test/auxiliary/issue-11224.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Ftest%2Fauxiliary%2Fissue-11224.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Ftest%2Fauxiliary%2Fissue-11224.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-11224.rs?ref=a96951048c1420eb751cf401d88d93ec21b5d6ca", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[deny(dead_code)];\n+\n+mod inner {\n+    pub trait Trait {\n+        fn f(&self) { f(); }\n+    }\n+\n+    impl Trait for int {}\n+\n+    fn f() {}\n+}\n+\n+pub fn foo() {\n+    let a = &1 as &inner::Trait;\n+    a.f();\n+}"}, {"sha": "88277af4a5118667c24ca93d910f941ce0593574", "filename": "src/test/auxiliary/issue-11225-1.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Ftest%2Fauxiliary%2Fissue-11225-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Ftest%2Fauxiliary%2Fissue-11225-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-11225-1.rs?ref=a96951048c1420eb751cf401d88d93ec21b5d6ca", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod inner {\n+    pub trait Trait {\n+        fn f(&self) { f(); }\n+    }\n+\n+    impl Trait for int {}\n+\n+    fn f() {}\n+}\n+\n+pub fn foo<T: inner::Trait>(t: T) {\n+    t.f();\n+}"}, {"sha": "848574a61fe8f53a641a7bc05b2434e61c3aa30c", "filename": "src/test/auxiliary/issue-11225-2.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Ftest%2Fauxiliary%2Fissue-11225-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Ftest%2Fauxiliary%2Fissue-11225-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-11225-2.rs?ref=a96951048c1420eb751cf401d88d93ec21b5d6ca", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use inner::Trait;\n+\n+mod inner {\n+    pub struct Foo;\n+    pub trait Trait {\n+        fn f(&self);\n+    }\n+\n+    impl Trait for Foo {\n+        fn f(&self) { }\n+    }\n+}\n+\n+pub trait Outer {\n+    fn foo<T: Trait>(&self, t: T) { t.f(); }\n+}\n+\n+impl Outer for int {}\n+\n+pub fn foo<T: Outer>(t: T) {\n+    t.foo(inner::Foo);\n+}"}, {"sha": "a6440e67f9bebfb56336fef83eeeca563d52b69d", "filename": "src/test/compile-fail/lint-missing-doc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs?ref=a96951048c1420eb751cf401d88d93ec21b5d6ca", "patch": "@@ -50,6 +50,7 @@ pub trait A {\n     /// dox\n     fn foo_with_impl() {}\n }\n+#[allow(missing_doc)]\n trait B {\n     fn foo();\n     fn foo_with_impl() {}"}, {"sha": "bf412ceab2886c58e6d577d6a06af9d37b38a87d", "filename": "src/test/run-pass/issue-11224.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Ftest%2Frun-pass%2Fissue-11224.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Ftest%2Frun-pass%2Fissue-11224.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11224.rs?ref=a96951048c1420eb751cf401d88d93ec21b5d6ca", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-11224.rs\n+// xfail-fast\n+\n+extern mod unused = \"issue-11224\";\n+\n+fn main() {}"}, {"sha": "ad8cb1e79abf2963f3de30aae3371f02eede9b2b", "filename": "src/test/run-pass/issue-11225-1.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Ftest%2Frun-pass%2Fissue-11225-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Ftest%2Frun-pass%2Fissue-11225-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11225-1.rs?ref=a96951048c1420eb751cf401d88d93ec21b5d6ca", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-11225-1.rs\n+// xfail-fast\n+\n+extern mod foo = \"issue-11225-1\";\n+\n+fn main() {\n+    foo::foo(1);\n+}"}, {"sha": "e572e56362bcb56388ee339b790d061704282044", "filename": "src/test/run-pass/issue-11225-2.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Ftest%2Frun-pass%2Fissue-11225-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96951048c1420eb751cf401d88d93ec21b5d6ca/src%2Ftest%2Frun-pass%2Fissue-11225-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-11225-2.rs?ref=a96951048c1420eb751cf401d88d93ec21b5d6ca", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-11225-2.rs\n+// xfail-fast\n+\n+extern mod foo = \"issue-11225-2\";\n+\n+fn main() {\n+    foo::foo(1);\n+}"}]}