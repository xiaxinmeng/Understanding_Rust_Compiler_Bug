{"sha": "d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNWM4OWY3NjA4Y2IxNWU4YzVhZTA4YTkyYjZhN2E2ZDZmMzA4Yjg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-02T13:53:40Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-02T13:53:40Z"}, "message": "introduce navigation target", "tree": {"sha": "c0897017ca009f4b989ef70b27e3a0dc54ffe63c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0897017ca009f4b989ef70b27e3a0dc54ffe63c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8", "html_url": "https://github.com/rust-lang/rust/commit/d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4b4fd7dc50575d015b404532ec9dd13e0a01835", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4b4fd7dc50575d015b404532ec9dd13e0a01835", "html_url": "https://github.com/rust-lang/rust/commit/a4b4fd7dc50575d015b404532ec9dd13e0a01835"}], "stats": {"total": 41, "additions": 28, "deletions": 13}, "files": [{"sha": "836fb89f5de8b4e6c4448197f882230d79c201b4", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8", "patch": "@@ -21,7 +21,7 @@ use ra_syntax::{\n \n use crate::{\n     AnalysisChange,\n-    Cancelable,\n+    Cancelable, NavigationTarget,\n     completion::{CompletionItem, completions},\n     CrateId, db, Diagnostic, FileId, FilePosition, FileRange, FileSystemEdit,\n     Query, ReferenceResolution, RootChange, SourceChange, SourceFileEdit,\n@@ -355,9 +355,9 @@ impl AnalysisImpl {\n             Ok(Some((binding, descr)))\n         }\n     }\n-    pub fn doc_text_for(&self, file_id: FileId, symbol: FileSymbol) -> Cancelable<Option<String>> {\n-        let file = self.db.source_file(file_id);\n-        let result = match (symbol.description(&file), symbol.docs(&file)) {\n+    pub fn doc_text_for(&self, nav: NavigationTarget) -> Cancelable<Option<String>> {\n+        let file = self.db.source_file(nav.file_id);\n+        let result = match (nav.symbol.description(&file), nav.symbol.docs(&file)) {\n             (Some(desc), Some(docs)) => {\n                 Some(\"```rust\\n\".to_string() + &*desc + \"\\n```\\n\\n\" + &*docs)\n             }"}, {"sha": "4d8bdb61bce871d05a8883548e8c47a3ccae0eea", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8", "patch": "@@ -244,6 +244,21 @@ impl Query {\n     }\n }\n \n+#[derive(Debug)]\n+pub struct NavigationTarget {\n+    file_id: FileId,\n+    symbol: FileSymbol,\n+}\n+\n+impl NavigationTarget {\n+    pub fn file_id(&self) -> FileId {\n+        self.file_id\n+    }\n+    pub fn range(&self) -> TextRange {\n+        self.symbol.node_range\n+    }\n+}\n+\n /// Result of \"goto def\" query.\n #[derive(Debug)]\n pub struct ReferenceResolution {\n@@ -252,7 +267,7 @@ pub struct ReferenceResolution {\n     /// client where the reference was.\n     pub reference_range: TextRange,\n     /// What this reference resolves to.\n-    pub resolves_to: Vec<(FileId, FileSymbol)>,\n+    pub resolves_to: Vec<NavigationTarget>,\n }\n \n impl ReferenceResolution {\n@@ -264,7 +279,7 @@ impl ReferenceResolution {\n     }\n \n     fn add_resolution(&mut self, file_id: FileId, symbol: FileSymbol) {\n-        self.resolves_to.push((file_id, symbol))\n+        self.resolves_to.push(NavigationTarget { file_id, symbol })\n     }\n }\n \n@@ -334,8 +349,8 @@ impl Analysis {\n     pub fn find_all_refs(&self, position: FilePosition) -> Cancelable<Vec<(FileId, TextRange)>> {\n         self.imp.find_all_refs(position)\n     }\n-    pub fn doc_text_for(&self, file_id: FileId, symbol: FileSymbol) -> Cancelable<Option<String>> {\n-        self.imp.doc_text_for(file_id, symbol)\n+    pub fn doc_text_for(&self, nav: NavigationTarget) -> Cancelable<Option<String>> {\n+        self.imp.doc_text_for(nav)\n     }\n     pub fn parent_module(&self, position: FilePosition) -> Cancelable<Vec<(FileId, FileSymbol)>> {\n         self.imp.parent_module(position)"}, {"sha": "5ff6219f99a59c34a85a0ce7900fb6d20f2dba8a", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=d25c89f7608cb15e8c5ae08a92b6a7a6d6f308b8", "patch": "@@ -213,9 +213,9 @@ pub fn handle_goto_definition(\n         Some(it) => it,\n     };\n     let mut res = Vec::new();\n-    for (file_id, symbol) in rr.resolves_to {\n-        let line_index = world.analysis().file_line_index(file_id);\n-        let location = to_location(file_id, symbol.node_range, &world, &line_index)?;\n+    for nav in rr.resolves_to {\n+        let line_index = world.analysis().file_line_index(nav.file_id());\n+        let location = to_location(nav.file_id(), nav.range(), &world, &line_index)?;\n         res.push(location)\n     }\n     Ok(Some(req::GotoDefinitionResponse::Array(res)))\n@@ -517,8 +517,8 @@ pub fn handle_hover(\n         Some(it) => it,\n     };\n     let mut result = Vec::new();\n-    for (file_id, symbol) in rr.resolves_to {\n-        if let Some(docs) = world.analysis().doc_text_for(file_id, symbol)? {\n+    for nav in rr.resolves_to {\n+        if let Some(docs) = world.analysis().doc_text_for(nav)? {\n             result.push(docs);\n         }\n     }"}]}