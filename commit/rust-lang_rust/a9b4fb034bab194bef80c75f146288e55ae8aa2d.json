{"sha": "a9b4fb034bab194bef80c75f146288e55ae8aa2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5YjRmYjAzNGJhYjE5NGJlZjgwYzc1ZjE0NjI4OGU1NWFlOGFhMmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-27T19:13:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-27T19:14:25Z"}, "message": "Add colors", "tree": {"sha": "192b7e2e9032db82c1b29bcd3a0551023c470bd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/192b7e2e9032db82c1b29bcd3a0551023c470bd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9b4fb034bab194bef80c75f146288e55ae8aa2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9b4fb034bab194bef80c75f146288e55ae8aa2d", "html_url": "https://github.com/rust-lang/rust/commit/a9b4fb034bab194bef80c75f146288e55ae8aa2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9b4fb034bab194bef80c75f146288e55ae8aa2d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "175e48e5be46faf6338d36907c6caf10c2d056f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/175e48e5be46faf6338d36907c6caf10c2d056f1", "html_url": "https://github.com/rust-lang/rust/commit/175e48e5be46faf6338d36907c6caf10c2d056f1"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "3e6bd9bb30a420a3dfcbb5006f9713fe2dba392b", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a9b4fb034bab194bef80c75f146288e55ae8aa2d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/a9b4fb034bab194bef80c75f146288e55ae8aa2d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=a9b4fb034bab194bef80c75f146288e55ae8aa2d", "patch": "@@ -351,6 +351,7 @@ dependencies = [\n name = \"expect\"\n version = \"0.1.0\"\n dependencies = [\n+ \"difference\",\n  \"once_cell\",\n  \"stdx\",\n ]"}, {"sha": "caee4310674a7334ff92c0699c76452bb7dad2e4", "filename": "crates/expect/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a9b4fb034bab194bef80c75f146288e55ae8aa2d/crates%2Fexpect%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a9b4fb034bab194bef80c75f146288e55ae8aa2d/crates%2Fexpect%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fexpect%2FCargo.toml?ref=a9b4fb034bab194bef80c75f146288e55ae8aa2d", "patch": "@@ -6,4 +6,5 @@ edition = \"2018\"\n \n [dependencies]\n once_cell = \"1\"\n+difference = \"2\"\n stdx = { path = \"../stdx\" }"}, {"sha": "18f361ec2de7a49fe515ae009f9fd6eedb29d0a8", "filename": "crates/expect/src/lib.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a9b4fb034bab194bef80c75f146288e55ae8aa2d/crates%2Fexpect%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9b4fb034bab194bef80c75f146288e55ae8aa2d/crates%2Fexpect%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fexpect%2Fsrc%2Flib.rs?ref=a9b4fb034bab194bef80c75f146288e55ae8aa2d", "patch": "@@ -107,22 +107,30 @@ impl Runtime {\n         rt.help_printed = true;\n \n         let help = if print_help { HELP } else { \"\" };\n+\n+        let diff = difference::Changeset::new(actual, expected, \"\\n\");\n+\n         println!(\n             \"\\n\n-error: expect test failed{}\n-  --> {}:{}:{}\n+\\x1b[1m\\x1b[91merror\\x1b[97m: expect test failed\\x1b[0m{}\n+   \\x1b[1m\\x1b[34m-->\\x1b[0m {}:{}:{}\n+{}\n+\\x1b[1mExpect\\x1b[0m:\n+----\n {}\n-Expect:\n+----\n+\n+\\x1b[1mActual\\x1b[0m:\n ----\n {}\n ----\n \n-Actual:\n+\\x1b[1mDiff\\x1b[0m:\n ----\n {}\n ----\n \",\n-            updated, expect.file, expect.line, expect.column, help, expected, actual\n+            updated, expect.file, expect.line, expect.column, help, expected, actual, diff\n         );\n         // Use resume_unwind instead of panic!() to prevent a backtrace, which is unnecessary noise.\n         std::panic::resume_unwind(Box::new(()));"}]}