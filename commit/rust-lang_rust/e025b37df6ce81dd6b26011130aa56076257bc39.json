{"sha": "e025b37df6ce81dd6b26011130aa56076257bc39", "node_id": "C_kwDOAAsO6NoAKGUwMjViMzdkZjZjZTgxZGQ2YjI2MDExMTMwYWE1NjA3NjI1N2JjMzk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-01T08:49:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-01T08:49:58Z"}, "message": "Auto merge of #12099 - bitgaoshu:master, r=flodiebold\n\nfix #11986 Aliases break resolution of qualified variants in patterns", "tree": {"sha": "2ab7a96bf73473e89c4f0796f3bcc46ec82100ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ab7a96bf73473e89c4f0796f3bcc46ec82100ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e025b37df6ce81dd6b26011130aa56076257bc39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e025b37df6ce81dd6b26011130aa56076257bc39", "html_url": "https://github.com/rust-lang/rust/commit/e025b37df6ce81dd6b26011130aa56076257bc39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e025b37df6ce81dd6b26011130aa56076257bc39/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eb8b28ce596ea109f8a9657148a6ccc44df7291", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eb8b28ce596ea109f8a9657148a6ccc44df7291", "html_url": "https://github.com/rust-lang/rust/commit/3eb8b28ce596ea109f8a9657148a6ccc44df7291"}, {"sha": "7900d99e3ebd1ff8a3ddb8a668769aff99c6deb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7900d99e3ebd1ff8a3ddb8a668769aff99c6deb4", "html_url": "https://github.com/rust-lang/rust/commit/7900d99e3ebd1ff8a3ddb8a668769aff99c6deb4"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "7f5ad415096dbdbd198becce95c79575ed17a7e9", "filename": "crates/hir_ty/src/infer.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e025b37df6ce81dd6b26011130aa56076257bc39/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e025b37df6ce81dd6b26011130aa56076257bc39/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer.rs?ref=e025b37df6ce81dd6b26011130aa56076257bc39", "patch": "@@ -735,7 +735,8 @@ impl<'a> InferenceContext<'a> {\n         unresolved: Option<usize>,\n         path: &Path,\n     ) -> (Ty, Option<VariantId>) {\n-        match unresolved {\n+        let remaining = unresolved.map(|x| path.segments().skip(x).len()).filter(|x| x > &0);\n+        match remaining {\n             None => {\n                 let variant = ty.as_adt().and_then(|(adt_id, _)| match adt_id {\n                     AdtId::StructId(s) => Some(VariantId::StructId(s)),"}, {"sha": "d4d61c2167cdbff2ce18ff81f938431bd47a9a2c", "filename": "crates/hir_ty/src/tests/simple.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e025b37df6ce81dd6b26011130aa56076257bc39/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e025b37df6ce81dd6b26011130aa56076257bc39/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs?ref=e025b37df6ce81dd6b26011130aa56076257bc39", "patch": "@@ -1588,6 +1588,16 @@ fn infer_type_alias() {\n             z.x;\n             z.y;\n         }\n+        mod m {\n+            pub enum Enum {\n+                Foo(u8),\n+            }\n+            pub type Alias = Enum;\n+        }\n+        fn f() {\n+            let e = m::Alias::Foo(0);\n+            let m::Alias::Foo(x) = &e;\n+        }\n         \"#,\n         expect![[r#\"\n             115..116 'x': A<u32, i128>\n@@ -1606,6 +1616,15 @@ fn infer_type_alias() {\n             195..198 'z.x': u8\n             204..205 'z': A<u8, i8>\n             204..207 'z.y': i8\n+            298..362 '{     ... &e; }': ()\n+            308..309 'e': Enum\n+            312..325 'm::Alias::Foo': Foo(u8) -> Enum\n+            312..328 'm::Ali...Foo(0)': Enum\n+            326..327 '0': u8\n+            338..354 'm::Ali...Foo(x)': Enum\n+            352..353 'x': &u8\n+            357..359 '&e': &Enum\n+            358..359 'e': Enum\n         \"#]],\n     )\n }"}]}