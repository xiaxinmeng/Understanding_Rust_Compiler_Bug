{"sha": "b54e8ecc2e0eec9ab9d0b1c1d9cb55f7602800c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1NGU4ZWNjMmUwZWVjOWFiOWQwYjFjMWQ5Y2I1NWY3NjAyODAwYzQ=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2019-09-30T01:20:03Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2019-11-07T14:43:07Z"}, "message": "Update extern linking documentation.", "tree": {"sha": "f6ed6a86bf088348cbfbcbd180b3e0b435718092", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6ed6a86bf088348cbfbcbd180b3e0b435718092"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b54e8ecc2e0eec9ab9d0b1c1d9cb55f7602800c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b54e8ecc2e0eec9ab9d0b1c1d9cb55f7602800c4", "html_url": "https://github.com/rust-lang/rust/commit/b54e8ecc2e0eec9ab9d0b1c1d9cb55f7602800c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b54e8ecc2e0eec9ab9d0b1c1d9cb55f7602800c4/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bf411ea6d8e348accfa66b86e18395af2038fe9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bf411ea6d8e348accfa66b86e18395af2038fe9", "html_url": "https://github.com/rust-lang/rust/commit/4bf411ea6d8e348accfa66b86e18395af2038fe9"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "0dc81378e05b2508ac2675577a7417ef03b539f9", "filename": "src/doc/rustc/src/codegen-options/index.md", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b54e8ecc2e0eec9ab9d0b1c1d9cb55f7602800c4/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/b54e8ecc2e0eec9ab9d0b1c1d9cb55f7602800c4/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md?ref=b54e8ecc2e0eec9ab9d0b1c1d9cb55f7602800c4", "patch": "@@ -197,7 +197,11 @@ in software.\n ## prefer-dynamic\n \n By default, `rustc` prefers to statically link dependencies. This option will\n-make it use dynamic linking instead.\n+indicate that dynamic linking should be used if possible if both a static and\n+dynamic versions of a library are available. There is an internal algorithm\n+for determining whether or not it is possible to statically or dynamically\n+link with a dependency. For example, `cdylib` crate types may only use static\n+linkage.\n \n ## no-integrated-as\n "}, {"sha": "561856db54b0db6430e08f1a4993e687ddd66f03", "filename": "src/doc/rustc/src/command-line-arguments.md", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b54e8ecc2e0eec9ab9d0b1c1d9cb55f7602800c4/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md", "raw_url": "https://github.com/rust-lang/rust/raw/b54e8ecc2e0eec9ab9d0b1c1d9cb55f7602800c4/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md?ref=b54e8ecc2e0eec9ab9d0b1c1d9cb55f7602800c4", "patch": "@@ -21,8 +21,7 @@ to `#[cfg(verbose)]` and `#[cfg(feature = \"serde\")]` respectively.\n <a id=\"option-l-search-path\"></a>\n ## `-L`: add a directory to the library search path\n \n-When looking for external crates or libraries, a directory passed to this flag\n-will be searched.\n+The `-L` flag adds a path to search for external crates and libraries.\n \n The kind of search path can optionally be specified with the form `-L\n KIND=PATH` where `KIND` may be one of:\n@@ -262,15 +261,32 @@ This flag, when combined with other flags, makes them produce extra output.\n <a id=\"option-extern\"></a>\n ## `--extern`: specify where an external library is located\n \n-This flag allows you to pass the name and location of an external crate that\n-will be linked into the crate you are building. This flag may be specified\n-multiple times. This flag takes an argument with either of the following\n-formats:\n+This flag allows you to pass the name and location for an external crate of a\n+direct dependency. Indirect dependencies (dependencies of dependencies) are\n+located using the [`-L` flag](#option-l-search-path). The given crate name is\n+added to the [extern prelude], which is the same as specifying `extern crate`\n+within the root module. The given crate name does not need to match the name\n+the library was built with.\n+\n+This flag may be specified multiple times. This flag takes an argument with\n+either of the following formats:\n \n * `CRATENAME=PATH` \u2014\u00a0Indicates the given crate is found at the given path.\n * `CRATENAME` \u2014\u00a0Indicates the given crate may be found in the search path,\n   such as within the sysroot or via the `-L` flag.\n \n+The same crate name may be specified multiple times for different crate types.\n+For loading metadata, `rlib` takes precedence over `rmeta`, which takes\n+precedence over `dylib`. If both an `rlib` and `dylib` are found, an internal\n+algorithm is used to decide which to use for linking. The [`-C prefer-dynamic`\n+flag][prefer-dynamic] may be used to influence which is used.\n+\n+If the same crate name is specified with and without a path, the one with the\n+path is used and the pathless flag has no effect.\n+\n+[extern prelude]: ../reference/items/extern-crates.html#extern-prelude\n+[prefer-dynamic]: codegen-options/index.md#prefer-dynamic\n+\n <a id=\"option-sysroot\"></a>\n ## `--sysroot`: Override the system root\n "}]}