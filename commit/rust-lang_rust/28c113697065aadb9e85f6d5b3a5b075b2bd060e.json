{"sha": "28c113697065aadb9e85f6d5b3a5b075b2bd060e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YzExMzY5NzA2NWFhZGI5ZTg1ZjZkNWIzYTViMDc1YjJiZDA2MGU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-07T13:27:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-07T13:27:23Z"}, "message": "Rollup merge of #65916 - Centril:split-syntax-3, r=davidtwco\n\nsyntax: move stuff around\n\nPart of https://github.com/rust-lang/rust/pull/65324.\n\nr? @davidtwco\ncc @estebank @petrochenkov", "tree": {"sha": "e77945f5b5f8e8dfac3b0a18ad8802f12091f30f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e77945f5b5f8e8dfac3b0a18ad8802f12091f30f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28c113697065aadb9e85f6d5b3a5b075b2bd060e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdxBu7CRBK7hj4Ov3rIwAAdHIIAHKeKCl3FRyC20r43jXwbBV7\n18HMdc6QA2mT2gbzx4xhmLpPaiCwFE7hQs1b1zfpu0l8RyCX2X1WdPyRERTBqhoM\nZu8Gbf2vzAyXBrHKqavoGLFT5Cn3cGGGPePW8J6zyf5dYUpgm62JSrW9fyhdz87D\nthX9bgpwskUEuZGJmWApQxSnRG7xZbog5SKoVsYT87Pif5xTGHEHFYJnyfTkCwpe\n2UstkUol3Z141/uv/3S049dYuJHiAGmyaO9BS7eNjD0+1pBO0Dn9l29d4iDBCBkz\ns659fZUPv6xAYH/ycPn0FzzR4Sq7kl3DHaO92T4p3KoApAmLgBrQK4blkmyzK/M=\n=aevh\n-----END PGP SIGNATURE-----\n", "payload": "tree e77945f5b5f8e8dfac3b0a18ad8802f12091f30f\nparent 59e79ff13769c1d062b805c3372d64b34e44fe1c\nparent cc9c139694389c8df158640d4bcc20a2fe31f1ea\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1573133243 +0100\ncommitter GitHub <noreply@github.com> 1573133243 +0100\n\nRollup merge of #65916 - Centril:split-syntax-3, r=davidtwco\n\nsyntax: move stuff around\n\nPart of https://github.com/rust-lang/rust/pull/65324.\n\nr? @davidtwco\ncc @estebank @petrochenkov\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28c113697065aadb9e85f6d5b3a5b075b2bd060e", "html_url": "https://github.com/rust-lang/rust/commit/28c113697065aadb9e85f6d5b3a5b075b2bd060e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28c113697065aadb9e85f6d5b3a5b075b2bd060e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59e79ff13769c1d062b805c3372d64b34e44fe1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/59e79ff13769c1d062b805c3372d64b34e44fe1c", "html_url": "https://github.com/rust-lang/rust/commit/59e79ff13769c1d062b805c3372d64b34e44fe1c"}, {"sha": "cc9c139694389c8df158640d4bcc20a2fe31f1ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc9c139694389c8df158640d4bcc20a2fe31f1ea", "html_url": "https://github.com/rust-lang/rust/commit/cc9c139694389c8df158640d4bcc20a2fe31f1ea"}], "stats": {"total": 319, "additions": 169, "deletions": 150}, "files": [{"sha": "87ad4ace592386126c576547737e6f1ccbecc30b", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -66,7 +66,7 @@ use syntax::ptr::P as AstP;\n use syntax::ast::*;\n use syntax::errors;\n use syntax::print::pprust;\n-use syntax::parse::token::{self, Nonterminal, Token};\n+use syntax::token::{self, Nonterminal, Token};\n use syntax::tokenstream::{TokenStream, TokenTree};\n use syntax::sess::ParseSess;\n use syntax::source_map::{respan, ExpnData, ExpnKind, DesugaringKind, Spanned};"}, {"sha": "57c1421bde6cd23ccb7e5a1f9c1fcc3af69d4d55", "filename": "src/librustc/hir/map/def_collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -4,7 +4,7 @@ use crate::hir::def_id::DefIndex;\n use syntax::ast::*;\n use syntax::visit;\n use syntax::symbol::{kw, sym};\n-use syntax::parse::token::{self, Token};\n+use syntax::token::{self, Token};\n use syntax_pos::hygiene::ExpnId;\n use syntax_pos::Span;\n "}, {"sha": "c401bd17dd4172b2fbb6057958f841891aafe21d", "filename": "src/librustc/ich/impls_syntax.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_syntax.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -8,9 +8,9 @@ use std::mem;\n \n use syntax::ast;\n use syntax::feature_gate;\n-use syntax::parse::token;\n-use syntax::symbol::SymbolStr;\n+use syntax::token;\n use syntax::tokenstream;\n+use syntax_pos::symbol::SymbolStr;\n use syntax_pos::SourceFile;\n \n use crate::hir::def_id::{DefId, CrateNum, CRATE_DEF_INDEX};"}, {"sha": "611b891d99abf5b0ceb941e917b60ca8db34505d", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -42,6 +42,7 @@ use rustc::ty::TyCtxt;\n use rustc::util::common::{set_time_depth, time, print_time_passes_entry, ErrorReported};\n use rustc_metadata::locator;\n use rustc_codegen_utils::codegen_backend::CodegenBackend;\n+use errors::PResult;\n use rustc_interface::interface;\n use rustc_interface::util::get_codegen_sysroot;\n use rustc_data_structures::sync::SeqCst;\n@@ -64,7 +65,7 @@ use std::time::Instant;\n use syntax::ast;\n use syntax::source_map::FileLoader;\n use syntax::feature_gate::{GatedCfg, UnstableFeatures};\n-use syntax::parse::{self, PResult};\n+use syntax::parse;\n use syntax::symbol::sym;\n use syntax_pos::{DUMMY_SP, FileName};\n "}, {"sha": "fb5cccf61a7a9877719138bdacedd12d061e834c", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -15,7 +15,8 @@ use Level::*;\n \n use emitter::{Emitter, EmitterWriter, is_case_difference};\n use registry::Registry;\n-\n+#[cfg(target_arch = \"x86_64\")]\n+use rustc_data_structures::static_assert_size;\n use rustc_data_structures::sync::{self, Lrc, Lock};\n use rustc_data_structures::fx::{FxHashSet, FxIndexMap};\n use rustc_data_structures::stable_hasher::StableHasher;\n@@ -48,6 +49,13 @@ use syntax_pos::{\n     SpanSnippetError,\n };\n \n+pub type PResult<'a, T> = Result<T, DiagnosticBuilder<'a>>;\n+\n+// `PResult` is used a lot. Make sure it doesn't unintentionally get bigger.\n+// (See also the comment on `DiagnosticBuilderInner`.)\n+#[cfg(target_arch = \"x86_64\")]\n+static_assert_size!(PResult<'_, bool>, 16);\n+\n /// Indicates the confidence in the correctness of a suggestion.\n ///\n /// All suggestions are marked with an `Applicability`. Tools use the applicability of a suggestion"}, {"sha": "034e861b2123cd9b70c990e8d96c8c36e4d675e4", "filename": "src/librustc_interface/interface.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_interface%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_interface%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Finterface.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -16,7 +16,7 @@ use std::result;\n use std::sync::{Arc, Mutex};\n use syntax::{self, parse};\n use syntax::ast::{self, MetaItemKind};\n-use syntax::parse::token;\n+use syntax::token;\n use syntax::source_map::{FileName, FileLoader, SourceMap};\n use syntax::sess::ParseSess;\n use syntax_pos::edition;"}, {"sha": "ce34caee6fab3f385078dff5bd55cf75ee800ea4", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -22,6 +22,7 @@ use rustc_codegen_utils::codegen_backend::CodegenBackend;\n use rustc_codegen_utils::link::filename_for_metadata;\n use rustc_data_structures::{box_region_allow_access, declare_box_region_type, parallel};\n use rustc_data_structures::sync::{Lrc, ParallelIterator, par_iter};\n+use rustc_errors::PResult;\n use rustc_incremental;\n use rustc_metadata::cstore;\n use rustc_mir as mir;\n@@ -36,7 +37,7 @@ use syntax::{self, ast, visit};\n use syntax::early_buffered_lints::BufferedEarlyLint;\n use syntax_expand::base::{NamedSyntaxExtension, ExtCtxt};\n use syntax::mut_visit::MutVisitor;\n-use syntax::parse::{self, PResult};\n+use syntax::parse;\n use syntax::util::node_count::NodeCounter;\n use syntax::symbol::Symbol;\n use syntax_pos::FileName;"}, {"sha": "4239518b879e3b5a247fcdd6e2381f598d472941", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -33,7 +33,7 @@ use syntax::attr;\n use syntax::ast::{self, Block, ForeignItem, ForeignItemKind, Item, ItemKind, NodeId};\n use syntax::ast::{MetaItemKind, StmtKind, TraitItem, TraitItemKind};\n use syntax::feature_gate::is_builtin_attr;\n-use syntax::parse::token::{self, Token};\n+use syntax::token::{self, Token};\n use syntax::print::pprust;\n use syntax::{span_err, struct_span_err};\n use syntax::source_map::{respan, Spanned};"}, {"sha": "5c5fbcc07de4c9db39ca1c0c651f4e55ee5d5292", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -24,7 +24,7 @@ use std::path::Path;\n use std::env;\n \n use syntax::ast::{self, Attribute, NodeId, PatKind};\n-use syntax::parse::token;\n+use syntax::token;\n use syntax::visit::{self, Visitor};\n use syntax::print::pprust::{\n     bounds_to_string,"}, {"sha": "a2f8837c581347ec05a859f6e472978932cd50ec", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -29,7 +29,7 @@ use std::path::{Path, PathBuf};\n \n use syntax::ast::{self, Attribute, DUMMY_NODE_ID, NodeId, PatKind};\n use syntax::source_map::Spanned;\n-use syntax::parse::lexer::comments::strip_doc_comment_decoration;\n+use syntax::util::comments::strip_doc_comment_decoration;\n use syntax::print::pprust;\n use syntax::visit::{self, Visitor};\n use syntax::print::pprust::{param_to_string, ty_to_string};"}, {"sha": "4d0780cf94df002ed4eeb2ddc8e0d6ca0005db7a", "filename": "src/librustc_save_analysis/span_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_save_analysis%2Fspan_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustc_save_analysis%2Fspan_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fspan_utils.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -3,7 +3,7 @@ use rustc::session::Session;\n use crate::generated_code;\n \n use syntax::parse::lexer::{self, StringReader};\n-use syntax::parse::token::{self, TokenKind};\n+use syntax::token::{self, TokenKind};\n use syntax_pos::*;\n \n #[derive(Clone)]"}, {"sha": "f6cac8ca48d5c0d5fcc31e4d0381917332811a48", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -28,7 +28,7 @@ use rustc::ty::layout::VariantIdx;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use syntax::ast::{self, Attribute, AttrStyle, AttrKind, Ident};\n use syntax::attr;\n-use syntax::parse::lexer::comments;\n+use syntax::util::comments;\n use syntax::source_map::DUMMY_SP;\n use syntax_pos::symbol::{Symbol, kw, sym};\n use syntax_pos::hygiene::MacroKind;"}, {"sha": "4bd72f7e61ccc581c6739b7ed3ea3dbd0a403a42", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -13,7 +13,7 @@ use std::io::prelude::*;\n \n use syntax::source_map::SourceMap;\n use syntax::parse::lexer;\n-use syntax::parse::token::{self, Token};\n+use syntax::token::{self, Token};\n use syntax::sess::ParseSess;\n use syntax::symbol::{kw, sym};\n use syntax_pos::{Span, FileName};"}, {"sha": "4603e77b0fda83647c18ca1b96b0d093b164b9e3", "filename": "src/librustdoc/passes/check_code_block_syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,6 +1,6 @@\n use errors::Applicability;\n use syntax::parse::lexer::{StringReader as Lexer};\n-use syntax::parse::token;\n+use syntax::token;\n use syntax::sess::ParseSess;\n use syntax::source_map::FilePathMapping;\n use syntax_pos::{InnerSpan, FileName};"}, {"sha": "18151a1586c932eefd3ec57bdbf18f42b5733e2e", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -24,9 +24,9 @@ pub use crate::util::parser::ExprPrecedence;\n \n pub use syntax_pos::symbol::{Ident, Symbol as Name};\n \n-use crate::parse::token::{self, DelimToken};\n use crate::ptr::P;\n use crate::source_map::{dummy_spanned, respan, Spanned};\n+use crate::token::{self, DelimToken};\n use crate::tokenstream::TokenStream;\n \n use syntax_pos::symbol::{kw, sym, Symbol};"}, {"sha": "c639431794c500d070706f662999e1975d657b23", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -14,17 +14,17 @@ use crate::ast::{MetaItem, MetaItemKind, NestedMetaItem};\n use crate::ast::{Lit, LitKind, Expr, Item, Local, Stmt, StmtKind, GenericParam};\n use crate::mut_visit::visit_clobber;\n use crate::source_map::{BytePos, Spanned};\n-use crate::parse::lexer::comments::doc_comment_style;\n use crate::parse;\n-use crate::parse::PResult;\n-use crate::parse::token::{self, Token};\n+use crate::token::{self, Token};\n use crate::ptr::P;\n use crate::sess::ParseSess;\n use crate::symbol::{sym, Symbol};\n use crate::ThinVec;\n use crate::tokenstream::{DelimSpan, TokenStream, TokenTree, TreeAndJoint};\n use crate::GLOBALS;\n \n+use errors::PResult;\n+\n use log::debug;\n use syntax_pos::Span;\n \n@@ -400,11 +400,11 @@ pub fn mk_attr_outer(item: MetaItem) -> Attribute {\n     mk_attr(AttrStyle::Outer, item.path, item.kind.tokens(item.span), item.span)\n }\n \n-pub fn mk_doc_comment(comment: Symbol, span: Span) -> Attribute {\n+pub fn mk_doc_comment(style: AttrStyle, comment: Symbol, span: Span) -> Attribute {\n     Attribute {\n         kind: AttrKind::DocComment(comment),\n         id: mk_attr_id(),\n-        style: doc_comment_style(&comment.as_str()),\n+        style,\n         span,\n     }\n }"}, {"sha": "ecff89ad59bd94dbe22d08752ad2b4868ba93528", "filename": "src/libsyntax/feature_gate/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -11,7 +11,7 @@ use crate::attr::{self, check_builtin_attribute};\n use crate::source_map::Spanned;\n use crate::edition::{ALL_EDITIONS, Edition};\n use crate::visit::{self, FnKind, Visitor};\n-use crate::parse::token;\n+use crate::token;\n use crate::sess::ParseSess;\n use crate::symbol::{Symbol, sym};\n use crate::tokenstream::TokenTree;"}, {"sha": "1b17de529c415814690f0a672e595098a668cc30", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -85,7 +85,10 @@ pub mod diagnostics {\n pub mod error_codes;\n \n pub mod util {\n+    crate mod classify;\n+    pub mod comments;\n     pub mod lev_distance;\n+    crate mod literal;\n     pub mod node_count;\n     pub mod parser;\n     pub mod map_in_place;\n@@ -107,6 +110,7 @@ pub mod show_span;\n pub use syntax_pos::edition;\n pub use syntax_pos::symbol;\n pub mod sess;\n+pub mod token;\n pub mod tokenstream;\n pub mod visit;\n "}, {"sha": "0c90652526d8078131aa3f3f06382b59cf234c52", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -9,7 +9,7 @@\n \n use crate::ast::*;\n use crate::source_map::{Spanned, respan};\n-use crate::parse::token::{self, Token};\n+use crate::token::{self, Token};\n use crate::ptr::P;\n use crate::ThinVec;\n use crate::tokenstream::*;"}, {"sha": "b1b7b08c78a3b63dddd77ce41e88c809198bde52", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 6, "deletions": 20, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,7 +1,7 @@\n-use crate::parse::token::{self, Token, TokenKind};\n+use crate::token::{self, Token, TokenKind};\n use crate::sess::ParseSess;\n use crate::symbol::{sym, Symbol};\n-use crate::parse::unescape_error_reporting::{emit_unescape_error, push_escaped_char};\n+use crate::util::comments;\n \n use errors::{FatalError, DiagnosticBuilder};\n use syntax_pos::{BytePos, Pos, Span};\n@@ -16,9 +16,10 @@ use log::debug;\n #[cfg(test)]\n mod tests;\n \n-pub mod comments;\n mod tokentrees;\n mod unicode_chars;\n+mod unescape_error_reporting;\n+use unescape_error_reporting::{emit_unescape_error, push_escaped_char};\n \n #[derive(Clone, Debug)]\n pub struct UnmatchedBrace {\n@@ -178,7 +179,7 @@ impl<'a> StringReader<'a> {\n             rustc_lexer::TokenKind::LineComment => {\n                 let string = self.str_from(start);\n                 // comments with only more \"/\"s are not doc comments\n-                let tok = if is_doc_comment(string) {\n+                let tok = if comments::is_line_doc_comment(string) {\n                     self.forbid_bare_cr(start, string, \"bare CR not allowed in doc-comment\");\n                     token::DocComment(Symbol::intern(string))\n                 } else {\n@@ -191,7 +192,7 @@ impl<'a> StringReader<'a> {\n                 let string = self.str_from(start);\n                 // block comments starting with \"/**\" or \"/*!\" are doc-comments\n                 // but comments with only \"*\"s between two \"/\"s are not\n-                let is_doc_comment = is_block_doc_comment(string);\n+                let is_doc_comment = comments::is_block_doc_comment(string);\n \n                 if !terminated {\n                     let msg = if is_doc_comment {\n@@ -642,18 +643,3 @@ impl<'a> StringReader<'a> {\n         }\n     }\n }\n-\n-fn is_doc_comment(s: &str) -> bool {\n-    let res = (s.starts_with(\"///\") && *s.as_bytes().get(3).unwrap_or(&b' ') != b'/') ||\n-              s.starts_with(\"//!\");\n-    debug!(\"is {:?} a doc comment? {}\", s, res);\n-    res\n-}\n-\n-fn is_block_doc_comment(s: &str) -> bool {\n-    // Prevent `/**/` from being parsed as a doc comment\n-    let res = ((s.starts_with(\"/**\") && *s.as_bytes().get(3).unwrap_or(&b' ') != b'*') ||\n-               s.starts_with(\"/*!\")) && s.len() >= 5;\n-    debug!(\"is {:?} a doc comment? {}\", s, res);\n-    res\n-}"}, {"sha": "baa6fb59537e3af35a08255f1b074a901a664813", "filename": "src/libsyntax/parse/lexer/tests.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Flexer%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Flexer%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Ftests.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -2,7 +2,8 @@ use super::*;\n \n use crate::symbol::Symbol;\n use crate::source_map::{SourceMap, FilePathMapping};\n-use crate::parse::token;\n+use crate::token;\n+use crate::util::comments::is_doc_comment;\n use crate::with_default_globals;\n \n use errors::{Handler, emitter::EmitterWriter};"}, {"sha": "2b056434d4dcbface7bd2bc0e3cd7aebc7a71c0c", "filename": "src/libsyntax/parse/lexer/tokentrees.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Flexer%2Ftokentrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Flexer%2Ftokentrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Ftokentrees.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -4,10 +4,11 @@ use syntax_pos::Span;\n use super::{StringReader, UnmatchedBrace};\n \n use crate::print::pprust::token_to_string;\n-use crate::parse::token::{self, Token};\n-use crate::parse::PResult;\n+use crate::token::{self, Token};\n use crate::tokenstream::{DelimSpan, IsJoint::{self, *}, TokenStream, TokenTree, TreeAndJoint};\n \n+use errors::PResult;\n+\n impl<'a> StringReader<'a> {\n     crate fn into_token_trees(self) -> (PResult<'a, TokenStream>, Vec<UnmatchedBrace>) {\n         let mut tt_reader = TokenTreesReader {"}, {"sha": "5565015179c2d5949a9291f72b5b1431b38b21c0", "filename": "src/libsyntax/parse/lexer/unescape_error_reporting.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Flexer%2Funescape_error_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Flexer%2Funescape_error_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Funescape_error_reporting.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "previous_filename": "src/libsyntax/parse/unescape_error_reporting.rs"}, {"sha": "6eb995b61d3feeeb062f7388e61900d8e20f6f4c", "filename": "src/libsyntax/parse/lexer/unicode_chars.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Funicode_chars.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -4,7 +4,7 @@\n use super::StringReader;\n use errors::{Applicability, DiagnosticBuilder};\n use syntax_pos::{BytePos, Pos, Span, symbol::kw};\n-use crate::parse::token;\n+use crate::token;\n \n #[rustfmt::skip] // for line breaks\n const UNICODE_ARRAY: &[(char, &str, char)] = &["}, {"sha": "18550762017951622c4e0e63eb410b112e41ea34", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -2,14 +2,12 @@\n \n use crate::ast;\n use crate::parse::parser::{Parser, emit_unclosed_delims, make_unclosed_delims_error};\n-use crate::parse::token::Nonterminal;\n+use crate::token::{self, Nonterminal};\n use crate::tokenstream::{self, TokenStream, TokenTree};\n use crate::print::pprust;\n use crate::sess::ParseSess;\n \n-use errors::{FatalError, Level, Diagnostic, DiagnosticBuilder};\n-#[cfg(target_arch = \"x86_64\")]\n-use rustc_data_structures::static_assert_size;\n+use errors::{PResult, FatalError, Level, Diagnostic};\n use rustc_data_structures::sync::Lrc;\n use syntax_pos::{Span, SourceFile, FileName};\n \n@@ -25,18 +23,6 @@ mod tests;\n #[macro_use]\n pub mod parser;\n pub mod lexer;\n-pub mod token;\n-\n-crate mod classify;\n-crate mod literal;\n-crate mod unescape_error_reporting;\n-\n-pub type PResult<'a, T> = Result<T, DiagnosticBuilder<'a>>;\n-\n-// `PResult` is used a lot. Make sure it doesn't unintentionally get bigger.\n-// (See also the comment on `DiagnosticBuilderInner`.)\n-#[cfg(target_arch = \"x86_64\")]\n-static_assert_size!(PResult<'_, bool>, 16);\n \n #[derive(Clone)]\n pub struct Directory<'a> {"}, {"sha": "31f0a02a483bdaed3e65ee8804a6091e5da7af3a", "filename": "src/libsyntax/parse/parser/attr.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fattr.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,10 +1,14 @@\n-use super::{SeqSep, PResult, Parser, TokenType, PathStyle};\n+use super::{SeqSep, Parser, TokenType, PathStyle};\n use crate::attr;\n use crate::ast;\n-use crate::parse::token::{self, Nonterminal, DelimToken};\n+use crate::util::comments;\n+use crate::token::{self, Nonterminal, DelimToken};\n use crate::tokenstream::{TokenStream, TokenTree};\n use crate::source_map::Span;\n \n+use syntax_pos::Symbol;\n+use errors::PResult;\n+\n use log::debug;\n \n #[derive(Debug)]\n@@ -43,7 +47,7 @@ impl<'a> Parser<'a> {\n                     just_parsed_doc_comment = false;\n                 }\n                 token::DocComment(s) => {\n-                    let attr = attr::mk_doc_comment(s, self.token.span);\n+                    let attr = self.mk_doc_comment(s);\n                     if attr.style != ast::AttrStyle::Outer {\n                         let mut err = self.fatal(\"expected outer doc comment\");\n                         err.note(\"inner doc comments like this (starting with \\\n@@ -60,6 +64,11 @@ impl<'a> Parser<'a> {\n         Ok(attrs)\n     }\n \n+    fn mk_doc_comment(&self, s: Symbol) -> ast::Attribute {\n+        let style = comments::doc_comment_style(&s.as_str());\n+        attr::mk_doc_comment(style, s, self.token.span)\n+    }\n+\n     /// Matches `attribute = # ! [ meta_item ]`.\n     ///\n     /// If `permit_inner` is `true`, then a leading `!` indicates an inner\n@@ -228,7 +237,7 @@ impl<'a> Parser<'a> {\n                 }\n                 token::DocComment(s) => {\n                     // We need to get the position of this token before we bump.\n-                    let attr = attr::mk_doc_comment(s, self.token.span);\n+                    let attr = self.mk_doc_comment(s);\n                     if attr.style == ast::AttrStyle::Inner {\n                         attrs.push(attr);\n                         self.bump();"}, {"sha": "26d7f48025eda11b319146f817a5e0f86116d70e", "filename": "src/libsyntax/parse/parser/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fdiagnostics.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,18 +1,16 @@\n-use super::{\n-    BlockMode, PathStyle, SemiColonMode, TokenType, TokenExpectType,\n-    SeqSep, PResult, Parser\n-};\n+use super::{BlockMode, PathStyle, SemiColonMode, TokenType, TokenExpectType, SeqSep, Parser};\n use crate::ast::{\n     self, Param, BinOpKind, BindingMode, BlockCheckMode, Expr, ExprKind, Ident, Item, ItemKind,\n     Mutability, Pat, PatKind, PathSegment, QSelf, Ty, TyKind,\n };\n-use crate::parse::token::{self, TokenKind, token_can_begin_expr};\n+use crate::token::{self, TokenKind, token_can_begin_expr};\n use crate::print::pprust;\n use crate::ptr::P;\n use crate::symbol::{kw, sym};\n use crate::ThinVec;\n use crate::util::parser::AssocOp;\n-use errors::{Applicability, DiagnosticBuilder, DiagnosticId, pluralize};\n+\n+use errors::{PResult, Applicability, DiagnosticBuilder, DiagnosticId, pluralize};\n use rustc_data_structures::fx::FxHashSet;\n use syntax_pos::{Span, DUMMY_SP, MultiSpan, SpanSnippetError};\n use log::{debug, trace};"}, {"sha": "800074035ce8b8744727b39b34a83459613cf810", "filename": "src/libsyntax/parse/parser/expr.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,24 +1,23 @@\n-use super::{Parser, PResult, Restrictions, PrevTokenKind, TokenType, PathStyle, BlockMode};\n+use super::{Parser, Restrictions, PrevTokenKind, TokenType, PathStyle, BlockMode};\n use super::{SemiColonMode, SeqSep, TokenExpectType};\n use super::pat::{GateOr, PARAM_EXPECTED};\n use super::diagnostics::Error;\n \n-use crate::parse::literal::LitError;\n-\n use crate::ast::{\n     self, DUMMY_NODE_ID, Attribute, AttrStyle, Ident, CaptureBy, BlockCheckMode,\n     Expr, ExprKind, RangeLimits, Label, Movability, IsAsync, Arm, Ty, TyKind,\n     FunctionRetTy, Param, FnDecl, BinOpKind, BinOp, UnOp, Mac, AnonConst, Field, Lit,\n };\n use crate::maybe_recover_from_interpolated_ty_qpath;\n-use crate::parse::classify;\n-use crate::parse::token::{self, Token, TokenKind};\n+use crate::token::{self, Token, TokenKind};\n use crate::print::pprust;\n use crate::ptr::P;\n use crate::source_map::{self, Span};\n+use crate::util::classify;\n+use crate::util::literal::LitError;\n use crate::util::parser::{AssocOp, Fixity, prec_let_scrutinee_needs_par};\n \n-use errors::Applicability;\n+use errors::{PResult, Applicability};\n use syntax_pos::symbol::{kw, sym};\n use syntax_pos::Symbol;\n use std::mem;"}, {"sha": "ae9ecd8fe392281a6b97179916734fdf6e11873e", "filename": "src/libsyntax/parse/parser/generics.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fgenerics.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,11 +1,13 @@\n-use super::{Parser, PResult};\n+use super::Parser;\n \n use crate::ast::{self, WhereClause, GenericParam, GenericParamKind, GenericBounds, Attribute};\n-use crate::parse::token;\n+use crate::token;\n use crate::source_map::DUMMY_SP;\n \n use syntax_pos::symbol::{kw, sym};\n \n+use errors::PResult;\n+\n impl<'a> Parser<'a> {\n     /// Parses bounds of a lifetime parameter `BOUND + BOUND + BOUND`, possibly with trailing `+`.\n     ///"}, {"sha": "3c618d75d348fdcf67bd06f21b65cb7d543fc7c0", "filename": "src/libsyntax/parse/parser/item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,4 +1,4 @@\n-use super::{Parser, PResult, PathStyle};\n+use super::{Parser, PathStyle};\n use super::diagnostics::{Error, dummy_arg, ConsumeClosingDelim};\n \n use crate::maybe_whole;\n@@ -17,7 +17,7 @@ use crate::ThinVec;\n \n use log::debug;\n use std::mem;\n-use errors::{Applicability, DiagnosticBuilder, DiagnosticId, StashKey};\n+use errors::{PResult, Applicability, DiagnosticBuilder, DiagnosticId, StashKey};\n use syntax_pos::BytePos;\n \n /// Whether the type alias or associated type is a concrete type or an opaque type."}, {"sha": "455f4172f5fba7129643de3c803854e57b4a96f4", "filename": "src/libsyntax/parse/parser/mod.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fmod.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -15,10 +15,10 @@ use crate::ast::{\n     self, Abi, DUMMY_NODE_ID, AttrStyle, Attribute, CrateSugar, Ident,\n     IsAsync, MacDelimiter, Mutability, StrStyle, Visibility, VisibilityKind, Unsafety,\n };\n-use crate::parse::{PResult, Directory, DirectoryOwnership};\n+use crate::parse::{Directory, DirectoryOwnership};\n use crate::parse::lexer::UnmatchedBrace;\n-use crate::parse::lexer::comments::{doc_comment_style, strip_doc_comment_decoration};\n-use crate::parse::token::{self, Token, TokenKind, DelimToken};\n+use crate::util::comments::{doc_comment_style, strip_doc_comment_decoration};\n+use crate::token::{self, Token, TokenKind, DelimToken};\n use crate::print::pprust;\n use crate::ptr::P;\n use crate::sess::ParseSess;\n@@ -27,7 +27,7 @@ use crate::symbol::{kw, sym, Symbol};\n use crate::tokenstream::{self, DelimSpan, TokenTree, TokenStream, TreeAndJoint};\n use crate::ThinVec;\n \n-use errors::{Applicability, DiagnosticBuilder, DiagnosticId, FatalError};\n+use errors::{PResult, Applicability, DiagnosticBuilder, DiagnosticId, FatalError};\n use syntax_pos::{Span, BytePos, DUMMY_SP, FileName};\n use log::debug;\n ", "previous_filename": "src/libsyntax/parse/parser.rs"}, {"sha": "72049daaed30965fb0b72526f51afa7c4b7c7806", "filename": "src/libsyntax/parse/parser/module.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fmodule.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,14 +1,16 @@\n-use super::{Parser, PResult};\n+use super::Parser;\n use super::item::ItemInfo;\n use super::diagnostics::Error;\n \n use crate::attr;\n use crate::ast::{self, Ident, Attribute, ItemKind, Mod, Crate};\n use crate::parse::{new_sub_parser_from_file, DirectoryOwnership};\n-use crate::parse::token::{self, TokenKind};\n+use crate::token::{self, TokenKind};\n use crate::source_map::{SourceMap, Span, DUMMY_SP, FileName};\n use crate::symbol::sym;\n \n+use errors::PResult;\n+\n use std::path::{self, Path, PathBuf};\n \n /// Information about the path to a module."}, {"sha": "f347300da716f34a7f3d6508fec5107a275bb6df", "filename": "src/libsyntax/parse/parser/pat.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,16 +1,16 @@\n-use super::{Parser, PResult, PathStyle};\n+use super::{Parser, PathStyle};\n \n use crate::{maybe_recover_from_interpolated_ty_qpath, maybe_whole};\n use crate::ptr::P;\n use crate::ast::{self, Attribute, Pat, PatKind, FieldPat, RangeEnd, RangeSyntax, Mac};\n use crate::ast::{BindingMode, Ident, Mutability, Path, QSelf, Expr, ExprKind};\n use crate::mut_visit::{noop_visit_pat, noop_visit_mac, MutVisitor};\n-use crate::parse::token::{self};\n+use crate::token;\n use crate::print::pprust;\n use crate::source_map::{respan, Span, Spanned};\n use crate::ThinVec;\n use syntax_pos::symbol::{kw, sym};\n-use errors::{Applicability, DiagnosticBuilder};\n+use errors::{PResult, Applicability, DiagnosticBuilder};\n \n type Expected = Option<&'static str>;\n "}, {"sha": "9ceb3ba1eb4919a0577a3a6a3a94ad7b3fe46589", "filename": "src/libsyntax/parse/parser/path.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fpath.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,15 +1,15 @@\n-use super::{Parser, PResult, TokenType};\n+use super::{Parser, TokenType};\n \n use crate::{maybe_whole, ThinVec};\n use crate::ast::{self, QSelf, Path, PathSegment, Ident, ParenthesizedArgs, AngleBracketedArgs};\n use crate::ast::{AnonConst, GenericArg, AssocTyConstraint, AssocTyConstraintKind, BlockCheckMode};\n-use crate::parse::token::{self, Token};\n+use crate::token::{self, Token};\n use crate::source_map::{Span, BytePos};\n use syntax_pos::symbol::{kw, sym};\n \n use std::mem;\n use log::debug;\n-use errors::{Applicability, pluralize};\n+use errors::{PResult, Applicability, pluralize};\n \n /// Specifies how to parse a path.\n #[derive(Copy, Clone, PartialEq)]"}, {"sha": "30e47b7a0b24d0f98d50d0fe403e1edabdbd5f51", "filename": "src/libsyntax/parse/parser/stmt.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fstmt.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,4 +1,4 @@\n-use super::{Parser, PResult, Restrictions, PrevTokenKind, SemiColonMode, BlockMode};\n+use super::{Parser, Restrictions, PrevTokenKind, SemiColonMode, BlockMode};\n use super::expr::LhsExpr;\n use super::path::PathStyle;\n use super::pat::GateOr;\n@@ -8,13 +8,14 @@ use crate::ptr::P;\n use crate::{maybe_whole, ThinVec};\n use crate::ast::{self, DUMMY_NODE_ID, Stmt, StmtKind, Local, Block, BlockCheckMode, Expr, ExprKind};\n use crate::ast::{Attribute, AttrStyle, VisibilityKind, MacStmtStyle, Mac, MacDelimiter};\n-use crate::parse::{classify, DirectoryOwnership};\n-use crate::parse::token;\n+use crate::parse::DirectoryOwnership;\n+use crate::util::classify;\n+use crate::token;\n use crate::source_map::{respan, Span};\n use crate::symbol::{kw, sym};\n \n use std::mem;\n-use errors::Applicability;\n+use errors::{PResult, Applicability};\n \n impl<'a> Parser<'a> {\n     /// Parses a statement. This stops just before trailing semicolons on everything but items."}, {"sha": "a891634e611da93659453eaa64c482e911696e4b", "filename": "src/libsyntax/parse/parser/ty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fty.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,16 +1,16 @@\n-use super::{Parser, PResult, PathStyle, PrevTokenKind, TokenType};\n+use super::{Parser, PathStyle, PrevTokenKind, TokenType};\n use super::item::ParamCfg;\n \n use crate::{maybe_whole, maybe_recover_from_interpolated_ty_qpath};\n use crate::ptr::P;\n use crate::ast::{self, Ty, TyKind, MutTy, BareFnTy, FunctionRetTy, GenericParam, Lifetime, Ident};\n use crate::ast::{TraitBoundModifier, TraitObjectSyntax, GenericBound, GenericBounds, PolyTraitRef};\n use crate::ast::{Mutability, AnonConst, Mac};\n-use crate::parse::token::{self, Token};\n+use crate::token::{self, Token};\n use crate::source_map::Span;\n use crate::symbol::{kw};\n \n-use errors::{Applicability, pluralize};\n+use errors::{PResult, Applicability, pluralize};\n \n /// Returns `true` if `IDENT t` can start a type -- `IDENT::a::b`, `IDENT<u8, u8>`,\n /// `IDENT<<u8 as Trait>::AssocTy>`."}, {"sha": "27ca2b6472f0c75240bf276893bcb23d68d357c5", "filename": "src/libsyntax/parse/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fparse%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftests.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -2,9 +2,9 @@ use super::*;\n \n use crate::ast::{self, Name, PatKind};\n use crate::attr::first_attr_value_str_by_name;\n-use crate::parse::{ParseSess, PResult};\n-use crate::parse::new_parser_from_source_str;\n-use crate::parse::token::Token;\n+use crate::sess::ParseSess;\n+use crate::parse::{PResult, new_parser_from_source_str};\n+use crate::token::Token;\n use crate::print::pprust::item_to_string;\n use crate::ptr::P;\n use crate::source_map::FilePathMapping;"}, {"sha": "4ca4bdeb046546353afddcbfd9bff098325b733d", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -2,14 +2,14 @@ use crate::ast::{self, BlockCheckMode, PatKind, RangeEnd, RangeSyntax};\n use crate::ast::{SelfKind, GenericBound, TraitBoundModifier};\n use crate::ast::{Attribute, MacDelimiter, GenericArg};\n use crate::util::parser::{self, AssocOp, Fixity};\n+use crate::util::comments;\n use crate::attr;\n use crate::source_map::{self, SourceMap, Spanned};\n-use crate::parse::token::{self, BinOpToken, DelimToken, Nonterminal, Token, TokenKind};\n-use crate::parse::lexer::comments;\n-use crate::parse;\n+use crate::token::{self, BinOpToken, DelimToken, Nonterminal, Token, TokenKind};\n use crate::print::pp::{self, Breaks};\n use crate::print::pp::Breaks::{Consistent, Inconsistent};\n use crate::ptr::P;\n+use crate::util::classify;\n use crate::sess::ParseSess;\n use crate::symbol::{kw, sym};\n use crate::tokenstream::{self, TokenStream, TokenTree};\n@@ -1659,7 +1659,7 @@ impl<'a> State<'a> {\n             ast::StmtKind::Expr(ref expr) => {\n                 self.space_if_not_bol();\n                 self.print_expr_outer_attr_style(expr, false);\n-                if parse::classify::expr_requires_semi_to_be_stmt(expr) {\n+                if classify::expr_requires_semi_to_be_stmt(expr) {\n                     self.s.word(\";\");\n                 }\n             }"}, {"sha": "ed457c3627f42e59af8248a96549b7f08cde4fcd", "filename": "src/libsyntax/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftests.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,5 +1,5 @@\n use crate::ast;\n-use crate::parse::{PResult, source_file_to_stream};\n+use crate::parse::source_file_to_stream;\n use crate::parse::new_parser_from_source_str;\n use crate::parse::parser::Parser;\n use crate::sess::ParseSess;\n@@ -8,7 +8,7 @@ use crate::tokenstream::TokenStream;\n use crate::with_default_globals;\n \n use errors::emitter::EmitterWriter;\n-use errors::Handler;\n+use errors::{PResult, Handler};\n use rustc_data_structures::sync::Lrc;\n use syntax_pos::{BytePos, Span, MultiSpan};\n "}, {"sha": "6f3da344ccf88e6cc7a5857d809dcef8a3fcda56", "filename": "src/libsyntax/token.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftoken.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "previous_filename": "src/libsyntax/parse/token.rs"}, {"sha": "6e1bb85ce1ac13cda27246e7fefe0c5b25e49366", "filename": "src/libsyntax/tokenstream.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftokenstream.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -13,7 +13,7 @@\n //! and a borrowed `TokenStream` is sufficient to build an owned `TokenStream` without taking\n //! ownership of the original.\n \n-use crate::parse::token::{self, DelimToken, Token, TokenKind};\n+use crate::token::{self, DelimToken, Token, TokenKind};\n \n use syntax_pos::{Span, DUMMY_SP};\n #[cfg(target_arch = \"x86_64\")]"}, {"sha": "4456068875019fd347260ce8c7b4f7abc412be23", "filename": "src/libsyntax/util/classify.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Futil%2Fclassify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Futil%2Fclassify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fclassify.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "previous_filename": "src/libsyntax/parse/classify.rs"}, {"sha": "448b4f3b8256c0a00c773c8a710cf97e27a9f471", "filename": "src/libsyntax/util/comments.rs", "status": "renamed", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Futil%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Futil%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fcomments.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -2,13 +2,14 @@ pub use CommentStyle::*;\n \n use crate::ast;\n use crate::source_map::SourceMap;\n-use crate::parse::lexer::is_block_doc_comment;\n-use crate::parse::lexer::ParseSess;\n+use crate::sess::ParseSess;\n \n use syntax_pos::{BytePos, CharPos, Pos, FileName};\n \n use std::usize;\n \n+use log::debug;\n+\n #[cfg(test)]\n mod tests;\n \n@@ -31,8 +32,23 @@ pub struct Comment {\n     pub pos: BytePos,\n }\n \n-fn is_doc_comment(s: &str) -> bool {\n-    (s.starts_with(\"///\") && super::is_doc_comment(s)) || s.starts_with(\"//!\") ||\n+crate fn is_line_doc_comment(s: &str) -> bool {\n+    let res = (s.starts_with(\"///\") && *s.as_bytes().get(3).unwrap_or(&b' ') != b'/') ||\n+              s.starts_with(\"//!\");\n+    debug!(\"is {:?} a doc comment? {}\", s, res);\n+    res\n+}\n+\n+crate fn is_block_doc_comment(s: &str) -> bool {\n+    // Prevent `/**/` from being parsed as a doc comment\n+    let res = ((s.starts_with(\"/**\") && *s.as_bytes().get(3).unwrap_or(&b' ') != b'*') ||\n+               s.starts_with(\"/*!\")) && s.len() >= 5;\n+    debug!(\"is {:?} a doc comment? {}\", s, res);\n+    res\n+}\n+\n+crate fn is_doc_comment(s: &str) -> bool {\n+    (s.starts_with(\"///\") && is_line_doc_comment(s)) || s.starts_with(\"//!\") ||\n     (s.starts_with(\"/**\") && is_block_doc_comment(s)) || s.starts_with(\"/*!\")\n }\n ", "previous_filename": "src/libsyntax/parse/lexer/comments.rs"}, {"sha": "f9cd69fb50d7472c9b3044c9c5f2fc3be279cdb2", "filename": "src/libsyntax/util/comments/tests.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Futil%2Fcomments%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Futil%2Fcomments%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fcomments%2Ftests.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "previous_filename": "src/libsyntax/parse/lexer/comments/tests.rs"}, {"sha": "d4c9b7850c5c9256959769424b85c1e4d89078e0", "filename": "src/libsyntax/util/literal.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Futil%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Futil%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fliteral.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,8 +1,8 @@\n //! Code related to parsing literals.\n \n use crate::ast::{self, Lit, LitKind};\n-use crate::parse::token::{self, Token};\n use crate::symbol::{kw, sym, Symbol};\n+use crate::token::{self, Token};\n use crate::tokenstream::TokenTree;\n \n use log::debug;", "previous_filename": "src/libsyntax/parse/literal.rs"}, {"sha": "edb708d7e97b20012b54a58bacadfe862eac8605", "filename": "src/libsyntax/util/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Futil%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Futil%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fparser.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,4 +1,4 @@\n-use crate::parse::token::{self, Token, BinOpToken};\n+use crate::token::{self, Token, BinOpToken};\n use crate::symbol::kw;\n use crate::ast::{self, BinOpKind};\n "}, {"sha": "cfd160fd57751d01b3a4080e88730bec14066b62", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -14,7 +14,7 @@\n //! those that are created by the expansion of a macro.\n \n use crate::ast::*;\n-use crate::parse::token::Token;\n+use crate::token::Token;\n use crate::tokenstream::{TokenTree, TokenStream};\n \n use syntax_pos::Span;"}, {"sha": "47835c9265967268e339a050fc71bc996d7e066a", "filename": "src/libsyntax_expand/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fbase.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -6,11 +6,11 @@ use syntax::source_map::SourceMap;\n use syntax::edition::Edition;\n use syntax::mut_visit::{self, MutVisitor};\n use syntax::parse::{self, parser, DirectoryOwnership};\n-use syntax::parse::token;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n use syntax::symbol::{kw, sym, Ident, Symbol};\n use syntax::{ThinVec, MACRO_ARGUMENTS};\n+use syntax::token;\n use syntax::tokenstream::{self, TokenStream};\n use syntax::visit::Visitor;\n "}, {"sha": "e91dd2aba1537f3e354a463f1ee000c126eea0dc", "filename": "src/libsyntax_expand/expand.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fexpand.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -12,18 +12,18 @@ use syntax::configure;\n use syntax::config::StripUnconfigured;\n use syntax::feature_gate::{self, Features, GateIssue, is_builtin_attr, emit_feature_err};\n use syntax::mut_visit::*;\n-use syntax::parse::{DirectoryOwnership, PResult};\n-use syntax::parse::token;\n+use syntax::parse::DirectoryOwnership;\n use syntax::parse::parser::Parser;\n use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n use syntax::symbol::{sym, Symbol};\n+use syntax::token;\n use syntax::tokenstream::{TokenStream, TokenTree};\n use syntax::visit::{self, Visitor};\n use syntax::util::map_in_place::MapInPlace;\n \n-use errors::{Applicability, FatalError};\n+use errors::{PResult, Applicability, FatalError};\n use smallvec::{smallvec, SmallVec};\n use syntax_pos::{Span, DUMMY_SP, FileName};\n "}, {"sha": "6964d01b719c945168e092c1f3ae54e64cdda139", "filename": "src/libsyntax_expand/mbe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fmbe.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -10,7 +10,7 @@ crate mod macro_rules;\n crate mod quoted;\n \n use syntax::ast;\n-use syntax::parse::token::{self, Token, TokenKind};\n+use syntax::token::{self, Token, TokenKind};\n use syntax::tokenstream::{DelimSpan};\n \n use syntax_pos::Span;"}, {"sha": "25754ed42177fd5ed18c94d1f8ae3d88059284cb", "filename": "src/libsyntax_expand/mbe/macro_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fmbe%2Fmacro_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fmbe%2Fmacro_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fmbe%2Fmacro_check.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -108,7 +108,7 @@ use crate::mbe::{KleeneToken, TokenTree};\n \n use syntax::ast::NodeId;\n use syntax::early_buffered_lints::BufferedEarlyLintId;\n-use syntax::parse::token::{DelimToken, Token, TokenKind};\n+use syntax::token::{DelimToken, Token, TokenKind};\n use syntax::sess::ParseSess;\n use syntax::symbol::{kw, sym};\n "}, {"sha": "80bf27e1a941e6f3e038e4b689ff87671383dcec", "filename": "src/libsyntax_expand/mbe/macro_parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fmbe%2Fmacro_parser.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -77,15 +77,15 @@ use TokenTreeOrTokenTreeSlice::*;\n use crate::mbe::{self, TokenTree};\n \n use syntax::ast::{Ident, Name};\n-use syntax::parse::{Directory, PResult};\n+use syntax::parse::Directory;\n use syntax::parse::parser::{Parser, PathStyle};\n-use syntax::parse::token::{self, DocComment, Nonterminal, Token};\n use syntax::print::pprust;\n use syntax::sess::ParseSess;\n use syntax::symbol::{kw, sym, Symbol};\n+use syntax::token::{self, DocComment, Nonterminal, Token};\n use syntax::tokenstream::{DelimSpan, TokenStream};\n \n-use errors::FatalError;\n+use errors::{PResult, FatalError};\n use smallvec::{smallvec, SmallVec};\n use syntax_pos::Span;\n "}, {"sha": "a5fc301fbf67b59b3c951ae9c79dc07e4168340c", "filename": "src/libsyntax_expand/mbe/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fmbe%2Fmacro_rules.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -13,12 +13,11 @@ use syntax::attr::{self, TransparencyError};\n use syntax::edition::Edition;\n use syntax::feature_gate::Features;\n use syntax::parse::parser::Parser;\n-use syntax::parse::token::TokenKind::*;\n-use syntax::parse::token::{self, NtTT, Token};\n use syntax::parse::Directory;\n use syntax::print::pprust;\n use syntax::sess::ParseSess;\n use syntax::symbol::{kw, sym, Symbol};\n+use syntax::token::{self, NtTT, Token, TokenKind::*};\n use syntax::tokenstream::{DelimSpan, TokenStream};\n \n use errors::{DiagnosticBuilder, FatalError};"}, {"sha": "dec504c0d97452830d8e3d320c13e0752a294ea0", "filename": "src/libsyntax_expand/mbe/quoted.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fmbe%2Fquoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fmbe%2Fquoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fmbe%2Fquoted.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -2,10 +2,10 @@ use crate::mbe::macro_parser;\n use crate::mbe::{TokenTree, KleeneOp, KleeneToken, SequenceRepetition, Delimited};\n \n use syntax::ast;\n-use syntax::parse::token::{self, Token};\n use syntax::print::pprust;\n use syntax::sess::ParseSess;\n use syntax::symbol::kw;\n+use syntax::token::{self, Token};\n use syntax::tokenstream;\n \n use syntax_pos::Span;"}, {"sha": "4092d4b97de04965a40821a9a01c4a353681e6fa", "filename": "src/libsyntax_expand/mbe/transcribe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fmbe%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fmbe%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fmbe%2Ftranscribe.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -4,7 +4,7 @@ use crate::mbe::macro_parser::{MatchedNonterminal, MatchedSeq, NamedMatch};\n \n use syntax::ast::{Ident, Mac};\n use syntax::mut_visit::{self, MutVisitor};\n-use syntax::parse::token::{self, NtTT, Token};\n+use syntax::token::{self, NtTT, Token};\n use syntax::tokenstream::{DelimSpan, TokenStream, TokenTree, TreeAndJoint};\n \n use smallvec::{smallvec, SmallVec};"}, {"sha": "51c368bbaa6067693a13bdff17fa4e30da4a6111", "filename": "src/libsyntax_expand/proc_macro.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fproc_macro.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -4,8 +4,9 @@ use crate::proc_macro_server;\n use syntax::ast::{self, ItemKind, Attribute, Mac};\n use syntax::attr::{mark_used, mark_known};\n use syntax::errors::{Applicability, FatalError};\n-use syntax::parse::{self, token};\n+use syntax::parse;\n use syntax::symbol::sym;\n+use syntax::token;\n use syntax::tokenstream::{self, TokenStream};\n use syntax::visit::Visitor;\n "}, {"sha": "e96b60927873bf27dfad0f5db71ba4916ca76696", "filename": "src/libsyntax_expand/proc_macro_server.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fproc_macro_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_expand%2Fproc_macro_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fproc_macro_server.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,10 +1,11 @@\n use crate::base::ExtCtxt;\n \n use syntax::ast;\n-use syntax::parse::{self, token};\n-use syntax::parse::lexer::comments;\n+use syntax::parse;\n+use syntax::util::comments;\n use syntax::print::pprust;\n use syntax::sess::ParseSess;\n+use syntax::token;\n use syntax::tokenstream::{self, DelimSpan, IsJoint::*, TokenStream, TreeAndJoint};\n \n use errors::Diagnostic;\n@@ -52,7 +53,7 @@ impl FromInternal<(TreeAndJoint, &'_ ParseSess, &'_ mut Vec<Self>)>\n {\n     fn from_internal(((tree, is_joint), sess, stack): (TreeAndJoint, &ParseSess, &mut Vec<Self>))\n                     -> Self {\n-        use syntax::parse::token::*;\n+        use syntax::token::*;\n \n         let joint = is_joint == Joint;\n         let Token { kind, span } = match tree {\n@@ -193,7 +194,7 @@ impl FromInternal<(TreeAndJoint, &'_ ParseSess, &'_ mut Vec<Self>)>\n \n impl ToInternal<TokenStream> for TokenTree<Group, Punct, Ident, Literal> {\n     fn to_internal(self) -> TokenStream {\n-        use syntax::parse::token::*;\n+        use syntax::token::*;\n \n         let (ch, joint, span) = match self {\n             TokenTree::Punct(Punct { ch, joint, span }) => (ch, joint, span),"}, {"sha": "539d777105d7466d0215a4ed8a7c2f4e2dfa0727", "filename": "src/libsyntax_ext/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fasm.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -8,7 +8,7 @@ use errors::DiagnosticBuilder;\n \n use syntax::ast;\n use syntax_expand::base::{self, *};\n-use syntax::parse::token::{self, Token};\n+use syntax::token::{self, Token};\n use syntax::ptr::P;\n use syntax::symbol::{kw, sym, Symbol};\n use syntax::ast::AsmDialect;"}, {"sha": "a15423b7ad85a5e91e74bb5b0b0b737c9c80cc37", "filename": "src/libsyntax_ext/assert.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fassert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fassert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fassert.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -2,7 +2,7 @@ use errors::{Applicability, DiagnosticBuilder};\n \n use syntax::ast::{self, *};\n use syntax_expand::base::*;\n-use syntax::parse::token::{self, TokenKind};\n+use syntax::token::{self, TokenKind};\n use syntax::parse::parser::Parser;\n use syntax::print::pprust;\n use syntax::ptr::P;"}, {"sha": "583236d97546df82024e372afde80d91a8543832", "filename": "src/libsyntax_ext/cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fcfg.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -8,7 +8,7 @@ use syntax::ast;\n use syntax_expand::base::{self, *};\n use syntax::attr;\n use syntax::tokenstream::TokenStream;\n-use syntax::parse::token;\n+use syntax::token;\n use syntax_pos::Span;\n \n pub fn expand_cfg("}, {"sha": "171f2405573c016064f90a6f3479728a7e30ac62", "filename": "src/libsyntax_ext/cmdline_attrs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fcmdline_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fcmdline_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fcmdline_attrs.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -2,7 +2,8 @@\n \n use syntax::ast::{self, AttrItem, AttrStyle};\n use syntax::attr::mk_attr;\n-use syntax::parse::{self, token};\n+use syntax::parse;\n+use syntax::token;\n use syntax::sess::ParseSess;\n use syntax_expand::panictry;\n use syntax_pos::FileName;"}, {"sha": "8a1bc56cf1ced956340405f4440afcadd8d1ddba", "filename": "src/libsyntax_ext/concat_idents.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fconcat_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fconcat_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fconcat_idents.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -2,7 +2,7 @@ use rustc_data_structures::thin_vec::ThinVec;\n \n use syntax::ast;\n use syntax_expand::base::{self, *};\n-use syntax::parse::token::{self, Token};\n+use syntax::token::{self, Token};\n use syntax::ptr::P;\n use syntax_pos::Span;\n use syntax_pos::symbol::Symbol;"}, {"sha": "e25ba7b17837190a3469d943fb8290a3862fca97", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -9,7 +9,7 @@ use errors::pluralize;\n \n use syntax::ast;\n use syntax_expand::base::{self, *};\n-use syntax::parse::token;\n+use syntax::token;\n use syntax::ptr::P;\n use syntax::symbol::{Symbol, sym};\n use syntax::tokenstream::TokenStream;"}, {"sha": "8a8ce9a7f14b5e268e9208cdfca5226acd08aca9", "filename": "src/libsyntax_ext/global_asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fglobal_asm.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -13,7 +13,7 @@ use errors::DiagnosticBuilder;\n use syntax::ast;\n use syntax::source_map::respan;\n use syntax_expand::base::{self, *};\n-use syntax::parse::token;\n+use syntax::token;\n use syntax::ptr::P;\n use syntax_pos::Span;\n use syntax::tokenstream::TokenStream;"}, {"sha": "cee1b97af55b21489a5966a63111c03c1caa2368", "filename": "src/libsyntax_ext/plugin_macro_defs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fplugin_macro_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fplugin_macro_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fplugin_macro_defs.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -4,12 +4,12 @@\n use syntax::ast::*;\n use syntax::attr;\n use syntax::edition::Edition;\n-use syntax_expand::base::{Resolver, NamedSyntaxExtension};\n-use syntax::parse::token;\n use syntax::ptr::P;\n use syntax::source_map::respan;\n use syntax::symbol::sym;\n+use syntax::token;\n use syntax::tokenstream::*;\n+use syntax_expand::base::{Resolver, NamedSyntaxExtension};\n use syntax_pos::{Span, DUMMY_SP};\n use syntax_pos::hygiene::{ExpnData, ExpnKind, AstPass};\n "}, {"sha": "7e47b40714da0505e1451580db57b25e9d4f2ce1", "filename": "src/libsyntax_ext/source_util.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Flibsyntax_ext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fsource_util.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -1,10 +1,11 @@\n use syntax_expand::panictry;\n use syntax_expand::base::{self, *};\n use syntax::ast;\n-use syntax::parse::{self, token, DirectoryOwnership};\n+use syntax::parse::{self, DirectoryOwnership};\n use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::symbol::Symbol;\n+use syntax::token;\n use syntax::tokenstream::TokenStream;\n use syntax::early_buffered_lints::BufferedEarlyLintId;\n "}, {"sha": "ac864e767848fdc88465de4dc471d4ad8000fa33", "filename": "src/test/ui-fulldeps/ast_stmt_expr_attr.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Ftest%2Fui-fulldeps%2Fast_stmt_expr_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Ftest%2Fui-fulldeps%2Fast_stmt_expr_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fast_stmt_expr_attr.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -6,17 +6,18 @@\n #![feature(rustc_private)]\n \n extern crate syntax;\n+extern crate rustc_errors;\n \n+use rustc_errors::PResult;\n use syntax::ast::*;\n use syntax::attr::*;\n use syntax::ast;\n use syntax::sess::ParseSess;\n use syntax::source_map::{FilePathMapping, FileName};\n use syntax::parse;\n-use syntax::parse::PResult;\n use syntax::parse::new_parser_from_source_str;\n use syntax::parse::parser::Parser;\n-use syntax::parse::token;\n+use syntax::token;\n use syntax::ptr::P;\n use syntax::parse::parser::attr::*;\n use syntax::print::pprust;"}, {"sha": "520347faa15aa8e13e8a6357e593954b0351dca7", "filename": "src/test/ui-fulldeps/auxiliary/roman-numerals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Froman-numerals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c113697065aadb9e85f6d5b3a5b075b2bd060e/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Froman-numerals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Froman-numerals.rs?ref=28c113697065aadb9e85f6d5b3a5b075b2bd060e", "patch": "@@ -15,7 +15,7 @@ extern crate syntax_pos;\n extern crate rustc;\n extern crate rustc_driver;\n \n-use syntax::parse::token::{self, Token};\n+use syntax::token::{self, Token};\n use syntax::tokenstream::{TokenTree, TokenStream};\n use syntax_expand::base::{ExtCtxt, MacResult, DummyResult, MacEager};\n use syntax_pos::Span;"}]}