{"sha": "d208b2de1055b17fca6282c8af00a39414e9af90", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMDhiMmRlMTA1NWIxN2ZjYTYyODJjOGFmMDBhMzk0MTRlOWFmOTA=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2017-03-11T19:57:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-11T19:57:48Z"}, "message": "Rollup merge of #40404 - cengizIO:master, r=nikomatsakis\n\nfix #40294 obligation cause.body_id is not always a NodeExpr\n\nHello!\n\nThis fixes #40294 and moves tests related to #38812 to a much more sensible directory.\n\nThanks to @nikomatsakis and @eddyb", "tree": {"sha": "86dce0a70a90d7fa21fa4bcfde3375e9aada4cf6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86dce0a70a90d7fa21fa4bcfde3375e9aada4cf6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d208b2de1055b17fca6282c8af00a39414e9af90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d208b2de1055b17fca6282c8af00a39414e9af90", "html_url": "https://github.com/rust-lang/rust/commit/d208b2de1055b17fca6282c8af00a39414e9af90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d208b2de1055b17fca6282c8af00a39414e9af90/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25dcbca0ad6024671be33a23cc40701342095404", "url": "https://api.github.com/repos/rust-lang/rust/commits/25dcbca0ad6024671be33a23cc40701342095404", "html_url": "https://github.com/rust-lang/rust/commit/25dcbca0ad6024671be33a23cc40701342095404"}, {"sha": "889337da06e764369897ef15a6dfca6f27879a45", "url": "https://api.github.com/repos/rust-lang/rust/commits/889337da06e764369897ef15a6dfca6f27879a45", "html_url": "https://github.com/rust-lang/rust/commit/889337da06e764369897ef15a6dfca6f27879a45"}], "stats": {"total": 59, "additions": 51, "deletions": 8}, "files": [{"sha": "0e5c786cd8dcf424de39c6de5aa044f6ab53b3fc", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d208b2de1055b17fca6282c8af00a39414e9af90/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d208b2de1055b17fca6282c8af00a39414e9af90/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=d208b2de1055b17fca6282c8af00a39414e9af90", "patch": "@@ -23,24 +23,26 @@ use super::{\n     ObjectSafetyViolation,\n };\n \n+use errors::DiagnosticBuilder;\n use fmt_macros::{Parser, Piece, Position};\n+use hir::{intravisit, Local, Pat};\n+use hir::intravisit::{Visitor, NestedVisitorMap};\n+use hir::map::NodeExpr;\n use hir::def_id::DefId;\n use infer::{self, InferCtxt};\n use infer::type_variable::TypeVariableOrigin;\n use rustc::lint::builtin::EXTRA_REQUIREMENT_IN_IMPL;\n+use std::fmt;\n+use syntax::ast;\n use ty::{self, AdtKind, ToPredicate, ToPolyTraitRef, Ty, TyCtxt, TypeFoldable};\n use ty::error::ExpectedFound;\n use ty::fast_reject;\n use ty::fold::TypeFolder;\n use ty::subst::Subst;\n use util::nodemap::{FxHashMap, FxHashSet};\n \n-use std::fmt;\n-use syntax::ast;\n-use hir::{intravisit, Local, Pat};\n-use hir::intravisit::{Visitor, NestedVisitorMap};\n use syntax_pos::{DUMMY_SP, Span};\n-use errors::DiagnosticBuilder;\n+\n \n #[derive(Debug, PartialEq, Eq, Hash)]\n pub struct TraitErrorKey<'tcx> {\n@@ -848,15 +850,18 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n \n         err.span_label(cause.span, &format!(\"cannot infer type for `{}`\", name));\n \n-        let expr = self.tcx.hir.expect_expr(cause.body_id);\n-\n         let mut local_visitor = FindLocalByTypeVisitor {\n             infcx: &self,\n             target_ty: &ty,\n             found_pattern: None,\n         };\n \n-        local_visitor.visit_expr(expr);\n+        // #40294: cause.body_id can also be a fn declaration.\n+        // Currently, if it's anything other than NodeExpr, we just ignore it\n+        match self.tcx.hir.find(cause.body_id) {\n+            Some(NodeExpr(expr)) => local_visitor.visit_expr(expr),\n+            _ => ()\n+        }\n \n         if let Some(pattern) = local_visitor.found_pattern {\n             let pattern_span = pattern.span;"}, {"sha": "c476657d207966cdf2d9242e86bda46643a5fba2", "filename": "src/test/ui/type-check/issue-38812-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d208b2de1055b17fca6282c8af00a39414e9af90/src%2Ftest%2Fui%2Ftype-check%2Fissue-38812-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d208b2de1055b17fca6282c8af00a39414e9af90/src%2Ftest%2Fui%2Ftype-check%2Fissue-38812-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fissue-38812-2.rs?ref=d208b2de1055b17fca6282c8af00a39414e9af90", "previous_filename": "src/test/ui/codemap_tests/issue-38812-2.rs"}, {"sha": "156a6bdee99799a4b4af722c6f3bc95e0a5e7360", "filename": "src/test/ui/type-check/issue-38812-2.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d208b2de1055b17fca6282c8af00a39414e9af90/src%2Ftest%2Fui%2Ftype-check%2Fissue-38812-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d208b2de1055b17fca6282c8af00a39414e9af90/src%2Ftest%2Fui%2Ftype-check%2Fissue-38812-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fissue-38812-2.stderr?ref=d208b2de1055b17fca6282c8af00a39414e9af90", "previous_filename": "src/test/ui/codemap_tests/issue-38812-2.stderr"}, {"sha": "a9943f753366da8d794a144eed344cb7b1597d06", "filename": "src/test/ui/type-check/issue-38812.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d208b2de1055b17fca6282c8af00a39414e9af90/src%2Ftest%2Fui%2Ftype-check%2Fissue-38812.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d208b2de1055b17fca6282c8af00a39414e9af90/src%2Ftest%2Fui%2Ftype-check%2Fissue-38812.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fissue-38812.rs?ref=d208b2de1055b17fca6282c8af00a39414e9af90", "previous_filename": "src/test/ui/codemap_tests/issue-38812.rs"}, {"sha": "6365e761453f90167fb088a5f7cb52c233b3459b", "filename": "src/test/ui/type-check/issue-38812.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d208b2de1055b17fca6282c8af00a39414e9af90/src%2Ftest%2Fui%2Ftype-check%2Fissue-38812.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d208b2de1055b17fca6282c8af00a39414e9af90/src%2Ftest%2Fui%2Ftype-check%2Fissue-38812.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fissue-38812.stderr?ref=d208b2de1055b17fca6282c8af00a39414e9af90", "previous_filename": "src/test/ui/codemap_tests/issue-38812.stderr"}, {"sha": "d30a425d1099b01d88489dc80eae1e650e027f4e", "filename": "src/test/ui/type-check/issue-40294.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d208b2de1055b17fca6282c8af00a39414e9af90/src%2Ftest%2Fui%2Ftype-check%2Fissue-40294.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d208b2de1055b17fca6282c8af00a39414e9af90/src%2Ftest%2Fui%2Ftype-check%2Fissue-40294.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fissue-40294.rs?ref=d208b2de1055b17fca6282c8af00a39414e9af90", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo: Sized {\n+    fn foo(self);\n+}\n+\n+fn foo<'a,'b,T>(x: &'a T, y: &'b T)\n+    where &'a T : Foo,\n+          &'b T : Foo\n+{\n+    x.foo();\n+    y.foo();\n+}\n+\n+fn main() { }"}, {"sha": "5c388c9d602eab7e6f1c28927422a8dcff3b888f", "filename": "src/test/ui/type-check/issue-40294.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d208b2de1055b17fca6282c8af00a39414e9af90/src%2Ftest%2Fui%2Ftype-check%2Fissue-40294.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d208b2de1055b17fca6282c8af00a39414e9af90/src%2Ftest%2Fui%2Ftype-check%2Fissue-40294.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fissue-40294.stderr?ref=d208b2de1055b17fca6282c8af00a39414e9af90", "patch": "@@ -0,0 +1,15 @@\n+error[E0282]: type annotations needed\n+  --> $DIR/issue-40294.rs:15:1\n+   |\n+15 |   fn foo<'a,'b,T>(x: &'a T, y: &'b T)\n+   |  _^ starting here...\n+16 | |     where &'a T : Foo,\n+17 | |           &'b T : Foo\n+18 | | {\n+19 | |     x.foo();\n+20 | |     y.foo();\n+21 | | }\n+   | |_^ ...ending here: cannot infer type for `&'a T`\n+\n+error: aborting due to previous error\n+"}]}