{"sha": "2830d1376b05794c7bf1467fe52ad3bc0eb4ca41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MzBkMTM3NmIwNTc5NGM3YmYxNDY3ZmU1MmFkM2JjMGViNGNhNDE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-20T09:00:35Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-20T09:00:35Z"}, "message": "Merge #1558\n\n1558: Support .await syntax r=matklad a=unrealhoang\n\n- [x] Add `await` keyword to grammar, parser for await_expr\r\n- [ ] Infer type for await_expr\n\nCo-authored-by: Unreal Hoang <unrealhoang@gmail.com>", "tree": {"sha": "7a717bb2a51489b4e1bc50895bff45f1e217f15c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a717bb2a51489b4e1bc50895bff45f1e217f15c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2830d1376b05794c7bf1467fe52ad3bc0eb4ca41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2830d1376b05794c7bf1467fe52ad3bc0eb4ca41", "html_url": "https://github.com/rust-lang/rust/commit/2830d1376b05794c7bf1467fe52ad3bc0eb4ca41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2830d1376b05794c7bf1467fe52ad3bc0eb4ca41/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "e18f8495d6569f4fc0b7457b65a1d199cf7b5974", "url": "https://api.github.com/repos/rust-lang/rust/commits/e18f8495d6569f4fc0b7457b65a1d199cf7b5974", "html_url": "https://github.com/rust-lang/rust/commit/e18f8495d6569f4fc0b7457b65a1d199cf7b5974"}, {"sha": "3a7f07c62d3dd253d63c483ee291d9471f539479", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a7f07c62d3dd253d63c483ee291d9471f539479", "html_url": "https://github.com/rust-lang/rust/commit/3a7f07c62d3dd253d63c483ee291d9471f539479"}], "stats": {"total": 93, "additions": 93, "deletions": 0}, "files": [{"sha": "3e49e70c725e5a4eb9d8821caf57306376cb3c20", "filename": "crates/ra_parser/src/grammar/expressions.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2830d1376b05794c7bf1467fe52ad3bc0eb4ca41/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2830d1376b05794c7bf1467fe52ad3bc0eb4ca41/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=2830d1376b05794c7bf1467fe52ad3bc0eb4ca41", "patch": "@@ -393,6 +393,18 @@ fn postfix_expr(\n             T![.] if p.nth(1) == IDENT && (p.nth(2) == T!['('] || p.nth(2) == T![::]) => {\n                 method_call_expr(p, lhs)\n             }\n+            T![.] if p.nth(1) == AWAIT_KW => {\n+                // test await_expr\n+                // fn foo() {\n+                //     x.await;\n+                //     x.0.await;\n+                //     x.0().await?.hello();\n+                // }\n+                let m = lhs.precede(p);\n+                p.bump();\n+                p.bump();\n+                m.complete(p, AWAIT_EXPR)\n+            }\n             T![.] => field_expr(p, lhs),\n             // test postfix_range\n             // fn foo() { let x = 1..; }"}, {"sha": "4b5abb516c3a9c5e0633c83fb35d66c8d7148790", "filename": "crates/ra_parser/src/syntax_kind/generated.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2830d1376b05794c7bf1467fe52ad3bc0eb4ca41/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2830d1376b05794c7bf1467fe52ad3bc0eb4ca41/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=2830d1376b05794c7bf1467fe52ad3bc0eb4ca41", "patch": "@@ -105,6 +105,7 @@ pub enum SyntaxKind {\n     RETURN_KW,\n     TRY_KW,\n     BOX_KW,\n+    AWAIT_KW,\n     AUTO_KW,\n     DEFAULT_KW,\n     EXISTENTIAL_KW,\n@@ -193,6 +194,7 @@ pub enum SyntaxKind {\n     INDEX_EXPR,\n     METHOD_CALL_EXPR,\n     FIELD_EXPR,\n+    AWAIT_EXPR,\n     TRY_EXPR,\n     CAST_EXPR,\n     REF_EXPR,\n@@ -338,6 +340,7 @@ macro_rules! T {\n     (return) => { $crate::SyntaxKind::RETURN_KW };\n     (try) => { $crate::SyntaxKind::TRY_KW };\n     (box) => { $crate::SyntaxKind::BOX_KW };\n+    (await) => { $crate::SyntaxKind::AWAIT_KW };\n     (auto) => { $crate::SyntaxKind::AUTO_KW };\n     (default) => { $crate::SyntaxKind::DEFAULT_KW };\n     (existential) => { $crate::SyntaxKind::EXISTENTIAL_KW };\n@@ -398,6 +401,7 @@ impl SyntaxKind {\n             | RETURN_KW\n             | TRY_KW\n             | BOX_KW\n+            | AWAIT_KW\n             | AUTO_KW\n             | DEFAULT_KW\n             | EXISTENTIAL_KW\n@@ -572,6 +576,7 @@ impl SyntaxKind {\n             RETURN_KW => &SyntaxInfo { name: \"RETURN_KW\" },\n             TRY_KW => &SyntaxInfo { name: \"TRY_KW\" },\n             BOX_KW => &SyntaxInfo { name: \"BOX_KW\" },\n+            AWAIT_KW => &SyntaxInfo { name: \"AWAIT_KW\" },\n             AUTO_KW => &SyntaxInfo { name: \"AUTO_KW\" },\n             DEFAULT_KW => &SyntaxInfo { name: \"DEFAULT_KW\" },\n             EXISTENTIAL_KW => &SyntaxInfo { name: \"EXISTENTIAL_KW\" },\n@@ -660,6 +665,7 @@ impl SyntaxKind {\n             INDEX_EXPR => &SyntaxInfo { name: \"INDEX_EXPR\" },\n             METHOD_CALL_EXPR => &SyntaxInfo { name: \"METHOD_CALL_EXPR\" },\n             FIELD_EXPR => &SyntaxInfo { name: \"FIELD_EXPR\" },\n+            AWAIT_EXPR => &SyntaxInfo { name: \"AWAIT_EXPR\" },\n             TRY_EXPR => &SyntaxInfo { name: \"TRY_EXPR\" },\n             CAST_EXPR => &SyntaxInfo { name: \"CAST_EXPR\" },\n             REF_EXPR => &SyntaxInfo { name: \"REF_EXPR\" },\n@@ -752,6 +758,7 @@ impl SyntaxKind {\n             \"return\" => RETURN_KW,\n             \"try\" => TRY_KW,\n             \"box\" => BOX_KW,\n+            \"await\" => AWAIT_KW,\n             _ => return None,\n         };\n         Some(kw)"}, {"sha": "55494239e4ccd50e41efc7ebcd9beede63cff16e", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2830d1376b05794c7bf1467fe52ad3bc0eb4ca41/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/2830d1376b05794c7bf1467fe52ad3bc0eb4ca41/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=2830d1376b05794c7bf1467fe52ad3bc0eb4ca41", "patch": "@@ -97,6 +97,7 @@ Grammar(\n         \"return\",\n         \"try\",\n         \"box\",\n+        \"await\"\n     ],\n     contextual_keywords: [\n         \"auto\",\n@@ -200,6 +201,7 @@ Grammar(\n         \"INDEX_EXPR\",\n         \"METHOD_CALL_EXPR\",\n         \"FIELD_EXPR\",\n+        \"AWAIT_EXPR\",\n         \"TRY_EXPR\",\n         \"CAST_EXPR\",\n "}, {"sha": "d2ba89ca60758e4c68c20f6e29b6d9c0b9639184", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0137_await_expr.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2830d1376b05794c7bf1467fe52ad3bc0eb4ca41/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0137_await_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2830d1376b05794c7bf1467fe52ad3bc0eb4ca41/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0137_await_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0137_await_expr.rs?ref=2830d1376b05794c7bf1467fe52ad3bc0eb4ca41", "patch": "@@ -0,0 +1,5 @@\n+fn foo() {\n+    x.await;\n+    x.0.await;\n+    x.0().await?.hello();\n+}"}, {"sha": "99bd76ace3837cfc9a06d0333fc16fff721de8fb", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0137_await_expr.txt", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/2830d1376b05794c7bf1467fe52ad3bc0eb4ca41/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0137_await_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/2830d1376b05794c7bf1467fe52ad3bc0eb4ca41/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0137_await_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0137_await_expr.txt?ref=2830d1376b05794c7bf1467fe52ad3bc0eb4ca41", "patch": "@@ -0,0 +1,67 @@\n+SOURCE_FILE@[0; 67)\n+  FN_DEF@[0; 66)\n+    FN_KW@[0; 2) \"fn\"\n+    WHITESPACE@[2; 3) \" \"\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7) \"(\"\n+      R_PAREN@[7; 8) \")\"\n+    WHITESPACE@[8; 9) \" \"\n+    BLOCK@[9; 66)\n+      L_CURLY@[9; 10) \"{\"\n+      WHITESPACE@[10; 15) \"\\n    \"\n+      EXPR_STMT@[15; 23)\n+        AWAIT_EXPR@[15; 22)\n+          PATH_EXPR@[15; 16)\n+            PATH@[15; 16)\n+              PATH_SEGMENT@[15; 16)\n+                NAME_REF@[15; 16)\n+                  IDENT@[15; 16) \"x\"\n+          DOT@[16; 17) \".\"\n+          AWAIT_KW@[17; 22) \"await\"\n+        SEMI@[22; 23) \";\"\n+      WHITESPACE@[23; 28) \"\\n    \"\n+      EXPR_STMT@[28; 38)\n+        AWAIT_EXPR@[28; 37)\n+          FIELD_EXPR@[28; 31)\n+            PATH_EXPR@[28; 29)\n+              PATH@[28; 29)\n+                PATH_SEGMENT@[28; 29)\n+                  NAME_REF@[28; 29)\n+                    IDENT@[28; 29) \"x\"\n+            DOT@[29; 30) \".\"\n+            INT_NUMBER@[30; 31) \"0\"\n+          DOT@[31; 32) \".\"\n+          AWAIT_KW@[32; 37) \"await\"\n+        SEMI@[37; 38) \";\"\n+      WHITESPACE@[38; 43) \"\\n    \"\n+      EXPR_STMT@[43; 64)\n+        METHOD_CALL_EXPR@[43; 63)\n+          TRY_EXPR@[43; 55)\n+            AWAIT_EXPR@[43; 54)\n+              CALL_EXPR@[43; 48)\n+                FIELD_EXPR@[43; 46)\n+                  PATH_EXPR@[43; 44)\n+                    PATH@[43; 44)\n+                      PATH_SEGMENT@[43; 44)\n+                        NAME_REF@[43; 44)\n+                          IDENT@[43; 44) \"x\"\n+                  DOT@[44; 45) \".\"\n+                  INT_NUMBER@[45; 46) \"0\"\n+                ARG_LIST@[46; 48)\n+                  L_PAREN@[46; 47) \"(\"\n+                  R_PAREN@[47; 48) \")\"\n+              DOT@[48; 49) \".\"\n+              AWAIT_KW@[49; 54) \"await\"\n+            QUESTION@[54; 55) \"?\"\n+          DOT@[55; 56) \".\"\n+          NAME_REF@[56; 61)\n+            IDENT@[56; 61) \"hello\"\n+          ARG_LIST@[61; 63)\n+            L_PAREN@[61; 62) \"(\"\n+            R_PAREN@[62; 63) \")\"\n+        SEMI@[63; 64) \";\"\n+      WHITESPACE@[64; 65) \"\\n\"\n+      R_CURLY@[65; 66) \"}\"\n+  WHITESPACE@[66; 67) \"\\n\""}]}