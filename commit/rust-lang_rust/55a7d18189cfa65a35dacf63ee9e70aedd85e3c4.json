{"sha": "55a7d18189cfa65a35dacf63ee9e70aedd85e3c4", "node_id": "C_kwDOAAsO6NoAKDU1YTdkMTgxODljZmE2NWEzNWRhY2Y2M2VlOWU3MGFlZGQ4NWUzYzQ", "commit": {"author": {"name": "Austin Kiekintveld", "email": "akiekintveld@icloud.com", "date": "2022-05-02T02:07:36Z"}, "committer": {"name": "Austin Kiekintveld", "email": "akiekintveld@icloud.com", "date": "2022-05-02T02:07:36Z"}, "message": "Add comment", "tree": {"sha": "53a9a60d834734039ddfbdc04a784a16e7d533a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53a9a60d834734039ddfbdc04a784a16e7d533a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55a7d18189cfa65a35dacf63ee9e70aedd85e3c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55a7d18189cfa65a35dacf63ee9e70aedd85e3c4", "html_url": "https://github.com/rust-lang/rust/commit/55a7d18189cfa65a35dacf63ee9e70aedd85e3c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55a7d18189cfa65a35dacf63ee9e70aedd85e3c4/comments", "author": null, "committer": null, "parents": [{"sha": "a05df2ea19c1a2c074fcf98211d3418ba9af479c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a05df2ea19c1a2c074fcf98211d3418ba9af479c", "html_url": "https://github.com/rust-lang/rust/commit/a05df2ea19c1a2c074fcf98211d3418ba9af479c"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "d0d0d59651895c9fa1af49daffc646790da7f057", "filename": "library/std/src/sys_common/condvar/check.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55a7d18189cfa65a35dacf63ee9e70aedd85e3c4/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55a7d18189cfa65a35dacf63ee9e70aedd85e3c4/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fcondvar%2Fcheck.rs?ref=55a7d18189cfa65a35dacf63ee9e70aedd85e3c4", "patch": "@@ -24,6 +24,8 @@ impl SameMutexCheck {\n     }\n     pub fn verify(&self, mutex: &MovableMutex) {\n         let addr = mutex.raw() as *const imp::Mutex as *const () as *mut _;\n+        // Relaxed is okay here because we never read through `self.addr`, and only use it to\n+        // compare addresses.\n         match self.addr.compare_exchange(\n             ptr::null_mut(),\n             addr,"}]}