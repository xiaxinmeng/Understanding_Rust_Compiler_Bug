{"sha": "598b50e10a347b29d235bb99110975b96fdab160", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5OGI1MGUxMGEzNDdiMjlkMjM1YmI5OTExMDk3NWI5NmZkYWIxNjA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T22:14:57Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T22:14:57Z"}, "message": "stdlib: Move fs over to interior vectors by introducing a rust_list_files_ivec builtin", "tree": {"sha": "1e007218ddd511287d593def6321bfced68cf3af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e007218ddd511287d593def6321bfced68cf3af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/598b50e10a347b29d235bb99110975b96fdab160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/598b50e10a347b29d235bb99110975b96fdab160", "html_url": "https://github.com/rust-lang/rust/commit/598b50e10a347b29d235bb99110975b96fdab160", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/598b50e10a347b29d235bb99110975b96fdab160/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27834c2a65f88a01a897e69b53b106e5021260f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/27834c2a65f88a01a897e69b53b106e5021260f6", "html_url": "https://github.com/rust-lang/rust/commit/27834c2a65f88a01a897e69b53b106e5021260f6"}], "stats": {"total": 55, "additions": 48, "deletions": 7}, "files": [{"sha": "6370ece2ff3605ed03c978f92a08ad01abad7cf5", "filename": "src/lib/fs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/598b50e10a347b29d235bb99110975b96fdab160/src%2Flib%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/598b50e10a347b29d235bb99110975b96fdab160/src%2Flib%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ffs.rs?ref=598b50e10a347b29d235bb99110975b96fdab160", "patch": "@@ -43,16 +43,16 @@ fn connect(path pre, path post) -> path {\n \n fn file_is_dir(path p) -> bool { ret rustrt::rust_file_is_dir(p) != 0; }\n \n-fn list_dir(path p) -> vec[str] {\n+fn list_dir(path p) -> str[] {\n     auto pl = str::byte_len(p);\n     if (pl == 0u || p.(pl - 1u) as char != os_fs::path_sep) {\n         p += path_sep();\n     }\n-    let vec[str] full_paths = [];\n+    let str[] full_paths = ~[];\n     for (str filename in os_fs::list_dir(p)) {\n         if (!str::eq(filename, \".\")) {\n             if (!str::eq(filename, \"..\")) {\n-                vec::push[str](full_paths, p + filename);\n+                full_paths += ~[p + filename];\n             }\n         }\n     }"}, {"sha": "417c6f784281d7b5df2a204dfa7e1e014dce12de", "filename": "src/lib/posix_fs.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/598b50e10a347b29d235bb99110975b96fdab160/src%2Flib%2Fposix_fs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/598b50e10a347b29d235bb99110975b96fdab160/src%2Flib%2Fposix_fs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fposix_fs.rs?ref=598b50e10a347b29d235bb99110975b96fdab160", "patch": "@@ -1,11 +1,12 @@\n \n native \"rust\" mod rustrt {\n     fn rust_list_files(str path) -> vec[str];\n+    fn rust_list_files_ivec(str path) -> @str[];\n     fn rust_dirent_filename(os::libc::dirent ent) -> str;\n }\n \n-fn list_dir(str path) -> vec[str] {\n-    ret rustrt::rust_list_files(path);\n+fn list_dir(str path) -> str[] {\n+    ret *rustrt::rust_list_files_ivec(path);\n     // TODO ensure this is always closed\n \n     // FIXME: No idea why, but this appears to corrupt memory on OSX. I"}, {"sha": "efbb47b042c9291dea43e375d5f0b8ac50e7268f", "filename": "src/lib/win32_fs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/598b50e10a347b29d235bb99110975b96fdab160/src%2Flib%2Fwin32_fs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/598b50e10a347b29d235bb99110975b96fdab160/src%2Flib%2Fwin32_fs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fwin32_fs.rs?ref=598b50e10a347b29d235bb99110975b96fdab160", "patch": "@@ -2,10 +2,11 @@\n \n native \"rust\" mod rustrt {\n     fn rust_list_files(str path) -> vec[str];\n+    fn rust_list_files_ivec(str path) -> @str[];\n     fn rust_file_is_dir(str path) -> int;\n }\n \n-fn list_dir(str path) -> vec[str] { ret rustrt::rust_list_files(path + \"*\"); }\n+fn list_dir(str path) -> str[] { ret *rustrt::rust_list_files(path + \"*\"); }\n \n fn path_is_absolute(str p) -> bool {\n     ret str::char_at(p, 0u) == '/' "}, {"sha": "1caacd7a9d300fec34ee9f2da2072595a82a30c2", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/598b50e10a347b29d235bb99110975b96fdab160/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/598b50e10a347b29d235bb99110975b96fdab160/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=598b50e10a347b29d235bb99110975b96fdab160", "patch": "@@ -454,7 +454,9 @@ debug_opaque(rust_task *task, type_desc *t, uint8_t *front)\n     }\n }\n \n-struct rust_box : rc_base<rust_box> {\n+struct rust_box {\n+    RUST_REFCOUNTED(rust_box)\n+\n     // FIXME `data` could be aligned differently from the actual box body data\n     uint8_t data[];\n };\n@@ -580,6 +582,42 @@ rust_list_files(rust_task *task, rust_str *path) {\n                              sizeof(rust_str*), strings.data());\n }\n \n+extern \"C\" CDECL rust_box*\n+rust_list_files_ivec(rust_task *task, rust_str *path) {\n+    array_list<rust_str*> strings;\n+#if defined(__WIN32__)\n+    WIN32_FIND_DATA FindFileData;\n+    HANDLE hFind = FindFirstFile((char*)path->data, &FindFileData);\n+    if (hFind != INVALID_HANDLE_VALUE) {\n+        do {\n+            strings.push(c_str_to_rust(task, FindFileData.cFileName));\n+        } while (FindNextFile(hFind, &FindFileData));\n+        FindClose(hFind);\n+    }\n+#else\n+  DIR *dirp = opendir((char*)path->data);\n+  if (dirp) {\n+      struct dirent *dp;\n+      while ((dp = readdir(dirp)))\n+          strings.push(c_str_to_rust(task, dp->d_name));\n+      closedir(dirp);\n+  }\n+#endif\n+  rust_box *box = (rust_box *)task->malloc(sizeof(rust_box) +\n+                                           sizeof(rust_ivec));\n+  box->ref_count = 1;\n+  rust_ivec *iv = (rust_ivec *)&box->data;\n+  iv->fill = 0;\n+\n+  size_t alloc_sz = sizeof(rust_str *) * strings.size();\n+  iv->alloc = alloc_sz;\n+  iv->payload.ptr = (rust_ivec_heap *)\n+      task->kernel->malloc(alloc_sz + sizeof(size_t));\n+  iv->payload.ptr->fill = alloc_sz;\n+  memcpy(&iv->payload.ptr->data, strings.data(), alloc_sz);\n+  return box;\n+}\n+\n #if defined(__WIN32__)\n extern \"C\" CDECL rust_str *\n rust_dirent_filename(rust_task *task, void* ent) {"}, {"sha": "dc94c73d813ddfd85630fd4a67451c91a4193cc2", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/598b50e10a347b29d235bb99110975b96fdab160/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/598b50e10a347b29d235bb99110975b96fdab160/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=598b50e10a347b29d235bb99110975b96fdab160", "patch": "@@ -29,6 +29,7 @@ rust_file_is_dir\n rust_get_stdin\n rust_get_stdout\n rust_list_files\n+rust_list_files_ivec\n rust_process_wait\n rust_ptr_eq\n rust_run_program"}]}