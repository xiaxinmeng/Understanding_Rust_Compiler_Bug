{"sha": "389e638c054434c4b9df9427dab29b0f325923ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4OWU2MzhjMDU0NDM0YzRiOWRmOTQyN2RhYjI5YjBmMzI1OTIzYWM=", "commit": {"author": {"name": "Xavientois", "email": "joshua.rampersad@hotmail.com", "date": "2021-01-16T20:04:26Z"}, "committer": {"name": "Xavientois", "email": "joshua.rampersad@hotmail.com", "date": "2021-01-31T13:34:42Z"}, "message": "Add tests for SizeHint implementations", "tree": {"sha": "715656604462907acbab9e1ffcac7810e31f4715", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/715656604462907acbab9e1ffcac7810e31f4715"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/389e638c054434c4b9df9427dab29b0f325923ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/389e638c054434c4b9df9427dab29b0f325923ac", "html_url": "https://github.com/rust-lang/rust/commit/389e638c054434c4b9df9427dab29b0f325923ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/389e638c054434c4b9df9427dab29b0f325923ac/comments", "author": {"login": "Xavientois", "id": 34867186, "node_id": "MDQ6VXNlcjM0ODY3MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/34867186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xavientois", "html_url": "https://github.com/Xavientois", "followers_url": "https://api.github.com/users/Xavientois/followers", "following_url": "https://api.github.com/users/Xavientois/following{/other_user}", "gists_url": "https://api.github.com/users/Xavientois/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xavientois/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xavientois/subscriptions", "organizations_url": "https://api.github.com/users/Xavientois/orgs", "repos_url": "https://api.github.com/users/Xavientois/repos", "events_url": "https://api.github.com/users/Xavientois/events{/privacy}", "received_events_url": "https://api.github.com/users/Xavientois/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xavientois", "id": 34867186, "node_id": "MDQ6VXNlcjM0ODY3MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/34867186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xavientois", "html_url": "https://github.com/Xavientois", "followers_url": "https://api.github.com/users/Xavientois/followers", "following_url": "https://api.github.com/users/Xavientois/following{/other_user}", "gists_url": "https://api.github.com/users/Xavientois/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xavientois/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xavientois/subscriptions", "organizations_url": "https://api.github.com/users/Xavientois/orgs", "repos_url": "https://api.github.com/users/Xavientois/repos", "events_url": "https://api.github.com/users/Xavientois/events{/privacy}", "received_events_url": "https://api.github.com/users/Xavientois/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96255f82c9209fc2366ef32937c2bb53817687c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/96255f82c9209fc2366ef32937c2bb53817687c1", "html_url": "https://github.com/rust-lang/rust/commit/96255f82c9209fc2366ef32937c2bb53817687c1"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "a85dd0d98271565ca6d6fb9cf69e54d3ba22aa7d", "filename": "library/std/src/io/tests.rs", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/389e638c054434c4b9df9427dab29b0f325923ac/library%2Fstd%2Fsrc%2Fio%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/389e638c054434c4b9df9427dab29b0f325923ac/library%2Fstd%2Fsrc%2Fio%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ftests.rs?ref=389e638c054434c4b9df9427dab29b0f325923ac", "patch": "@@ -204,8 +204,8 @@ fn bufreader_size_hint() {\n     let mut buf_reader = BufReader::new(&testdata[..]);\n     assert_eq!(buf_reader.buffer().len(), 0);\n \n-    let buffer = buf_reader.fill_buf().unwrap();\n-    let buffer_length = buffer.len();\n+    let buffer_length = testdata.len();\n+    buf_reader.fill_buf().unwrap();\n \n     // Check that size hint matches buffer contents\n     let mut buffered_bytes = buf_reader.bytes();\n@@ -218,6 +218,33 @@ fn bufreader_size_hint() {\n     assert_eq!(lower_bound, buffer_length - 1);\n }\n \n+#[test]\n+fn empty_size_hint() {\n+    let size_hint = io::empty().bytes().size_hint();\n+    assert_eq!(size_hint, (0, Some(0)));\n+}\n+\n+#[test]\n+fn chain_empty_size_hint() {\n+    let chain = io::empty().chain(io::empty());\n+    let size_hint = chain.bytes().size_hint();\n+    assert_eq!(size_hint, (0, Some(0)));\n+}\n+\n+#[test]\n+fn chain_size_hint() {\n+    let testdata = b\"ABCDEFGHIJKL\";\n+    let mut buf_reader_1 = BufReader::new(&testdata[..6]);\n+    let mut buf_reader_2 = BufReader::new(&testdata[6..]);\n+\n+    buf_reader_1.fill_buf().unwrap();\n+    buf_reader_2.fill_buf().unwrap();\n+\n+    let chain = buf_reader_1.chain(buf_reader_2);\n+    let size_hint = chain.bytes().size_hint();\n+    assert_eq!(size_hint, (testdata.len(), None));\n+}\n+\n #[test]\n fn chain_zero_length_read_is_not_eof() {\n     let a = b\"A\";"}]}