{"sha": "43b65b51e0f7de77f93c65a0a807ef5ce76ac02d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYjY1YjUxZTBmN2RlNzdmOTNjNjVhMGE4MDdlZjVjZTc2YWMwMmQ=", "commit": {"author": {"name": "Wesley Norris", "email": "repnop@outlook.com", "date": "2018-10-07T16:36:47Z"}, "committer": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-11-01T14:52:27Z"}, "message": "Tidy up source file and fix typo.", "tree": {"sha": "1229be64a0f58f47336cd1586e3092c9828dcd74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1229be64a0f58f47336cd1586e3092c9828dcd74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43b65b51e0f7de77f93c65a0a807ef5ce76ac02d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43b65b51e0f7de77f93c65a0a807ef5ce76ac02d", "html_url": "https://github.com/rust-lang/rust/commit/43b65b51e0f7de77f93c65a0a807ef5ce76ac02d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43b65b51e0f7de77f93c65a0a807ef5ce76ac02d/comments", "author": {"login": "repnop", "id": 24203105, "node_id": "MDQ6VXNlcjI0MjAzMTA1", "avatar_url": "https://avatars.githubusercontent.com/u/24203105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/repnop", "html_url": "https://github.com/repnop", "followers_url": "https://api.github.com/users/repnop/followers", "following_url": "https://api.github.com/users/repnop/following{/other_user}", "gists_url": "https://api.github.com/users/repnop/gists{/gist_id}", "starred_url": "https://api.github.com/users/repnop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/repnop/subscriptions", "organizations_url": "https://api.github.com/users/repnop/orgs", "repos_url": "https://api.github.com/users/repnop/repos", "events_url": "https://api.github.com/users/repnop/events{/privacy}", "received_events_url": "https://api.github.com/users/repnop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b79fdb8e3c75100f465e0d5b7c6926f192e7fdbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b79fdb8e3c75100f465e0d5b7c6926f192e7fdbd", "html_url": "https://github.com/rust-lang/rust/commit/b79fdb8e3c75100f465e0d5b7c6926f192e7fdbd"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "8a3fe7b0babbd8b9d8b98dfbfb522e0199f8a5f6", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/43b65b51e0f7de77f93c65a0a807ef5ce76ac02d/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43b65b51e0f7de77f93c65a0a807ef5ce76ac02d/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=43b65b51e0f7de77f93c65a0a807ef5ce76ac02d", "patch": "@@ -407,7 +407,7 @@ pub fn make_test(s: &str,\n     let (already_has_main, already_has_extern_crate) = crate::syntax::with_globals(|| {\n         use crate::syntax::{ast, parse::{self, ParseSess}, source_map::FilePathMapping};\n         use crate::syntax_pos::FileName;\n-        \n+\n         let filename = FileName::Anon;\n         let source = s.to_owned();\n         let sess = ParseSess::new(FilePathMapping::empty());\n@@ -424,11 +424,11 @@ pub fn make_test(s: &str,\n                         found_main = true;\n                     }\n                 }\n-            } \n-            \n-            if !found_extern_crate { \n+            }\n+\n+            if !found_extern_crate {\n                 if let ast::ItemKind::ExternCrate(original) = item.node {\n-                    // This code will never be reached if `cratename` is none ecause\n+                    // This code will never be reached if `cratename` is none because\n                     // `found_extern_crate` is initialized to `true` if it is none.\n                     let cratename = cratename.unwrap();\n \n@@ -1051,7 +1051,7 @@ assert_eq!(2+2, 4);\n     #[test]\n     fn make_test_issues_21299_33731() {\n         let opts = TestOptions::default();\n-        \n+\n         let input =\n \"// fn main\n assert_eq!(2+2, 4);\";"}]}