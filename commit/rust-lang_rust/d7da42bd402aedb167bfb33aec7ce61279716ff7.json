{"sha": "d7da42bd402aedb167bfb33aec7ce61279716ff7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ZGE0MmJkNDAyYWVkYjE2N2JmYjMzYWVjN2NlNjEyNzk3MTZmZjc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-25T13:59:13Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-25T13:59:13Z"}, "message": "Simplify", "tree": {"sha": "6574d1cb2308a81c7cff4e8414f44a120e7bde40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6574d1cb2308a81c7cff4e8414f44a120e7bde40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7da42bd402aedb167bfb33aec7ce61279716ff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7da42bd402aedb167bfb33aec7ce61279716ff7", "html_url": "https://github.com/rust-lang/rust/commit/d7da42bd402aedb167bfb33aec7ce61279716ff7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7da42bd402aedb167bfb33aec7ce61279716ff7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "744ec58bc3c6bc0fbffda3c9bf5ad975a1542702", "url": "https://api.github.com/repos/rust-lang/rust/commits/744ec58bc3c6bc0fbffda3c9bf5ad975a1542702", "html_url": "https://github.com/rust-lang/rust/commit/744ec58bc3c6bc0fbffda3c9bf5ad975a1542702"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "1e7d0621a6cb98bd2a850d5afa4d8c8f2723353d", "filename": "crates/ra_ide/src/extend_selection.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d7da42bd402aedb167bfb33aec7ce61279716ff7/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7da42bd402aedb167bfb33aec7ce61279716ff7/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs?ref=d7da42bd402aedb167bfb33aec7ce61279716ff7", "patch": "@@ -145,25 +145,25 @@ fn extend_tokens_from_range(\n     let src = db.parse_or_expand(expanded.file_id)?;\n     let parent = shallowest_node(&find_covering_element(&src, expanded.value))?.parent()?;\n \n-    let validate = |token: SyntaxToken| {\n+    let validate = |token: &SyntaxToken| {\n         let node = descend_into_macros(db, file_id, token.clone());\n-        if node.file_id == expanded.file_id\n+        node.file_id == expanded.file_id\n             && node.value.text_range().is_subrange(&parent.text_range())\n-        {\n-            Some(token)\n-        } else {\n-            None\n-        }\n     };\n \n     // Find the first and last text range under expanded parent\n     let first = successors(Some(first_token), |token| {\n-        validate(skip_whitespace(token.prev_token()?, Direction::Prev)?)\n+        let token = token.prev_token()?;\n+        skip_whitespace(token, Direction::Prev)\n     })\n+    .take_while(validate)\n     .last()?;\n+\n     let last = successors(Some(last_token), |token| {\n-        validate(skip_whitespace(token.next_token()?, Direction::Next)?)\n+        let token = token.next_token()?;\n+        skip_whitespace(token, Direction::Next)\n     })\n+    .take_while(validate)\n     .last()?;\n \n     let range = union_range(first.text_range(), last.text_range());\n@@ -334,10 +334,12 @@ fn adj_comments(comment: &ast::Comment, dir: Direction) -> ast::Comment {\n \n #[cfg(test)]\n mod tests {\n-    use super::*;\n-    use crate::mock_analysis::single_file;\n     use test_utils::extract_offset;\n \n+    use crate::mock_analysis::single_file;\n+\n+    use super::*;\n+\n     fn do_check(before: &str, afters: &[&str]) {\n         let (cursor, before) = extract_offset(before);\n         let (analysis, file_id) = single_file(&before);"}]}