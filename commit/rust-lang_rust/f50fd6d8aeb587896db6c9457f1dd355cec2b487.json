{"sha": "f50fd6d8aeb587896db6c9457f1dd355cec2b487", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1MGZkNmQ4YWViNTg3ODk2ZGI2Yzk0NTdmMWRkMzU1Y2VjMmI0ODc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-15T23:38:17Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-15T23:38:17Z"}, "message": "stdlib: Add color support for GNU screen", "tree": {"sha": "7a27fcb189526d9709e1e64f0175068223acfd65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a27fcb189526d9709e1e64f0175068223acfd65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f50fd6d8aeb587896db6c9457f1dd355cec2b487", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f50fd6d8aeb587896db6c9457f1dd355cec2b487", "html_url": "https://github.com/rust-lang/rust/commit/f50fd6d8aeb587896db6c9457f1dd355cec2b487", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f50fd6d8aeb587896db6c9457f1dd355cec2b487/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c19a026f46cc3e5c22f148d0f34719bcfd1ed727", "url": "https://api.github.com/repos/rust-lang/rust/commits/c19a026f46cc3e5c22f148d0f34719bcfd1ed727", "html_url": "https://github.com/rust-lang/rust/commit/c19a026f46cc3e5c22f148d0f34719bcfd1ed727"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "9ec707294160738b40afca300e528f2a2f968432", "filename": "src/lib/term.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f50fd6d8aeb587896db6c9457f1dd355cec2b487/src%2Flib%2Fterm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f50fd6d8aeb587896db6c9457f1dd355cec2b487/src%2Flib%2Fterm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fterm.rs?ref=f50fd6d8aeb587896db6c9457f1dd355cec2b487", "patch": "@@ -48,8 +48,16 @@ fn reset(io::buf_writer writer) {\n }\n \n fn color_supported() -> bool {\n-  \n-    ret generic_os::getenv(\"TERM\") == option::some[str](\"xterm-color\");\n+    auto supported_terms = [\"xterm-color\",\n+                            \"screen-bce\"];\n+    ret alt (generic_os::getenv(\"TERM\")) {\n+        case (option::some(?env)) {\n+            vec::member(env, supported_terms)\n+        }\n+        case (option::none) {\n+            false\n+        }\n+    };\n }\n \n fn set_color(io::buf_writer writer, u8 first_char, u8 color) {"}]}