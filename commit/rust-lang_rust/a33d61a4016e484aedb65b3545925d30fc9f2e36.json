{"sha": "a33d61a4016e484aedb65b3545925d30fc9f2e36", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzM2Q2MWE0MDE2ZTQ4NGFlZGI2NWIzNTQ1OTI1ZDMwZmM5ZjJlMzY=", "commit": {"author": {"name": "Carol (Nichols || Goulding)", "email": "carol.nichols@gmail.com", "date": "2015-09-29T02:23:16Z"}, "committer": {"name": "Carol (Nichols || Goulding)", "email": "carol.nichols@gmail.com", "date": "2015-09-29T02:56:22Z"}, "message": "Use code formatting for code-relevant values in std::fmt docs\n\nEspecially when documenting the use of `0`, since zero looks very\nsimilar to `O` in fonts not meant for displaying code.\n\nOther literal characters, traits, etc should also use code formatting.\nThis change makes this documentation more internally consistent.", "tree": {"sha": "13af5df1972433d7fda8114c14833d88aba92ca6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13af5df1972433d7fda8114c14833d88aba92ca6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a33d61a4016e484aedb65b3545925d30fc9f2e36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a33d61a4016e484aedb65b3545925d30fc9f2e36", "html_url": "https://github.com/rust-lang/rust/commit/a33d61a4016e484aedb65b3545925d30fc9f2e36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a33d61a4016e484aedb65b3545925d30fc9f2e36/comments", "author": {"login": "carols10cents", "id": 193874, "node_id": "MDQ6VXNlcjE5Mzg3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/193874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carols10cents", "html_url": "https://github.com/carols10cents", "followers_url": "https://api.github.com/users/carols10cents/followers", "following_url": "https://api.github.com/users/carols10cents/following{/other_user}", "gists_url": "https://api.github.com/users/carols10cents/gists{/gist_id}", "starred_url": "https://api.github.com/users/carols10cents/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carols10cents/subscriptions", "organizations_url": "https://api.github.com/users/carols10cents/orgs", "repos_url": "https://api.github.com/users/carols10cents/repos", "events_url": "https://api.github.com/users/carols10cents/events{/privacy}", "received_events_url": "https://api.github.com/users/carols10cents/received_events", "type": "User", "site_admin": false}, "committer": {"login": "carols10cents", "id": 193874, "node_id": "MDQ6VXNlcjE5Mzg3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/193874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carols10cents", "html_url": "https://github.com/carols10cents", "followers_url": "https://api.github.com/users/carols10cents/followers", "following_url": "https://api.github.com/users/carols10cents/following{/other_user}", "gists_url": "https://api.github.com/users/carols10cents/gists{/gist_id}", "starred_url": "https://api.github.com/users/carols10cents/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carols10cents/subscriptions", "organizations_url": "https://api.github.com/users/carols10cents/orgs", "repos_url": "https://api.github.com/users/carols10cents/repos", "events_url": "https://api.github.com/users/carols10cents/events{/privacy}", "received_events_url": "https://api.github.com/users/carols10cents/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6108e8c3e5e5768d9862ba0f66f44cbca098d015", "url": "https://api.github.com/repos/rust-lang/rust/commits/6108e8c3e5e5768d9862ba0f66f44cbca098d015", "html_url": "https://github.com/rust-lang/rust/commit/6108e8c3e5e5768d9862ba0f66f44cbca098d015"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "a31ad6c1093628c1b42b21d13a8cdfdce57bbc81", "filename": "src/libcollections/fmt.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a33d61a4016e484aedb65b3545925d30fc9f2e36/src%2Flibcollections%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a33d61a4016e484aedb65b3545925d30fc9f2e36/src%2Flibcollections%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ffmt.rs?ref=a33d61a4016e484aedb65b3545925d30fc9f2e36", "patch": "@@ -218,7 +218,7 @@\n //! }\n //! ```\n //!\n-//! ### fmt::Display vs fmt::Debug\n+//! ### `fmt::Display` vs `fmt::Debug`\n //!\n //! These two formatting traits have distinct purposes:\n //!\n@@ -358,24 +358,24 @@\n //! to ensure padding is applied is to format your input, then use this\n //! resulting string to pad your output.\n //!\n-//! ## Sign/#/0\n+//! ## Sign/`#`/`0`\n //!\n //! These can all be interpreted as flags for a particular formatter.\n //!\n-//! * '+' - This is intended for numeric types and indicates that the sign\n+//! * `+` - This is intended for numeric types and indicates that the sign\n //!         should always be printed. Positive signs are never printed by\n //!         default, and the negative sign is only printed by default for the\n-//!         `Signed` trait. This flag indicates that the correct sign (+ or -)\n+//!         `Signed` trait. This flag indicates that the correct sign (`+` or `-`)\n //!         should always be printed.\n-//! * '-' - Currently not used\n-//! * '#' - This flag is indicates that the \"alternate\" form of printing should\n+//! * `-` - Currently not used\n+//! * `#` - This flag is indicates that the \"alternate\" form of printing should\n //!         be used. The alternate forms are:\n //!     * `#?` - pretty-print the `Debug` formatting\n-//!     * `#x` - precedes the argument with a \"0x\"\n-//!     * `#X` - precedes the argument with a \"0x\"\n-//!     * `#b` - precedes the argument with a \"0b\"\n-//!     * `#o` - precedes the argument with a \"0o\"\n-//! * '0' - This is used to indicate for integer formats that the padding should\n+//!     * `#x` - precedes the argument with a `0x`\n+//!     * `#X` - precedes the argument with a `0x`\n+//!     * `#b` - precedes the argument with a `0b`\n+//!     * `#o` - precedes the argument with a `0o`\n+//! * `0` - This is used to indicate for integer formats that the padding should\n //!         both be done with a `0` character as well as be sign-aware. A format\n //!         like `{:08}` would yield `00000001` for the integer `1`, while the\n //!         same format would yield `-0000001` for the integer `-1`. Notice that\n@@ -390,8 +390,8 @@\n //!\n //! The default fill/alignment for non-numerics is a space and left-aligned. The\n //! defaults for numeric formatters is also a space but with right-alignment. If\n-//! the '0' flag is specified for numerics, then the implicit fill character is\n-//! '0'.\n+//! the `0` flag is specified for numerics, then the implicit fill character is\n+//! `0`.\n //!\n //! The value for the width can also be provided as a `usize` in the list of\n //! parameters by using the `2$` syntax indicating that the second argument is a"}]}