{"sha": "c67de2570f881a0601f15c7c15e1fb9a26f2d3bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2N2RlMjU3MGY4ODFhMDYwMWYxNWM3YzE1ZTFmYjlhMjZmMmQzYmY=", "commit": {"author": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-02-10T18:45:44Z"}, "committer": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-02-12T19:20:56Z"}, "message": "Add notice about using new consts in new code on float modules", "tree": {"sha": "37597444b5ec85d71f70b008c651aae5c82b6307", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37597444b5ec85d71f70b008c651aae5c82b6307"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf", "html_url": "https://github.com/rust-lang/rust/commit/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf/comments", "author": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "committer": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "847a0dd845dbc74b4d49adf873c585519e356b4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/847a0dd845dbc74b4d49adf873c585519e356b4e", "html_url": "https://github.com/rust-lang/rust/commit/847a0dd845dbc74b4d49adf873c585519e356b4e"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "ee3e09f3577ad372843482ae3ef06ed2c3512b7b", "filename": "src/libcore/num/f32.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf/src%2Flibcore%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf/src%2Flibcore%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Ff32.rs?ref=c67de2570f881a0601f15c7c15e1fb9a26f2d3bf", "patch": "@@ -4,6 +4,9 @@\n //! *[See also the `f32` primitive type](../../std/primitive.f32.html).*\n //!\n //! Mathematically significant numbers are provided in the `consts` sub-module.\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "40c1cee1d2da7292acfa5a344e06a59a41965b86", "filename": "src/libcore/num/f64.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf/src%2Flibcore%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf/src%2Flibcore%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Ff64.rs?ref=c67de2570f881a0601f15c7c15e1fb9a26f2d3bf", "patch": "@@ -4,6 +4,9 @@\n //! *[See also the `f64` primitive type](../../std/primitive.f64.html).*\n //!\n //! Mathematically significant numbers are provided in the `consts` sub-module.\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "20425aea8d5177841f7ab5768bd203276eb6415a", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=c67de2570f881a0601f15c7c15e1fb9a26f2d3bf", "patch": "@@ -4,6 +4,9 @@\n //! *[See also the `f32` primitive type](../../std/primitive.f32.html).*\n //!\n //! Mathematically significant numbers are provided in the `consts` sub-module.\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![allow(missing_docs)]"}, {"sha": "a1128a589a64a61b6cfea01c9d49603bea65dedb", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=c67de2570f881a0601f15c7c15e1fb9a26f2d3bf", "patch": "@@ -4,6 +4,9 @@\n //! *[See also the `f64` primitive type](../../std/primitive.f64.html).*\n //!\n //! Mathematically significant numbers are provided in the `consts` sub-module.\n+//!\n+//! Although using these constants won\u2019t cause compilation warnings,\n+//! new code should use the associated constants directly on the primitive type.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n #![allow(missing_docs)]"}, {"sha": "adad90f56d1cf57810770e9568e083b0d714e872", "filename": "src/libstd/primitive_docs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf/src%2Flibstd%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c67de2570f881a0601f15c7c15e1fb9a26f2d3bf/src%2Flibstd%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprimitive_docs.rs?ref=c67de2570f881a0601f15c7c15e1fb9a26f2d3bf", "patch": "@@ -771,7 +771,7 @@ mod prim_tuple {}\n #[doc(primitive = \"f32\")]\n /// The 32-bit floating point type.\n ///\n-/// *[See also the `std::f32` module](f32/index.html).*\n+/// *[See also the `std::f32::consts` module](f32/consts/index.html).*\n ///\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n mod prim_f32 {}\n@@ -780,7 +780,7 @@ mod prim_f32 {}\n //\n /// The 64-bit floating point type.\n ///\n-/// *[See also the `std::f64` module](f64/index.html).*\n+/// *[See also the `std::f64::consts` module](f64/consts/index.html).*\n ///\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n mod prim_f64 {}"}]}