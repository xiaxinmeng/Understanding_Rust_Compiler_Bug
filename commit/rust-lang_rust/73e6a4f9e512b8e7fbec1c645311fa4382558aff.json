{"sha": "73e6a4f9e512b8e7fbec1c645311fa4382558aff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZTZhNGY5ZTUxMmI4ZTdmYmVjMWM2NDUzMTFmYTQzODI1NThhZmY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-12T23:46:42Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-12T23:54:46Z"}, "message": "Elide existing main function when building a test runner. Issue #428\n\nThis prevents any defined main function from colliding with the one\nsynthesized for the test runner. This is not the best solution since it\ndoesn't compile a function the user defined, but I don't think it's likely to\nbe a problem in the near term.", "tree": {"sha": "27b9bf81bb3dc9e5e32a36d793b5c5e113750cec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27b9bf81bb3dc9e5e32a36d793b5c5e113750cec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73e6a4f9e512b8e7fbec1c645311fa4382558aff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73e6a4f9e512b8e7fbec1c645311fa4382558aff", "html_url": "https://github.com/rust-lang/rust/commit/73e6a4f9e512b8e7fbec1c645311fa4382558aff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73e6a4f9e512b8e7fbec1c645311fa4382558aff/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41a3888da7fbcff128f03c16a8cefe4d74ab5a58", "url": "https://api.github.com/repos/rust-lang/rust/commits/41a3888da7fbcff128f03c16a8cefe4d74ab5a58", "html_url": "https://github.com/rust-lang/rust/commit/41a3888da7fbcff128f03c16a8cefe4d74ab5a58"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "4c5f53d4bc1215404d9bcf4c9c8d46179dcc54a3", "filename": "src/comp/front/test.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/73e6a4f9e512b8e7fbec1c645311fa4382558aff/src%2Fcomp%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73e6a4f9e512b8e7fbec1c645311fa4382558aff/src%2Fcomp%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Ftest.rs?ref=73e6a4f9e512b8e7fbec1c645311fa4382558aff", "patch": "@@ -35,7 +35,8 @@ fn modify_for_testing(@ast::crate crate) -> @ast::crate {\n                             mutable testfns = ~[]);\n \n     auto precursor = rec(fold_crate = bind fold_crate(cx, _, _),\n-                         fold_item = bind fold_item(cx, _, _)\n+                         fold_item = bind fold_item(cx, _, _),\n+                         fold_mod = bind fold_mod(cx, _, _)\n                          with *fold::default_ast_fold());\n \n     auto fold = fold::make_fold(precursor);\n@@ -45,6 +46,28 @@ fn modify_for_testing(@ast::crate crate) -> @ast::crate {\n     ret res;\n }\n \n+fn fold_mod(&test_ctxt cx, &ast::_mod m,\n+            fold::ast_fold fld) -> ast::_mod {\n+\n+    // Remove any defined main function from the AST so it doesn't clash with\n+    // the one we're going to add.  FIXME: This is sloppy. Instead we should\n+    // have some mechanism to indicate to the translation pass which function\n+    // we want to be main.\n+    fn nomain(&@ast::item item) -> option::t[@ast::item] {\n+        alt (item.node) {\n+            ast::item_fn(?f, _) {\n+                if (item.ident == \"main\") { option::none }\n+                else { option::some(item) }\n+            }\n+            _ { option::some(item) }\n+        }\n+    }\n+\n+    auto mod_nomain = rec(view_items=m.view_items,\n+                          items=ivec::filter_map(nomain, m.items));\n+    ret fold::noop_fold_mod(mod_nomain, fld);\n+}\n+\n fn fold_crate(&test_ctxt cx, &ast::crate_ c,\n               fold::ast_fold fld) -> ast::crate_ {\n     auto folded = fold::noop_fold_crate(c, fld);"}, {"sha": "93c51b9baf86f77dad11bb42d468f7ed65073270", "filename": "src/comp/syntax/fold.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/73e6a4f9e512b8e7fbec1c645311fa4382558aff/src%2Fcomp%2Fsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73e6a4f9e512b8e7fbec1c645311fa4382558aff/src%2Fcomp%2Fsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Ffold.rs?ref=73e6a4f9e512b8e7fbec1c645311fa4382558aff", "patch": "@@ -12,6 +12,7 @@ export dummy_out;\n export noop_fold_crate;\n export noop_fold_item;\n export noop_fold_expr;\n+export noop_fold_mod;\n \n type ast_fold = @mutable a_f;\n "}]}