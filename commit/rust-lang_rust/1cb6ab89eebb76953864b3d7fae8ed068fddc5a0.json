{"sha": "1cb6ab89eebb76953864b3d7fae8ed068fddc5a0", "node_id": "C_kwDOAAsO6NoAKDFjYjZhYjg5ZWViYjc2OTUzODY0YjNkN2ZhZThlZDA2OGZkZGM1YTA", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-11-07T16:43:22Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-11-07T16:45:12Z"}, "message": "internal: error instead of panic on invalid file range", "tree": {"sha": "3cda4e7af29348199b48e394cd4c7062018994fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cda4e7af29348199b48e394cd4c7062018994fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cb6ab89eebb76953864b3d7fae8ed068fddc5a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cb6ab89eebb76953864b3d7fae8ed068fddc5a0", "html_url": "https://github.com/rust-lang/rust/commit/1cb6ab89eebb76953864b3d7fae8ed068fddc5a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cb6ab89eebb76953864b3d7fae8ed068fddc5a0/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa70b0a86ec89ea53c0855caba42d121cbcc5697", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa70b0a86ec89ea53c0855caba42d121cbcc5697", "html_url": "https://github.com/rust-lang/rust/commit/fa70b0a86ec89ea53c0855caba42d121cbcc5697"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "dd433b0f4d31cffad29b39955fb5365597355b4d", "filename": "crates/rust-analyzer/src/from_proto.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1cb6ab89eebb76953864b3d7fae8ed068fddc5a0/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cb6ab89eebb76953864b3d7fae8ed068fddc5a0/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs?ref=1cb6ab89eebb76953864b3d7fae8ed068fddc5a0", "patch": "@@ -42,8 +42,10 @@ pub(crate) fn offset(line_index: &LineIndex, position: lsp_types::Position) -> R\n pub(crate) fn text_range(line_index: &LineIndex, range: lsp_types::Range) -> Result<TextRange> {\n     let start = offset(line_index, range.start)?;\n     let end = offset(line_index, range.end)?;\n-    let text_range = TextRange::new(start, end);\n-    Ok(text_range)\n+    match end < start {\n+        true => Err(format_err!(\"Invalid Range\").into()),\n+        false => Ok(TextRange::new(start, end)),\n+    }\n }\n \n pub(crate) fn file_id(snap: &GlobalStateSnapshot, url: &lsp_types::Url) -> Result<FileId> {"}]}