{"sha": "5662d9343f0696efcc38a1264656737c9f22d427", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2NjJkOTM0M2YwNjk2ZWZjYzM4YTEyNjQ2NTY3MzdjOWYyMmQ0Mjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-02T07:04:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-02T07:04:58Z"}, "message": "Auto merge of #80965 - camelid:rename-doc-spotlight, r=jyn514\n\nRename `#[doc(spotlight)]` to `#[doc(notable_trait)]`\n\nFixes #80936.\n\n\"spotlight\" is not a very specific or self-explaining name.\nAdditionally, the dialog that it triggers is called \"Notable traits\".\nSo, \"notable trait\" is a better name.\n\n* Rename `#[doc(spotlight)]` to `#[doc(notable_trait)]`\n* Rename `#![feature(doc_spotlight)]` to `#![feature(doc_notable_trait)]`\n* Update documentation\n* Improve documentation\n\nr? `@Manishearth`", "tree": {"sha": "659e330db6b6689af77c0fb03aa65ff814209fe2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/659e330db6b6689af77c0fb03aa65ff814209fe2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5662d9343f0696efcc38a1264656737c9f22d427", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5662d9343f0696efcc38a1264656737c9f22d427", "html_url": "https://github.com/rust-lang/rust/commit/5662d9343f0696efcc38a1264656737c9f22d427", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5662d9343f0696efcc38a1264656737c9f22d427/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fa76a4a7742bb9c1febe33019f5a9e7e4839a65", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fa76a4a7742bb9c1febe33019f5a9e7e4839a65", "html_url": "https://github.com/rust-lang/rust/commit/4fa76a4a7742bb9c1febe33019f5a9e7e4839a65"}, {"sha": "34c6cee397183974b34a6e04c94b38202eb40caf", "url": "https://api.github.com/repos/rust-lang/rust/commits/34c6cee397183974b34a6e04c94b38202eb40caf", "html_url": "https://github.com/rust-lang/rust/commit/34c6cee397183974b34a6e04c94b38202eb40caf"}], "stats": {"total": 241, "additions": 153, "deletions": 88}, "files": [{"sha": "3724438cc6ed250abf556617e291616f80827a3c", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -313,7 +313,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                     include => external_doc\n                     cfg => doc_cfg\n                     masked => doc_masked\n-                    spotlight => doc_spotlight\n+                    notable_trait => doc_notable_trait\n                     keyword => doc_keyword\n                 );\n             }"}, {"sha": "040260f5cf5a4abb008a2c5d6cb057553c4ddccf", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -216,6 +216,10 @@ declare_features! (\n     /// Renamed from `optin_builtin_traits`.\n     (active, auto_traits, \"1.50.0\", Some(13231), None),\n \n+    /// Allows `#[doc(notable_trait)]`.\n+    /// Renamed from `doc_spotlight`.\n+    (active, doc_notable_trait, \"1.52.0\", Some(45040), None),\n+\n     // no-tracking-issue-end\n \n     // -------------------------------------------------------------------------\n@@ -374,9 +378,6 @@ declare_features! (\n     /// Allows `#[doc(masked)]`.\n     (active, doc_masked, \"1.21.0\", Some(44027), None),\n \n-    /// Allows `#[doc(spotlight)]`.\n-    (active, doc_spotlight, \"1.22.0\", Some(45040), None),\n-\n     /// Allows `#[doc(include = \"some-file\")]`.\n     (active, external_doc, \"1.22.0\", Some(44732), None),\n "}, {"sha": "8ba67a00f8d824b068c736bfd79ad3ac52f87431", "filename": "compiler/rustc_feature/src/removed.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -80,6 +80,11 @@ declare_features! (\n      Some(\"subsumed by `#![feature(allocator_internals)]`\")),\n     /// Allows identifying crates that contain sanitizer runtimes.\n     (removed, sanitizer_runtime, \"1.17.0\", None, None, None),\n+    /// Allows `#[doc(spotlight)]`.\n+    /// The attribute was renamed to `#[doc(notable_trait)]`\n+    /// and the feature to `doc_notable_trait`.\n+    (removed, doc_spotlight, \"1.22.0\", Some(45040), None,\n+     Some(\"renamed to `doc_notable_trait`\")),\n     (removed, proc_macro_mod, \"1.27.0\", Some(54727), None,\n      Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n     (removed, proc_macro_expr, \"1.27.0\", Some(54727), None,"}, {"sha": "d1a3971f5695b958285670a9b4d4201e4e34f571", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -9,7 +9,7 @@ use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::TyCtxt;\n \n use rustc_ast::{Attribute, Lit, LitKind, NestedMetaItem};\n-use rustc_errors::{pluralize, struct_span_err};\n+use rustc_errors::{pluralize, struct_span_err, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def_id::LocalDefId;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n@@ -648,10 +648,10 @@ impl CheckAttrVisitor<'tcx> {\n                         | sym::masked\n                         | sym::no_default_passes\n                         | sym::no_inline\n+                        | sym::notable_trait\n                         | sym::passes\n                         | sym::plugins\n                         | sym::primitive\n-                        | sym::spotlight\n                         | sym::test => {}\n \n                         _ => {\n@@ -660,11 +660,23 @@ impl CheckAttrVisitor<'tcx> {\n                                 hir_id,\n                                 i_meta.span,\n                                 |lint| {\n-                                    let msg = format!(\n+                                    let mut diag = lint.build(&format!(\n                                         \"unknown `doc` attribute `{}`\",\n                                         rustc_ast_pretty::pprust::path_to_string(&i_meta.path),\n-                                    );\n-                                    lint.build(&msg).emit();\n+                                    ));\n+                                    if i_meta.has_name(sym::spotlight) {\n+                                        diag.note(\n+                                            \"`doc(spotlight)` was renamed to `doc(notable_trait)`\",\n+                                        );\n+                                        diag.span_suggestion_short(\n+                                            i_meta.span,\n+                                            \"use `notable_trait` instead\",\n+                                            String::from(\"notable_trait\"),\n+                                            Applicability::MachineApplicable,\n+                                        );\n+                                        diag.note(\"`doc(spotlight)` is now a no-op\");\n+                                    }\n+                                    diag.emit();\n                                 },\n                             );\n                             is_valid = false;"}, {"sha": "c5f929ab183a53f05b18f5763f6927d259155c86", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -477,6 +477,7 @@ symbols! {\n         doc_cfg,\n         doc_keyword,\n         doc_masked,\n+        doc_notable_trait,\n         doc_spotlight,\n         doctest,\n         document_private_items,\n@@ -801,6 +802,7 @@ symbols! {\n         noreturn,\n         nostack,\n         not,\n+        notable_trait,\n         note,\n         object_safe_for_dispatch,\n         of,"}, {"sha": "cc4cf54a2f764b6ae9a7a52256365ffdc776aad0", "filename": "library/core/src/future/future.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/library%2Fcore%2Fsrc%2Ffuture%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/library%2Fcore%2Fsrc%2Ffuture%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffuture%2Ffuture.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -24,7 +24,8 @@ use crate::task::{Context, Poll};\n /// `.await` the value.\n ///\n /// [`Waker`]: crate::task::Waker\n-#[doc(spotlight)]\n+#[cfg_attr(bootstrap, doc(spotlight))]\n+#[cfg_attr(not(bootstrap), doc(notable_trait))]\n #[must_use = \"futures do nothing unless you `.await` or poll them\"]\n #[stable(feature = \"futures_api\", since = \"1.36.0\")]\n #[lang = \"future_trait\"]"}, {"sha": "d5d0c287992c507520b6a51cdac30ed783d548bf", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -92,7 +92,8 @@ fn _assert_is_object_safe(_: &dyn Iterator<Item = ()>) {}\n     label = \"`{Self}` is not an iterator\",\n     message = \"`{Self}` is not an iterator\"\n )]\n-#[doc(spotlight)]\n+#[cfg_attr(bootstrap, doc(spotlight))]\n+#[cfg_attr(not(bootstrap), doc(notable_trait))]\n #[rustc_diagnostic_item = \"Iterator\"]\n #[must_use = \"iterators are lazy and do nothing unless consumed\"]\n pub trait Iterator {"}, {"sha": "158b1e152ad491c54c2f41aff5906dae68ee6803", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -109,7 +109,8 @@\n #![feature(custom_inner_attributes)]\n #![feature(decl_macro)]\n #![feature(doc_cfg)]\n-#![feature(doc_spotlight)]\n+#![cfg_attr(bootstrap, feature(doc_spotlight))]\n+#![cfg_attr(not(bootstrap), feature(doc_notable_trait))]\n #![feature(duration_consts_2)]\n #![feature(duration_saturating_ops)]\n #![feature(extended_key_value_attributes)]"}, {"sha": "9625984195bd2cc5ef64777bc43f07ae04392320", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -505,7 +505,8 @@ pub(crate) fn default_read_exact<R: Read + ?Sized>(this: &mut R, mut buf: &mut [\n /// [`std::io`]: self\n /// [`File`]: crate::fs::File\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(spotlight)]\n+#[cfg_attr(bootstrap, doc(spotlight))]\n+#[cfg_attr(not(bootstrap), doc(notable_trait))]\n pub trait Read {\n     /// Pull some bytes from this source into the specified buffer, returning\n     /// how many bytes were read.\n@@ -1296,7 +1297,8 @@ impl Initializer {\n ///\n /// [`write_all`]: Write::write_all\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[doc(spotlight)]\n+#[cfg_attr(bootstrap, doc(spotlight))]\n+#[cfg_attr(not(bootstrap), doc(notable_trait))]\n pub trait Write {\n     /// Write a buffer into this writer, returning how many bytes were written.\n     ///"}, {"sha": "d5ba2d36346b518026c2f73b2d569b77a5fba8cb", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -257,7 +257,8 @@\n #![feature(doc_cfg)]\n #![feature(doc_keyword)]\n #![feature(doc_masked)]\n-#![feature(doc_spotlight)]\n+#![cfg_attr(bootstrap, feature(doc_spotlight))]\n+#![cfg_attr(not(bootstrap), feature(doc_notable_trait))]\n #![feature(dropck_eyepatch)]\n #![feature(duration_constants)]\n #![feature(duration_zero)]"}, {"sha": "28b81a40265d3dfa2afd2e6c5fb3401ff305ff98", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 22, "deletions": 20, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -88,26 +88,28 @@ Book][unstable-doc-cfg] and [its tracking issue][issue-doc-cfg].\n [unstable-doc-cfg]: ../unstable-book/language-features/doc-cfg.html\n [issue-doc-cfg]: https://github.com/rust-lang/rust/issues/43781\n \n-### Adding your trait to the \"Important Traits\" dialog\n-\n-Rustdoc keeps a list of a few traits that are believed to be \"fundamental\" to a given type when\n-implemented on it. These traits are intended to be the primary interface for their types, and are\n-often the only thing available to be documented on their types. For this reason, Rustdoc will track\n-when a given type implements one of these traits and call special attention to it when a function\n-returns one of these types. This is the \"Important Traits\" dialog, visible as a circle-i button next\n-to the function, which, when clicked, shows the dialog.\n-\n-In the standard library, the traits that qualify for inclusion are `Iterator`, `io::Read`, and\n-`io::Write`. However, rather than being implemented as a hard-coded list, these traits have a\n-special marker attribute on them: `#[doc(spotlight)]`. This means that you could apply this\n-attribute to your own trait to include it in the \"Important Traits\" dialog in documentation.\n-\n-The `#[doc(spotlight)]` attribute currently requires the `#![feature(doc_spotlight)]` feature gate.\n-For more information, see [its chapter in the Unstable Book][unstable-spotlight] and [its tracking\n-issue][issue-spotlight].\n-\n-[unstable-spotlight]: ../unstable-book/language-features/doc-spotlight.html\n-[issue-spotlight]: https://github.com/rust-lang/rust/issues/45040\n+### Adding your trait to the \"Notable traits\" dialog\n+\n+Rustdoc keeps a list of a few traits that are believed to be \"fundamental\" to\n+types that implement them. These traits are intended to be the primary interface\n+for their implementers, and are often most of the API available to be documented\n+on their types. For this reason, Rustdoc will track when a given type implements\n+one of these traits and call special attention to it when a function returns one\n+of these types. This is the \"Notable traits\" dialog, accessible as a circled `i`\n+button next to the function, which, when clicked, shows the dialog.\n+\n+In the standard library, some of the traits that are part of this list are\n+`Iterator`, `Future`, `io::Read`, and `io::Write`. However, rather than being\n+implemented as a hard-coded list, these traits have a special marker attribute\n+on them: `#[doc(notable_trait)]`. This means that you can apply this attribute\n+to your own trait to include it in the \"Notable traits\" dialog in documentation.\n+\n+The `#[doc(notable_trait)]` attribute currently requires the `#![feature(doc_notable_trait)]`\n+feature gate. For more information, see [its chapter in the Unstable Book][unstable-notable_trait]\n+and [its tracking issue][issue-notable_trait].\n+\n+[unstable-notable_trait]: ../unstable-book/language-features/doc-notable-trait.html\n+[issue-notable_trait]: https://github.com/rust-lang/rust/issues/45040\n \n ### Exclude certain dependencies from documentation\n "}, {"sha": "dc402ed4253ac110ca125e838b1a124cf582c84b", "filename": "src/doc/unstable-book/src/language-features/doc-notable-trait.md", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-notable-trait.md", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-notable-trait.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-notable-trait.md?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -0,0 +1,33 @@\n+# `doc_notable_trait`\n+\n+The tracking issue for this feature is: [#45040]\n+\n+The `doc_notable_trait` feature allows the use of the `#[doc(notable_trait)]`\n+attribute, which will display the trait in a \"Notable traits\" dialog for\n+functions returning types that implement the trait. For example, this attribute\n+is applied to the `Iterator`, `Future`, `io::Read`, and `io::Write` traits in\n+the standard library.\n+\n+You can do this on your own traits like so:\n+\n+```\n+#![feature(doc_notable_trait)]\n+\n+#[doc(notable_trait)]\n+pub trait MyTrait {}\n+\n+pub struct MyStruct;\n+impl MyTrait for MyStruct {}\n+\n+/// The docs for this function will have a button that displays a dialog about\n+/// `MyStruct` implementing `MyTrait`.\n+pub fn my_fn() -> MyStruct { MyStruct }\n+```\n+\n+This feature was originally implemented in PR [#45039].\n+\n+See also its documentation in [the rustdoc book][rustdoc-book-notable_trait].\n+\n+[#45040]: https://github.com/rust-lang/rust/issues/45040\n+[#45039]: https://github.com/rust-lang/rust/pull/45039\n+[rustdoc-book-notable_trait]: ../../rustdoc/unstable-features.html#adding-your-trait-to-the-notable-traits-dialog"}, {"sha": "75eff163318988ace11975a4afc13fb9f181f1e9", "filename": "src/doc/unstable-book/src/language-features/doc-spotlight.md", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4fa76a4a7742bb9c1febe33019f5a9e7e4839a65/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-spotlight.md", "raw_url": "https://github.com/rust-lang/rust/raw/4fa76a4a7742bb9c1febe33019f5a9e7e4839a65/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-spotlight.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fdoc-spotlight.md?ref=4fa76a4a7742bb9c1febe33019f5a9e7e4839a65", "patch": "@@ -1,30 +0,0 @@\n-# `doc_spotlight`\n-\n-The tracking issue for this feature is: [#45040]\n-\n-The `doc_spotlight` feature allows the use of the `spotlight` parameter to the `#[doc]` attribute,\n-to \"spotlight\" a specific trait on the return values of functions. Adding a `#[doc(spotlight)]`\n-attribute to a trait definition will make rustdoc print extra information for functions which return\n-a type that implements that trait. For example, this attribute is applied to the `Iterator`,\n-`io::Read`, `io::Write`, and `Future` traits in the standard library.\n-\n-You can do this on your own traits, like this:\n-\n-```\n-#![feature(doc_spotlight)]\n-\n-#[doc(spotlight)]\n-pub trait MyTrait {}\n-\n-pub struct MyStruct;\n-impl MyTrait for MyStruct {}\n-\n-/// The docs for this function will have an extra line about `MyStruct` implementing `MyTrait`,\n-/// without having to write that yourself!\n-pub fn my_fn() -> MyStruct { MyStruct }\n-```\n-\n-This feature was originally implemented in PR [#45039].\n-\n-[#45040]: https://github.com/rust-lang/rust/issues/45040\n-[#45039]: https://github.com/rust-lang/rust/pull/45039"}, {"sha": "1e9a7d1b4b9adf12081a373d34e288ef2eae8703", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -624,7 +624,7 @@ crate fn record_extern_trait(cx: &mut DocContext<'_>, did: DefId) {\n \n     let trait_ = clean::TraitWithExtraInfo {\n         trait_,\n-        is_spotlight: clean::utils::has_doc_flag(cx.tcx.get_attrs(did), sym::spotlight),\n+        is_spotlight: clean::utils::has_doc_flag(cx.tcx.get_attrs(did), sym::notable_trait),\n     };\n     cx.external_traits.borrow_mut().insert(did, trait_);\n     cx.active_extern_traits.remove(&did);"}, {"sha": "01bceb1d910ca4f788c8647100781d13af447a1d", "filename": "src/librustdoc/formats/cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/src%2Flibrustdoc%2Fformats%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/src%2Flibrustdoc%2Fformats%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Fcache.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -227,7 +227,7 @@ impl<'a, 'tcx> DocFolder for CacheBuilder<'a, 'tcx> {\n         if let clean::TraitItem(ref t) = *item.kind {\n             self.cache.traits.entry(item.def_id).or_insert_with(|| clean::TraitWithExtraInfo {\n                 trait_: t.clone(),\n-                is_spotlight: item.attrs.has_doc_flag(sym::spotlight),\n+                is_spotlight: item.attrs.has_doc_flag(sym::notable_trait),\n             });\n         }\n "}, {"sha": "6c90aace6891d465e5a5a66d9458291e22943008", "filename": "src/test/rustdoc-ui/doc-spotlight.fixed", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.fixed?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -0,0 +1,10 @@\n+// ignore-tidy-linelength\n+// check-pass\n+// run-rustfix\n+\n+#![feature(doc_notable_trait)]\n+\n+#[doc(notable_trait)]\n+//~^ WARN unknown `doc` attribute `spotlight`\n+//~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+trait MyTrait {}"}, {"sha": "7cea553c4b0043be62dafac909874f2ea3668afe", "filename": "src/test/rustdoc-ui/doc-spotlight.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -0,0 +1,10 @@\n+// ignore-tidy-linelength\n+// check-pass\n+// run-rustfix\n+\n+#![feature(doc_notable_trait)]\n+\n+#[doc(spotlight)]\n+//~^ WARN unknown `doc` attribute `spotlight`\n+//~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+trait MyTrait {}"}, {"sha": "e79cdc3d77a80d4469629b2c759d9370acb0967c", "filename": "src/test/rustdoc-ui/doc-spotlight.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.stderr?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -0,0 +1,14 @@\n+warning: unknown `doc` attribute `spotlight`\n+  --> $DIR/doc-spotlight.rs:7:7\n+   |\n+LL | #[doc(spotlight)]\n+   |       ^^^^^^^^^ help: use `notable_trait` instead\n+   |\n+   = note: `#[warn(invalid_doc_attributes)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n+   = note: `doc(spotlight)` was renamed to `doc(notable_trait)`\n+   = note: `doc(spotlight)` is now a no-op\n+\n+warning: 1 warning emitted\n+"}, {"sha": "58a24b855d6e2f528c1da360719a0687c978e2fb", "filename": "src/test/rustdoc/doc-notable_trait.rs", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/src%2Ftest%2Frustdoc%2Fdoc-notable_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/src%2Ftest%2Frustdoc%2Fdoc-notable_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-notable_trait.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -1,14 +1,14 @@\n-#![feature(doc_spotlight)]\n+#![feature(doc_notable_trait)]\n \n pub struct Wrapper<T> {\n     inner: T,\n }\n \n impl<T: SomeTrait> SomeTrait for Wrapper<T> {}\n \n-#[doc(spotlight)]\n+#[doc(notable_trait)]\n pub trait SomeTrait {\n-    // @has doc_spotlight/trait.SomeTrait.html\n+    // @has doc_notable_trait/trait.SomeTrait.html\n     // @has - '//code[@class=\"content\"]' 'impl<T: SomeTrait> SomeTrait for Wrapper<T>'\n     fn wrap_me(self) -> Wrapper<Self> where Self: Sized {\n         Wrapper {\n@@ -21,15 +21,15 @@ pub struct SomeStruct;\n impl SomeTrait for SomeStruct {}\n \n impl SomeStruct {\n-    // @has doc_spotlight/struct.SomeStruct.html\n+    // @has doc_notable_trait/struct.SomeStruct.html\n     // @has - '//code[@class=\"content\"]' 'impl SomeTrait for SomeStruct'\n     // @has - '//code[@class=\"content\"]' 'impl<T: SomeTrait> SomeTrait for Wrapper<T>'\n     pub fn new() -> SomeStruct {\n         SomeStruct\n     }\n }\n \n-// @has doc_spotlight/fn.bare_fn.html\n+// @has doc_notable_trait/fn.bare_fn.html\n // @has - '//code[@class=\"content\"]' 'impl SomeTrait for SomeStruct'\n pub fn bare_fn() -> SomeStruct {\n     SomeStruct", "previous_filename": "src/test/rustdoc/doc-spotlight.rs"}, {"sha": "7f3392eadadb3c92a1a4837c6eeb5e44a4791489", "filename": "src/test/ui/feature-gates/feature-gate-doc_notable_trait.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_notable_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_notable_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_notable_trait.rs?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -0,0 +1,4 @@\n+#[doc(notable_trait)] //~ ERROR: `#[doc(notable_trait)]` is experimental\n+trait SomeTrait {}\n+\n+fn main() {}"}, {"sha": "1f9bef40c4e7382f0fa6d5470052626c95756fdc", "filename": "src/test/ui/feature-gates/feature-gate-doc_notable_trait.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5662d9343f0696efcc38a1264656737c9f22d427/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_notable_trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5662d9343f0696efcc38a1264656737c9f22d427/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_notable_trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_notable_trait.stderr?ref=5662d9343f0696efcc38a1264656737c9f22d427", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: `#[doc(notable_trait)]` is experimental\n+  --> $DIR/feature-gate-doc_notable_trait.rs:1:1\n+   |\n+LL | #[doc(notable_trait)]\n+   | ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #45040 <https://github.com/rust-lang/rust/issues/45040> for more information\n+   = help: add `#![feature(doc_notable_trait)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "452b45b34456bbb37771e3bbe31eefc1602cfa39", "filename": "src/test/ui/feature-gates/feature-gate-doc_spotlight.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fa76a4a7742bb9c1febe33019f5a9e7e4839a65/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fa76a4a7742bb9c1febe33019f5a9e7e4839a65/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.rs?ref=4fa76a4a7742bb9c1febe33019f5a9e7e4839a65", "patch": "@@ -1,4 +0,0 @@\n-#[doc(spotlight)] //~ ERROR: `#[doc(spotlight)]` is experimental\n-trait SomeTrait {}\n-\n-fn main() {}"}, {"sha": "010d74054a4120fa3b687afc2e8e9f21a0405164", "filename": "src/test/ui/feature-gates/feature-gate-doc_spotlight.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4fa76a4a7742bb9c1febe33019f5a9e7e4839a65/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fa76a4a7742bb9c1febe33019f5a9e7e4839a65/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.stderr?ref=4fa76a4a7742bb9c1febe33019f5a9e7e4839a65", "patch": "@@ -1,12 +0,0 @@\n-error[E0658]: `#[doc(spotlight)]` is experimental\n-  --> $DIR/feature-gate-doc_spotlight.rs:1:1\n-   |\n-LL | #[doc(spotlight)]\n-   | ^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #45040 <https://github.com/rust-lang/rust/issues/45040> for more information\n-   = help: add `#![feature(doc_spotlight)]` to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}]}