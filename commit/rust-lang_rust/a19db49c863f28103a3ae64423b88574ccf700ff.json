{"sha": "a19db49c863f28103a3ae64423b88574ccf700ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExOWRiNDljODYzZjI4MTAzYTNhZTY0NDIzYjg4NTc0Y2NmNzAwZmY=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-08-14T20:26:33Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-08-14T20:26:33Z"}, "message": "Update former compile-fail tests", "tree": {"sha": "452c6ec55bc57a5aa1d2a8f1a5b3381bb04f1cc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/452c6ec55bc57a5aa1d2a8f1a5b3381bb04f1cc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a19db49c863f28103a3ae64423b88574ccf700ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a19db49c863f28103a3ae64423b88574ccf700ff", "html_url": "https://github.com/rust-lang/rust/commit/a19db49c863f28103a3ae64423b88574ccf700ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a19db49c863f28103a3ae64423b88574ccf700ff/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c8eb4eac41aff2465967285f620d8edf1ba8777", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c8eb4eac41aff2465967285f620d8edf1ba8777", "html_url": "https://github.com/rust-lang/rust/commit/3c8eb4eac41aff2465967285f620d8edf1ba8777"}], "stats": {"total": 199, "additions": 105, "deletions": 94}, "files": [{"sha": "ac758a8926f28e3612ee820dcbc369f587b581b1", "filename": "src/test/ui/associated-types/cache/project-fn-ret-contravariant.krisskross.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.krisskross.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.krisskross.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.krisskross.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -18,7 +18,7 @@ LL | fn transmute<'a,'b>(x: &'a u32, y: &'b u32) -> (&'a u32, &'b u32) {\n    |              |\n    |              lifetime `'a` defined here\n LL |    let a = bar(foo, y);\n-   |            ^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n+   |            ^^^^^^^^^^^ assignment requires that `'b` must outlive `'a`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/project-fn-ret-contravariant.rs:54:12\n@@ -29,7 +29,7 @@ LL | fn transmute<'a,'b>(x: &'a u32, y: &'b u32) -> (&'a u32, &'b u32) {\n    |              lifetime `'a` defined here\n LL |    let a = bar(foo, y);\n LL |    let b = bar(foo, x);\n-   |            ^^^^^^^^^^^ argument requires that `'a` must outlive `'b`\n+   |            ^^^^^^^^^^^ assignment requires that `'a` must outlive `'b`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "75c35d077c4c430a045f3f26c7a813bb83c5cd3d", "filename": "src/test/ui/associated-types/cache/project-fn-ret-contravariant.transmute.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.transmute.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.transmute.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.transmute.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -4,13 +4,13 @@ warning: not reporting region error due to nll\n LL |    bar(foo, x) //[transmute]~ ERROR E0495\n    |        ^^^\n \n-error: borrowed data escapes outside of function\n+error: unsatisfied lifetime constraints\n   --> $DIR/project-fn-ret-contravariant.rs:48:4\n    |\n LL | fn baz<'a,'b>(x: &'a u32) -> &'static u32 {\n-   |               - `x` is a reference that is only valid in the function body\n+   |        -- lifetime `'a` defined here\n LL |    bar(foo, x) //[transmute]~ ERROR E0495\n-   |    ^^^^^^^^^^^ `x` escapes the function body here\n+   |    ^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n \n error: aborting due to previous error\n "}, {"sha": "4b2ba24eb0eb8f289f13cec74567b002bd628af5", "filename": "src/test/ui/associated-types/cache/project-fn-ret-invariant.krisskross.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.krisskross.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.krisskross.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.krisskross.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -18,7 +18,7 @@ LL | fn transmute<'a,'b>(x: Type<'a>, y: Type<'b>) -> (Type<'a>, Type<'b>) {\n    |              |\n    |              lifetime `'a` defined here\n LL |    let a = bar(foo, y); //[krisskross]~ ERROR E0623\n-   |            ^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n+   |            ^^^^^^^^^^^ assignment requires that `'b` must outlive `'a`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/project-fn-ret-invariant.rs:64:12\n@@ -29,7 +29,7 @@ LL | fn transmute<'a,'b>(x: Type<'a>, y: Type<'b>) -> (Type<'a>, Type<'b>) {\n    |              lifetime `'a` defined here\n LL |    let a = bar(foo, y); //[krisskross]~ ERROR E0623\n LL |    let b = bar(foo, x);\n-   |            ^^^^^^^^^^^ argument requires that `'a` must outlive `'b`\n+   |            ^^^^^^^^^^^ assignment requires that `'a` must outlive `'b`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "604974a25008d1c04075d2d5dab30c63eda274af", "filename": "src/test/ui/associated-types/cache/project-fn-ret-invariant.transmute.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.transmute.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.transmute.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.transmute.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -4,14 +4,14 @@ warning: not reporting region error due to nll\n LL |    bar(foo, x) //[transmute]~ ERROR E0495\n    |        ^^^\n \n-error: borrowed data escapes outside of function\n+error: unsatisfied lifetime constraints\n   --> $DIR/project-fn-ret-invariant.rs:58:4\n    |\n LL | fn baz<'a,'b>(x: Type<'a>) -> Type<'static> {\n-   |               - `x` is a reference that is only valid in the function body\n+   |        -- lifetime `'a` defined here\n ...\n LL |    bar(foo, x) //[transmute]~ ERROR E0495\n-   |    ^^^^^^^^^^^ `x` escapes the function body here\n+   |    ^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`\n \n error: aborting due to previous error\n "}, {"sha": "ae706ef64dd22171c11352374f86ce3d1cdd9de4", "filename": "src/test/ui/borrowck/borrowck-describe-lvalue.ast.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -35,7 +35,7 @@ LL | |                    //[mir]~^ ERROR cannot borrow `x` as mutable more than\n LL | |                    *y = 1;\n LL | |                    drop(y);\n LL | |                 }\n-   | |_________________^ requires that `'1` must outlive `'2`\n+   | |_________________^ returning this value requires that `'1` must outlive `'2`\n    |\n    = note: closure implements `FnMut`, so references to captured variables can't escape the closure\n "}, {"sha": "ae706ef64dd22171c11352374f86ce3d1cdd9de4", "filename": "src/test/ui/borrowck/borrowck-describe-lvalue.mir.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.mir.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -35,7 +35,7 @@ LL | |                    //[mir]~^ ERROR cannot borrow `x` as mutable more than\n LL | |                    *y = 1;\n LL | |                    drop(y);\n LL | |                 }\n-   | |_________________^ requires that `'1` must outlive `'2`\n+   | |_________________^ returning this value requires that `'1` must outlive `'2`\n    |\n    = note: closure implements `FnMut`, so references to captured variables can't escape the closure\n "}, {"sha": "b7aad5c2b80dc450127c294ec5bedf6ac35a2939", "filename": "src/test/ui/borrowck/borrowck-reborrow-from-shorter-lived-andmut.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-shorter-lived-andmut.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-shorter-lived-andmut.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-reborrow-from-shorter-lived-andmut.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -5,14 +5,14 @@ LL |     S { pointer: &mut *p.pointer }\n    |                  ^^^^^^^^^^^^^^^\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/borrowck-reborrow-from-shorter-lived-andmut.rs:19:18\n+  --> $DIR/borrowck-reborrow-from-shorter-lived-andmut.rs:19:5\n    |\n LL | fn copy_borrowed_ptr<'a,'b>(p: &'a mut S<'b>) -> S<'b> {\n    |                      -- -- lifetime `'b` defined here\n    |                      |\n    |                      lifetime `'a` defined here\n LL |     S { pointer: &mut *p.pointer }\n-   |                  ^^^^^^^^^^^^^^^ requires that `'a` must outlive `'b`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function was supposed to return data with lifetime `'b` but it is returning data with lifetime `'a`\n \n error: aborting due to previous error\n "}, {"sha": "97cb2cc16e45ec13d8f0ca1099ed9a193cfca237", "filename": "src/test/ui/impl-trait/must_outlive_least_region_or_bound.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -40,13 +40,13 @@ error: unsatisfied lifetime constraints\n   --> $DIR/must_outlive_least_region_or_bound.rs:16:44\n    |\n LL | fn explicit<'a>(x: &'a i32) -> impl Copy { x }\n-   |             -- lifetime `'a` defined here  ^ return requires that `'a` must outlive `'static`\n+   |             -- lifetime `'a` defined here  ^ returning this value requires that `'a` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/must_outlive_least_region_or_bound.rs:22:69\n    |\n LL | fn with_bound<'a>(x: &'a i32) -> impl LifetimeTrait<'a> + 'static { x }\n-   |               -- lifetime `'a` defined here                         ^ return requires that `'a` must outlive `'static`\n+   |               -- lifetime `'a` defined here                         ^ returning this value requires that `'a` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/must_outlive_least_region_or_bound.rs:29:5\n@@ -57,7 +57,7 @@ LL | fn move_lifetime_into_fn<'a, 'b>(x: &'a u32, y: &'b u32) -> impl Fn(&'a u32\n    |                          lifetime `'a` defined here\n LL |     //~^ ERROR lifetime mismatch\n LL |     move |_| println!(\"{}\", y)\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ function was supposed to return data with lifetime `'b` but it is returning data with lifetime `'a`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'b`\n \n error[E0310]: the parameter type `T` may not live long enough\n   --> $DIR/must_outlive_least_region_or_bound.rs:34:5"}, {"sha": "d3f5cdca1759e47a04642f7a6ff7ef97f3b72f98", "filename": "src/test/ui/lub-if.nll.stderr", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Flub-if.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Flub-if.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flub-if.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -11,20 +11,22 @@ LL |         s  //~ ERROR E0312\n    |         ^\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/lub-if.rs:34:8\n+  --> $DIR/lub-if.rs:38:9\n    |\n LL | pub fn opt_str2<'a>(maybestr: &'a Option<String>) -> &'static str {\n    |                 -- lifetime `'a` defined here\n-LL |     if maybestr.is_none() {\n-   |        ^^^^^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n+...\n+LL |         s  //~ ERROR E0312\n+   |         ^ returning this value requires that `'a` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/lub-if.rs:43:8\n+  --> $DIR/lub-if.rs:45:9\n    |\n LL | pub fn opt_str3<'a>(maybestr: &'a Option<String>) -> &'static str {\n    |                 -- lifetime `'a` defined here\n-LL |     if maybestr.is_some() {\n-   |        ^^^^^^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n+...\n+LL |         s  //~ ERROR E0312\n+   |         ^ returning this value requires that `'a` must outlive `'static`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "bbddcc7d8b36a4b77262658ab4483953c01bb8f8", "filename": "src/test/ui/lub-match.nll.stderr", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Flub-match.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Flub-match.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flub-match.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -11,20 +11,22 @@ LL |             s //~ ERROR E0312\n    |             ^\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/lub-match.rs:36:11\n+  --> $DIR/lub-match.rs:40:13\n    |\n LL | pub fn opt_str2<'a>(maybestr: &'a Option<String>) -> &'static str {\n    |                 -- lifetime `'a` defined here\n-LL |     match *maybestr {\n-   |           ^^^^^^^^^ requires that `'a` must outlive `'static`\n+...\n+LL |             s //~ ERROR E0312\n+   |             ^ returning this value requires that `'a` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/lub-match.rs:46:11\n+  --> $DIR/lub-match.rs:49:13\n    |\n LL | pub fn opt_str3<'a>(maybestr: &'a Option<String>) -> &'static str {\n    |                 -- lifetime `'a` defined here\n-LL |     match *maybestr {\n-   |           ^^^^^^^^^ requires that `'a` must outlive `'static`\n+...\n+LL |             s //~ ERROR E0312\n+   |             ^ returning this value requires that `'a` must outlive `'static`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "26fcaa65d77f9d37df687db9cc267d5ce3c1f99b", "filename": "src/test/ui/match/match-ref-mut-invariance.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fmatch%2Fmatch-ref-mut-invariance.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fmatch%2Fmatch-ref-mut-invariance.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-ref-mut-invariance.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -15,7 +15,7 @@ LL |       fn bar<'a>(&'a mut self) -> &'a mut &'a i32 {\n    | |            lifetime `'a` defined here\n LL | |         match self.0 { ref mut x => x } //~ ERROR mismatched types\n LL | |     }\n-   | |_____^ requires that `'a` must outlive `'b`\n+   | |_____^ returning this value requires that `'a` must outlive `'b`\n \n error: aborting due to previous error\n "}, {"sha": "b1ec6adee9ea0a6bccff129062f1b020acf71b64", "filename": "src/test/ui/match/match-ref-mut-let-invariance.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fmatch%2Fmatch-ref-mut-let-invariance.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fmatch%2Fmatch-ref-mut-let-invariance.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-ref-mut-let-invariance.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -16,7 +16,7 @@ LL |       fn bar<'a>(&'a mut self) -> &'a mut &'a i32 {\n LL | |         let ref mut x = self.0;\n LL | |         x //~ ERROR mismatched types\n LL | |     }\n-   | |_____^ requires that `'a` must outlive `'b`\n+   | |_____^ returning this value requires that `'a` must outlive `'b`\n \n error: aborting due to previous error\n "}, {"sha": "0d21dddc7c9bcb26d43f996c9bb911e1b14165db", "filename": "src/test/ui/object-lifetime/object-lifetime-default-elision.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-elision.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -18,7 +18,7 @@ LL | |     // for<'a,'b,'c>fn(&'a (SomeTrait+'c)) -> &'b (SomeTrait+'a)\n ...  |\n LL | |         //~| ERROR cannot infer\n LL | | }\n-   | |_^ return requires that `'a` must outlive `'b`\n+   | |_^ returning this value requires that `'a` must outlive `'b`\n \n error: aborting due to previous error\n "}, {"sha": "14a3cbf9e2948f2f3ef03166eca2b60aebd77e9d", "filename": "src/test/ui/object-lifetime/object-lifetime-default-mybox.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-mybox.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -19,7 +19,7 @@ LL | fn load1<'a,'b>(a: &'a MyBox<SomeTrait>,\n    |          lifetime `'a` defined here\n ...\n LL |     a //~ ERROR lifetime mismatch\n-   |     ^ function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'b`\n+   |     ^ function was supposed to return data with lifetime `'b` but it is returning data with lifetime `'a`\n \n error: borrowed data escapes outside of function\n   --> $DIR/object-lifetime-default-mybox.rs:41:5"}, {"sha": "135a115cecfa5d9e2e641150d76a8a70403a674e", "filename": "src/test/ui/regions/region-object-lifetime-2.nll.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-2.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -4,13 +4,15 @@ warning: not reporting region error due to nll\n LL |     x.borrowed() //~ ERROR cannot infer\n    |       ^^^^^^^^\n \n-error: borrowed data escapes outside of function\n+error: unsatisfied lifetime constraints\n   --> $DIR/region-object-lifetime-2.rs:20:5\n    |\n LL | fn borrowed_receiver_different_lifetimes<'a,'b>(x: &'a Foo) -> &'b () {\n-   |                                                 - `x` is a reference that is only valid in the function body\n+   |                                          -- -- lifetime `'b` defined here\n+   |                                          |\n+   |                                          lifetime `'a` defined here\n LL |     x.borrowed() //~ ERROR cannot infer\n-   |     ^^^^^^^^^^^^ `x` escapes the function body here\n+   |     ^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'b`\n \n error: aborting due to previous error\n "}, {"sha": "8338cf6a6069c5e79dc49298735e0600a68b236b", "filename": "src/test/ui/regions/region-object-lifetime-in-coercion.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -67,7 +67,7 @@ LL |   fn d<'a,'b>(v: &'a [u8]) -> Box<Foo+'b> {\n LL | |     Box::new(v)\n LL | |         //~^ ERROR cannot infer an appropriate lifetime due to conflicting\n LL | | }\n-   | |_^ return requires that `'a` must outlive `'b`\n+   | |_^ returning this value requires that `'a` must outlive `'b`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "a59a485f444cab821823919716bbc257d15b1f05", "filename": "src/test/ui/regions/regions-bounds.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-bounds.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-bounds.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-bounds.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -18,7 +18,7 @@ LL | fn a_fn1<'a,'b>(e: an_enum<'a>) -> an_enum<'b> {\n    |          |\n    |          lifetime `'a` defined here\n LL |     return e; //~ ERROR mismatched types\n-   |            ^ return requires that `'a` must outlive `'b`\n+   |            ^ returning this value requires that `'a` must outlive `'b`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/regions-bounds.rs:23:12\n@@ -28,7 +28,7 @@ LL | fn a_fn3<'a,'b>(e: a_class<'a>) -> a_class<'b> {\n    |          |\n    |          lifetime `'a` defined here\n LL |     return e; //~ ERROR mismatched types\n-   |            ^ return requires that `'a` must outlive `'b`\n+   |            ^ returning this value requires that `'a` must outlive `'b`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "701becc24d7184ebb9bb67d4725fcc9199807687", "filename": "src/test/ui/regions/regions-close-object-into-object-2.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -13,7 +13,7 @@ LL |   fn g<'a, T: 'static>(v: Box<A<T>+'a>) -> Box<X+'static> {\n    | |      lifetime `'a` defined here\n LL | |     box B(&*v) as Box<X> //~ ERROR cannot infer\n LL | | }\n-   | |_^ return requires that `'a` must outlive `'static`\n+   | |_^ returning this value requires that `'a` must outlive `'static`\n \n error[E0597]: `*v` does not live long enough\n   --> $DIR/regions-close-object-into-object-2.rs:20:11"}, {"sha": "e01ae145e90d92977fffd26c1f754f7c6132db51", "filename": "src/test/ui/regions/regions-close-object-into-object-4.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -37,7 +37,7 @@ LL |   fn i<'a, T, U>(v: Box<A<U>+'a>) -> Box<X+'static> {\n    | |      lifetime `'a` defined here\n LL | |     box B(&*v) as Box<X> //~ ERROR cannot infer\n LL | | }\n-   | |_^ return requires that `'a` must outlive `'static`\n+   | |_^ returning this value requires that `'a` must outlive `'static`\n \n error[E0310]: the parameter type `U` may not live long enough\n   --> $DIR/regions-close-object-into-object-4.rs:20:5"}, {"sha": "462e4152ce3bad74137544ad29a9c464c7fb34d0", "filename": "src/test/ui/regions/regions-creating-enums3.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-creating-enums3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-creating-enums3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-creating-enums3.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -5,14 +5,14 @@ LL |     ast::add(x, y) //~ ERROR 17:5: 17:19: lifetime mismatch [E0623]\n    |     ^^^^^^^^\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/regions-creating-enums3.rs:17:14\n+  --> $DIR/regions-creating-enums3.rs:17:5\n    |\n LL | fn mk_add_bad1<'a,'b>(x: &'a ast<'a>, y: &'b ast<'b>) -> ast<'a> {\n    |                -- -- lifetime `'b` defined here\n    |                |\n    |                lifetime `'a` defined here\n LL |     ast::add(x, y) //~ ERROR 17:5: 17:19: lifetime mismatch [E0623]\n-   |              ^ requires that `'b` must outlive `'a`\n+   |     ^^^^^^^^^^^^^^ function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'b`\n \n error: aborting due to previous error\n "}, {"sha": "b82fdfd5c65c41e6b6255a6dbc9deb5fe230931a", "filename": "src/test/ui/regions/regions-creating-enums4.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-creating-enums4.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-creating-enums4.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-creating-enums4.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -5,14 +5,14 @@ LL |     ast::add(x, y) //~ ERROR cannot infer\n    |     ^^^^^^^^\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/regions-creating-enums4.rs:17:14\n+  --> $DIR/regions-creating-enums4.rs:17:5\n    |\n LL | fn mk_add_bad2<'a,'b>(x: &'a ast<'a>, y: &'a ast<'a>, z: &ast) -> ast<'b> {\n    |                -- -- lifetime `'b` defined here\n    |                |\n    |                lifetime `'a` defined here\n LL |     ast::add(x, y) //~ ERROR cannot infer\n-   |              ^ requires that `'a` must outlive `'b`\n+   |     ^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'b`\n \n error: aborting due to previous error\n "}, {"sha": "cd2da8f3c6e72a2cb3f8a4ba1bad55c37d0a914e", "filename": "src/test/ui/regions/regions-early-bound-error-method.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-early-bound-error-method.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-early-bound-error-method.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-early-bound-error-method.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -12,7 +12,7 @@ LL | impl<'a> Box<'a> {\n LL |     fn or<'b,G:GetRef<'b>>(&self, g2: G) -> &'a isize {\n    |           -- lifetime `'b` defined here\n LL |         g2.get()\n-   |         ^^^^^^^^ argument requires that `'b` must outlive `'a`\n+   |         ^^^^^^^^ returning this value requires that `'b` must outlive `'a`\n \n error: aborting due to previous error\n "}, {"sha": "7ba615117353038445fea4812c2bec417d4f00b9", "filename": "src/test/ui/regions/regions-early-bound-error.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-early-bound-error.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-early-bound-error.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-early-bound-error.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -12,7 +12,7 @@ LL | fn get<'a,'b,G:GetRef<'a, isize>>(g1: G, b: &'b isize) -> &'b isize {\n    |        |\n    |        lifetime `'a` defined here\n LL |     g1.get()\n-   |     ^^^^^^^^ argument requires that `'a` must outlive `'b`\n+   |     ^^^^^^^^ function was supposed to return data with lifetime `'b` but it is returning data with lifetime `'a`\n \n error: aborting due to previous error\n "}, {"sha": "4603d1516e0f79fdda51c9948214fdd8ab51b619", "filename": "src/test/ui/regions/regions-escape-method.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-escape-method.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-escape-method.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-escape-method.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -8,7 +8,7 @@ error: unsatisfied lifetime constraints\n   --> $DIR/regions-escape-method.rs:25:13\n    |\n LL |     s.f(|p| p) //~ ERROR cannot infer\n-   |          -- ^ return requires that `'1` must outlive `'2`\n+   |          -- ^ returning this value requires that `'1` must outlive `'2`\n    |          ||\n    |          |return type of closure is &'2 i32\n    |          has type `&'1 i32`"}, {"sha": "381f46286478026524162c16b91109af723065fa", "filename": "src/test/ui/regions/regions-escape-via-trait-or-not.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-escape-via-trait-or-not.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-escape-via-trait-or-not.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-escape-via-trait-or-not.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -8,7 +8,7 @@ error: unsatisfied lifetime constraints\n   --> $DIR/regions-escape-via-trait-or-not.rs:28:14\n    |\n LL |     with(|o| o) //~ ERROR cannot infer\n-   |           -- ^ return requires that `'1` must outlive `'2`\n+   |           -- ^ returning this value requires that `'1` must outlive `'2`\n    |           ||\n    |           |return type of closure is &'2 isize\n    |           has type `&'1 isize`"}, {"sha": "3ef1be10f0fdc02f6a393f3d665f0bbb4ed4de78", "filename": "src/test/ui/regions/regions-free-region-ordering-callee.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-callee.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-callee.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-callee.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -19,7 +19,7 @@ LL | fn ordering2<'a, 'b>(x: &'a &'b usize, y: &'a usize) -> &'b usize {\n    |              lifetime `'a` defined here\n LL |     // However, it is not safe to assume that 'b <= 'a\n LL |     &*y //~ ERROR 23:5: 23:8: lifetime mismatch [E0623]\n-   |     ^^^ requires that `'a` must outlive `'b`\n+   |     ^^^ function was supposed to return data with lifetime `'b` but it is returning data with lifetime `'a`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/regions-free-region-ordering-callee.rs:28:24"}, {"sha": "0bc4bf4a951e8c6bdf811ecbafd2d0210fa6ada6", "filename": "src/test/ui/regions/regions-free-region-ordering-incorrect.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-incorrect.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-incorrect.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-free-region-ordering-incorrect.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -15,7 +15,7 @@ LL | /     match self.next {\n LL | |       Some(ref next) => next.get(),\n LL | |       None => &self.val //~ ERROR cannot infer\n LL | |     }\n-   | |_____^ requires that `'a` must outlive `'b`\n+   | |_____^ returning this value requires that `'a` must outlive `'b`\n \n error: aborting due to previous error\n "}, {"sha": "a82ce96bfbfbf6c6fd6725048330b9e74e5c2476", "filename": "src/test/ui/regions/regions-glb-free-free.nll.stderr", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-glb-free-free.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-glb-free-free.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-glb-free-free.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -5,13 +5,17 @@ LL |             Flag { //~ ERROR 25:13: 30:14: explicit lifetime required in th\n    |             ^^^^\n \n error[E0621]: explicit lifetime required in the type of `s`\n-  --> $DIR/regions-glb-free-free.rs:26:23\n+  --> $DIR/regions-glb-free-free.rs:25:13\n    |\n-LL |         pub fn set_desc(self, s: &str) -> Flag<'a> {\n-   |                                  ---- help: add explicit lifetime `'a` to the type of `s`: `&'a str`\n-LL |             Flag { //~ ERROR 25:13: 30:14: explicit lifetime required in the type of `s` [E0621]\n-LL |                 name: self.name,\n-   |                       ^^^^^^^^^ lifetime `'a` required\n+LL |           pub fn set_desc(self, s: &str) -> Flag<'a> {\n+   |                                    ---- help: add explicit lifetime `'a` to the type of `s`: `&'a str`\n+LL | /             Flag { //~ ERROR 25:13: 30:14: explicit lifetime required in the type of `s` [E0621]\n+LL | |                 name: self.name,\n+LL | |                 desc: s,\n+LL | |                 max_count: self.max_count,\n+LL | |                 value: self.value\n+LL | |             }\n+   | |_____________^ lifetime `'a` required\n \n error: aborting due to previous error\n "}, {"sha": "6069aca62ec5e5d2c195d20e7df5cf898b53b079", "filename": "src/test/ui/regions/regions-infer-call-3.nll.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-infer-call-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-infer-call-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-call-3.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -4,13 +4,14 @@ warning: not reporting region error due to nll\n LL |     let z = with(|y| { select(x, y) });\n    |                        ^^^^^^^^^^^^\n \n-error: borrowed data escapes outside of closure\n+error: unsatisfied lifetime constraints\n   --> $DIR/regions-infer-call-3.rs:18:24\n    |\n LL |     let z = with(|y| { select(x, y) });\n-   |                   -    ^^^^^^^^^^^^ `y` escapes the closure body here\n-   |                   |\n-   |                   `y` is a reference that is only valid in the closure body\n+   |                   --   ^^^^^^^^^^^^ returning this value requires that `'1` must outlive `'2`\n+   |                   ||\n+   |                   |return type of closure is &'2 isize\n+   |                   has type `&'1 isize`\n \n error: aborting due to previous error\n "}, {"sha": "cf754167b53ec0fa5120d9851af94af594980649", "filename": "src/test/ui/regions/regions-infer-invariance-due-to-decl.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-decl.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-decl.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-decl.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -10,7 +10,7 @@ error: unsatisfied lifetime constraints\n LL | fn to_longer_lifetime<'r>(b_isize: invariant<'r>) -> invariant<'static> {\n    |                       -- lifetime `'r` defined here\n LL |     b_isize //~ ERROR mismatched types\n-   |     ^^^^^^^ return requires that `'r` must outlive `'static`\n+   |     ^^^^^^^ returning this value requires that `'r` must outlive `'static`\n \n error: aborting due to previous error\n "}, {"sha": "6cd76f26ebec74d67a46c45392f2d1ad69ee2a0d", "filename": "src/test/ui/regions/regions-infer-invariance-due-to-mutability-3.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-3.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -10,7 +10,7 @@ error: unsatisfied lifetime constraints\n LL | fn to_longer_lifetime<'r>(b_isize: invariant<'r>) -> invariant<'static> {\n    |                       -- lifetime `'r` defined here\n LL |     b_isize //~ ERROR mismatched types\n-   |     ^^^^^^^ return requires that `'r` must outlive `'static`\n+   |     ^^^^^^^ returning this value requires that `'r` must outlive `'static`\n \n error: aborting due to previous error\n "}, {"sha": "1e1daa59019bd828caa7e8ff855a586c2fe5e924", "filename": "src/test/ui/regions/regions-infer-invariance-due-to-mutability-4.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-4.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-4.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-invariance-due-to-mutability-4.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -10,7 +10,7 @@ error: unsatisfied lifetime constraints\n LL | fn to_longer_lifetime<'r>(b_isize: Invariant<'r>) -> Invariant<'static> {\n    |                       -- lifetime `'r` defined here\n LL |     b_isize //~ ERROR mismatched types\n-   |     ^^^^^^^ return requires that `'r` must outlive `'static`\n+   |     ^^^^^^^ returning this value requires that `'r` must outlive `'static`\n \n error: aborting due to previous error\n "}, {"sha": "072be9b5a994ec42902a93d5e4dc487d99c18909", "filename": "src/test/ui/regions/regions-infer-not-param.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-infer-not-param.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-infer-not-param.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-infer-not-param.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -14,23 +14,23 @@ error: unsatisfied lifetime constraints\n   --> $DIR/regions-infer-not-param.rs:25:54\n    |\n LL | fn take_direct<'a,'b>(p: direct<'a>) -> direct<'b> { p } //~ ERROR mismatched types\n-   |                -- -- lifetime `'b` defined here      ^ return requires that `'a` must outlive `'b`\n+   |                -- -- lifetime `'b` defined here      ^ returning this value requires that `'a` must outlive `'b`\n    |                |\n    |                lifetime `'a` defined here\n \n error: unsatisfied lifetime constraints\n   --> $DIR/regions-infer-not-param.rs:29:63\n    |\n LL | fn take_indirect2<'a,'b>(p: indirect2<'a>) -> indirect2<'b> { p } //~ ERROR mismatched types\n-   |                   -- -- lifetime `'b` defined here            ^ function was supposed to return data with lifetime `'b` but it is returning data with lifetime `'a`\n+   |                   -- -- lifetime `'b` defined here            ^ function was supposed to return data with lifetime `'a` but it is returning data with lifetime `'b`\n    |                   |\n    |                   lifetime `'a` defined here\n \n error: unsatisfied lifetime constraints\n   --> $DIR/regions-infer-not-param.rs:29:63\n    |\n LL | fn take_indirect2<'a,'b>(p: indirect2<'a>) -> indirect2<'b> { p } //~ ERROR mismatched types\n-   |                   -- -- lifetime `'b` defined here            ^ return requires that `'a` must outlive `'b`\n+   |                   -- -- lifetime `'b` defined here            ^ returning this value requires that `'a` must outlive `'b`\n    |                   |\n    |                   lifetime `'a` defined here\n "}, {"sha": "37454ff78a126d10c071024ef175d2c64178fcd6", "filename": "src/test/ui/regions/regions-reborrow-from-shorter-mut-ref-mut-ref.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-reborrow-from-shorter-mut-ref-mut-ref.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-reborrow-from-shorter-mut-ref-mut-ref.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-reborrow-from-shorter-mut-ref-mut-ref.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -14,7 +14,7 @@ LL |   fn copy_borrowed_ptr<'a, 'b, 'c>(p: &'a mut &'b mut &'c mut isize) -> &'b\n    | |                      lifetime `'a` defined here\n LL | |     &mut ***p //~ ERROR 14:5: 14:14: lifetime mismatch [E0623]\n LL | | }\n-   | |_^ requires that `'a` must outlive `'b`\n+   | |_^ function was supposed to return data with lifetime `'b` but it is returning data with lifetime `'a`\n \n error: aborting due to previous error\n "}, {"sha": "455ee6f794936ffda9e812e35ae6d1ab1ace2966", "filename": "src/test/ui/regions/regions-reborrow-from-shorter-mut-ref.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-reborrow-from-shorter-mut-ref.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-reborrow-from-shorter-mut-ref.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-reborrow-from-shorter-mut-ref.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -14,7 +14,7 @@ LL |   fn copy_borrowed_ptr<'a, 'b>(p: &'a mut &'b mut isize) -> &'b mut isize {\n    | |                      lifetime `'a` defined here\n LL | |     &mut **p //~ ERROR 16:5: 16:13: lifetime mismatch [E0623]\n LL | | }\n-   | |_^ requires that `'a` must outlive `'b`\n+   | |_^ function was supposed to return data with lifetime `'b` but it is returning data with lifetime `'a`\n \n error: aborting due to previous error\n "}, {"sha": "29810f5128c9f0092e4c39cd22bcbe01111a32f1", "filename": "src/test/ui/regions/regions-ret-borrowed-1.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-ret-borrowed-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-ret-borrowed-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-ret-borrowed-1.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -8,7 +8,7 @@ error: unsatisfied lifetime constraints\n   --> $DIR/regions-ret-borrowed-1.rs:20:14\n    |\n LL |     with(|o| o)\n-   |           -- ^ return requires that `'1` must outlive `'2`\n+   |           -- ^ returning this value requires that `'1` must outlive `'2`\n    |           ||\n    |           |return type of closure is &'2 isize\n    |           has type `&'1 isize`"}, {"sha": "ab70e6a663039ef46570e85bf227481e917a44f7", "filename": "src/test/ui/regions/regions-ret-borrowed.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-ret-borrowed.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-ret-borrowed.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-ret-borrowed.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -8,7 +8,7 @@ error: unsatisfied lifetime constraints\n   --> $DIR/regions-ret-borrowed.rs:23:14\n    |\n LL |     with(|o| o)\n-   |           -- ^ return requires that `'1` must outlive `'2`\n+   |           -- ^ returning this value requires that `'1` must outlive `'2`\n    |           ||\n    |           |return type of closure is &'2 isize\n    |           has type `&'1 isize`"}, {"sha": "850226f60cf7014ec1a003aea4f70d8d029cfcc7", "filename": "src/test/ui/regions/regions-return-ref-to-upvar-issue-17403.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-return-ref-to-upvar-issue-17403.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-return-ref-to-upvar-issue-17403.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-return-ref-to-upvar-issue-17403.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -8,7 +8,7 @@ error: unsatisfied lifetime constraints\n   --> $DIR/regions-return-ref-to-upvar-issue-17403.rs:17:24\n    |\n LL |         let mut f = || &mut x; //~ ERROR cannot infer\n-   |                     -- ^^^^^^ return requires that `'1` must outlive `'2`\n+   |                     -- ^^^^^^ returning this value requires that `'1` must outlive `'2`\n    |                     ||\n    |                     |return type of closure is &'2 mut i32\n    |                     lifetime `'1` represents this closure's body"}, {"sha": "326111aab7ef0730be0a8aaaf7ca06d7edee05d2", "filename": "src/test/ui/regions/regions-static-bound.ll.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.ll.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.ll.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.ll.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -22,7 +22,7 @@ error: unsatisfied lifetime constraints\n LL | fn static_id_wrong_way<'a>(t: &'a ()) -> &'static () where 'static: 'a {\n    |                        -- lifetime `'a` defined here\n LL |     t //[ll]~ ERROR E0312\n-   |     ^ return requires that `'a` must outlive `'static`\n+   |     ^ returning this value requires that `'a` must outlive `'static`\n \n error[E0621]: explicit lifetime required in the type of `u`\n   --> $DIR/regions-static-bound.rs:25:5"}, {"sha": "326111aab7ef0730be0a8aaaf7ca06d7edee05d2", "filename": "src/test/ui/regions/regions-static-bound.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-static-bound.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -22,7 +22,7 @@ error: unsatisfied lifetime constraints\n LL | fn static_id_wrong_way<'a>(t: &'a ()) -> &'static () where 'static: 'a {\n    |                        -- lifetime `'a` defined here\n LL |     t //[ll]~ ERROR E0312\n-   |     ^ return requires that `'a` must outlive `'static`\n+   |     ^ returning this value requires that `'a` must outlive `'static`\n \n error[E0621]: explicit lifetime required in the type of `u`\n   --> $DIR/regions-static-bound.rs:25:5"}, {"sha": "99bee4a36c1d1c5dfcd13137dd0fb4935d8d8a3f", "filename": "src/test/ui/regions/regions-trait-object-subtyping.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-trait-object-subtyping.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fregions%2Fregions-trait-object-subtyping.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-trait-object-subtyping.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -22,7 +22,7 @@ LL | |     // Without knowing 'a:'b, we can't coerce\n LL | |     x //~ ERROR lifetime bound not satisfied\n LL | |      //~^ ERROR cannot infer an appropriate lifetime\n LL | | }\n-   | |_^ return requires that `'a` must outlive `'b`\n+   | |_^ returning this value requires that `'a` must outlive `'b`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/regions-trait-object-subtyping.rs:32:5\n@@ -33,7 +33,7 @@ LL | fn foo4<'a:'b,'b>(x: Wrapper<&'a mut Dummy>) -> Wrapper<&'b mut Dummy> {\n    |         lifetime `'a` defined here\n LL |     // We can't coerce because it is packed in `Wrapper`\n LL |     x //~ ERROR mismatched types\n-   |     ^ return requires that `'b` must outlive `'a`\n+   |     ^ returning this value requires that `'b` must outlive `'a`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "877036530ed19c57e6f132ada81390fe93a637f4", "filename": "src/test/ui/variance/variance-btree-invariant-types.nll.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fvariance%2Fvariance-btree-invariant-types.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fvariance%2Fvariance-btree-invariant-types.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-btree-invariant-types.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -76,31 +76,31 @@ error: unsatisfied lifetime constraints\n LL | fn iter_cov_key<'a, 'new>(v: IterMut<'a, &'static (), ()>) -> IterMut<'a, &'new (), ()> {\n    |                     ---- lifetime `'new` defined here\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'new` must outlive `'static`\n+   |     ^ returning this value requires that `'new` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/variance-btree-invariant-types.rs:19:5\n    |\n LL | fn iter_cov_val<'a, 'new>(v: IterMut<'a, (), &'static ()>) -> IterMut<'a, (), &'new ()> {\n    |                     ---- lifetime `'new` defined here\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'new` must outlive `'static`\n+   |     ^ returning this value requires that `'new` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/variance-btree-invariant-types.rs:22:5\n    |\n LL | fn iter_contra_key<'a, 'new>(v: IterMut<'a, &'new (), ()>) -> IterMut<'a, &'static (), ()> {\n    |                        ---- lifetime `'new` defined here\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'new` must outlive `'static`\n+   |     ^ returning this value requires that `'new` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/variance-btree-invariant-types.rs:25:5\n    |\n LL | fn iter_contra_val<'a, 'new>(v: IterMut<'a, (), &'new ()>) -> IterMut<'a, (), &'static ()> {\n    |                        ---- lifetime `'new` defined here\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'new` must outlive `'static`\n+   |     ^ returning this value requires that `'new` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/variance-btree-invariant-types.rs:30:5\n@@ -109,7 +109,7 @@ LL | fn occ_cov_key<'a, 'new>(v: OccupiedEntry<'a, &'static (), ()>)\n    |                    ---- lifetime `'new` defined here\n LL |                          -> OccupiedEntry<'a, &'new (), ()> {\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'new` must outlive `'static`\n+   |     ^ returning this value requires that `'new` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/variance-btree-invariant-types.rs:34:5\n@@ -118,7 +118,7 @@ LL | fn occ_cov_val<'a, 'new>(v: OccupiedEntry<'a, (), &'static ()>)\n    |                    ---- lifetime `'new` defined here\n LL |                          -> OccupiedEntry<'a, (), &'new ()> {\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'new` must outlive `'static`\n+   |     ^ returning this value requires that `'new` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/variance-btree-invariant-types.rs:38:5\n@@ -127,7 +127,7 @@ LL | fn occ_contra_key<'a, 'new>(v: OccupiedEntry<'a, &'new (), ()>)\n    |                       ---- lifetime `'new` defined here\n LL |                             -> OccupiedEntry<'a, &'static (), ()> {\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'new` must outlive `'static`\n+   |     ^ returning this value requires that `'new` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/variance-btree-invariant-types.rs:42:5\n@@ -136,7 +136,7 @@ LL | fn occ_contra_val<'a, 'new>(v: OccupiedEntry<'a, (), &'new ()>)\n    |                       ---- lifetime `'new` defined here\n LL |                             -> OccupiedEntry<'a, (), &'static ()> {\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'new` must outlive `'static`\n+   |     ^ returning this value requires that `'new` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/variance-btree-invariant-types.rs:47:5\n@@ -145,7 +145,7 @@ LL | fn vac_cov_key<'a, 'new>(v: VacantEntry<'a, &'static (), ()>)\n    |                    ---- lifetime `'new` defined here\n LL |                          -> VacantEntry<'a, &'new (), ()> {\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'new` must outlive `'static`\n+   |     ^ returning this value requires that `'new` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/variance-btree-invariant-types.rs:51:5\n@@ -154,7 +154,7 @@ LL | fn vac_cov_val<'a, 'new>(v: VacantEntry<'a, (), &'static ()>)\n    |                    ---- lifetime `'new` defined here\n LL |                          -> VacantEntry<'a, (), &'new ()> {\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'new` must outlive `'static`\n+   |     ^ returning this value requires that `'new` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/variance-btree-invariant-types.rs:55:5\n@@ -163,7 +163,7 @@ LL | fn vac_contra_key<'a, 'new>(v: VacantEntry<'a, &'new (), ()>)\n    |                       ---- lifetime `'new` defined here\n LL |                             -> VacantEntry<'a, &'static (), ()> {\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'new` must outlive `'static`\n+   |     ^ returning this value requires that `'new` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/variance-btree-invariant-types.rs:59:5\n@@ -172,7 +172,7 @@ LL | fn vac_contra_val<'a, 'new>(v: VacantEntry<'a, (), &'new ()>)\n    |                       ---- lifetime `'new` defined here\n LL |                             -> VacantEntry<'a, (), &'static ()> {\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'new` must outlive `'static`\n+   |     ^ returning this value requires that `'new` must outlive `'static`\n \n error: aborting due to 12 previous errors\n "}, {"sha": "643b8587bea94595ea842c36d38d325b984cd1c5", "filename": "src/test/ui/variance/variance-use-contravariant-struct-1.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-contravariant-struct-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-contravariant-struct-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-contravariant-struct-1.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -13,7 +13,7 @@ LL | fn foo<'min,'max>(v: SomeStruct<&'max ()>)\n    |        lifetime `'min` defined here\n ...\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'min` must outlive `'max`\n+   |     ^ returning this value requires that `'min` must outlive `'max`\n \n error: aborting due to previous error\n "}, {"sha": "f0c9c44794df2807b49b23cc8da55c72768c995b", "filename": "src/test/ui/variance/variance-use-covariant-struct-1.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-covariant-struct-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-covariant-struct-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-covariant-struct-1.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -13,7 +13,7 @@ LL | fn foo<'min,'max>(v: SomeStruct<&'min ()>)\n    |        lifetime `'min` defined here\n ...\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'min` must outlive `'max`\n+   |     ^ returning this value requires that `'min` must outlive `'max`\n \n error: aborting due to previous error\n "}, {"sha": "8b6d6100af48e8a046e82edadc51ab1d36c60cd1", "filename": "src/test/ui/variance/variance-use-invariant-struct-1.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-invariant-struct-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-invariant-struct-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-use-invariant-struct-1.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -19,7 +19,7 @@ LL | fn foo<'min,'max>(v: SomeStruct<&'max ()>)\n    |        lifetime `'min` defined here\n ...\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'min` must outlive `'max`\n+   |     ^ returning this value requires that `'min` must outlive `'max`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/variance-use-invariant-struct-1.rs:29:5\n@@ -30,7 +30,7 @@ LL | fn bar<'min,'max>(v: SomeStruct<&'min ()>)\n    |        lifetime `'min` defined here\n ...\n LL |     v //~ ERROR mismatched types\n-   |     ^ return requires that `'min` must outlive `'max`\n+   |     ^ returning this value requires that `'min` must outlive `'max`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "e563a4ffc56899b84417bd019d8197d499ac8f58", "filename": "src/test/ui/wf/wf-static-method.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a19db49c863f28103a3ae64423b88574ccf700ff/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.nll.stderr?ref=a19db49c863f28103a3ae64423b88574ccf700ff", "patch": "@@ -37,7 +37,7 @@ LL | impl<'a, 'b> Foo<'a, 'b, Evil<'a, 'b>> for () {\n    |      lifetime `'a` defined here\n ...\n LL |         u //~ ERROR E0312\n-   |         ^ return requires that `'b` must outlive `'a`\n+   |         ^ returning this value requires that `'b` must outlive `'a`\n \n error: unsatisfied lifetime constraints\n   --> $DIR/wf-static-method.rs:43:9\n@@ -48,7 +48,7 @@ LL | impl<'a, 'b> Evil<'a, 'b> {\n    |      lifetime `'a` defined here\n LL |     fn inherent_evil(u: &'b u32) -> &'a u32 {\n LL |         u //~ ERROR E0312\n-   |         ^ return requires that `'b` must outlive `'a`\n+   |         ^ returning this value requires that `'b` must outlive `'a`\n \n error: aborting due to 2 previous errors\n "}]}