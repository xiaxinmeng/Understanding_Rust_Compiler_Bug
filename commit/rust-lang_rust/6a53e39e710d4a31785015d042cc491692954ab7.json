{"sha": "6a53e39e710d4a31785015d042cc491692954ab7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNTNlMzllNzEwZDRhMzE3ODUwMTVkMDQyY2M0OTE2OTI5NTRhYjc=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-05-10T18:55:32Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-14T00:35:12Z"}, "message": "Correct capitalization of \"Option\".", "tree": {"sha": "892b61fa3fcb7799e10ecba61d54837da4cbdd11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/892b61fa3fcb7799e10ecba61d54837da4cbdd11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a53e39e710d4a31785015d042cc491692954ab7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a53e39e710d4a31785015d042cc491692954ab7", "html_url": "https://github.com/rust-lang/rust/commit/6a53e39e710d4a31785015d042cc491692954ab7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a53e39e710d4a31785015d042cc491692954ab7/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c2979e26f23739b62fcda7500d4c5eac092c42c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c2979e26f23739b62fcda7500d4c5eac092c42c", "html_url": "https://github.com/rust-lang/rust/commit/7c2979e26f23739b62fcda7500d4c5eac092c42c"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "d2bc657880c833d263e36d5cd89d244fe0677635", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6a53e39e710d4a31785015d042cc491692954ab7/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a53e39e710d4a31785015d042cc491692954ab7/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=6a53e39e710d4a31785015d042cc491692954ab7", "patch": "@@ -372,12 +372,12 @@ type _obj = rec(vec[obj_field] fields,\n                 vec[@method] methods,\n                 option::t[@method] dtor);\n \n-\n-// Hmm.  An anon_obj might extend an existing object, in which case it'll\n-// probably add fields and methods.\n-type anon_obj = rec(option.t[vec[obj_field]] fields,\n-                    vec[@method] methods,\n-                    option.t[ident] with_obj);\n+type anon_obj = rec(\n+    // New fields and methods, if they exist.\n+    Option.t[vec[obj_field]] fields,\n+    vec[@method] methods,\n+    // with_obj: the original object being extended, if it exists.\n+    Option.t[ident] with_obj);\n \n tag mod_index_entry {\n     mie_view_item(@view_item);"}, {"sha": "cb7435d8132c9a84952bb34bc37ba61d286dc796", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6a53e39e710d4a31785015d042cc491692954ab7/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a53e39e710d4a31785015d042cc491692954ab7/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=6a53e39e710d4a31785015d042cc491692954ab7", "patch": "@@ -795,7 +795,6 @@ fn parse_bottom_expr(parser p) -> @ast::expr {\n             } else {\n                 unexpected(p, p.peek());\n             }\n-\n         }\n \n         ex = ast::expr_rec(fields, base, p.get_ann());\n@@ -836,9 +835,9 @@ fn parse_bottom_expr(parser p) -> @ast::expr {\n         hi = p.get_hi_pos();\n         expect(p, token.RBRACE);\n \n-        // fields and methods may be *additional* or *overriding* fields\n-        // and methods if there's a with_obj, or they may be the *only*\n-        // fields and methods if there's no with_obj.\n+        // fields and methods may be *additional* or *overriding* fields and\n+        // methods if there's a with_obj, or they may be the *only* fields and\n+        // methods if there's no with_obj.\n \n         // We don't need to pull \".node\" out of fields because it's not a\n         // \"spanned\"."}]}