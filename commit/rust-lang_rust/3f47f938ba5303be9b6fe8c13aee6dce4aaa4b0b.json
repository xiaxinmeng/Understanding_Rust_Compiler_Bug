{"sha": "3f47f938ba5303be9b6fe8c13aee6dce4aaa4b0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNDdmOTM4YmE1MzAzYmU5YjZmZThjMTNhZWU2ZGNlNGFhYTRiMGI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-12-12T09:38:46Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-12-12T09:38:46Z"}, "message": "Enable Cranelift optimizations when optimizing\n\nLICM in Cranelift has been fixed recently", "tree": {"sha": "7bffbd1d3f2de9f551a90728d02161afe36c0876", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bffbd1d3f2de9f551a90728d02161afe36c0876"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f47f938ba5303be9b6fe8c13aee6dce4aaa4b0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f47f938ba5303be9b6fe8c13aee6dce4aaa4b0b", "html_url": "https://github.com/rust-lang/rust/commit/3f47f938ba5303be9b6fe8c13aee6dce4aaa4b0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f47f938ba5303be9b6fe8c13aee6dce4aaa4b0b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8e22bfb1bff658466cf97e99026b91c2213df5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8e22bfb1bff658466cf97e99026b91c2213df5d", "html_url": "https://github.com/rust-lang/rust/commit/f8e22bfb1bff658466cf97e99026b91c2213df5d"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "7b751102f8b42483bfc24f7a21872881f148445a", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3f47f938ba5303be9b6fe8c13aee6dce4aaa4b0b/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f47f938ba5303be9b6fe8c13aee6dce4aaa4b0b/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=3f47f938ba5303be9b6fe8c13aee6dce4aaa4b0b", "patch": "@@ -283,8 +283,6 @@ fn build_isa(sess: &Session, enable_pic: bool) -> Box<dyn isa::TargetIsa + 'stat\n \n     flags_builder.set(\"enable_simd\", \"true\").unwrap();\n \n-    // FIXME(CraneStation/cranelift#732) fix LICM in presence of jump tables\n-    /*\n     use rustc_session::config::OptLevel;\n     match sess.opts.optimize {\n         OptLevel::No => {\n@@ -297,7 +295,7 @@ fn build_isa(sess: &Session, enable_pic: bool) -> Box<dyn isa::TargetIsa + 'stat\n         OptLevel::Size | OptLevel::SizeMin => {\n             sess.warn(\"Optimizing for size is not supported. Just ignoring the request\");\n         }\n-    }*/\n+    }\n \n     let flags = settings::Flags::new(flags_builder);\n "}]}