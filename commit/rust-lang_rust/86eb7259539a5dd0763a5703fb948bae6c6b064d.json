{"sha": "86eb7259539a5dd0763a5703fb948bae6c6b064d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZWI3MjU5NTM5YTVkZDA3NjNhNTcwM2ZiOTQ4YmFlNmM2YjA2NGQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-31T18:32:10Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-31T18:32:10Z"}, "message": "Rollup merge of #47895 - varkor:non-utf-stdin, r=estebank\n\nFix ICE when reading non-UTF-8 input from stdin\n\nFixes #22387.", "tree": {"sha": "aec7a6e29cdee8e7fa973c2fbe2f9c12082477f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aec7a6e29cdee8e7fa973c2fbe2f9c12082477f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86eb7259539a5dd0763a5703fb948bae6c6b064d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlpyC9QACgkQ/vbIBR0O\nATx67w//caLX7tAqlO3LAdgocZ3bdCTnq3q2cXvR4gez/xAiP/y2HjZESXxOYv8z\nhbFzUlrZ9ph546RXlQL5SXXhFGdITJ92DqyHpCjerkc/qlAe7xk1052maM/+T1wB\n0PC1+KNo/x0cfDUDB5/IJ2IjPq6UkyaN1ZRgI4m5dHmUKE2Yz6zbDGXK7kGb5v49\niJd7dkeB/ITkIaGBcEpkKJzsXrv8XjlREnM18dwF3/hSDJnyFT3Z0CiATMcpYg4d\nD6GD/bSo516tGSe6sU8pX99z57tzYhzII2wibbVisGeJ5tCqlYrXrznhxqLfhlce\nl8/eufUd6reDryJoboS9l4dyC98M9JFQsDU2+JUqdfBwEVOXEqKsusvQ3iQcT+Vu\n7FoXM2Dx9bU9WxQxxSAHF7+L73fgL7V/uXtynBsynUimUbXhoyQp4aULwgYdLOrD\n1rfE/OS1WTKcB8A1K0NwApDcedgjyG8UT8xvl5l6jqZ46PAZmsaBKvt6X/yrOceO\nfDFjzdchpbU1sRoQQjvb/PKGe8VmDFUhLQ+bZ32+v3wwf/AQAGVNS2bOMAweWBdv\n+xoMd0zl9nASem3z1t6DE8BqP/v0VhnmtiZulA9o4k/a4SAU01jRc3gAynPqg18y\nAxHo5cfFGXQxFmPCGGSEhVGHUxhdGmA/k0AgyEWfIlrB5Y/Mc5k=\n=+aCK\n-----END PGP SIGNATURE-----", "payload": "tree aec7a6e29cdee8e7fa973c2fbe2f9c12082477f9\nparent 61972e733df048b8ecda2b4fe1db6fec84ca418a\nparent a43d7eb3dd9cb97a81374001a23456bbee008d65\nauthor kennytm <kennytm@gmail.com> 1517423530 +0800\ncommitter kennytm <kennytm@gmail.com> 1517423530 +0800\n\nRollup merge of #47895 - varkor:non-utf-stdin, r=estebank\n\nFix ICE when reading non-UTF-8 input from stdin\n\nFixes #22387.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86eb7259539a5dd0763a5703fb948bae6c6b064d", "html_url": "https://github.com/rust-lang/rust/commit/86eb7259539a5dd0763a5703fb948bae6c6b064d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86eb7259539a5dd0763a5703fb948bae6c6b064d/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61972e733df048b8ecda2b4fe1db6fec84ca418a", "url": "https://api.github.com/repos/rust-lang/rust/commits/61972e733df048b8ecda2b4fe1db6fec84ca418a", "html_url": "https://github.com/rust-lang/rust/commit/61972e733df048b8ecda2b4fe1db6fec84ca418a"}, {"sha": "a43d7eb3dd9cb97a81374001a23456bbee008d65", "url": "https://api.github.com/repos/rust-lang/rust/commits/a43d7eb3dd9cb97a81374001a23456bbee008d65", "html_url": "https://github.com/rust-lang/rust/commit/a43d7eb3dd9cb97a81374001a23456bbee008d65"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "87c3b9a553e03195a536a2784350051999073f0c", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/86eb7259539a5dd0763a5703fb948bae6c6b064d/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86eb7259539a5dd0763a5703fb948bae6c6b064d/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=86eb7259539a5dd0763a5703fb948bae6c6b064d", "patch": "@@ -456,10 +456,13 @@ pub fn run_compiler<'a>(args: &[String],\n                                            None);\n \n     let (odir, ofile) = make_output(&matches);\n-    let (input, input_file_path) = match make_input(&matches.free) {\n-        Some((input, input_file_path)) => callbacks.some_input(input, input_file_path),\n+    let (input, input_file_path, input_err) = match make_input(&matches.free) {\n+        Some((input, input_file_path, input_err)) => {\n+            let (input, input_file_path) = callbacks.some_input(input, input_file_path);\n+            (input, input_file_path, input_err)\n+        },\n         None => match callbacks.no_input(&matches, &sopts, &cfg, &odir, &ofile, &descriptions) {\n-            Some((input, input_file_path)) => (input, input_file_path),\n+            Some((input, input_file_path)) => (input, input_file_path, None),\n             None => return (Ok(()), None),\n         },\n     };\n@@ -470,6 +473,13 @@ pub fn run_compiler<'a>(args: &[String],\n         sopts, input_file_path.clone(), descriptions, codemap, emitter_dest,\n     );\n \n+    if let Some(err) = input_err {\n+        // Immediately stop compilation if there was an issue reading\n+        // the input (for example if the input stream is not UTF-8).\n+        sess.err(&format!(\"{}\", err));\n+        return (Err(CompileIncomplete::Stopped), Some(sess));\n+    }\n+\n     let trans = get_trans(&sess);\n \n     rustc_lint::register_builtins(&mut sess.lint_store.borrow_mut(), Some(&sess));\n@@ -512,17 +522,22 @@ fn make_output(matches: &getopts::Matches) -> (Option<PathBuf>, Option<PathBuf>)\n }\n \n // Extract input (string or file and optional path) from matches.\n-fn make_input(free_matches: &[String]) -> Option<(Input, Option<PathBuf>)> {\n+fn make_input(free_matches: &[String]) -> Option<(Input, Option<PathBuf>, Option<io::Error>)> {\n     if free_matches.len() == 1 {\n         let ifile = &free_matches[0];\n         if ifile == \"-\" {\n             let mut src = String::new();\n-            io::stdin().read_to_string(&mut src).unwrap();\n+            let err = if io::stdin().read_to_string(&mut src).is_err() {\n+                Some(io::Error::new(io::ErrorKind::InvalidData,\n+                                    \"couldn't read from stdin, as it did not contain valid UTF-8\"))\n+            } else {\n+                None\n+            };\n             Some((Input::Str { name: FileName::Anon, input: src },\n-                  None))\n+                  None, err))\n         } else {\n             Some((Input::File(PathBuf::from(ifile)),\n-                  Some(PathBuf::from(ifile))))\n+                  Some(PathBuf::from(ifile)), None))\n         }\n     } else {\n         None"}, {"sha": "7948c442616e301fc26aeef148e60f808a22df92", "filename": "src/test/run-make/stdin-non-utf8/Makefile", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/86eb7259539a5dd0763a5703fb948bae6c6b064d/src%2Ftest%2Frun-make%2Fstdin-non-utf8%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/86eb7259539a5dd0763a5703fb948bae6c6b064d/src%2Ftest%2Frun-make%2Fstdin-non-utf8%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fstdin-non-utf8%2FMakefile?ref=86eb7259539a5dd0763a5703fb948bae6c6b064d", "patch": "@@ -0,0 +1,6 @@\n+-include ../tools.mk\n+\n+all:\n+\tcp non-utf8 $(TMPDIR)/non-utf.rs\n+\tcat $(TMPDIR)/non-utf.rs | $(RUSTC) - 2>&1 \\\n+\t\t| $(CGREP) \"error: couldn't read from stdin, as it did not contain valid UTF-8\""}, {"sha": "bc87051a85299758c04bd9c796e7bdd4f8fa21b7", "filename": "src/test/run-make/stdin-non-utf8/non-utf8", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/86eb7259539a5dd0763a5703fb948bae6c6b064d/src%2Ftest%2Frun-make%2Fstdin-non-utf8%2Fnon-utf8", "raw_url": "https://github.com/rust-lang/rust/raw/86eb7259539a5dd0763a5703fb948bae6c6b064d/src%2Ftest%2Frun-make%2Fstdin-non-utf8%2Fnon-utf8", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fstdin-non-utf8%2Fnon-utf8?ref=86eb7259539a5dd0763a5703fb948bae6c6b064d", "patch": "@@ -0,0 +1 @@\n+\ufffd"}]}