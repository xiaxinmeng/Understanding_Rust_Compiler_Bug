{"sha": "8ef53bf1967dfef9d20204552b0725673356ca14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlZjUzYmYxOTY3ZGZlZjlkMjAyMDQ1NTJiMDcyNTY3MzM1NmNhMTQ=", "commit": {"author": {"name": "Brad Sherman", "email": "bsherman1096@gmail.com", "date": "2019-12-28T22:31:41Z"}, "committer": {"name": "Brad Sherman", "email": "bsherman1096@gmail.com", "date": "2020-01-04T15:00:54Z"}, "message": "Fix existing iter-nth-zero violations", "tree": {"sha": "5059e1ff1523fe794a75310e1cee07855bdbcbaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5059e1ff1523fe794a75310e1cee07855bdbcbaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ef53bf1967dfef9d20204552b0725673356ca14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ef53bf1967dfef9d20204552b0725673356ca14", "html_url": "https://github.com/rust-lang/rust/commit/8ef53bf1967dfef9d20204552b0725673356ca14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ef53bf1967dfef9d20204552b0725673356ca14/comments", "author": {"login": "bradsherman", "id": 15267511, "node_id": "MDQ6VXNlcjE1MjY3NTEx", "avatar_url": "https://avatars.githubusercontent.com/u/15267511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bradsherman", "html_url": "https://github.com/bradsherman", "followers_url": "https://api.github.com/users/bradsherman/followers", "following_url": "https://api.github.com/users/bradsherman/following{/other_user}", "gists_url": "https://api.github.com/users/bradsherman/gists{/gist_id}", "starred_url": "https://api.github.com/users/bradsherman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bradsherman/subscriptions", "organizations_url": "https://api.github.com/users/bradsherman/orgs", "repos_url": "https://api.github.com/users/bradsherman/repos", "events_url": "https://api.github.com/users/bradsherman/events{/privacy}", "received_events_url": "https://api.github.com/users/bradsherman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bradsherman", "id": 15267511, "node_id": "MDQ6VXNlcjE1MjY3NTEx", "avatar_url": "https://avatars.githubusercontent.com/u/15267511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bradsherman", "html_url": "https://github.com/bradsherman", "followers_url": "https://api.github.com/users/bradsherman/followers", "following_url": "https://api.github.com/users/bradsherman/following{/other_user}", "gists_url": "https://api.github.com/users/bradsherman/gists{/gist_id}", "starred_url": "https://api.github.com/users/bradsherman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bradsherman/subscriptions", "organizations_url": "https://api.github.com/users/bradsherman/orgs", "repos_url": "https://api.github.com/users/bradsherman/repos", "events_url": "https://api.github.com/users/bradsherman/events{/privacy}", "received_events_url": "https://api.github.com/users/bradsherman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05b46034ea734f2b4436b700452771652ecc0074", "url": "https://api.github.com/repos/rust-lang/rust/commits/05b46034ea734f2b4436b700452771652ecc0074", "html_url": "https://github.com/rust-lang/rust/commit/05b46034ea734f2b4436b700452771652ecc0074"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ff35b81042b7138f4efae68e6bfafdd4a3a83a17", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ef53bf1967dfef9d20204552b0725673356ca14/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef53bf1967dfef9d20204552b0725673356ca14/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=8ef53bf1967dfef9d20204552b0725673356ca14", "patch": "@@ -61,7 +61,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MultipleInherentImpl {\n     }\n \n     fn check_crate_post(&mut self, cx: &LateContext<'a, 'tcx>, krate: &'tcx Crate<'_>) {\n-        if let Some(item) = krate.items.values().nth(0) {\n+        if let Some(item) = krate.items.values().next() {\n             // Retrieve all inherent implementations from the crate, grouped by type\n             for impls in cx\n                 .tcx\n@@ -71,7 +71,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MultipleInherentImpl {\n             {\n                 // Filter out implementations that have generic params (type or lifetime)\n                 let mut impl_spans = impls.iter().filter_map(|impl_def| self.impls.get(impl_def));\n-                if let Some(initial_span) = impl_spans.nth(0) {\n+                if let Some(initial_span) = impl_spans.next() {\n                     impl_spans.for_each(|additional_span| {\n                         span_lint_and_then(\n                             cx,"}]}