{"sha": "9217ef20183851bb6e248e150b0c4f5724f7464f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMTdlZjIwMTgzODUxYmI2ZTI0OGUxNTBiMGM0ZjU3MjRmNzQ2NGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-15T04:10:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-15T04:10:24Z"}, "message": "Auto merge of #72080 - matthewjasper:uniform-impl-trait, r=nikomatsakis\n\nClean up type alias impl trait implementation\n\n- Removes special case for top-level impl trait\n- Removes associated opaque types\n- Forbid lifetime elision in let position impl trait. This is consistent with the behavior for inferred types.\n- Handle lifetimes in type alias impl trait more uniformly with other parameters\n\ncc #69323\ncc #63063\nCloses #57188\nCloses #62988\nCloses #69136\nCloses #73061", "tree": {"sha": "83b6e6af7cbcda216861a581e7857e948eca47c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83b6e6af7cbcda216861a581e7857e948eca47c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9217ef20183851bb6e248e150b0c4f5724f7464f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9217ef20183851bb6e248e150b0c4f5724f7464f", "html_url": "https://github.com/rust-lang/rust/commit/9217ef20183851bb6e248e150b0c4f5724f7464f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9217ef20183851bb6e248e150b0c4f5724f7464f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c15f30701d636a7699a7ba8e7d683c351a4bb0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c15f30701d636a7699a7ba8e7d683c351a4bb0a", "html_url": "https://github.com/rust-lang/rust/commit/7c15f30701d636a7699a7ba8e7d683c351a4bb0a"}, {"sha": "af9b09235c674aaa2562c6fc0be18370eb8200bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/af9b09235c674aaa2562c6fc0be18370eb8200bd", "html_url": "https://github.com/rust-lang/rust/commit/af9b09235c674aaa2562c6fc0be18370eb8200bd"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "318d0b69d57b7924ae7dd9adb8f138689bf838b2", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9217ef20183851bb6e248e150b0c4f5724f7464f/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9217ef20183851bb6e248e150b0c4f5724f7464f/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=9217ef20183851bb6e248e150b0c4f5724f7464f", "patch": "@@ -379,7 +379,7 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n             TyKind::Path(ref path) => {\n                 self.collect_anonymous_lifetimes(path, ty);\n             },\n-            TyKind::Def(item, _) => {\n+            TyKind::OpaqueDef(item, _) => {\n                 let map = self.cx.tcx.hir();\n                 if let ItemKind::OpaqueTy(ref exist_ty) = map.expect_item(item.id).kind {\n                     for bound in exist_ty.bounds {"}, {"sha": "03ab274d9ca9c9cc741445741b58b07f8da75436", "filename": "clippy_lints/src/manual_async_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9217ef20183851bb6e248e150b0c4f5724f7464f/clippy_lints%2Fsrc%2Fmanual_async_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9217ef20183851bb6e248e150b0c4f5724f7464f/clippy_lints%2Fsrc%2Fmanual_async_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_async_fn.rs?ref=9217ef20183851bb6e248e150b0c4f5724f7464f", "patch": "@@ -99,7 +99,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ManualAsyncFn {\n \n fn future_trait_ref<'tcx>(cx: &LateContext<'_, 'tcx>, ty: &'tcx Ty<'tcx>) -> Option<&'tcx TraitRef<'tcx>> {\n     if_chain! {\n-        if let TyKind::Def(item_id, _) = ty.kind;\n+        if let TyKind::OpaqueDef(item_id, _) = ty.kind;\n         let item = cx.tcx.hir().item(item_id.id);\n         if let ItemKind::OpaqueTy(opaque) = &item.kind;\n         if opaque.bounds.len() == 1;"}, {"sha": "0fd1e87f9e415c7b343b378310881a48fecc5728", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9217ef20183851bb6e248e150b0c4f5724f7464f/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9217ef20183851bb6e248e150b0c4f5724f7464f/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=9217ef20183851bb6e248e150b0c4f5724f7464f", "patch": "@@ -187,7 +187,6 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingDoc {\n             hir::ImplItemKind::Const(..) => \"an associated constant\",\n             hir::ImplItemKind::Fn(..) => \"a method\",\n             hir::ImplItemKind::TyAlias(_) => \"an associated type\",\n-            hir::ImplItemKind::OpaqueTy(_) => \"an existential type\",\n         };\n         self.check_missing_docs_attrs(cx, &impl_item.attrs, impl_item.span, desc);\n     }"}, {"sha": "1802470b1841e72c63f0b58da84a6d86ba82b896", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9217ef20183851bb6e248e150b0c4f5724f7464f/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9217ef20183851bb6e248e150b0c4f5724f7464f/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=9217ef20183851bb6e248e150b0c4f5724f7464f", "patch": "@@ -142,7 +142,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingInline {\n \n         let desc = match impl_item.kind {\n             hir::ImplItemKind::Fn(..) => \"a method\",\n-            hir::ImplItemKind::Const(..) | hir::ImplItemKind::TyAlias(_) | hir::ImplItemKind::OpaqueTy(_) => return,\n+            hir::ImplItemKind::Const(..) | hir::ImplItemKind::TyAlias(_) => return,\n         };\n \n         let def_id = cx.tcx.hir().local_def_id(impl_item.hir_id);"}, {"sha": "7a84f1c986aa7dc4d059d7cf9314eb0ac187e460", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9217ef20183851bb6e248e150b0c4f5724f7464f/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9217ef20183851bb6e248e150b0c4f5724f7464f/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=9217ef20183851bb6e248e150b0c4f5724f7464f", "patch": "@@ -710,7 +710,7 @@ impl<'a, 'tcx> SpanlessHash<'a, 'tcx> {\n                     segment.ident.name.hash(&mut self.s);\n                 },\n             },\n-            TyKind::Def(_, arg_list) => {\n+            TyKind::OpaqueDef(_, arg_list) => {\n                 for arg in *arg_list {\n                     match arg {\n                         GenericArg::Lifetime(ref l) => self.hash_lifetime(l),"}, {"sha": "afde971f9df4ef67cf9e403147d815d702eafbf1", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9217ef20183851bb6e248e150b0c4f5724f7464f/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9217ef20183851bb6e248e150b0c4f5724f7464f/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=9217ef20183851bb6e248e150b0c4f5724f7464f", "patch": "@@ -63,7 +63,6 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for DeepCodeInspector {\n             },\n             hir::ImplItemKind::Fn(..) => println!(\"method\"),\n             hir::ImplItemKind::TyAlias(_) => println!(\"associated type\"),\n-            hir::ImplItemKind::OpaqueTy(_) => println!(\"existential type\"),\n         }\n     }\n     // fn check_trait_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx"}]}