{"sha": "3eb983ed9916147ad4f2d93679cbff5276ca87ca", "node_id": "C_kwDOAAsO6NoAKDNlYjk4M2VkOTkxNjE0N2FkNGYyZDkzNjc5Y2JmZjUyNzZjYTg3Y2E", "commit": {"author": {"name": "Chris Copeland", "email": "chris@chrisnc.net", "date": "2022-02-19T20:05:51Z"}, "committer": {"name": "Chris Copeland", "email": "chris@chrisnc.net", "date": "2022-02-21T05:27:22Z"}, "message": "Fix `setsockopt` and `getsockopt` parameter names.\n\nPreviously `level` was named `opt` and `option_name` was named `val`,\nthen extra names of `payload` or `slot` were used for the option value.\nThis change aligns the wrapper parameters with their names in POSIX.\nWinsock uses similar but more abbreviated names: `level`, `optname`,\n`optval`, `optlen`.", "tree": {"sha": "c0e2d3c27602b60f8ffa4d36aa699b8900018473", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0e2d3c27602b60f8ffa4d36aa699b8900018473"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3eb983ed9916147ad4f2d93679cbff5276ca87ca", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIgEABYKADAWIQRUFr6XZXwtz1k0J+QUVQ2nJIXfMAUCYhMiyBIcY2hyaXNAY2hy\naXNuYy5uZXQACgkQFFUNpySF3zAn6wEAkkPMx85pWHciDNrVIR3/ISjoEuqLnk8R\n4bTtRK4KBBYBANHHka//b1QHhdtG87eYtfmDdyKPNG5ZK9rNMcl336AM\n=O5O7\n-----END PGP SIGNATURE-----", "payload": "tree c0e2d3c27602b60f8ffa4d36aa699b8900018473\nparent 45e2c2881d11324d610815bfff097e25c412199e\nauthor Chris Copeland <chris@chrisnc.net> 1645301151 -0800\ncommitter Chris Copeland <chris@chrisnc.net> 1645421242 -0800\n\nFix `setsockopt` and `getsockopt` parameter names.\n\nPreviously `level` was named `opt` and `option_name` was named `val`,\nthen extra names of `payload` or `slot` were used for the option value.\nThis change aligns the wrapper parameters with their names in POSIX.\nWinsock uses similar but more abbreviated names: `level`, `optname`,\n`optval`, `optlen`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3eb983ed9916147ad4f2d93679cbff5276ca87ca", "html_url": "https://github.com/rust-lang/rust/commit/3eb983ed9916147ad4f2d93679cbff5276ca87ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3eb983ed9916147ad4f2d93679cbff5276ca87ca/comments", "author": {"login": "chrisnc", "id": 2592855, "node_id": "MDQ6VXNlcjI1OTI4NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2592855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisnc", "html_url": "https://github.com/chrisnc", "followers_url": "https://api.github.com/users/chrisnc/followers", "following_url": "https://api.github.com/users/chrisnc/following{/other_user}", "gists_url": "https://api.github.com/users/chrisnc/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisnc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisnc/subscriptions", "organizations_url": "https://api.github.com/users/chrisnc/orgs", "repos_url": "https://api.github.com/users/chrisnc/repos", "events_url": "https://api.github.com/users/chrisnc/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisnc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chrisnc", "id": 2592855, "node_id": "MDQ6VXNlcjI1OTI4NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2592855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisnc", "html_url": "https://github.com/chrisnc", "followers_url": "https://api.github.com/users/chrisnc/followers", "following_url": "https://api.github.com/users/chrisnc/following{/other_user}", "gists_url": "https://api.github.com/users/chrisnc/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisnc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisnc/subscriptions", "organizations_url": "https://api.github.com/users/chrisnc/orgs", "repos_url": "https://api.github.com/users/chrisnc/repos", "events_url": "https://api.github.com/users/chrisnc/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisnc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45e2c2881d11324d610815bfff097e25c412199e", "url": "https://api.github.com/repos/rust-lang/rust/commits/45e2c2881d11324d610815bfff097e25c412199e", "html_url": "https://github.com/rust-lang/rust/commit/45e2c2881d11324d610815bfff097e25c412199e"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "ede34c832e72f14f75ec2e22d3593b6a3cc3af74", "filename": "library/std/src/sys_common/net.rs", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/3eb983ed9916147ad4f2d93679cbff5276ca87ca/library%2Fstd%2Fsrc%2Fsys_common%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eb983ed9916147ad4f2d93679cbff5276ca87ca/library%2Fstd%2Fsrc%2Fsys_common%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fnet.rs?ref=3eb983ed9916147ad4f2d93679cbff5276ca87ca", "patch": "@@ -58,21 +58,37 @@ cfg_if::cfg_if! {\n // sockaddr and misc bindings\n ////////////////////////////////////////////////////////////////////////////////\n \n-pub fn setsockopt<T>(sock: &Socket, opt: c_int, val: c_int, payload: T) -> io::Result<()> {\n+pub fn setsockopt<T>(\n+    sock: &Socket,\n+    level: c_int,\n+    option_name: c_int,\n+    option_value: T,\n+) -> io::Result<()> {\n     unsafe {\n-        let payload = &payload as *const T as *const c_void;\n-        cvt(c::setsockopt(sock.as_raw(), opt, val, payload, mem::size_of::<T>() as c::socklen_t))?;\n+        cvt(c::setsockopt(\n+            sock.as_raw(),\n+            level,\n+            option_name,\n+            &option_value as *const T as *const _,\n+            mem::size_of::<T>() as c::socklen_t,\n+        ))?;\n         Ok(())\n     }\n }\n \n-pub fn getsockopt<T: Copy>(sock: &Socket, opt: c_int, val: c_int) -> io::Result<T> {\n+pub fn getsockopt<T: Copy>(sock: &Socket, level: c_int, option_name: c_int) -> io::Result<T> {\n     unsafe {\n-        let mut slot: T = mem::zeroed();\n-        let mut len = mem::size_of::<T>() as c::socklen_t;\n-        cvt(c::getsockopt(sock.as_raw(), opt, val, &mut slot as *mut _ as *mut _, &mut len))?;\n-        assert_eq!(len as usize, mem::size_of::<T>());\n-        Ok(slot)\n+        let mut option_value: T = mem::zeroed();\n+        let mut option_len = mem::size_of::<T>() as c::socklen_t;\n+        cvt(c::getsockopt(\n+            sock.as_raw(),\n+            level,\n+            option_name,\n+            &mut option_value as *mut T as *mut _,\n+            &mut option_len,\n+        ))?;\n+        assert_eq!(option_len as usize, mem::size_of::<T>());\n+        Ok(option_value)\n     }\n }\n "}]}