{"sha": "b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ZDE1OGIwZjhiMmEzZjNlNDdhYjEwNGFlODU2NmU3NmU0MWQzYzU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-25T00:29:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-25T00:29:49Z"}, "message": "Rollup merge of #77160 - ecstatic-morse:const-fn-transmute-suggestion, r=oli-obk\n\nSuggest `const_fn_transmute`, not `const_fn`\n\nMore fallout from #76850 in the vein of #77134. The fix is the same. I looked through the structured errors file and didn't see any more of this kind of diagnostics bug.\n\nr? @oli-obk", "tree": {"sha": "5198616515b1bb19fc42b52b3a9748c43f21dabf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5198616515b1bb19fc42b52b3a9748c43f21dabf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfbTn9CRBK7hj4Ov3rIwAAdHIIABIHtkGn8vL5quE8qpMIUnF2\nPnB3PG/8T/jkFbQPa9Tb/d/G3+F2g3L6mf+nHpErpodke6XcSHGpd9tJyh5OpE8o\n7CibqN0aTNWEEz6guIDf4jW4tRCNQfdaamcIxkCGnMRsozsCasyJZAGCmJk3zDvD\npls3PdULbpSPKf3Z2PXI+IC5dTBYjpFE8mfZAAJZWNHMLafoZaC9WcP21jUrl2hx\nZEinJ0jn/lOB1IMEESqyFN+Ac9xvoh7XaybCN7iOLaDR55ABVUTUUIOrBG+hO4m5\nrj9CcHORpTfWWtJu91rV2sW5vqvXPZ9lBAdx+U/1Ad1dGIJh5LwhvpHD2nPDeEs=\n=mPKu\n-----END PGP SIGNATURE-----\n", "payload": "tree 5198616515b1bb19fc42b52b3a9748c43f21dabf\nparent 473ae229f0f1d45055d4a1ba1a9e0e4095f866fb\nparent 0f594698aaa2b8330eca219f38105d2f4989c977\nauthor Jonas Schievink <jonasschievink@gmail.com> 1600993789 +0200\ncommitter GitHub <noreply@github.com> 1600993789 +0200\n\nRollup merge of #77160 - ecstatic-morse:const-fn-transmute-suggestion, r=oli-obk\n\nSuggest `const_fn_transmute`, not `const_fn`\n\nMore fallout from #76850 in the vein of #77134. The fix is the same. I looked through the structured errors file and didn't see any more of this kind of diagnostics bug.\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5", "html_url": "https://github.com/rust-lang/rust/commit/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb", "html_url": "https://github.com/rust-lang/rust/commit/473ae229f0f1d45055d4a1ba1a9e0e4095f866fb"}, {"sha": "0f594698aaa2b8330eca219f38105d2f4989c977", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f594698aaa2b8330eca219f38105d2f4989c977", "html_url": "https://github.com/rust-lang/rust/commit/0f594698aaa2b8330eca219f38105d2f4989c977"}], "stats": {"total": 103, "additions": 60, "deletions": 43}, "files": [{"sha": "496e620dd9df61d10b53e061b1eee67008561b04", "filename": "compiler/rustc_mir/src/transform/check_consts/ops.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs?ref=b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5", "patch": "@@ -489,7 +489,14 @@ impl NonConstOp for Transmute {\n     }\n \n     fn emit_error(&self, ccx: &ConstCx<'_, '_>, span: Span) {\n-        mcf_emit_error(ccx, span, \"can only call `transmute` from const items, not `const fn`\");\n+        feature_err(\n+            &ccx.tcx.sess.parse_sess,\n+            sym::const_fn_transmute,\n+            span,\n+            &format!(\"`transmute` is not allowed in {}s\", ccx.const_kind()),\n+        )\n+        .note(\"`transmute` is only allowed in constants and statics for now\")\n+        .emit();\n     }\n }\n "}, {"sha": "9007e501bc2bf958877e08c92f11c343fb7af35a", "filename": "src/test/ui/feature-gates/feature-gate-const_fn_transmute.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn_transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn_transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn_transmute.rs?ref=b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5", "patch": "@@ -6,33 +6,33 @@ struct Foo(u32);\n const TRANSMUTED_U32: u32 = unsafe { mem::transmute(Foo(3)) };\n \n const fn transmute_fn() -> u32 { unsafe { mem::transmute(Foo(3)) } }\n-//~^ ERROR can only call `transmute` from const items, not `const fn`\n+//~^ ERROR `transmute`\n \n const fn transmute_fn_intrinsic() -> u32 { unsafe { std::intrinsics::transmute(Foo(3)) } }\n-//~^ ERROR can only call `transmute` from const items, not `const fn`\n+//~^ ERROR `transmute`\n \n const fn transmute_fn_core_intrinsic() -> u32 { unsafe { core::intrinsics::transmute(Foo(3)) } }\n-//~^ ERROR can only call `transmute` from const items, not `const fn`\n+//~^ ERROR `transmute`\n \n const unsafe fn unsafe_transmute_fn() -> u32 { mem::transmute(Foo(3)) }\n-//~^ ERROR can only call `transmute` from const items, not `const fn`\n+//~^ ERROR `transmute`\n \n const unsafe fn unsafe_transmute_fn_intrinsic() -> u32 { std::intrinsics::transmute(Foo(3)) }\n-//~^ ERROR can only call `transmute` from const items, not `const fn`\n+//~^ ERROR `transmute`\n \n const unsafe fn unsafe_transmute_fn_core_intrinsic() -> u32 { core::intrinsics::transmute(Foo(3)) }\n-//~^ ERROR can only call `transmute` from const items, not `const fn`\n+//~^ ERROR `transmute`\n \n const fn safe_transmute_fn() -> u32 { mem::transmute(Foo(3)) }\n-//~^ ERROR can only call `transmute` from const items, not `const fn`\n+//~^ ERROR `transmute`\n //~| ERROR call to unsafe function is unsafe and requires unsafe function or block\n \n const fn safe_transmute_fn_intrinsic() -> u32 { std::intrinsics::transmute(Foo(3)) }\n-//~^ ERROR can only call `transmute` from const items, not `const fn`\n+//~^ ERROR `transmute`\n //~| ERROR call to unsafe function is unsafe and requires unsafe function or block\n \n const fn safe_transmute_fn_core_intrinsic() -> u32 { core::intrinsics::transmute(Foo(3)) }\n-//~^ ERROR can only call `transmute` from const items, not `const fn`\n+//~^ ERROR `transmute`\n //~| ERROR call to unsafe function is unsafe and requires unsafe function or block\n \n fn main() {}"}, {"sha": "08ba14dc40e86844b98ce5abf04e81753e8c8a1b", "filename": "src/test/ui/feature-gates/feature-gate-const_fn_transmute.stderr", "status": "modified", "additions": 37, "deletions": 28, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn_transmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn_transmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn_transmute.stderr?ref=b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5", "patch": "@@ -1,83 +1,92 @@\n-error[E0723]: can only call `transmute` from const items, not `const fn`\n+error[E0658]: `transmute` is not allowed in constant functions\n   --> $DIR/feature-gate-const_fn_transmute.rs:8:43\n    |\n LL | const fn transmute_fn() -> u32 { unsafe { mem::transmute(Foo(3)) } }\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #53605 <https://github.com/rust-lang/rust/issues/53605> for more information\n+   = help: add `#![feature(const_fn_transmute)]` to the crate attributes to enable\n+   = note: `transmute` is only allowed in constants and statics for now\n \n-error[E0723]: can only call `transmute` from const items, not `const fn`\n+error[E0658]: `transmute` is not allowed in constant functions\n   --> $DIR/feature-gate-const_fn_transmute.rs:11:53\n    |\n LL | const fn transmute_fn_intrinsic() -> u32 { unsafe { std::intrinsics::transmute(Foo(3)) } }\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #53605 <https://github.com/rust-lang/rust/issues/53605> for more information\n+   = help: add `#![feature(const_fn_transmute)]` to the crate attributes to enable\n+   = note: `transmute` is only allowed in constants and statics for now\n \n-error[E0723]: can only call `transmute` from const items, not `const fn`\n+error[E0658]: `transmute` is not allowed in constant functions\n   --> $DIR/feature-gate-const_fn_transmute.rs:14:58\n    |\n LL | const fn transmute_fn_core_intrinsic() -> u32 { unsafe { core::intrinsics::transmute(Foo(3)) } }\n    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #53605 <https://github.com/rust-lang/rust/issues/53605> for more information\n+   = help: add `#![feature(const_fn_transmute)]` to the crate attributes to enable\n+   = note: `transmute` is only allowed in constants and statics for now\n \n-error[E0723]: can only call `transmute` from const items, not `const fn`\n+error[E0658]: `transmute` is not allowed in constant functions\n   --> $DIR/feature-gate-const_fn_transmute.rs:17:48\n    |\n LL | const unsafe fn unsafe_transmute_fn() -> u32 { mem::transmute(Foo(3)) }\n    |                                                ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #53605 <https://github.com/rust-lang/rust/issues/53605> for more information\n+   = help: add `#![feature(const_fn_transmute)]` to the crate attributes to enable\n+   = note: `transmute` is only allowed in constants and statics for now\n \n-error[E0723]: can only call `transmute` from const items, not `const fn`\n+error[E0658]: `transmute` is not allowed in constant functions\n   --> $DIR/feature-gate-const_fn_transmute.rs:20:58\n    |\n LL | const unsafe fn unsafe_transmute_fn_intrinsic() -> u32 { std::intrinsics::transmute(Foo(3)) }\n    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #53605 <https://github.com/rust-lang/rust/issues/53605> for more information\n+   = help: add `#![feature(const_fn_transmute)]` to the crate attributes to enable\n+   = note: `transmute` is only allowed in constants and statics for now\n \n-error[E0723]: can only call `transmute` from const items, not `const fn`\n+error[E0658]: `transmute` is not allowed in constant functions\n   --> $DIR/feature-gate-const_fn_transmute.rs:23:63\n    |\n LL | const unsafe fn unsafe_transmute_fn_core_intrinsic() -> u32 { core::intrinsics::transmute(Foo(3)) }\n    |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #53605 <https://github.com/rust-lang/rust/issues/53605> for more information\n+   = help: add `#![feature(const_fn_transmute)]` to the crate attributes to enable\n+   = note: `transmute` is only allowed in constants and statics for now\n \n-error[E0723]: can only call `transmute` from const items, not `const fn`\n+error[E0658]: `transmute` is not allowed in constant functions\n   --> $DIR/feature-gate-const_fn_transmute.rs:26:39\n    |\n LL | const fn safe_transmute_fn() -> u32 { mem::transmute(Foo(3)) }\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #53605 <https://github.com/rust-lang/rust/issues/53605> for more information\n+   = help: add `#![feature(const_fn_transmute)]` to the crate attributes to enable\n+   = note: `transmute` is only allowed in constants and statics for now\n \n-error[E0723]: can only call `transmute` from const items, not `const fn`\n+error[E0658]: `transmute` is not allowed in constant functions\n   --> $DIR/feature-gate-const_fn_transmute.rs:30:49\n    |\n LL | const fn safe_transmute_fn_intrinsic() -> u32 { std::intrinsics::transmute(Foo(3)) }\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #53605 <https://github.com/rust-lang/rust/issues/53605> for more information\n+   = help: add `#![feature(const_fn_transmute)]` to the crate attributes to enable\n+   = note: `transmute` is only allowed in constants and statics for now\n \n-error[E0723]: can only call `transmute` from const items, not `const fn`\n+error[E0658]: `transmute` is not allowed in constant functions\n   --> $DIR/feature-gate-const_fn_transmute.rs:34:54\n    |\n LL | const fn safe_transmute_fn_core_intrinsic() -> u32 { core::intrinsics::transmute(Foo(3)) }\n    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #53605 <https://github.com/rust-lang/rust/issues/53605> for more information\n+   = help: add `#![feature(const_fn_transmute)]` to the crate attributes to enable\n+   = note: `transmute` is only allowed in constants and statics for now\n \n error[E0133]: call to unsafe function is unsafe and requires unsafe function or block\n   --> $DIR/feature-gate-const_fn_transmute.rs:26:39\n@@ -105,5 +114,5 @@ LL | const fn safe_transmute_fn_core_intrinsic() -> u32 { core::intrinsics::tran\n \n error: aborting due to 12 previous errors\n \n-Some errors have detailed explanations: E0133, E0723.\n+Some errors have detailed explanations: E0133, E0658.\n For more information about an error, try `rustc --explain E0133`."}, {"sha": "554c67be4e0b04ef6cf4b3f61c1fcc5272d208ec", "filename": "src/test/ui/internal/internal-unstable-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-const.rs?ref=b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5", "patch": "@@ -8,7 +8,7 @@\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_const_stable(feature = \"rust1\", since = \"1.0.0\")]\n pub const fn foo() -> i32 {\n-    unsafe { std::mem::transmute(4u32) } //~ ERROR can only call `transmute` from const items\n+    unsafe { std::mem::transmute(4u32) } //~ ERROR `transmute`\n }\n \n fn main() {}"}, {"sha": "adfb8dc36918dccfd0863eb9f6467f9517deab92", "filename": "src/test/ui/internal/internal-unstable-const.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-const.stderr?ref=b8d158b0f8b2a3f3e47ab104ae8566e76e41d3c5", "patch": "@@ -1,12 +1,13 @@\n-error[E0723]: can only call `transmute` from const items, not `const fn`\n+error[E0658]: `transmute` is not allowed in constant functions\n   --> $DIR/internal-unstable-const.rs:11:14\n    |\n LL |     unsafe { std::mem::transmute(4u32) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #53605 <https://github.com/rust-lang/rust/issues/53605> for more information\n+   = help: add `#![feature(const_fn_transmute)]` to the crate attributes to enable\n+   = note: `transmute` is only allowed in constants and statics for now\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0723`.\n+For more information about this error, try `rustc --explain E0658`."}]}