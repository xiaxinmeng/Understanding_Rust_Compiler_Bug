{"sha": "9988821a04073360c27bd95b9535a8dceca67d9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ODg4MjFhMDQwNzMzNjBjMjdiZDk1Yjk1MzVhOGRjZWNhNjdkOWM=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2021-01-22T07:22:15Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2021-01-22T07:22:15Z"}, "message": "Move missing_item check inside condition", "tree": {"sha": "2757c7922e24ff8baf95481b12a50ba3da7a8d74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2757c7922e24ff8baf95481b12a50ba3da7a8d74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9988821a04073360c27bd95b9535a8dceca67d9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9988821a04073360c27bd95b9535a8dceca67d9c", "html_url": "https://github.com/rust-lang/rust/commit/9988821a04073360c27bd95b9535a8dceca67d9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9988821a04073360c27bd95b9535a8dceca67d9c/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58a90de9adfac7cc26fe178b3f736153b756a515", "url": "https://api.github.com/repos/rust-lang/rust/commits/58a90de9adfac7cc26fe178b3f736153b756a515", "html_url": "https://github.com/rust-lang/rust/commit/58a90de9adfac7cc26fe178b3f736153b756a515"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "ace2ccb2fceac5c155b613bd26b95b8cfd6d9c50", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9988821a04073360c27bd95b9535a8dceca67d9c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9988821a04073360c27bd95b9535a8dceca67d9c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=9988821a04073360c27bd95b9535a8dceca67d9c", "patch": "@@ -1043,9 +1043,9 @@ pub(super) fn check_impl_items_against_trait<'tcx>(\n         }\n     }\n \n-    // Check for missing items from trait\n-    let mut missing_items = Vec::new();\n     if let Ok(ancestors) = trait_def.ancestors(tcx, impl_id.to_def_id()) {\n+        // Check for missing items from trait\n+        let mut missing_items = Vec::new();\n         for trait_item in tcx.associated_items(impl_trait_ref.def_id).in_definition_order() {\n             let is_implemented = ancestors\n                 .leaf_def(tcx, trait_item.ident, trait_item.kind)\n@@ -1058,10 +1058,10 @@ pub(super) fn check_impl_items_against_trait<'tcx>(\n                 }\n             }\n         }\n-    }\n \n-    if !missing_items.is_empty() {\n-        missing_items_err(tcx, impl_span, &missing_items, full_impl_span);\n+        if !missing_items.is_empty() {\n+            missing_items_err(tcx, impl_span, &missing_items, full_impl_span);\n+        }\n     }\n }\n "}]}