{"sha": "01105ffde363bff46ebe16d032edb7a538609e18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxMTA1ZmZkZTM2M2JmZjQ2ZWJlMTZkMDMyZWRiN2E1Mzg2MDllMTg=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-10-04T15:36:06Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2014-11-19T04:24:35Z"}, "message": "rustc: middle: avoid clones in ty_fn_{sig,args}.", "tree": {"sha": "7833c956106d4b37f2405dd259803bf347230971", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7833c956106d4b37f2405dd259803bf347230971"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01105ffde363bff46ebe16d032edb7a538609e18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01105ffde363bff46ebe16d032edb7a538609e18", "html_url": "https://github.com/rust-lang/rust/commit/01105ffde363bff46ebe16d032edb7a538609e18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01105ffde363bff46ebe16d032edb7a538609e18/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c3ad48c4530e1033d9b74cf8a793e3d87f53c38", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c3ad48c4530e1033d9b74cf8a793e3d87f53c38", "html_url": "https://github.com/rust-lang/rust/commit/4c3ad48c4530e1033d9b74cf8a793e3d87f53c38"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "eb94b57f52ca4082f76b2e04cd65d4716789bb0c", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/01105ffde363bff46ebe16d032edb7a538609e18/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01105ffde363bff46ebe16d032edb7a538609e18/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=01105ffde363bff46ebe16d032edb7a538609e18", "patch": "@@ -3545,10 +3545,10 @@ pub fn fn_is_variadic(fty: Ty) -> bool {\n     }\n }\n \n-pub fn ty_fn_sig<'tcx>(fty: Ty<'tcx>) -> FnSig<'tcx> {\n+pub fn ty_fn_sig<'tcx>(fty: Ty<'tcx>) -> &'tcx FnSig<'tcx> {\n     match get(fty).sty {\n-        ty_bare_fn(ref f) => f.sig.clone(),\n-        ty_closure(ref f) => f.sig.clone(),\n+        ty_bare_fn(ref f) => &f.sig,\n+        ty_closure(ref f) => &f.sig,\n         ref s => {\n             panic!(\"ty_fn_sig() called on non-fn type: {}\", s)\n         }\n@@ -3565,14 +3565,8 @@ pub fn ty_fn_abi(fty: Ty) -> abi::Abi {\n }\n \n // Type accessors for substructures of types\n-pub fn ty_fn_args<'tcx>(fty: Ty<'tcx>) -> Vec<Ty<'tcx>> {\n-    match get(fty).sty {\n-        ty_bare_fn(ref f) => f.sig.inputs.clone(),\n-        ty_closure(ref f) => f.sig.inputs.clone(),\n-        ref s => {\n-            panic!(\"ty_fn_args() called on non-fn type: {}\", s)\n-        }\n-    }\n+pub fn ty_fn_args<'tcx>(fty: Ty<'tcx>) -> &'tcx [Ty<'tcx>] {\n+    ty_fn_sig(fty).inputs.as_slice()\n }\n \n pub fn ty_closure_store(fty: Ty) -> TraitStore {"}, {"sha": "c1a56dc96819d2253c1d9a70d7ce37375c4b97b0", "filename": "src/librustc_trans/trans/callee.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/01105ffde363bff46ebe16d032edb7a538609e18/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01105ffde363bff46ebe16d032edb7a538609e18/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs?ref=01105ffde363bff46ebe16d032edb7a538609e18", "patch": "@@ -334,8 +334,7 @@ pub fn trans_unboxing_shim<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n     // Create the substituted versions of the self type.\n     let arg_scope = fcx.push_custom_cleanup_scope();\n     let arg_scope_id = cleanup::CustomScope(arg_scope);\n-    let boxed_arg_types = ty::ty_fn_args(boxed_function_type);\n-    let boxed_self_type = boxed_arg_types[0];\n+    let boxed_self_type = ty::ty_fn_args(boxed_function_type)[0];\n     let arg_types = ty::ty_fn_args(function_type);\n     let self_type = arg_types[0];\n     let boxed_self_kind = arg_kind(&fcx, boxed_self_type);\n@@ -919,12 +918,11 @@ fn trans_args_under_call_abi<'blk, 'tcx>(\n                              ignore_self: bool)\n                              -> Block<'blk, 'tcx> {\n     // Translate the `self` argument first.\n-    let arg_tys = ty::ty_fn_args(fn_ty);\n     if !ignore_self {\n         let arg_datum = unpack_datum!(bcx, expr::trans(bcx, &*arg_exprs[0]));\n         llargs.push(unpack_result!(bcx, {\n             trans_arg_datum(bcx,\n-                            arg_tys[0],\n+                            ty::ty_fn_args(fn_ty)[0],\n                             arg_datum,\n                             arg_cleanup_scope,\n                             DontAutorefArg)"}]}