{"sha": "94d5d0d7e893a50bdd22ce4366ca15f083218d22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZDVkMGQ3ZTg5M2E1MGJkZDIyY2U0MzY2Y2ExNWYwODMyMThkMjI=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-05T07:36:51Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-05T07:36:51Z"}, "message": "Merge #743\n\n743: Move comment r=matklad a=kjeremy\n\nAs pointed out in https://github.com/rust-analyzer/rust-analyzer/pull/738/files#r253651450\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>", "tree": {"sha": "f771ec02dd6a0bcd1243abfd59e5cf294dee7ff0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f771ec02dd6a0bcd1243abfd59e5cf294dee7ff0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94d5d0d7e893a50bdd22ce4366ca15f083218d22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94d5d0d7e893a50bdd22ce4366ca15f083218d22", "html_url": "https://github.com/rust-lang/rust/commit/94d5d0d7e893a50bdd22ce4366ca15f083218d22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94d5d0d7e893a50bdd22ce4366ca15f083218d22/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "d914ac0069d3382f08a1ebdc3481ed7fc7a74b48", "url": "https://api.github.com/repos/rust-lang/rust/commits/d914ac0069d3382f08a1ebdc3481ed7fc7a74b48", "html_url": "https://github.com/rust-lang/rust/commit/d914ac0069d3382f08a1ebdc3481ed7fc7a74b48"}, {"sha": "7f92fd858ac41e441b814f0a94609b478301ab82", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f92fd858ac41e441b814f0a94609b478301ab82", "html_url": "https://github.com/rust-lang/rust/commit/7f92fd858ac41e441b814f0a94609b478301ab82"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "4720a88439413803823475dbd5c5d53464db9baf", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/94d5d0d7e893a50bdd22ce4366ca15f083218d22/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d5d0d7e893a50bdd22ce4366ca15f083218d22/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=94d5d0d7e893a50bdd22ce4366ca15f083218d22", "patch": "@@ -599,9 +599,6 @@ pub fn handle_code_action(\n         let title = source_edit.label.clone();\n         let edit = source_edit.try_conv_with(&world)?;\n \n-        // We cannot use the 'editor.action.showReferences' command directly\n-        // because that command requires vscode types which we convert in the handler\n-        // on the client side.\n         let cmd = Command {\n             title,\n             command: \"rust-analyzer.applySourceChange\".to_string(),\n@@ -713,17 +710,21 @@ pub fn handle_code_lens_resolve(world: ServerWorld, code_lens: CodeLens) -> Resu\n                 format!(\"{} implementations\", locations.len())\n             };\n \n+            // We cannot use the 'editor.action.showReferences' command directly\n+            // because that command requires vscode types which we convert in the handler\n+            // on the client side.\n+            let cmd = Command {\n+                title,\n+                command: \"rust-analyzer.showReferences\".into(),\n+                arguments: Some(vec![\n+                    to_value(&Ser::new(&lens_params.text_document.uri)).unwrap(),\n+                    to_value(code_lens.range.start).unwrap(),\n+                    to_value(locations).unwrap(),\n+                ]),\n+            };\n             return Ok(CodeLens {\n                 range: code_lens.range,\n-                command: Some(Command {\n-                    title,\n-                    command: \"rust-analyzer.showReferences\".into(),\n-                    arguments: Some(vec![\n-                        to_value(&Ser::new(&lens_params.text_document.uri)).unwrap(),\n-                        to_value(code_lens.range.start).unwrap(),\n-                        to_value(locations).unwrap(),\n-                    ]),\n-                }),\n+                command: Some(cmd),\n                 data: None,\n             });\n         }"}]}