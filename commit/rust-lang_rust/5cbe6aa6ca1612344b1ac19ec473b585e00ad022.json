{"sha": "5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjYmU2YWE2Y2ExNjEyMzQ0YjFhYzE5ZWM0NzNiNTg1ZTAwYWQwMjI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-09-30T20:35:26Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-09-30T20:35:26Z"}, "message": "Reword E0392 slightly\n\nMake it clearer that a type or lifetime argument not being used can be\nfixed by referencing it in a struct's fields, not just using `PhathomData`.", "tree": {"sha": "b615ecab996076b51ae7b6fbb6113a3dba461806", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b615ecab996076b51ae7b6fbb6113a3dba461806"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "html_url": "https://github.com/rust-lang/rust/commit/5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18f00b949615b1faa7feec95d58b087d146d3198", "url": "https://api.github.com/repos/rust-lang/rust/commits/18f00b949615b1faa7feec95d58b087d146d3198", "html_url": "https://github.com/rust-lang/rust/commit/18f00b949615b1faa7feec95d58b087d146d3198"}], "stats": {"total": 55, "additions": 30, "deletions": 25}, "files": [{"sha": "4dc5c6ca3074d53fd3b5e70016e3ed6a808ea241", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -999,11 +999,16 @@ fn report_bivariance(tcx: TyCtxt<'_>, span: Span, param_name: ast::Name) {\n \n     let suggested_marker_id = tcx.lang_items().phantom_data();\n     // Help is available only in presence of lang items.\n-    if let Some(def_id) = suggested_marker_id {\n-        err.help(&format!(\"consider removing `{}` or using a marker such as `{}`\",\n-                          param_name,\n-                          tcx.def_path_str(def_id)));\n-    }\n+    let msg = if let Some(def_id) = suggested_marker_id {\n+        format!(\n+            \"consider removing `{}`, refering to it in a field or using a marker such as `{}`\",\n+            param_name,\n+            tcx.def_path_str(def_id),\n+        )\n+    } else {\n+        format!( \"consider removing `{}` or refering to it in a field\", param_name)\n+    };\n+    err.help(&msg);\n     err.emit();\n }\n "}, {"sha": "b72c68036d701b8cc63b0b8e3513191b1e8425a2", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -18,7 +18,7 @@ error[E0392]: parameter `T` is never used\n LL | pub struct Dependent<T, const X: T>([(); X]);\n    |                      ^ unused parameter\n    |\n-   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "d036cb5a07f3df10755788a9a91e801309d0f998", "filename": "src/test/ui/error-codes/E0392.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Ferror-codes%2FE0392.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Ferror-codes%2FE0392.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0392.stderr?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -4,7 +4,7 @@ error[E0392]: parameter `T` is never used\n LL | enum Foo<T> { Bar }\n    |          ^ unused parameter\n    |\n-   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to previous error\n "}, {"sha": "f945dbda7d78aee332aacd09ce6ac62c405c5eea", "filename": "src/test/ui/inner-static-type-parameter.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Finner-static-type-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Finner-static-type-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finner-static-type-parameter.stderr?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -14,7 +14,7 @@ error[E0392]: parameter `T` is never used\n LL | enum Bar<T> { What }\n    |          ^ unused parameter\n    |\n-   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "b84922a4d8f6a81c4f87deb59674a9951c9436a1", "filename": "src/test/ui/issues/issue-17904-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fissues%2Fissue-17904-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fissues%2Fissue-17904-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17904-2.stderr?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -4,7 +4,7 @@ error[E0392]: parameter `T` is never used\n LL | struct Foo<T> where T: Copy;\n    |            ^ unused parameter\n    |\n-   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to previous error\n "}, {"sha": "1c3ff16a2071a8097bbf98879866c7e460c9712e", "filename": "src/test/ui/issues/issue-20413.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fissues%2Fissue-20413.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fissues%2Fissue-20413.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20413.stderr?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -4,7 +4,7 @@ error[E0392]: parameter `T` is never used\n LL | struct NoData<T>;\n    |               ^ unused parameter\n    |\n-   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error[E0275]: overflow evaluating the requirement `NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<T>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>: Foo`\n   --> $DIR/issue-20413.rs:8:1"}, {"sha": "2a9e01421c06d1bd1a9f97215c551ac3ae1eb58c", "filename": "src/test/ui/issues/issue-36299.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fissues%2Fissue-36299.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fissues%2Fissue-36299.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-36299.stderr?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -4,15 +4,15 @@ error[E0392]: parameter `'a` is never used\n LL | struct Foo<'a, A> {}\n    |            ^^ unused parameter\n    |\n-   = help: consider removing `'a` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `A` is never used\n   --> $DIR/issue-36299.rs:1:16\n    |\n LL | struct Foo<'a, A> {}\n    |                ^ unused parameter\n    |\n-   = help: consider removing `A` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `A`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "68354b569ff5135416c67afac658bfe74661c020", "filename": "src/test/ui/issues/issue-36638.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fissues%2Fissue-36638.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fissues%2Fissue-36638.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-36638.stderr?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -16,7 +16,7 @@ error[E0392]: parameter `Self` is never used\n LL | struct Foo<Self>(Self);\n    |            ^^^^ unused parameter\n    |\n-   = help: consider removing `Self` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `Self`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "baf75771b13679dc4c1d1b6bf898dd271af1341e", "filename": "src/test/ui/issues/issue-37534.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -20,7 +20,7 @@ error[E0392]: parameter `T` is never used\n LL | struct Foo<T: ?Hash> { }\n    |            ^ unused parameter\n    |\n-   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "5c0df850cba0b82781242a067c59842e26dd85bf", "filename": "src/test/ui/regions/region-bounds-on-objects-and-type-parameters.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fregions%2Fregion-bounds-on-objects-and-type-parameters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fregions%2Fregion-bounds-on-objects-and-type-parameters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-bounds-on-objects-and-type-parameters.stderr?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -27,7 +27,7 @@ error[E0392]: parameter `'c` is never used\n LL | struct Foo<'a,'b,'c> {\n    |                  ^^ unused parameter\n    |\n-   = help: consider removing `'c` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'c`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "ee82d9da6229cbe4a84346c65a3aa8c4428e0ea5", "filename": "src/test/ui/self/self_type_keyword.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -76,7 +76,7 @@ error[E0392]: parameter `'Self` is never used\n LL | struct Bar<'Self>;\n    |            ^^^^^ unused parameter\n    |\n-   = help: consider removing `'Self` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'Self`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 12 previous errors\n "}, {"sha": "3d1158d4f799fd507c98012193f730b95e492637", "filename": "src/test/ui/variance/variance-regions-unused-direct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-direct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-direct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-direct.stderr?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -4,15 +4,15 @@ error[E0392]: parameter `'a` is never used\n LL | struct Bivariant<'a>;\n    |                  ^^ unused parameter\n    |\n-   = help: consider removing `'a` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `'d` is never used\n   --> $DIR/variance-regions-unused-direct.rs:7:19\n    |\n LL | struct Struct<'a, 'd> {\n    |                   ^^ unused parameter\n    |\n-   = help: consider removing `'d` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'d`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ccb2213f80b776372f851e35cdd4023c7dfe7ee3", "filename": "src/test/ui/variance/variance-regions-unused-indirect.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-indirect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-indirect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-indirect.stderr?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -4,15 +4,15 @@ error[E0392]: parameter `'a` is never used\n LL | enum Foo<'a> {\n    |          ^^ unused parameter\n    |\n-   = help: consider removing `'a` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `'a` is never used\n   --> $DIR/variance-regions-unused-indirect.rs:7:10\n    |\n LL | enum Bar<'a> {\n    |          ^^ unused parameter\n    |\n-   = help: consider removing `'a` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "228fe7483f6ff5d707c026da476484bfc948874b", "filename": "src/test/ui/variance/variance-unused-region-param.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-region-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-region-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-region-param.stderr?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -4,15 +4,15 @@ error[E0392]: parameter `'a` is never used\n LL | struct SomeStruct<'a> { x: u32 }\n    |                   ^^ unused parameter\n    |\n-   = help: consider removing `'a` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `'a` is never used\n   --> $DIR/variance-unused-region-param.rs:4:15\n    |\n LL | enum SomeEnum<'a> { Nothing }\n    |               ^^ unused parameter\n    |\n-   = help: consider removing `'a` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "5acf8adfe879149444ddc62e4d9820b75ad0f3c3", "filename": "src/test/ui/variance/variance-unused-type-param.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5cbe6aa6ca1612344b1ac19ec473b585e00ad022/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-type-param.stderr?ref=5cbe6aa6ca1612344b1ac19ec473b585e00ad022", "patch": "@@ -4,23 +4,23 @@ error[E0392]: parameter `A` is never used\n LL | struct SomeStruct<A> { x: u32 }\n    |                   ^ unused parameter\n    |\n-   = help: consider removing `A` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `A`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `A` is never used\n   --> $DIR/variance-unused-type-param.rs:9:15\n    |\n LL | enum SomeEnum<A> { Nothing }\n    |               ^ unused parameter\n    |\n-   = help: consider removing `A` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `A`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `T` is never used\n   --> $DIR/variance-unused-type-param.rs:13:15\n    |\n LL | enum ListCell<T> {\n    |               ^ unused parameter\n    |\n-   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, refering to it in a field or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 3 previous errors\n "}]}