{"sha": "d8761c02bf02456dc97fc6ac100bff18ce924108", "node_id": "C_kwDOAAsO6NoAKGQ4NzYxYzAyYmYwMjQ1NmRjOTdmYzZhYzEwMGJmZjE4Y2U5MjQxMDg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-12T18:37:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-12T18:37:24Z"}, "message": "Auto merge of #2592 - RalfJung:rustup, r=RalfJung\n\nRustup", "tree": {"sha": "99803ba2d68353bcd8df2864672d573c76e18828", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99803ba2d68353bcd8df2864672d573c76e18828"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8761c02bf02456dc97fc6ac100bff18ce924108", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8761c02bf02456dc97fc6ac100bff18ce924108", "html_url": "https://github.com/rust-lang/rust/commit/d8761c02bf02456dc97fc6ac100bff18ce924108", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8761c02bf02456dc97fc6ac100bff18ce924108/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7785f6dfc1b1f46ca8c0bfe737d3d8b077fc9c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7785f6dfc1b1f46ca8c0bfe737d3d8b077fc9c0", "html_url": "https://github.com/rust-lang/rust/commit/e7785f6dfc1b1f46ca8c0bfe737d3d8b077fc9c0"}, {"sha": "e67e01b321eab10667fd3b2ae575005d015e0b88", "url": "https://api.github.com/repos/rust-lang/rust/commits/e67e01b321eab10667fd3b2ae575005d015e0b88", "html_url": "https://github.com/rust-lang/rust/commit/e67e01b321eab10667fd3b2ae575005d015e0b88"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "21e9d5a05df89f560abda649be1398b33adc48fa", "filename": "src/tools/miri/rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8761c02bf02456dc97fc6ac100bff18ce924108/src%2Ftools%2Fmiri%2Frust-version", "raw_url": "https://github.com/rust-lang/rust/raw/d8761c02bf02456dc97fc6ac100bff18ce924108/src%2Ftools%2Fmiri%2Frust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Frust-version?ref=d8761c02bf02456dc97fc6ac100bff18ce924108", "patch": "@@ -1 +1 @@\n-0265a3e93bf1b89d97cae113ed214954d5c35e22\n+538f118da1409759ba198acc0ff62070bc6d2dce"}, {"sha": "f2a36572954948d4b888ac05e0b38fecf263bac3", "filename": "src/tools/miri/src/concurrency/weak_memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8761c02bf02456dc97fc6ac100bff18ce924108/src%2Ftools%2Fmiri%2Fsrc%2Fconcurrency%2Fweak_memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8761c02bf02456dc97fc6ac100bff18ce924108/src%2Ftools%2Fmiri%2Fsrc%2Fconcurrency%2Fweak_memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fconcurrency%2Fweak_memory.rs?ref=d8761c02bf02456dc97fc6ac100bff18ce924108", "patch": "@@ -17,7 +17,7 @@\n //! load to the first, as a result of C++20's coherence-ordered before rules.\n //!\n //! Rust follows the C++20 memory model (except for the Consume ordering and some operations not performable through C++'s\n-//! std::atomic<T> API). It is therefore possible for this implementation to generate behaviours never observable when the\n+//! `std::atomic<T>` API). It is therefore possible for this implementation to generate behaviours never observable when the\n //! same program is compiled and run natively. Unfortunately, no literature exists at the time of writing which proposes\n //! an implementable and C++20-compatible relaxed memory model that supports all atomic operation existing in Rust. The closest one is\n //! A Promising Semantics for Relaxed-Memory Concurrency by Jeehoon Kang et al. (<https://www.cs.tau.ac.il/~orilahav/papers/popl17.pdf>)"}, {"sha": "8de0b0413a482c67791086a5e215a7c1b258868c", "filename": "src/tools/miri/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d8761c02bf02456dc97fc6ac100bff18ce924108/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8761c02bf02456dc97fc6ac100bff18ce924108/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Flib.rs?ref=d8761c02bf02456dc97fc6ac100bff18ce924108", "patch": "@@ -1,5 +1,4 @@\n #![feature(rustc_private)]\n-#![feature(map_first_last)]\n #![feature(map_try_insert)]\n #![feature(never_type)]\n #![feature(try_blocks)]"}, {"sha": "f85ad5ae5072fb3619b9668739bc3d7313489124", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_bad_unwind2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d8761c02bf02456dc97fc6ac100bff18ce924108/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8761c02bf02456dc97fc6ac100bff18ce924108/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.rs?ref=d8761c02bf02456dc97fc6ac100bff18ce924108", "patch": "@@ -1,7 +1,7 @@\n //@revisions: extern_block definition both\n #![feature(rustc_attrs, c_unwind)]\n \n-#[cfg_attr(any(definition, both), rustc_allocator_nounwind)]\n+#[cfg_attr(any(definition, both), rustc_nounwind)]\n #[no_mangle]\n extern \"C-unwind\" fn nounwind() {\n     //[definition]~^ ERROR: abnormal termination: the program aborted execution\n@@ -11,7 +11,7 @@ extern \"C-unwind\" fn nounwind() {\n \n fn main() {\n     extern \"C-unwind\" {\n-        #[cfg_attr(any(extern_block, both), rustc_allocator_nounwind)]\n+        #[cfg_attr(any(extern_block, both), rustc_nounwind)]\n         fn nounwind();\n     }\n     unsafe { nounwind() }"}]}