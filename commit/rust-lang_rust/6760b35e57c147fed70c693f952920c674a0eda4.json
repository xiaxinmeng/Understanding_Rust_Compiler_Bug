{"sha": "6760b35e57c147fed70c693f952920c674a0eda4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NjBiMzVlNTdjMTQ3ZmVkNzBjNjkzZjk1MjkyMGM2NzRhMGVkYTQ=", "commit": {"author": {"name": "Pascal Hertleif", "email": "killercup@gmail.com", "date": "2017-01-28T13:12:35Z"}, "committer": {"name": "Pascal Hertleif", "email": "killercup@gmail.com", "date": "2017-01-28T13:12:35Z"}, "message": "Increase suggestion tests' context", "tree": {"sha": "77618722522cb89e86c60036da4379fb0303842d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77618722522cb89e86c60036da4379fb0303842d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6760b35e57c147fed70c693f952920c674a0eda4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6760b35e57c147fed70c693f952920c674a0eda4", "html_url": "https://github.com/rust-lang/rust/commit/6760b35e57c147fed70c693f952920c674a0eda4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6760b35e57c147fed70c693f952920c674a0eda4/comments", "author": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cbf548f7e6cf5dea96acb836a7300e3e46f0764", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cbf548f7e6cf5dea96acb836a7300e3e46f0764", "html_url": "https://github.com/rust-lang/rust/commit/8cbf548f7e6cf5dea96acb836a7300e3e46f0764"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "2712d4a102393f30f3ce09da4ab3618586cfe208", "filename": "tests/compile-fail/for_loop.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6760b35e57c147fed70c693f952920c674a0eda4/tests%2Fcompile-fail%2Ffor_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6760b35e57c147fed70c693f952920c674a0eda4/tests%2Fcompile-fail%2Ffor_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ffor_loop.rs?ref=6760b35e57c147fed70c693f952920c674a0eda4", "patch": "@@ -294,77 +294,77 @@ fn main() {\n     for _v in vec.iter() { }\n     //~^ ERROR it is more idiomatic to loop over `&vec`\n     //~| HELP to write this more concisely, try looping over\n-    //~| SUGGESTION &vec\n+    //~| SUGGESTION for _v in &vec {\n \n     for _v in vec.iter_mut() { }\n     //~^ ERROR it is more idiomatic to loop over `&mut vec`\n     //~| HELP to write this more concisely, try looping over\n-    //~| SUGGESTION vec\n+    //~| SUGGESTION for _v in &mut vec {\n \n     let out_vec = vec![1,2,3];\n     for _v in out_vec.into_iter() { }\n     //~^ ERROR it is more idiomatic to loop over `out_vec` instead of `out_vec.into_iter()`\n     //~| HELP to write this more concisely, try looping over\n-    //~| SUGGESTION out_vec\n+    //~| SUGGESTION for _v in out_vec {\n \n     for _v in &vec { } // these are fine\n     for _v in &mut vec { } // these are fine\n \n     for _v in [1, 2, 3].iter() { }\n     //~^ ERROR it is more idiomatic to loop over `&[\n     //~| HELP to write this more concisely, try looping over\n-    //~| SUGGESTION &[1, 2, 3]\n+    //~| SUGGESTION for _v in &[1, 2, 3] {\n \n     for _v in (&mut [1, 2, 3]).iter() { } // no error\n \n     for _v in [0; 32].iter() {}\n     //~^ ERROR it is more idiomatic to loop over `&[\n     //~| HELP to write this more concisely, try looping over\n-    //~| SUGGESTION &[0; 32]\n+    //~| SUGGESTION for _v in &[0; 32] {\n \n     for _v in [0; 33].iter() {} // no error\n \n     let ll: LinkedList<()> = LinkedList::new();\n     for _v in ll.iter() { }\n     //~^ ERROR it is more idiomatic to loop over `&ll`\n     //~| HELP to write this more concisely, try looping over\n-    //~| SUGGESTION &ll\n+    //~| SUGGESTION for _v in &ll {\n \n     let vd: VecDeque<()> = VecDeque::new();\n     for _v in vd.iter() { }\n     //~^ ERROR it is more idiomatic to loop over `&vd`\n     //~| HELP to write this more concisely, try looping over\n-    //~| SUGGESTION &vd\n+    //~| SUGGESTION for _v in &vd {\n \n     let bh: BinaryHeap<()> = BinaryHeap::new();\n     for _v in bh.iter() { }\n     //~^ ERROR it is more idiomatic to loop over `&bh`\n     //~| HELP to write this more concisely, try looping over\n-    //~| SUGGESTION &bh\n+    //~| SUGGESTION for _v in &bh {\n \n     let hm: HashMap<(), ()> = HashMap::new();\n     for _v in hm.iter() { }\n     //~^ ERROR it is more idiomatic to loop over `&hm`\n     //~| HELP to write this more concisely, try looping over\n-    //~| SUGGESTION &hm\n+    //~| SUGGESTION for _v in &hm {\n \n     let bt: BTreeMap<(), ()> = BTreeMap::new();\n     for _v in bt.iter() { }\n     //~^ ERROR it is more idiomatic to loop over `&bt`\n     //~| HELP to write this more concisely, try looping over\n-    //~| SUGGESTION &bt\n+    //~| SUGGESTION for _v in &bt {\n \n     let hs: HashSet<()> = HashSet::new();\n     for _v in hs.iter() { }\n     //~^ ERROR it is more idiomatic to loop over `&hs`\n     //~| HELP to write this more concisely, try looping over\n-    //~| SUGGESTION &hs\n+    //~| SUGGESTION for _v in &hs {\n \n     let bs: BTreeSet<()> = BTreeSet::new();\n     for _v in bs.iter() { }\n     //~^ ERROR it is more idiomatic to loop over `&bs`\n     //~| HELP to write this more concisely, try looping over\n-    //~| SUGGESTION &bs\n+    //~| SUGGESTION for _v in &bs {\n \n \n     for _v in vec.iter().next() { } //~ERROR you are iterating over `Iterator::next()`"}]}