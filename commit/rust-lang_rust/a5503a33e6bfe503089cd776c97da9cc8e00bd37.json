{"sha": "a5503a33e6bfe503089cd776c97da9cc8e00bd37", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NTAzYTMzZTZiZmU1MDMwODljZDc3NmM5N2RhOWNjOGUwMGJkMzc=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-09-22T11:48:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-22T11:48:59Z"}, "message": "Merge pull request #350 from RalfJung/inhabited\n\nget rid of ad-hoc inhabitedness test", "tree": {"sha": "9887f7e0bfee51386e57adeed7c402174b9bee34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9887f7e0bfee51386e57adeed7c402174b9bee34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5503a33e6bfe503089cd776c97da9cc8e00bd37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5503a33e6bfe503089cd776c97da9cc8e00bd37", "html_url": "https://github.com/rust-lang/rust/commit/a5503a33e6bfe503089cd776c97da9cc8e00bd37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5503a33e6bfe503089cd776c97da9cc8e00bd37/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "728e66473999abf7de5a037158df8e3a7d19be40", "url": "https://api.github.com/repos/rust-lang/rust/commits/728e66473999abf7de5a037158df8e3a7d19be40", "html_url": "https://github.com/rust-lang/rust/commit/728e66473999abf7de5a037158df8e3a7d19be40"}, {"sha": "1ad9709e0032c2f3c37c4a156419cadb7e9c17ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ad9709e0032c2f3c37c4a156419cadb7e9c17ac", "html_url": "https://github.com/rust-lang/rust/commit/1ad9709e0032c2f3c37c4a156419cadb7e9c17ac"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "0d761c245936cdb005fe5bd2a6889fef5c61017a", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a5503a33e6bfe503089cd776c97da9cc8e00bd37/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5503a33e6bfe503089cd776c97da9cc8e00bd37/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=a5503a33e6bfe503089cd776c97da9cc8e00bd37", "patch": "@@ -1818,7 +1818,7 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n                 let val = match val {\n                     PrimVal::Bytes(0) => false,\n                     PrimVal::Bytes(1) => true,\n-                    // TODO: This seems a little overeager, should reading at bool type already be UB?\n+                    // TODO: This seems a little overeager, should reading at bool type already be insta-UB?\n                     _ => return err!(InvalidBool),\n                 };\n                 PrimVal::from_bool(val)\n@@ -2237,10 +2237,6 @@ impl IntegerExt for layout::Integer {\n     }\n }\n \n-pub fn is_inhabited<'a, 'tcx: 'a>(tcx: TyCtxt<'a, 'tcx, 'tcx>, ty: Ty<'tcx>) -> bool {\n-    ty.uninhabited_from(&mut HashMap::default(), tcx).is_empty()\n-}\n-\n /// FIXME: expose trans::monomorphize::resolve_closure\n pub fn resolve_closure<'a, 'tcx>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,"}, {"sha": "e01777cdb4e76f1d275a5950faa1965758525b15", "filename": "src/librustc_mir/interpret/terminator/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a5503a33e6bfe503089cd776c97da9cc8e00bd37/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5503a33e6bfe503089cd776c97da9cc8e00bd37/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs?ref=a5503a33e6bfe503089cd776c97da9cc8e00bd37", "patch": "@@ -251,9 +251,6 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n                     _ => return err!(Unreachable),\n                 };\n                 let ty = sig.output();\n-                if !eval_context::is_inhabited(self.tcx, ty) {\n-                    return err!(Unreachable);\n-                }\n                 let layout = self.type_layout(ty)?;\n                 M::call_intrinsic(self, instance, args, ret, ty, layout, target)?;\n                 self.dump_local(ret);"}, {"sha": "6aa4e281818cabc41d7595bb2245c42802b3213b", "filename": "tests/compile-fail/never_say_never.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a5503a33e6bfe503089cd776c97da9cc8e00bd37/tests%2Fcompile-fail%2Fnever_say_never.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5503a33e6bfe503089cd776c97da9cc8e00bd37/tests%2Fcompile-fail%2Fnever_say_never.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fnever_say_never.rs?ref=a5503a33e6bfe503089cd776c97da9cc8e00bd37", "patch": "@@ -1,3 +1,6 @@\n+// This should fail even without validation\n+// compile-flags: -Zmir-emit-validate=0\n+\n #![feature(never_type)]\n #![allow(unreachable_code)]\n "}, {"sha": "7390596cf7fa62f7fd524338c74ed2ebbaab67b5", "filename": "tests/compile-fail/never_transmute_humans.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a5503a33e6bfe503089cd776c97da9cc8e00bd37/tests%2Fcompile-fail%2Fnever_transmute_humans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5503a33e6bfe503089cd776c97da9cc8e00bd37/tests%2Fcompile-fail%2Fnever_transmute_humans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fnever_transmute_humans.rs?ref=a5503a33e6bfe503089cd776c97da9cc8e00bd37", "patch": "@@ -1,3 +1,6 @@\n+// This should fail even without validation\n+// compile-flags: -Zmir-emit-validate=0\n+\n #![feature(never_type)]\n #![allow(unreachable_code)]\n #![allow(unused_variables)]"}, {"sha": "0b0897644409e1e5e2e3bedb0c2e3ca04254c239", "filename": "tests/compile-fail/never_transmute_void.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a5503a33e6bfe503089cd776c97da9cc8e00bd37/tests%2Fcompile-fail%2Fnever_transmute_void.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5503a33e6bfe503089cd776c97da9cc8e00bd37/tests%2Fcompile-fail%2Fnever_transmute_void.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fnever_transmute_void.rs?ref=a5503a33e6bfe503089cd776c97da9cc8e00bd37", "patch": "@@ -1,16 +1,19 @@\n+// This should fail even without validation\n+// compile-flags: -Zmir-emit-validate=0\n+\n #![feature(never_type)]\n #![allow(unreachable_code)]\n #![allow(unused_variables)]\n \n enum Void {}\n \n fn f(v: Void) -> ! {\n-    match v {}\n+    match v {} //~ ERROR entered unreachable code\n }\n \n fn main() {\n     let v: Void = unsafe {\n-        std::mem::transmute::<(), Void>(()) //~ ERROR entered unreachable code\n+        std::mem::transmute::<(), Void>(())\n     };\n     f(v);\n }"}]}