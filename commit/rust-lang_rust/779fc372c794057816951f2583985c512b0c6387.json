{"sha": "779fc372c794057816951f2583985c512b0c6387", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3OWZjMzcyYzc5NDA1NzgxNjk1MWYyNTgzOTg1YzUxMmIwYzYzODc=", "commit": {"author": {"name": "Christopher Vittal", "email": "christopher.vittal@gmail.com", "date": "2017-11-10T17:09:40Z"}, "committer": {"name": "Christopher Vittal", "email": "christopher.vittal@gmail.com", "date": "2017-11-15T20:46:01Z"}, "message": "Move E0562 to librustc from librustc_typeck\n\nWith the check for impl trait moving from type checking to HIR lowering\nthe error needs to move too.", "tree": {"sha": "7258fff4c48cbc96677e18b269a6e00ad83a0275", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7258fff4c48cbc96677e18b269a6e00ad83a0275"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/779fc372c794057816951f2583985c512b0c6387", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/779fc372c794057816951f2583985c512b0c6387", "html_url": "https://github.com/rust-lang/rust/commit/779fc372c794057816951f2583985c512b0c6387", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/779fc372c794057816951f2583985c512b0c6387/comments", "author": {"login": "chrisvittal", "id": 15916123, "node_id": "MDQ6VXNlcjE1OTE2MTIz", "avatar_url": "https://avatars.githubusercontent.com/u/15916123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisvittal", "html_url": "https://github.com/chrisvittal", "followers_url": "https://api.github.com/users/chrisvittal/followers", "following_url": "https://api.github.com/users/chrisvittal/following{/other_user}", "gists_url": "https://api.github.com/users/chrisvittal/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisvittal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisvittal/subscriptions", "organizations_url": "https://api.github.com/users/chrisvittal/orgs", "repos_url": "https://api.github.com/users/chrisvittal/repos", "events_url": "https://api.github.com/users/chrisvittal/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisvittal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chrisvittal", "id": 15916123, "node_id": "MDQ6VXNlcjE1OTE2MTIz", "avatar_url": "https://avatars.githubusercontent.com/u/15916123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisvittal", "html_url": "https://github.com/chrisvittal", "followers_url": "https://api.github.com/users/chrisvittal/followers", "following_url": "https://api.github.com/users/chrisvittal/following{/other_user}", "gists_url": "https://api.github.com/users/chrisvittal/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisvittal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisvittal/subscriptions", "organizations_url": "https://api.github.com/users/chrisvittal/orgs", "repos_url": "https://api.github.com/users/chrisvittal/repos", "events_url": "https://api.github.com/users/chrisvittal/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisvittal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88a28ff6028cf197ed6b4185d8cd4887f05e3e07", "url": "https://api.github.com/repos/rust-lang/rust/commits/88a28ff6028cf197ed6b4185d8cd4887f05e3e07", "html_url": "https://github.com/rust-lang/rust/commit/88a28ff6028cf197ed6b4185d8cd4887f05e3e07"}], "stats": {"total": 80, "additions": 40, "deletions": 40}, "files": [{"sha": "bab3bded77b093b9f014c0cc2bed09e50b8b2517", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/779fc372c794057816951f2583985c512b0c6387/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/779fc372c794057816951f2583985c512b0c6387/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=779fc372c794057816951f2583985c512b0c6387", "patch": "@@ -1770,6 +1770,46 @@ If you want to get command-line arguments, use `std::env::args`. To exit with a\n specified exit code, use `std::process::exit`.\n \"##,\n \n+E0562: r##\"\n+Abstract return types (written `impl Trait` for some trait `Trait`) are only\n+allowed as function return types.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0562\n+#![feature(conservative_impl_trait)]\n+\n+fn main() {\n+    let count_to_ten: impl Iterator<Item=usize> = 0..10;\n+    // error: `impl Trait` not allowed outside of function and inherent method\n+    //        return types\n+    for i in count_to_ten {\n+        println!(\"{}\", i);\n+    }\n+}\n+```\n+\n+Make sure `impl Trait` only appears in return-type position.\n+\n+```\n+#![feature(conservative_impl_trait)]\n+\n+fn count_to_n(n: usize) -> impl Iterator<Item=usize> {\n+    0..n\n+}\n+\n+fn main() {\n+    for i in count_to_n(10) {  // ok!\n+        println!(\"{}\", i);\n+    }\n+}\n+```\n+\n+See [RFC 1522] for more details.\n+\n+[RFC 1522]: https://github.com/rust-lang/rfcs/blob/master/text/1522-conservative-impl-trait.md\n+\"##,\n+\n E0591: r##\"\n Per [RFC 401][rfc401], if you have a function declaration `foo`:\n "}, {"sha": "cdf70847c02beb4d0bf6857704ef73ecfbf18a50", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/779fc372c794057816951f2583985c512b0c6387/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/779fc372c794057816951f2583985c512b0c6387/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=779fc372c794057816951f2583985c512b0c6387", "patch": "@@ -3818,46 +3818,6 @@ let s = Simba { mother: 1, father: 0 }; // ok!\n ```\n \"##,\n \n-E0562: r##\"\n-Abstract return types (written `impl Trait` for some trait `Trait`) are only\n-allowed as function return types.\n-\n-Erroneous code example:\n-\n-```compile_fail,E0562\n-#![feature(conservative_impl_trait)]\n-\n-fn main() {\n-    let count_to_ten: impl Iterator<Item=usize> = 0..10;\n-    // error: `impl Trait` not allowed outside of function and inherent method\n-    //        return types\n-    for i in count_to_ten {\n-        println!(\"{}\", i);\n-    }\n-}\n-```\n-\n-Make sure `impl Trait` only appears in return-type position.\n-\n-```\n-#![feature(conservative_impl_trait)]\n-\n-fn count_to_n(n: usize) -> impl Iterator<Item=usize> {\n-    0..n\n-}\n-\n-fn main() {\n-    for i in count_to_n(10) {  // ok!\n-        println!(\"{}\", i);\n-    }\n-}\n-```\n-\n-See [RFC 1522] for more details.\n-\n-[RFC 1522]: https://github.com/rust-lang/rfcs/blob/master/text/1522-conservative-impl-trait.md\n-\"##,\n-\n E0569: r##\"\n If an impl has a generic parameter with the `#[may_dangle]` attribute, then\n that impl must be declared as an `unsafe impl."}]}