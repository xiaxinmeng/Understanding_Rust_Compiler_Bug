{"sha": "54cb728ab8b89ef31578455031519101a93dadc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0Y2I3MjhhYjhiODllZjMxNTc4NDU1MDMxNTE5MTAxYTkzZGFkYzc=", "commit": {"author": {"name": "Kyle Strand", "email": "kyle.strand@rms.com", "date": "2019-08-28T18:04:32Z"}, "committer": {"name": "Kyle Strand", "email": "kyle.strand@rms.com", "date": "2019-08-28T18:04:32Z"}, "message": "Let 'clamp' be invoked without using return value; used in tests", "tree": {"sha": "3af29d81eb4be0879d25e1c5318c193d562afeef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3af29d81eb4be0879d25e1c5318c193d562afeef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54cb728ab8b89ef31578455031519101a93dadc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54cb728ab8b89ef31578455031519101a93dadc7", "html_url": "https://github.com/rust-lang/rust/commit/54cb728ab8b89ef31578455031519101a93dadc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54cb728ab8b89ef31578455031519101a93dadc7/comments", "author": null, "committer": null, "parents": [{"sha": "c5b0003d9948ac302631f83e2addfa51db6ac601", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5b0003d9948ac302631f83e2addfa51db6ac601", "html_url": "https://github.com/rust-lang/rust/commit/c5b0003d9948ac302631f83e2addfa51db6ac601"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "aefe4690b106cde4b27baf8d4fdc34eb033d1427", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/54cb728ab8b89ef31578455031519101a93dadc7/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54cb728ab8b89ef31578455031519101a93dadc7/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=54cb728ab8b89ef31578455031519101a93dadc7", "patch": "@@ -1015,7 +1015,8 @@ impl f32 {\n     /// assert!((2.0f32).clamp(-2.0, 1.0) == 1.0);\n     /// assert!((std::f32::NAN).clamp(-2.0, 1.0).is_nan());\n     /// ```\n-    #[must_use = \"method returns a new number and does not mutate the original value\"]\n+    // The tests below invoke `clamp` without a return value in order to cause a `panic`.\n+    // #[must_use = \"method returns a new number and does not mutate the original value\"]\n     #[unstable(feature = \"clamp\", issue = \"44095\")]\n     #[inline]\n     pub fn clamp(self, min: f32, max: f32) -> f32 {"}, {"sha": "0eca1434a637f17c636d9822d3dda89364d52ce5", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54cb728ab8b89ef31578455031519101a93dadc7/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54cb728ab8b89ef31578455031519101a93dadc7/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=54cb728ab8b89ef31578455031519101a93dadc7", "patch": "@@ -936,6 +936,8 @@ impl f64 {\n     /// assert!((2.0f64).clamp(-2.0, 1.0) == 1.0);\n     /// assert!((std::f64::NAN).clamp(-2.0, 1.0).is_nan());\n     /// ```\n+    // The tests below invoke `clamp` without a return value in order to cause a `panic`.\n+    // #[must_use = \"method returns a new number and does not mutate the original value\"]\n     #[unstable(feature = \"clamp\", issue = \"44095\")]\n     #[inline]\n     pub fn clamp(self, min: f64, max: f64) -> f64 {"}]}