{"sha": "8050c1993b0a5dc43aab836e8323c2835a13448f", "node_id": "C_kwDOAAsO6NoAKDgwNTBjMTk5M2IwYTVkYzQzYWFiODM2ZTgzMjNjMjgzNWExMzQ0OGY", "commit": {"author": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-08-28T01:35:44Z"}, "committer": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-08-28T23:15:10Z"}, "message": "Rustdoc-Json: Retain Stripped Modules when they are imported, not when they have items.\n\nFixes #101103\nFixes #100973", "tree": {"sha": "db52a2226bd5fa28750b255d87f4a351127874d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db52a2226bd5fa28750b255d87f4a351127874d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8050c1993b0a5dc43aab836e8323c2835a13448f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8050c1993b0a5dc43aab836e8323c2835a13448f", "html_url": "https://github.com/rust-lang/rust/commit/8050c1993b0a5dc43aab836e8323c2835a13448f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8050c1993b0a5dc43aab836e8323c2835a13448f/comments", "author": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaadb8947b850a025404082f6297766c4680a42a", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaadb8947b850a025404082f6297766c4680a42a", "html_url": "https://github.com/rust-lang/rust/commit/eaadb8947b850a025404082f6297766c4680a42a"}], "stats": {"total": 120, "additions": 107, "deletions": 13}, "files": [{"sha": "20b9eb1c27e92cb046a2f55757e3c64e3e99ffd2", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=8050c1993b0a5dc43aab836e8323c2835a13448f", "patch": "@@ -46,10 +46,14 @@ impl JsonRenderer<'_> {\n             clean::KeywordItem => return None,\n             clean::StrippedItem(ref inner) => {\n                 match &**inner {\n-                    // We document non-empty stripped modules as with `Module::is_stripped` set to\n+                    // We document stripped modules as with `Module::is_stripped` set to\n                     // `true`, to prevent contained items from being orphaned for downstream users,\n                     // as JSON does no inlining.\n-                    clean::ModuleItem(m) if !m.items.is_empty() => from_clean_item(item, self.tcx),\n+                    clean::ModuleItem(_)\n+                        if self.imported_items.contains(&item_id.expect_def_id()) =>\n+                    {\n+                        from_clean_item(item, self.tcx)\n+                    }\n                     _ => return None,\n                 }\n             }"}, {"sha": "c5c687df74fd88072f0f348134f219b19b96af8d", "filename": "src/librustdoc/json/import_finder.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Flibrustdoc%2Fjson%2Fimport_finder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Flibrustdoc%2Fjson%2Fimport_finder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fimport_finder.rs?ref=8050c1993b0a5dc43aab836e8323c2835a13448f", "patch": "@@ -0,0 +1,38 @@\n+use rustc_data_structures::fx::FxHashSet;\n+use rustc_hir::def_id::DefId;\n+\n+use crate::{\n+    clean::{self, Import, ImportSource, Item},\n+    fold::DocFolder,\n+};\n+\n+/// Get the id's of all items that are `pub use`d in the crate.\n+///\n+/// We need this to know if a stripped module is `pub use mod::*`, to decide\n+/// if it needs to be kept in the index, despite being stripped.\n+///\n+/// See [#100973](https://github.com/rust-lang/rust/issues/100973) and\n+/// [#101103](https://github.com/rust-lang/rust/issues/101103) for times when\n+/// this information is needed.\n+pub(crate) fn get_imports(krate: clean::Crate) -> (clean::Crate, FxHashSet<DefId>) {\n+    let mut finder = ImportFinder { imported: FxHashSet::default() };\n+    let krate = finder.fold_crate(krate);\n+    (krate, finder.imported)\n+}\n+\n+struct ImportFinder {\n+    imported: FxHashSet<DefId>,\n+}\n+\n+impl DocFolder for ImportFinder {\n+    fn fold_item(&mut self, i: Item) -> Option<Item> {\n+        match *i.kind {\n+            clean::ImportItem(Import { source: ImportSource { did: Some(did), .. }, .. }) => {\n+                self.imported.insert(did);\n+                Some(i)\n+            }\n+\n+            _ => Some(self.fold_item_recur(i)),\n+        }\n+    }\n+}"}, {"sha": "577aad8f3bb93eae6352d7f923e30624766824c8", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=8050c1993b0a5dc43aab836e8323c2835a13448f", "patch": "@@ -5,14 +5,15 @@\n //! docs for usage and details.\n \n mod conversions;\n+mod import_finder;\n \n use std::cell::RefCell;\n use std::fs::{create_dir_all, File};\n use std::io::{BufWriter, Write};\n use std::path::PathBuf;\n use std::rc::Rc;\n \n-use rustc_data_structures::fx::FxHashMap;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir::def_id::DefId;\n use rustc_middle::ty::TyCtxt;\n use rustc_session::Session;\n@@ -39,6 +40,7 @@ pub(crate) struct JsonRenderer<'tcx> {\n     /// The directory where the blob will be written to.\n     out_path: PathBuf,\n     cache: Rc<Cache>,\n+    imported_items: FxHashSet<DefId>,\n }\n \n impl<'tcx> JsonRenderer<'tcx> {\n@@ -157,12 +159,16 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n         tcx: TyCtxt<'tcx>,\n     ) -> Result<(Self, clean::Crate), Error> {\n         debug!(\"Initializing json renderer\");\n+\n+        let (krate, imported_items) = import_finder::get_imports(krate);\n+\n         Ok((\n             JsonRenderer {\n                 tcx,\n                 index: Rc::new(RefCell::new(FxHashMap::default())),\n                 out_path: options.output,\n                 cache: Rc::new(cache),\n+                imported_items,\n             },\n             krate,\n         ))"}, {"sha": "f91144dbfad502bcf1384b679db8b04d7d140295", "filename": "src/test/rustdoc-json/reexport/glob_collision.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_collision.rs?ref=8050c1993b0a5dc43aab836e8323c2835a13448f", "patch": "@@ -0,0 +1,28 @@\n+// Regression test for https://github.com/rust-lang/rust/issues/100973\n+\n+#![feature(no_core)]\n+#![no_core]\n+\n+// @set m1 = \"$.index[*][?(@.name == 'm1' && @.kind == 'module')].id\"\n+// @is \"$.index[*][?(@.name == 'm1' && @.kind == 'module')].inner.items\" []\n+// @is \"$.index[*][?(@.name == 'm1' && @.kind == 'module')].inner.is_stripped\" true\n+mod m1 {\n+    pub fn f() {}\n+}\n+// @set m2 = \"$.index[*][?(@.name == 'm2' && @.kind == 'module')].id\"\n+// @is \"$.index[*][?(@.name == 'm2' && @.kind == 'module')].inner.items\" []\n+// @is \"$.index[*][?(@.name == 'm2' && @.kind == 'module')].inner.is_stripped\" true\n+mod m2 {\n+    pub fn f(_: u8) {}\n+}\n+\n+// @set m1_use = \"$.index[*][?(@.inner.name=='m1')].id\"\n+// @is \"$.index[*][?(@.inner.name=='m1')].inner.id\" $m1\n+// @is \"$.index[*][?(@.inner.name=='m1')].inner.glob\" true\n+pub use m1::*;\n+// @set m2_use = \"$.index[*][?(@.inner.name=='m2')].id\"\n+// @is \"$.index[*][?(@.inner.name=='m2')].inner.id\" $m2\n+// @is \"$.index[*][?(@.inner.name=='m2')].inner.glob\" true\n+pub use m2::*;\n+\n+// @ismany \"$.index[*][?(@.inner.is_crate==true)].inner.items[*]\" $m1_use $m2_use"}, {"sha": "da68228352c1c2cc02cc97857d78ea164a60811e", "filename": "src/test/rustdoc-json/reexport/glob_empty_mod.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_empty_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_empty_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_empty_mod.rs?ref=8050c1993b0a5dc43aab836e8323c2835a13448f", "patch": "@@ -0,0 +1,8 @@\n+// Regression test for https://github.com/rust-lang/rust/issues/100973\n+\n+// @is \"$.index[*][?(@.name=='m1' && @.kind == 'module')].inner.is_stripped\" true\n+// @set m1 = \"$.index[*][?(@.name=='m1')].id\"\n+mod m1 {}\n+\n+// @is \"$.index[*][?(@.inner.name=='m1' && @.kind=='import')].inner.id\" $m1\n+pub use m1::*;"}, {"sha": "7b97ebf2129eb91ce0c7908f611e424555f1c0d0", "filename": "src/test/rustdoc-json/reexport/in_root_and_mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Freexport%2Fin_root_and_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Freexport%2Fin_root_and_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Fin_root_and_mod.rs?ref=8050c1993b0a5dc43aab836e8323c2835a13448f", "patch": "@@ -1,8 +1,7 @@\n #![feature(no_core)]\n #![no_core]\n \n-// @is \"$.index[*][?(@.name=='foo')].kind\" \\\"module\\\"\n-// @is \"$.index[*][?(@.name=='foo')].inner.is_stripped\" \"true\"\n+// @!has \"$.index[*][?(@.name=='foo')]\"\n mod foo {\n     // @has \"$.index[*][?(@.name=='Foo')]\"\n     pub struct Foo;"}, {"sha": "7b7600ef20f08b4ec0719558c4d9d20136c8cc88", "filename": "src/test/rustdoc-json/reexport/mod_not_included.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Freexport%2Fmod_not_included.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Freexport%2Fmod_not_included.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Fmod_not_included.rs?ref=8050c1993b0a5dc43aab836e8323c2835a13448f", "patch": "@@ -0,0 +1,14 @@\n+// Regression test for https://github.com/rust-lang/rust/issues/101103\n+\n+#![feature(no_core)]\n+#![no_core]\n+\n+mod m1 {\n+    pub fn x() {}\n+}\n+\n+pub use m1::x;\n+\n+// @has \"$.index[*][?(@.name=='x' && @.kind=='function')]\"\n+// @has \"$.index[*][?(@.kind=='import' && @.inner.name=='x')].inner.source\" '\"m1::x\"'\n+// @!has \"$.index[*][?(@.name=='m1')]\""}, {"sha": "9858538a9d046493b7926fc34c15303e47d115e3", "filename": "src/test/rustdoc-json/reexport/private_two_names.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Freexport%2Fprivate_two_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Freexport%2Fprivate_two_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Fprivate_two_names.rs?ref=8050c1993b0a5dc43aab836e8323c2835a13448f", "patch": "@@ -6,8 +6,7 @@\n #![no_core]\n #![feature(no_core)]\n \n-// @is \"$.index[*][?(@.name=='style')].kind\" \\\"module\\\"\n-// @is \"$.index[*][?(@.name=='style')].inner.is_stripped\" \"true\"\n+// @!has \"$.index[*][?(@.name=='style')]\"\n mod style {\n     // @set color_struct_id = \"$.index[*][?(@.kind=='struct' && @.name=='Color')].id\"\n     pub struct Color;"}, {"sha": "8fd850f9b1370ad7e00a78f59ef9b46ac2063f46", "filename": "src/test/rustdoc-json/reexport/rename_private.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Freexport%2Frename_private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Freexport%2Frename_private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Frename_private.rs?ref=8050c1993b0a5dc43aab836e8323c2835a13448f", "patch": "@@ -3,8 +3,7 @@\n #![no_core]\n #![feature(no_core)]\n \n-// @is \"$.index[*][?(@.name=='inner')].kind\" \\\"module\\\"\n-// @is \"$.index[*][?(@.name=='inner')].inner.is_stripped\" \"true\"\n+// @!has \"$.index[*][?(@.kind=='inner')]\"\n mod inner {\n     // @has \"$.index[*][?(@.name=='Public')]\"\n     pub struct Public;"}, {"sha": "d058ce0598d43e557d1ecd998365a4252642e636", "filename": "src/test/rustdoc-json/reexport/simple_private.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Freexport%2Fsimple_private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Freexport%2Fsimple_private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Fsimple_private.rs?ref=8050c1993b0a5dc43aab836e8323c2835a13448f", "patch": "@@ -2,16 +2,15 @@\n #![no_core]\n #![feature(no_core)]\n \n-// @is \"$.index[*][?(@.name=='inner')].kind\" \\\"module\\\"\n-// @is \"$.index[*][?(@.name=='inner')].inner.is_stripped\" \"true\"\n+// @!has \"$.index[*][?(@.name=='inner')]\"\n mod inner {\n     // @set pub_id = \"$.index[*][?(@.name=='Public')].id\"\n     pub struct Public;\n }\n \n // @is \"$.index[*][?(@.kind=='import')].inner.name\" \\\"Public\\\"\n+// @is \"$.index[*][?(@.kind=='import')].inner.id\" $pub_id\n // @set use_id = \"$.index[*][?(@.kind=='import')].id\"\n pub use inner::Public;\n \n-// @ismany \"$.index[*][?(@.name=='inner')].inner.items[*]\" $pub_id\n // @ismany \"$.index[*][?(@.name=='simple_private')].inner.items[*]\" $use_id"}, {"sha": "d2664b49e9c29209897d6216d3480e2756820684", "filename": "src/test/rustdoc-json/stripped_modules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Fstripped_modules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8050c1993b0a5dc43aab836e8323c2835a13448f/src%2Ftest%2Frustdoc-json%2Fstripped_modules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fstripped_modules.rs?ref=8050c1993b0a5dc43aab836e8323c2835a13448f", "patch": "@@ -12,7 +12,7 @@ mod pub_inner_unreachable {\n     pub fn pub_inner_1() {}\n }\n \n-// @has \"$.index[*][?(@.name=='pub_inner_reachable')]\"\n+// @!has \"$.index[*][?(@.name=='pub_inner_reachable')]\"\n mod pub_inner_reachable {\n     // @has \"$.index[*][?(@.name=='pub_inner_2')]\"\n     pub fn pub_inner_2() {}"}]}