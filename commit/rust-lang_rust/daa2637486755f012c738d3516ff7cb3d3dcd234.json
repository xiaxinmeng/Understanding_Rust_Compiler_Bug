{"sha": "daa2637486755f012c738d3516ff7cb3d3dcd234", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYTI2Mzc0ODY3NTVmMDEyYzczOGQzNTE2ZmY3Y2IzZDNkY2QyMzQ=", "commit": {"author": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2021-03-11T14:39:41Z"}, "committer": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2021-03-11T14:39:41Z"}, "message": "Apply review suggestions", "tree": {"sha": "7ee45f3bc3d89a90a709ae4076c0eec74717b262", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ee45f3bc3d89a90a709ae4076c0eec74717b262"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daa2637486755f012c738d3516ff7cb3d3dcd234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daa2637486755f012c738d3516ff7cb3d3dcd234", "html_url": "https://github.com/rust-lang/rust/commit/daa2637486755f012c738d3516ff7cb3d3dcd234", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daa2637486755f012c738d3516ff7cb3d3dcd234/comments", "author": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f234b80520ed63b168475be38086d053567f4c1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f234b80520ed63b168475be38086d053567f4c1e", "html_url": "https://github.com/rust-lang/rust/commit/f234b80520ed63b168475be38086d053567f4c1e"}], "stats": {"total": 29, "additions": 11, "deletions": 18}, "files": [{"sha": "d8cf66168882178ea9dba55687fbebd1424e618d", "filename": "crates/ide/src/runnables.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/daa2637486755f012c738d3516ff7cb3d3dcd234/crates%2Fide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daa2637486755f012c738d3516ff7cb3d3dcd234/crates%2Fide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frunnables.rs?ref=daa2637486755f012c738d3516ff7cb3d3dcd234", "patch": "@@ -5,7 +5,10 @@ use cfg::CfgExpr;\n use hir::{AsAssocItem, HasAttrs, HasSource, Semantics};\n use ide_assists::utils::test_related_attribute;\n use ide_db::{\n-    base_db::FilePosition, defs::Definition, search::SearchScope, RootDatabase, SymbolKind,\n+    base_db::{FilePosition, FileRange},\n+    defs::Definition,\n+    search::SearchScope,\n+    RootDatabase, SymbolKind,\n };\n use itertools::Itertools;\n use rustc_hash::FxHashSet;\n@@ -168,7 +171,7 @@ fn find_related_tests_in_module(\n         };\n \n         let file_id = mod_source.file_id.original_file(sema.db);\n-        let mod_scope = SearchScope::file_part(file_id, range);\n+        let mod_scope = SearchScope::file_range(FileRange { file_id, range });\n         let fn_pos = FilePosition { file_id, offset: fn_name.syntax().text_range().start() };\n         find_related_tests(sema, fn_pos, Some(mod_scope), tests)\n     }"}, {"sha": "fa18703e193450b3be8682ad34e5c6adbcbed96b", "filename": "crates/ide_db/src/search.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/daa2637486755f012c738d3516ff7cb3d3dcd234/crates%2Fide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daa2637486755f012c738d3516ff7cb3d3dcd234/crates%2Fide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsearch.rs?ref=daa2637486755f012c738d3516ff7cb3d3dcd234", "patch": "@@ -86,8 +86,8 @@ impl SearchScope {\n         SearchScope::new(std::iter::once((file, None)).collect())\n     }\n \n-    pub fn file_part(file: FileId, range: TextRange) -> SearchScope {\n-        SearchScope::new(std::iter::once((file, Some(range))).collect())\n+    pub fn file_range(range: FileRange) -> SearchScope {\n+        SearchScope::new(std::iter::once((range.file_id, Some(range.range))).collect())\n     }\n \n     pub fn files(files: &[FileId]) -> SearchScope {"}, {"sha": "ba8639e30dbd4d1b45f3f1c2e52f75d3b858fb00", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/daa2637486755f012c738d3516ff7cb3d3dcd234/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daa2637486755f012c738d3516ff7cb3d3dcd234/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=daa2637486755f012c738d3516ff7cb3d3dcd234", "patch": "@@ -609,10 +609,10 @@ pub(crate) fn handle_runnables(\n \n pub(crate) fn handle_related_tests(\n     snap: GlobalStateSnapshot,\n-    params: lsp_ext::RelatedTestsParams,\n+    params: lsp_types::TextDocumentPositionParams,\n ) -> Result<Vec<lsp_ext::TestInfo>> {\n     let _p = profile::span(\"handle_related_tests\");\n-    let position = from_proto::file_position(&snap, params.text_document_position)?;\n+    let position = from_proto::file_position(&snap, params)?;\n \n     let tests = snap.analysis.related_tests(position, None)?;\n     let mut res = Vec::new();"}, {"sha": "efcdcd1d97557795ab9d931adf91628f866a027a", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/daa2637486755f012c738d3516ff7cb3d3dcd234/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daa2637486755f012c738d3516ff7cb3d3dcd234/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=daa2637486755f012c738d3516ff7cb3d3dcd234", "patch": "@@ -180,18 +180,11 @@ pub struct CargoRunnable {\n pub enum RelatedTests {}\n \n impl Request for RelatedTests {\n-    type Params = RelatedTestsParams;\n+    type Params = lsp_types::TextDocumentPositionParams;\n     type Result = Vec<TestInfo>;\n     const METHOD: &'static str = \"rust-analyzer/relatedTests\";\n }\n \n-#[derive(Serialize, Deserialize, Debug)]\n-#[serde(rename_all = \"camelCase\")]\n-pub struct RelatedTestsParams {\n-    #[serde(flatten)]\n-    pub text_document_position: lsp_types::TextDocumentPositionParams,\n-}\n-\n #[derive(Debug, Deserialize, Serialize)]\n pub struct TestInfo {\n     pub runnable: Runnable,"}, {"sha": "52de29e04fd59f260081a1eac5cc5522cda0ad18", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/daa2637486755f012c738d3516ff7cb3d3dcd234/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/daa2637486755f012c738d3516ff7cb3d3dcd234/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=daa2637486755f012c738d3516ff7cb3d3dcd234", "patch": "@@ -72,14 +72,11 @@ export interface Runnable {\n }\n export const runnables = new lc.RequestType<RunnablesParams, Runnable[], void>(\"experimental/runnables\");\n \n-export interface RelatedTestsParams extends lc.TextDocumentPositionParams {\n-}\n-\n export interface TestInfo {\n     runnable: Runnable;\n }\n \n-export const relatedTests = new lc.RequestType<RelatedTestsParams, TestInfo[], void>(\"rust-analyzer/relatedTests\");\n+export const relatedTests = new lc.RequestType<lc.TextDocumentPositionParams, TestInfo[], void>(\"rust-analyzer/relatedTests\");\n \n export type InlayHint = InlayHint.TypeHint | InlayHint.ParamHint | InlayHint.ChainingHint;\n "}]}