{"sha": "d4a816c8131af05dcf6c791ae8afbcce3272809b", "node_id": "C_kwDOAAsO6NoAKGQ0YTgxNmM4MTMxYWYwNWRjZjZjNzkxYWU4YWZiY2NlMzI3MjgwOWI", "commit": {"author": {"name": "Lenko Donchev", "email": "lenko.donchev@gmail.com", "date": "2023-01-28T04:50:24Z"}, "committer": {"name": "Lenko Donchev", "email": "lenko.donchev@gmail.com", "date": "2023-01-28T04:50:24Z"}, "message": "remove the usize field from CandidateSource::AliasBound", "tree": {"sha": "b45ef0397f4d110dd0d51b9e90cc9b653efc908f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b45ef0397f4d110dd0d51b9e90cc9b653efc908f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4a816c8131af05dcf6c791ae8afbcce3272809b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4a816c8131af05dcf6c791ae8afbcce3272809b", "html_url": "https://github.com/rust-lang/rust/commit/d4a816c8131af05dcf6c791ae8afbcce3272809b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4a816c8131af05dcf6c791ae8afbcce3272809b/comments", "author": {"login": "lenko-d", "id": 1954225, "node_id": "MDQ6VXNlcjE5NTQyMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1954225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lenko-d", "html_url": "https://github.com/lenko-d", "followers_url": "https://api.github.com/users/lenko-d/followers", "following_url": "https://api.github.com/users/lenko-d/following{/other_user}", "gists_url": "https://api.github.com/users/lenko-d/gists{/gist_id}", "starred_url": "https://api.github.com/users/lenko-d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lenko-d/subscriptions", "organizations_url": "https://api.github.com/users/lenko-d/orgs", "repos_url": "https://api.github.com/users/lenko-d/repos", "events_url": "https://api.github.com/users/lenko-d/events{/privacy}", "received_events_url": "https://api.github.com/users/lenko-d/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lenko-d", "id": 1954225, "node_id": "MDQ6VXNlcjE5NTQyMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1954225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lenko-d", "html_url": "https://github.com/lenko-d", "followers_url": "https://api.github.com/users/lenko-d/followers", "following_url": "https://api.github.com/users/lenko-d/following{/other_user}", "gists_url": "https://api.github.com/users/lenko-d/gists{/gist_id}", "starred_url": "https://api.github.com/users/lenko-d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lenko-d/subscriptions", "organizations_url": "https://api.github.com/users/lenko-d/orgs", "repos_url": "https://api.github.com/users/lenko-d/repos", "events_url": "https://api.github.com/users/lenko-d/events{/privacy}", "received_events_url": "https://api.github.com/users/lenko-d/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d4df2d30eb342af1ef136d83d70d281f34adcd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d4df2d30eb342af1ef136d83d70d281f34adcd7", "html_url": "https://github.com/rust-lang/rust/commit/7d4df2d30eb342af1ef136d83d70d281f34adcd7"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "4d2a9eca6f9cbf8c1b264a91099beda240fbe64b", "filename": "compiler/rustc_trait_selection/src/solve/assembly.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d4a816c8131af05dcf6c791ae8afbcce3272809b/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4a816c8131af05dcf6c791ae8afbcce3272809b/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs?ref=d4a816c8131af05dcf6c791ae8afbcce3272809b", "patch": "@@ -76,7 +76,7 @@ pub(super) enum CandidateSource {\n     ///     let _y = x.clone();\n     /// }\n     /// ```\n-    AliasBound(usize),\n+    AliasBound(),\n }\n \n pub(super) trait GoalKind<'tcx>: TypeFoldable<'tcx> + Copy + Eq {\n@@ -217,8 +217,6 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n             // NOTE: Alternatively we could call `evaluate_goal` here and only have a `Normalized` candidate.\n             // This doesn't work as long as we use `CandidateSource` in winnowing.\n             let goal = goal.with(tcx, goal.predicate.with_self_ty(tcx, normalized_ty));\n-            // FIXME: This is broken if we care about the `usize` of `AliasBound` because the self type\n-            // could be normalized to yet another projection with different item bounds.\n             let normalized_candidates = self.assemble_and_evaluate_candidates(goal);\n             for mut normalized_candidate in normalized_candidates {\n                 normalized_candidate.result =\n@@ -342,15 +340,15 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n             ty::Alias(_, alias_ty) => alias_ty,\n         };\n \n-        for (i, (assumption, _)) in self\n+        for (_, (assumption, _)) in self\n             .tcx()\n             .bound_explicit_item_bounds(alias_ty.def_id)\n             .subst_iter_copied(self.tcx(), alias_ty.substs)\n             .enumerate()\n         {\n             match G::consider_assumption(self, goal, assumption) {\n                 Ok(result) => {\n-                    candidates.push(Candidate { source: CandidateSource::AliasBound(i), result })\n+                    candidates.push(Candidate { source: CandidateSource::AliasBound(), result })\n                 }\n                 Err(NoSolution) => (),\n             }"}, {"sha": "66f3395772b8187646ee45bf625f0117d3dfbf75", "filename": "compiler/rustc_trait_selection/src/solve/project_goals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4a816c8131af05dcf6c791ae8afbcce3272809b/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4a816c8131af05dcf6c791ae8afbcce3272809b/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs?ref=d4a816c8131af05dcf6c791ae8afbcce3272809b", "patch": "@@ -171,7 +171,7 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n             (CandidateSource::Impl(_), _)\n             | (CandidateSource::ParamEnv(_), _)\n             | (CandidateSource::BuiltinImpl, _)\n-            | (CandidateSource::AliasBound(_), _) => unimplemented!(),\n+            | (CandidateSource::AliasBound(), _) => unimplemented!(),\n         }\n     }\n }"}, {"sha": "4625e58652725b643f1251d2e18741c82f88e9cf", "filename": "compiler/rustc_trait_selection/src/solve/trait_goals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4a816c8131af05dcf6c791ae8afbcce3272809b/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4a816c8131af05dcf6c791ae8afbcce3272809b/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs?ref=d4a816c8131af05dcf6c791ae8afbcce3272809b", "patch": "@@ -320,7 +320,7 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n         match (candidate.source, other.source) {\n             (CandidateSource::Impl(_), _)\n             | (CandidateSource::ParamEnv(_), _)\n-            | (CandidateSource::AliasBound(_), _)\n+            | (CandidateSource::AliasBound(), _)\n             | (CandidateSource::BuiltinImpl, _) => unimplemented!(),\n         }\n     }"}]}