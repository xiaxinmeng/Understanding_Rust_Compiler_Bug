{"sha": "b1a9d71218bf1f94960496ccb38e92658e89b246", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxYTlkNzEyMThiZjFmOTQ5NjA0OTZjY2IzOGU5MjY1OGU4OWIyNDY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-10-12T00:36:29Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-12T23:33:07Z"}, "message": "improve the span used in test generation", "tree": {"sha": "3a21f04c2e7f8d689fce476ca96769cf69596914", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a21f04c2e7f8d689fce476ca96769cf69596914"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1a9d71218bf1f94960496ccb38e92658e89b246", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1a9d71218bf1f94960496ccb38e92658e89b246", "html_url": "https://github.com/rust-lang/rust/commit/b1a9d71218bf1f94960496ccb38e92658e89b246", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1a9d71218bf1f94960496ccb38e92658e89b246/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81533ff737f2d71c7518188b71fbafd73e0d1434", "url": "https://api.github.com/repos/rust-lang/rust/commits/81533ff737f2d71c7518188b71fbafd73e0d1434", "html_url": "https://github.com/rust-lang/rust/commit/81533ff737f2d71c7518188b71fbafd73e0d1434"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "3e9e7916b334a3a641b143588cb90d0cb4ee8189", "filename": "src/comp/front/test.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b1a9d71218bf1f94960496ccb38e92658e89b246/src%2Fcomp%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1a9d71218bf1f94960496ccb38e92658e89b246/src%2Fcomp%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Ftest.rs?ref=b1a9d71218bf1f94960496ccb38e92658e89b246", "patch": "@@ -6,13 +6,14 @@ import syntax::ast_util::*;\n //import syntax::ast_util::dummy_sp;\n import syntax::fold;\n import syntax::print::pprust;\n+import syntax::codemap::span;\n import front::attr;\n \n export modify_for_testing;\n \n type node_id_gen = fn() -> ast::node_id;\n \n-type test = {path: [ast::ident], ignore: bool};\n+type test = {span: span, path: [ast::ident], ignore: bool};\n \n type test_ctxt =\n     @{next_node_id: node_id_gen,\n@@ -90,7 +91,7 @@ fn fold_item(cx: test_ctxt, &&i: @ast::item, fld: fold::ast_fold) ->\n \n     if is_test_fn(i) {\n         log \"this is a test function\";\n-        let test = {path: cx.path, ignore: is_ignored(i)};\n+        let test = {span: i.span, path: cx.path, ignore: is_ignored(i)};\n         cx.testfns += [test];\n         log #fmt[\"have %u test functions\", vec::len(cx.testfns)];\n     }\n@@ -237,6 +238,7 @@ fn mk_test_desc_vec(cx: test_ctxt) -> @ast::expr {\n }\n \n fn mk_test_desc_rec(cx: test_ctxt, test: test) -> @ast::expr {\n+    let span = test.span;\n     let path = test.path;\n \n     log #fmt[\"encoding %s\", ast_util::path_name_i(path)];\n@@ -246,7 +248,7 @@ fn mk_test_desc_rec(cx: test_ctxt, test: test) -> @ast::expr {\n     let name_expr: ast::expr =\n         {id: cx.next_node_id(),\n          node: ast::expr_lit(@name_lit),\n-         span: dummy_sp()};\n+         span: span};\n \n     let name_field: ast::field =\n         nospan({mut: ast::imm, ident: \"name\", expr: @name_expr});\n@@ -256,7 +258,7 @@ fn mk_test_desc_rec(cx: test_ctxt, test: test) -> @ast::expr {\n     let fn_expr: ast::expr =\n         {id: cx.next_node_id(),\n          node: ast::expr_path(fn_path),\n-         span: dummy_sp()};\n+         span: span};\n \n     let fn_field: ast::field =\n         nospan({mut: ast::imm, ident: \"fn\", expr: @fn_expr});\n@@ -266,15 +268,15 @@ fn mk_test_desc_rec(cx: test_ctxt, test: test) -> @ast::expr {\n     let ignore_expr: ast::expr =\n         {id: cx.next_node_id(),\n          node: ast::expr_lit(@ignore_lit),\n-         span: dummy_sp()};\n+         span: span};\n \n     let ignore_field: ast::field =\n         nospan({mut: ast::imm, ident: \"ignore\", expr: @ignore_expr});\n \n     let desc_rec_: ast::expr_ =\n         ast::expr_rec([name_field, fn_field, ignore_field], option::none);\n     let desc_rec: ast::expr =\n-        {id: cx.next_node_id(), node: desc_rec_, span: dummy_sp()};\n+        {id: cx.next_node_id(), node: desc_rec_, span: span};\n     ret @desc_rec;\n }\n "}]}