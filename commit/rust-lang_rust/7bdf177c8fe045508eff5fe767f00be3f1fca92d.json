{"sha": "7bdf177c8fe045508eff5fe767f00be3f1fca92d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiZGYxNzdjOGZlMDQ1NTA4ZWZmNWZlNzY3ZjAwYmUzZjFmY2E5MmQ=", "commit": {"author": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2017-10-02T17:40:08Z"}, "committer": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2017-10-06T15:44:50Z"}, "message": "mir-borrowck: Fix existing tests", "tree": {"sha": "82d53ea7e09d29767c972482543f12923732ab97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82d53ea7e09d29767c972482543f12923732ab97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bdf177c8fe045508eff5fe767f00be3f1fca92d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bdf177c8fe045508eff5fe767f00be3f1fca92d", "html_url": "https://github.com/rust-lang/rust/commit/7bdf177c8fe045508eff5fe767f00be3f1fca92d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bdf177c8fe045508eff5fe767f00be3f1fca92d/comments", "author": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff8ea69d8f52935345f74241bb524383a47bd1d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff8ea69d8f52935345f74241bb524383a47bd1d7", "html_url": "https://github.com/rust-lang/rust/commit/ff8ea69d8f52935345f74241bb524383a47bd1d7"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "548436c3ed87021eedd2d0b2383ddb45bd158188", "filename": "src/test/compile-fail/borrowck/borrowck-assign-comp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bdf177c8fe045508eff5fe767f00be3f1fca92d/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-assign-comp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bdf177c8fe045508eff5fe767f00be3f1fca92d/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-assign-comp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-assign-comp.rs?ref=7bdf177c8fe045508eff5fe767f00be3f1fca92d", "patch": "@@ -22,7 +22,7 @@ fn a() {\n     // immutable.  Otherwise the type of &_q.x (&isize) would be wrong.\n     p.x = 5; //[ast]~ ERROR cannot assign to `p.x`\n              //[mir]~^ ERROR cannot assign to `p.x` because it is borrowed (Ast)\n-             //[mir]~| ERROR cannot assign to `p.0` because it is borrowed (Mir)\n+             //[mir]~| ERROR cannot assign to `p.x` because it is borrowed (Mir)\n     q.x;\n }\n \n@@ -47,7 +47,7 @@ fn d() {\n     let q = &p.y;\n     p.y = 5; //[ast]~ ERROR cannot assign to `p.y`\n              //[mir]~^ ERROR cannot assign to `p.y` because it is borrowed (Ast)\n-             //[mir]~| ERROR cannot assign to `p.1` because it is borrowed (Mir)\n+             //[mir]~| ERROR cannot assign to `p.y` because it is borrowed (Mir)\n     *q;\n }\n "}, {"sha": "0b6b9bf7d484d9fd3faf114c8a499b533d36a3c5", "filename": "src/test/compile-fail/borrowck/borrowck-closures-mut-and-imm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bdf177c8fe045508eff5fe767f00be3f1fca92d/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-closures-mut-and-imm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bdf177c8fe045508eff5fe767f00be3f1fca92d/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-closures-mut-and-imm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-closures-mut-and-imm.rs?ref=7bdf177c8fe045508eff5fe767f00be3f1fca92d", "patch": "@@ -82,7 +82,7 @@ fn g() {\n     let c1 = || get(&*x.f);\n     *x.f = 5; //[ast]~ ERROR cannot assign to `*x.f`\n               //[mir]~^ ERROR cannot assign to `*x.f` because it is borrowed (Ast)\n-              //[mir]~| ERROR cannot assign to `(*(*x).0)` because it is borrowed (Mir)\n+              //[mir]~| ERROR cannot assign to `(*x.f)` because it is borrowed (Mir)\n }\n \n fn h() {"}, {"sha": "0655d2914eefa9ece4d20997905ed0f69043d6a5", "filename": "src/test/compile-fail/borrowck/borrowck-union-borrow.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7bdf177c8fe045508eff5fe767f00be3f1fca92d/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-union-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bdf177c8fe045508eff5fe767f00be3f1fca92d/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-union-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-union-borrow.rs?ref=7bdf177c8fe045508eff5fe767f00be3f1fca92d", "patch": "@@ -34,13 +34,13 @@ fn main() {\n             let ra = &u.a;\n             let rma = &mut u.a; //[ast]~ ERROR cannot borrow `u.a` as mutable because it is also borrowed as immutable\n                                 //[mir]~^ ERROR cannot borrow `u.a` as mutable because it is also borrowed as immutable (Ast)\n-                                //[mir]~| ERROR cannot borrow `u.0` as mutable because it is also borrowed as immutable (Mir)\n+                                //[mir]~| ERROR cannot borrow `u.a` as mutable because it is also borrowed as immutable (Mir)\n         }\n         {\n             let ra = &u.a;\n             u.a = 1; //[ast]~ ERROR cannot assign to `u.a` because it is borrowed\n                      //[mir]~^ ERROR cannot assign to `u.a` because it is borrowed (Ast)\n-                     //[mir]~| ERROR cannot assign to `u.0` because it is borrowed (Mir)\n+                     //[mir]~| ERROR cannot assign to `u.a` because it is borrowed (Mir)\n         }\n         // Imm borrow, other field\n         {\n@@ -68,25 +68,25 @@ fn main() {\n             let rma = &mut u.a;\n             let ra = &u.a; //[ast]~ ERROR cannot borrow `u.a` as immutable because it is also borrowed as mutable\n                          //[mir]~^ ERROR cannot borrow `u.a` as immutable because it is also borrowed as mutable (Ast)\n-                         //[mir]~| ERROR cannot borrow `u.0` as immutable because it is also borrowed as mutable (Mir)\n+                         //[mir]~| ERROR cannot borrow `u.a` as immutable because it is also borrowed as mutable (Mir)\n         }\n         {\n             let ra = &mut u.a;\n             let a = u.a; //[ast]~ ERROR cannot use `u.a` because it was mutably borrowed\n                          //[mir]~^ ERROR cannot use `u.a` because it was mutably borrowed (Ast)\n-                         //[mir]~| ERROR cannot use `u.0` because it was mutably borrowed (Mir)\n+                         //[mir]~| ERROR cannot use `u.a` because it was mutably borrowed (Mir)\n         }\n         {\n             let rma = &mut u.a;\n             let rma2 = &mut u.a; //[ast]~ ERROR cannot borrow `u.a` as mutable more than once at a time\n                                  //[mir]~^ ERROR cannot borrow `u.a` as mutable more than once at a time (Ast)\n-                                 //[mir]~| ERROR cannot borrow `u.0` as mutable more than once at a time (Mir)\n+                                 //[mir]~| ERROR cannot borrow `u.a` as mutable more than once at a time (Mir)\n         }\n         {\n             let rma = &mut u.a;\n             u.a = 1; //[ast]~ ERROR cannot assign to `u.a` because it is borrowed\n                      //[mir]~^ ERROR cannot assign to `u.a` because it is borrowed (Ast)\n-                     //[mir]~| ERROR cannot assign to `u.0` because it is borrowed (Mir)\n+                     //[mir]~| ERROR cannot assign to `u.a` because it is borrowed (Mir)\n         }\n         // Mut borrow, other field\n         {"}]}