{"sha": "539a376c7ec6b7397a8f41ba6962ade376a8b44a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzOWEzNzZjN2VjNmI3Mzk3YThmNDFiYTY5NjJhZGUzNzZhOGI0NGE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-16T15:22:53Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-16T21:18:08Z"}, "message": "Rollup merge of #50728 - sinkuu:fix_50702, r=GuillaumeGomez\n\nFix rustdoc panic with `impl Trait` in type parameters\n\nFixes #50702.\n\nI'm not sure `impl Trait`s neither in arguments nor in return types are supposed to work, though.", "tree": {"sha": "15200113935b7d842a15fd73ecd185282986848e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15200113935b7d842a15fd73ecd185282986848e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/539a376c7ec6b7397a8f41ba6962ade376a8b44a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlr8oBAACgkQ/vbIBR0O\nATzJjg/9FDBfkU7e2YG/1UPgEEfPfvZ7EKUhSlyLMt8iWqI6gHjH78ZJHw3fS3wd\nTNVl/ns/6pvqfRAzoWdkSCtQpmy1cOd5ddIsifMMQLa77hkXpDwbZJ8UYxtQlKFi\nTYv8f7MvUgX8b64kSfMDLyETaxjG6uvsNECTa1A3MRi7T+CLCCfE6olGC6qmU1jc\nudQ+gGurO/YDF7w/0KiD+jP8koAEVLcldZLrKHXlsvio2QJM3YCN5RTB3rdzSxYt\nwsvBWNUNPe0Il/L5XjEYYguLaaIYSxFjmuB3RpSiESsfmwYEBohQNiaQTuDiAxNq\nrmCR96ycqP742mAaeC8mWXWTQgCDviJ8VfcUpVUpl1MqatyD5h4ysxPnIIrqMXVi\ngRmmaV2lKGFlX/+GDtUzZ/FhIPB7PaDU6qNed0QjAgckT0ziM/bJRky+EYTfyIHc\nPUhryLfv/N6qgPBlvRNYESAs1fC1GdtKh511gnunxlig+KQTE2r84w30sWrVnlst\nGRgp/l3DFn5j3VhNDTsL0K38d65b55cdGmE/G9TnllPwRkRKB4sSZw8HV7Gcb427\n8UopdJMqrb2VS1IPb3EgLVdubgSVfYt5e1kIwNNV6ehQGNEhViPaIlR7VdY/ua8C\nXvb8njwkW00oXz7RXssF5AAeJL+2CzM4zX5VITkmoOA+TGwgwJ4=\n=6cFs\n-----END PGP SIGNATURE-----", "payload": "tree 15200113935b7d842a15fd73ecd185282986848e\nparent fc6c08e799e1dc7fcfe1484b356da0ee7c16523d\nparent 7eefe2b4735b018efa50fa1e5ebfaf4db868ba22\nauthor kennytm <kennytm@gmail.com> 1526484173 +0800\ncommitter kennytm <kennytm@gmail.com> 1526505488 +0800\n\nRollup merge of #50728 - sinkuu:fix_50702, r=GuillaumeGomez\n\nFix rustdoc panic with `impl Trait` in type parameters\n\nFixes #50702.\n\nI'm not sure `impl Trait`s neither in arguments nor in return types are supposed to work, though.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/539a376c7ec6b7397a8f41ba6962ade376a8b44a", "html_url": "https://github.com/rust-lang/rust/commit/539a376c7ec6b7397a8f41ba6962ade376a8b44a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/539a376c7ec6b7397a8f41ba6962ade376a8b44a/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc6c08e799e1dc7fcfe1484b356da0ee7c16523d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc6c08e799e1dc7fcfe1484b356da0ee7c16523d", "html_url": "https://github.com/rust-lang/rust/commit/fc6c08e799e1dc7fcfe1484b356da0ee7c16523d"}, {"sha": "7eefe2b4735b018efa50fa1e5ebfaf4db868ba22", "url": "https://api.github.com/repos/rust-lang/rust/commits/7eefe2b4735b018efa50fa1e5ebfaf4db868ba22", "html_url": "https://github.com/rust-lang/rust/commit/7eefe2b4735b018efa50fa1e5ebfaf4db868ba22"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "c233e57a8018eb5af05b226117be975b99f3d4e7", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 29, "deletions": 6, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/539a376c7ec6b7397a8f41ba6962ade376a8b44a/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/539a376c7ec6b7397a8f41ba6962ade376a8b44a/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=539a376c7ec6b7397a8f41ba6962ade376a8b44a", "patch": "@@ -1754,16 +1754,39 @@ pub struct Generics {\n \n impl Clean<Generics> for hir::Generics {\n     fn clean(&self, cx: &DocContext) -> Generics {\n+        // Synthetic type-parameters are inserted after normal ones.\n+        // In order for normal parameters to be able to refer to synthetic ones,\n+        // scans them first.\n+        fn is_impl_trait(param: &hir::GenericParam) -> bool {\n+            if let hir::GenericParam::Type(ref tp) = param {\n+                tp.synthetic == Some(hir::SyntheticTyParamKind::ImplTrait)\n+            } else {\n+                false\n+            }\n+        }\n+        let impl_trait_params = self.params\n+            .iter()\n+            .filter(|p| is_impl_trait(p))\n+            .map(|p| {\n+                let p = p.clean(cx);\n+                if let GenericParamDef::Type(ref tp) = p {\n+                    cx.impl_trait_bounds\n+                        .borrow_mut()\n+                        .insert(tp.did, tp.bounds.clone());\n+                } else {\n+                    unreachable!()\n+                }\n+                p\n+            })\n+            .collect::<Vec<_>>();\n+\n         let mut params = Vec::with_capacity(self.params.len());\n-        for p in &self.params {\n+        for p in self.params.iter().filter(|p| !is_impl_trait(p)) {\n             let p = p.clean(cx);\n-            if let GenericParamDef::Type(ref tp) = p {\n-                if tp.synthetic == Some(hir::SyntheticTyParamKind::ImplTrait) {\n-                    cx.impl_trait_bounds.borrow_mut().insert(tp.did, tp.bounds.clone());\n-                }\n-            }\n             params.push(p);\n         }\n+        params.extend(impl_trait_params);\n+\n         let mut g = Generics {\n             params,\n             where_predicates: self.where_clause.predicates.clean(cx)"}, {"sha": "1c1124282d478655d884e90fab35f750c28433e9", "filename": "src/test/rustdoc/universal-impl-trait.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/539a376c7ec6b7397a8f41ba6962ade376a8b44a/src%2Ftest%2Frustdoc%2Funiversal-impl-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/539a376c7ec6b7397a8f41ba6962ade376a8b44a/src%2Ftest%2Frustdoc%2Funiversal-impl-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Funiversal-impl-trait.rs?ref=539a376c7ec6b7397a8f41ba6962ade376a8b44a", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(universal_impl_trait)]\n #![crate_name = \"foo\"]\n \n use std::io::Read;\n+use std::borrow::Borrow;\n \n // @has foo/fn.foo.html\n // @has - //pre 'foo('\n@@ -51,3 +51,15 @@ impl<T> S<T> {\n // @has - 'method</a>('\n // @matches - '_x: impl <a class=\"trait\" href=\"[^\"]+/trait\\.Debug\\.html\"'\n impl<T> Trait for S<T> {}\n+\n+// @has foo/fn.much_universe.html\n+// @matches - 'T:.+Borrow.+impl .+trait\\.Trait\\.html'\n+// @matches - 'U:.+IntoIterator.+= impl.+Iterator\\.html.+= impl.+Clone\\.html'\n+// @matches - '_: impl .+trait\\.Read\\.html.+ \\+ .+trait\\.Clone\\.html'\n+pub fn much_universe<\n+    T: Borrow<impl Trait>,\n+    U: IntoIterator<Item = impl Iterator<Item = impl Clone>>,\n+>(\n+    _: impl Read + Clone,\n+) {\n+}"}]}