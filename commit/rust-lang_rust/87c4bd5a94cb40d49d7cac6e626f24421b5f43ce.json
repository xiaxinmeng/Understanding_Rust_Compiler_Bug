{"sha": "87c4bd5a94cb40d49d7cac6e626f24421b5f43ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3YzRiZDVhOTRjYjQwZDQ5ZDdjYWM2ZTYyNmYyNDQyMWI1ZjQzY2U=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-07-26T12:35:48Z"}, "committer": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-07-26T12:35:48Z"}, "message": "Add a test for #2863", "tree": {"sha": "655e730dddc932923fadb672fdad966da802cd73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/655e730dddc932923fadb672fdad966da802cd73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87c4bd5a94cb40d49d7cac6e626f24421b5f43ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87c4bd5a94cb40d49d7cac6e626f24421b5f43ce", "html_url": "https://github.com/rust-lang/rust/commit/87c4bd5a94cb40d49d7cac6e626f24421b5f43ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87c4bd5a94cb40d49d7cac6e626f24421b5f43ce/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ff2836eaf051fe0ef4daea6b07d0fecdb809dc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ff2836eaf051fe0ef4daea6b07d0fecdb809dc3", "html_url": "https://github.com/rust-lang/rust/commit/8ff2836eaf051fe0ef4daea6b07d0fecdb809dc3"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "792ffdbac24da1103a3bd2195f693673e6e9ab79", "filename": "tests/source/issue-2863.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/87c4bd5a94cb40d49d7cac6e626f24421b5f43ce/tests%2Fsource%2Fissue-2863.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87c4bd5a94cb40d49d7cac6e626f24421b5f43ce/tests%2Fsource%2Fissue-2863.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-2863.rs?ref=87c4bd5a94cb40d49d7cac6e626f24421b5f43ce", "patch": "@@ -0,0 +1,25 @@\n+// rustfmt-reorder_impl_items: true\n+\n+impl<T> IntoIterator for SafeVec<T> {\n+    existential type F: Trait;\n+    type IntoIter = self::IntoIter<T>;\n+    type Item = T;\n+    // comment on foo()\n+    fn foo() {println!(\"hello, world\");}\n+    type Bar = u32;\n+    fn foo1() {println!(\"hello, world\");}\n+    type FooBar = u32;\n+    fn foo2() {println!(\"hello, world\");}\n+    fn foo3() {println!(\"hello, world\");}\n+    const SomeConst: i32 = 100;\n+    fn foo4() {println!(\"hello, world\");}\n+    fn foo5() {println!(\"hello, world\");}\n+    // comment on FoooooBar\n+    type FoooooBar = u32;\n+    fn foo6() {println!(\"hello, world\");}\n+    fn foo7() {println!(\"hello, world\");}\n+    type BarFoo = u32;\n+    existential type E: Trait;\n+    const AnotherConst: i32 = 100;\n+    fn foo8() {println!(\"hello, world\");}\n+}"}, {"sha": "a53628e3ea905f84c1ff675458f8afe710d8f07c", "filename": "tests/target/issue-2863.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/87c4bd5a94cb40d49d7cac6e626f24421b5f43ce/tests%2Ftarget%2Fissue-2863.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87c4bd5a94cb40d49d7cac6e626f24421b5f43ce/tests%2Ftarget%2Fissue-2863.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2863.rs?ref=87c4bd5a94cb40d49d7cac6e626f24421b5f43ce", "patch": "@@ -0,0 +1,54 @@\n+// rustfmt-reorder_impl_items: true\n+\n+impl<T> IntoIterator for SafeVec<T> {\n+    type Bar = u32;\n+    type BarFoo = u32;\n+    type FooBar = u32;\n+    // comment on FoooooBar\n+    type FoooooBar = u32;\n+    type IntoIter = self::IntoIter<T>;\n+    type Item = T;\n+\n+    existential type E: Trait;\n+    existential type F: Trait;\n+\n+    const AnotherConst: i32 = 100;\n+    const SomeConst: i32 = 100;\n+\n+    // comment on foo()\n+    fn foo() {\n+        println!(\"hello, world\");\n+    }\n+\n+    fn foo1() {\n+        println!(\"hello, world\");\n+    }\n+\n+    fn foo2() {\n+        println!(\"hello, world\");\n+    }\n+\n+    fn foo3() {\n+        println!(\"hello, world\");\n+    }\n+\n+    fn foo4() {\n+        println!(\"hello, world\");\n+    }\n+\n+    fn foo5() {\n+        println!(\"hello, world\");\n+    }\n+\n+    fn foo6() {\n+        println!(\"hello, world\");\n+    }\n+\n+    fn foo7() {\n+        println!(\"hello, world\");\n+    }\n+\n+    fn foo8() {\n+        println!(\"hello, world\");\n+    }\n+}"}]}