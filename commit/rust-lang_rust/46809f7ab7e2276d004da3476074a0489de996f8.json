{"sha": "46809f7ab7e2276d004da3476074a0489de996f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ODA5ZjdhYjdlMjI3NmQwMDRkYTM0NzYwNzRhMDQ4OWRlOTk2Zjg=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lindsey@rockstargirl.org", "date": "2012-06-22T22:45:47Z"}, "committer": {"name": "Lindsey Kuper", "email": "lindsey@rockstargirl.org", "date": "2012-06-22T23:48:03Z"}, "message": "Nicer quoting in \"attempted access of field\" message.  Issue #2358.", "tree": {"sha": "602fdb6ad556da89e5266d190ec2170b3fe1ab51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/602fdb6ad556da89e5266d190ec2170b3fe1ab51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46809f7ab7e2276d004da3476074a0489de996f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46809f7ab7e2276d004da3476074a0489de996f8", "html_url": "https://github.com/rust-lang/rust/commit/46809f7ab7e2276d004da3476074a0489de996f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46809f7ab7e2276d004da3476074a0489de996f8/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47b1b7a207c6fa1c0af0dfc789c253f6c40bbf7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/47b1b7a207c6fa1c0af0dfc789c253f6c40bbf7f", "html_url": "https://github.com/rust-lang/rust/commit/47b1b7a207c6fa1c0af0dfc789c253f6c40bbf7f"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "b8fd785f5012e71204f68e722bbecb9a0d3df68f", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/46809f7ab7e2276d004da3476074a0489de996f8/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46809f7ab7e2276d004da3476074a0489de996f8/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=46809f7ab7e2276d004da3476074a0489de996f8", "patch": "@@ -1551,8 +1551,9 @@ fn check_expr_with_unifier(fcx: @fn_ctxt,\n               }\n               none {\n                 let t_err = fcx.infcx.resolve_type_vars_if_possible(expr_t);\n-                let msg = #fmt[\"attempted access of field %s on type %s, but \\\n-                          no public field or method with that name was found\",\n+                let msg = #fmt[\"attempted access of field `%s` on type `%s`, \\\n+                                but no public field or method with that name \\\n+                                was found\",\n                                *field, fcx.infcx.ty_to_str(t_err)];\n                 tcx.sess.span_err(expr.span, msg);\n                 // NB: Adding a bogus type to allow typechecking to continue"}, {"sha": "2088d716ed729210e0d13370b0fc31ab26cb8151", "filename": "src/test/compile-fail/class-cast-to-iface.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46809f7ab7e2276d004da3476074a0489de996f8/src%2Ftest%2Fcompile-fail%2Fclass-cast-to-iface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46809f7ab7e2276d004da3476074a0489de996f8/src%2Ftest%2Fcompile-fail%2Fclass-cast-to-iface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclass-cast-to-iface.rs?ref=46809f7ab7e2276d004da3476074a0489de996f8", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: attempted access of field eat on type noisy\n+// error-pattern: attempted access of field `eat` on type `noisy`\n iface noisy {\n   fn speak();\n }"}, {"sha": "f54a0ffc068d52bfc922f71f99ff93f214ec77fa", "filename": "src/test/compile-fail/private-method-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46809f7ab7e2276d004da3476074a0489de996f8/src%2Ftest%2Fcompile-fail%2Fprivate-method-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46809f7ab7e2276d004da3476074a0489de996f8/src%2Ftest%2Fcompile-fail%2Fprivate-method-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-method-cross-crate.rs?ref=46809f7ab7e2276d004da3476074a0489de996f8", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern:attempted access of field nap on type\n+// error-pattern:attempted access of field `nap` on type\n // xfail-fast\n // aux-build:cci_class_5.rs\n use cci_class_5;"}, {"sha": "cc6faa07557b521e169b80f070a6fa2cd4f6cbb6", "filename": "src/test/compile-fail/unsafe-fn-autoderef.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46809f7ab7e2276d004da3476074a0489de996f8/src%2Ftest%2Fcompile-fail%2Funsafe-fn-autoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46809f7ab7e2276d004da3476074a0489de996f8/src%2Ftest%2Fcompile-fail%2Funsafe-fn-autoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsafe-fn-autoderef.rs?ref=46809f7ab7e2276d004da3476074a0489de996f8", "patch": "@@ -15,7 +15,7 @@ fn f(p: *rec) -> int {\n     // are prohibited by various checks, such as that the enum is\n     // instantiable and so forth).\n \n-    ret p.f; //! ERROR attempted access of field f on type *rec\n+    ret p.f; //! ERROR attempted access of field `f` on type `*rec`\n }\n \n fn main() {"}, {"sha": "18baa45feeab7010d937f1b0f8a3e8651087021a", "filename": "src/test/compile-fail/vec-field.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46809f7ab7e2276d004da3476074a0489de996f8/src%2Ftest%2Fcompile-fail%2Fvec-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46809f7ab7e2276d004da3476074a0489de996f8/src%2Ftest%2Fcompile-fail%2Fvec-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvec-field.rs?ref=46809f7ab7e2276d004da3476074a0489de996f8", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern:attempted access of field some_field_name on type [int]\n+// error-pattern:attempted access of field `some_field_name` on type `[int]`\n // issue #367\n \n fn f() {"}]}