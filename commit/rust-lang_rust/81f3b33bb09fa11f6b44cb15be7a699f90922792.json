{"sha": "81f3b33bb09fa11f6b44cb15be7a699f90922792", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxZjNiMzNiYjA5ZmExMWY2YjQ0Y2IxNWJlN2E2OTlmOTA5MjI3OTI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-21T18:02:37Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-21T18:02:37Z"}, "message": "Split R and T so that tests run under valgrind but compiler doesn't.", "tree": {"sha": "2ffbb934263ee9ff93f6c837274d0d9b7c9e906a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ffbb934263ee9ff93f6c837274d0d9b7c9e906a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81f3b33bb09fa11f6b44cb15be7a699f90922792", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81f3b33bb09fa11f6b44cb15be7a699f90922792", "html_url": "https://github.com/rust-lang/rust/commit/81f3b33bb09fa11f6b44cb15be7a699f90922792", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81f3b33bb09fa11f6b44cb15be7a699f90922792/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f64612a14a55d6191e1943e8711f8686c03c0b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f64612a14a55d6191e1943e8711f8686c03c0b4", "html_url": "https://github.com/rust-lang/rust/commit/5f64612a14a55d6191e1943e8711f8686c03c0b4"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "1478aeff919342171ecf38420843ba20d60041bd", "filename": "Makefile.in", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/81f3b33bb09fa11f6b44cb15be7a699f90922792/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/81f3b33bb09fa11f6b44cb15be7a699f90922792/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=81f3b33bb09fa11f6b44cb15be7a699f90922792", "patch": "@@ -70,6 +70,7 @@ ifdef CFG_WINDOWSY\n   CFG_LIB_NAME=$(1).dll\n   CFG_LDPATH :=$(CFG_LDPATH):$(CFG_LLVM_BINDIR)\n   CFG_LDPATH :=$(CFG_LDPATH):$$PATH\n+  CFG_RUN_TEST=PATH=$(CFG_LDPATH) $(1)\n   CFG_RUN_TARG=PATH=$(CFG_LDPATH) $(1)\n \n   CFG_PATH_MUNGE := $(strip | perl -p                  \\\n@@ -88,6 +89,8 @@ ifdef CFG_UNIXY\n   CFG_EXE_SUFFIX :=\n   CFG_LDPATH :=$(CFG_LDPATH):$(CFG_LLVM_LIBDIR)\n   CFG_RUN_TARG=\\\n+      LD_LIBRARY_PATH=$(dir $(1)):$(CFG_LDPATH) $(1)\n+  CFG_RUN_TEST=\\\n       LD_LIBRARY_PATH=$(dir $(1)):$(CFG_LDPATH) $(CFG_VALGRIND) $(1)\n \n   CFG_BOOT_NATIVE := 1\n@@ -98,6 +101,7 @@ ifdef CFG_UNIXY\n     CFG_LDPATH :=$(CFG_LDPATH):$(CFG_LLVM_BINDIR)\n     CFG_LDPATH :=$(CFG_LDPATH):$$PATH\n     CFG_RUN_TARG=PATH=$(CFG_LDPATH) $(1)\n+    CFG_RUN_TEST=PATH=$(CFG_LDPATH) $(1)\n \n     CFG_INFO := $(info cfg: mingw-cross)\n     CFG_GCC_CROSS := i586-mingw32msvc-\n@@ -179,6 +183,7 @@ else\n endif\n \n R := $(CFG_RUN_TARG)\n+T := $(CFG_RUN_TEST)\n S := $(CFG_SRC_DIR)\n X := $(CFG_EXE_SUFFIX)\n \n@@ -187,8 +192,8 @@ VPATH := $(S)doc $(S)src\n \n # Compilers we build, we now know how to run.\n BOOT := $(Q)OCAMLRUNPARAM=\"b1\" boot/rustboot$(X) $(CFG_BOOT_FLAGS) -L boot\n-STAGE0 := $(Q)$(CFG_RUN_TARG) stage0/rustc$(X) $(CFG_RUSTC_FLAGS) -L stage0\n-STAGE1 := $(Q)$(CFG_RUN_TARG) stage1/rustc$(X) $(CFG_RUSTC_FLAGS) -L stage1\n+STAGE0 := $(Q)$(R) stage0/rustc$(X) $(CFG_RUSTC_FLAGS) -L stage0\n+STAGE1 := $(Q)$(R) stage1/rustc$(X) $(CFG_RUSTC_FLAGS) -L stage1\n \n # \"Source\" files we generate in builddir along the way.\n GENERATED := boot/fe/lexer.ml boot/version.ml\n@@ -554,27 +559,27 @@ llvmext/%.o: llvmext/%.cpp $(MKFILES)\n test/run-pass/%.out.tmp: test/run-pass/%$(CFG_EXE_SUFFIX) rt/$(CFG_RUNTIME)\n \t$(Q)rm -f $<.tmp\n \t@$(call E, run: $@)\n-\t$(Q)$(call CFG_RUN_TARG, $<) > $@\n+\t$(Q)$(call T, $<) > $@\n \n test/bench/shootout/%.out.tmp: test/bench/shootout/%$(X) \\\n                                rt/$(CFG_RUNTIME)\n \t$(Q)rm -f $<.tmp\n \t@$(call E, run: $@)\n-\t$(Q)$(call CFG_RUN_TARG, $<) > $@\n+\t$(Q)$(call T, $<) > $@\n \n test/bench/99-bottles/%.out.tmp: test/bench/99-bottles/%$(X) \\\n                                  rt/$(CFG_RUNTIME)\n \t$(Q)rm -f $<.tmp\n \t@$(call E, run: $@)\n-\t$(Q)$(call CFG_RUN_TARG, $<) > $@\n+\t$(Q)$(call T, $<) > $@\n \n test/run-fail/%.out.tmp: test/run-fail/%$(X) \\\n                          rt/$(CFG_RUNTIME)\n \t$(Q)rm -f $<.tmp\n \t@$(call E, run: $@)\n \t$(Q)grep -q error-pattern $(S)src/test/run-fail/$(basename $*).rs\n \t$(Q)rm -f $@\n-\t$(Q)$(call CFG_RUN_TARG, $<) >$@ 2>&1 ; X=$$? ; \\\n+\t$(Q)$(call T, $<) >$@ 2>&1 ; X=$$? ; \\\n       if [ $$X -eq 0 ] ; then exit 1 ; else exit 0 ; fi\n \t$(Q)grep --text --quiet \\\n       \"$$(grep error-pattern $(S)src/test/run-fail/$(basename $*).rs \\"}]}