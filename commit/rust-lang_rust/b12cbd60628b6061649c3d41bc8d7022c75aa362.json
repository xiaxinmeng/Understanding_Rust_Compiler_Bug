{"sha": "b12cbd60628b6061649c3d41bc8d7022c75aa362", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxMmNiZDYwNjI4YjYwNjE2NDljM2Q0MWJjOGQ3MDIyYzc1YWEzNjI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-24T11:32:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-24T11:32:15Z"}, "message": "Don't break onEnter if rust-analyzer fails to start\n\ncloses #3253", "tree": {"sha": "276c350d7a3d36564d1bcd6a70bb3abb57fe00e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/276c350d7a3d36564d1bcd6a70bb3abb57fe00e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b12cbd60628b6061649c3d41bc8d7022c75aa362", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b12cbd60628b6061649c3d41bc8d7022c75aa362", "html_url": "https://github.com/rust-lang/rust/commit/b12cbd60628b6061649c3d41bc8d7022c75aa362", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b12cbd60628b6061649c3d41bc8d7022c75aa362/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d1c1b0d85547d31775f9e0f3b5516c4b38fed9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d1c1b0d85547d31775f9e0f3b5516c4b38fed9f", "html_url": "https://github.com/rust-lang/rust/commit/1d1c1b0d85547d31775f9e0f3b5516c4b38fed9f"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "424ff1ac3d6a041e7c9565acf50c1f14623dfee4", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b12cbd60628b6061649c3d41bc8d7022c75aa362/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b12cbd60628b6061649c3d41bc8d7022c75aa362/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=b12cbd60628b6061649c3d41bc8d7022c75aa362", "patch": "@@ -12,6 +12,26 @@ import { log } from './util';\n let ctx: Ctx | undefined;\n \n export async function activate(context: vscode.ExtensionContext) {\n+    // Register a \"dumb\" onEnter command for the case where server fails to\n+    // start.\n+    //\n+    // FIXME: refactor command registration code such that commands are\n+    // **always** registered, even if the server does not start. Use API like\n+    // this perhaps?\n+    //\n+    // ```TypeScript\n+    // registerCommand(\n+    //    factory: (Ctx) => ((Ctx) => any),\n+    //    fallback: () => any = () => vscode.window.showErrorMessage(\n+    //        \"rust-analyzer is not available\"\n+    //    ),\n+    // )\n+    const defaultOnEnter = vscode.commands.registerCommand(\n+        'rust-analyzer.onEnter',\n+        () => vscode.commands.executeCommand('default:type', { text: '\\n' }),\n+    );\n+    context.subscriptions.push(defaultOnEnter);\n+\n     const config = new Config(context);\n \n     const serverPath = await ensureServerBinary(config.serverSource);\n@@ -54,7 +74,10 @@ export async function activate(context: vscode.ExtensionContext) {\n     ctx.registerCommand('syntaxTree', commands.syntaxTree);\n     ctx.registerCommand('expandMacro', commands.expandMacro);\n     ctx.registerCommand('run', commands.run);\n+\n+    defaultOnEnter.dispose();\n     ctx.registerCommand('onEnter', commands.onEnter);\n+\n     ctx.registerCommand('ssr', commands.ssr);\n     ctx.registerCommand('serverVersion', commands.serverVersion);\n "}]}