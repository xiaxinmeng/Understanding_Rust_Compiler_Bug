{"sha": "09d90e52682641e5d6d0a70e42011fd24ced1434", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ZDkwZTUyNjgyNjQxZTVkNmQwYTcwZTQyMDExZmQyNGNlZDE0MzQ=", "commit": {"author": {"name": "Tommy Ip", "email": "hkmp7tommy@gmail.com", "date": "2017-09-20T18:31:59Z"}, "committer": {"name": "Tommy Ip", "email": "hkmp7tommy@gmail.com", "date": "2017-09-20T21:10:13Z"}, "message": "Do not show \"available paths\" help in ./x.py clean", "tree": {"sha": "8d91045fb497a0fedc7edbbb52e7abd468f7929f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d91045fb497a0fedc7edbbb52e7abd468f7929f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09d90e52682641e5d6d0a70e42011fd24ced1434", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09d90e52682641e5d6d0a70e42011fd24ced1434", "html_url": "https://github.com/rust-lang/rust/commit/09d90e52682641e5d6d0a70e42011fd24ced1434", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09d90e52682641e5d6d0a70e42011fd24ced1434/comments", "author": {"login": "tommyip", "id": 18504232, "node_id": "MDQ6VXNlcjE4NTA0MjMy", "avatar_url": "https://avatars.githubusercontent.com/u/18504232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommyip", "html_url": "https://github.com/tommyip", "followers_url": "https://api.github.com/users/tommyip/followers", "following_url": "https://api.github.com/users/tommyip/following{/other_user}", "gists_url": "https://api.github.com/users/tommyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommyip/subscriptions", "organizations_url": "https://api.github.com/users/tommyip/orgs", "repos_url": "https://api.github.com/users/tommyip/repos", "events_url": "https://api.github.com/users/tommyip/events{/privacy}", "received_events_url": "https://api.github.com/users/tommyip/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tommyip", "id": 18504232, "node_id": "MDQ6VXNlcjE4NTA0MjMy", "avatar_url": "https://avatars.githubusercontent.com/u/18504232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommyip", "html_url": "https://github.com/tommyip", "followers_url": "https://api.github.com/users/tommyip/followers", "following_url": "https://api.github.com/users/tommyip/following{/other_user}", "gists_url": "https://api.github.com/users/tommyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommyip/subscriptions", "organizations_url": "https://api.github.com/users/tommyip/orgs", "repos_url": "https://api.github.com/users/tommyip/repos", "events_url": "https://api.github.com/users/tommyip/events{/privacy}", "received_events_url": "https://api.github.com/users/tommyip/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c78bb49fde79e93b110a979f1f11b3f1221e1ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c78bb49fde79e93b110a979f1f11b3f1221e1ef", "html_url": "https://github.com/rust-lang/rust/commit/2c78bb49fde79e93b110a979f1f11b3f1221e1ef"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "df378188b4ad05c0fe044c2be4a3bcad820af1d8", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/09d90e52682641e5d6d0a70e42011fd24ced1434/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09d90e52682641e5d6d0a70e42011fd24ced1434/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=09d90e52682641e5d6d0a70e42011fd24ced1434", "patch": "@@ -253,17 +253,18 @@ Arguments:\n             }\n         });\n \n-        // All subcommands can have an optional \"Available paths\" section\n+        // All subcommands except `clean` can have an optional \"Available paths\" section\n         if matches.opt_present(\"verbose\") {\n             let config = Config::parse(&[\"build\".to_string()]);\n             let mut build = Build::new(config);\n             metadata::build(&mut build);\n \n             let maybe_rules_help = Builder::get_help(&build, subcommand.as_str());\n             extra_help.push_str(maybe_rules_help.unwrap_or_default().as_str());\n-        } else {\n-            extra_help.push_str(format!(\"Run `./x.py {} -h -v` to see a list of available paths.\",\n-                     subcommand).as_str());\n+        } else if subcommand.as_str() != \"clean\" {\n+            extra_help.push_str(format!(\n+                \"Run `./x.py {} -h -v` to see a list of available paths.\",\n+                subcommand).as_str());\n         }\n \n         // User passed in -h/--help?\n@@ -293,7 +294,7 @@ Arguments:\n             }\n             \"clean\" => {\n                 if paths.len() > 0 {\n-                    println!(\"\\nclean takes no arguments\\n\");\n+                    println!(\"\\nclean does not take a path argument\\n\");\n                     usage(1, &opts, &subcommand_help, &extra_help);\n                 }\n "}]}