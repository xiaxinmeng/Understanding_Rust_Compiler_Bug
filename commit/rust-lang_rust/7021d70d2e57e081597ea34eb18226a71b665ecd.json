{"sha": "7021d70d2e57e081597ea34eb18226a71b665ecd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMjFkNzBkMmU1N2UwODE1OTdlYTM0ZWIxODIyNmE3MWI2NjVlY2Q=", "commit": {"author": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2020-10-06T15:58:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-06T15:58:32Z"}, "message": "Use more concrete explanation for methods\n\nShow some code rather than \"a single method call\".", "tree": {"sha": "09ebd7a7f9b699112cb143270afc56cedd82827a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09ebd7a7f9b699112cb143270afc56cedd82827a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7021d70d2e57e081597ea34eb18226a71b665ecd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJffJQoCRBK7hj4Ov3rIwAAdHIIACr670UEeQk5GGJemN96U+iO\n3LAjfa9aNpdTblrf6agmV9gSMQdhwH+diiPw07XcDulGSXQwMXQNZsGuZGvJDIQT\n9Zzq/Gi+UXAWg/vkB16tVrf7J6NKDlcy8y5P/LOYs/hc+UA71RnCgyI6NjIxKVaQ\n51OBhRf51f4WxCtxWZQAmEDSjatxKhKhDOO6wFLWowmaHdvJ3ln8pwTyNwmopYB2\n8SB2daB3peTnaKtwN8Ya4UyHAZJvn0o4Uh5+rFTZ1nj0hPPw/xpbW3gjSln5a4Dp\nZRfd4copJHHwWDII8CmFSczLuXTZBVqYTpTteT8bEK/zsCjOGYQRFTtnGzCnKaI=\n=+gT7\n-----END PGP SIGNATURE-----\n", "payload": "tree 09ebd7a7f9b699112cb143270afc56cedd82827a\nparent c9fdeef643329266cedb67369328795c4abb7740\nauthor Ivan Tham <pickfire@riseup.net> 1601999912 +0800\ncommitter GitHub <noreply@github.com> 1601999912 +0800\n\nUse more concrete explanation for methods\n\nShow some code rather than \"a single method call\"."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7021d70d2e57e081597ea34eb18226a71b665ecd", "html_url": "https://github.com/rust-lang/rust/commit/7021d70d2e57e081597ea34eb18226a71b665ecd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7021d70d2e57e081597ea34eb18226a71b665ecd/comments", "author": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9fdeef643329266cedb67369328795c4abb7740", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9fdeef643329266cedb67369328795c4abb7740", "html_url": "https://github.com/rust-lang/rust/commit/c9fdeef643329266cedb67369328795c4abb7740"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "a9650e531b6783f24aa3d4509710a0a3e1f1ab41", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7021d70d2e57e081597ea34eb18226a71b665ecd/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7021d70d2e57e081597ea34eb18226a71b665ecd/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=7021d70d2e57e081597ea34eb18226a71b665ecd", "patch": "@@ -400,8 +400,8 @@ declare_clippy_lint! {\n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `_.map(_).flatten(_)`,\n     ///\n-    /// **Why is this bad?** Readability, this can be written more concisely as a\n-    /// single method call using `_.flat_map(_)`\n+    /// **Why is this bad?** Readability, this can be written more concisely as\n+    /// `_.flat_map(_)`\n     ///\n     /// **Known problems:**\n     ///\n@@ -424,8 +424,8 @@ declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `_.filter(_).map(_)`,\n     /// `_.filter(_).flat_map(_)`, `_.filter_map(_).flat_map(_)` and similar.\n     ///\n-    /// **Why is this bad?** Readability, this can be written more concisely as a\n-    /// single method call.\n+    /// **Why is this bad?** Readability, this can be written more concisely as\n+    /// `_.filter_map(_)`.\n     ///\n     /// **Known problems:** Often requires a condition + Option/Iterator creation\n     /// inside the closure.\n@@ -452,8 +452,8 @@ declare_clippy_lint! {\n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `_.filter_map(_).next()`.\n     ///\n-    /// **Why is this bad?** Readability, this can be written more concisely as a\n-    /// single method call.\n+    /// **Why is this bad?** Readability, this can be written more concisely as\n+    /// `_.find_map(_)`.\n     ///\n     /// **Known problems:** None\n     ///\n@@ -496,8 +496,8 @@ declare_clippy_lint! {\n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `_.find(_).map(_)`.\n     ///\n-    /// **Why is this bad?** Readability, this can be written more concisely as a\n-    /// single method call.\n+    /// **Why is this bad?** Readability, this can be written more concisely as\n+    /// `_.find_map(_)`.\n     ///\n     /// **Known problems:** Often requires a condition + Option/Iterator creation\n     /// inside the closure.\n@@ -1276,8 +1276,8 @@ declare_clippy_lint! {\n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `_.as_ref().map(Deref::deref)` or it's aliases (such as String::as_str).\n     ///\n-    /// **Why is this bad?** Readability, this can be written more concisely as a\n-    /// single method call.\n+    /// **Why is this bad?** Readability, this can be written more concisely as\n+    /// `_.as_deref()`.\n     ///\n     /// **Known problems:** None.\n     ///"}]}