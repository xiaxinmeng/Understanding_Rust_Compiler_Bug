{"sha": "79da7474b160e2230467f84ff0df3a23658eb4a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZGE3NDc0YjE2MGUyMjMwNDY3Zjg0ZmYwZGYzYTIzNjU4ZWI0YTY=", "commit": {"author": {"name": "Tim Nielens", "email": "tim.nielens@gmail.com", "date": "2020-09-16T17:59:51Z"}, "committer": {"name": "Tim Nielens", "email": "tim.nielens@gmail.com", "date": "2020-09-16T17:59:51Z"}, "message": "option_if_let_else - change misleading test file section", "tree": {"sha": "82e1b8f945ca31587e7e72e8b7b6631bf12c67ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82e1b8f945ca31587e7e72e8b7b6631bf12c67ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79da7474b160e2230467f84ff0df3a23658eb4a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79da7474b160e2230467f84ff0df3a23658eb4a6", "html_url": "https://github.com/rust-lang/rust/commit/79da7474b160e2230467f84ff0df3a23658eb4a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79da7474b160e2230467f84ff0df3a23658eb4a6/comments", "author": {"login": "tnielens", "id": 11885535, "node_id": "MDQ6VXNlcjExODg1NTM1", "avatar_url": "https://avatars.githubusercontent.com/u/11885535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnielens", "html_url": "https://github.com/tnielens", "followers_url": "https://api.github.com/users/tnielens/followers", "following_url": "https://api.github.com/users/tnielens/following{/other_user}", "gists_url": "https://api.github.com/users/tnielens/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnielens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnielens/subscriptions", "organizations_url": "https://api.github.com/users/tnielens/orgs", "repos_url": "https://api.github.com/users/tnielens/repos", "events_url": "https://api.github.com/users/tnielens/events{/privacy}", "received_events_url": "https://api.github.com/users/tnielens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tnielens", "id": 11885535, "node_id": "MDQ6VXNlcjExODg1NTM1", "avatar_url": "https://avatars.githubusercontent.com/u/11885535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnielens", "html_url": "https://github.com/tnielens", "followers_url": "https://api.github.com/users/tnielens/followers", "following_url": "https://api.github.com/users/tnielens/following{/other_user}", "gists_url": "https://api.github.com/users/tnielens/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnielens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnielens/subscriptions", "organizations_url": "https://api.github.com/users/tnielens/orgs", "repos_url": "https://api.github.com/users/tnielens/repos", "events_url": "https://api.github.com/users/tnielens/events{/privacy}", "received_events_url": "https://api.github.com/users/tnielens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ba36bcfd3802d9520d0ac48dabfe6dc06d8dc82", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ba36bcfd3802d9520d0ac48dabfe6dc06d8dc82", "html_url": "https://github.com/rust-lang/rust/commit/6ba36bcfd3802d9520d0ac48dabfe6dc06d8dc82"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "4ba2a0a5dbcc1d5dd07beca432d67f708e11e4b8", "filename": "tests/ui/unnecessary_lazy_eval.fixed", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/79da7474b160e2230467f84ff0df3a23658eb4a6/tests%2Fui%2Funnecessary_lazy_eval.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/79da7474b160e2230467f84ff0df3a23658eb4a6/tests%2Fui%2Funnecessary_lazy_eval.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_lazy_eval.fixed?ref=79da7474b160e2230467f84ff0df3a23658eb4a6", "patch": "@@ -108,14 +108,15 @@ fn main() {\n     let _: Result<usize, usize> = res.or_else(|_| Err(ext_str.some_field));\n \n     // should lint, bind_instead_of_map doesn't apply\n-    let _: Result<usize, usize> = res.and_then(|x| Err(x));\n-    let _: Result<usize, usize> = res.or_else(|err| Ok(err));\n-\n     let _: Result<usize, usize> = res.and(Err(2));\n     let _: Result<usize, usize> = res.and(Err(astronomers_pi));\n     let _: Result<usize, usize> = res.and(Err(ext_str.some_field));\n \n     let _: Result<usize, usize> = res.or(Ok(2));\n     let _: Result<usize, usize> = res.or(Ok(astronomers_pi));\n     let _: Result<usize, usize> = res.or(Ok(ext_str.some_field));\n+\n+    // neither bind_instead_of_map nor unnecessary_lazy_eval applies here\n+    let _: Result<usize, usize> = res.and_then(|x| Err(x));\n+    let _: Result<usize, usize> = res.or_else(|err| Ok(err));\n }"}, {"sha": "466915217e42e9dc94cf983efe4d2b70b29fed0c", "filename": "tests/ui/unnecessary_lazy_eval.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/79da7474b160e2230467f84ff0df3a23658eb4a6/tests%2Fui%2Funnecessary_lazy_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79da7474b160e2230467f84ff0df3a23658eb4a6/tests%2Fui%2Funnecessary_lazy_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_lazy_eval.rs?ref=79da7474b160e2230467f84ff0df3a23658eb4a6", "patch": "@@ -108,14 +108,15 @@ fn main() {\n     let _: Result<usize, usize> = res.or_else(|_| Err(ext_str.some_field));\n \n     // should lint, bind_instead_of_map doesn't apply\n-    let _: Result<usize, usize> = res.and_then(|x| Err(x));\n-    let _: Result<usize, usize> = res.or_else(|err| Ok(err));\n-\n     let _: Result<usize, usize> = res.and_then(|_| Err(2));\n     let _: Result<usize, usize> = res.and_then(|_| Err(astronomers_pi));\n     let _: Result<usize, usize> = res.and_then(|_| Err(ext_str.some_field));\n \n     let _: Result<usize, usize> = res.or_else(|_| Ok(2));\n     let _: Result<usize, usize> = res.or_else(|_| Ok(astronomers_pi));\n     let _: Result<usize, usize> = res.or_else(|_| Ok(ext_str.some_field));\n+\n+    // neither bind_instead_of_map nor unnecessary_lazy_eval applies here\n+    let _: Result<usize, usize> = res.and_then(|x| Err(x));\n+    let _: Result<usize, usize> = res.or_else(|err| Ok(err));\n }"}, {"sha": "44dcd0cafbb6e7614579eff586b9f87b83a444ed", "filename": "tests/ui/unnecessary_lazy_eval.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/79da7474b160e2230467f84ff0df3a23658eb4a6/tests%2Fui%2Funnecessary_lazy_eval.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79da7474b160e2230467f84ff0df3a23658eb4a6/tests%2Fui%2Funnecessary_lazy_eval.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_lazy_eval.stderr?ref=79da7474b160e2230467f84ff0df3a23658eb4a6", "patch": "@@ -157,37 +157,37 @@ LL |     let _ = res2.unwrap_or_else(|_| ext_str.some_field);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Use `unwrap_or` instead: `res2.unwrap_or(ext_str.some_field)`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:114:35\n+  --> $DIR/unnecessary_lazy_eval.rs:111:35\n    |\n LL |     let _: Result<usize, usize> = res.and_then(|_| Err(2));\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^ help: Use `and` instead: `res.and(Err(2))`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:115:35\n+  --> $DIR/unnecessary_lazy_eval.rs:112:35\n    |\n LL |     let _: Result<usize, usize> = res.and_then(|_| Err(astronomers_pi));\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Use `and` instead: `res.and(Err(astronomers_pi))`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:116:35\n+  --> $DIR/unnecessary_lazy_eval.rs:113:35\n    |\n LL |     let _: Result<usize, usize> = res.and_then(|_| Err(ext_str.some_field));\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Use `and` instead: `res.and(Err(ext_str.some_field))`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:118:35\n+  --> $DIR/unnecessary_lazy_eval.rs:115:35\n    |\n LL |     let _: Result<usize, usize> = res.or_else(|_| Ok(2));\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^ help: Use `or` instead: `res.or(Ok(2))`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:119:35\n+  --> $DIR/unnecessary_lazy_eval.rs:116:35\n    |\n LL |     let _: Result<usize, usize> = res.or_else(|_| Ok(astronomers_pi));\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Use `or` instead: `res.or(Ok(astronomers_pi))`\n \n error: unnecessary closure used to substitute value for `Result::Err`\n-  --> $DIR/unnecessary_lazy_eval.rs:120:35\n+  --> $DIR/unnecessary_lazy_eval.rs:117:35\n    |\n LL |     let _: Result<usize, usize> = res.or_else(|_| Ok(ext_str.some_field));\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Use `or` instead: `res.or(Ok(ext_str.some_field))`"}]}