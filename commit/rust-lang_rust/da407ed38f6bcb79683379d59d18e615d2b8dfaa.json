{"sha": "da407ed38f6bcb79683379d59d18e615d2b8dfaa", "node_id": "C_kwDOAAsO6NoAKGRhNDA3ZWQzOGY2YmNiNzk2ODMzNzlkNTlkMThlNjE1ZDJiOGRmYWE", "commit": {"author": {"name": "nils", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-10-26T20:06:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-26T20:06:35Z"}, "message": "Fix typo\n\nCo-authored-by: Esteban Kuber <estebank@users.noreply.github.com>", "tree": {"sha": "b592add67de08c1b1d926f40b248ef31e358f0ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b592add67de08c1b1d926f40b248ef31e358f0ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da407ed38f6bcb79683379d59d18e615d2b8dfaa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjWZNLCRBK7hj4Ov3rIwAA+5sIACs7UoSd4BPIGOO6PqRJ+8lx\nq9snLbqsSt1TZjZHHYSD2pQgsSDS3bl7uZY1M2EYsZGtszflPq8SMgRH/2RB1Uur\n3luPZXEGSSBpNezO72z7+IehvsjHg/25KWS8YdljZ8oLH2x07z2AglKCSQqXSsRC\nPuSDyLmBONzYVf5TmclUMXLYchYUHDXk+9IZRfKfGWMv4n2ilSNkT3OUkceGPDOC\n/Ad9tsi4c0wBvOLy4R+t17F7TUsnxi839XhoHM8+/I9KpfDG+jWlGtYnoVR9hTm0\nobev/j8JxOcCukwgrUv6ocgpesio+ix7b+kxLCSMPyGf2kgv0Rf/Pyrqaan4I/8=\n=/GJb\n-----END PGP SIGNATURE-----\n", "payload": "tree b592add67de08c1b1d926f40b248ef31e358f0ce\nparent 796114a5b0c66abbb2527257b8a38c4cda964a66\nauthor nils <48135649+Nilstrieb@users.noreply.github.com> 1666814795 +0200\ncommitter GitHub <noreply@github.com> 1666814795 +0200\n\nFix typo\n\nCo-authored-by: Esteban Kuber <estebank@users.noreply.github.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da407ed38f6bcb79683379d59d18e615d2b8dfaa", "html_url": "https://github.com/rust-lang/rust/commit/da407ed38f6bcb79683379d59d18e615d2b8dfaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da407ed38f6bcb79683379d59d18e615d2b8dfaa/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "796114a5b0c66abbb2527257b8a38c4cda964a66", "url": "https://api.github.com/repos/rust-lang/rust/commits/796114a5b0c66abbb2527257b8a38c4cda964a66", "html_url": "https://github.com/rust-lang/rust/commit/796114a5b0c66abbb2527257b8a38c4cda964a66"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5fe29062b85b90b7d1c88755283e812ed10dcff8", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da407ed38f6bcb79683379d59d18e615d2b8dfaa/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da407ed38f6bcb79683379d59d18e615d2b8dfaa/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=da407ed38f6bcb79683379d59d18e615d2b8dfaa", "patch": "@@ -511,7 +511,7 @@ impl<'a> Parser<'a> {\n     /// If this returns false, recovering broken code into valid code (especially if this recovery does lookahead)\n     /// is not allowed. All recovery done by the parser must be gated behind this check.\n     ///\n-    /// Technically, this only needs to restruct eager recovery by doing lookahead at more tokens.\n+    /// Technically, this only needs to restrict eager recovery by doing lookahead at more tokens.\n     /// But making the distinction is very subtle, and simply forbidding all recovery is a lot simpler to uphold.\n     fn may_recover(&self) -> bool {\n         matches!(self.recovery, Recovery::Allowed)"}]}