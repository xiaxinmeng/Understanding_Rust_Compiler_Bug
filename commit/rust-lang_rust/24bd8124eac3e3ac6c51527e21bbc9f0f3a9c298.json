{"sha": "24bd8124eac3e3ac6c51527e21bbc9f0f3a9c298", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0YmQ4MTI0ZWFjM2UzYWM2YzUxNTI3ZTIxYmJjOWYwZjNhOWMyOTg=", "commit": {"author": {"name": "NODA, Kai", "email": "nodakai@gmail.com", "date": "2014-09-22T00:03:54Z"}, "committer": {"name": "NODA, Kai", "email": "nodakai@gmail.com", "date": "2014-09-24T01:06:17Z"}, "message": "libnative/io: datasync() wrongly called fsync().", "tree": {"sha": "32375787c751fd2e88880b678732e98e6f682b4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32375787c751fd2e88880b678732e98e6f682b4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24bd8124eac3e3ac6c51527e21bbc9f0f3a9c298", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24bd8124eac3e3ac6c51527e21bbc9f0f3a9c298", "html_url": "https://github.com/rust-lang/rust/commit/24bd8124eac3e3ac6c51527e21bbc9f0f3a9c298", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24bd8124eac3e3ac6c51527e21bbc9f0f3a9c298/comments", "author": {"login": "nodakai", "id": 90726, "node_id": "MDQ6VXNlcjkwNzI2", "avatar_url": "https://avatars.githubusercontent.com/u/90726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodakai", "html_url": "https://github.com/nodakai", "followers_url": "https://api.github.com/users/nodakai/followers", "following_url": "https://api.github.com/users/nodakai/following{/other_user}", "gists_url": "https://api.github.com/users/nodakai/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodakai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodakai/subscriptions", "organizations_url": "https://api.github.com/users/nodakai/orgs", "repos_url": "https://api.github.com/users/nodakai/repos", "events_url": "https://api.github.com/users/nodakai/events{/privacy}", "received_events_url": "https://api.github.com/users/nodakai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nodakai", "id": 90726, "node_id": "MDQ6VXNlcjkwNzI2", "avatar_url": "https://avatars.githubusercontent.com/u/90726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodakai", "html_url": "https://github.com/nodakai", "followers_url": "https://api.github.com/users/nodakai/followers", "following_url": "https://api.github.com/users/nodakai/following{/other_user}", "gists_url": "https://api.github.com/users/nodakai/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodakai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodakai/subscriptions", "organizations_url": "https://api.github.com/users/nodakai/orgs", "repos_url": "https://api.github.com/users/nodakai/repos", "events_url": "https://api.github.com/users/nodakai/events{/privacy}", "received_events_url": "https://api.github.com/users/nodakai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c669411afa76bdc92369a3a193e9393364d42370", "url": "https://api.github.com/repos/rust-lang/rust/commits/c669411afa76bdc92369a3a193e9393364d42370", "html_url": "https://github.com/rust-lang/rust/commit/c669411afa76bdc92369a3a193e9393364d42370"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "90fbc7729d478efad894270e1789147e70c43891", "filename": "src/libnative/io/file_unix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24bd8124eac3e3ac6c51527e21bbc9f0f3a9c298/src%2Flibnative%2Fio%2Ffile_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24bd8124eac3e3ac6c51527e21bbc9f0f3a9c298/src%2Flibnative%2Fio%2Ffile_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ffile_unix.rs?ref=24bd8124eac3e3ac6c51527e21bbc9f0f3a9c298", "patch": "@@ -303,7 +303,7 @@ impl rtio::RtioFileStream for CFile {\n         self.flush().and_then(|()| self.fd.fsync())\n     }\n     fn datasync(&mut self) -> IoResult<()> {\n-        self.flush().and_then(|()| self.fd.fsync())\n+        self.flush().and_then(|()| self.fd.datasync())\n     }\n     fn truncate(&mut self, offset: i64) -> IoResult<()> {\n         self.flush().and_then(|()| self.fd.truncate(offset))"}]}