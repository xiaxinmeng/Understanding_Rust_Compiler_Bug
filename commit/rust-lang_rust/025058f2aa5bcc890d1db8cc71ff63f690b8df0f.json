{"sha": "025058f2aa5bcc890d1db8cc71ff63f690b8df0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyNTA1OGYyYWE1YmNjODkwZDFkYjhjYzcxZmY2M2Y2OTBiOGRmMGY=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-05-30T03:39:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-30T03:39:24Z"}, "message": "Rollup merge of #72752 - lcnr:remove-mk_bool, r=estebank\n\nremove mk_bool", "tree": {"sha": "6bd52d61abaa0eab87137167ee3d8e8556670858", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bd52d61abaa0eab87137167ee3d8e8556670858"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/025058f2aa5bcc890d1db8cc71ff63f690b8df0f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe0dVtCRBK7hj4Ov3rIwAAdHIIADXhfIqJPmevr78DY/q+PjUj\nOg+ZZY2u5q59M/KbvHOKFxez5spbdEZFXc04n8J+GEvIUHszNi/JIcgWl/XgFdXr\n6wOjAIf673nLg7JMNcVNTMFFstS6pxrAVaXYioSxlkubQMhzP5+s4b0r+j86qMRG\nrZpkY7fjT9RuPMAcrvGvSQpZI1FipKa/MMPFb74F6BRfVNPT4b+y6J5Bn1aSHMnd\nttH1uOw4Rj0H+uc9kWaDgKgcFzGIukV7L1Wad4qzFmqJqa2GU7dFOcX9CQqTg4ZS\nL0XGXu6XNhgz56xkxVvCWOl6qsZMkgIx80zm55uHFFcetd/cKIzZheGPQ4M3fCo=\n=aLbx\n-----END PGP SIGNATURE-----\n", "payload": "tree 6bd52d61abaa0eab87137167ee3d8e8556670858\nparent c20a97dd532ca719e9ec1232af057cd169d24d14\nparent 25bafc24db9559db2fb3688d824a2a41ada150e5\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1590809964 +0900\ncommitter GitHub <noreply@github.com> 1590809964 +0900\n\nRollup merge of #72752 - lcnr:remove-mk_bool, r=estebank\n\nremove mk_bool\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/025058f2aa5bcc890d1db8cc71ff63f690b8df0f", "html_url": "https://github.com/rust-lang/rust/commit/025058f2aa5bcc890d1db8cc71ff63f690b8df0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/025058f2aa5bcc890d1db8cc71ff63f690b8df0f/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c20a97dd532ca719e9ec1232af057cd169d24d14", "url": "https://api.github.com/repos/rust-lang/rust/commits/c20a97dd532ca719e9ec1232af057cd169d24d14", "html_url": "https://github.com/rust-lang/rust/commit/c20a97dd532ca719e9ec1232af057cd169d24d14"}, {"sha": "25bafc24db9559db2fb3688d824a2a41ada150e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/25bafc24db9559db2fb3688d824a2a41ada150e5", "html_url": "https://github.com/rust-lang/rust/commit/25bafc24db9559db2fb3688d824a2a41ada150e5"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "3a08d202ea385bdefe2f30cd6c2acbc95111c6ea", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/025058f2aa5bcc890d1db8cc71ff63f690b8df0f/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/025058f2aa5bcc890d1db8cc71ff63f690b8df0f/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=025058f2aa5bcc890d1db8cc71ff63f690b8df0f", "patch": "@@ -2251,11 +2251,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         if self.features().never_type_fallback { self.types.never } else { self.types.unit }\n     }\n \n-    #[inline]\n-    pub fn mk_bool(self) -> Ty<'tcx> {\n-        self.mk_ty(Bool)\n-    }\n-\n     #[inline]\n     pub fn mk_fn_def(self, def_id: DefId, substs: SubstsRef<'tcx>) -> Ty<'tcx> {\n         self.mk_ty(FnDef(def_id, substs))"}, {"sha": "d89993e354768a652da53b9449b8147c8fc9f24a", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/025058f2aa5bcc890d1db8cc71ff63f690b8df0f/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/025058f2aa5bcc890d1db8cc71ff63f690b8df0f/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=025058f2aa5bcc890d1db8cc71ff63f690b8df0f", "patch": "@@ -121,9 +121,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let tcx = self.tcx;\n         match BinOpCategory::from(op) {\n             BinOpCategory::Shortcircuit => {\n-                self.demand_suptype(*lhs_span, tcx.mk_bool(), lhs_ty);\n-                self.demand_suptype(*rhs_span, tcx.mk_bool(), rhs_ty);\n-                tcx.mk_bool()\n+                self.demand_suptype(*lhs_span, tcx.types.bool, lhs_ty);\n+                self.demand_suptype(*rhs_span, tcx.types.bool, rhs_ty);\n+                tcx.types.bool\n             }\n \n             BinOpCategory::Shift => {\n@@ -140,7 +140,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             BinOpCategory::Comparison => {\n                 // both LHS and RHS and result will have the same type\n                 self.demand_suptype(*rhs_span, lhs_ty, rhs_ty);\n-                tcx.mk_bool()\n+                tcx.types.bool\n             }\n         }\n     }"}]}