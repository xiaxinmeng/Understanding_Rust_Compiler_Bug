{"sha": "72918c1a97458fb30163677af8dfb4fb573cdeb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyOTE4YzFhOTc0NThmYjMwMTYzNjc3YWY4ZGZiNGZiNTczY2RlYjY=", "commit": {"author": {"name": "Tim", "email": "t.diekmann.3dv@gmail.com", "date": "2018-09-06T14:49:08Z"}, "committer": {"name": "Tim", "email": "t.diekmann.3dv@gmail.com", "date": "2018-09-06T14:49:08Z"}, "message": "Remove (overflowing_)add/mul/sub(_with_overflow)", "tree": {"sha": "4b9a0e803414070192530d27d8872597f5ba9e85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b9a0e803414070192530d27d8872597f5ba9e85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72918c1a97458fb30163677af8dfb4fb573cdeb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72918c1a97458fb30163677af8dfb4fb573cdeb6", "html_url": "https://github.com/rust-lang/rust/commit/72918c1a97458fb30163677af8dfb4fb573cdeb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72918c1a97458fb30163677af8dfb4fb573cdeb6/comments", "author": null, "committer": null, "parents": [{"sha": "055c63ab0d299c47464bb37ee1f766e3e95a50b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/055c63ab0d299c47464bb37ee1f766e3e95a50b2", "html_url": "https://github.com/rust-lang/rust/commit/055c63ab0d299c47464bb37ee1f766e3e95a50b2"}], "stats": {"total": 66, "additions": 0, "deletions": 66}, "files": [{"sha": "a8cb58fdddfe48e6496c8458dac40c0371ab47b1", "filename": "src/intrinsic.rs", "status": "modified", "additions": 0, "deletions": 66, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/72918c1a97458fb30163677af8dfb4fb573cdeb6/src%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72918c1a97458fb30163677af8dfb4fb573cdeb6/src%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic.rs?ref=72918c1a97458fb30163677af8dfb4fb573cdeb6", "patch": "@@ -33,39 +33,6 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n \n         let intrinsic_name = &self.tcx.item_name(instance.def_id()).as_str()[..];\n         match intrinsic_name {\n-            \"add_with_overflow\" => {\n-                let l = self.read_value(args[0])?;\n-                let r = self.read_value(args[1])?;\n-                self.binop_with_overflow(\n-                    mir::BinOp::Add,\n-                    l,\n-                    r,\n-                    dest,\n-                )?\n-            }\n-\n-            \"sub_with_overflow\" => {\n-                let l = self.read_value(args[0])?;\n-                let r = self.read_value(args[1])?;\n-                self.binop_with_overflow(\n-                    mir::BinOp::Sub,\n-                    l,\n-                    r,\n-                    dest,\n-                )?\n-            }\n-\n-            \"mul_with_overflow\" => {\n-                let l = self.read_value(args[0])?;\n-                let r = self.read_value(args[1])?;\n-                self.binop_with_overflow(\n-                    mir::BinOp::Mul,\n-                    l,\n-                    r,\n-                    dest,\n-                )?\n-            }\n-\n             \"arith_offset\" => {\n                 let offset = self.read_scalar(args[1])?.to_isize(&self)?;\n                 let ptr = self.read_scalar(args[0])?.not_undef()?;\n@@ -326,39 +293,6 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n                 self.write_scalar(result_ptr, dest)?;\n             }\n \n-            \"overflowing_sub\" => {\n-                let l = self.read_value(args[0])?;\n-                let r = self.read_value(args[1])?;\n-                self.binop_ignore_overflow(\n-                    mir::BinOp::Sub,\n-                    l,\n-                    r,\n-                    dest,\n-                )?;\n-            }\n-\n-            \"overflowing_mul\" => {\n-                let l = self.read_value(args[0])?;\n-                let r = self.read_value(args[1])?;\n-                self.binop_ignore_overflow(\n-                    mir::BinOp::Mul,\n-                    r,\n-                    l,\n-                    dest,\n-                )?;\n-            }\n-\n-            \"overflowing_add\" => {\n-                let l = self.read_value(args[0])?;\n-                let r = self.read_value(args[1])?;\n-                self.binop_ignore_overflow(\n-                    mir::BinOp::Add,\n-                    r,\n-                    l,\n-                    dest,\n-                )?;\n-            }\n-\n             \"powf32\" => {\n                 let f = self.read_scalar(args[0])?.to_f32()?;\n                 let f2 = self.read_scalar(args[1])?.to_f32()?;"}]}