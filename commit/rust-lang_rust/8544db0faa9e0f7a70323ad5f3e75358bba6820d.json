{"sha": "8544db0faa9e0f7a70323ad5f3e75358bba6820d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1NDRkYjBmYWE5ZTBmN2E3MDMyM2FkNWYzZTc1MzU4YmJhNjgyMGQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-10-23T17:07:11Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-10-23T17:07:11Z"}, "message": "Add macro call span when lacking any other span in diagnostic", "tree": {"sha": "b4c546213efb548d9bc6cbb71b63ccd66aa2ae30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4c546213efb548d9bc6cbb71b63ccd66aa2ae30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8544db0faa9e0f7a70323ad5f3e75358bba6820d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8544db0faa9e0f7a70323ad5f3e75358bba6820d", "html_url": "https://github.com/rust-lang/rust/commit/8544db0faa9e0f7a70323ad5f3e75358bba6820d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8544db0faa9e0f7a70323ad5f3e75358bba6820d/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a66dc8a1489d2818b5e63f18e1464be79da1f137", "url": "https://api.github.com/repos/rust-lang/rust/commits/a66dc8a1489d2818b5e63f18e1464be79da1f137", "html_url": "https://github.com/rust-lang/rust/commit/a66dc8a1489d2818b5e63f18e1464be79da1f137"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "b70a7989275cc23f0da9d9a62bbfc343d2d24eab", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8544db0faa9e0f7a70323ad5f3e75358bba6820d/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8544db0faa9e0f7a70323ad5f3e75358bba6820d/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=8544db0faa9e0f7a70323ad5f3e75358bba6820d", "patch": "@@ -50,7 +50,12 @@ pub struct ParserAnyMacro<'a> {\n impl<'a> ParserAnyMacro<'a> {\n     pub fn make(mut self: Box<ParserAnyMacro<'a>>, kind: AstFragmentKind) -> AstFragment {\n         let ParserAnyMacro { site_span, macro_ident, ref mut parser } = *self;\n-        let fragment = panictry!(parser.parse_ast_fragment(kind, true));\n+        let fragment = panictry!(parser.parse_ast_fragment(kind, true).map_err(|mut e| {\n+            if e.span.is_dummy() {  // Get around lack of span in error (#30128)\n+                e.set_span(site_span);\n+            }\n+            e\n+        }));\n \n         // We allow semicolons at the end of expressions -- e.g. the semicolon in\n         // `macro_rules! m { () => { panic!(); } }` isn't parsed by `.parse_expr()`,"}, {"sha": "639155636edfa9ecf7f1e7375d9f3aaeaff79f34", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8544db0faa9e0f7a70323ad5f3e75358bba6820d/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8544db0faa9e0f7a70323ad5f3e75358bba6820d/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=8544db0faa9e0f7a70323ad5f3e75358bba6820d", "patch": "@@ -612,6 +612,17 @@ impl MultiSpan {\n         &self.primary_spans\n     }\n \n+    /// Returns `true` if this contains only a dummy primary span with any hygienic context.\n+    pub fn is_dummy(&self) -> bool {\n+        let mut is_dummy = true;\n+        for span in &self.primary_spans {\n+            if !span.is_dummy() {\n+                is_dummy = false;\n+            }\n+        }\n+        is_dummy\n+    }\n+\n     /// Replaces all occurrences of one Span with another. Used to move Spans in areas that don't\n     /// display well (like std macros). Returns true if replacements occurred.\n     pub fn replace(&mut self, before: Span, after: Span) -> bool {"}, {"sha": "cf8572aefa242eaa050f7b52132933f0d6596a5b", "filename": "src/test/ui/macros/macro-in-expression-context-2.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8544db0faa9e0f7a70323ad5f3e75358bba6820d/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8544db0faa9e0f7a70323ad5f3e75358bba6820d/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context-2.rs?ref=8544db0faa9e0f7a70323ad5f3e75358bba6820d", "patch": "@@ -0,0 +1,7 @@\n+macro_rules! empty { () => () }\n+\n+fn main() {\n+    match 42 {\n+        _ => { empty!() }\n+    };\n+}"}, {"sha": "80d5dbd66cc29f4e3a1213a5b34c3c0dab88669d", "filename": "src/test/ui/macros/macro-in-expression-context-2.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8544db0faa9e0f7a70323ad5f3e75358bba6820d/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8544db0faa9e0f7a70323ad5f3e75358bba6820d/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context-2.stderr?ref=8544db0faa9e0f7a70323ad5f3e75358bba6820d", "patch": "@@ -0,0 +1,8 @@\n+error: expected expression, found `<eof>`\n+  --> $DIR/macro-in-expression-context-2.rs:5:16\n+   |\n+LL |         _ => { empty!() }\n+   |                ^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}