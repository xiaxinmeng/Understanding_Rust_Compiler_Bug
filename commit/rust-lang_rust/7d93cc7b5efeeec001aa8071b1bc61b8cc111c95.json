{"sha": "7d93cc7b5efeeec001aa8071b1bc61b8cc111c95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkOTNjYzdiNWVmZWVlYzAwMWFhODA3MWIxYmM2MWI4Y2MxMTFjOTU=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-08-27T13:45:37Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-08-27T13:45:37Z"}, "message": "Add docs", "tree": {"sha": "830b6c96357bfb3524dbd11e9971ab5da5a00129", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/830b6c96357bfb3524dbd11e9971ab5da5a00129"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d93cc7b5efeeec001aa8071b1bc61b8cc111c95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d93cc7b5efeeec001aa8071b1bc61b8cc111c95", "html_url": "https://github.com/rust-lang/rust/commit/7d93cc7b5efeeec001aa8071b1bc61b8cc111c95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d93cc7b5efeeec001aa8071b1bc61b8cc111c95/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ace3416cf25d4214e1ebdac55459abd8edee4999", "url": "https://api.github.com/repos/rust-lang/rust/commits/ace3416cf25d4214e1ebdac55459abd8edee4999", "html_url": "https://github.com/rust-lang/rust/commit/ace3416cf25d4214e1ebdac55459abd8edee4999"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "8f946a2b5eb10a9538c193723de0c053af06c8d1", "filename": "src/shims/env.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7d93cc7b5efeeec001aa8071b1bc61b8cc111c95/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d93cc7b5efeeec001aa8071b1bc61b8cc111c95/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=7d93cc7b5efeeec001aa8071b1bc61b8cc111c95", "patch": "@@ -7,6 +7,8 @@ use crate::*;\n \n #[derive(Default)]\n pub struct EnvVars {\n+    /// Stores pointers to the environment variables. These variables must be stored as\n+    /// null-terminated C strings with the `\"{name}={value}\"` format.\n     map: HashMap<Vec<u8>, Pointer<Tag>>,\n }\n \n@@ -59,6 +61,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let name_ptr = this.read_scalar(name_op)?.not_undef()?;\n         let name = this.memory().read_c_str(name_ptr)?;\n         Ok(match this.machine.env_vars.map.get(name) {\n+            // The offset is used to strip the \"{name}=\" part of the string.\n             Some(var_ptr) => Scalar::Ptr(var_ptr.offset(Size::from_bytes(name.len() as u64 + 1), this)?),\n             None => Scalar::ptr_null(&*this.tcx),\n         })"}]}