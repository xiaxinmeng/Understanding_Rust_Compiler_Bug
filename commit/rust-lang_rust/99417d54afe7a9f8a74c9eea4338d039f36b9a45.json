{"sha": "99417d54afe7a9f8a74c9eea4338d039f36b9a45", "node_id": "C_kwDOAAsO6NoAKDk5NDE3ZDU0YWZlN2E5ZjhhNzRjOWVlYTQzMzhkMDM5ZjM2YjlhNDU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-13T17:54:52Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-13T17:56:04Z"}, "message": "Address a few more nits", "tree": {"sha": "49d54e534ff5a31707911b54f44817ff57dd57ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49d54e534ff5a31707911b54f44817ff57dd57ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99417d54afe7a9f8a74c9eea4338d039f36b9a45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99417d54afe7a9f8a74c9eea4338d039f36b9a45", "html_url": "https://github.com/rust-lang/rust/commit/99417d54afe7a9f8a74c9eea4338d039f36b9a45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99417d54afe7a9f8a74c9eea4338d039f36b9a45/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbe66a6ef36e219f40b07607f558acbd94b19293", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbe66a6ef36e219f40b07607f558acbd94b19293", "html_url": "https://github.com/rust-lang/rust/commit/fbe66a6ef36e219f40b07607f558acbd94b19293"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "3c29c72841e44579ce491c1e28ba2cac9283e6ed", "filename": "compiler/rustc_hir_analysis/src/variance/mod.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/99417d54afe7a9f8a74c9eea4338d039f36b9a45/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99417d54afe7a9f8a74c9eea4338d039f36b9a45/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fmod.rs?ref=99417d54afe7a9f8a74c9eea4338d039f36b9a45", "patch": "@@ -110,13 +110,14 @@ fn variance_of_opaque(tcx: TyCtxt<'_>, item_def_id: LocalDefId) -> &[ty::Varianc\n \n         #[instrument(level = \"trace\", skip(self), ret)]\n         fn visit_ty(&mut self, t: Ty<'tcx>) -> ControlFlow<Self::BreakTy> {\n-            // FIXME(alias): merge these\n             match t.kind() {\n-                ty::Alias(ty::Opaque, ty::AliasTy { def_id, substs }) => self.visit_opaque(*def_id, substs),\n-                ty::Alias(ty::Projection, proj)\n-                    if self.tcx.def_kind(proj.def_id) == DefKind::ImplTraitPlaceholder =>\n+                ty::Alias(_, ty::AliasTy { def_id, substs })\n+                    if matches!(\n+                        self.tcx.def_kind(*def_id),\n+                        DefKind::OpaqueTy | DefKind::ImplTraitPlaceholder\n+                    ) =>\n                 {\n-                    self.visit_opaque(proj.def_id, proj.substs)\n+                    self.visit_opaque(*def_id, substs)\n                 }\n                 _ => t.super_visit_with(self),\n             }"}, {"sha": "3d2b2c6ff2dad9a56cc8ab22144158d0ffb03c93", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/99417d54afe7a9f8a74c9eea4338d039f36b9a45/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99417d54afe7a9f8a74c9eea4338d039f36b9a45/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=99417d54afe7a9f8a74c9eea4338d039f36b9a45", "patch": "@@ -338,13 +338,14 @@ pub fn unexpected_hidden_region_diagnostic<'tcx>(\n \n impl<'tcx> InferCtxt<'tcx> {\n     pub fn get_impl_future_output_ty(&self, ty: Ty<'tcx>) -> Option<Ty<'tcx>> {\n-        // FIXME(alias): Merge these\n         let (def_id, substs) = match *ty.kind() {\n-            ty::Alias(ty::Opaque, ty::AliasTy { def_id, substs }) => (def_id, substs),\n-            ty::Alias(ty::Projection, data)\n-                if self.tcx.def_kind(data.def_id) == DefKind::ImplTraitPlaceholder =>\n+            ty::Alias(_, ty::AliasTy { def_id, substs })\n+                if matches!(\n+                    self.tcx.def_kind(def_id),\n+                    DefKind::OpaqueTy | DefKind::ImplTraitPlaceholder\n+                ) =>\n             {\n-                (data.def_id, data.substs)\n+                (def_id, substs)\n             }\n             _ => return None,\n         };\n@@ -1730,7 +1731,6 @@ impl<'tcx> TypeErrCtxt<'_, 'tcx> {\n                 TypeError::Sorts(values) => {\n                     let extra = expected == found;\n                     let sort_string = |ty: Ty<'tcx>, path: Option<PathBuf>| {\n-                        // FIXME(alias): Merge these\n                         let mut s = match (extra, ty.kind()) {\n                             (true, ty::Alias(ty::Opaque, ty::AliasTy { def_id, .. })) => {\n                                 let sm = self.tcx.sess.source_map();"}]}