{"sha": "60ba52b3e022aa88b011295b38fcf50fe440d1f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwYmE1MmIzZTAyMmFhODhiMDExMjk1YjM4ZmNmNTBmZTQ0MGQxZjk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-05T15:24:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-05T15:24:56Z"}, "message": "for && array", "tree": {"sha": "c5b72963f5d97578ffe464f022c297d8060960fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5b72963f5d97578ffe464f022c297d8060960fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60ba52b3e022aa88b011295b38fcf50fe440d1f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60ba52b3e022aa88b011295b38fcf50fe440d1f9", "html_url": "https://github.com/rust-lang/rust/commit/60ba52b3e022aa88b011295b38fcf50fe440d1f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60ba52b3e022aa88b011295b38fcf50fe440d1f9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "url": "https://api.github.com/repos/rust-lang/rust/commits/d44169ab1e2897a90f8aa7d7672d2fe318cceb27", "html_url": "https://github.com/rust-lang/rust/commit/d44169ab1e2897a90f8aa7d7672d2fe318cceb27"}], "stats": {"total": 150, "additions": 150, "deletions": 0}, "files": [{"sha": "ca37eb80be964d8aba9b79b8ae075f7eacaefd95", "filename": "src/grammar.ron", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60ba52b3e022aa88b011295b38fcf50fe440d1f9/src%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/60ba52b3e022aa88b011295b38fcf50fe440d1f9/src%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar.ron?ref=60ba52b3e022aa88b011295b38fcf50fe440d1f9", "patch": "@@ -140,12 +140,14 @@ Grammar(\n \n         // atoms\n         \"TUPLE_EXPR\",\n+        \"ARRAY_EXPR\",\n         \"PAREN_EXPR\",\n         \"PATH_EXPR\",\n         \"LAMBDA_EXPR\",\n         \"IF_EXPR\",\n         \"WHILE_EXPR\",\n         \"LOOP_EXPR\",\n+        \"FOR_EXPR\",\n         \"BLOCK_EXPR\",\n         \"RETURN_EXPR\",\n         \"MATCH_EXPR\","}, {"sha": "e4f681c17a1de8a2acc704d341959f39cfc47065", "filename": "src/grammar/expressions/atom.rs", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/60ba52b3e022aa88b011295b38fcf50fe440d1f9/src%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ba52b3e022aa88b011295b38fcf50fe440d1f9/src%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fexpressions%2Fatom.rs?ref=60ba52b3e022aa88b011295b38fcf50fe440d1f9", "patch": "@@ -44,11 +44,13 @@ pub(super) fn atom_expr(p: &mut Parser, r: Restrictions) -> Option<CompletedMark\n     let la = p.nth(1);\n     let done = match p.current() {\n         L_PAREN => tuple_expr(p),\n+        L_BRACK => array_expr(p),\n         PIPE => lambda_expr(p),\n         MOVE_KW if la == PIPE => lambda_expr(p),\n         IF_KW => if_expr(p),\n         WHILE_KW => while_expr(p),\n         LOOP_KW => loop_expr(p),\n+        FOR_KW => for_expr(p),\n         MATCH_KW => match_expr(p),\n         UNSAFE_KW if la == L_CURLY => block_expr(p),\n         L_CURLY => block_expr(p),\n@@ -86,6 +88,36 @@ fn tuple_expr(p: &mut Parser) -> CompletedMarker {\n     m.complete(p, if saw_expr && !saw_comma { PAREN_EXPR } else { TUPLE_EXPR })\n }\n \n+// test array_expr\n+// fn foo() {\n+//     [];\n+//     [1];\n+//     [1, 2,];\n+//     [1; 2];\n+// }\n+fn array_expr(p: &mut Parser) -> CompletedMarker {\n+    assert!(p.at(L_BRACK));\n+    let m = p.start();\n+    p.bump();\n+    if p.eat(R_BRACK) {\n+        return m.complete(p, ARRAY_EXPR);\n+    }\n+    expr(p);\n+    if p.eat(SEMI) {\n+        expr(p);\n+        p.expect(R_BRACK);\n+        return m.complete(p, ARRAY_EXPR);\n+    }\n+    while !p.at(EOF) && !p.at(R_BRACK) {\n+        p.expect(COMMA);\n+        if !p.at(R_BRACK) {\n+            expr(p);\n+        }\n+    }\n+    p.expect(R_BRACK);\n+    m.complete(p, ARRAY_EXPR)\n+}\n+\n // test lambda_expr\n // fn foo() {\n //     || ();\n@@ -156,6 +188,21 @@ fn loop_expr(p: &mut Parser) -> CompletedMarker {\n     m.complete(p, LOOP_EXPR)\n }\n \n+// test for_expr\n+// fn foo() {\n+//     for x in [] {};\n+// }\n+fn for_expr(p: &mut Parser) -> CompletedMarker {\n+    assert!(p.at(FOR_KW));\n+    let m = p.start();\n+    p.bump();\n+    patterns::pattern(p);\n+    p.expect(IN_KW);\n+    expr_no_struct(p);\n+    block(p);\n+    m.complete(p, FOR_EXPR)\n+}\n+\n // test cond\n // fn foo() { if let Some(_) = None {} }\n fn cond(p: &mut Parser) {"}, {"sha": "3c507112617f478f873988c1f1eeb60e1e181301", "filename": "src/syntax_kinds/generated.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60ba52b3e022aa88b011295b38fcf50fe440d1f9/src%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ba52b3e022aa88b011295b38fcf50fe440d1f9/src%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds%2Fgenerated.rs?ref=60ba52b3e022aa88b011295b38fcf50fe440d1f9", "patch": "@@ -130,12 +130,14 @@ pub enum SyntaxKind {\n     STRUCT_PAT,\n     TUPLE_PAT,\n     TUPLE_EXPR,\n+    ARRAY_EXPR,\n     PAREN_EXPR,\n     PATH_EXPR,\n     LAMBDA_EXPR,\n     IF_EXPR,\n     WHILE_EXPR,\n     LOOP_EXPR,\n+    FOR_EXPR,\n     BLOCK_EXPR,\n     RETURN_EXPR,\n     MATCH_EXPR,\n@@ -361,12 +363,14 @@ impl SyntaxKind {\n             STRUCT_PAT => &SyntaxInfo { name: \"STRUCT_PAT\" },\n             TUPLE_PAT => &SyntaxInfo { name: \"TUPLE_PAT\" },\n             TUPLE_EXPR => &SyntaxInfo { name: \"TUPLE_EXPR\" },\n+            ARRAY_EXPR => &SyntaxInfo { name: \"ARRAY_EXPR\" },\n             PAREN_EXPR => &SyntaxInfo { name: \"PAREN_EXPR\" },\n             PATH_EXPR => &SyntaxInfo { name: \"PATH_EXPR\" },\n             LAMBDA_EXPR => &SyntaxInfo { name: \"LAMBDA_EXPR\" },\n             IF_EXPR => &SyntaxInfo { name: \"IF_EXPR\" },\n             WHILE_EXPR => &SyntaxInfo { name: \"WHILE_EXPR\" },\n             LOOP_EXPR => &SyntaxInfo { name: \"LOOP_EXPR\" },\n+            FOR_EXPR => &SyntaxInfo { name: \"FOR_EXPR\" },\n             BLOCK_EXPR => &SyntaxInfo { name: \"BLOCK_EXPR\" },\n             RETURN_EXPR => &SyntaxInfo { name: \"RETURN_EXPR\" },\n             MATCH_EXPR => &SyntaxInfo { name: \"MATCH_EXPR\" },"}, {"sha": "972197d2a1752f4395614b0c12891eb2ce2f78aa", "filename": "tests/data/parser/inline/0085_for_expr.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/60ba52b3e022aa88b011295b38fcf50fe440d1f9/tests%2Fdata%2Fparser%2Finline%2F0085_for_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ba52b3e022aa88b011295b38fcf50fe440d1f9/tests%2Fdata%2Fparser%2Finline%2F0085_for_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0085_for_expr.rs?ref=60ba52b3e022aa88b011295b38fcf50fe440d1f9", "patch": "@@ -0,0 +1,3 @@\n+fn foo() {\n+    for x in [] {};\n+}"}, {"sha": "33dc86ca0236077e23ecdf7caf00d36e3083adc1", "filename": "tests/data/parser/inline/0085_for_expr.txt", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/60ba52b3e022aa88b011295b38fcf50fe440d1f9/tests%2Fdata%2Fparser%2Finline%2F0085_for_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/60ba52b3e022aa88b011295b38fcf50fe440d1f9/tests%2Fdata%2Fparser%2Finline%2F0085_for_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0085_for_expr.txt?ref=60ba52b3e022aa88b011295b38fcf50fe440d1f9", "patch": "@@ -0,0 +1,34 @@\n+FILE@[0; 33)\n+  FN_ITEM@[0; 33)\n+    FN_KW@[0; 2)\n+    NAME@[2; 6)\n+      WHITESPACE@[2; 3)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 9)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+      WHITESPACE@[8; 9)\n+    BLOCK_EXPR@[9; 33)\n+      L_CURLY@[9; 10)\n+      EXPR_STMT@[10; 31)\n+        FOR_EXPR@[10; 29)\n+          WHITESPACE@[10; 15)\n+          FOR_KW@[15; 18)\n+          BIND_PAT@[18; 21)\n+            NAME@[18; 21)\n+              WHITESPACE@[18; 19)\n+              IDENT@[19; 20) \"x\"\n+              WHITESPACE@[20; 21)\n+          IN_KW@[21; 23)\n+          ARRAY_EXPR@[23; 27)\n+            WHITESPACE@[23; 24)\n+            L_BRACK@[24; 25)\n+            R_BRACK@[25; 26)\n+            WHITESPACE@[26; 27)\n+          BLOCK_EXPR@[27; 29)\n+            L_CURLY@[27; 28)\n+            R_CURLY@[28; 29)\n+        SEMI@[29; 30)\n+        WHITESPACE@[30; 31)\n+      R_CURLY@[31; 32)\n+      WHITESPACE@[32; 33)"}, {"sha": "4dc1999d14083087e5d838dfee506b3053a41eda", "filename": "tests/data/parser/inline/0086_array_expr.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/60ba52b3e022aa88b011295b38fcf50fe440d1f9/tests%2Fdata%2Fparser%2Finline%2F0086_array_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ba52b3e022aa88b011295b38fcf50fe440d1f9/tests%2Fdata%2Fparser%2Finline%2F0086_array_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0086_array_expr.rs?ref=60ba52b3e022aa88b011295b38fcf50fe440d1f9", "patch": "@@ -0,0 +1,6 @@\n+fn foo() {\n+    [];\n+    [1];\n+    [1, 2,];\n+    [1; 2];\n+}"}, {"sha": "40a9b018c7966cc0adfac646fe59de83a456eb4a", "filename": "tests/data/parser/inline/0086_array_expr.txt", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/60ba52b3e022aa88b011295b38fcf50fe440d1f9/tests%2Fdata%2Fparser%2Finline%2F0086_array_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/60ba52b3e022aa88b011295b38fcf50fe440d1f9/tests%2Fdata%2Fparser%2Finline%2F0086_array_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0086_array_expr.txt?ref=60ba52b3e022aa88b011295b38fcf50fe440d1f9", "patch": "@@ -0,0 +1,54 @@\n+FILE@[0; 55)\n+  FN_ITEM@[0; 55)\n+    FN_KW@[0; 2)\n+    NAME@[2; 6)\n+      WHITESPACE@[2; 3)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 9)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+      WHITESPACE@[8; 9)\n+    BLOCK_EXPR@[9; 55)\n+      L_CURLY@[9; 10)\n+      EXPR_STMT@[10; 23)\n+        ARRAY_EXPR@[10; 17)\n+          WHITESPACE@[10; 15)\n+          L_BRACK@[15; 16)\n+          R_BRACK@[16; 17)\n+        SEMI@[17; 18)\n+        WHITESPACE@[18; 23)\n+      EXPR_STMT@[23; 32)\n+        ARRAY_EXPR@[23; 26)\n+          L_BRACK@[23; 24)\n+          LITERAL@[24; 25)\n+            INT_NUMBER@[24; 25) \"1\"\n+          R_BRACK@[25; 26)\n+        SEMI@[26; 27)\n+        WHITESPACE@[27; 32)\n+      EXPR_STMT@[32; 45)\n+        ARRAY_EXPR@[32; 39)\n+          L_BRACK@[32; 33)\n+          LITERAL@[33; 34)\n+            INT_NUMBER@[33; 34) \"1\"\n+          COMMA@[34; 35)\n+          LITERAL@[35; 37)\n+            WHITESPACE@[35; 36)\n+            INT_NUMBER@[36; 37) \"2\"\n+          COMMA@[37; 38)\n+          R_BRACK@[38; 39)\n+        SEMI@[39; 40)\n+        WHITESPACE@[40; 45)\n+      EXPR_STMT@[45; 53)\n+        ARRAY_EXPR@[45; 51)\n+          L_BRACK@[45; 46)\n+          LITERAL@[46; 47)\n+            INT_NUMBER@[46; 47) \"1\"\n+          SEMI@[47; 48)\n+          LITERAL@[48; 50)\n+            WHITESPACE@[48; 49)\n+            INT_NUMBER@[49; 50) \"2\"\n+          R_BRACK@[50; 51)\n+        SEMI@[51; 52)\n+        WHITESPACE@[52; 53)\n+      R_CURLY@[53; 54)\n+      WHITESPACE@[54; 55)"}]}