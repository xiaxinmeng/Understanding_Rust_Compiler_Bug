{"sha": "cb6032bdf4bdce9e32f5ecf716a5b06a6edc3ceb", "node_id": "C_kwDOAAsO6NoAKGNiNjAzMmJkZjRiZGNlOWUzMmY1ZWNmNzE2YTViMDZhNmVkYzNjZWI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-29T12:06:43Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-05-01T17:57:09Z"}, "message": "Fix untagged enum deserialization", "tree": {"sha": "6e91189dd83fffe00c28802ca88ae367e05c890d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e91189dd83fffe00c28802ca88ae367e05c890d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb6032bdf4bdce9e32f5ecf716a5b06a6edc3ceb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb6032bdf4bdce9e32f5ecf716a5b06a6edc3ceb", "html_url": "https://github.com/rust-lang/rust/commit/cb6032bdf4bdce9e32f5ecf716a5b06a6edc3ceb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb6032bdf4bdce9e32f5ecf716a5b06a6edc3ceb/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6dba1c97ca6c9a529e7dfbb17320e3e59713aef", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6dba1c97ca6c9a529e7dfbb17320e3e59713aef", "html_url": "https://github.com/rust-lang/rust/commit/d6dba1c97ca6c9a529e7dfbb17320e3e59713aef"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "c7f939f36aa65556a0816fb5c212e431a6b91f31", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/cb6032bdf4bdce9e32f5ecf716a5b06a6edc3ceb/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb6032bdf4bdce9e32f5ecf716a5b06a6edc3ceb/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=cb6032bdf4bdce9e32f5ecf716a5b06a6edc3ceb", "patch": "@@ -1241,6 +1241,36 @@ macro_rules! create_bool_or_string_de {\n create_bool_or_string_de!(true_or_always<true, \"always\">);\n create_bool_or_string_de!(false_or_never<false, \"never\">);\n \n+macro_rules! named_unit_variant {\n+    ($variant:ident) => {\n+        pub(super) fn $variant<'de, D>(deserializer: D) -> Result<(), D::Error>\n+        where\n+            D: serde::Deserializer<'de>,\n+        {\n+            struct V;\n+            impl<'de> serde::de::Visitor<'de> for V {\n+                type Value = ();\n+                fn expecting(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n+                    f.write_str(concat!(\"\\\"\", stringify!($variant), \"\\\"\"))\n+                }\n+                fn visit_str<E: serde::de::Error>(self, value: &str) -> Result<Self::Value, E> {\n+                    if value == stringify!($variant) {\n+                        Ok(())\n+                    } else {\n+                        Err(E::invalid_value(serde::de::Unexpected::Str(value), &self))\n+                    }\n+                }\n+            }\n+            deserializer.deserialize_str(V)\n+        }\n+    };\n+}\n+\n+mod de_unit_v {\n+    named_unit_variant!(all);\n+    named_unit_variant!(skip_trivial);\n+}\n+\n #[derive(Deserialize, Debug, Clone, Copy)]\n #[serde(rename_all = \"snake_case\")]\n enum SnippetScopeDef {\n@@ -1332,21 +1362,21 @@ enum CallableCompletionDef {\n }\n \n #[derive(Deserialize, Debug, Clone)]\n-#[serde(rename_all = \"snake_case\")]\n #[serde(untagged)]\n enum CargoFeatures {\n+    #[serde(deserialize_with = \"de_unit_v::all\")]\n     All,\n     Listed(Vec<String>),\n }\n \n #[derive(Deserialize, Debug, Clone)]\n-#[serde(rename_all = \"snake_case\")]\n #[serde(untagged)]\n enum LifetimeElisionDef {\n     #[serde(deserialize_with = \"true_or_always\")]\n     Always,\n     #[serde(deserialize_with = \"false_or_never\")]\n     Never,\n+    #[serde(deserialize_with = \"de_unit_v::skip_trivial\")]\n     SkipTrivial,\n }\n "}]}