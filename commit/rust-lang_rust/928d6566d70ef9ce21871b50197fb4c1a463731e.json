{"sha": "928d6566d70ef9ce21871b50197fb4c1a463731e", "node_id": "C_kwDOAAsO6NoAKDkyOGQ2NTY2ZDcwZWY5Y2UyMTg3MWI1MDE5N2ZiNGMxYTQ2MzczMWU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-21T23:20:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-21T23:20:04Z"}, "message": "Auto merge of #105613 - Nilstrieb:rename-assert_uninit_valid, r=RalfJung\n\nRename `assert_uninit_valid` intrinsic\n\nIt's not about \"uninit\" anymore but about \"filling with 0x01 bytes\" so the name should at least try to reflect that.\n\nThis is actually not fully correct though, as it does still panic for all uninit with `-Zstrict-init-checks`. I'm not sure what the best way is to deal with that not causing confusion. I guess we could just remove the flag? I don't think having it makes a lot of sense anymore with the direction that we have chose to go. It could be relevant again if #100423 lands so removing it may be a bit over eager.\n\nr? `@RalfJung`", "tree": {"sha": "2e1bf90166b142dfe5153072a01acda872c576a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e1bf90166b142dfe5153072a01acda872c576a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/928d6566d70ef9ce21871b50197fb4c1a463731e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/928d6566d70ef9ce21871b50197fb4c1a463731e", "html_url": "https://github.com/rust-lang/rust/commit/928d6566d70ef9ce21871b50197fb4c1a463731e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/928d6566d70ef9ce21871b50197fb4c1a463731e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98a276b5895697a862b48bcaf07b423de0b0deef", "url": "https://api.github.com/repos/rust-lang/rust/commits/98a276b5895697a862b48bcaf07b423de0b0deef", "html_url": "https://github.com/rust-lang/rust/commit/98a276b5895697a862b48bcaf07b423de0b0deef"}, {"sha": "67b711af7fe4d00af20eca55518d0e8f3d3e39a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/67b711af7fe4d00af20eca55518d0e8f3d3e39a1", "html_url": "https://github.com/rust-lang/rust/commit/67b711af7fe4d00af20eca55518d0e8f3d3e39a1"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "e4ac89a7bec6b245d17cf41828f392a76df8e4dc", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/928d6566d70ef9ce21871b50197fb4c1a463731e/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/928d6566d70ef9ce21871b50197fb4c1a463731e/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=928d6566d70ef9ce21871b50197fb4c1a463731e", "patch": "@@ -644,7 +644,7 @@ fn codegen_regular_intrinsic_call<'tcx>(\n             let res = CValue::by_val(res, arg.layout());\n             ret.write_cvalue(fx, res);\n         }\n-        sym::assert_inhabited | sym::assert_zero_valid | sym::assert_uninit_valid => {\n+        sym::assert_inhabited | sym::assert_zero_valid | sym::assert_mem_uninitialized_valid => {\n             intrinsic_args!(fx, args => (); intrinsic);\n \n             let layout = fx.layout_of(substs.type_at(0));\n@@ -673,7 +673,9 @@ fn codegen_regular_intrinsic_call<'tcx>(\n                 return;\n             }\n \n-            if intrinsic == sym::assert_uninit_valid && !fx.tcx.permits_uninit_init(layout) {\n+            if intrinsic == sym::assert_mem_uninitialized_valid\n+                && !fx.tcx.permits_uninit_init(layout)\n+            {\n                 with_no_trimmed_paths!({\n                     crate::base::codegen_panic(\n                         fx,"}]}