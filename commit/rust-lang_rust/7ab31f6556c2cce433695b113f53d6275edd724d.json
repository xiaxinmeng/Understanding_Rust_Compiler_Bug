{"sha": "7ab31f6556c2cce433695b113f53d6275edd724d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhYjMxZjY1NTZjMmNjZTQzMzY5NWIxMTNmNTNkNjI3NWVkZDcyNGQ=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-10T22:55:41Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-11T10:05:13Z"}, "message": "Prevent EPIPE causing ICEs in rustc and rustdoc", "tree": {"sha": "80f61c1d771a22701a2fe3791541ff0372f58125", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80f61c1d771a22701a2fe3791541ff0372f58125"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ab31f6556c2cce433695b113f53d6275edd724d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ab31f6556c2cce433695b113f53d6275edd724d", "html_url": "https://github.com/rust-lang/rust/commit/7ab31f6556c2cce433695b113f53d6275edd724d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ab31f6556c2cce433695b113f53d6275edd724d/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b9b70c394e7f341b4016fce4cbf763d404b26f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b9b70c394e7f341b4016fce4cbf763d404b26f9", "html_url": "https://github.com/rust-lang/rust/commit/4b9b70c394e7f341b4016fce4cbf763d404b26f9"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "4f23c62ab0663eb9754f0ed56474372b0a7818eb", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7ab31f6556c2cce433695b113f53d6275edd724d/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ab31f6556c2cce433695b113f53d6275edd724d/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=7ab31f6556c2cce433695b113f53d6275edd724d", "patch": "@@ -548,6 +548,18 @@ fn run_compiler_impl<'a>(args: &[String],\n     (result, Some(sess))\n }\n \n+#[cfg(unix)]\n+pub fn set_sigpipe_handler() {\n+    unsafe {\n+        // Set the SIGPIPE signal handler, so that an EPIPE\n+        // will cause rustc to terminate, as expected.\n+        assert!(libc::signal(libc::SIGPIPE, libc::SIG_DFL) != libc::SIG_ERR);\n+    }\n+}\n+\n+#[cfg(windows)]\n+pub fn set_sigpipe_handler() {}\n+\n // Extract output directory and file from matches.\n fn make_output(matches: &getopts::Matches) -> (Option<PathBuf>, Option<PathBuf>) {\n     let odir = matches.opt_str(\"out-dir\").map(|o| PathBuf::from(&o));"}, {"sha": "1e51f45f149a0873fc57b49acb89582e3c7624f9", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ab31f6556c2cce433695b113f53d6275edd724d/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ab31f6556c2cce433695b113f53d6275edd724d/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=7ab31f6556c2cce433695b113f53d6275edd724d", "patch": "@@ -101,6 +101,7 @@ struct Output {\n \n pub fn main() {\n     const STACK_SIZE: usize = 32_000_000; // 32MB\n+    rustc_driver::set_sigpipe_handler();\n     env_logger::init();\n     let res = std::thread::Builder::new().stack_size(STACK_SIZE).spawn(move || {\n         syntax::with_globals(move || {"}, {"sha": "c1298e5040dbeec35b3a503c17d1aa2e4aa961c8", "filename": "src/libstd/sys/unix/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7ab31f6556c2cce433695b113f53d6275edd724d/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ab31f6556c2cce433695b113f53d6275edd724d/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fmod.rs?ref=7ab31f6556c2cce433695b113f53d6275edd724d", "patch": "@@ -80,11 +80,11 @@ pub fn init() {\n         reset_sigpipe();\n     }\n \n-    #[cfg(not(any(target_os = \"emscripten\", target_os=\"fuchsia\")))]\n+    #[cfg(not(any(target_os = \"emscripten\", target_os = \"fuchsia\")))]\n     unsafe fn reset_sigpipe() {\n         assert!(signal(libc::SIGPIPE, libc::SIG_IGN) != libc::SIG_ERR);\n     }\n-    #[cfg(any(target_os = \"emscripten\", target_os=\"fuchsia\"))]\n+    #[cfg(any(target_os = \"emscripten\", target_os = \"fuchsia\"))]\n     unsafe fn reset_sigpipe() {}\n }\n "}, {"sha": "c07fb41d13b5ca149ccbd87bd1480f33ab1d32b7", "filename": "src/rustc/rustc.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7ab31f6556c2cce433695b113f53d6275edd724d/src%2Frustc%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ab31f6556c2cce433695b113f53d6275edd724d/src%2Frustc%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Frustc.rs?ref=7ab31f6556c2cce433695b113f53d6275edd724d", "patch": "@@ -22,4 +22,7 @@ extern {}\n \n extern crate rustc_driver;\n \n-fn main() { rustc_driver::main() }\n+fn main() {\n+    rustc_driver::set_sigpipe_handler();\n+    rustc_driver::main()\n+}"}]}