{"sha": "5b6e714d05a0c96ade618256a67a9cb7f337f196", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNmU3MTRkMDVhMGM5NmFkZTYxODI1NmE2N2E5Y2I3ZjMzN2YxOTY=", "commit": {"author": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-07-26T04:45:09Z"}, "committer": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-07-26T04:45:09Z"}, "message": "Expose an RNG (the one used by our runtime) to Rust via std.", "tree": {"sha": "45406973ea3c0ffb1a9e070588f4ca5fc8c7744c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45406973ea3c0ffb1a9e070588f4ca5fc8c7744c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b6e714d05a0c96ade618256a67a9cb7f337f196", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b6e714d05a0c96ade618256a67a9cb7f337f196", "html_url": "https://github.com/rust-lang/rust/commit/5b6e714d05a0c96ade618256a67a9cb7f337f196", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b6e714d05a0c96ade618256a67a9cb7f337f196/comments", "author": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ef9e82f51de73e89759910fd1b45ce5ccc363b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ef9e82f51de73e89759910fd1b45ce5ccc363b3", "html_url": "https://github.com/rust-lang/rust/commit/7ef9e82f51de73e89759910fd1b45ce5ccc363b3"}], "stats": {"total": 139, "additions": 114, "deletions": 25}, "files": [{"sha": "638cba0af289f231f125181c9bc591b5e2271648", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b6e714d05a0c96ade618256a67a9cb7f337f196/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/5b6e714d05a0c96ade618256a67a9cb7f337f196/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=5b6e714d05a0c96ade618256a67a9cb7f337f196", "patch": "@@ -424,6 +424,7 @@ TEST_XFAILS_LLVM := $(addprefix test/run-pass/, \\\n                       lazy-and-or.rs \\\n                       lazy-init.rs \\\n                       lazychan.rs \\\n+                      lib-rand.rs \\\n                       linear-for-loop.rs \\\n                       list.rs \\\n                       many.rs \\"}, {"sha": "96dcbaf7d73f5406e0bbd918e117a3859ef8eafa", "filename": "src/lib/rand.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5b6e714d05a0c96ade618256a67a9cb7f337f196/src%2Flib%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b6e714d05a0c96ade618256a67a9cb7f337f196/src%2Flib%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Frand.rs?ref=5b6e714d05a0c96ade618256a67a9cb7f337f196", "patch": "@@ -0,0 +1,25 @@\n+/**\n+ * Bindings the runtime's random number generator (ISAAC).\n+ */\n+\n+native \"rust\" mod rustrt {\n+  type rctx;\n+  fn rand_new() -> rctx;\n+  fn rand_next(rctx c) -> u32;\n+  fn rand_free(rctx c);\n+}\n+\n+type rng = obj { fn next() -> u32; };\n+\n+fn mk_rng() -> rng {\n+  obj rt_rng(rustrt.rctx c) {\n+    fn next() -> u32 {\n+      ret rustrt.rand_next(c);\n+    }\n+    drop {\n+      rustrt.rand_free(c);\n+    }\n+  }\n+\n+  ret rt_rng(rustrt.rand_new());\n+}"}, {"sha": "8c956691f98d4c6537975e0cfbc92854c9b7ad62", "filename": "src/lib/std.rc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b6e714d05a0c96ade618256a67a9cb7f337f196/src%2Flib%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/5b6e714d05a0c96ade618256a67a9cb7f337f196/src%2Flib%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstd.rc?ref=5b6e714d05a0c96ade618256a67a9cb7f337f196", "patch": "@@ -28,6 +28,7 @@ auth _vec = unsafe;\n \n auth _int.next_power_of_two = unsafe;\n auth map.mk_hashmap = unsafe;\n+auth rand.mk_rng = unsafe;\n \n // Target-OS module.\n \n@@ -43,3 +44,4 @@ alt (target_os) {\n \n mod map;\n mod deque;\n+mod rand;"}, {"sha": "e8d2d67d3c7dc4c981d37e5e00dd7ae3ccde74b4", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5b6e714d05a0c96ade618256a67a9cb7f337f196/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5b6e714d05a0c96ade618256a67a9cb7f337f196/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=5b6e714d05a0c96ade618256a67a9cb7f337f196", "patch": "@@ -127,6 +127,31 @@ vec_len(rust_task *task, type_desc *ty, rust_vec *v)\n     return v->fill / ty->size;\n }\n \n+extern \"C\" CDECL void *\n+rand_new(rust_task *task)\n+{\n+    rust_dom *dom = task->dom;\n+    randctx *rctx = (randctx *) task->malloc(sizeof(randctx));\n+    if (!rctx) {\n+        task->fail(1);\n+        return NULL;\n+    }\n+    isaac_init(dom, rctx);\n+    return rctx;\n+}\n+\n+extern \"C\" CDECL size_t\n+rand_next(rust_task *task, randctx *rctx)\n+{\n+    return rand(rctx);\n+}\n+\n+extern \"C\" CDECL void\n+rand_free(rust_task *task, randctx *rctx)\n+{\n+    task->free(rctx);\n+}\n+\n //\n // Local Variables:\n // mode: C++"}, {"sha": "205084ff263c245b754eaa0c357e00cf737c9ab0", "filename": "src/rt/rust_dom.cpp", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5b6e714d05a0c96ade618256a67a9cb7f337f196/src%2Frt%2Frust_dom.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5b6e714d05a0c96ade618256a67a9cb7f337f196/src%2Frt%2Frust_dom.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_dom.cpp?ref=5b6e714d05a0c96ade618256a67a9cb7f337f196", "patch": "@@ -36,35 +36,12 @@ rust_dom::rust_dom(rust_srv *srv, rust_crate const *root_crate) :\n     rval(0)\n {\n     logptr(\"new dom\", (uintptr_t)this);\n-    memset(&rctx, 0, sizeof(rctx));\n-\n-#ifdef __WIN32__\n-    {\n-        HCRYPTPROV hProv;\n-        win32_require\n-            (_T(\"CryptAcquireContext\"),\n-             CryptAcquireContext(&hProv, NULL, NULL, PROV_RSA_FULL,\n-                                 CRYPT_VERIFYCONTEXT|CRYPT_SILENT));\n-        win32_require\n-            (_T(\"CryptGenRandom\"),\n-             CryptGenRandom(hProv, sizeof(rctx.randrsl),\n-                            (BYTE*)(&rctx.randrsl)));\n-        win32_require\n-            (_T(\"CryptReleaseContext\"),\n-             CryptReleaseContext(hProv, 0));\n-    }\n-#else\n-    int fd = open(\"/dev/urandom\", O_RDONLY);\n-    I(this, fd > 0);\n-    I(this, read(fd, (void*) &rctx.randrsl, sizeof(rctx.randrsl))\n-      == sizeof(rctx.randrsl));\n-    I(this, close(fd) == 0);\n+    isaac_init(this, &rctx);\n+#ifndef __WIN32__\n     pthread_attr_init(&attr);\n     pthread_attr_setstacksize(&attr, 1024 * 1024);\n     pthread_attr_setdetachstate(&attr, true);\n #endif\n-    randinit(&rctx, 1);\n-\n     root_task = new (this) rust_task(this, NULL);\n }\n "}, {"sha": "95010f17830c30f4c044592cc799417cbb2b962b", "filename": "src/rt/rust_util.h", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/5b6e714d05a0c96ade618256a67a9cb7f337f196/src%2Frt%2Frust_util.h", "raw_url": "https://github.com/rust-lang/rust/raw/5b6e714d05a0c96ade618256a67a9cb7f337f196/src%2Frt%2Frust_util.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_util.h?ref=5b6e714d05a0c96ade618256a67a9cb7f337f196", "patch": "@@ -117,6 +117,38 @@ next_power_of_two(size_t s)\n     return tmp + 1;\n }\n \n+// Initialization helper for ISAAC RNG\n+\n+static inline void\n+isaac_init(rust_dom *dom, randctx *rctx)\n+{\n+        memset(rctx, 0, sizeof(randctx));\n+\n+#ifdef __WIN32__\n+        {\n+            HCRYPTPROV hProv;\n+            win32_require\n+                (_T(\"CryptAcquireContext\"),\n+                 CryptAcquireContext(&hProv, NULL, NULL, PROV_RSA_FULL,\n+                                     CRYPT_VERIFYCONTEXT|CRYPT_SILENT));\n+            win32_require\n+                (_T(\"CryptGenRandom\"),\n+                 CryptGenRandom(hProv, sizeof(rctx->randrsl),\n+                                (BYTE*)(&rctx->randrsl)));\n+            win32_require\n+                (_T(\"CryptReleaseContext\"),\n+                 CryptReleaseContext(hProv, 0));\n+        }\n+#else\n+        int fd = open(\"/dev/urandom\", O_RDONLY);\n+        I(dom, fd > 0);\n+        I(dom, read(fd, (void*) &rctx->randrsl, sizeof(rctx->randrsl))\n+          == sizeof(rctx->randrsl));\n+        I(dom, close(fd) == 0);\n+#endif\n+        randinit(rctx, 1);\n+}\n+\n // Vectors (rust-user-code level).\n \n struct"}, {"sha": "df227f6632ca2f3a2661dc6357913d5dd9d66190", "filename": "src/test/run-pass/lib-rand.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5b6e714d05a0c96ade618256a67a9cb7f337f196/src%2Ftest%2Frun-pass%2Flib-rand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b6e714d05a0c96ade618256a67a9cb7f337f196/src%2Ftest%2Frun-pass%2Flib-rand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-rand.rs?ref=5b6e714d05a0c96ade618256a67a9cb7f337f196", "patch": "@@ -0,0 +1,27 @@\n+// -*- rust -*-\n+\n+use std;\n+import std.rand;\n+\n+fn main() {\n+  let rand.rng r1 = rand.mk_rng();\n+  log r1.next();\n+  log r1.next();\n+  {\n+    auto r2 = rand.mk_rng();\n+    log r1.next();\n+    log r2.next();\n+    log r1.next();\n+    log r1.next();\n+    log r2.next();\n+    log r2.next();\n+    log r1.next();\n+    log r1.next();\n+    log r1.next();\n+    log r2.next();\n+    log r2.next();\n+    log r2.next();\n+  }\n+  log r1.next();\n+  log r1.next();\n+}"}]}