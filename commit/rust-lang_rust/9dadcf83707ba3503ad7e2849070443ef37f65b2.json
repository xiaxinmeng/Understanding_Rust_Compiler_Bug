{"sha": "9dadcf83707ba3503ad7e2849070443ef37f65b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkYWRjZjgzNzA3YmEzNTAzYWQ3ZTI4NDkwNzA0NDNlZjM3ZjY1YjI=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-10-25T17:05:18Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-10-25T17:05:18Z"}, "message": "`warn` -> `debug` in collect", "tree": {"sha": "3c4d3a2972d508aa800a4add13175c7b42832c3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c4d3a2972d508aa800a4add13175c7b42832c3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dadcf83707ba3503ad7e2849070443ef37f65b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dadcf83707ba3503ad7e2849070443ef37f65b2", "html_url": "https://github.com/rust-lang/rust/commit/9dadcf83707ba3503ad7e2849070443ef37f65b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dadcf83707ba3503ad7e2849070443ef37f65b2/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17cc9b6256c95c31944591aec683884fead4e3b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/17cc9b6256c95c31944591aec683884fead4e3b6", "html_url": "https://github.com/rust-lang/rust/commit/17cc9b6256c95c31944591aec683884fead4e3b6"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "cde0faa8caca780f44d2d336b4220153095b7931", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9dadcf83707ba3503ad7e2849070443ef37f65b2/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dadcf83707ba3503ad7e2849070443ef37f65b2/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=9dadcf83707ba3503ad7e2849070443ef37f65b2", "patch": "@@ -2090,25 +2090,25 @@ fn const_evaluatable_predicates_of<'tcx>(\n     if let hir::Node::Item(item) = node {\n         if let hir::ItemKind::Impl { ref of_trait, ref self_ty, .. } = item.kind {\n             if let Some(of_trait) = of_trait {\n-                warn!(\"const_evaluatable_predicates_of({:?}): visit impl trait_ref\", def_id);\n+                debug!(\"const_evaluatable_predicates_of({:?}): visit impl trait_ref\", def_id);\n                 collector.visit_trait_ref(of_trait);\n             }\n \n-            warn!(\"const_evaluatable_predicates_of({:?}): visit_self_ty\", def_id);\n+            debug!(\"const_evaluatable_predicates_of({:?}): visit_self_ty\", def_id);\n             collector.visit_ty(self_ty);\n         }\n     }\n \n     if let Some(generics) = node.generics() {\n-        warn!(\"const_evaluatable_predicates_of({:?}): visit_generics\", def_id);\n+        debug!(\"const_evaluatable_predicates_of({:?}): visit_generics\", def_id);\n         collector.visit_generics(generics);\n     }\n \n     if let Some(fn_sig) = tcx.hir().fn_sig_by_hir_id(hir_id) {\n-        warn!(\"const_evaluatable_predicates_of({:?}): visit_fn_decl\", def_id);\n+        debug!(\"const_evaluatable_predicates_of({:?}): visit_fn_decl\", def_id);\n         collector.visit_fn_decl(fn_sig.decl);\n     }\n-    warn!(\"const_evaluatable_predicates_of({:?}) = {:?}\", def_id, collector.preds);\n+    debug!(\"const_evaluatable_predicates_of({:?}) = {:?}\", def_id, collector.preds);\n \n     collector.preds\n }"}]}