{"sha": "cc6a09009d5129f1221dc0e93c08c84967d1015e", "node_id": "C_kwDOAAsO6NoAKGNjNmEwOTAwOWQ1MTI5ZjEyMjFkYzBlOTNjMDhjODQ5NjdkMTAxNWU", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-06T20:01:43Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-12T20:10:12Z"}, "message": "Add long explanation for E0464\n\nThe test is copied from `src/test/ui/crate-loading/crateresolve1.rs` and\nits auxiliary tests. I added it to the `compile_fail` code example check\nexemption list since it's hard if not impossible to reproduce this error\nin a standalone code example.", "tree": {"sha": "8f549170fc64211ada6978859fc9a229657009c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f549170fc64211ada6978859fc9a229657009c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc6a09009d5129f1221dc0e93c08c84967d1015e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc6a09009d5129f1221dc0e93c08c84967d1015e", "html_url": "https://github.com/rust-lang/rust/commit/cc6a09009d5129f1221dc0e93c08c84967d1015e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc6a09009d5129f1221dc0e93c08c84967d1015e/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e56b6f98e34edcafe0d7691939c4c33302a1a5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e56b6f98e34edcafe0d7691939c4c33302a1a5c", "html_url": "https://github.com/rust-lang/rust/commit/2e56b6f98e34edcafe0d7691939c4c33302a1a5c"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "27b2bfbaf474417041b689b3f1f5cf34108a9b2c", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc6a09009d5129f1221dc0e93c08c84967d1015e/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc6a09009d5129f1221dc0e93c08c84967d1015e/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=cc6a09009d5129f1221dc0e93c08c84967d1015e", "patch": "@@ -237,6 +237,7 @@ E0455: include_str!(\"./error_codes/E0455.md\"),\n E0458: include_str!(\"./error_codes/E0458.md\"),\n E0459: include_str!(\"./error_codes/E0459.md\"),\n E0463: include_str!(\"./error_codes/E0463.md\"),\n+E0464: include_str!(\"./error_codes/E0464.md\"),\n E0466: include_str!(\"./error_codes/E0466.md\"),\n E0468: include_str!(\"./error_codes/E0468.md\"),\n E0469: include_str!(\"./error_codes/E0469.md\"),\n@@ -587,7 +588,6 @@ E0785: include_str!(\"./error_codes/E0785.md\"),\n     E0460, // found possibly newer version of crate `..`\n     E0461, // couldn't find crate `..` with expected target triple ..\n     E0462, // found staticlib `..` instead of rlib or dylib\n-    E0464, // multiple matching crates for `..`\n     E0465, // multiple .. candidates for `..` found\n //  E0467, removed\n //  E0470, removed"}, {"sha": "9108d856c9d7724f557b243130917c9bcca19cc5", "filename": "compiler/rustc_error_codes/src/error_codes/E0464.md", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cc6a09009d5129f1221dc0e93c08c84967d1015e/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0464.md", "raw_url": "https://github.com/rust-lang/rust/raw/cc6a09009d5129f1221dc0e93c08c84967d1015e/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0464.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0464.md?ref=cc6a09009d5129f1221dc0e93c08c84967d1015e", "patch": "@@ -0,0 +1,6 @@\n+The compiler found multiple library files with the requested crate name.\n+\n+This error can occur in several different cases -- for example, when using\n+`extern crate` or passing `--extern` options without crate paths. It can also be\n+caused by caching issues with the build directory, in which case `cargo clean`\n+may help."}, {"sha": "c071a9b4b6ac45239e144634860a025a8e8214da", "filename": "src/test/ui/crate-loading/crateresolve1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve1.rs?ref=cc6a09009d5129f1221dc0e93c08c84967d1015e", "patch": "@@ -6,6 +6,8 @@\n // normalize-stderr-test: \"\\\\\\?\\\\\" -> \"\"\n // normalize-stderr-test: \"libcrateresolve1-([123])\\.[a-z]+\" -> \"libcrateresolve1-$1.somelib\"\n \n+// NOTE: This test is duplicated at `src/test/ui/error-codes/E0464.rs`.\n+\n extern crate crateresolve1;\n //~^ ERROR multiple matching crates for `crateresolve1`\n "}, {"sha": "0d7538eafd8127ddef34779fd6c6cb6b8a8b278c", "filename": "src/test/ui/crate-loading/crateresolve1.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve1.stderr?ref=cc6a09009d5129f1221dc0e93c08c84967d1015e", "patch": "@@ -1,5 +1,5 @@\n error[E0464]: multiple matching crates for `crateresolve1`\n-  --> $DIR/crateresolve1.rs:9:1\n+  --> $DIR/crateresolve1.rs:11:1\n    |\n LL | extern crate crateresolve1;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -11,3 +11,4 @@ LL | extern crate crateresolve1;\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0464`."}, {"sha": "afd3702de7f73895b77052591bebf930fdbe16a7", "filename": "src/test/ui/crate-loading/crateresolve2.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-loading%2Fcrateresolve2.stderr?ref=cc6a09009d5129f1221dc0e93c08c84967d1015e", "patch": "@@ -11,3 +11,4 @@ LL | extern crate crateresolve2;\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0464`."}, {"sha": "831f32116a58dcf4a5af011f15619a71329e858a", "filename": "src/test/ui/error-codes/E0464.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Ferror-codes%2FE0464.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Ferror-codes%2FE0464.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0464.rs?ref=cc6a09009d5129f1221dc0e93c08c84967d1015e", "patch": "@@ -0,0 +1,15 @@\n+// aux-build:crateresolve1-1.rs\n+// aux-build:crateresolve1-2.rs\n+// aux-build:crateresolve1-3.rs\n+\n+// normalize-stderr-test: \"\\.nll/\" -> \"/\"\n+// normalize-stderr-test: \"\\\\\\?\\\\\" -> \"\"\n+// normalize-stderr-test: \"libcrateresolve1-([123])\\.[a-z]+\" -> \"libcrateresolve1-$1.somelib\"\n+\n+// NOTE: This test is duplicated from `src/test/ui/crate-loading/crateresolve1.rs`.\n+\n+extern crate crateresolve1;\n+//~^ ERROR multiple matching crates for `crateresolve1`\n+\n+fn main() {\n+}"}, {"sha": "3d950ddd28ee00428abbff31ff17f6119ca7f273", "filename": "src/test/ui/error-codes/E0464.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Ferror-codes%2FE0464.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Ferror-codes%2FE0464.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0464.stderr?ref=cc6a09009d5129f1221dc0e93c08c84967d1015e", "patch": "@@ -0,0 +1,14 @@\n+error[E0464]: multiple matching crates for `crateresolve1`\n+  --> $DIR/E0464.rs:11:1\n+   |\n+LL | extern crate crateresolve1;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: candidates:\n+           crate `crateresolve1`: $TEST_BUILD_DIR/error-codes/E0464/auxiliary/libcrateresolve1-1.somelib\n+           crate `crateresolve1`: $TEST_BUILD_DIR/error-codes/E0464/auxiliary/libcrateresolve1-2.somelib\n+           crate `crateresolve1`: $TEST_BUILD_DIR/error-codes/E0464/auxiliary/libcrateresolve1-3.somelib\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0464`."}, {"sha": "a00a19e46d519fbad8d1c876250fbedf73503b7b", "filename": "src/test/ui/error-codes/auxiliary/crateresolve1-1.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Ferror-codes%2Fauxiliary%2Fcrateresolve1-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Ferror-codes%2Fauxiliary%2Fcrateresolve1-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fauxiliary%2Fcrateresolve1-1.rs?ref=cc6a09009d5129f1221dc0e93c08c84967d1015e", "patch": "@@ -0,0 +1,5 @@\n+// compile-flags:-C extra-filename=-1\n+#![crate_name = \"crateresolve1\"]\n+#![crate_type = \"lib\"]\n+\n+pub fn f() -> isize { 10 }"}, {"sha": "71cc0a12ea37946301e39ceb594836edc93cec69", "filename": "src/test/ui/error-codes/auxiliary/crateresolve1-2.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Ferror-codes%2Fauxiliary%2Fcrateresolve1-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Ferror-codes%2Fauxiliary%2Fcrateresolve1-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fauxiliary%2Fcrateresolve1-2.rs?ref=cc6a09009d5129f1221dc0e93c08c84967d1015e", "patch": "@@ -0,0 +1,5 @@\n+// compile-flags:-C extra-filename=-2\n+#![crate_name = \"crateresolve1\"]\n+#![crate_type = \"lib\"]\n+\n+pub fn f() -> isize { 20 }"}, {"sha": "921687d4c3bffd199e3c73b0264a1c811e23eca7", "filename": "src/test/ui/error-codes/auxiliary/crateresolve1-3.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Ferror-codes%2Fauxiliary%2Fcrateresolve1-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftest%2Fui%2Ferror-codes%2Fauxiliary%2Fcrateresolve1-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fauxiliary%2Fcrateresolve1-3.rs?ref=cc6a09009d5129f1221dc0e93c08c84967d1015e", "patch": "@@ -0,0 +1,5 @@\n+// compile-flags:-C extra-filename=-3\n+#![crate_name = \"crateresolve1\"]\n+#![crate_type = \"lib\"]\n+\n+pub fn f() -> isize { 30 }"}, {"sha": "6d3e470bf43caac50206f10e5812097aaedb8d9d", "filename": "src/tools/tidy/src/error_codes_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc6a09009d5129f1221dc0e93c08c84967d1015e/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs?ref=cc6a09009d5129f1221dc0e93c08c84967d1015e", "patch": "@@ -15,7 +15,7 @@ const EXEMPTED_FROM_TEST: &[&str] = &[\n ];\n \n // Some error codes don't have any tests apparently...\n-const IGNORE_EXPLANATION_CHECK: &[&str] = &[\"E0570\", \"E0601\", \"E0602\", \"E0729\"];\n+const IGNORE_EXPLANATION_CHECK: &[&str] = &[\"E0464\", \"E0570\", \"E0601\", \"E0602\", \"E0729\"];\n \n // If the file path contains any of these, we don't want to try to extract error codes from it.\n //"}]}