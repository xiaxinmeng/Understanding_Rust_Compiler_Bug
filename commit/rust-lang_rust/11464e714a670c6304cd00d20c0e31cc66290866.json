{"sha": "11464e714a670c6304cd00d20c0e31cc66290866", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExNDY0ZTcxNGE2NzBjNjMwNGNkMDBkMjBjMGUzMWNjNjYyOTA4NjY=", "commit": {"author": {"name": "LooMaclin", "email": "loo.maclin@protonmail.com", "date": "2019-04-08T21:42:45Z"}, "committer": {"name": "LooMaclin", "email": "loo.maclin@protonmail.com", "date": "2019-04-08T21:42:45Z"}, "message": "Improve miri's error reporting in check_in_alloc", "tree": {"sha": "a44cf35d1179438e18c5fed4d6a8a1f1bc20663e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a44cf35d1179438e18c5fed4d6a8a1f1bc20663e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11464e714a670c6304cd00d20c0e31cc66290866", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11464e714a670c6304cd00d20c0e31cc66290866", "html_url": "https://github.com/rust-lang/rust/commit/11464e714a670c6304cd00d20c0e31cc66290866", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11464e714a670c6304cd00d20c0e31cc66290866/comments", "author": {"login": "LooMaclin", "id": 10957765, "node_id": "MDQ6VXNlcjEwOTU3NzY1", "avatar_url": "https://avatars.githubusercontent.com/u/10957765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LooMaclin", "html_url": "https://github.com/LooMaclin", "followers_url": "https://api.github.com/users/LooMaclin/followers", "following_url": "https://api.github.com/users/LooMaclin/following{/other_user}", "gists_url": "https://api.github.com/users/LooMaclin/gists{/gist_id}", "starred_url": "https://api.github.com/users/LooMaclin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LooMaclin/subscriptions", "organizations_url": "https://api.github.com/users/LooMaclin/orgs", "repos_url": "https://api.github.com/users/LooMaclin/repos", "events_url": "https://api.github.com/users/LooMaclin/events{/privacy}", "received_events_url": "https://api.github.com/users/LooMaclin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LooMaclin", "id": 10957765, "node_id": "MDQ6VXNlcjEwOTU3NzY1", "avatar_url": "https://avatars.githubusercontent.com/u/10957765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LooMaclin", "html_url": "https://github.com/LooMaclin", "followers_url": "https://api.github.com/users/LooMaclin/followers", "following_url": "https://api.github.com/users/LooMaclin/following{/other_user}", "gists_url": "https://api.github.com/users/LooMaclin/gists{/gist_id}", "starred_url": "https://api.github.com/users/LooMaclin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LooMaclin/subscriptions", "organizations_url": "https://api.github.com/users/LooMaclin/orgs", "repos_url": "https://api.github.com/users/LooMaclin/repos", "events_url": "https://api.github.com/users/LooMaclin/events{/privacy}", "received_events_url": "https://api.github.com/users/LooMaclin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5b6fab5768d3e2079c3a06e4206d3a199507be4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5b6fab5768d3e2079c3a06e4206d3a199507be4", "html_url": "https://github.com/rust-lang/rust/commit/e5b6fab5768d3e2079c3a06e4206d3a199507be4"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "3c7cded5ba604ae69d1bd0207c8110581e4d2421", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/11464e714a670c6304cd00d20c0e31cc66290866/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11464e714a670c6304cd00d20c0e31cc66290866/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=11464e714a670c6304cd00d20c0e31cc66290866", "patch": "@@ -252,7 +252,8 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n             Scalar::Ptr(ptr) => {\n                 // check this is not NULL -- which we can ensure only if this is in-bounds\n                 // of some (potentially dead) allocation.\n-                let align = self.check_bounds_ptr(ptr, InboundsCheck::MaybeDead, CheckInAllocMsg::NullPointer)?;\n+                let align = self.check_bounds_ptr(ptr, InboundsCheck::MaybeDead,\n+                                                  CheckInAllocMsg::NullPointer)?;\n                 (ptr.offset.bytes(), align)\n             }\n             Scalar::Bits { bits, size } => {"}]}