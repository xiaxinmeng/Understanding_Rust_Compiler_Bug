{"sha": "774ba83226d570d2ac4dd072515d3cbd08bd5b3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3NGJhODMyMjZkNTcwZDJhYzRkZDA3MjUxNWQzY2JkMDhiZDViM2U=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-30T04:36:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-30T04:36:52Z"}, "message": "Rollup merge of #81473 - sanxiyn:write-only-field, r=oli-obk\n\nWarn write-only fields\n\ncc `@Boscop's` example in #49256.", "tree": {"sha": "ab65ee274799b04f810e433cae76e375d37e6000", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab65ee274799b04f810e433cae76e375d37e6000"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/774ba83226d570d2ac4dd072515d3cbd08bd5b3e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgFOJkCRBK7hj4Ov3rIwAAdHIIAKynsbecseOcYI5+mJ9YYAHW\nuFjabea7ddnY3B/tnmsvkYuK4XIC6GhpdZQg1oSWtGlkAkRkn6ueSOQjU7KAtvOI\nYQUSapkh0LugfdJb886FZYvOiMSBTDGEaAogHF526Ag6sgpr/mqJRPJaqKm1WcOu\nWxETrUUHlBzLvVKVzVAD3hDdXTvFgAeCqYldyxIcm0MdClbCpUoP6yxfGC8Rd9Ck\nMDt120h4JRcRzRSxraKavA1rCVuczUp6zyhmDzQqZrS9UcZsQ3TQxhDZUPK1W0m7\nMEdXXcFtgWVVL0PmN6OAy510oAw/3tZB1jhW+EKZY5qAPK+PdYTbNukELsBX5Ws=\n=1kKb\n-----END PGP SIGNATURE-----\n", "payload": "tree ab65ee274799b04f810e433cae76e375d37e6000\nparent fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5\nparent 85ad773049536d7fed9a94ae0ac74f97135c8655\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1611981412 +0900\ncommitter GitHub <noreply@github.com> 1611981412 +0900\n\nRollup merge of #81473 - sanxiyn:write-only-field, r=oli-obk\n\nWarn write-only fields\n\ncc `@Boscop's` example in #49256.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/774ba83226d570d2ac4dd072515d3cbd08bd5b3e", "html_url": "https://github.com/rust-lang/rust/commit/774ba83226d570d2ac4dd072515d3cbd08bd5b3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/774ba83226d570d2ac4dd072515d3cbd08bd5b3e/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5", "html_url": "https://github.com/rust-lang/rust/commit/fe27dea4b5f3ae1fe95a16f2bd9c6428fdd116b5"}, {"sha": "85ad773049536d7fed9a94ae0ac74f97135c8655", "url": "https://api.github.com/repos/rust-lang/rust/commits/85ad773049536d7fed9a94ae0ac74f97135c8655", "html_url": "https://github.com/rust-lang/rust/commit/85ad773049536d7fed9a94ae0ac74f97135c8655"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "0d096a0556ba1f187b375f4719101f8021445d95", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/774ba83226d570d2ac4dd072515d3cbd08bd5b3e/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/774ba83226d570d2ac4dd072515d3cbd08bd5b3e/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=774ba83226d570d2ac4dd072515d3cbd08bd5b3e", "patch": "@@ -37,6 +37,15 @@ fn should_explore(tcx: TyCtxt<'_>, hir_id: hir::HirId) -> bool {\n     )\n }\n \n+fn base_expr<'a>(mut expr: &'a hir::Expr<'a>) -> &'a hir::Expr<'a> {\n+    loop {\n+        match expr.kind {\n+            hir::ExprKind::Field(base, ..) => expr = base,\n+            _ => return expr,\n+        }\n+    }\n+}\n+\n struct MarkSymbolVisitor<'tcx> {\n     worklist: Vec<hir::HirId>,\n     tcx: TyCtxt<'tcx>,\n@@ -263,6 +272,12 @@ impl<'tcx> Visitor<'tcx> for MarkSymbolVisitor<'tcx> {\n             hir::ExprKind::MethodCall(..) => {\n                 self.lookup_and_handle_method(expr.hir_id);\n             }\n+            hir::ExprKind::Assign(ref left, ref right, ..) => {\n+                // Ignore write to field\n+                self.visit_expr(base_expr(left));\n+                self.visit_expr(right);\n+                return;\n+            }\n             hir::ExprKind::Field(ref lhs, ..) => {\n                 self.handle_field_access(&lhs, expr.hir_id);\n             }"}, {"sha": "dfa3a561ec7ee1b9968635620b200094a89407a6", "filename": "src/test/ui/borrowck/borrowck-assign-to-subfield.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/774ba83226d570d2ac4dd072515d3cbd08bd5b3e/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-assign-to-subfield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/774ba83226d570d2ac4dd072515d3cbd08bd5b3e/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-assign-to-subfield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-assign-to-subfield.rs?ref=774ba83226d570d2ac4dd072515d3cbd08bd5b3e", "patch": "@@ -1,5 +1,6 @@\n // run-pass\n // pretty-expanded FIXME #23616\n+#![allow(dead_code)]\n \n pub fn main() {\n     struct A {"}, {"sha": "78cfcfda8f97176cf47c9df0d727ee63b368dcbc", "filename": "src/test/ui/lint/dead-code/write-only-field.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/774ba83226d570d2ac4dd072515d3cbd08bd5b3e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/774ba83226d570d2ac4dd072515d3cbd08bd5b3e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.rs?ref=774ba83226d570d2ac4dd072515d3cbd08bd5b3e", "patch": "@@ -0,0 +1,20 @@\n+#![deny(dead_code)]\n+\n+struct S {\n+    f: i32, //~ ERROR: field is never read\n+    sub: Sub, //~ ERROR: field is never read\n+}\n+\n+struct Sub {\n+    f: i32, //~ ERROR: field is never read\n+}\n+\n+fn field_write(s: &mut S) {\n+    s.f = 1;\n+    s.sub.f = 2;\n+}\n+\n+fn main() {\n+    let mut s = S { f: 0, sub: Sub { f: 0 } };\n+    field_write(&mut s);\n+}"}, {"sha": "70d2149665b203720e5512a046526cbb9b90de11", "filename": "src/test/ui/lint/dead-code/write-only-field.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/774ba83226d570d2ac4dd072515d3cbd08bd5b3e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/774ba83226d570d2ac4dd072515d3cbd08bd5b3e/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.stderr?ref=774ba83226d570d2ac4dd072515d3cbd08bd5b3e", "patch": "@@ -0,0 +1,26 @@\n+error: field is never read: `f`\n+  --> $DIR/write-only-field.rs:4:5\n+   |\n+LL |     f: i32,\n+   |     ^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/write-only-field.rs:1:9\n+   |\n+LL | #![deny(dead_code)]\n+   |         ^^^^^^^^^\n+\n+error: field is never read: `sub`\n+  --> $DIR/write-only-field.rs:5:5\n+   |\n+LL |     sub: Sub,\n+   |     ^^^^^^^^\n+\n+error: field is never read: `f`\n+  --> $DIR/write-only-field.rs:9:5\n+   |\n+LL |     f: i32,\n+   |     ^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}]}