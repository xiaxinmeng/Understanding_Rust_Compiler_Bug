{"sha": "b2f455065401eeb65250815e8ce566239ca69217", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyZjQ1NTA2NTQwMWVlYjY1MjUwODE1ZThjZTU2NjIzOWNhNjkyMTc=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-10-15T14:25:14Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-10-15T14:25:14Z"}, "message": "Fix type complexity lint", "tree": {"sha": "10df13a3e25bba1208c651abf04eea34da7aceac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10df13a3e25bba1208c651abf04eea34da7aceac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2f455065401eeb65250815e8ce566239ca69217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2f455065401eeb65250815e8ce566239ca69217", "html_url": "https://github.com/rust-lang/rust/commit/b2f455065401eeb65250815e8ce566239ca69217", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2f455065401eeb65250815e8ce566239ca69217/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7270adbd74b4e8efc1e985859412292593b476c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7270adbd74b4e8efc1e985859412292593b476c", "html_url": "https://github.com/rust-lang/rust/commit/a7270adbd74b4e8efc1e985859412292593b476c"}], "stats": {"total": 11, "additions": 1, "deletions": 10}, "files": [{"sha": "93962586bc6b21d354f2baec4d565dc641eabe2e", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b2f455065401eeb65250815e8ce566239ca69217/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2f455065401eeb65250815e8ce566239ca69217/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=b2f455065401eeb65250815e8ce566239ca69217", "patch": "@@ -280,18 +280,10 @@ impl LateLintPass for TypeComplexityPass {\n     }\n \n     fn check_struct_field(&mut self, cx: &LateContext, field: &StructField) {\n+        // enum variants are also struct fields now\n         check_type(cx, &field.node.ty);\n     }\n \n-    fn check_variant(&mut self, cx: &LateContext, var: &Variant, _: &Generics) {\n-        // StructVariant is covered by check_struct_field\n-        if let VariantData::Tuple(ref args, _) = *var.node.data {\n-            for arg in args {\n-                check_type(cx, &arg.node.ty);\n-            }\n-        }\n-    }\n-\n     fn check_item(&mut self, cx: &LateContext, item: &Item) {\n         match item.node {\n             ItemStatic(ref ty, _, _) |"}, {"sha": "995132ba88c9420961cd2d2cbaa33e8008110dfa", "filename": "tests/compile-fail/complex_types.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2f455065401eeb65250815e8ce566239ca69217/tests%2Fcompile-fail%2Fcomplex_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2f455065401eeb65250815e8ce566239ca69217/tests%2Fcompile-fail%2Fcomplex_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fcomplex_types.rs?ref=b2f455065401eeb65250815e8ce566239ca69217", "patch": "@@ -17,7 +17,6 @@ struct TS(Vec<Vec<Box<(u32, u32, u32, u32)>>>); //~ERROR very complex type\n \n enum E {\n     V1(Vec<Vec<Box<(u32, u32, u32, u32)>>>), //~ERROR very complex type\n-    //~^ERROR very complex type\n     V2 { f: Vec<Vec<Box<(u32, u32, u32, u32)>>> }, //~ERROR very complex type\n }\n "}]}