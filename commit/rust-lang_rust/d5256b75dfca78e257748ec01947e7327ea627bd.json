{"sha": "d5256b75dfca78e257748ec01947e7327ea627bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1MjU2Yjc1ZGZjYTc4ZTI1Nzc0OGVjMDE5NDdlNzMyN2VhNjI3YmQ=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-07-25T01:30:10Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-07-25T01:30:10Z"}, "message": "Update comment and do suggest", "tree": {"sha": "fb87e5e201757ae45aea9c9ac013736a0ac594cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb87e5e201757ae45aea9c9ac013736a0ac594cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5256b75dfca78e257748ec01947e7327ea627bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5256b75dfca78e257748ec01947e7327ea627bd", "html_url": "https://github.com/rust-lang/rust/commit/d5256b75dfca78e257748ec01947e7327ea627bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5256b75dfca78e257748ec01947e7327ea627bd/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40c0339cf689f74b62b90297f21c4176af1193fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/40c0339cf689f74b62b90297f21c4176af1193fc", "html_url": "https://github.com/rust-lang/rust/commit/40c0339cf689f74b62b90297f21c4176af1193fc"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "8300f98fb1cd5bee246364c6d36850b73a8deadc", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d5256b75dfca78e257748ec01947e7327ea627bd/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5256b75dfca78e257748ec01947e7327ea627bd/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=d5256b75dfca78e257748ec01947e7327ea627bd", "patch": "@@ -1051,8 +1051,8 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             err.span_label(found_span, format!(\"takes {}\", found_str));\n \n             // Suggest to take and ignore the arguments with expected_args_length `_`s if\n-            // found arguments is empty(Suppose the user just wants to ignore args in this case).\n-            // like `|_, _|` for closure with 2 expected args.\n+            // found arguments is empty (assume the user just wants to ignore args in this case).\n+            // For example, if `expected_args_length` is 2, suggest `|_, _|`.\n             if found_args.is_empty() && is_closure {\n                 let mut underscores = \"_\".repeat(expected_args.len())\n                                       .split(\"\")\n@@ -1061,12 +1061,13 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                                       .join(\", \");\n                 err.span_suggestion_with_applicability(\n                     found_span,\n-                    &format!(\"change the closure to take and ignore the expected argument{}\",\n-                            if expected_args.len() < 2 {\n-                                \"\"\n-                            } else {\n-                                \"s\"\n-                            }\n+                    &format!(\n+                        \"consider changing the closure to take and ignore the expected argument{}\",\n+                        if expected_args.len() < 2 {\n+                            \"\"\n+                        } else {\n+                            \"s\"\n+                        }\n                     ),\n                     format!(\"|{}|\", underscores),\n                     Applicability::MachineApplicable,"}]}