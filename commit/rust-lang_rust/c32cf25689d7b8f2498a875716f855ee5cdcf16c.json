{"sha": "c32cf25689d7b8f2498a875716f855ee5cdcf16c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMmNmMjU2ODlkN2I4ZjI0OThhODc1NzE2Zjg1NWVlNWNkY2YxNmM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-20T12:39:23Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-21T13:49:20Z"}, "message": "Rename read_local_of_frame to access_local", "tree": {"sha": "029a40c2dd6500ed4448289dfdb795b2d40396dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/029a40c2dd6500ed4448289dfdb795b2d40396dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c32cf25689d7b8f2498a875716f855ee5cdcf16c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c32cf25689d7b8f2498a875716f855ee5cdcf16c", "html_url": "https://github.com/rust-lang/rust/commit/c32cf25689d7b8f2498a875716f855ee5cdcf16c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c32cf25689d7b8f2498a875716f855ee5cdcf16c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f46e3ba308ffae06a6fdc7f6e2ecd1108519f021", "url": "https://api.github.com/repos/rust-lang/rust/commits/f46e3ba308ffae06a6fdc7f6e2ecd1108519f021", "html_url": "https://github.com/rust-lang/rust/commit/f46e3ba308ffae06a6fdc7f6e2ecd1108519f021"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "744856c805c4c652419238d1bb1ff3f17b0fc3d7", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c32cf25689d7b8f2498a875716f855ee5cdcf16c/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c32cf25689d7b8f2498a875716f855ee5cdcf16c/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=c32cf25689d7b8f2498a875716f855ee5cdcf16c", "patch": "@@ -572,7 +572,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n     }\n \n     /// This is used by [priroda](https://github.com/oli-obk/priroda) to get an OpTy from a local\n-    pub fn read_local_of_frame(\n+    pub fn access_local(\n         &self,\n         frame: &super::Frame<'mir, 'tcx, M::PointerTag>,\n         local: mir::Local,\n@@ -595,7 +595,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n         use rustc::mir::Place::*;\n         let op = match *mir_place {\n             Local(mir::RETURN_PLACE) => return err!(ReadFromReturnPointer),\n-            Local(local) => self.read_local_of_frame(self.frame(), local, layout)?,\n+            Local(local) => self.access_local(self.frame(), local, layout)?,\n \n             Projection(ref proj) => {\n                 let op = self.eval_place_to_op(&proj.base, None)?;"}]}