{"sha": "94b712413b72db3e34066c82357040897233077f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0YjcxMjQxM2I3MmRiM2UzNDA2NmM4MjM1NzA0MDg5NzIzMzA3N2Y=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-12-03T13:04:51Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-12-21T18:21:39Z"}, "message": "Make err_count thread safe", "tree": {"sha": "8f215793d15241555a97d4e5a447333522f31015", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f215793d15241555a97d4e5a447333522f31015"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94b712413b72db3e34066c82357040897233077f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94b712413b72db3e34066c82357040897233077f", "html_url": "https://github.com/rust-lang/rust/commit/94b712413b72db3e34066c82357040897233077f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94b712413b72db3e34066c82357040897233077f/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70fd306f3cced934c0cf8fc2259920b844a7354f", "url": "https://api.github.com/repos/rust-lang/rust/commits/70fd306f3cced934c0cf8fc2259920b844a7354f", "html_url": "https://github.com/rust-lang/rust/commit/70fd306f3cced934c0cf8fc2259920b844a7354f"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "2ac49958d3c5317990ed5d95c4174be91e6746de", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/94b712413b72db3e34066c82357040897233077f/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94b712413b72db3e34066c82357040897233077f/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=94b712413b72db3e34066c82357040897233077f", "patch": "@@ -42,6 +42,8 @@ use std::cell::{RefCell, Cell};\n use std::mem;\n use std::rc::Rc;\n use std::{error, fmt};\n+use std::sync::atomic::AtomicUsize;\n+use std::sync::atomic::Ordering::SeqCst;\n \n mod diagnostic;\n mod diagnostic_builder;\n@@ -236,7 +238,7 @@ pub use diagnostic_builder::DiagnosticBuilder;\n pub struct Handler {\n     pub flags: HandlerFlags,\n \n-    err_count: Cell<usize>,\n+    err_count: AtomicUsize,\n     emitter: RefCell<Box<Emitter>>,\n     continue_after_error: Cell<bool>,\n     delayed_span_bug: RefCell<Option<Diagnostic>>,\n@@ -295,7 +297,7 @@ impl Handler {\n     pub fn with_emitter_and_flags(e: Box<Emitter>, flags: HandlerFlags) -> Handler {\n         Handler {\n             flags,\n-            err_count: Cell::new(0),\n+            err_count: AtomicUsize::new(0),\n             emitter: RefCell::new(e),\n             continue_after_error: Cell::new(true),\n             delayed_span_bug: RefCell::new(None),\n@@ -311,7 +313,7 @@ impl Handler {\n     // NOTE: DO NOT call this function from rustc, as it relies on `err_count` being non-zero\n     // if an error happened to avoid ICEs. This function should only be called from tools.\n     pub fn reset_err_count(&self) {\n-        self.err_count.set(0);\n+        self.err_count.store(0, SeqCst);\n     }\n \n     pub fn struct_dummy<'a>(&'a self) -> DiagnosticBuilder<'a> {\n@@ -507,19 +509,19 @@ impl Handler {\n \n     fn bump_err_count(&self) {\n         self.panic_if_treat_err_as_bug();\n-        self.err_count.set(self.err_count.get() + 1);\n+        self.err_count.fetch_add(1, SeqCst);\n     }\n \n     pub fn err_count(&self) -> usize {\n-        self.err_count.get()\n+        self.err_count.load(SeqCst)\n     }\n \n     pub fn has_errors(&self) -> bool {\n-        self.err_count.get() > 0\n+        self.err_count() > 0\n     }\n     pub fn abort_if_errors(&self) {\n         let s;\n-        match self.err_count.get() {\n+        match self.err_count() {\n             0 => {\n                 if let Some(bug) = self.delayed_span_bug.borrow_mut().take() {\n                     DiagnosticBuilder::new_diagnostic(self, bug).emit();\n@@ -528,7 +530,7 @@ impl Handler {\n             }\n             1 => s = \"aborting due to previous error\".to_string(),\n             _ => {\n-                s = format!(\"aborting due to {} previous errors\", self.err_count.get());\n+                s = format!(\"aborting due to {} previous errors\", self.err_count());\n             }\n         }\n "}]}