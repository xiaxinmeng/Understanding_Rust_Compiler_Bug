{"sha": "6505794bc64d1dc2beacbcec3ba351c834cbf47f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1MDU3OTRiYzY0ZDFkYzJiZWFjYmNlYzNiYTM1MWM4MzRjYmY0N2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-14T15:56:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-14T15:56:58Z"}, "message": "Auto merge of #3960 - phansch:fix_except, r=flip1995\n\nRemove `except` in suspicious_else_formatting\n\n96c34e85 contains the fix:\n\nThis was causing two different ICEs in #3741. The first was fixed in #3925.\n\nThe second one is fixed with this commit: We just don't `expect` anymore.\nIf the snippet doesn't contain an `else`, we stop emitting the lint because\nit's not a suspiciously formatted else anyway.\n\nUnfortunately I wasn't able to provide a minimal test case, but I think it's\nfine since it's just ignoring the `None` case now.\n\nAnd ad27e3ff cleans up the lint code to use `if_chain`.\n\nFixes #3741 once more.", "tree": {"sha": "bd00e613b4a36a4fd08b1cf86f2863406ef9d2c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd00e613b4a36a4fd08b1cf86f2863406ef9d2c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6505794bc64d1dc2beacbcec3ba351c834cbf47f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6505794bc64d1dc2beacbcec3ba351c834cbf47f", "html_url": "https://github.com/rust-lang/rust/commit/6505794bc64d1dc2beacbcec3ba351c834cbf47f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6505794bc64d1dc2beacbcec3ba351c834cbf47f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "422ae77caebc3a507440bae116683cff923b5ad4", "url": "https://api.github.com/repos/rust-lang/rust/commits/422ae77caebc3a507440bae116683cff923b5ad4", "html_url": "https://github.com/rust-lang/rust/commit/422ae77caebc3a507440bae116683cff923b5ad4"}, {"sha": "289a9af8014806aae79547645e4055f867b0cd09", "url": "https://api.github.com/repos/rust-lang/rust/commits/289a9af8014806aae79547645e4055f867b0cd09", "html_url": "https://github.com/rust-lang/rust/commit/289a9af8014806aae79547645e4055f867b0cd09"}], "stats": {"total": 64, "additions": 30, "deletions": 34}, "files": [{"sha": "542392c8b29baa25bba00039a0ee8459c2d86d24", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 30, "deletions": 34, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/6505794bc64d1dc2beacbcec3ba351c834cbf47f/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6505794bc64d1dc2beacbcec3ba351c834cbf47f/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=6505794bc64d1dc2beacbcec3ba351c834cbf47f", "patch": "@@ -1,4 +1,5 @@\n use crate::utils::{differing_macro_contexts, in_macro, snippet_opt, span_note_and_lint};\n+use if_chain::if_chain;\n use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_tool_lint, lint_array};\n use syntax::ast;\n@@ -146,44 +147,39 @@ fn check_assign(cx: &EarlyContext<'_>, expr: &ast::Expr) {\n \n /// Implementation of the `SUSPICIOUS_ELSE_FORMATTING` lint for weird `else`.\n fn check_else(cx: &EarlyContext<'_>, expr: &ast::Expr) {\n-    if let Some((then, &Some(ref else_))) = unsugar_if(expr) {\n-        if (is_block(else_) || unsugar_if(else_).is_some())\n-            && !differing_macro_contexts(then.span, else_.span)\n-            && !in_macro(then.span)\n-            && !in_external_macro(cx.sess, expr.span)\n-        {\n-            // workaround for rust-lang/rust#43081\n-            if expr.span.lo().0 == 0 && expr.span.hi().0 == 0 {\n-                return;\n-            }\n+    if_chain! {\n+        if let Some((then, &Some(ref else_))) = unsugar_if(expr);\n+        if is_block(else_) || unsugar_if(else_).is_some();\n+        if !differing_macro_contexts(then.span, else_.span);\n+        if !in_macro(then.span) && !in_external_macro(cx.sess, expr.span);\n \n-            // this will be a span from the closing \u2018}\u2019 of the \u201cthen\u201d block (excluding) to\n-            // the\n-            // \u201cif\u201d of the \u201celse if\u201d block (excluding)\n-            let else_span = then.span.between(else_.span);\n+        // workaround for rust-lang/rust#43081\n+        if expr.span.lo().0 != 0 && expr.span.hi().0 != 0;\n \n-            // the snippet should look like \" else \\n    \" with maybe comments anywhere\n-            // it\u2019s bad when there is a \u2018\\n\u2019 after the \u201celse\u201d\n-            if let Some(else_snippet) = snippet_opt(cx, else_span) {\n-                let else_pos = else_snippet.find(\"else\").expect(\"there must be a `else` here\");\n+        // this will be a span from the closing \u2018}\u2019 of the \u201cthen\u201d block (excluding) to\n+        // the \u201cif\u201d of the \u201celse if\u201d block (excluding)\n+        let else_span = then.span.between(else_.span);\n \n-                if else_snippet[else_pos..].contains('\\n') {\n-                    let else_desc = if unsugar_if(else_).is_some() { \"if\" } else { \"{..}\" };\n+        // the snippet should look like \" else \\n    \" with maybe comments anywhere\n+        // it\u2019s bad when there is a \u2018\\n\u2019 after the \u201celse\u201d\n+        if let Some(else_snippet) = snippet_opt(cx, else_span);\n+        if let Some(else_pos) = else_snippet.find(\"else\");\n+        if else_snippet[else_pos..].contains('\\n');\n+        let else_desc = if unsugar_if(else_).is_some() { \"if\" } else { \"{..}\" };\n \n-                    span_note_and_lint(\n-                        cx,\n-                        SUSPICIOUS_ELSE_FORMATTING,\n-                        else_span,\n-                        &format!(\"this is an `else {}` but the formatting might hide it\", else_desc),\n-                        else_span,\n-                        &format!(\n-                            \"to remove this lint, remove the `else` or remove the new line between \\\n-                             `else` and `{}`\",\n-                            else_desc,\n-                        ),\n-                    );\n-                }\n-            }\n+        then {\n+            span_note_and_lint(\n+                cx,\n+                SUSPICIOUS_ELSE_FORMATTING,\n+                else_span,\n+                &format!(\"this is an `else {}` but the formatting might hide it\", else_desc),\n+                else_span,\n+                &format!(\n+                    \"to remove this lint, remove the `else` or remove the new line between \\\n+                     `else` and `{}`\",\n+                    else_desc,\n+                ),\n+            );\n         }\n     }\n }"}]}