{"sha": "db8fa0edfa055b680fa49e8e8e0a6bd118934359", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiOGZhMGVkZmEwNTViNjgwZmE0OWU4ZThlMGE2YmQxMTg5MzQzNTk=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-10-11T11:40:16Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-11-12T16:07:02Z"}, "message": "Inline codegen_mono_items and outline predefine_mono_items", "tree": {"sha": "7d417ba8659a14edde0d48837351853e9d221e4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d417ba8659a14edde0d48837351853e9d221e4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db8fa0edfa055b680fa49e8e8e0a6bd118934359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db8fa0edfa055b680fa49e8e8e0a6bd118934359", "html_url": "https://github.com/rust-lang/rust/commit/db8fa0edfa055b680fa49e8e8e0a6bd118934359", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db8fa0edfa055b680fa49e8e8e0a6bd118934359/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a4f37c1faa0deca1c35bf276f0b7d9bfa811d81", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a4f37c1faa0deca1c35bf276f0b7d9bfa811d81", "html_url": "https://github.com/rust-lang/rust/commit/0a4f37c1faa0deca1c35bf276f0b7d9bfa811d81"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "f4e8f910d240387ca38729beb55d3268c09ba69e", "filename": "src/driver/aot.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db8fa0edfa055b680fa49e8e8e0a6bd118934359/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db8fa0edfa055b680fa49e8e8e0a6bd118934359/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=db8fa0edfa055b680fa49e8e8e0a6bd118934359", "patch": "@@ -145,7 +145,11 @@ fn module_codegen(tcx: TyCtxt<'_>, cgu_name: rustc_span::Symbol) -> ModuleCodege\n     }\n \n     let mut cx = crate::CodegenCx::new(tcx, module, tcx.sess.opts.debuginfo != DebugInfo::None);\n-    super::codegen_mono_items(&mut cx, mono_items);\n+    super::predefine_mono_items(&mut cx, &mono_items);\n+    for (mono_item, (linkage, visibility)) in mono_items {\n+        let linkage = crate::linkage::get_clif_linkage(mono_item, linkage, visibility);\n+        super::codegen_mono_item(&mut cx, mono_item, linkage);\n+    }\n     let (mut module, global_asm, debug, mut unwind_context) =\n         tcx.sess.time(\"finalize CodegenCx\", || cx.finalize());\n     crate::main_shim::maybe_create_entry_wrapper(tcx, &mut module, &mut unwind_context, false);"}, {"sha": "5a844841c2ce5b0649723fccc8e1c06e3f8a3b09", "filename": "src/driver/jit.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db8fa0edfa055b680fa49e8e8e0a6bd118934359/src%2Fdriver%2Fjit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db8fa0edfa055b680fa49e8e8e0a6bd118934359/src%2Fdriver%2Fjit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fjit.rs?ref=db8fa0edfa055b680fa49e8e8e0a6bd118934359", "patch": "@@ -70,7 +70,11 @@ pub(super) fn run_jit(tcx: TyCtxt<'_>) -> ! {\n \n     let (mut jit_module, global_asm, _debug, mut unwind_context) =\n         super::time(tcx, \"codegen mono items\", || {\n-            super::codegen_mono_items(&mut cx, mono_items);\n+            super::predefine_mono_items(&mut cx, &mono_items);\n+            for (mono_item, (linkage, visibility)) in mono_items {\n+                let linkage = crate::linkage::get_clif_linkage(mono_item, linkage, visibility);\n+                super::codegen_mono_item(&mut cx, mono_item, linkage);\n+            }\n             tcx.sess.time(\"finalize CodegenCx\", || cx.finalize())\n         });\n     if !global_asm.is_empty() {"}, {"sha": "4aed353eb1cd7d947bb056cf2b6b0b45c0f15c43", "filename": "src/driver/mod.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/db8fa0edfa055b680fa49e8e8e0a6bd118934359/src%2Fdriver%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db8fa0edfa055b680fa49e8e8e0a6bd118934359/src%2Fdriver%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fmod.rs?ref=db8fa0edfa055b680fa49e8e8e0a6bd118934359", "patch": "@@ -1,4 +1,4 @@\n-//! Drivers are responsible for calling [`codegen_mono_items`] and performing any further actions\n+//! Drivers are responsible for calling [`codegen_mono_item`] and performing any further actions\n //! like JIT executing or writing object files.\n \n use std::any::Any;\n@@ -40,12 +40,12 @@ pub(crate) fn codegen_crate(\n     aot::run_aot(tcx, metadata, need_metadata_module)\n }\n \n-fn codegen_mono_items<'tcx>(\n+fn predefine_mono_items<'tcx>(\n     cx: &mut crate::CodegenCx<'tcx, impl Module>,\n-    mono_items: Vec<(MonoItem<'tcx>, (RLinkage, Visibility))>,\n+    mono_items: &[(MonoItem<'tcx>, (RLinkage, Visibility))],\n ) {\n     cx.tcx.sess.time(\"predefine functions\", || {\n-        for &(mono_item, (linkage, visibility)) in &mono_items {\n+        for &(mono_item, (linkage, visibility)) in mono_items {\n             match mono_item {\n                 MonoItem::Fn(instance) => {\n                     let (name, sig) = get_function_name_and_sig(\n@@ -61,11 +61,6 @@ fn codegen_mono_items<'tcx>(\n             }\n         }\n     });\n-\n-    for (mono_item, (linkage, visibility)) in mono_items {\n-        let linkage = crate::linkage::get_clif_linkage(mono_item, linkage, visibility);\n-        codegen_mono_item(cx, mono_item, linkage);\n-    }\n }\n \n fn codegen_mono_item<'tcx, M: Module>("}]}