{"sha": "d1ae3a4c3b331f8734690aac3115689f310a7a29", "node_id": "C_kwDOAAsO6NoAKGQxYWUzYTRjM2IzMzFmODczNDY5MGFhYzMxMTU2ODlmMzEwYTdhMjk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-02T21:39:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-02T21:39:06Z"}, "message": "Rollup merge of #97645 - lcnr:derived-impl-debug, r=cjgillot\n\ndon't use a `span_note` for ignored impls\n\nSearching for the `derive` isn't too difficult as it's right above the field definition.\n\nBy using a span these errors are a lot more verbose than they should be, which is especially annoying as one can end up with a lot of `dead_code` warnings.", "tree": {"sha": "82f89e49eabe9ca65b76966e28a8377936aaaaab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82f89e49eabe9ca65b76966e28a8377936aaaaab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1ae3a4c3b331f8734690aac3115689f310a7a29", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJimS36CRBK7hj4Ov3rIwAAjUsIAE/DnI5HPUyV/d2ax5NkhmMM\nQHcuZ8b8BRVZCJPTo0+7iDxK557HzAYFIgREyMncsSvvKprun6EPVvlXEtUFANYF\nQPW+9gpF6depWiaEIOM1wz4xjXrYMjsf9OS3USW7ZlO+Mg3DnkeT77D/x+47/9RV\n7QjgbTVtwJLNxhbJE+dyXwC5WhmzQKqyUh2giWjTuJ0cGiFEGzMl8HJkRMlBuqAH\nG8EjN20Pn6mExfrhOzhNEtEzRlPJT/CKdBK9iNdw7BfvcO0P4tmsFropTvPrIt1t\ns/fyz1q4E3ksMiivHjqQOQLqdIUBOgJB7e9IWkEgQioHrDtEM+JOvfT3+a7AdIw=\n=Eks8\n-----END PGP SIGNATURE-----\n", "payload": "tree 82f89e49eabe9ca65b76966e28a8377936aaaaab\nparent 0e33e97fc742315bf8dd6a3bc2f3616935f73e68\nparent d7645f4245518b9d1e216c461f232caea1dcd3f7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1654205946 +0200\ncommitter GitHub <noreply@github.com> 1654205946 +0200\n\nRollup merge of #97645 - lcnr:derived-impl-debug, r=cjgillot\n\ndon't use a `span_note` for ignored impls\n\nSearching for the `derive` isn't too difficult as it's right above the field definition.\n\nBy using a span these errors are a lot more verbose than they should be, which is especially annoying as one can end up with a lot of `dead_code` warnings.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1ae3a4c3b331f8734690aac3115689f310a7a29", "html_url": "https://github.com/rust-lang/rust/commit/d1ae3a4c3b331f8734690aac3115689f310a7a29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1ae3a4c3b331f8734690aac3115689f310a7a29/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e33e97fc742315bf8dd6a3bc2f3616935f73e68", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e33e97fc742315bf8dd6a3bc2f3616935f73e68", "html_url": "https://github.com/rust-lang/rust/commit/0e33e97fc742315bf8dd6a3bc2f3616935f73e68"}, {"sha": "d7645f4245518b9d1e216c461f232caea1dcd3f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7645f4245518b9d1e216c461f232caea1dcd3f7", "html_url": "https://github.com/rust-lang/rust/commit/d7645f4245518b9d1e216c461f232caea1dcd3f7"}], "stats": {"total": 41, "additions": 6, "deletions": 35}, "files": [{"sha": "519fb7ea2640a5b19d874609a41343dcf7465558", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d1ae3a4c3b331f8734690aac3115689f310a7a29/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1ae3a4c3b331f8734690aac3115689f310a7a29/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=d1ae3a4c3b331f8734690aac3115689f310a7a29", "patch": "@@ -722,11 +722,7 @@ impl<'tcx> DeadVisitor<'tcx> {\n                         traits_str,\n                         is_are\n                     );\n-                    let multispan = ign_traits\n-                        .iter()\n-                        .map(|(_, impl_id)| self.tcx.def_span(*impl_id))\n-                        .collect::<Vec<_>>();\n-                    err.span_note(multispan, &msg);\n+                    err.note(&msg);\n                 }\n                 err.emit();\n             });"}, {"sha": "58aaf978dc7d675cad5fdbf6df75ac013e298a60", "filename": "src/test/ui/derive-uninhabited-enum-38885.stderr", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d1ae3a4c3b331f8734690aac3115689f310a7a29/src%2Ftest%2Fui%2Fderive-uninhabited-enum-38885.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d1ae3a4c3b331f8734690aac3115689f310a7a29/src%2Ftest%2Fui%2Fderive-uninhabited-enum-38885.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderive-uninhabited-enum-38885.stderr?ref=d1ae3a4c3b331f8734690aac3115689f310a7a29", "patch": "@@ -5,12 +5,7 @@ LL |     Void(Void),\n    |     ^^^^^^^^^^\n    |\n    = note: `-W dead-code` implied by `-W unused`\n-note: `Foo` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n-  --> $DIR/derive-uninhabited-enum-38885.rs:10:10\n-   |\n-LL | #[derive(Debug)]\n-   |          ^^^^^\n-   = note: this warning originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n+   = note: `Foo` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n \n warning: 1 warning emitted\n "}, {"sha": "031b8ce713eb4c9d3fd5e0b88bc296f032cc3905", "filename": "src/test/ui/derives/clone-debug-dead-code.stderr", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d1ae3a4c3b331f8734690aac3115689f310a7a29/src%2Ftest%2Fui%2Fderives%2Fclone-debug-dead-code.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d1ae3a4c3b331f8734690aac3115689f310a7a29/src%2Ftest%2Fui%2Fderives%2Fclone-debug-dead-code.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fclone-debug-dead-code.stderr?ref=d1ae3a4c3b331f8734690aac3115689f310a7a29", "patch": "@@ -16,38 +16,23 @@ error: field is never read: `f`\n LL | struct B { f: () }\n    |            ^^^^^\n    |\n-note: `B` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis\n-  --> $DIR/clone-debug-dead-code.rs:9:10\n-   |\n-LL | #[derive(Clone)]\n-   |          ^^^^^\n-   = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)\n+   = note: `B` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis\n \n error: field is never read: `f`\n   --> $DIR/clone-debug-dead-code.rs:14:12\n    |\n LL | struct C { f: () }\n    |            ^^^^^\n    |\n-note: `C` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n-  --> $DIR/clone-debug-dead-code.rs:13:10\n-   |\n-LL | #[derive(Debug)]\n-   |          ^^^^^\n-   = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n+   = note: `C` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n \n error: field is never read: `f`\n   --> $DIR/clone-debug-dead-code.rs:18:12\n    |\n LL | struct D { f: () }\n    |            ^^^^^\n    |\n-note: `D` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis\n-  --> $DIR/clone-debug-dead-code.rs:17:10\n-   |\n-LL | #[derive(Debug,Clone)]\n-   |          ^^^^^ ^^^^^\n-   = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)\n+   = note: `D` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis\n \n error: field is never read: `f`\n   --> $DIR/clone-debug-dead-code.rs:21:12"}, {"sha": "57f8ca74f83dd4f81fff6dc02264766c46cb0400", "filename": "src/test/ui/lint/dead-code/unused-variant.stderr", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d1ae3a4c3b331f8734690aac3115689f310a7a29/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d1ae3a4c3b331f8734690aac3115689f310a7a29/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Funused-variant.stderr?ref=d1ae3a4c3b331f8734690aac3115689f310a7a29", "patch": "@@ -9,12 +9,7 @@ note: the lint level is defined here\n    |\n LL | #![deny(dead_code)]\n    |         ^^^^^^^^^\n-note: `Enum` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis\n-  --> $DIR/unused-variant.rs:3:10\n-   |\n-LL | #[derive(Clone)]\n-   |          ^^^^^\n-   = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)\n+   = note: `Enum` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis\n \n error: aborting due to previous error\n "}]}