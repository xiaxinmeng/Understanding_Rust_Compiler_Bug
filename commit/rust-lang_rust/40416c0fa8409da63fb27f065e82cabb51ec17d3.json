{"sha": "40416c0fa8409da63fb27f065e82cabb51ec17d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNDE2YzBmYTg0MDlkYTYzZmIyN2YwNjVlODJjYWJiNTFlYzE3ZDM=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-07-23T13:18:13Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-08-10T18:55:23Z"}, "message": "naive_bytecount: make lint adhere to lint message convention", "tree": {"sha": "1af5c34d79123c288461e5e6eab56fab36e4117f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1af5c34d79123c288461e5e6eab56fab36e4117f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40416c0fa8409da63fb27f065e82cabb51ec17d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40416c0fa8409da63fb27f065e82cabb51ec17d3", "html_url": "https://github.com/rust-lang/rust/commit/40416c0fa8409da63fb27f065e82cabb51ec17d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40416c0fa8409da63fb27f065e82cabb51ec17d3/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd379a889e25c94c0568fe6fc08d0783bcbc3dd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd379a889e25c94c0568fe6fc08d0783bcbc3dd7", "html_url": "https://github.com/rust-lang/rust/commit/fd379a889e25c94c0568fe6fc08d0783bcbc3dd7"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "cdb49d777d8dae2aeee008054b61dee8c293f092", "filename": "clippy_lints/src/bytecount.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/40416c0fa8409da63fb27f065e82cabb51ec17d3/clippy_lints%2Fsrc%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40416c0fa8409da63fb27f065e82cabb51ec17d3/clippy_lints%2Fsrc%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytecount.rs?ref=40416c0fa8409da63fb27f065e82cabb51ec17d3", "patch": "@@ -82,8 +82,8 @@ impl<'tcx> LateLintPass<'tcx> for ByteCount {\n                             cx,\n                             NAIVE_BYTECOUNT,\n                             expr.span,\n-                            \"You appear to be counting bytes the naive way\",\n-                            \"Consider using the bytecount crate\",\n+                            \"you appear to be counting bytes the naive way\",\n+                            \"consider using the bytecount crate\",\n                             format!(\"bytecount::count({}, {})\",\n                                     snippet_with_applicability(cx, haystack.span, \"..\", &mut applicability),\n                                     snippet_with_applicability(cx, needle.span, \"..\", &mut applicability)),"}, {"sha": "1dc37fc8b259f576d046aeec7090a998465cabd0", "filename": "tests/ui/bytecount.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/40416c0fa8409da63fb27f065e82cabb51ec17d3/tests%2Fui%2Fbytecount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/40416c0fa8409da63fb27f065e82cabb51ec17d3/tests%2Fui%2Fbytecount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytecount.stderr?ref=40416c0fa8409da63fb27f065e82cabb51ec17d3", "patch": "@@ -1,26 +1,26 @@\n-error: You appear to be counting bytes the naive way\n+error: you appear to be counting bytes the naive way\n   --> $DIR/bytecount.rs:5:13\n    |\n LL |     let _ = x.iter().filter(|&&a| a == 0).count(); // naive byte count\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider using the bytecount crate: `bytecount::count(x, 0)`\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using the bytecount crate: `bytecount::count(x, 0)`\n    |\n note: the lint level is defined here\n   --> $DIR/bytecount.rs:1:8\n    |\n LL | #[deny(clippy::naive_bytecount)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: You appear to be counting bytes the naive way\n+error: you appear to be counting bytes the naive way\n   --> $DIR/bytecount.rs:7:13\n    |\n LL |     let _ = (&x[..]).iter().filter(|&a| *a == 0).count(); // naive byte count\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider using the bytecount crate: `bytecount::count((&x[..]), 0)`\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using the bytecount crate: `bytecount::count((&x[..]), 0)`\n \n-error: You appear to be counting bytes the naive way\n+error: you appear to be counting bytes the naive way\n   --> $DIR/bytecount.rs:19:13\n    |\n LL |     let _ = x.iter().filter(|a| b + 1 == **a).count(); // naive byte count\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider using the bytecount crate: `bytecount::count(x, b + 1)`\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using the bytecount crate: `bytecount::count(x, b + 1)`\n \n error: aborting due to 3 previous errors\n "}]}