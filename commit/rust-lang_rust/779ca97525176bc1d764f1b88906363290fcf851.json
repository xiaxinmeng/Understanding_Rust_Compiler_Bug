{"sha": "779ca97525176bc1d764f1b88906363290fcf851", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3OWNhOTc1MjUxNzZiYzFkNzY0ZjFiODg5MDYzNjMyOTBmY2Y4NTE=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-06-16T21:33:45Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-19T00:01:34Z"}, "message": "Remove `#[stable]` attribute from free-standing endian conversions and mark them as deprecated", "tree": {"sha": "ed69db47591190fc762c9eff5654098ed4586ce0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed69db47591190fc762c9eff5654098ed4586ce0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/779ca97525176bc1d764f1b88906363290fcf851", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/779ca97525176bc1d764f1b88906363290fcf851", "html_url": "https://github.com/rust-lang/rust/commit/779ca97525176bc1d764f1b88906363290fcf851", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/779ca97525176bc1d764f1b88906363290fcf851/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff9f92ce5224f5e27b8dc39ffc02eb9481f7cff1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff9f92ce5224f5e27b8dc39ffc02eb9481f7cff1", "html_url": "https://github.com/rust-lang/rust/commit/ff9f92ce5224f5e27b8dc39ffc02eb9481f7cff1"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "1032b820b27514d5aa40f238571424eaf2ad6a37", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/779ca97525176bc1d764f1b88906363290fcf851/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/779ca97525176bc1d764f1b88906363290fcf851/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=779ca97525176bc1d764f1b88906363290fcf851", "patch": "@@ -173,84 +173,84 @@ pub unsafe fn move_val_init<T>(dst: &mut T, src: T) {\n ///\n /// On little endian, this is a no-op.  On big endian, the bytes are swapped.\n #[inline]\n-#[stable]\n+#[deprecated = \"use `Int::to_little_endian` instead\"]\n pub fn to_le16(x: u16) -> u16 { x.to_little_endian() }\n \n /// Convert an u32 to little endian from the target's endianness.\n ///\n /// On little endian, this is a no-op.  On big endian, the bytes are swapped.\n #[inline]\n-#[stable]\n+#[deprecated = \"use `Int::to_little_endian` instead\"]\n pub fn to_le32(x: u32) -> u32 { x.to_little_endian() }\n \n /// Convert an u64 to little endian from the target's endianness.\n ///\n /// On little endian, this is a no-op.  On big endian, the bytes are swapped.\n #[inline]\n-#[stable]\n+#[deprecated = \"use `Int::to_little_endian` instead\"]\n pub fn to_le64(x: u64) -> u64 { x.to_little_endian() }\n \n /// Convert an u16 to big endian from the target's endianness.\n ///\n /// On big endian, this is a no-op.  On little endian, the bytes are swapped.\n #[inline]\n-#[stable]\n+#[deprecated = \"use `Int::to_big_endian` instead\"]\n pub fn to_be16(x: u16) -> u16 { x.to_big_endian() }\n \n /// Convert an u32 to big endian from the target's endianness.\n ///\n /// On big endian, this is a no-op.  On little endian, the bytes are swapped.\n #[inline]\n-#[stable]\n+#[deprecated = \"use `Int::to_big_endian` instead\"]\n pub fn to_be32(x: u32) -> u32 { x.to_big_endian() }\n \n /// Convert an u64 to big endian from the target's endianness.\n ///\n /// On big endian, this is a no-op.  On little endian, the bytes are swapped.\n #[inline]\n-#[stable]\n+#[deprecated = \"use `Int::to_big_endian` instead\"]\n pub fn to_be64(x: u64) -> u64 { x.to_big_endian() }\n \n /// Convert an u16 from little endian to the target's endianness.\n ///\n /// On little endian, this is a no-op.  On big endian, the bytes are swapped.\n #[inline]\n-#[stable]\n+#[deprecated = \"use `Int::from_little_endian` instead\"]\n pub fn from_le16(x: u16) -> u16 { Int::from_little_endian(x) }\n \n /// Convert an u32 from little endian to the target's endianness.\n ///\n /// On little endian, this is a no-op.  On big endian, the bytes are swapped.\n #[inline]\n-#[stable]\n+#[deprecated = \"use `Int::from_little_endian` instead\"]\n pub fn from_le32(x: u32) -> u32 { Int::from_little_endian(x) }\n \n /// Convert an u64 from little endian to the target's endianness.\n ///\n /// On little endian, this is a no-op.  On big endian, the bytes are swapped.\n #[inline]\n-#[stable]\n+#[deprecated = \"use `Int::from_little_endian` instead\"]\n pub fn from_le64(x: u64) -> u64 { Int::from_little_endian(x) }\n \n /// Convert an u16 from big endian to the target's endianness.\n ///\n /// On big endian, this is a no-op.  On little endian, the bytes are swapped.\n #[inline]\n-#[stable]\n+#[deprecated = \"use `Int::from_big_endian` instead\"]\n pub fn from_be16(x: u16) -> u16 { Int::from_big_endian(x) }\n \n /// Convert an u32 from big endian to the target's endianness.\n ///\n /// On big endian, this is a no-op.  On little endian, the bytes are swapped.\n #[inline]\n-#[stable]\n+#[deprecated = \"use `Int::from_big_endian` instead\"]\n pub fn from_be32(x: u32) -> u32 { Int::from_big_endian(x) }\n \n /// Convert an u64 from big endian to the target's endianness.\n ///\n /// On big endian, this is a no-op.  On little endian, the bytes are swapped.\n #[inline]\n-#[stable]\n+#[deprecated = \"use `Int::from_big_endian` instead\"]\n pub fn from_be64(x: u64) -> u64 { Int::from_big_endian(x) }\n \n /// Swap the values at two mutable locations of the same type, without"}]}