{"sha": "848a38ac9d9bc956cded893bdd55e1171a2706dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0OGEzOGFjOWQ5YmM5NTZjZGVkODkzYmRkNTVlMTE3MWEyNzA2ZGQ=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-08-24T17:56:24Z"}, "committer": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-08-24T18:24:07Z"}, "message": "Manual Debug for Unix ExitCode ExitStatus ExitStatusError\n\nThese structs have misleading names.  An ExitStatus[Error] is actually\na Unix wait status; an ExitCode is actually an exit status.\n\nThe Display impls are fixed, but the Debug impls are still misleading,\nas reported in #74832.\n\nFix this by pretending that these internal structs are called\n`unix_exit_status` and `unix_wait_status` as applicable.  (We can't\nactually rename the structs because of the way that the cross-platform\nmachinery works: the names are cross-platform.)\n\nSigned-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "2917447f42f4470a34e9ef5b586a0d4ee7cb415c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2917447f42f4470a34e9ef5b586a0d4ee7cb415c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/848a38ac9d9bc956cded893bdd55e1171a2706dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/848a38ac9d9bc956cded893bdd55e1171a2706dd", "html_url": "https://github.com/rust-lang/rust/commit/848a38ac9d9bc956cded893bdd55e1171a2706dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/848a38ac9d9bc956cded893bdd55e1171a2706dd/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47ab5f7ce27397310bd8359b8db1504fbf8a9b59", "url": "https://api.github.com/repos/rust-lang/rust/commits/47ab5f7ce27397310bd8359b8db1504fbf8a9b59", "html_url": "https://github.com/rust-lang/rust/commit/47ab5f7ce27397310bd8359b8db1504fbf8a9b59"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "7ac2f9d8af75a139609b84d5cb47bd349f83c1a8", "filename": "library/std/src/sys/unix/process/process_common.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/848a38ac9d9bc956cded893bdd55e1171a2706dd/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/848a38ac9d9bc956cded893bdd55e1171a2706dd/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs?ref=848a38ac9d9bc956cded893bdd55e1171a2706dd", "patch": "@@ -457,9 +457,15 @@ impl fmt::Debug for Command {\n     }\n }\n \n-#[derive(PartialEq, Eq, Clone, Copy, Debug)]\n+#[derive(PartialEq, Eq, Clone, Copy)]\n pub struct ExitCode(u8);\n \n+impl fmt::Debug for ExitCode {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.debug_tuple(\"unix_exit_status\").field(&self.0).finish()\n+    }\n+}\n+\n impl ExitCode {\n     pub const SUCCESS: ExitCode = ExitCode(EXIT_SUCCESS as _);\n     pub const FAILURE: ExitCode = ExitCode(EXIT_FAILURE as _);"}, {"sha": "7b8230d89daa747dccbca6d4b8993414324ede17", "filename": "library/std/src/sys/unix/process/process_unix.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/848a38ac9d9bc956cded893bdd55e1171a2706dd/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/848a38ac9d9bc956cded893bdd55e1171a2706dd/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=848a38ac9d9bc956cded893bdd55e1171a2706dd", "patch": "@@ -607,9 +607,15 @@ impl Process {\n }\n \n /// Unix exit statuses\n-#[derive(PartialEq, Eq, Clone, Copy, Debug)]\n+#[derive(PartialEq, Eq, Clone, Copy)]\n pub struct ExitStatus(c_int);\n \n+impl fmt::Debug for ExitStatus {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.debug_tuple(\"unix_wait_status\").field(&self.0).finish()\n+    }\n+}\n+\n impl ExitStatus {\n     pub fn new(status: c_int) -> ExitStatus {\n         ExitStatus(status)\n@@ -683,7 +689,7 @@ impl fmt::Display for ExitStatus {\n     }\n }\n \n-#[derive(PartialEq, Eq, Clone, Copy, Debug)]\n+#[derive(PartialEq, Eq, Clone, Copy)]\n pub struct ExitStatusError(NonZero_c_int);\n \n impl Into<ExitStatus> for ExitStatusError {\n@@ -692,6 +698,12 @@ impl Into<ExitStatus> for ExitStatusError {\n     }\n }\n \n+impl fmt::Debug for ExitStatusError {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.debug_tuple(\"unix_wait_status\").field(&self.0).finish()\n+    }\n+}\n+\n impl ExitStatusError {\n     pub fn code(self) -> Option<NonZeroI32> {\n         ExitStatus(self.0.into()).code().map(|st| st.try_into().unwrap())"}]}