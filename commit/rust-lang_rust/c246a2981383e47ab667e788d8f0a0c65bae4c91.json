{"sha": "c246a2981383e47ab667e788d8f0a0c65bae4c91", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyNDZhMjk4MTM4M2U0N2FiNjY3ZTc4OGQ4ZjBhMGM2NWJhZTRjOTE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-13T05:03:21Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-13T11:20:55Z"}, "message": "Rollup merge of #55888 - RalfJung:alloc-extra, r=oli-obk\n\nmiri: for uniformity, also move memory_deallocated to AllocationExtra\n\nr? @oli-obk", "tree": {"sha": "575a99a70b0443e0b30a357048552499a1367a55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/575a99a70b0443e0b30a357048552499a1367a55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c246a2981383e47ab667e788d8f0a0c65bae4c91", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvqs5cACgkQ/vbIBR0O\nATzH4RAAxMTUtl6/wkDS2n5fcc8Tm1Lsf/NxiniWiKhAbV0+6XqgXEfUvUz+KA40\nA4t1LZ+2Uh7Z5fEWNRBBcgX45yhGx5ZAuKDcp2DWKRat6DNVlp5FbOSzOtFHHore\nL1vjHrUTCJ1Es6E/FsbOvs7YHmhN/jgWZmi8nrZYbLrvtienYTPYGyV4ijKkNBF3\n3FyK9T5hl8CJvA225Yo3j14JtJ2uNCIexG8GJtcButhJnONt6MCIgzo7lpRLGDR4\nJNOvz9K6wQbVN6VlkbUO8NfFUdPI4aaBe0SpredJdgh150LZcBV5IuFASL4HoyKu\njBcXysULarzoqAgA7TJj6wgwwY5YVvEhqqbJCq2ffOkCG+HNSxRru68CbM8C8NKU\nJbwA3hkC97WtqKM7uXDwQLjJO4r0dDM2i9FE+GzB39nORzq3EvErFdIsHuHofehk\nxkiHzADW33fGt1nFQiT2ACFK6iPrO/LIUhYN0hJX43xDFfuTC7qTKE3wSljtmwoQ\nQpAUifLpYkixZu2B975nrhQYIZgus8yOvi1u6qddgkBeHcRnebooryv/FfZ3y/SG\nbTgu4EmYRAP1mzO9FoHqXSDpw8nqCrwex8Tt+HRFqAE4ZCwq2NvewZkuc+KloPDo\n+ErUvo5XLX1TCo4kHbEh0Ae+xrnRDWyWJhpbpKVDowBrvL+nANI=\n=TGWd\n-----END PGP SIGNATURE-----", "payload": "tree 575a99a70b0443e0b30a357048552499a1367a55\nparent 675c95c7b80081978618f3b8f5e0f6b053478a63\nparent 3c88cfef67905939da71eb44575b18fd1b406e16\nauthor kennytm <kennytm@gmail.com> 1542085401 +0800\ncommitter kennytm <kennytm@gmail.com> 1542108055 +0800\n\nRollup merge of #55888 - RalfJung:alloc-extra, r=oli-obk\n\nmiri: for uniformity, also move memory_deallocated to AllocationExtra\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c246a2981383e47ab667e788d8f0a0c65bae4c91", "html_url": "https://github.com/rust-lang/rust/commit/c246a2981383e47ab667e788d8f0a0c65bae4c91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c246a2981383e47ab667e788d8f0a0c65bae4c91/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "675c95c7b80081978618f3b8f5e0f6b053478a63", "url": "https://api.github.com/repos/rust-lang/rust/commits/675c95c7b80081978618f3b8f5e0f6b053478a63", "html_url": "https://github.com/rust-lang/rust/commit/675c95c7b80081978618f3b8f5e0f6b053478a63"}, {"sha": "3c88cfef67905939da71eb44575b18fd1b406e16", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c88cfef67905939da71eb44575b18fd1b406e16", "html_url": "https://github.com/rust-lang/rust/commit/3c88cfef67905939da71eb44575b18fd1b406e16"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "cc92b63256c1ff7c6b8e3259f29da401dd59bac8", "filename": "src/librustc/mir/interpret/allocation.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c246a2981383e47ab667e788d8f0a0c65bae4c91/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c246a2981383e47ab667e788d8f0a0c65bae4c91/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs?ref=c246a2981383e47ab667e788d8f0a0c65bae4c91", "patch": "@@ -65,6 +65,17 @@ pub trait AllocationExtra<Tag>: ::std::fmt::Debug + Default + Clone {\n     ) -> EvalResult<'tcx> {\n         Ok(())\n     }\n+\n+    /// Hook for performing extra checks on a memory deallocation.\n+    /// `size` will be the size of the allocation.\n+    #[inline]\n+    fn memory_deallocated(\n+        _alloc: &mut Allocation<Tag, Self>,\n+        _ptr: Pointer<Tag>,\n+        _size: Size,\n+    ) -> EvalResult<'tcx> {\n+        Ok(())\n+    }\n }\n \n impl AllocationExtra<()> for () {}"}, {"sha": "1efd7ca7f89738f658a42727d8df56f71f627b2d", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c246a2981383e47ab667e788d8f0a0c65bae4c91/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c246a2981383e47ab667e788d8f0a0c65bae4c91/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=c246a2981383e47ab667e788d8f0a0c65bae4c91", "patch": "@@ -17,7 +17,7 @@ use std::hash::Hash;\n \n use rustc::hir::{self, def_id::DefId};\n use rustc::mir;\n-use rustc::ty::{self, layout::{Size, TyLayout}, query::TyCtxtAt};\n+use rustc::ty::{self, layout::TyLayout, query::TyCtxtAt};\n \n use super::{\n     Allocation, AllocId, EvalResult, Scalar, AllocationExtra,\n@@ -174,16 +174,6 @@ pub trait Machine<'a, 'mir, 'tcx>: Sized {\n         dest: PlaceTy<'tcx, Self::PointerTag>,\n     ) -> EvalResult<'tcx>;\n \n-    /// Hook for performing extra checks when memory gets deallocated.\n-    #[inline]\n-    fn memory_deallocated(\n-        _alloc: &mut Allocation<Self::PointerTag, Self::AllocExtra>,\n-        _ptr: Pointer<Self::PointerTag>,\n-        _size: Size,\n-    ) -> EvalResult<'tcx> {\n-        Ok(())\n-    }\n-\n     /// Add the tag for a newly allocated pointer.\n     fn tag_new_allocation(\n         ecx: &mut EvalContext<'a, 'mir, 'tcx, Self>,"}, {"sha": "e125927e7d2732ea8c0c97d1c7b4746371076065", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c246a2981383e47ab667e788d8f0a0c65bae4c91/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c246a2981383e47ab667e788d8f0a0c65bae4c91/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=c246a2981383e47ab667e788d8f0a0c65bae4c91", "patch": "@@ -225,7 +225,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n \n         // Let the machine take some extra action\n         let size = Size::from_bytes(alloc.bytes.len() as u64);\n-        M::memory_deallocated(&mut alloc, ptr, size)?;\n+        AllocationExtra::memory_deallocated(&mut alloc, ptr, size)?;\n \n         // Don't forget to remember size and align of this now-dead allocation\n         let old = self.dead_alloc_map.insert("}]}