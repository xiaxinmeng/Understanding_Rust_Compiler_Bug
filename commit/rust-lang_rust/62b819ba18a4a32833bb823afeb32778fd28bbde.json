{"sha": "62b819ba18a4a32833bb823afeb32778fd28bbde", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYjgxOWJhMThhNGEzMjgzM2JiODIzYWZlYjMyNzc4ZmQyOGJiZGU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-12T08:40:44Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-12T08:40:44Z"}, "message": "whitelist std::ptr::read", "tree": {"sha": "c7bd393cca541d40d7b8737d4855926420daa785", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7bd393cca541d40d7b8737d4855926420daa785"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62b819ba18a4a32833bb823afeb32778fd28bbde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62b819ba18a4a32833bb823afeb32778fd28bbde", "html_url": "https://github.com/rust-lang/rust/commit/62b819ba18a4a32833bb823afeb32778fd28bbde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62b819ba18a4a32833bb823afeb32778fd28bbde/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26f9d617c347185433b77c481a5c50c55d9b72ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/26f9d617c347185433b77c481a5c50c55d9b72ce", "html_url": "https://github.com/rust-lang/rust/commit/26f9d617c347185433b77c481a5c50c55d9b72ce"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "d52fd0028039d5b6aebb3a581159447ac10d6e6c", "filename": "src/lib.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/62b819ba18a4a32833bb823afeb32778fd28bbde/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62b819ba18a4a32833bb823afeb32778fd28bbde/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=62b819ba18a4a32833bb823afeb32778fd28bbde", "patch": "@@ -255,9 +255,26 @@ impl<'a, 'mir, 'tcx> Machine<'a, 'mir, 'tcx> for Evaluator<'tcx> {\n \n     const STATIC_KIND: Option<MiriMemoryKind> = Some(MiriMemoryKind::MutStatic);\n \n-    #[inline(always)]\n     fn enforce_validity(ecx: &EvalContext<'a, 'mir, 'tcx, Self>) -> bool {\n-        ecx.machine.validate\n+        if !ecx.machine.validate {\n+            return false;\n+        }\n+\n+        // Some functions are whitelisted until we figure out how to fix them.\n+        // We walk up the stack a few frames to also cover their callees.\n+        const WHITELIST: &[&str] = &[\n+            // Uses mem::uninitialized\n+            \"std::ptr::read\",\n+        ];\n+        for frame in ecx.stack().iter()\n+            .rev().take(3)\n+        {\n+            let name = frame.instance.to_string();\n+            if WHITELIST.iter().any(|white| name.starts_with(white)) {\n+                return false;\n+            }\n+        }\n+        true\n     }\n \n     /// Returns Ok() when the function was handled, fail otherwise"}, {"sha": "151aa89be3f3af0396a9f64ab5d539d4521f229a", "filename": "tests/compiletest.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62b819ba18a4a32833bb823afeb32778fd28bbde/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62b819ba18a4a32833bb823afeb32778fd28bbde/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=62b819ba18a4a32833bb823afeb32778fd28bbde", "patch": "@@ -103,8 +103,6 @@ fn miri_pass(sysroot: &Path, path: &str, target: &str, host: &str, need_fullmir:\n     flags.push(\"-Dwarnings -Dunused\".to_owned()); // overwrite the -Aunused in compiletest-rs\n     if have_fullmir() {\n         flags.push(\"-Zmiri-start-fn\".to_owned());\n-        // start-fn uses ptr::read, and so fails validation\n-        flags.push(\"-Zmiri-disable-validation\".to_owned());\n     }\n     if opt {\n         flags.push(\"-Zmir-opt-level=3\".to_owned());"}, {"sha": "3ec6be65ed8b6f8bc8bb35d560a42ef3c2f0dfb5", "filename": "tests/run-pass/call_drop_through_owned_slice.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/62b819ba18a4a32833bb823afeb32778fd28bbde/tests%2Frun-pass%2Fcall_drop_through_owned_slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62b819ba18a4a32833bb823afeb32778fd28bbde/tests%2Frun-pass%2Fcall_drop_through_owned_slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fcall_drop_through_owned_slice.rs?ref=62b819ba18a4a32833bb823afeb32778fd28bbde", "patch": "@@ -1,6 +1,3 @@\n-// FIXME validation disabled because ptr::read uses mem::uninitialized\n-// compile-flags: -Zmiri-disable-validation\n-\n struct Bar;\n \n static mut DROP_COUNT: usize = 0;"}, {"sha": "61c601ac6a903d887306a55d204b90d153a629b9", "filename": "tests/run-pass/issue-29746.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/62b819ba18a4a32833bb823afeb32778fd28bbde/tests%2Frun-pass%2Fissue-29746.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62b819ba18a4a32833bb823afeb32778fd28bbde/tests%2Frun-pass%2Fissue-29746.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-29746.rs?ref=62b819ba18a4a32833bb823afeb32778fd28bbde", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// FIXME validation disabled because ptr::read uses mem::uninitialized\n-// compile-flags: -Zmiri-disable-validation\n-\n // zip!(a1,a2,a3,a4) is equivalent to:\n //  a1.zip(a2).zip(a3).zip(a4).map(|(((x1,x2),x3),x4)| (x1,x2,x3,x4))\n macro_rules! zip {"}, {"sha": "66f0c84e23c1a2d4064e12c507ca2485297278b2", "filename": "tests/run-pass/sendable-class.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/62b819ba18a4a32833bb823afeb32778fd28bbde/tests%2Frun-pass%2Fsendable-class.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62b819ba18a4a32833bb823afeb32778fd28bbde/tests%2Frun-pass%2Fsendable-class.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fsendable-class.rs?ref=62b819ba18a4a32833bb823afeb32778fd28bbde", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// FIXME validation disabled because ptr::read uses mem::uninitialized\n-// compile-flags: -Zmiri-disable-validation\n-\n // Test that a class with only sendable fields can be sent\n \n use std::sync::mpsc::channel;"}, {"sha": "7644da08e4afa7cf144dbbb3a5b0142f687ac5c7", "filename": "tests/run-pass/unique-send.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/62b819ba18a4a32833bb823afeb32778fd28bbde/tests%2Frun-pass%2Funique-send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62b819ba18a4a32833bb823afeb32778fd28bbde/tests%2Frun-pass%2Funique-send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Funique-send.rs?ref=62b819ba18a4a32833bb823afeb32778fd28bbde", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// FIXME validation disabled because ptr::read uses mem::uninitialized\n-// compile-flags: -Zmiri-disable-validation\n-\n #![feature(box_syntax)]\n \n use std::sync::mpsc::channel;"}]}