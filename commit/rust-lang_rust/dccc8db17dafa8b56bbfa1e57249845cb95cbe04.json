{"sha": "dccc8db17dafa8b56bbfa1e57249845cb95cbe04", "node_id": "C_kwDOAAsO6NoAKGRjY2M4ZGIxN2RhZmE4YjU2YmJmYTFlNTcyNDk4NDVjYjk1Y2JlMDQ", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-05-26T12:06:41Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-05-30T11:04:27Z"}, "message": "coinductive cycle leak check test", "tree": {"sha": "109dc00e798b1518bc5fb2b3aa97347c7a856e22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/109dc00e798b1518bc5fb2b3aa97347c7a856e22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dccc8db17dafa8b56bbfa1e57249845cb95cbe04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dccc8db17dafa8b56bbfa1e57249845cb95cbe04", "html_url": "https://github.com/rust-lang/rust/commit/dccc8db17dafa8b56bbfa1e57249845cb95cbe04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dccc8db17dafa8b56bbfa1e57249845cb95cbe04/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5119f7da18eb7f10457d3e4b2c1d60f8d94a4cbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/5119f7da18eb7f10457d3e4b2c1d60f8d94a4cbf", "html_url": "https://github.com/rust-lang/rust/commit/5119f7da18eb7f10457d3e4b2c1d60f8d94a4cbf"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "1f7d4a49c901800f3eb8ef81633243fdc4bd334b", "filename": "tests/ui/traits/new-solver/leak-check-coinductive-cycle.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/dccc8db17dafa8b56bbfa1e57249845cb95cbe04/tests%2Fui%2Ftraits%2Fnew-solver%2Fleak-check-coinductive-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dccc8db17dafa8b56bbfa1e57249845cb95cbe04/tests%2Fui%2Ftraits%2Fnew-solver%2Fleak-check-coinductive-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fleak-check-coinductive-cycle.rs?ref=dccc8db17dafa8b56bbfa1e57249845cb95cbe04", "patch": "@@ -0,0 +1,33 @@\n+// check-pass\n+// compile-flags: -Ztrait-solver=next\n+#![feature(rustc_attrs)]\n+\n+#[rustc_coinductive]\n+trait Trait<T> {}\n+impl<'a, 'b, T> Trait<T> for (&'a (), &'b ())\n+where\n+    'b: 'a,\n+    &'a (): Trait<T>,\n+{}\n+\n+impl Trait<i32> for &'static () {}\n+impl<'a> Trait<u32> for &'a ()\n+where\n+    for<'b> (&'a (), &'b ()): Trait<u32>,\n+{}\n+\n+\n+fn impls_trait<T: Trait<U>, U>() {}\n+\n+fn main() {\n+    // This infers to `impls_trait::<(&'static (), &'static ()), i32>();`\n+    //\n+    // In the first attempt we have 2 candidates for `&'a (): Trait<_>`\n+    // and we get ambiguity. The result is therefore ambiguity with a `'b: 'a`\n+    // constraint. The next attempt then uses that provisional result when\n+    // trying to apply `impl<'a> Trait<u32> for &'a ()`. This means we get a\n+    // `for<'b> 'b: 'a` bound which fails the leak check. Because of this we\n+    // end up with a single impl for `&'a (): Trait<_>` which infers `_` to `i32`\n+    // and succeeds.\n+    impls_trait::<(&(), &()), _>();\n+}"}]}