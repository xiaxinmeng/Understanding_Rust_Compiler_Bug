{"sha": "862d25c89076c5914fa4b8bc17e6b7656799535f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MmQyNWM4OTA3NmM1OTE0ZmE0YjhiYzE3ZTZiNzY1Njc5OTUzNWY=", "commit": {"author": {"name": "Fabian Drinck", "email": "fabian.drinck@rwth-aachen.de", "date": "2018-06-15T17:03:36Z"}, "committer": {"name": "Fabian Drinck", "email": "fabian.drinck@rwth-aachen.de", "date": "2018-06-15T17:07:16Z"}, "message": "Fix compile error", "tree": {"sha": "2d284c904b5569b8d0e4d9edfbe11a76d75aad7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d284c904b5569b8d0e4d9edfbe11a76d75aad7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/862d25c89076c5914fa4b8bc17e6b7656799535f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/862d25c89076c5914fa4b8bc17e6b7656799535f", "html_url": "https://github.com/rust-lang/rust/commit/862d25c89076c5914fa4b8bc17e6b7656799535f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/862d25c89076c5914fa4b8bc17e6b7656799535f/comments", "author": {"login": "fabric-and-ink", "id": 13430670, "node_id": "MDQ6VXNlcjEzNDMwNjcw", "avatar_url": "https://avatars.githubusercontent.com/u/13430670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabric-and-ink", "html_url": "https://github.com/fabric-and-ink", "followers_url": "https://api.github.com/users/fabric-and-ink/followers", "following_url": "https://api.github.com/users/fabric-and-ink/following{/other_user}", "gists_url": "https://api.github.com/users/fabric-and-ink/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabric-and-ink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabric-and-ink/subscriptions", "organizations_url": "https://api.github.com/users/fabric-and-ink/orgs", "repos_url": "https://api.github.com/users/fabric-and-ink/repos", "events_url": "https://api.github.com/users/fabric-and-ink/events{/privacy}", "received_events_url": "https://api.github.com/users/fabric-and-ink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fabric-and-ink", "id": 13430670, "node_id": "MDQ6VXNlcjEzNDMwNjcw", "avatar_url": "https://avatars.githubusercontent.com/u/13430670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabric-and-ink", "html_url": "https://github.com/fabric-and-ink", "followers_url": "https://api.github.com/users/fabric-and-ink/followers", "following_url": "https://api.github.com/users/fabric-and-ink/following{/other_user}", "gists_url": "https://api.github.com/users/fabric-and-ink/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabric-and-ink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabric-and-ink/subscriptions", "organizations_url": "https://api.github.com/users/fabric-and-ink/orgs", "repos_url": "https://api.github.com/users/fabric-and-ink/repos", "events_url": "https://api.github.com/users/fabric-and-ink/events{/privacy}", "received_events_url": "https://api.github.com/users/fabric-and-ink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d53b89b66bd4ae765e102afbd4d3a24c12f6c3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d53b89b66bd4ae765e102afbd4d3a24c12f6c3e", "html_url": "https://github.com/rust-lang/rust/commit/8d53b89b66bd4ae765e102afbd4d3a24c12f6c3e"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "cddf6dc8899691bc9bd306857705d5dedf783839", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/862d25c89076c5914fa4b8bc17e6b7656799535f/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/862d25c89076c5914fa4b8bc17e6b7656799535f/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=862d25c89076c5914fa4b8bc17e6b7656799535f", "patch": "@@ -1269,8 +1269,8 @@ impl DebruijnIndex {\n     ///\n     /// you would need to shift the index for `'a` into 1 new binder.\n     #[must_use]\n-    pub fn shifted_in(self, amount: u32) -> DebruijnIndex {\n-        DebruijnIndex::new(self.index() + amount as usize)\n+    pub const fn shifted_in(self, amount: u32) -> DebruijnIndex {\n+        DebruijnIndex(self.0 + amount)\n     }\n \n     /// Update this index in place by shifting it \"in\" through\n@@ -1282,8 +1282,8 @@ impl DebruijnIndex {\n     /// Returns the resulting index when this value is moved out from\n     /// `amount` number of new binders.\n     #[must_use]\n-    pub fn shifted_out(self, amount: u32) -> DebruijnIndex {\n-        DebruijnIndex::new(self.index() - amount as usize)\n+    pub const fn shifted_out(self, amount: u32) -> DebruijnIndex {\n+        DebruijnIndex(self.0 - amount)\n     }\n \n     /// Update in place by shifting out from `amount` binders.\n@@ -1312,7 +1312,7 @@ impl DebruijnIndex {\n     /// bound by one of the binders we are shifting out of, that is an\n     /// error (and should fail an assertion failure).\n     pub fn shifted_out_to_binder(self, to_binder: DebruijnIndex) -> Self {\n-        self.shifted_out((to_binder.index() - INNERMOST.index()) as u32)\n+        self.shifted_out((to_binder.0 - INNERMOST.0) as u32)\n     }\n }\n "}, {"sha": "d8894722519c1d0422873dae04585e00e86a081d", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/862d25c89076c5914fa4b8bc17e6b7656799535f/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/862d25c89076c5914fa4b8bc17e6b7656799535f/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=862d25c89076c5914fa4b8bc17e6b7656799535f", "patch": "@@ -184,7 +184,7 @@ fn test_env_with_pool<F>(\n }\n \n const D1: ty::DebruijnIndex = ty::INNERMOST;\n-const D2: ty::DebruijnIndex = ty::DebruijnIndex(1);\n+const D2: ty::DebruijnIndex = D1.shifted_in(1);\n \n impl<'a, 'gcx, 'tcx> Env<'a, 'gcx, 'tcx> {\n     pub fn tcx(&self) -> TyCtxt<'a, 'gcx, 'tcx> {"}]}