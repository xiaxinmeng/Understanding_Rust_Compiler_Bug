{"sha": "11381a5a3a84ab1915d8c2a7ce369d4517c662a0", "node_id": "C_kwDOAAsO6NoAKDExMzgxYTVhM2E4NGFiMTkxNWQ4YzJhN2NlMzY5ZDQ1MTdjNjYyYTA", "commit": {"author": {"name": "Yannick Koehler", "email": "ykoehler@arubanetworks.com", "date": "2021-09-15T00:50:35Z"}, "committer": {"name": "Jonah Petri", "email": "jonah@petri.us", "date": "2021-10-06T14:33:13Z"}, "message": "Add new target armv7-unknown-linux-uclibceabihf\n\nCo-authored-by: Jonah Petri <jonah@petri.us>", "tree": {"sha": "7c81592c0d1b3b0a86378e14485259d8a8cae5a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c81592c0d1b3b0a86378e14485259d8a8cae5a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11381a5a3a84ab1915d8c2a7ce369d4517c662a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11381a5a3a84ab1915d8c2a7ce369d4517c662a0", "html_url": "https://github.com/rust-lang/rust/commit/11381a5a3a84ab1915d8c2a7ce369d4517c662a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/comments", "author": null, "committer": {"login": "skrap", "id": 1132698, "node_id": "MDQ6VXNlcjExMzI2OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1132698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skrap", "html_url": "https://github.com/skrap", "followers_url": "https://api.github.com/users/skrap/followers", "following_url": "https://api.github.com/users/skrap/following{/other_user}", "gists_url": "https://api.github.com/users/skrap/gists{/gist_id}", "starred_url": "https://api.github.com/users/skrap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skrap/subscriptions", "organizations_url": "https://api.github.com/users/skrap/orgs", "repos_url": "https://api.github.com/users/skrap/repos", "events_url": "https://api.github.com/users/skrap/events{/privacy}", "received_events_url": "https://api.github.com/users/skrap/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7539a6af09e5889ed9bcb8b49571b7a59c32e65", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7539a6af09e5889ed9bcb8b49571b7a59c32e65", "html_url": "https://github.com/rust-lang/rust/commit/d7539a6af09e5889ed9bcb8b49571b7a59c32e65"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "13a15009ad2f24ea200facccdf580ec803d55640", "filename": "compiler/rustc_codegen_llvm/src/callee.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcallee.rs?ref=11381a5a3a84ab1915d8c2a7ce369d4517c662a0", "patch": "@@ -176,6 +176,7 @@ pub fn get_fn(cx: &CodegenCx<'ll, 'tcx>, instance: Instance<'tcx>) -> &'ll Value\n             if cx.use_dll_storage_attrs\n                 && tcx.is_dllimport_foreign_item(instance_def_id)\n                 && tcx.sess.target.env != \"gnu\"\n+                && tcx.sess.target.env != \"uclibc\"\n             {\n                 llvm::LLVMSetDLLStorageClass(llfn, llvm::DLLStorageClass::DllImport);\n             }"}, {"sha": "86e5419f964b842038254e2bb1f9eed14e602768", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=11381a5a3a84ab1915d8c2a7ce369d4517c662a0", "patch": "@@ -3009,7 +3009,7 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n         };\n \n         let target = &self.tcx.sess.target;\n-        let target_env_gnu_like = matches!(&target.env[..], \"gnu\" | \"musl\");\n+        let target_env_gnu_like = matches!(&target.env[..], \"gnu\" | \"musl\" | \"uclibc\");\n         let win_x64_gnu = target.os == \"windows\" && target.arch == \"x86_64\" && target.env == \"gnu\";\n         let linux_s390x_gnu_like =\n             target.os == \"linux\" && target.arch == \"s390x\" && target_env_gnu_like;\n@@ -3107,7 +3107,7 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n             if arg.layout.is_zst() {\n                 // For some forsaken reason, x86_64-pc-windows-gnu\n                 // doesn't ignore zero-sized struct arguments.\n-                // The same is true for {s390x,sparc64,powerpc}-unknown-linux-{gnu,musl}.\n+                // The same is true for {s390x,sparc64,powerpc}-unknown-linux-{gnu,musl,uclibc}.\n                 if is_return\n                     || rust_abi\n                     || (!win_x64_gnu"}, {"sha": "40ec5f4a86f3accb8448879db5e039bfa4622c27", "filename": "compiler/rustc_target/src/spec/armv7_unknown_linux_uclibceabihf.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7_unknown_linux_uclibceabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7_unknown_linux_uclibceabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmv7_unknown_linux_uclibceabihf.rs?ref=11381a5a3a84ab1915d8c2a7ce369d4517c662a0", "patch": "@@ -0,0 +1,23 @@\n+use crate::spec::{Target, TargetOptions};\n+\n+// This target is for uclibc Linux on ARMv7 without NEON or\n+// thumb-mode. See the thumbv7neon variant for enabling both.\n+\n+pub fn target() -> Target {\n+    let base = super::linux_uclibc_base::opts();\n+    Target {\n+        llvm_target: \"armv7-unknown-linux-gnueabihf\".to_string(),\n+        pointer_width: 32,\n+        data_layout: \"e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+\n+        options: TargetOptions {\n+            // Info about features at https://wiki.debian.org/ArmHardFloatPort\n+            features: \"+v7,+vfp3,-d32,+thumb2,-neon\".to_string(),\n+            cpu: \"generic\".to_string(),\n+            max_atomic_width: Some(64),\n+            mcount: \"_mcount\".to_string(),\n+            ..base\n+        },\n+    }\n+}"}, {"sha": "ff5dfa3f746254b0364c4faf37b17f81e941346b", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=11381a5a3a84ab1915d8c2a7ce369d4517c662a0", "patch": "@@ -952,6 +952,8 @@ supported_targets! {\n     (\"bpfel-unknown-none\", bpfel_unknown_none),\n \n     (\"armv6k-nintendo-3ds\", armv6k_nintendo_3ds),\n+\n+    (\"armv7-unknown-linux-uclibceabihf\", armv7_unknown_linux_uclibceabihf),\n }\n \n /// Warnings encountered when parsing the target `json`."}, {"sha": "2ba6c8d830ede552890c37898353615bf2a69dc8", "filename": "library/std/src/sys/unix/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fmod.rs?ref=11381a5a3a84ab1915d8c2a7ce369d4517c662a0", "patch": "@@ -307,6 +307,9 @@ cfg_if::cfg_if! {\n         #[link(name = \"zircon\")]\n         #[link(name = \"fdio\")]\n         extern \"C\" {}\n+    } else if #[cfg(all(target_os = \"linux\", target_env = \"uclibc\"))] {\n+        #[link(name = \"dl\")]\n+        extern \"C\" {}\n     }\n }\n "}, {"sha": "ac852717f1ecab70c9f4f3a6c873e4aed54a19ce", "filename": "library/std/src/sys/unix/process/process_unix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=11381a5a3a84ab1915d8c2a7ce369d4517c662a0", "patch": "@@ -419,7 +419,7 @@ impl Command {\n         }\n \n         // Only glibc 2.24+ posix_spawn() supports returning ENOENT directly.\n-        #[cfg(all(target_os = \"linux\", target_env = \"gnu\"))]\n+        #[cfg(all(target_os = \"linux\", any(target_env = \"gnu\", target_env = \"uclibc\")))]\n         {\n             if let Some(version) = sys::os::glibc_version() {\n                 if version < (2, 24) {"}, {"sha": "01e54b4a8f1f648aa6d5fc381e56b1ee0197dc1b", "filename": "library/std/src/sys/unix/thread.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs?ref=11381a5a3a84ab1915d8c2a7ce369d4517c662a0", "patch": "@@ -594,7 +594,8 @@ pub mod guard {\n                 Some(stackaddr - guardsize..stackaddr)\n             } else if cfg!(all(target_os = \"linux\", target_env = \"musl\")) {\n                 Some(stackaddr - guardsize..stackaddr)\n-            } else if cfg!(all(target_os = \"linux\", target_env = \"gnu\")) {\n+            } else if cfg!(all(target_os = \"linux\", any(target_env = \"gnu\", target_env = \"uclibc\")))\n+            {\n                 // glibc used to include the guard area within the stack, as noted in the BUGS\n                 // section of `man pthread_attr_getguardsize`.  This has been corrected starting\n                 // with glibc 2.27, and in some distro backports, so the guard is now placed at the"}, {"sha": "e263780bf38796dbdae16e73b90bb8774edf39eb", "filename": "library/unwind/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/library%2Funwind%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/library%2Funwind%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Funwind%2Fsrc%2Flib.rs?ref=11381a5a3a84ab1915d8c2a7ce369d4517c662a0", "patch": "@@ -63,7 +63,7 @@ cfg_if::cfg_if! {\n // don't want to duplicate it here.\n #[cfg(all(\n     target_os = \"linux\",\n-    target_env = \"gnu\",\n+    any(target_env = \"gnu\", target_env = \"uclibc\"),\n     not(feature = \"llvm-libunwind\"),\n     not(feature = \"system-llvm-libunwind\")\n ))]\n@@ -72,7 +72,7 @@ extern \"C\" {}\n \n #[cfg(all(\n     target_os = \"linux\",\n-    target_env = \"gnu\",\n+    any(target_env = \"gnu\", target_env = \"uclibc\"),\n     not(feature = \"llvm-libunwind\"),\n     feature = \"system-llvm-libunwind\"\n ))]"}, {"sha": "bbeab598f2292870baca8e070388fd632881b592", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/11381a5a3a84ab1915d8c2a7ce369d4517c662a0/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=11381a5a3a84ab1915d8c2a7ce369d4517c662a0", "patch": "@@ -220,6 +220,7 @@ target | std | host | notes\n `armv6-unknown-netbsd-eabihf` | ? |  |\n `armv6k-nintendo-3ds` | * |  | ARMv6K Nintendo 3DS, Horizon (Requires devkitARM toolchain)\n `armv7-apple-ios` | \u2713 |  | ARMv7 iOS, Cortex-a8\n+`armv7-unknown-linux-uclibceabihf` | \u2713 | ? | ARMv7 Linux uClibc\n `armv7-unknown-freebsd` | \u2713 | \u2713 | ARMv7 FreeBSD\n `armv7-unknown-netbsd-eabihf` | \u2713 | \u2713 |\n `armv7-wrs-vxworks-eabihf` | ? |  |"}]}