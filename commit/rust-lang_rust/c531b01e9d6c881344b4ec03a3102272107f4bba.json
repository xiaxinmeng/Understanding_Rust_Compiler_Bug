{"sha": "c531b01e9d6c881344b4ec03a3102272107f4bba", "node_id": "C_kwDOAAsO6NoAKGM1MzFiMDFlOWQ2Yzg4MTM0NGI0ZWMwM2EzMTAyMjcyMTA3ZjRiYmE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-01T11:00:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-01T11:00:43Z"}, "message": "Rollup merge of #94359 - tmiasko:legacy-verbose-const, r=petrochenkov\n\nFix inconsistent symbol mangling of integers constants with -Zverbose\n\nThe `PrettyPrinter` changes formatting of array size and integer\nconstants based on `-Zverbose`, so its implementation cannot be used in\nlegacy symbol mangling.\n\nExample symbol demangling before changes:\n\n```console\n$ cat a.rs\npub struct A<T>(T);\nimpl A<[u8; 128]> { pub fn f() {} }\n$ rustc --crate-type=lib a.rs -Zverbose=n && nm -C ./liba.rlib\n00000000 T a::A<[u8; 128]>::f\n$ rustc --crate-type=lib a.rs -Zverbose=y && nm -C ./liba.rlib\n00000000 T a::A<[u8; Const { ty. usize, val. Value(Scalar(0x0000000000000080)) }]>::f\n```", "tree": {"sha": "93a3343ab2198ca0f0bceed26942448edea99889", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93a3343ab2198ca0f0bceed26942448edea99889"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c531b01e9d6c881344b4ec03a3102272107f4bba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiHfzbCRBK7hj4Ov3rIwAA/GYIAEbuK69ePYAaiTK2QPE0Smkr\ngUI+c/AGEu6A66Kunm0PRWxWP8s6VMC9UfB6QxX1fmOrCEdjEtnxa7l8vu4s9fdb\nWDV5hmLvNE2bp9wM9Dqj4ke8jBnNf1CPSGAMagtdTKITI/vuQb80ZcGxXnOy6YcK\nN4S85EuLGvodLUx21cXTj90YHTIYs3ZkdnNdCVAt7xxgTTKfiljcYaYPVA9IUMhR\nYbarB8/KwmG9kmiQ3Yaw6yHFfLH3pySR7teFN+GpKYq3OQb7b9RMDuKAjgCTG8EF\nQ/P+gqdSo6ZHNl/fY0vOlWLuFE/hV3aMRu1HUT3ds4QTw7rRnagNdDmZ14lY9zk=\n=Swj8\n-----END PGP SIGNATURE-----\n", "payload": "tree 93a3343ab2198ca0f0bceed26942448edea99889\nparent 6e5a6ffb14fc47051b0a23410c681ad6e4af045f\nparent 99a77798d3b78f3ce4e92ac6768110682ec8b664\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1646132443 +0100\ncommitter GitHub <noreply@github.com> 1646132443 +0100\n\nRollup merge of #94359 - tmiasko:legacy-verbose-const, r=petrochenkov\n\nFix inconsistent symbol mangling of integers constants with -Zverbose\n\nThe `PrettyPrinter` changes formatting of array size and integer\nconstants based on `-Zverbose`, so its implementation cannot be used in\nlegacy symbol mangling.\n\nExample symbol demangling before changes:\n\n```console\n$ cat a.rs\npub struct A<T>(T);\nimpl A<[u8; 128]> { pub fn f() {} }\n$ rustc --crate-type=lib a.rs -Zverbose=n && nm -C ./liba.rlib\n00000000 T a::A<[u8; 128]>::f\n$ rustc --crate-type=lib a.rs -Zverbose=y && nm -C ./liba.rlib\n00000000 T a::A<[u8; Const { ty. usize, val. Value(Scalar(0x0000000000000080)) }]>::f\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c531b01e9d6c881344b4ec03a3102272107f4bba", "html_url": "https://github.com/rust-lang/rust/commit/c531b01e9d6c881344b4ec03a3102272107f4bba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c531b01e9d6c881344b4ec03a3102272107f4bba/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e5a6ffb14fc47051b0a23410c681ad6e4af045f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e5a6ffb14fc47051b0a23410c681ad6e4af045f", "html_url": "https://github.com/rust-lang/rust/commit/6e5a6ffb14fc47051b0a23410c681ad6e4af045f"}, {"sha": "99a77798d3b78f3ce4e92ac6768110682ec8b664", "url": "https://api.github.com/repos/rust-lang/rust/commits/99a77798d3b78f3ce4e92ac6768110682ec8b664", "html_url": "https://github.com/rust-lang/rust/commit/99a77798d3b78f3ce4e92ac6768110682ec8b664"}], "stats": {"total": 1438, "additions": 1337, "deletions": 101}, "files": [{"sha": "6e526bf8fc77a697635ec384017a5dcad38b735e", "filename": "compiler/rustc_symbol_mangling/src/legacy.rs", "status": "modified", "additions": 33, "deletions": 5, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c531b01e9d6c881344b4ec03a3102272107f4bba/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c531b01e9d6c881344b4ec03a3102272107f4bba/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs?ref=c531b01e9d6c881344b4ec03a3102272107f4bba", "patch": "@@ -216,14 +216,32 @@ impl<'tcx> Printer<'tcx> for &mut SymbolPrinter<'tcx> {\n         Ok(self)\n     }\n \n-    fn print_type(self, ty: Ty<'tcx>) -> Result<Self::Type, Self::Error> {\n+    fn print_type(mut self, ty: Ty<'tcx>) -> Result<Self::Type, Self::Error> {\n         match *ty.kind() {\n             // Print all nominal types as paths (unlike `pretty_print_type`).\n             ty::FnDef(def_id, substs)\n             | ty::Opaque(def_id, substs)\n             | ty::Projection(ty::ProjectionTy { item_def_id: def_id, substs })\n             | ty::Closure(def_id, substs)\n             | ty::Generator(def_id, substs, _) => self.print_def_path(def_id, substs),\n+\n+            // The `pretty_print_type` formatting of array size depends on\n+            // -Zverbose flag, so we cannot reuse it here.\n+            ty::Array(ty, size) => {\n+                self.write_str(\"[\")?;\n+                self = self.print_type(ty)?;\n+                self.write_str(\"; \")?;\n+                if let Some(size) = size.val().try_to_bits(self.tcx().data_layout.pointer_size) {\n+                    write!(self, \"{}\", size)?\n+                } else if let ty::ConstKind::Param(param) = size.val() {\n+                    self = param.print(self)?\n+                } else {\n+                    self.write_str(\"_\")?\n+                }\n+                self.write_str(\"]\")?;\n+                Ok(self)\n+            }\n+\n             _ => self.pretty_print_type(ty),\n         }\n     }\n@@ -245,12 +263,22 @@ impl<'tcx> Printer<'tcx> for &mut SymbolPrinter<'tcx> {\n \n     fn print_const(self, ct: ty::Const<'tcx>) -> Result<Self::Const, Self::Error> {\n         // only print integers\n-        if let ty::ConstKind::Value(ConstValue::Scalar(Scalar::Int { .. })) = ct.val() {\n-            if ct.ty().is_integral() {\n-                return self.pretty_print_const(ct, true);\n+        match (ct.val(), ct.ty().kind()) {\n+            (\n+                ty::ConstKind::Value(ConstValue::Scalar(Scalar::Int(scalar))),\n+                ty::Int(_) | ty::Uint(_),\n+            ) => {\n+                // The `pretty_print_const` formatting depends on -Zverbose\n+                // flag, so we cannot reuse it here.\n+                let signed = matches!(ct.ty().kind(), ty::Int(_));\n+                write!(\n+                    self,\n+                    \"{:#?}\",\n+                    ty::ConstInt::new(scalar, signed, ct.ty().is_ptr_sized_integral())\n+                )?;\n             }\n+            _ => self.write_str(\"_\")?,\n         }\n-        self.write_str(\"_\")?;\n         Ok(self)\n     }\n "}, {"sha": "bebbb7aac981c3472edf4fad9f8cc3a97345836f", "filename": "src/test/ui/symbol-names/const-generics-demangling.legacy.stderr", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/c531b01e9d6c881344b4ec03a3102272107f4bba/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.legacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c531b01e9d6c881344b4ec03a3102272107f4bba/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.legacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.legacy.stderr?ref=c531b01e9d6c881344b4ec03a3102272107f4bba", "patch": "@@ -0,0 +1,74 @@\n+error: symbol-name(_ZN1c21Unsigned$LT$11_u8$GT$1f17h[HASH]E)\n+  --> $DIR/const-generics-demangling.rs:13:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(c::Unsigned<11_u8>::f::h[HASH])\n+  --> $DIR/const-generics-demangling.rs:13:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(c::Unsigned<11_u8>::f)\n+  --> $DIR/const-generics-demangling.rs:13:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1c22Signed$LT$.152_i16$GT$1f17h[HASH]E)\n+  --> $DIR/const-generics-demangling.rs:26:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(c::Signed<.152_i16>::f::h[HASH])\n+  --> $DIR/const-generics-demangling.rs:26:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(c::Signed<.152_i16>::f)\n+  --> $DIR/const-generics-demangling.rs:26:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1c13Bool$LT$_$GT$1f17h[HASH]E)\n+  --> $DIR/const-generics-demangling.rs:39:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(c::Bool<_>::f::h[HASH])\n+  --> $DIR/const-generics-demangling.rs:39:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(c::Bool<_>::f)\n+  --> $DIR/const-generics-demangling.rs:39:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1c13Char$LT$_$GT$1f17h[HASH]E)\n+  --> $DIR/const-generics-demangling.rs:52:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(c::Char<_>::f::h[HASH])\n+  --> $DIR/const-generics-demangling.rs:52:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(c::Char<_>::f)\n+  --> $DIR/const-generics-demangling.rs:52:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 12 previous errors\n+"}, {"sha": "4a04eca67fd35f191970cb584435aee5bebd3dc5", "filename": "src/test/ui/symbol-names/const-generics-demangling.rs", "status": "modified", "additions": 46, "deletions": 22, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/c531b01e9d6c881344b4ec03a3102272107f4bba/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c531b01e9d6c881344b4ec03a3102272107f4bba/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.rs?ref=c531b01e9d6c881344b4ec03a3102272107f4bba", "patch": "@@ -1,38 +1,62 @@\n // build-fail\n-// compile-flags: -C symbol-mangling-version=v0 --crate-name=c\n-// normalize-stderr-test: \"c\\[.*?\\]\" -> \"c[HASH]\"\n+// revisions: legacy v0\n+// compile-flags: --crate-name=c\n+//[legacy]compile-flags: -C symbol-mangling-version=legacy -Z unstable-options\n+//    [v0]compile-flags: -C symbol-mangling-version=v0\n+//[legacy]normalize-stderr-test: \"h[[:xdigit:]]{16}\" -> \"h[HASH]\"\n+//    [v0]normalize-stderr-test: \"c\\[.*?\\]\" -> \"c[HASH]\"\n #![feature(rustc_attrs)]\n \n pub struct Unsigned<const F: u8>;\n \n-#[rustc_symbol_name]\n-//~^ ERROR symbol-name(_RMCs\n-//~| ERROR demangling(<c[\n-//~| ERROR demangling-alt(<c::Unsigned<11>>)\n-impl Unsigned<11> {}\n+impl Unsigned<11> {\n+    #[rustc_symbol_name]\n+    //[v0]~^ ERROR symbol-name(_RNvMCs\n+    //[v0]~| ERROR demangling(<c[\n+    //[v0]~| ERROR demangling-alt(<c::Unsigned<11>>::f)\n+    //[legacy]~^^^^ ERROR symbol-name(_ZN1c21Unsigned$LT$11_u8$GT$\n+    //[legacy]~|    ERROR demangling(c::Unsigned<11_u8>::f::\n+    //[legacy]~|    ERROR demangling-alt(c::Unsigned<11_u8>::f)\n+    fn f() {}\n+}\n \n pub struct Signed<const F: i16>;\n \n-#[rustc_symbol_name]\n-//~^ ERROR symbol-name(_RMs_Cs\n-//~| ERROR demangling(<c[\n-//~| ERROR demangling-alt(<c::Signed<-152>>)\n-impl Signed<-152> {}\n+impl Signed<-152> {\n+    #[rustc_symbol_name]\n+    //[v0]~^ ERROR symbol-name(_RNvMs_Cs\n+    //[v0]~| ERROR demangling(<c[\n+    //[v0]~| ERROR demangling-alt(<c::Signed<-152>>::f)\n+    //[legacy]~^^^^ ERROR symbol-name(_ZN1c22Signed$LT$.152_i16$GT$\n+    //[legacy]~|    ERROR demangling(c::Signed<.152_i16>::f::\n+    //[legacy]~|    ERROR demangling-alt(c::Signed<.152_i16>::f)\n+    fn f() {}\n+}\n \n pub struct Bool<const F: bool>;\n \n-#[rustc_symbol_name]\n-//~^ ERROR symbol-name(_RMs0_Cs\n-//~| ERROR demangling(<c[\n-//~| ERROR demangling-alt(<c::Bool<true>>)\n-impl Bool<true> {}\n+impl Bool<true> {\n+    #[rustc_symbol_name]\n+    //[v0]~^ ERROR symbol-name(_RNvMs0_Cs\n+    //[v0]~| ERROR demangling(<c[\n+    //[v0]~| ERROR demangling-alt(<c::Bool<true>>::f)\n+    //[legacy]~^^^^ ERROR symbol-name(_ZN1c13Bool$LT$_$GT$\n+    //[legacy]~|    ERROR demangling(c::Bool<_>::f::\n+    //[legacy]~|    ERROR demangling-alt(c::Bool<_>::f)\n+    fn f() {}\n+}\n \n pub struct Char<const F: char>;\n \n-#[rustc_symbol_name]\n-//~^ ERROR symbol-name(_RMs1_Cs\n-//~| ERROR demangling(<c[\n-//~| ERROR demangling-alt(<c::Char<'\u2202'>>)\n-impl Char<'\u2202'> {}\n+impl Char<'\u2202'> {\n+    #[rustc_symbol_name]\n+    //[v0]~^ ERROR symbol-name(_RNvMs1_Cs\n+    //[v0]~| ERROR demangling(<c[\n+    //[v0]~| ERROR demangling-alt(<c::Char<'\u2202'>>::f)\n+    //[legacy]~^^^^ ERROR symbol-name(_ZN1c13Char$LT$_$GT$\n+    //[legacy]~|    ERROR demangling(c::Char<_>::f::\n+    //[legacy]~|    ERROR demangling-alt(c::Char<_>::f)\n+    fn f() {}\n+}\n \n fn main() {}"}, {"sha": "8aa08b8a22c47ba306c7ab02a6e192377ea5b88c", "filename": "src/test/ui/symbol-names/const-generics-demangling.stderr", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/6e5a6ffb14fc47051b0a23410c681ad6e4af045f/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6e5a6ffb14fc47051b0a23410c681ad6e4af045f/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.stderr?ref=6e5a6ffb14fc47051b0a23410c681ad6e4af045f", "patch": "@@ -1,74 +0,0 @@\n-error: symbol-name(_RMCsCRATE_HASH_1cINtB<REF>_8UnsignedKhb_E)\n-  --> $DIR/const-generics-demangling.rs:8:1\n-   |\n-LL | #[rustc_symbol_name]\n-   | ^^^^^^^^^^^^^^^^^^^^\n-\n-error: demangling(<c[HASH]::Unsigned<11u8>>)\n-  --> $DIR/const-generics-demangling.rs:8:1\n-   |\n-LL | #[rustc_symbol_name]\n-   | ^^^^^^^^^^^^^^^^^^^^\n-\n-error: demangling-alt(<c::Unsigned<11>>)\n-  --> $DIR/const-generics-demangling.rs:8:1\n-   |\n-LL | #[rustc_symbol_name]\n-   | ^^^^^^^^^^^^^^^^^^^^\n-\n-error: symbol-name(_RMs_CsCRATE_HASH_1cINtB<REF>_6SignedKsn98_E)\n-  --> $DIR/const-generics-demangling.rs:16:1\n-   |\n-LL | #[rustc_symbol_name]\n-   | ^^^^^^^^^^^^^^^^^^^^\n-\n-error: demangling(<c[HASH]::Signed<-152i16>>)\n-  --> $DIR/const-generics-demangling.rs:16:1\n-   |\n-LL | #[rustc_symbol_name]\n-   | ^^^^^^^^^^^^^^^^^^^^\n-\n-error: demangling-alt(<c::Signed<-152>>)\n-  --> $DIR/const-generics-demangling.rs:16:1\n-   |\n-LL | #[rustc_symbol_name]\n-   | ^^^^^^^^^^^^^^^^^^^^\n-\n-error: symbol-name(_RMs0_CsCRATE_HASH_1cINtB<REF>_4BoolKb1_E)\n-  --> $DIR/const-generics-demangling.rs:24:1\n-   |\n-LL | #[rustc_symbol_name]\n-   | ^^^^^^^^^^^^^^^^^^^^\n-\n-error: demangling(<c[HASH]::Bool<true>>)\n-  --> $DIR/const-generics-demangling.rs:24:1\n-   |\n-LL | #[rustc_symbol_name]\n-   | ^^^^^^^^^^^^^^^^^^^^\n-\n-error: demangling-alt(<c::Bool<true>>)\n-  --> $DIR/const-generics-demangling.rs:24:1\n-   |\n-LL | #[rustc_symbol_name]\n-   | ^^^^^^^^^^^^^^^^^^^^\n-\n-error: symbol-name(_RMs1_CsCRATE_HASH_1cINtB<REF>_4CharKc2202_E)\n-  --> $DIR/const-generics-demangling.rs:32:1\n-   |\n-LL | #[rustc_symbol_name]\n-   | ^^^^^^^^^^^^^^^^^^^^\n-\n-error: demangling(<c[HASH]::Char<'\u2202'>>)\n-  --> $DIR/const-generics-demangling.rs:32:1\n-   |\n-LL | #[rustc_symbol_name]\n-   | ^^^^^^^^^^^^^^^^^^^^\n-\n-error: demangling-alt(<c::Char<'\u2202'>>)\n-  --> $DIR/const-generics-demangling.rs:32:1\n-   |\n-LL | #[rustc_symbol_name]\n-   | ^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 12 previous errors\n-"}, {"sha": "7238a849332ad153fb73dfa0ae973a6d67cba902", "filename": "src/test/ui/symbol-names/const-generics-demangling.v0.stderr", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/c531b01e9d6c881344b4ec03a3102272107f4bba/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.v0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c531b01e9d6c881344b4ec03a3102272107f4bba/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.v0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.v0.stderr?ref=c531b01e9d6c881344b4ec03a3102272107f4bba", "patch": "@@ -0,0 +1,74 @@\n+error: symbol-name(_RNvMCsCRATE_HASH_1cINtB<REF>_8UnsignedKhb_E1f)\n+  --> $DIR/const-generics-demangling.rs:13:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(<c[HASH]::Unsigned<11u8>>::f)\n+  --> $DIR/const-generics-demangling.rs:13:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(<c::Unsigned<11>>::f)\n+  --> $DIR/const-generics-demangling.rs:13:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_RNvMs_CsCRATE_HASH_1cINtB<REF>_6SignedKsn98_E1f)\n+  --> $DIR/const-generics-demangling.rs:26:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(<c[HASH]::Signed<-152i16>>::f)\n+  --> $DIR/const-generics-demangling.rs:26:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(<c::Signed<-152>>::f)\n+  --> $DIR/const-generics-demangling.rs:26:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_RNvMs0_CsCRATE_HASH_1cINtB<REF>_4BoolKb1_E1f)\n+  --> $DIR/const-generics-demangling.rs:39:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(<c[HASH]::Bool<true>>::f)\n+  --> $DIR/const-generics-demangling.rs:39:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(<c::Bool<true>>::f)\n+  --> $DIR/const-generics-demangling.rs:39:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_RNvMs1_CsCRATE_HASH_1cINtB<REF>_4CharKc2202_E1f)\n+  --> $DIR/const-generics-demangling.rs:52:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(<c[HASH]::Char<'\u2202'>>::f)\n+  --> $DIR/const-generics-demangling.rs:52:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(<c::Char<'\u2202'>>::f)\n+  --> $DIR/const-generics-demangling.rs:52:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 12 previous errors\n+"}, {"sha": "a4984d5629f7d4f734cc46ffceb64234370f636a", "filename": "src/test/ui/symbol-names/types.legacy.stderr", "status": "added", "additions": 470, "deletions": 0, "changes": 470, "blob_url": "https://github.com/rust-lang/rust/blob/c531b01e9d6c881344b4ec03a3102272107f4bba/src%2Ftest%2Fui%2Fsymbol-names%2Ftypes.legacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c531b01e9d6c881344b4ec03a3102272107f4bba/src%2Ftest%2Fui%2Fsymbol-names%2Ftypes.legacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Ftypes.legacy.stderr?ref=c531b01e9d6c881344b4ec03a3102272107f4bba", "patch": "@@ -0,0 +1,470 @@\n+error: symbol-name(_ZN1a1b16Type$LT$bool$GT$17h[HASH]E)\n+  --> $DIR/types.rs:13:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<bool>::h[HASH])\n+  --> $DIR/types.rs:13:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<bool>)\n+  --> $DIR/types.rs:13:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b16Type$LT$char$GT$17h[HASH]E)\n+  --> $DIR/types.rs:19:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<char>::h[HASH])\n+  --> $DIR/types.rs:19:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<char>)\n+  --> $DIR/types.rs:19:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b14Type$LT$i8$GT$17h[HASH]E)\n+  --> $DIR/types.rs:25:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<i8>::h[HASH])\n+  --> $DIR/types.rs:25:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<i8>)\n+  --> $DIR/types.rs:25:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$i16$GT$17h[HASH]E)\n+  --> $DIR/types.rs:31:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<i16>::h[HASH])\n+  --> $DIR/types.rs:31:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<i16>)\n+  --> $DIR/types.rs:31:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$i32$GT$17h[HASH]E)\n+  --> $DIR/types.rs:37:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<i32>::h[HASH])\n+  --> $DIR/types.rs:37:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<i32>)\n+  --> $DIR/types.rs:37:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$i64$GT$17h[HASH]E)\n+  --> $DIR/types.rs:43:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<i64>::h[HASH])\n+  --> $DIR/types.rs:43:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<i64>)\n+  --> $DIR/types.rs:43:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b14Type$LT$u8$GT$17h[HASH]E)\n+  --> $DIR/types.rs:49:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<u8>::h[HASH])\n+  --> $DIR/types.rs:49:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<u8>)\n+  --> $DIR/types.rs:49:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$u16$GT$17h[HASH]E)\n+  --> $DIR/types.rs:55:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<u16>::h[HASH])\n+  --> $DIR/types.rs:55:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<u16>)\n+  --> $DIR/types.rs:55:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$u32$GT$17h[HASH]E)\n+  --> $DIR/types.rs:61:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<u32>::h[HASH])\n+  --> $DIR/types.rs:61:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<u32>)\n+  --> $DIR/types.rs:61:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$u64$GT$17h[HASH]E)\n+  --> $DIR/types.rs:67:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<u64>::h[HASH])\n+  --> $DIR/types.rs:67:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<u64>)\n+  --> $DIR/types.rs:67:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$f32$GT$17h[HASH]E)\n+  --> $DIR/types.rs:73:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<f32>::h[HASH])\n+  --> $DIR/types.rs:73:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<f32>)\n+  --> $DIR/types.rs:73:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$f64$GT$17h[HASH]E)\n+  --> $DIR/types.rs:79:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<f64>::h[HASH])\n+  --> $DIR/types.rs:79:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<f64>)\n+  --> $DIR/types.rs:79:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$str$GT$17h[HASH]E)\n+  --> $DIR/types.rs:85:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<str>::h[HASH])\n+  --> $DIR/types.rs:85:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<str>)\n+  --> $DIR/types.rs:85:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b17Type$LT$$u21$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:91:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<!>::h[HASH])\n+  --> $DIR/types.rs:91:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<!>)\n+  --> $DIR/types.rs:91:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b20Type$LT$$LP$$RP$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:97:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<()>::h[HASH])\n+  --> $DIR/types.rs:97:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<()>)\n+  --> $DIR/types.rs:97:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b25Type$LT$$LP$u8$C$$RP$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:103:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<(u8,)>::h[HASH])\n+  --> $DIR/types.rs:103:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<(u8,)>)\n+  --> $DIR/types.rs:103:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b28Type$LT$$LP$u8$C$u16$RP$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:109:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<(u8,u16)>::h[HASH])\n+  --> $DIR/types.rs:109:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<(u8,u16)>)\n+  --> $DIR/types.rs:109:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b34Type$LT$$LP$u8$C$u16$C$u32$RP$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:115:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<(u8,u16,u32)>::h[HASH])\n+  --> $DIR/types.rs:115:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<(u8,u16,u32)>)\n+  --> $DIR/types.rs:115:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b28Type$LT$$BP$const$u20$u8$GT$17h[HASH]E)\n+  --> $DIR/types.rs:121:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<*const u8>::h[HASH])\n+  --> $DIR/types.rs:121:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<*const u8>)\n+  --> $DIR/types.rs:121:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b26Type$LT$$BP$mut$u20$u8$GT$17h[HASH]E)\n+  --> $DIR/types.rs:127:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<*mut u8>::h[HASH])\n+  --> $DIR/types.rs:127:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<*mut u8>)\n+  --> $DIR/types.rs:127:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b19Type$LT$$RF$str$GT$17h[HASH]E)\n+  --> $DIR/types.rs:133:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<&str>::h[HASH])\n+  --> $DIR/types.rs:133:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<&str>)\n+  --> $DIR/types.rs:133:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b27Type$LT$$RF$mut$u20$str$GT$17h[HASH]E)\n+  --> $DIR/types.rs:139:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<&mut str>::h[HASH])\n+  --> $DIR/types.rs:139:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<&mut str>)\n+  --> $DIR/types.rs:139:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b35Type$LT$$u5b$u8$u3b$$u20$0$u5d$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:145:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<[u8; 0]>::h[HASH])\n+  --> $DIR/types.rs:145:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<[u8; 0]>)\n+  --> $DIR/types.rs:145:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b22Type$LT$fn$LP$$RP$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:151:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<fn()>::h[HASH])\n+  --> $DIR/types.rs:151:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<fn()>)\n+  --> $DIR/types.rs:151:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b60Type$LT$unsafe$u20$extern$u20$$u22$C$u22$$u20$fn$LP$$RP$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:157:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<unsafe extern \"C\" fn()>::h[HASH])\n+  --> $DIR/types.rs:157:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<unsafe extern \"C\" fn()>)\n+  --> $DIR/types.rs:157:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b34Type$LT$$u5b$T$u3b$$u20$N$u5d$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:163:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<[T; N]>::h[HASH])\n+  --> $DIR/types.rs:163:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<[T; N]>)\n+  --> $DIR/types.rs:163:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 78 previous errors\n+"}, {"sha": "0ae699c93c2de67d3fa189850ee65e1a65449a5b", "filename": "src/test/ui/symbol-names/types.rs", "status": "added", "additions": 170, "deletions": 0, "changes": 170, "blob_url": "https://github.com/rust-lang/rust/blob/c531b01e9d6c881344b4ec03a3102272107f4bba/src%2Ftest%2Fui%2Fsymbol-names%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c531b01e9d6c881344b4ec03a3102272107f4bba/src%2Ftest%2Fui%2Fsymbol-names%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Ftypes.rs?ref=c531b01e9d6c881344b4ec03a3102272107f4bba", "patch": "@@ -0,0 +1,170 @@\n+// build-fail\n+// revisions: legacy verbose-legacy\n+// compile-flags: --crate-name=a -C symbol-mangling-version=legacy -Z unstable-options\n+//[verbose-legacy]compile-flags: -Zverbose\n+// normalize-stderr-test: \"h[[:xdigit:]]{16}\" -> \"h[HASH]\"\n+\n+#![feature(never_type)]\n+#![feature(rustc_attrs)]\n+\n+pub fn b() {\n+    struct Type<T: ?Sized>(T);\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b16Type$LT$bool$GT$\n+    //~| ERROR demangling(a::b::Type<bool>::\n+    //~| ERROR demangling-alt(a::b::Type<bool>)\n+    impl Type<bool> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b16Type$LT$char$GT$\n+    //~| ERROR demangling(a::b::Type<char>::\n+    //~| ERROR demangling-alt(a::b::Type<char>)\n+    impl Type<char> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b14Type$LT$i8$GT$\n+    //~| ERROR demangling(a::b::Type<i8>::\n+    //~| ERROR demangling-alt(a::b::Type<i8>)\n+    impl Type<i8> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b15Type$LT$i16$GT$\n+    //~| ERROR demangling(a::b::Type<i16>::\n+    //~| ERROR demangling-alt(a::b::Type<i16>)\n+    impl Type<i16> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b15Type$LT$i32$GT$\n+    //~| ERROR demangling(a::b::Type<i32>::\n+    //~| ERROR demangling-alt(a::b::Type<i32>)\n+    impl Type<i32> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b15Type$LT$i64$GT$\n+    //~| ERROR demangling(a::b::Type<i64>::\n+    //~| ERROR demangling-alt(a::b::Type<i64>)\n+    impl Type<i64> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b14Type$LT$u8$GT$\n+    //~| ERROR demangling(a::b::Type<u8>::\n+    //~| ERROR demangling-alt(a::b::Type<u8>)\n+    impl Type<u8> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b15Type$LT$u16$GT$\n+    //~| ERROR demangling(a::b::Type<u16>::\n+    //~| ERROR demangling-alt(a::b::Type<u16>)\n+    impl Type<u16> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b15Type$LT$u32$GT$\n+    //~| ERROR demangling(a::b::Type<u32>::\n+    //~| ERROR demangling-alt(a::b::Type<u32>)\n+    impl Type<u32> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b15Type$LT$u64$GT$\n+    //~| ERROR demangling(a::b::Type<u64>::\n+    //~| ERROR demangling-alt(a::b::Type<u64>)\n+    impl Type<u64> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b15Type$LT$f32$GT$\n+    //~| ERROR demangling(a::b::Type<f32>::\n+    //~| ERROR demangling-alt(a::b::Type<f32>)\n+    impl Type<f32> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b15Type$LT$f64$GT$\n+    //~| ERROR demangling(a::b::Type<f64>::\n+    //~| ERROR demangling-alt(a::b::Type<f64>)\n+    impl Type<f64> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b15Type$LT$str$GT$\n+    //~| ERROR demangling(a::b::Type<str>::\n+    //~| ERROR demangling-alt(a::b::Type<str>)\n+    impl Type<str> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b17Type$LT$$u21$$GT$\n+    //~| ERROR demangling(a::b::Type<!>::\n+    //~| ERROR demangling-alt(a::b::Type<!>)\n+    impl Type<!> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b20Type$LT$$LP$$RP$$GT\n+    //~| ERROR demangling(a::b::Type<()>::\n+    //~| ERROR demangling-alt(a::b::Type<()>)\n+    impl Type<()> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b25Type$LT$$LP$u8$C$$RP$$GT$\n+    //~| ERROR demangling(a::b::Type<(u8,)>::\n+    //~| ERROR demangling-alt(a::b::Type<(u8,)>)\n+    impl Type<(u8,)> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b28Type$LT$$LP$u8$C$u16$RP$$GT$\n+    //~| ERROR demangling(a::b::Type<(u8,u16)>::\n+    //~| ERROR demangling-alt(a::b::Type<(u8,u16)>)\n+    impl Type<(u8,u16)> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b34Type$LT$$LP$u8$C$u16$C$u32$RP$$GT$\n+    //~| ERROR demangling(a::b::Type<(u8,u16,u32)>::\n+    //~| ERROR demangling-alt(a::b::Type<(u8,u16,u32)>)\n+    impl Type<(u8,u16,u32)> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b28Type$LT$$BP$const$u20$u8$GT$\n+    //~| ERROR demangling(a::b::Type<*const u8>::\n+    //~| ERROR demangling-alt(a::b::Type<*const u8>)\n+    impl Type<*const u8> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b26Type$LT$$BP$mut$u20$u8$GT$\n+    //~| ERROR demangling(a::b::Type<*mut u8>::\n+    //~| ERROR demangling-alt(a::b::Type<*mut u8>)\n+    impl Type<*mut u8> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b19Type$LT$$RF$str$GT$\n+    //~| ERROR demangling(a::b::Type<&str>::\n+    //~| ERROR demangling-alt(a::b::Type<&str>)\n+    impl Type<&str> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b27Type$LT$$RF$mut$u20$str$GT$\n+    //~| ERROR demangling(a::b::Type<&mut str>::\n+    //~| ERROR demangling-alt(a::b::Type<&mut str>)\n+    impl Type<&mut str> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b35Type$LT$$u5b$u8$u3b$$u20$0$u5d$$GT$\n+    //~| ERROR demangling(a::b::Type<[u8; 0]>::\n+    //~| ERROR demangling-alt(a::b::Type<[u8; 0]>)\n+    impl Type<[u8; 0]> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b22Type$LT$fn$LP$$RP$$GT$\n+    //~| ERROR demangling(a::b::Type<fn()>::\n+    //~| ERROR demangling-alt(a::b::Type<fn()>)\n+    impl Type<fn()> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b60Type$LT$unsafe$u20$extern$u20$$u22$C$u22$$u20$fn$LP$$RP$$GT$\n+    //~| ERROR demangling(a::b::Type<unsafe extern \"C\" fn()>::\n+    //~| ERROR demangling-alt(a::b::Type<unsafe extern \"C\" fn()>)\n+    impl Type<unsafe extern \"C\" fn()> {}\n+\n+    #[rustc_symbol_name]\n+    //~^ ERROR symbol-name(_ZN1a1b34Type$LT$$u5b$T$u3b$$u20$N$u5d$$GT$\n+    //~| ERROR demangling(a::b::Type<[T; N]>::\n+    //~| ERROR demangling-alt(a::b::Type<[T; N]>)\n+    impl<const N: usize, T> Type<[T; N]> {}\n+}\n+\n+fn main() {}"}, {"sha": "a4984d5629f7d4f734cc46ffceb64234370f636a", "filename": "src/test/ui/symbol-names/types.verbose-legacy.stderr", "status": "added", "additions": 470, "deletions": 0, "changes": 470, "blob_url": "https://github.com/rust-lang/rust/blob/c531b01e9d6c881344b4ec03a3102272107f4bba/src%2Ftest%2Fui%2Fsymbol-names%2Ftypes.verbose-legacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c531b01e9d6c881344b4ec03a3102272107f4bba/src%2Ftest%2Fui%2Fsymbol-names%2Ftypes.verbose-legacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Ftypes.verbose-legacy.stderr?ref=c531b01e9d6c881344b4ec03a3102272107f4bba", "patch": "@@ -0,0 +1,470 @@\n+error: symbol-name(_ZN1a1b16Type$LT$bool$GT$17h[HASH]E)\n+  --> $DIR/types.rs:13:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<bool>::h[HASH])\n+  --> $DIR/types.rs:13:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<bool>)\n+  --> $DIR/types.rs:13:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b16Type$LT$char$GT$17h[HASH]E)\n+  --> $DIR/types.rs:19:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<char>::h[HASH])\n+  --> $DIR/types.rs:19:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<char>)\n+  --> $DIR/types.rs:19:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b14Type$LT$i8$GT$17h[HASH]E)\n+  --> $DIR/types.rs:25:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<i8>::h[HASH])\n+  --> $DIR/types.rs:25:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<i8>)\n+  --> $DIR/types.rs:25:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$i16$GT$17h[HASH]E)\n+  --> $DIR/types.rs:31:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<i16>::h[HASH])\n+  --> $DIR/types.rs:31:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<i16>)\n+  --> $DIR/types.rs:31:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$i32$GT$17h[HASH]E)\n+  --> $DIR/types.rs:37:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<i32>::h[HASH])\n+  --> $DIR/types.rs:37:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<i32>)\n+  --> $DIR/types.rs:37:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$i64$GT$17h[HASH]E)\n+  --> $DIR/types.rs:43:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<i64>::h[HASH])\n+  --> $DIR/types.rs:43:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<i64>)\n+  --> $DIR/types.rs:43:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b14Type$LT$u8$GT$17h[HASH]E)\n+  --> $DIR/types.rs:49:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<u8>::h[HASH])\n+  --> $DIR/types.rs:49:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<u8>)\n+  --> $DIR/types.rs:49:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$u16$GT$17h[HASH]E)\n+  --> $DIR/types.rs:55:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<u16>::h[HASH])\n+  --> $DIR/types.rs:55:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<u16>)\n+  --> $DIR/types.rs:55:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$u32$GT$17h[HASH]E)\n+  --> $DIR/types.rs:61:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<u32>::h[HASH])\n+  --> $DIR/types.rs:61:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<u32>)\n+  --> $DIR/types.rs:61:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$u64$GT$17h[HASH]E)\n+  --> $DIR/types.rs:67:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<u64>::h[HASH])\n+  --> $DIR/types.rs:67:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<u64>)\n+  --> $DIR/types.rs:67:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$f32$GT$17h[HASH]E)\n+  --> $DIR/types.rs:73:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<f32>::h[HASH])\n+  --> $DIR/types.rs:73:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<f32>)\n+  --> $DIR/types.rs:73:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$f64$GT$17h[HASH]E)\n+  --> $DIR/types.rs:79:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<f64>::h[HASH])\n+  --> $DIR/types.rs:79:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<f64>)\n+  --> $DIR/types.rs:79:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b15Type$LT$str$GT$17h[HASH]E)\n+  --> $DIR/types.rs:85:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<str>::h[HASH])\n+  --> $DIR/types.rs:85:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<str>)\n+  --> $DIR/types.rs:85:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b17Type$LT$$u21$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:91:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<!>::h[HASH])\n+  --> $DIR/types.rs:91:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<!>)\n+  --> $DIR/types.rs:91:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b20Type$LT$$LP$$RP$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:97:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<()>::h[HASH])\n+  --> $DIR/types.rs:97:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<()>)\n+  --> $DIR/types.rs:97:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b25Type$LT$$LP$u8$C$$RP$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:103:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<(u8,)>::h[HASH])\n+  --> $DIR/types.rs:103:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<(u8,)>)\n+  --> $DIR/types.rs:103:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b28Type$LT$$LP$u8$C$u16$RP$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:109:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<(u8,u16)>::h[HASH])\n+  --> $DIR/types.rs:109:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<(u8,u16)>)\n+  --> $DIR/types.rs:109:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b34Type$LT$$LP$u8$C$u16$C$u32$RP$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:115:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<(u8,u16,u32)>::h[HASH])\n+  --> $DIR/types.rs:115:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<(u8,u16,u32)>)\n+  --> $DIR/types.rs:115:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b28Type$LT$$BP$const$u20$u8$GT$17h[HASH]E)\n+  --> $DIR/types.rs:121:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<*const u8>::h[HASH])\n+  --> $DIR/types.rs:121:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<*const u8>)\n+  --> $DIR/types.rs:121:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b26Type$LT$$BP$mut$u20$u8$GT$17h[HASH]E)\n+  --> $DIR/types.rs:127:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<*mut u8>::h[HASH])\n+  --> $DIR/types.rs:127:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<*mut u8>)\n+  --> $DIR/types.rs:127:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b19Type$LT$$RF$str$GT$17h[HASH]E)\n+  --> $DIR/types.rs:133:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<&str>::h[HASH])\n+  --> $DIR/types.rs:133:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<&str>)\n+  --> $DIR/types.rs:133:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b27Type$LT$$RF$mut$u20$str$GT$17h[HASH]E)\n+  --> $DIR/types.rs:139:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<&mut str>::h[HASH])\n+  --> $DIR/types.rs:139:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<&mut str>)\n+  --> $DIR/types.rs:139:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b35Type$LT$$u5b$u8$u3b$$u20$0$u5d$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:145:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<[u8; 0]>::h[HASH])\n+  --> $DIR/types.rs:145:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<[u8; 0]>)\n+  --> $DIR/types.rs:145:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b22Type$LT$fn$LP$$RP$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:151:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<fn()>::h[HASH])\n+  --> $DIR/types.rs:151:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<fn()>)\n+  --> $DIR/types.rs:151:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b60Type$LT$unsafe$u20$extern$u20$$u22$C$u22$$u20$fn$LP$$RP$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:157:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<unsafe extern \"C\" fn()>::h[HASH])\n+  --> $DIR/types.rs:157:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<unsafe extern \"C\" fn()>)\n+  --> $DIR/types.rs:157:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_ZN1a1b34Type$LT$$u5b$T$u3b$$u20$N$u5d$$GT$17h[HASH]E)\n+  --> $DIR/types.rs:163:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(a::b::Type<[T; N]>::h[HASH])\n+  --> $DIR/types.rs:163:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(a::b::Type<[T; N]>)\n+  --> $DIR/types.rs:163:5\n+   |\n+LL |     #[rustc_symbol_name]\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 78 previous errors\n+"}]}