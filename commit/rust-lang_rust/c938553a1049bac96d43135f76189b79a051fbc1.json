{"sha": "c938553a1049bac96d43135f76189b79a051fbc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5Mzg1NTNhMTA0OWJhYzk2ZDQzMTM1Zjc2MTg5Yjc5YTA1MWZiYzE=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-10-19T03:45:11Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-10-19T03:45:11Z"}, "message": "Add test for 39bb1254d.", "tree": {"sha": "062386a1a89756fb39a570225f7c2622300d7ebb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/062386a1a89756fb39a570225f7c2622300d7ebb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c938553a1049bac96d43135f76189b79a051fbc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c938553a1049bac96d43135f76189b79a051fbc1", "html_url": "https://github.com/rust-lang/rust/commit/c938553a1049bac96d43135f76189b79a051fbc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c938553a1049bac96d43135f76189b79a051fbc1/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39bb1254d1eaf74f45a4e741097e33fc942168d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/39bb1254d1eaf74f45a4e741097e33fc942168d5", "html_url": "https://github.com/rust-lang/rust/commit/39bb1254d1eaf74f45a4e741097e33fc942168d5"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "a4ecf1e635d24d99fc5f967b3300c27360712819", "filename": "tests/run-pass/observed_local_mut.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c938553a1049bac96d43135f76189b79a051fbc1/tests%2Frun-pass%2Fobserved_local_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c938553a1049bac96d43135f76189b79a051fbc1/tests%2Frun-pass%2Fobserved_local_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fobserved_local_mut.rs?ref=c938553a1049bac96d43135f76189b79a051fbc1", "patch": "@@ -0,0 +1,21 @@\n+// This test is intended to guard against the problem described in commit\n+// 39bb1254d1eaf74f45a4e741097e33fc942168d5.\n+//\n+// As written, it might be considered UB in compiled Rust, but of course Miri gives it a safe,\n+// deterministic behaviour (one that might not correspond with how an eventual Rust spec would\n+// defined this).\n+//\n+// An alternative way to write the test without `unsafe` would be to use `Cell<i32>`, but it would\n+// only surface the bug described by the above commit if `Cell<i32>` on the stack got represented\n+// as a primitive `PrimVal::I32` which is not yet the case.\n+\n+fn main() {\n+    let mut x = 0;\n+    let y: *const i32 = &x;\n+    x = 1;\n+\n+    // When the described bug is in place, this results in `0`, not observing the `x = 1` line.\n+    assert_eq!(unsafe { *y }, 1);\n+\n+    assert_eq!(x, 1);\n+}"}]}