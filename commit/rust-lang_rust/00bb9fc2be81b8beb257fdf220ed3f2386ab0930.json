{"sha": "00bb9fc2be81b8beb257fdf220ed3f2386ab0930", "node_id": "C_kwDOAAsO6NoAKDAwYmI5ZmMyYmU4MWI4YmViMjU3ZmRmMjIwZWQzZjIzODZhYjA5MzA", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2022-09-19T18:10:12Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2022-09-19T18:10:12Z"}, "message": "Rename LLVM `optimize` functions", "tree": {"sha": "f41c791c6737188ce3dab07d2e1afeef5b91257c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f41c791c6737188ce3dab07d2e1afeef5b91257c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00bb9fc2be81b8beb257fdf220ed3f2386ab0930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00bb9fc2be81b8beb257fdf220ed3f2386ab0930", "html_url": "https://github.com/rust-lang/rust/commit/00bb9fc2be81b8beb257fdf220ed3f2386ab0930", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00bb9fc2be81b8beb257fdf220ed3f2386ab0930/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29124c7fd0c24a439de86bb1d9791dc65adc8f47", "url": "https://api.github.com/repos/rust-lang/rust/commits/29124c7fd0c24a439de86bb1d9791dc65adc8f47", "html_url": "https://github.com/rust-lang/rust/commit/29124c7fd0c24a439de86bb1d9791dc65adc8f47"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "2049422b79a304c523d933f85d2af47ad1e74e2b", "filename": "compiler/rustc_codegen_llvm/src/back/lto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00bb9fc2be81b8beb257fdf220ed3f2386ab0930/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00bb9fc2be81b8beb257fdf220ed3f2386ab0930/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs?ref=00bb9fc2be81b8beb257fdf220ed3f2386ab0930", "patch": "@@ -597,7 +597,7 @@ pub(crate) fn run_pass_manager(\n         }\n         let opt_stage = if thin { llvm::OptStage::ThinLTO } else { llvm::OptStage::FatLTO };\n         let opt_level = config.opt_level.unwrap_or(config::OptLevel::No);\n-        write::optimize(cgcx, diag_handler, module, config, opt_level, opt_stage)?;\n+        write::llvm_optimize(cgcx, diag_handler, module, config, opt_level, opt_stage)?;\n     }\n     debug!(\"lto done\");\n     Ok(())"}, {"sha": "db526746fa70aeceb4cb61356a6c7be8890dc4f6", "filename": "compiler/rustc_codegen_llvm/src/back/write.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/00bb9fc2be81b8beb257fdf220ed3f2386ab0930/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00bb9fc2be81b8beb257fdf220ed3f2386ab0930/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs?ref=00bb9fc2be81b8beb257fdf220ed3f2386ab0930", "patch": "@@ -416,7 +416,7 @@ fn get_instr_profile_output_path(config: &ModuleConfig) -> Option<CString> {\n     }\n }\n \n-pub(crate) unsafe fn optimize(\n+pub(crate) unsafe fn llvm_optimize(\n     cgcx: &CodegenContext<LlvmCodegenBackend>,\n     diag_handler: &Handler,\n     module: &ModuleCodegen<ModuleLlvm>,\n@@ -498,7 +498,7 @@ pub(crate) unsafe fn optimize(\n }\n \n // Unsafe due to LLVM calls.\n-pub(crate) unsafe fn maybe_optimize(\n+pub(crate) unsafe fn optimize(\n     cgcx: &CodegenContext<LlvmCodegenBackend>,\n     diag_handler: &Handler,\n     module: &ModuleCodegen<ModuleLlvm>,\n@@ -526,7 +526,7 @@ pub(crate) unsafe fn maybe_optimize(\n             _ if cgcx.opts.cg.linker_plugin_lto.enabled() => llvm::OptStage::PreLinkThinLTO,\n             _ => llvm::OptStage::PreLinkNoLTO,\n         };\n-        return optimize(cgcx, diag_handler, module, config, opt_level, opt_stage);\n+        return llvm_optimize(cgcx, diag_handler, module, config, opt_level, opt_stage);\n     }\n     Ok(())\n }"}, {"sha": "42c65e04e3b6b07998b5d8b75a4d5dca4aa3f869", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00bb9fc2be81b8beb257fdf220ed3f2386ab0930/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00bb9fc2be81b8beb257fdf220ed3f2386ab0930/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=00bb9fc2be81b8beb257fdf220ed3f2386ab0930", "patch": "@@ -207,7 +207,7 @@ impl WriteBackendMethods for LlvmCodegenBackend {\n         module: &ModuleCodegen<Self::Module>,\n         config: &ModuleConfig,\n     ) -> Result<(), FatalError> {\n-        back::write::maybe_optimize(cgcx, diag_handler, module, config)\n+        back::write::optimize(cgcx, diag_handler, module, config)\n     }\n     fn optimize_fat(\n         cgcx: &CodegenContext<Self>,"}]}