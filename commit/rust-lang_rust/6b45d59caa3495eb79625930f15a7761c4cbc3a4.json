{"sha": "6b45d59caa3495eb79625930f15a7761c4cbc3a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiNDVkNTljYWEzNDk1ZWI3OTYyNTkzMGYxNWE3NzYxYzRjYmMzYTQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-05T14:40:53Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-05T14:42:03Z"}, "message": "Remove get_install_prefix_lib_path completely\n\nIt was broken anyway for rustup installs and nobody seems to have noticed.", "tree": {"sha": "c1cb6db8b6ee20c93baa9ba33d853144345ac2f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1cb6db8b6ee20c93baa9ba33d853144345ac2f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b45d59caa3495eb79625930f15a7761c4cbc3a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b45d59caa3495eb79625930f15a7761c4cbc3a4", "html_url": "https://github.com/rust-lang/rust/commit/6b45d59caa3495eb79625930f15a7761c4cbc3a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b45d59caa3495eb79625930f15a7761c4cbc3a4/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3205a66981f05b6df99f5748fe174ee69f556f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3205a66981f05b6df99f5748fe174ee69f556f0", "html_url": "https://github.com/rust-lang/rust/commit/a3205a66981f05b6df99f5748fe174ee69f556f0"}], "stats": {"total": 38, "additions": 4, "deletions": 34}, "files": [{"sha": "067b969cd19351bea41b5a7222ea6a09ccde274b", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6b45d59caa3495eb79625930f15a7761c4cbc3a4/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b45d59caa3495eb79625930f15a7761c4cbc3a4/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=6b45d59caa3495eb79625930f15a7761c4cbc3a4", "patch": "@@ -1569,21 +1569,12 @@ fn add_rpath_args(\n     // where extern libraries might live, based on the\n     // add_lib_search_paths\n     if sess.opts.cg.rpath {\n-        let target_triple = sess.opts.target_triple.triple();\n-        let mut get_install_prefix_lib_path = || {\n-            let tlib = rustc_target::target_rustlib_path(&sess.sysroot, target_triple).join(\"lib\");\n-            let mut path = PathBuf::from(&sess.sysroot);\n-            path.push(&tlib);\n-\n-            path\n-        };\n         let mut rpath_config = RPathConfig {\n             used_crates: &codegen_results.crate_info.used_crates_dynamic,\n             out_filename: out_filename.to_path_buf(),\n             has_rpath: sess.target.has_rpath,\n             is_like_osx: sess.target.is_like_osx,\n             linker_is_gnu: sess.target.linker_is_gnu,\n-            get_install_prefix_lib_path: &mut get_install_prefix_lib_path,\n         };\n         cmd.args(&rpath::get_rpath_flags(&mut rpath_config));\n     }"}, {"sha": "39b0ccd120de519c747af97a88091c035d1cf4a2", "filename": "compiler/rustc_codegen_ssa/src/back/rpath.rs", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6b45d59caa3495eb79625930f15a7761c4cbc3a4/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b45d59caa3495eb79625930f15a7761c4cbc3a4/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Frpath.rs?ref=6b45d59caa3495eb79625930f15a7761c4cbc3a4", "patch": "@@ -13,7 +13,6 @@ pub struct RPathConfig<'a> {\n     pub is_like_osx: bool,\n     pub has_rpath: bool,\n     pub linker_is_gnu: bool,\n-    pub get_install_prefix_lib_path: &'a mut dyn FnMut() -> PathBuf,\n }\n \n pub fn get_rpath_flags(config: &mut RPathConfig<'_>) -> Vec<String> {\n@@ -63,24 +62,13 @@ fn get_rpaths(config: &mut RPathConfig<'_>, libs: &[PathBuf]) -> Vec<String> {\n     // Use relative paths to the libraries. Binaries can be moved\n     // as long as they maintain the relative relationship to the\n     // crates they depend on.\n-    let rel_rpaths = get_rpaths_relative_to_output(config, libs);\n+    let rpaths = get_rpaths_relative_to_output(config, libs);\n \n-    // And a final backup rpath to the global library location.\n-    let fallback_rpaths = vec![get_install_prefix_rpath(config)];\n-\n-    fn log_rpaths(desc: &str, rpaths: &[String]) {\n-        debug!(\"{} rpaths:\", desc);\n-        for rpath in rpaths {\n-            debug!(\"    {}\", *rpath);\n-        }\n+    debug!(\"rpaths:\");\n+    for rpath in &rpaths {\n+        debug!(\"    {}\", rpath);\n     }\n \n-    log_rpaths(\"relative\", &rel_rpaths);\n-    log_rpaths(\"fallback\", &fallback_rpaths);\n-\n-    let mut rpaths = rel_rpaths;\n-    rpaths.extend_from_slice(&fallback_rpaths);\n-\n     // Remove duplicates\n     minimize_rpaths(&rpaths)\n }\n@@ -113,13 +101,6 @@ fn path_relative_from(path: &Path, base: &Path) -> Option<PathBuf> {\n     diff_paths(path, base)\n }\n \n-fn get_install_prefix_rpath(config: &mut RPathConfig<'_>) -> String {\n-    let path = (config.get_install_prefix_lib_path)();\n-    let path = env::current_dir().unwrap().join(&path);\n-    // FIXME (#9639): This needs to handle non-utf8 paths\n-    path.to_str().expect(\"non-utf8 component in rpath\").to_owned()\n-}\n-\n fn minimize_rpaths(rpaths: &[String]) -> Vec<String> {\n     let mut set = FxHashSet::default();\n     let mut minimized = Vec::new();"}, {"sha": "24c362db12275b103947ad2cbfcdaaecf4f9faae", "filename": "compiler/rustc_codegen_ssa/src/back/rpath/tests.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b45d59caa3495eb79625930f15a7761c4cbc3a4/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Frpath%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b45d59caa3495eb79625930f15a7761c4cbc3a4/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Frpath%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Frpath%2Ftests.rs?ref=6b45d59caa3495eb79625930f15a7761c4cbc3a4", "patch": "@@ -40,15 +40,13 @@ fn test_rpath_relative() {\n             is_like_osx: true,\n             linker_is_gnu: false,\n             out_filename: PathBuf::from(\"bin/rustc\"),\n-            get_install_prefix_lib_path: &mut || panic!(),\n         };\n         let res = get_rpath_relative_to_output(config, Path::new(\"lib/libstd.so\"));\n         assert_eq!(res, \"@loader_path/../lib\");\n     } else {\n         let config = &mut RPathConfig {\n             used_crates: &[],\n             out_filename: PathBuf::from(\"bin/rustc\"),\n-            get_install_prefix_lib_path: &mut || panic!(),\n             has_rpath: true,\n             is_like_osx: false,\n             linker_is_gnu: true,"}]}