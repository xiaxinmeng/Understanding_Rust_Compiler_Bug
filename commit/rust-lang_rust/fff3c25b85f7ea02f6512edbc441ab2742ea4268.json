{"sha": "fff3c25b85f7ea02f6512edbc441ab2742ea4268", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmZjNjMjViODVmN2VhMDJmNjUxMmVkYmM0NDFhYjI3NDJlYTQyNjg=", "commit": {"author": {"name": "Quentin Boyer", "email": "qbsecond@gmail.com", "date": "2019-11-03T16:54:50Z"}, "committer": {"name": "Quentin Boyer", "email": "qbsecond@gmail.com", "date": "2019-11-03T16:54:50Z"}, "message": "tidy", "tree": {"sha": "b62ae129fe1bcc2a2b63aca49c7dfb3d8a61dd9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b62ae129fe1bcc2a2b63aca49c7dfb3d8a61dd9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fff3c25b85f7ea02f6512edbc441ab2742ea4268", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fff3c25b85f7ea02f6512edbc441ab2742ea4268", "html_url": "https://github.com/rust-lang/rust/commit/fff3c25b85f7ea02f6512edbc441ab2742ea4268", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fff3c25b85f7ea02f6512edbc441ab2742ea4268/comments", "author": {"login": "traxys", "id": 5623227, "node_id": "MDQ6VXNlcjU2MjMyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/5623227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traxys", "html_url": "https://github.com/traxys", "followers_url": "https://api.github.com/users/traxys/followers", "following_url": "https://api.github.com/users/traxys/following{/other_user}", "gists_url": "https://api.github.com/users/traxys/gists{/gist_id}", "starred_url": "https://api.github.com/users/traxys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traxys/subscriptions", "organizations_url": "https://api.github.com/users/traxys/orgs", "repos_url": "https://api.github.com/users/traxys/repos", "events_url": "https://api.github.com/users/traxys/events{/privacy}", "received_events_url": "https://api.github.com/users/traxys/received_events", "type": "User", "site_admin": false}, "committer": {"login": "traxys", "id": 5623227, "node_id": "MDQ6VXNlcjU2MjMyMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/5623227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traxys", "html_url": "https://github.com/traxys", "followers_url": "https://api.github.com/users/traxys/followers", "following_url": "https://api.github.com/users/traxys/following{/other_user}", "gists_url": "https://api.github.com/users/traxys/gists{/gist_id}", "starred_url": "https://api.github.com/users/traxys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traxys/subscriptions", "organizations_url": "https://api.github.com/users/traxys/orgs", "repos_url": "https://api.github.com/users/traxys/repos", "events_url": "https://api.github.com/users/traxys/events{/privacy}", "received_events_url": "https://api.github.com/users/traxys/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f91ed41770e65fdac39e72798036fa650269788", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f91ed41770e65fdac39e72798036fa650269788", "html_url": "https://github.com/rust-lang/rust/commit/0f91ed41770e65fdac39e72798036fa650269788"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "68812bd94eb2413353f3e6fc7c874c1177356b8d", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fff3c25b85f7ea02f6512edbc441ab2742ea4268/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fff3c25b85f7ea02f6512edbc441ab2742ea4268/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=fff3c25b85f7ea02f6512edbc441ab2742ea4268", "patch": "@@ -1415,7 +1415,9 @@ impl<'test> TestCx<'test> {\n \n     fn check_no_compiler_crash(&self, proc_res: &ProcRes, should_ice: bool) {\n         match proc_res.status.code() {\n-            Some(101) if !should_ice => self.fatal_proc_rec(\"compiler encountered internal error\", proc_res),\n+            Some(101) if !should_ice => {\n+                self.fatal_proc_rec(\"compiler encountered internal error\", proc_res)\n+            }\n             None => self.fatal_proc_rec(\"compiler terminated by signal\", proc_res),\n             _ => (),\n         }"}]}