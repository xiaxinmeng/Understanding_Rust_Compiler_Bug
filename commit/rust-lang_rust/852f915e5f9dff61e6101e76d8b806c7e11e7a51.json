{"sha": "852f915e5f9dff61e6101e76d8b806c7e11e7a51", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1MmY5MTVlNWY5ZGZmNjFlNjEwMWU3NmQ4YjgwNmM3ZTExZTdhNTE=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2017-11-24T06:35:51Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2017-11-24T06:36:41Z"}, "message": "Use visit_body", "tree": {"sha": "0b13b72c0c387150c728a90e789958e5ecf445c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b13b72c0c387150c728a90e789958e5ecf445c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/852f915e5f9dff61e6101e76d8b806c7e11e7a51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/852f915e5f9dff61e6101e76d8b806c7e11e7a51", "html_url": "https://github.com/rust-lang/rust/commit/852f915e5f9dff61e6101e76d8b806c7e11e7a51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/852f915e5f9dff61e6101e76d8b806c7e11e7a51/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0af387cd054a634bfd231440a6af5e6fab0ba6fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/0af387cd054a634bfd231440a6af5e6fab0ba6fd", "html_url": "https://github.com/rust-lang/rust/commit/0af387cd054a634bfd231440a6af5e6fab0ba6fd"}], "stats": {"total": 46, "additions": 5, "deletions": 41}, "files": [{"sha": "762b9787c8d35d0b48a99585e9121a0d2649bf29", "filename": "src/librustc_const_eval/check_match.rs", "status": "modified", "additions": 5, "deletions": 41, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/852f915e5f9dff61e6101e76d8b806c7e11e7a51/src%2Flibrustc_const_eval%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/852f915e5f9dff61e6101e76d8b806c7e11e7a51/src%2Flibrustc_const_eval%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fcheck_match.rs?ref=852f915e5f9dff61e6101e76d8b806c7e11e7a51", "patch": "@@ -28,7 +28,7 @@ use rustc::util::common::ErrorReported;\n \n use rustc::hir::def::*;\n use rustc::hir::def_id::DefId;\n-use rustc::hir::intravisit::{self, Visitor, FnKind, NestedVisitorMap};\n+use rustc::hir::intravisit::{self, Visitor, NestedVisitorMap};\n use rustc::hir::{self, Pat, PatKind};\n \n use rustc_back::slice;\n@@ -44,47 +44,11 @@ impl<'a, 'tcx> Visitor<'tcx> for OuterVisitor<'a, 'tcx> {\n         NestedVisitorMap::OnlyBodies(&self.tcx.hir)\n     }\n \n-    fn visit_fn(&mut self, fk: FnKind<'tcx>, fd: &'tcx hir::FnDecl,\n-                b: hir::BodyId, s: Span, id: ast::NodeId) {\n-        intravisit::walk_fn(self, fk, fd, b, s, id);\n-\n-        check_body(self.tcx, b);\n-    }\n-\n-    fn visit_item(&mut self, item: &'tcx hir::Item) {\n-        intravisit::walk_item(self, item);\n-        match item.node {\n-            hir::ItemStatic(.., body_id) | hir::ItemConst(.., body_id) => {\n-                check_body(self.tcx, body_id);\n-            }\n-            _ => (),\n-        }\n-    }\n-\n-    fn visit_impl_item(&mut self, ii: &'tcx hir::ImplItem) {\n-        intravisit::walk_impl_item(self, ii);\n-        if let hir::ImplItemKind::Const(_, body_id) = ii.node {\n-            check_body(self.tcx, body_id);\n-        }\n-    }\n-\n-    fn visit_trait_item(&mut self, ti: &'tcx hir::TraitItem) {\n-        intravisit::walk_trait_item(self, ti);\n-        if let hir::TraitItemKind::Const(_, Some(body_id)) = ti.node {\n-            check_body(self.tcx, body_id);\n-        }\n+    fn visit_body(&mut self, body: &'tcx hir::Body) {\n+        intravisit::walk_body(self, body);\n+        let def_id = self.tcx.hir.body_owner_def_id(body.id());\n+        let _ = self.tcx.check_match(def_id);\n     }\n-\n-    // Enum variants and types (e.g. `[T; { .. }]`) may have bodies too,\n-    // but they are const-evaluated during typeck.\n-}\n-\n-fn check_body<'a, 'tcx>(\n-    tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-    body_id: hir::BodyId,\n-) {\n-    let def_id = tcx.hir.body_owner_def_id(body_id);\n-    let _ = tcx.check_match(def_id);\n }\n \n pub fn check_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {"}]}