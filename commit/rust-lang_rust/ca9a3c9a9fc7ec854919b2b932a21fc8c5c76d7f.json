{"sha": "ca9a3c9a9fc7ec854919b2b932a21fc8c5c76d7f", "node_id": "C_kwDOAAsO6NoAKGNhOWEzYzlhOWZjN2VjODU0OTE5YjJiOTMyYTIxZmM4YzVjNzZkN2Y", "commit": {"author": {"name": "Thomas de Zeeuw", "email": "thomasdezeeuw@gmail.com", "date": "2022-01-27T08:52:59Z"}, "committer": {"name": "Thomas de Zeeuw", "email": "thomasdezeeuw@gmail.com", "date": "2022-01-27T08:52:59Z"}, "message": "Make sockaddr_un safe and use copy_nonoverlapping\n\nThe creation of libc::sockaddr_un is a safe operation, no need for it to\nbe unsafe.\n\nThis also uses the more performant copy_nonoverlapping instead of an\niterator.", "tree": {"sha": "ac98bc3395e96f01ab61b9016f0d8a99217d0c27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac98bc3395e96f01ab61b9016f0d8a99217d0c27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca9a3c9a9fc7ec854919b2b932a21fc8c5c76d7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca9a3c9a9fc7ec854919b2b932a21fc8c5c76d7f", "html_url": "https://github.com/rust-lang/rust/commit/ca9a3c9a9fc7ec854919b2b932a21fc8c5c76d7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca9a3c9a9fc7ec854919b2b932a21fc8c5c76d7f/comments", "author": {"login": "Thomasdezeeuw", "id": 3159064, "node_id": "MDQ6VXNlcjMxNTkwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3159064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thomasdezeeuw", "html_url": "https://github.com/Thomasdezeeuw", "followers_url": "https://api.github.com/users/Thomasdezeeuw/followers", "following_url": "https://api.github.com/users/Thomasdezeeuw/following{/other_user}", "gists_url": "https://api.github.com/users/Thomasdezeeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thomasdezeeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thomasdezeeuw/subscriptions", "organizations_url": "https://api.github.com/users/Thomasdezeeuw/orgs", "repos_url": "https://api.github.com/users/Thomasdezeeuw/repos", "events_url": "https://api.github.com/users/Thomasdezeeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/Thomasdezeeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Thomasdezeeuw", "id": 3159064, "node_id": "MDQ6VXNlcjMxNTkwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3159064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thomasdezeeuw", "html_url": "https://github.com/Thomasdezeeuw", "followers_url": "https://api.github.com/users/Thomasdezeeuw/followers", "following_url": "https://api.github.com/users/Thomasdezeeuw/following{/other_user}", "gists_url": "https://api.github.com/users/Thomasdezeeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thomasdezeeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thomasdezeeuw/subscriptions", "organizations_url": "https://api.github.com/users/Thomasdezeeuw/orgs", "repos_url": "https://api.github.com/users/Thomasdezeeuw/repos", "events_url": "https://api.github.com/users/Thomasdezeeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/Thomasdezeeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1cd200922702f2ec5e30d5b5391c0443607d647", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1cd200922702f2ec5e30d5b5391c0443607d647", "html_url": "https://github.com/rust-lang/rust/commit/c1cd200922702f2ec5e30d5b5391c0443607d647"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "9732a989f36103cc41e474aa97633227694676e9", "filename": "library/std/src/os/unix/net/addr.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ca9a3c9a9fc7ec854919b2b932a21fc8c5c76d7f/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9a3c9a9fc7ec854919b2b932a21fc8c5c76d7f/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs?ref=ca9a3c9a9fc7ec854919b2b932a21fc8c5c76d7f", "patch": "@@ -2,7 +2,7 @@ use crate::ffi::OsStr;\n use crate::os::unix::ffi::OsStrExt;\n use crate::path::Path;\n use crate::sys::cvt;\n-use crate::{ascii, fmt, io, iter, mem, ptr};\n+use crate::{ascii, fmt, io, mem, ptr};\n \n // FIXME(#43348): Make libc adapt #[doc(cfg(...))] so we don't need these fake definitions here?\n #[cfg(not(unix))]\n@@ -22,8 +22,9 @@ fn sun_path_offset(addr: &libc::sockaddr_un) -> usize {\n     path - base\n }\n \n-pub(super) unsafe fn sockaddr_un(path: &Path) -> io::Result<(libc::sockaddr_un, libc::socklen_t)> {\n-    let mut addr: libc::sockaddr_un = mem::zeroed();\n+pub(super) fn sockaddr_un(path: &Path) -> io::Result<(libc::sockaddr_un, libc::socklen_t)> {\n+    // SAFETY: All zeros is a valid representation for `sockaddr_un`.\n+    let mut addr: libc::sockaddr_un = unsafe { mem::zeroed() };\n     addr.sun_family = libc::AF_UNIX as libc::sa_family_t;\n \n     let bytes = path.as_os_str().as_bytes();\n@@ -41,11 +42,13 @@ pub(super) unsafe fn sockaddr_un(path: &Path) -> io::Result<(libc::sockaddr_un,\n             &\"path must be shorter than SUN_LEN\",\n         ));\n     }\n-    for (dst, src) in iter::zip(&mut addr.sun_path, bytes) {\n-        *dst = *src as libc::c_char;\n-    }\n-    // null byte for pathname addresses is already there because we zeroed the\n-    // struct\n+    // SAFETY: `bytes` and `addr.sun_path` are not overlapping and\n+    // both point to valid memory.\n+    // NOTE: We zeroed the memory above, so the path is already null\n+    // terminated.\n+    unsafe {\n+        ptr::copy_nonoverlapping(bytes.as_ptr(), addr.sun_path.as_mut_ptr().cast(), bytes.len())\n+    };\n \n     let mut len = sun_path_offset(&addr) + bytes.len();\n     match bytes.get(0) {"}]}