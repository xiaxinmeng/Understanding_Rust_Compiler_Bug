{"sha": "66f3ab90a14254d70c96acb0332fe403964025ce", "node_id": "C_kwDOAAsO6NoAKDY2ZjNhYjkwYTE0MjU0ZDcwYzk2YWNiMDMzMmZlNDAzOTY0MDI1Y2U", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-12-09T02:27:03Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-01-28T15:08:07Z"}, "message": "Reintroduce multiple_supertrait_upcastable lint", "tree": {"sha": "497c5b6071d1a7a46bcaf7bf6eb78e7d1a73a492", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/497c5b6071d1a7a46bcaf7bf6eb78e7d1a73a492"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66f3ab90a14254d70c96acb0332fe403964025ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66f3ab90a14254d70c96acb0332fe403964025ce", "html_url": "https://github.com/rust-lang/rust/commit/66f3ab90a14254d70c96acb0332fe403964025ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66f3ab90a14254d70c96acb0332fe403964025ce/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94e59cb6e276de95a5a0f3ad9c3201f526351f26", "url": "https://api.github.com/repos/rust-lang/rust/commits/94e59cb6e276de95a5a0f3ad9c3201f526351f26", "html_url": "https://github.com/rust-lang/rust/commit/94e59cb6e276de95a5a0f3ad9c3201f526351f26"}], "stats": {"total": 173, "additions": 173, "deletions": 0}, "files": [{"sha": "dca678dff7a793253524fe055db88b49934f9dc1", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66f3ab90a14254d70c96acb0332fe403964025ce/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/66f3ab90a14254d70c96acb0332fe403964025ce/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=66f3ab90a14254d70c96acb0332fe403964025ce", "patch": "@@ -100,6 +100,8 @@ lint_cstring_ptr = getting the inner pointer of a temporary `CString`\n     .note = pointers do not have a lifetime; when calling `as_ptr` the `CString` will be deallocated at the end of the statement because nothing is referencing it as far as the type system is concerned\n     .help = for more information, see https://doc.rust-lang.org/reference/destructors.html\n \n+lint_multple_supertrait_upcastable = `{$ident}` is object-safe and has multiple supertraits\n+\n lint_identifier_non_ascii_char = identifier contains non-ASCII characters\n \n lint_identifier_uncommon_codepoints = identifier contains uncommon Unicode codepoints"}, {"sha": "af9c40a3ba5227b249221b6a1e59a5fdfe1a2c0a", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66f3ab90a14254d70c96acb0332fe403964025ce/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66f3ab90a14254d70c96acb0332fe403964025ce/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=66f3ab90a14254d70c96acb0332fe403964025ce", "patch": "@@ -160,6 +160,8 @@ declare_features! (\n     (active, intrinsics, \"1.0.0\", None, None),\n     /// Allows using `#[lang = \"..\"]` attribute for linking items to special compiler logic.\n     (active, lang_items, \"1.0.0\", None, None),\n+    /// Allows the `multiple_supertrait_upcastable` lint.\n+    (active, multiple_supertrait_upcastable, \"CURRENT_RUSTC_VERSION\", None, None),\n     /// Allows using `#[omit_gdb_pretty_printer_section]`.\n     (active, omit_gdb_pretty_printer_section, \"1.5.0\", None, None),\n     /// Allows using `#[prelude_import]` on glob `use` items."}, {"sha": "ba15dbd86cfa4caff089c597a84391a69ff7a400", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/66f3ab90a14254d70c96acb0332fe403964025ce/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66f3ab90a14254d70c96acb0332fe403964025ce/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=66f3ab90a14254d70c96acb0332fe403964025ce", "patch": "@@ -64,6 +64,7 @@ mod let_underscore;\n mod levels;\n mod lints;\n mod methods;\n+mod multiple_supertrait_upcastable;\n mod non_ascii_idents;\n mod non_fmt_panic;\n mod nonstandard_style;\n@@ -98,6 +99,7 @@ use hidden_unicode_codepoints::*;\n use internal::*;\n use let_underscore::*;\n use methods::*;\n+use multiple_supertrait_upcastable::*;\n use non_ascii_idents::*;\n use non_fmt_panic::NonPanicFmt;\n use nonstandard_style::*;\n@@ -232,6 +234,7 @@ late_lint_methods!(\n             InvalidAtomicOrdering: InvalidAtomicOrdering,\n             NamedAsmLabels: NamedAsmLabels,\n             OpaqueHiddenInferredBound: OpaqueHiddenInferredBound,\n+            MultipleSupertraitUpcastable: MultipleSupertraitUpcastable,\n         ]\n     ]\n );"}, {"sha": "0c1019545f382f8a5ce425a871a5aa1cc225f149", "filename": "compiler/rustc_lint/src/lints.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/66f3ab90a14254d70c96acb0332fe403964025ce/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66f3ab90a14254d70c96acb0332fe403964025ce/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flints.rs?ref=66f3ab90a14254d70c96acb0332fe403964025ce", "patch": "@@ -917,6 +917,13 @@ pub struct CStringPtr {\n     pub unwrap: Span,\n }\n \n+// multiple_supertrait_upcastable.rs\n+#[derive(LintDiagnostic)]\n+#[diag(lint_multple_supertrait_upcastable)]\n+pub struct MultipleSupertraitUpcastable {\n+    pub ident: Ident,\n+}\n+\n // non_ascii_idents.rs\n #[derive(LintDiagnostic)]\n #[diag(lint_identifier_non_ascii_char)]"}, {"sha": "c2ed0e19f4011e5aa70221716ac318107c57f237", "filename": "compiler/rustc_lint/src/multiple_supertrait_upcastable.rs", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/66f3ab90a14254d70c96acb0332fe403964025ce/compiler%2Frustc_lint%2Fsrc%2Fmultiple_supertrait_upcastable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66f3ab90a14254d70c96acb0332fe403964025ce/compiler%2Frustc_lint%2Fsrc%2Fmultiple_supertrait_upcastable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fmultiple_supertrait_upcastable.rs?ref=66f3ab90a14254d70c96acb0332fe403964025ce", "patch": "@@ -0,0 +1,60 @@\n+use crate::{LateContext, LateLintPass, LintContext};\n+\n+use rustc_hir as hir;\n+use rustc_span::sym;\n+\n+declare_lint! {\n+    /// The `multiple_supertrait_upcastable` lint detects when an object-safe trait has multiple\n+    /// supertraits.\n+    ///\n+    /// ### Example\n+    ///\n+    /// ```rust\n+    /// trait A {}\n+    /// trait B {}\n+    ///\n+    /// #[warn(multiple_supertrait_upcastable)]\n+    /// trait C: A + B {}\n+    /// ```\n+    ///\n+    /// {{produces}}\n+    ///\n+    /// ### Explanation\n+    ///\n+    /// To support upcasting with multiple supertraits, we need to store multiple vtables and this\n+    /// can result in extra space overhead, even if no code actually uses upcasting.\n+    /// This lint allows users to identify when such scenarios occur and to decide whether the\n+    /// additional overhead is justified.\n+    pub MULTIPLE_SUPERTRAIT_UPCASTABLE,\n+    Allow,\n+    \"detect when an object-safe trait has multiple supertraits\",\n+    @feature_gate = sym::multiple_supertrait_upcastable;\n+}\n+\n+declare_lint_pass!(MultipleSupertraitUpcastable => [MULTIPLE_SUPERTRAIT_UPCASTABLE]);\n+\n+impl<'tcx> LateLintPass<'tcx> for MultipleSupertraitUpcastable {\n+    fn check_item(&mut self, cx: &LateContext<'tcx>, item: &'tcx hir::Item<'tcx>) {\n+        let def_id = item.owner_id.to_def_id();\n+        // NOTE(nbdd0121): use `object_safety_violations` instead of `check_is_object_safe` because\n+        // the latter will report `where_clause_object_safety` lint.\n+        if let hir::ItemKind::Trait(_, _, _, _, _) = item.kind\n+            && cx.tcx.object_safety_violations(def_id).is_empty()\n+        {\n+            let direct_super_traits_iter = cx.tcx\n+                    .super_predicates_of(def_id)\n+                    .predicates\n+                    .into_iter()\n+                    .filter_map(|(pred, _)| pred.to_opt_poly_trait_pred());\n+            if direct_super_traits_iter.count() > 1 {\n+                cx.emit_spanned_lint(\n+                    MULTIPLE_SUPERTRAIT_UPCASTABLE,\n+                    cx.tcx.def_span(def_id),\n+                    crate::lints::MultipleSupertraitUpcastable {\n+                        ident: item.ident\n+                    },\n+                );\n+            }\n+        }\n+    }\n+}"}, {"sha": "f1119214be44db4e7d61615bfa9f488253c2f634", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66f3ab90a14254d70c96acb0332fe403964025ce/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66f3ab90a14254d70c96acb0332fe403964025ce/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=66f3ab90a14254d70c96acb0332fe403964025ce", "patch": "@@ -955,6 +955,7 @@ symbols! {\n         mul,\n         mul_assign,\n         mul_with_overflow,\n+        multiple_supertrait_upcastable,\n         must_not_suspend,\n         must_use,\n         naked,"}, {"sha": "76dabfb429dd503ab945ff002028f0a7f2d375dc", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66f3ab90a14254d70c96acb0332fe403964025ce/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66f3ab90a14254d70c96acb0332fe403964025ce/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=66f3ab90a14254d70c96acb0332fe403964025ce", "patch": "@@ -87,6 +87,7 @@\n #![warn(missing_debug_implementations)]\n #![warn(missing_docs)]\n #![allow(explicit_outlives_requirements)]\n+#![cfg_attr(not(bootstrap), warn(multiple_supertrait_upcastable))]\n //\n // Library features:\n #![feature(alloc_layout_extra)]\n@@ -195,6 +196,7 @@\n #![feature(c_unwind)]\n #![feature(with_negative_coherence)]\n #![cfg_attr(test, feature(panic_update_hook))]\n+#![cfg_attr(not(bootstrap), feature(multiple_supertrait_upcastable))]\n //\n // Rustdoc features:\n #![feature(doc_cfg)]"}, {"sha": "d2fac23ff18be7542729e0b6793d796daad17dd5", "filename": "library/core/src/error.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66f3ab90a14254d70c96acb0332fe403964025ce/library%2Fcore%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66f3ab90a14254d70c96acb0332fe403964025ce/library%2Fcore%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ferror.rs?ref=66f3ab90a14254d70c96acb0332fe403964025ce", "patch": "@@ -28,6 +28,7 @@ use crate::fmt::{Debug, Display};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"Error\")]\n #[rustc_has_incoherent_inherent_impls]\n+#[cfg_attr(not(bootstrap), allow(multiple_supertrait_upcastable))]\n pub trait Error: Debug + Display {\n     /// The lower-level source of this error, if any.\n     ///"}, {"sha": "6dfe36e6926ef057759d23d198abd83910688ada", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66f3ab90a14254d70c96acb0332fe403964025ce/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66f3ab90a14254d70c96acb0332fe403964025ce/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=66f3ab90a14254d70c96acb0332fe403964025ce", "patch": "@@ -95,6 +95,7 @@\n #![warn(missing_docs)]\n #![allow(explicit_outlives_requirements)]\n #![allow(incomplete_features)]\n+#![cfg_attr(not(bootstrap), warn(multiple_supertrait_upcastable))]\n //\n // Library features:\n #![feature(const_align_offset)]\n@@ -235,6 +236,7 @@\n #![feature(unsized_fn_params)]\n #![feature(asm_const)]\n #![feature(const_transmute_copy)]\n+#![cfg_attr(not(bootstrap), feature(multiple_supertrait_upcastable))]\n //\n // Target features:\n #![feature(arm_target_feature)]"}, {"sha": "0467dea621b4c2a063b4de2f83ba99ac4905bfb8", "filename": "tests/ui/feature-gates/feature-gate-multiple_supertrait_upcastable.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66f3ab90a14254d70c96acb0332fe403964025ce/tests%2Fui%2Ffeature-gates%2Ffeature-gate-multiple_supertrait_upcastable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66f3ab90a14254d70c96acb0332fe403964025ce/tests%2Fui%2Ffeature-gates%2Ffeature-gate-multiple_supertrait_upcastable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffeature-gates%2Ffeature-gate-multiple_supertrait_upcastable.rs?ref=66f3ab90a14254d70c96acb0332fe403964025ce", "patch": "@@ -0,0 +1,12 @@\n+// check-pass\n+\n+#![deny(multiple_supertrait_upcastable)]\n+//~^ WARNING unknown lint: `multiple_supertrait_upcastable`\n+//~| WARNING unknown lint: `multiple_supertrait_upcastable`\n+//~| WARNING unknown lint: `multiple_supertrait_upcastable`\n+#![warn(multiple_supertrait_upcastable)]\n+//~^ WARNING unknown lint: `multiple_supertrait_upcastable`\n+//~| WARNING unknown lint: `multiple_supertrait_upcastable`\n+//~| WARNING unknown lint: `multiple_supertrait_upcastable`\n+\n+fn main() {}"}, {"sha": "1f725f35417785e05aad434e5797fa07f181ec32", "filename": "tests/ui/feature-gates/feature-gate-multiple_supertrait_upcastable.stderr", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/66f3ab90a14254d70c96acb0332fe403964025ce/tests%2Fui%2Ffeature-gates%2Ffeature-gate-multiple_supertrait_upcastable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66f3ab90a14254d70c96acb0332fe403964025ce/tests%2Fui%2Ffeature-gates%2Ffeature-gate-multiple_supertrait_upcastable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffeature-gates%2Ffeature-gate-multiple_supertrait_upcastable.stderr?ref=66f3ab90a14254d70c96acb0332fe403964025ce", "patch": "@@ -0,0 +1,57 @@\n+warning: unknown lint: `multiple_supertrait_upcastable`\n+  --> $DIR/feature-gate-multiple_supertrait_upcastable.rs:3:1\n+   |\n+LL | #![deny(multiple_supertrait_upcastable)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the `multiple_supertrait_upcastable` lint is unstable\n+   = help: add `#![feature(multiple_supertrait_upcastable)]` to the crate attributes to enable\n+   = note: `#[warn(unknown_lints)]` on by default\n+\n+warning: unknown lint: `multiple_supertrait_upcastable`\n+  --> $DIR/feature-gate-multiple_supertrait_upcastable.rs:7:1\n+   |\n+LL | #![warn(multiple_supertrait_upcastable)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the `multiple_supertrait_upcastable` lint is unstable\n+   = help: add `#![feature(multiple_supertrait_upcastable)]` to the crate attributes to enable\n+\n+warning: unknown lint: `multiple_supertrait_upcastable`\n+  --> $DIR/feature-gate-multiple_supertrait_upcastable.rs:3:1\n+   |\n+LL | #![deny(multiple_supertrait_upcastable)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the `multiple_supertrait_upcastable` lint is unstable\n+   = help: add `#![feature(multiple_supertrait_upcastable)]` to the crate attributes to enable\n+\n+warning: unknown lint: `multiple_supertrait_upcastable`\n+  --> $DIR/feature-gate-multiple_supertrait_upcastable.rs:7:1\n+   |\n+LL | #![warn(multiple_supertrait_upcastable)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the `multiple_supertrait_upcastable` lint is unstable\n+   = help: add `#![feature(multiple_supertrait_upcastable)]` to the crate attributes to enable\n+\n+warning: unknown lint: `multiple_supertrait_upcastable`\n+  --> $DIR/feature-gate-multiple_supertrait_upcastable.rs:3:1\n+   |\n+LL | #![deny(multiple_supertrait_upcastable)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the `multiple_supertrait_upcastable` lint is unstable\n+   = help: add `#![feature(multiple_supertrait_upcastable)]` to the crate attributes to enable\n+\n+warning: unknown lint: `multiple_supertrait_upcastable`\n+  --> $DIR/feature-gate-multiple_supertrait_upcastable.rs:7:1\n+   |\n+LL | #![warn(multiple_supertrait_upcastable)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the `multiple_supertrait_upcastable` lint is unstable\n+   = help: add `#![feature(multiple_supertrait_upcastable)]` to the crate attributes to enable\n+\n+warning: 6 warnings emitted\n+"}, {"sha": "3c6ab86e4c65ce205360978cd76a534124bad1e0", "filename": "tests/ui/traits/trait-upcasting/multiple_supertrait_upcastable.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/66f3ab90a14254d70c96acb0332fe403964025ce/tests%2Fui%2Ftraits%2Ftrait-upcasting%2Fmultiple_supertrait_upcastable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66f3ab90a14254d70c96acb0332fe403964025ce/tests%2Fui%2Ftraits%2Ftrait-upcasting%2Fmultiple_supertrait_upcastable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Ftrait-upcasting%2Fmultiple_supertrait_upcastable.rs?ref=66f3ab90a14254d70c96acb0332fe403964025ce", "patch": "@@ -0,0 +1,10 @@\n+#![feature(multiple_supertrait_upcastable)]\n+#![deny(multiple_supertrait_upcastable)]\n+\n+trait A {}\n+trait B {}\n+\n+trait C: A + B {}\n+//~^ ERROR `C` is object-safe and has multiple supertraits\n+\n+fn main() {}"}, {"sha": "ad80a009ece80674a72773efc993d868bdecea2a", "filename": "tests/ui/traits/trait-upcasting/multiple_supertrait_upcastable.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/66f3ab90a14254d70c96acb0332fe403964025ce/tests%2Fui%2Ftraits%2Ftrait-upcasting%2Fmultiple_supertrait_upcastable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66f3ab90a14254d70c96acb0332fe403964025ce/tests%2Fui%2Ftraits%2Ftrait-upcasting%2Fmultiple_supertrait_upcastable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Ftrait-upcasting%2Fmultiple_supertrait_upcastable.stderr?ref=66f3ab90a14254d70c96acb0332fe403964025ce", "patch": "@@ -0,0 +1,14 @@\n+error: `C` is object-safe and has multiple supertraits\n+  --> $DIR/multiple_supertrait_upcastable.rs:7:1\n+   |\n+LL | trait C: A + B {}\n+   | ^^^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/multiple_supertrait_upcastable.rs:2:9\n+   |\n+LL | #![deny(multiple_supertrait_upcastable)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}