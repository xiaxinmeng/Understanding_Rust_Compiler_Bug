{"sha": "e4463b2453f3b2665076e5daec23040976b8792e", "node_id": "C_kwDOAAsO6NoAKGU0NDYzYjI0NTNmM2IyNjY1MDc2ZTVkYWVjMjMwNDA5NzZiODc5MmU", "commit": {"author": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2021-12-30T04:19:55Z"}, "committer": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2021-12-30T05:15:51Z"}, "message": "keep noinline for system llvm < 14", "tree": {"sha": "91d81db07258a14eb542f635705737c4f268dd2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91d81db07258a14eb542f635705737c4f268dd2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4463b2453f3b2665076e5daec23040976b8792e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4463b2453f3b2665076e5daec23040976b8792e", "html_url": "https://github.com/rust-lang/rust/commit/e4463b2453f3b2665076e5daec23040976b8792e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4463b2453f3b2665076e5daec23040976b8792e/comments", "author": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b662217e745d88d93dcc6f5f5169bf7a0d9720e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b662217e745d88d93dcc6f5f5169bf7a0d9720e", "html_url": "https://github.com/rust-lang/rust/commit/2b662217e745d88d93dcc6f5f5169bf7a0d9720e"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "cf963531efe2e985ebefda4ff7582bde2ca54cb3", "filename": "compiler/rustc_codegen_gcc/src/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4463b2453f3b2665076e5daec23040976b8792e/compiler%2Frustc_codegen_gcc%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4463b2453f3b2665076e5daec23040976b8792e/compiler%2Frustc_codegen_gcc%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fbuilder.rs?ref=e4463b2453f3b2665076e5daec23040976b8792e", "patch": "@@ -1404,7 +1404,7 @@ impl<'a, 'gcc, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'gcc, 'tcx> {\n         self.cx\n     }\n \n-    fn mark_callsite_cold(&mut self, _llret: RValue<'gcc>) {\n+    fn apply_attrs_to_cleanup_callsite(&mut self, _llret: RValue<'gcc>) {\n         unimplemented!();\n     }\n "}, {"sha": "5217fa2758f79c7f4f559c76fb91698d61b184b7", "filename": "compiler/rustc_codegen_llvm/src/builder.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e4463b2453f3b2665076e5daec23040976b8792e/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4463b2453f3b2665076e5daec23040976b8792e/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs?ref=e4463b2453f3b2665076e5daec23040976b8792e", "patch": "@@ -1201,8 +1201,15 @@ impl<'a, 'll, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         unsafe { llvm::LLVMBuildZExt(self.llbuilder, val, dest_ty, UNNAMED) }\n     }\n \n-    fn mark_callsite_cold(&mut self, llret: &'ll Value) {\n+    fn apply_attrs_to_cleanup_callsite(&mut self, llret: &'ll Value) {\n+        // Cleanup is always the cold path.\n         llvm::Attribute::Cold.apply_callsite(llvm::AttributePlace::Function, llret);\n+\n+        // In LLVM versions with deferred inlining (currently, system LLVM < 14),\n+        // inlining drop glue can lead to exponential size blowup, see #41696 and #92110.\n+        if !llvm_util::is_rust_llvm() && llvm_util::get_version() < (14, 0, 0) {\n+            llvm::Attribute::NoInline.apply_callsite(llvm::AttributePlace::Function, llret);\n+        }\n     }\n }\n "}, {"sha": "324823434ff771dd1a613935214fd88152df2f91", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4463b2453f3b2665076e5daec23040976b8792e/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4463b2453f3b2665076e5daec23040976b8792e/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=e4463b2453f3b2665076e5daec23040976b8792e", "patch": "@@ -1902,6 +1902,8 @@ extern \"C\" {\n     pub fn LLVMRustVersionMinor() -> u32;\n     pub fn LLVMRustVersionPatch() -> u32;\n \n+    pub fn LLVMRustIsRustLLVM() -> bool;\n+\n     pub fn LLVMRustAddModuleFlag(M: &Module, name: *const c_char, value: u32);\n \n     pub fn LLVMRustMetadataAsValue<'a>(C: &'a Context, MD: &'a Metadata) -> &'a Value;"}, {"sha": "7e9850c23cdb5a3e678afa2c7f3e6c35cd8802c3", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e4463b2453f3b2665076e5daec23040976b8792e/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4463b2453f3b2665076e5daec23040976b8792e/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=e4463b2453f3b2665076e5daec23040976b8792e", "patch": "@@ -217,6 +217,12 @@ pub fn get_version() -> (u32, u32, u32) {\n     }\n }\n \n+/// Returns `true` if this LLVM is Rust's bundled LLVM (and not system LLVM).\n+pub fn is_rust_llvm() -> bool {\n+    // Can be called without initializing LLVM\n+    unsafe { llvm::LLVMRustIsRustLLVM() }\n+}\n+\n pub fn print_passes() {\n     // Can be called without initializing LLVM\n     unsafe {"}, {"sha": "dcfe5fcc2ca735aeba3339925f06355d4d390e29", "filename": "compiler/rustc_codegen_ssa/src/mir/block.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e4463b2453f3b2665076e5daec23040976b8792e/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4463b2453f3b2665076e5daec23040976b8792e/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs?ref=e4463b2453f3b2665076e5daec23040976b8792e", "patch": "@@ -160,8 +160,7 @@ impl<'a, 'tcx> TerminatorCodegenHelper<'tcx> {\n             let llret = bx.call(fn_ty, fn_ptr, &llargs, self.funclet(fx));\n             bx.apply_attrs_callsite(&fn_abi, llret);\n             if fx.mir[self.bb].is_cleanup {\n-                // Cleanup is always the cold path.\n-                bx.mark_callsite_cold(llret);\n+                bx.apply_attrs_to_cleanup_callsite(llret);\n             }\n \n             if let Some((ret_dest, target)) = destination {"}, {"sha": "48d88095855d11300667659b63d76e3fdc5f4963", "filename": "compiler/rustc_codegen_ssa/src/traits/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4463b2453f3b2665076e5daec23040976b8792e/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4463b2453f3b2665076e5daec23040976b8792e/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbuilder.rs?ref=e4463b2453f3b2665076e5daec23040976b8792e", "patch": "@@ -311,5 +311,5 @@ pub trait BuilderMethods<'a, 'tcx>:\n     ) -> Self::Value;\n     fn zext(&mut self, val: Self::Value, dest_ty: Self::Type) -> Self::Value;\n \n-    fn mark_callsite_cold(&mut self, llret: Self::Value);\n+    fn apply_attrs_to_cleanup_callsite(&mut self, llret: Self::Value);\n }"}, {"sha": "025a0ee376e3e5e6f390ca00b2c23929446a0dbd", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e4463b2453f3b2665076e5daec23040976b8792e/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e4463b2453f3b2665076e5daec23040976b8792e/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=e4463b2453f3b2665076e5daec23040976b8792e", "patch": "@@ -716,6 +716,14 @@ extern \"C\" uint32_t LLVMRustVersionMinor() { return LLVM_VERSION_MINOR; }\n \n extern \"C\" uint32_t LLVMRustVersionMajor() { return LLVM_VERSION_MAJOR; }\n \n+extern \"C\" bool LLVMRustIsRustLLVM() {\n+#ifdef LLVM_RUSTLLVM\n+  return true;\n+#else\n+  return false;\n+#endif\n+}\n+\n extern \"C\" void LLVMRustAddModuleFlag(LLVMModuleRef M, const char *Name,\n                                       uint32_t Value) {\n   unwrap(M)->addModuleFlag(Module::Warning, Name, Value);"}, {"sha": "650d5b230f4c23a52cc90061047cc9f04fa7d108", "filename": "src/test/codegen/unwind-landingpad-cold.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e4463b2453f3b2665076e5daec23040976b8792e/src%2Ftest%2Fcodegen%2Funwind-landingpad-cold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4463b2453f3b2665076e5daec23040976b8792e/src%2Ftest%2Fcodegen%2Funwind-landingpad-cold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Funwind-landingpad-cold.rs?ref=e4463b2453f3b2665076e5daec23040976b8792e", "patch": "@@ -1,3 +1,4 @@\n+// no-system-llvm: needs #92110\n // compile-flags: -Cno-prepopulate-passes\n #![crate_type = \"lib\"]\n "}, {"sha": "4f13b60b1f9ef72ad9be2bad8c4f643d679c2e8f", "filename": "src/test/codegen/unwind-landingpad-inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4463b2453f3b2665076e5daec23040976b8792e/src%2Ftest%2Fcodegen%2Funwind-landingpad-inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4463b2453f3b2665076e5daec23040976b8792e/src%2Ftest%2Fcodegen%2Funwind-landingpad-inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Funwind-landingpad-inline.rs?ref=e4463b2453f3b2665076e5daec23040976b8792e", "patch": "@@ -1,4 +1,4 @@\n-// no-system-llvm: needs patch for Rust alloc/dealloc functions\n+// no-system-llvm: needs #92110 + patch for Rust alloc/dealloc functions\n // compile-flags: -Copt-level=3\n #![crate_type = \"lib\"]\n "}]}