{"sha": "6091696cfd7d4661b8e9352eeb1e87eff29f15fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwOTE2OTZjZmQ3ZDQ2NjFiOGU5MzUyZWViMWU4N2VmZjI5ZjE1ZmE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-06T07:21:01Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-06T09:08:08Z"}, "message": "Rollup merge of #55601 - petrochenkov:featissue, r=pnkfelix\n\nFix tracking issue numbers for some unstable features\n\nAnd also remove deprecated unstable `#[panic_implementation]` attribute that was superseded by stable `#[panic_handler]` and doesn't have an open tracking issue.", "tree": {"sha": "1a579a9431d6b1adbf3013c8b6ff24aa89bb1dcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a579a9431d6b1adbf3013c8b6ff24aa89bb1dcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6091696cfd7d4661b8e9352eeb1e87eff29f15fa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvhWfgACgkQ/vbIBR0O\nATzmeQ//UfNwJzK10081h9TqXkq4ZH8JfG1oMby8vrYKIK4BAXQUv1A/hnIbK+i4\nhj8mqqET0jMYyHLPvwZNUfguazh7NAA6dwKLtR8zUmi+CIWbTb+8bjwiiTbHg2uB\nBa4GfAWFErV7Yu86GEaw/3sqtihBdagN1OUNwIVtZ7il+AI/fBBkusuw59K32moc\nBbE3kqO0Kfby6Z8B0iFZwq2GXlTOHBZETn1dIXdXQZxIA5NEYK33nJi7KFfb4KJg\nHscTh4hc62PgN3FJp8KSgw/SyOWL7m4YYQwmCiYEo5srGCI3IinL1praKU8F0jfh\nknVUrvxZpNFdC9iMvVx/ZYQLvC8LG1kV85at0i0vAVt697LpRTGmZdLrruhPgxJf\nP+OTsmN4bxkEMHZCze6/WQ0zTCmcWILaHAYN3s2t5WqfW4oLej5qdVXfd/7Qz6PS\nayO2QRp65iX/k9v24G4oPQMNgQgUpaQv8DtY8UkRQqOVMv4ZyespkHqSkNYewK8y\ntOZWhVuEWzRCRVeh3rSws+MtrWNJyeCarN4qhBNXJStADhNtYgotnGoRHoV942ul\nmn18AiE5iwEPmQG7Jjb2t95FNeTzLGjXD/BwoPIJyBQVGWNsqAIyyM04sQAgGN1R\nuP2q93qBDizxctc8IgaJD+zo4mSrjKJUr8hjiWGlp8VHygBdN3A=\n=mO8e\n-----END PGP SIGNATURE-----", "payload": "tree 1a579a9431d6b1adbf3013c8b6ff24aa89bb1dcf\nparent 462f63e1bbb59f1e4cea5272028e85852f9129aa\nparent 29d2ceae7c03fb4a4d99e4e766cf212fb9582ffa\nauthor kennytm <kennytm@gmail.com> 1541488861 +0800\ncommitter kennytm <kennytm@gmail.com> 1541495288 +0800\n\nRollup merge of #55601 - petrochenkov:featissue, r=pnkfelix\n\nFix tracking issue numbers for some unstable features\n\nAnd also remove deprecated unstable `#[panic_implementation]` attribute that was superseded by stable `#[panic_handler]` and doesn't have an open tracking issue.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6091696cfd7d4661b8e9352eeb1e87eff29f15fa", "html_url": "https://github.com/rust-lang/rust/commit/6091696cfd7d4661b8e9352eeb1e87eff29f15fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "462f63e1bbb59f1e4cea5272028e85852f9129aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/462f63e1bbb59f1e4cea5272028e85852f9129aa", "html_url": "https://github.com/rust-lang/rust/commit/462f63e1bbb59f1e4cea5272028e85852f9129aa"}, {"sha": "29d2ceae7c03fb4a4d99e4e766cf212fb9582ffa", "url": "https://api.github.com/repos/rust-lang/rust/commits/29d2ceae7c03fb4a4d99e4e766cf212fb9582ffa", "html_url": "https://github.com/rust-lang/rust/commit/29d2ceae7c03fb4a4d99e4e766cf212fb9582ffa"}], "stats": {"total": 139, "additions": 26, "deletions": 113}, "files": [{"sha": "c5bcfd48cf39a5dbcc46fc2b527f0900031acf70", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=6091696cfd7d4661b8e9352eeb1e87eff29f15fa", "patch": "@@ -291,10 +291,8 @@ fn has_allow_dead_code_or_lang_attr(tcx: TyCtxt<'_, '_, '_>,\n         return true;\n     }\n \n-    // (To be) stable attribute for #[lang = \"panic_impl\"]\n-    if attr::contains_name(attrs, \"panic_implementation\") ||\n-        attr::contains_name(attrs, \"panic_handler\")\n-    {\n+    // Stable attribute for #[lang = \"panic_impl\"]\n+    if attr::contains_name(attrs, \"panic_handler\") {\n         return true;\n     }\n "}, {"sha": "55ffa50e7c896b0600390f434b4c8599d2a62083", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=6091696cfd7d4661b8e9352eeb1e87eff29f15fa", "patch": "@@ -204,9 +204,7 @@ pub fn extract(attrs: &[ast::Attribute]) -> Option<(Symbol, Span)> {\n             if let Some(value) = attribute.value_str() {\n                 return Some((value, attribute.span));\n             }\n-        } else if attribute.check_name(\"panic_implementation\") ||\n-            attribute.check_name(\"panic_handler\")\n-        {\n+        } else if attribute.check_name(\"panic_handler\") {\n             return Some((Symbol::intern(\"panic_impl\"), attribute.span))\n         } else if attribute.check_name(\"alloc_error_handler\") {\n             return Some((Symbol::intern(\"oom\"), attribute.span))"}, {"sha": "6dba020120f848385ac0a3bcb5a1cd39f818bcd1", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=6091696cfd7d4661b8e9352eeb1e87eff29f15fa", "patch": "@@ -511,7 +511,7 @@ fn mono_item_visibility(\n         //\n         // * First is weak lang items. These are basically mechanisms for\n         //   libcore to forward-reference symbols defined later in crates like\n-        //   the standard library or `#[panic_implementation]` definitions. The\n+        //   the standard library or `#[panic_handler]` definitions. The\n         //   definition of these weak lang items needs to be referenceable by\n         //   libcore, so we're no longer a candidate for internalization.\n         //   Removal of these functions can't be done by LLVM but rather must be"}, {"sha": "7dfdb926c60ef63a0b9f8fe8d71fb0bfe451e660", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=6091696cfd7d4661b8e9352eeb1e87eff29f15fa", "patch": "@@ -1167,7 +1167,7 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n         }\n     }\n \n-    // Check that a function marked as `#[panic_implementation]` has signature `fn(&PanicInfo) -> !`\n+    // Check that a function marked as `#[panic_handler]` has signature `fn(&PanicInfo) -> !`\n     if let Some(panic_impl_did) = fcx.tcx.lang_items().panic_impl() {\n         if panic_impl_did == fcx.tcx.hir.local_def_id(fn_id) {\n             if let Some(panic_info_did) = fcx.tcx.lang_items().panic_info() {"}, {"sha": "cb15c517c178564bbbdee5561234e04e9d96370a", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 8, "deletions": 19, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=6091696cfd7d4661b8e9352eeb1e87eff29f15fa", "patch": "@@ -349,7 +349,7 @@ declare_features! (\n     (active, abi_thiscall, \"1.19.0\", None, None),\n \n     // Allows a test to fail without failing the whole suite\n-    (active, allow_fail, \"1.19.0\", Some(42219), None),\n+    (active, allow_fail, \"1.19.0\", Some(46488), None),\n \n     // Allows unsized tuple coercion.\n     (active, unsized_tuple_coercion, \"1.20.0\", Some(42877), None),\n@@ -376,7 +376,7 @@ declare_features! (\n     (active, non_exhaustive, \"1.22.0\", Some(44109), None),\n \n     // `crate` as visibility modifier, synonymous to `pub(crate)`\n-    (active, crate_visibility_modifier, \"1.23.0\", Some(45388), None),\n+    (active, crate_visibility_modifier, \"1.23.0\", Some(53120), None),\n \n     // extern types\n     (active, extern_types, \"1.23.0\", Some(43467), None),\n@@ -391,13 +391,13 @@ declare_features! (\n     (active, generic_associated_types, \"1.23.0\", Some(44265), None),\n \n     // `extern` in paths\n-    (active, extern_in_paths, \"1.23.0\", Some(44660), None),\n+    (active, extern_in_paths, \"1.23.0\", Some(55600), None),\n \n     // Use `?` as the Kleene \"at most one\" operator\n     (active, macro_at_most_once_rep, \"1.25.0\", Some(48075), None),\n \n     // Infer static outlives requirements; RFC 2093\n-    (active, infer_static_outlives_requirements, \"1.26.0\", Some(44493), None),\n+    (active, infer_static_outlives_requirements, \"1.26.0\", Some(54185), None),\n \n     // Multiple patterns with `|` in `if let` and `while let`\n     (active, if_while_or_patterns, \"1.26.0\", Some(48215), None),\n@@ -448,9 +448,6 @@ declare_features! (\n     // Integer match exhaustiveness checking\n     (active, exhaustive_integer_patterns, \"1.30.0\", Some(50907), None),\n \n-    // RFC 2070: #[panic_implementation] / #[panic_handler]\n-    (active, panic_implementation, \"1.28.0\", Some(44489), None),\n-\n     // #[doc(keyword = \"...\")]\n     (active, doc_keyword, \"1.28.0\", Some(51315), None),\n \n@@ -466,7 +463,7 @@ declare_features! (\n     (active, test_2018_feature, \"1.31.0\", Some(0), Some(Edition::Edition2018)),\n \n     // Support for arbitrary delimited token streams in non-macro attributes\n-    (active, unrestricted_attribute_tokens, \"1.30.0\", Some(44690), None),\n+    (active, unrestricted_attribute_tokens, \"1.30.0\", Some(55208), None),\n \n     // Allows `use x::y;` to resolve through `self::x`, not just `::x`\n     (active, uniform_paths, \"1.30.0\", Some(53130), None),\n@@ -503,7 +500,7 @@ declare_features! (\n     (active, underscore_const_names, \"1.31.0\", Some(54912), None),\n \n     // `extern crate foo as bar;` puts `bar` into extern prelude.\n-    (active, extern_crate_item_prelude, \"1.31.0\", Some(54658), None),\n+    (active, extern_crate_item_prelude, \"1.31.0\", Some(55599), None),\n \n     // `reason = ` in lint attributes and `expect` lint attribute\n     (active, lint_reasons, \"1.31.0\", Some(54503), None),\n@@ -541,6 +538,8 @@ declare_features! (\n      Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n     (removed, proc_macro_gen, \"1.27.0\", Some(54727), None,\n      Some(\"subsumed by `#![feature(proc_macro_hygiene)]`\")),\n+    (removed, panic_implementation, \"1.28.0\", Some(44489), None,\n+     Some(\"subsumed by `#[panic_handler]`\")),\n );\n \n declare_features! (\n@@ -1160,16 +1159,6 @@ pub const BUILTIN_ATTRIBUTES: &'static [(&'static str, AttributeType, AttributeG\n                                    \"infer 'static lifetime requirements\",\n                                    cfg_fn!(infer_static_outlives_requirements))),\n \n-    // RFC 2070 (deprecated attribute name)\n-    (\"panic_implementation\",\n-     Normal,\n-     Gated(Stability::Deprecated(\"https://github.com/rust-lang/rust/issues/44489\\\n-                                  #issuecomment-415140224\",\n-                                 Some(\"replace this attribute with `#[panic_handler]`\")),\n-           \"panic_implementation\",\n-           \"this attribute was renamed to `panic_handler`\",\n-           cfg_fn!(panic_implementation))),\n-\n     // RFC 2070\n     (\"panic_handler\", Normal, Ungated),\n "}, {"sha": "dcc2f4f5223007cd09abe8325f1b37f4510ebec6", "filename": "src/test/run-make/wasm-symbols-not-imported/foo.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Ftest%2Frun-make%2Fwasm-symbols-not-imported%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Ftest%2Frun-make%2Fwasm-symbols-not-imported%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fwasm-symbols-not-imported%2Ffoo.rs?ref=6091696cfd7d4661b8e9352eeb1e87eff29f15fa", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n \n #![crate_type = \"cdylib\"]\n-\n-#![feature(panic_implementation)]\n #![no_std]\n \n use core::panic::PanicInfo;\n@@ -20,7 +18,7 @@ pub extern fn foo() {\n     panic!()\n }\n \n-#[panic_implementation]\n+#[panic_handler]\n fn panic(_info: &PanicInfo) -> ! {\n     loop {}\n }"}, {"sha": "736fad44b8b5840b4259c4ddeafe8eb1d185e4d2", "filename": "src/test/ui/feature-gates/feature-gate-allow_fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow_fail.stderr?ref=6091696cfd7d4661b8e9352eeb1e87eff29f15fa", "patch": "@@ -1,4 +1,4 @@\n-error[E0658]: allow_fail attribute is currently unstable (see issue #42219)\n+error[E0658]: allow_fail attribute is currently unstable (see issue #46488)\n   --> $DIR/feature-gate-allow_fail.rs:13:1\n    |\n LL | #[allow_fail] //~ ERROR allow_fail attribute is currently unstable"}, {"sha": "e1c1dcbcd790ce271faa113fd3c83542b6e53674", "filename": "src/test/ui/feature-gates/feature-gate-crate_visibility_modifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-crate_visibility_modifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-crate_visibility_modifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-crate_visibility_modifier.stderr?ref=6091696cfd7d4661b8e9352eeb1e87eff29f15fa", "patch": "@@ -1,4 +1,4 @@\n-error[E0658]: `crate` visibility modifier is experimental (see issue #45388)\n+error[E0658]: `crate` visibility modifier is experimental (see issue #53120)\n   --> $DIR/feature-gate-crate_visibility_modifier.rs:11:1\n    |\n LL | crate struct Bender { //~ ERROR `crate` visibility modifier is experimental"}, {"sha": "bbd4b630263a44706e21fb21377a314db30c7319", "filename": "src/test/ui/feature-gates/feature-gate-extern_crate_item_prelude.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_crate_item_prelude.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_crate_item_prelude.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_crate_item_prelude.stderr?ref=6091696cfd7d4661b8e9352eeb1e87eff29f15fa", "patch": "@@ -1,68 +1,68 @@\n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:26:9\n    |\n LL |     use alloc;\n    |         ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:28:9\n    |\n LL |     use alloc::boxed;\n    |         ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:33:11\n    |\n LL |     use ::alloc;\n    |           ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:35:11\n    |\n LL |     use ::alloc::boxed;\n    |           ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:9:17\n    |\n LL |         let v = alloc::vec![0];\n    |                 ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:11:18\n    |\n LL |         type A = alloc::boxed::Box<u8>;\n    |                  ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:18:19\n    |\n LL |         let v = ::alloc::vec![0];\n    |                   ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:20:20\n    |\n LL |         type A = ::alloc::boxed::Box<u8>;\n    |                    ^^^^^\n    |\n    = help: add #![feature(extern_crate_item_prelude)] to the crate attributes to enable\n \n-error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #54658)\n+error[E0658]: use of extern prelude names introduced with `extern crate` items is unstable (see issue #55599)\n   --> $DIR/feature-gate-extern_crate_item_prelude.rs:42:14\n    |\n LL |     type A = core::boxed::Box<u8>;"}, {"sha": "a73533b617891c121ce4029a46d0d8cb414729bd", "filename": "src/test/ui/feature-gates/feature-gate-extern_in_paths.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_in_paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6091696cfd7d4661b8e9352eeb1e87eff29f15fa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_in_paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_in_paths.stderr?ref=6091696cfd7d4661b8e9352eeb1e87eff29f15fa", "patch": "@@ -1,4 +1,4 @@\n-error[E0658]: `extern` in paths is experimental (see issue #44660)\n+error[E0658]: `extern` in paths is experimental (see issue #55600)\n   --> $DIR/feature-gate-extern_in_paths.rs:14:13\n    |\n LL |     let _ = extern::std::vec::Vec::new(); //~ ERROR `extern` in paths is experimental"}, {"sha": "ca51154884f1227fb047c5df0bc3940fbcb87993", "filename": "src/test/ui/feature-gates/feature-gate-panic-implementation.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/462f63e1bbb59f1e4cea5272028e85852f9129aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-panic-implementation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/462f63e1bbb59f1e4cea5272028e85852f9129aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-panic-implementation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-panic-implementation.rs?ref=462f63e1bbb59f1e4cea5272028e85852f9129aa", "patch": "@@ -1,21 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// compile-flags:-C panic=abort\n-\n-#![no_std]\n-#![no_main]\n-\n-use core::panic::PanicInfo;\n-\n-#[panic_implementation] //~ ERROR this attribute was renamed to `panic_handler` (see issue #44489)\n-fn panic(info: &PanicInfo) -> ! {\n-    loop {}\n-}"}, {"sha": "a54780468c42de97a4c48303f78e7fe4d8435237", "filename": "src/test/ui/feature-gates/feature-gate-panic-implementation.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/462f63e1bbb59f1e4cea5272028e85852f9129aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-panic-implementation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/462f63e1bbb59f1e4cea5272028e85852f9129aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-panic-implementation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-panic-implementation.stderr?ref=462f63e1bbb59f1e4cea5272028e85852f9129aa", "patch": "@@ -1,11 +0,0 @@\n-error[E0658]: this attribute was renamed to `panic_handler` (see issue #44489)\n-  --> $DIR/feature-gate-panic-implementation.rs:18:1\n-   |\n-LL | #[panic_implementation] //~ ERROR this attribute was renamed to `panic_handler` (see issue #44489)\n-   | ^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: add #![feature(panic_implementation)] to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "c4bec01f6af61a59ef0ec990b4906c19e7ea41bf", "filename": "src/test/ui/panic-implementation/panic-implementation-deprecated.rs", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/462f63e1bbb59f1e4cea5272028e85852f9129aa/src%2Ftest%2Fui%2Fpanic-implementation%2Fpanic-implementation-deprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/462f63e1bbb59f1e4cea5272028e85852f9129aa/src%2Ftest%2Fui%2Fpanic-implementation%2Fpanic-implementation-deprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-implementation%2Fpanic-implementation-deprecated.rs?ref=462f63e1bbb59f1e4cea5272028e85852f9129aa", "patch": "@@ -1,24 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// compile-flags:-C panic=abort\n-\n-#![deny(deprecated)]\n-#![feature(panic_implementation)]\n-#![no_std]\n-\n-use core::panic::PanicInfo;\n-\n-#[panic_implementation]\n-fn panic(info: &PanicInfo) -> ! {\n-    loop {}\n-}\n-\n-fn main() {}"}, {"sha": "fabfba94878f520548230e5db2c5b80fd808f10c", "filename": "src/test/ui/panic-implementation/panic-implementation-deprecated.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/462f63e1bbb59f1e4cea5272028e85852f9129aa/src%2Ftest%2Fui%2Fpanic-implementation%2Fpanic-implementation-deprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/462f63e1bbb59f1e4cea5272028e85852f9129aa/src%2Ftest%2Fui%2Fpanic-implementation%2Fpanic-implementation-deprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-implementation%2Fpanic-implementation-deprecated.stderr?ref=462f63e1bbb59f1e4cea5272028e85852f9129aa", "patch": "@@ -1,14 +0,0 @@\n-error: use of deprecated attribute `panic_implementation`: this attribute was renamed to `panic_handler`. See https://github.com/rust-lang/rust/issues/44489#issuecomment-415140224\n-  --> $DIR/panic-implementation-deprecated.rs:19:1\n-   |\n-LL | #[panic_implementation]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^ help: replace this attribute with `#[panic_handler]`\n-   |\n-note: lint level defined here\n-  --> $DIR/panic-implementation-deprecated.rs:13:9\n-   |\n-LL | #![deny(deprecated)]\n-   |         ^^^^^^^^^^\n-\n-error: aborting due to previous error\n-"}]}