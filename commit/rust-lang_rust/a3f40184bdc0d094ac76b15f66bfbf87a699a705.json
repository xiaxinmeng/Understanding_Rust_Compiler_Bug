{"sha": "a3f40184bdc0d094ac76b15f66bfbf87a699a705", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzZjQwMTg0YmRjMGQwOTRhYzc2YjE1ZjY2YmZiZjg3YTY5OWE3MDU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-04-07T04:49:10Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-04-07T05:02:51Z"}, "message": "cmp: add Ord+TotalOrd impls for Ordering itself", "tree": {"sha": "0b095ee097ce8b517ed215ad66b21060967fc31b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b095ee097ce8b517ed215ad66b21060967fc31b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3f40184bdc0d094ac76b15f66bfbf87a699a705", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3f40184bdc0d094ac76b15f66bfbf87a699a705", "html_url": "https://github.com/rust-lang/rust/commit/a3f40184bdc0d094ac76b15f66bfbf87a699a705", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3f40184bdc0d094ac76b15f66bfbf87a699a705/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c47d80304e7b3726352183f466ab0756c24d7431", "url": "https://api.github.com/repos/rust-lang/rust/commits/c47d80304e7b3726352183f466ab0756c24d7431", "html_url": "https://github.com/rust-lang/rust/commit/c47d80304e7b3726352183f466ab0756c24d7431"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "f96575aaf414f82374a5de59d247fcd7b6a539b4", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a3f40184bdc0d094ac76b15f66bfbf87a699a705/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3f40184bdc0d094ac76b15f66bfbf87a699a705/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=a3f40184bdc0d094ac76b15f66bfbf87a699a705", "patch": "@@ -65,13 +65,31 @@ totaleq_impl!(int)\n totaleq_impl!(uint)\n \n #[deriving(Clone, Eq)]\n-pub enum Ordering { Less, Equal, Greater }\n+pub enum Ordering { Less = -1, Equal = 0, Greater = 1 }\n \n /// Trait for types that form a total order\n pub trait TotalOrd: TotalEq {\n     fn cmp(&self, other: &Self) -> Ordering;\n }\n \n+impl TotalOrd for Ordering {\n+    #[inline(always)]\n+    fn cmp(&self, other: &Ordering) -> Ordering {\n+        (*self as int).cmp(&(*other as int))\n+    }\n+}\n+\n+impl Ord for Ordering {\n+    #[inline(always)]\n+    fn lt(&self, other: &Ordering) -> bool { (*self as int) < (*other as int) }\n+    #[inline(always)]\n+    fn le(&self, other: &Ordering) -> bool { (*self as int) <= (*other as int) }\n+    #[inline(always)]\n+    fn gt(&self, other: &Ordering) -> bool { (*self as int) > (*other as int) }\n+    #[inline(always)]\n+    fn ge(&self, other: &Ordering) -> bool { (*self as int) >= (*other as int) }\n+}\n+\n macro_rules! totalord_impl(\n     ($t:ty) => {\n         impl TotalOrd for $t {\n@@ -180,4 +198,10 @@ mod test {\n         assert!(5.equals(&5));\n         assert!(!2.equals(&17));\n     }\n+\n+    #[test]\n+    fn test_ordering_order() {\n+        assert!(Less < Equal);\n+        assert_eq!(Greater.cmp(&Less), Greater);\n+    }\n }"}]}