{"sha": "879b6392d9d5b81a18f02f640e29e1898960d533", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3OWI2MzkyZDlkNWI4MWExOGYwMmY2NDBlMjllMTg5ODk2MGQ1MzM=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-07-21T22:11:41Z"}, "committer": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-07-21T22:12:27Z"}, "message": "Comments and cleanup.", "tree": {"sha": "df582c7db5e77ae9bb698f49fe3e693f2ac34479", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df582c7db5e77ae9bb698f49fe3e693f2ac34479"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/879b6392d9d5b81a18f02f640e29e1898960d533", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/879b6392d9d5b81a18f02f640e29e1898960d533", "html_url": "https://github.com/rust-lang/rust/commit/879b6392d9d5b81a18f02f640e29e1898960d533", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/879b6392d9d5b81a18f02f640e29e1898960d533/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ebd29225379d8ab2229f411a16eae880c887b9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ebd29225379d8ab2229f411a16eae880c887b9b", "html_url": "https://github.com/rust-lang/rust/commit/8ebd29225379d8ab2229f411a16eae880c887b9b"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "06734b0b362a0ed5f90759fda44ee4162a8843a1", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/879b6392d9d5b81a18f02f640e29e1898960d533/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/879b6392d9d5b81a18f02f640e29e1898960d533/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=879b6392d9d5b81a18f02f640e29e1898960d533", "patch": "@@ -6340,7 +6340,7 @@ fn trans_anon_obj(@block_ctxt bcx, &span sp, &ast::anon_obj anon_obj,\n         let ty::t typarams_ty = ty::mk_imm_tup(ccx.tcx, ~[]);\n \n         // Tuple type for body:\n-        // [tydesc_ty, [typaram, ...], [field, ...], with_obj]\n+        // [tydesc, [typaram, ...], [field, ...], with_obj]\n         let ty::t body_ty =\n             ty::mk_imm_tup(ccx.tcx, ~[tydesc_ty, typarams_ty,\n                                       fields_ty, with_obj_ty]);\n@@ -6352,7 +6352,7 @@ fn trans_anon_obj(@block_ctxt bcx, &span sp, &ast::anon_obj anon_obj,\n \n         // mk_imm_box throws a refcount into the type we're synthesizing,\n         // so that it looks like:\n-        // [rc, [tydesc_ty, [typaram, ...], [field, ...], with_obj]]\n+        // [rc, [tydesc, [typaram, ...], [field, ...], with_obj]]\n         let ty::t boxed_body_ty = ty::mk_imm_box(ccx.tcx, body_ty);\n \n         // Grab onto the refcount and body parts of the box we allocated.\n@@ -6374,7 +6374,6 @@ fn trans_anon_obj(@block_ctxt bcx, &span sp, &ast::anon_obj anon_obj,\n         // the user of the object.  So the tydesc is needed to keep track of\n         // the types of the object's fields, so that the fields can be freed\n         // later.\n-\n         auto body_tydesc =\n             GEP_tup_like(bcx, body_ty, body.val,\n                          ~[0, abi::obj_body_elt_tydesc]);\n@@ -7153,7 +7152,7 @@ fn process_fwding_mthd(@local_ctxt cx, &span sp, @ty::method m,\n     let ty::t typarams_ty = ty::mk_imm_tup(cx.ccx.tcx, ~[]);\n \n     // Tuple type for body:\n-    // [tydesc_ty, [typaram, ...], [field, ...], with_obj]\n+    // [tydesc, [typaram, ...], [field, ...], with_obj]\n     let ty::t body_ty =\n         ty::mk_imm_tup(cx.ccx.tcx, ~[tydesc_ty, typarams_ty,\n                                      fields_ty, with_obj_ty]);"}]}