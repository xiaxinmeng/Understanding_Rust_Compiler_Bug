{"sha": "33ce1164e20d8f0f87cc19eed7281786de72a424", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzY2UxMTY0ZTIwZDhmMGY4N2NjMTllZWQ3MjgxNzg2ZGU3MmE0MjQ=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-07-08T22:00:47Z"}, "committer": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-07-08T22:00:47Z"}, "message": "Nicer pretty-printing for anon objs.  Closes #499.\n\n(Incidentally, what's the right way to test changes to the\npretty-printer?  There has to be a better way than what I did, which\nwas to log_err the results of expr_to_str as exprs passed through\ntrans and glance at the output.)", "tree": {"sha": "68f78e370cee338bba14a1d7c24b6e09b3735bd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68f78e370cee338bba14a1d7c24b6e09b3735bd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33ce1164e20d8f0f87cc19eed7281786de72a424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33ce1164e20d8f0f87cc19eed7281786de72a424", "html_url": "https://github.com/rust-lang/rust/commit/33ce1164e20d8f0f87cc19eed7281786de72a424", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33ce1164e20d8f0f87cc19eed7281786de72a424/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4319e7a6556b26cb1db6e933197bef5e97782c2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4319e7a6556b26cb1db6e933197bef5e97782c2e", "html_url": "https://github.com/rust-lang/rust/commit/4319e7a6556b26cb1db6e933197bef5e97782c2e"}], "stats": {"total": 53, "additions": 50, "deletions": 3}, "files": [{"sha": "65705ff48fb709e88994fabfb9b29e3f50d3846f", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 50, "deletions": 3, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/33ce1164e20d8f0f87cc19eed7281786de72a424/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33ce1164e20d8f0f87cc19eed7281786de72a424/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=33ce1164e20d8f0f87cc19eed7281786de72a424", "patch": "@@ -986,10 +986,57 @@ fn print_expr(&ps s, &@ast::expr expr) {\n             print_expr(s, expr);\n             pclose(s);\n         }\n-        case (ast::expr_anon_obj(_, _)) {\n-            word(s.s, \"anon obj\");\n-            // FIXME (issue #499): nicer pretty-printing of anon objs\n+        case (ast::expr_anon_obj(?anon_obj, ?tps)) {\n+            head(s, \"obj\");\n+            print_type_params(s, tps);\n+\n+            // Fields\n+            popen(s);\n+            fn print_field(&ps s, &ast::anon_obj_field field) {\n+                ibox(s, indent_unit);\n+                print_mutability(s, field.mut);\n+                print_type(s, *field.ty);\n+                space(s.s);\n+                word(s.s, field.ident);\n+                word_space(s, \"=\");\n+                print_expr(s, field.expr);\n+                end(s);\n+            }\n+            fn get_span(&ast::anon_obj_field f) -> codemap::span { \n+                ret f.ty.span; \n+            }\n+            alt (anon_obj.fields) {\n+                case (none) { }\n+                case (some(?fields)) {\n+                    commasep_cmnt_ivec(s, consistent, fields, print_field, \n+                                       get_span);\n+                }\n+            }\n+            pclose(s);\n+            space(s.s);\n+            bopen(s);\n+\n+            // Methods\n+            for (@ast::method meth in anon_obj.methods) {\n+                let ast::ty_param[] typarams = ~[];\n+                hardbreak_if_not_bol(s);\n+                maybe_print_comment(s, meth.span.lo);\n+                print_fn(s, meth.node.meth.decl, meth.node.meth.proto,\n+                         meth.node.ident, typarams);\n+                word(s.s, \" \");\n+                print_block(s, meth.node.meth.body);\n+            }\n+            space(s.s);\n \n+            // With object\n+            alt (anon_obj.with_obj) {\n+                case (none) { }\n+                case (some(?e)) {\n+                    word_space(s, \"with\");\n+                    print_expr(s, e);\n+                }\n+            }\n+            bclose(s, expr.span);\n         }\n     }\n     s.ann.post(ann_node);"}]}