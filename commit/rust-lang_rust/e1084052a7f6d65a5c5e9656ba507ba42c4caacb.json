{"sha": "e1084052a7f6d65a5c5e9656ba507ba42c4caacb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxMDg0MDUyYTdmNmQ2NWE1YzVlOTY1NmJhNTA3YmE0MmM0Y2FhY2I=", "commit": {"author": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-08-25T16:14:10Z"}, "committer": {"name": "LinkTed", "email": "LinkTed@users.noreply.github.com", "date": "2020-10-10T13:19:11Z"}, "message": "Replace `TryFrom` of `AncillaryData` with a private method.", "tree": {"sha": "9308597d4f866595c5ada6bcae1a618adf5f6626", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9308597d4f866595c5ada6bcae1a618adf5f6626"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1084052a7f6d65a5c5e9656ba507ba42c4caacb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1084052a7f6d65a5c5e9656ba507ba42c4caacb", "html_url": "https://github.com/rust-lang/rust/commit/e1084052a7f6d65a5c5e9656ba507ba42c4caacb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1084052a7f6d65a5c5e9656ba507ba42c4caacb/comments", "author": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LinkTed", "id": 6806266, "node_id": "MDQ6VXNlcjY4MDYyNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6806266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinkTed", "html_url": "https://github.com/LinkTed", "followers_url": "https://api.github.com/users/LinkTed/followers", "following_url": "https://api.github.com/users/LinkTed/following{/other_user}", "gists_url": "https://api.github.com/users/LinkTed/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinkTed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinkTed/subscriptions", "organizations_url": "https://api.github.com/users/LinkTed/orgs", "repos_url": "https://api.github.com/users/LinkTed/repos", "events_url": "https://api.github.com/users/LinkTed/events{/privacy}", "received_events_url": "https://api.github.com/users/LinkTed/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8784ffbb4e45c6081369805fccd34b77f3ef8ec1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8784ffbb4e45c6081369805fccd34b77f3ef8ec1", "html_url": "https://github.com/rust-lang/rust/commit/8784ffbb4e45c6081369805fccd34b77f3ef8ec1"}], "stats": {"total": 41, "additions": 18, "deletions": 23}, "files": [{"sha": "142526f3a41976475eec115f3c00a83ef8a5380f", "filename": "library/std/src/sys/unix/ext/net/ancillary.rs", "status": "modified", "additions": 18, "deletions": 23, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/e1084052a7f6d65a5c5e9656ba507ba42c4caacb/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1084052a7f6d65a5c5e9656ba507ba42c4caacb/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fnet%2Fancillary.rs?ref=e1084052a7f6d65a5c5e9656ba507ba42c4caacb", "patch": "@@ -349,29 +349,24 @@ impl<'a> AncillaryData<'a> {\n         let scm_credentials = ScmCredentials(ancillary_data_iter);\n         AncillaryData::ScmCredentials(scm_credentials)\n     }\n-}\n \n-#[cfg(any(\n-    target_os = \"haiku\",\n-    target_os = \"solaris\",\n-    target_os = \"illumos\",\n-    target_os = \"macos\",\n-    target_os = \"ios\",\n-    target_os = \"freebsd\",\n-    target_os = \"dragonfly\",\n-    target_os = \"openbsd\",\n-    target_os = \"netbsd\",\n-    target_os = \"linux\",\n-    target_os = \"android\",\n-    target_os = \"emscripten\",\n-    target_os = \"fuchsia\",\n-    target_env = \"uclibc\",\n-))]\n-#[unstable(feature = \"unix_socket_ancillary_data\", issue = \"none\")]\n-impl<'a> TryFrom<&'a libc::cmsghdr> for AncillaryData<'a> {\n-    type Error = AncillaryError;\n-\n-    fn try_from(cmsg: &'a libc::cmsghdr) -> Result<Self, Self::Error> {\n+    #[cfg(any(\n+        target_os = \"haiku\",\n+        target_os = \"solaris\",\n+        target_os = \"illumos\",\n+        target_os = \"macos\",\n+        target_os = \"ios\",\n+        target_os = \"freebsd\",\n+        target_os = \"dragonfly\",\n+        target_os = \"openbsd\",\n+        target_os = \"netbsd\",\n+        target_os = \"linux\",\n+        target_os = \"android\",\n+        target_os = \"emscripten\",\n+        target_os = \"fuchsia\",\n+        target_env = \"uclibc\",\n+    ))]\n+    fn try_from_cmsghdr(cmsg: &'a libc::cmsghdr) -> Result<Self, AncillaryError> {\n         unsafe {\n             let cmsg_len_zero = libc::CMSG_LEN(0) as usize;\n             let data_len = (*cmsg).cmsg_len - cmsg_len_zero;\n@@ -472,7 +467,7 @@ impl<'a> Iterator for Messages<'a> {\n \n             let cmsg = cmsg.as_ref()?;\n             self.current = Some(cmsg);\n-            let ancillary_result = AncillaryData::try_from(cmsg);\n+            let ancillary_result = AncillaryData::try_from_cmsghdr(cmsg);\n             Some(ancillary_result)\n         }\n     }"}]}