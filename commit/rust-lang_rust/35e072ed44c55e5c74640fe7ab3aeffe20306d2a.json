{"sha": "35e072ed44c55e5c74640fe7ab3aeffe20306d2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZTA3MmVkNDRjNTVlNWM3NDY0MGZlN2FiM2FlZmZlMjAzMDZkMmE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-26T08:43:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-26T08:43:58Z"}, "message": "Merge #9696\n\n9696: Fix some grammar / spelling mistakes r=lnicola a=jplatte\n\n\n\nCo-authored-by: Jonas Platte <jplatte+git@posteo.de>", "tree": {"sha": "4b45f690a171efe7e3b026d4e107e8d40142723f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b45f690a171efe7e3b026d4e107e8d40142723f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35e072ed44c55e5c74640fe7ab3aeffe20306d2a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg/nXOCRBK7hj4Ov3rIwAAqesIAJ7eERRuE3SSq8CvCqYO7XN3\n23JYIfxOK8CB9tz9tYcAM6fdSwAmi13rYCUpxqk7aMIYnqo0JJus/RVR39FW3h+Z\nQgiqdb3zAe314wVaDSaGKNMidgIdyF1opLPXdBO3zujGOEtDgF48PyCuof0wijq3\n+Acz0yxFkeYxEhT+iJw3+zDwQUmTgTpL1njd5AVmoffPqGiz1j8uiu6zZrMiGDPL\nLbVFQcxkYtJLcBAE5kylwFUDm6WPv2JBIHZBknTFRz+Pthf4k3mK0bD7O7kkiYnb\nY8pVz5CKmKN3wE+hWLjYJx9QpwVH5IzCx4eMjlnbc6q3ejIe0bAk2NT6iowacBk=\n=bsRB\n-----END PGP SIGNATURE-----\n", "payload": "tree 4b45f690a171efe7e3b026d4e107e8d40142723f\nparent 5983d3745ac8490c1c2798fdc963aa9fc803dd03\nparent c0107d2ea63a5527d2990f7f322f642340ceb3cd\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1627289038 +0000\ncommitter GitHub <noreply@github.com> 1627289038 +0000\n\nMerge #9696\n\n9696: Fix some grammar / spelling mistakes r=lnicola a=jplatte\n\n\n\nCo-authored-by: Jonas Platte <jplatte+git@posteo.de>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35e072ed44c55e5c74640fe7ab3aeffe20306d2a", "html_url": "https://github.com/rust-lang/rust/commit/35e072ed44c55e5c74640fe7ab3aeffe20306d2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35e072ed44c55e5c74640fe7ab3aeffe20306d2a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5983d3745ac8490c1c2798fdc963aa9fc803dd03", "url": "https://api.github.com/repos/rust-lang/rust/commits/5983d3745ac8490c1c2798fdc963aa9fc803dd03", "html_url": "https://github.com/rust-lang/rust/commit/5983d3745ac8490c1c2798fdc963aa9fc803dd03"}, {"sha": "c0107d2ea63a5527d2990f7f322f642340ceb3cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0107d2ea63a5527d2990f7f322f642340ceb3cd", "html_url": "https://github.com/rust-lang/rust/commit/c0107d2ea63a5527d2990f7f322f642340ceb3cd"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a3dc88b5f5d598fb2fed1f0dd24d14a186bfde59", "filename": "crates/ide_diagnostics/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35e072ed44c55e5c74640fe7ab3aeffe20306d2a/crates%2Fide_diagnostics%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35e072ed44c55e5c74640fe7ab3aeffe20306d2a/crates%2Fide_diagnostics%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2Fsrc%2Flib.rs?ref=35e072ed44c55e5c74640fe7ab3aeffe20306d2a", "patch": "@@ -43,7 +43,7 @@ mod handlers {\n     pub(crate) mod unresolved_module;\n     pub(crate) mod unresolved_proc_macro;\n \n-    // The handlers bellow are unusual, the implement the diagnostics as well.\n+    // The handlers below are unusual, the implement the diagnostics as well.\n     pub(crate) mod field_shorthand;\n     pub(crate) mod useless_braces;\n     pub(crate) mod unlinked_file;"}, {"sha": "5ca63e27cfc19e0fc373d69bbe19af0cc4921b47", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/35e072ed44c55e5c74640fe7ab3aeffe20306d2a/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/35e072ed44c55e5c74640fe7ab3aeffe20306d2a/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=35e072ed44c55e5c74640fe7ab3aeffe20306d2a", "patch": "@@ -461,9 +461,9 @@ Mind the code--architecture gap: at the moment, we are using fewer feature flags\n In Rust, it is easy (often too easy) to add serialization to any type by adding `#[derive(Serialize)]`.\n This easiness is misleading -- serializable types impose significant backwards compatability constraints.\n If a type is serializable, then it is a part of some IPC boundary.\n-You often don't control the other side of this boundary, so changing serializable types are hard.\n+You often don't control the other side of this boundary, so changing serializable types is hard.\n \n-For this reason, the types in `ide`, `base_db` and bellow are not serializable by design.\n+For this reason, the types in `ide`, `base_db` and below are not serializable by design.\n If such types need to cross an IPC boundary, then the client of rust-analyzer needs to provide custom, client-specific serialization format.\n This isolates backwards compatibility and migration concerns to a specific client.\n "}]}