{"sha": "6518f18f80d5bf0b5dc66320af8b0924918c97d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1MThmMThmODBkNWJmMGI1ZGM2NjMyMGFmOGIwOTI0OTE4Yzk3ZDM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-04T07:07:18Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-04T07:07:18Z"}, "message": "Cleanup tests", "tree": {"sha": "6a0f89f54975d5911c8827477a903aa1fab83872", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a0f89f54975d5911c8827477a903aa1fab83872"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6518f18f80d5bf0b5dc66320af8b0924918c97d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6518f18f80d5bf0b5dc66320af8b0924918c97d3", "html_url": "https://github.com/rust-lang/rust/commit/6518f18f80d5bf0b5dc66320af8b0924918c97d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6518f18f80d5bf0b5dc66320af8b0924918c97d3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "212fa29a69af5f0f0de30a1d450bb4cd978a0c3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/212fa29a69af5f0f0de30a1d450bb4cd978a0c3e", "html_url": "https://github.com/rust-lang/rust/commit/212fa29a69af5f0f0de30a1d450bb4cd978a0c3e"}], "stats": {"total": 234, "additions": 62, "deletions": 172}, "files": [{"sha": "8026170da3c8f80bce36cb61deaea662b5abc980", "filename": "crates/ra_ide/src/completion/presentation.rs", "status": "modified", "additions": 62, "deletions": 172, "changes": 234, "blob_url": "https://github.com/rust-lang/rust/blob/6518f18f80d5bf0b5dc66320af8b0924918c97d3/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6518f18f80d5bf0b5dc66320af8b0924918c97d3/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=6518f18f80d5bf0b5dc66320af8b0924918c97d3", "patch": "@@ -844,189 +844,79 @@ fn f(foo: &Foo) { foo.foo(); }\n     #[test]\n     fn inserts_angle_brackets_for_generics() {\n         mark::check!(inserts_angle_brackets_for_generics);\n-        assert_debug_snapshot!(\n-            do_reference_completion(\n-                r\"\n-                struct Vec<T> {}\n-                fn foo(xs: Ve<|>)\n-                \"\n-            ),\n-            @r###\"\n-        [\n-            CompletionItem {\n-                label: \"Vec<\u2026>\",\n-                source_range: 28..30,\n-                delete: 28..30,\n-                insert: \"Vec<$0>\",\n-                kind: Struct,\n-                lookup: \"Vec\",\n-            },\n-            CompletionItem {\n-                label: \"foo(\u2026)\",\n-                source_range: 28..30,\n-                delete: 28..30,\n-                insert: \"foo(${1:xs})$0\",\n-                kind: Function,\n-                lookup: \"foo\",\n-                detail: \"fn foo(xs: Ve)\",\n-                trigger_call_info: true,\n-            },\n-        ]\n-        \"###\n+        check_edit(\n+            \"Vec\",\n+            r#\"\n+struct Vec<T> {}\n+fn foo(xs: Ve<|>)\n+\"#,\n+            r#\"\n+struct Vec<T> {}\n+fn foo(xs: Vec<$0>)\n+\"#,\n         );\n-        assert_debug_snapshot!(\n-            do_reference_completion(\n-                r\"\n-                type Vec<T> = (T,);\n-                fn foo(xs: Ve<|>)\n-                \"\n-            ),\n-            @r###\"\n-        [\n-            CompletionItem {\n-                label: \"Vec<\u2026>\",\n-                source_range: 31..33,\n-                delete: 31..33,\n-                insert: \"Vec<$0>\",\n-                kind: TypeAlias,\n-                lookup: \"Vec\",\n-            },\n-            CompletionItem {\n-                label: \"foo(\u2026)\",\n-                source_range: 31..33,\n-                delete: 31..33,\n-                insert: \"foo(${1:xs})$0\",\n-                kind: Function,\n-                lookup: \"foo\",\n-                detail: \"fn foo(xs: Ve)\",\n-                trigger_call_info: true,\n-            },\n-        ]\n-        \"###\n+        check_edit(\n+            \"Vec\",\n+            r#\"\n+type Vec<T> = (T,);\n+fn foo(xs: Ve<|>)\n+\"#,\n+            r#\"\n+type Vec<T> = (T,);\n+fn foo(xs: Vec<$0>)\n+\"#,\n         );\n-        assert_debug_snapshot!(\n-            do_reference_completion(\n-                r\"\n-                struct Vec<T = i128> {}\n-                fn foo(xs: Ve<|>)\n-                \"\n-            ),\n-            @r###\"\n-        [\n-            CompletionItem {\n-                label: \"Vec\",\n-                source_range: 35..37,\n-                delete: 35..37,\n-                insert: \"Vec\",\n-                kind: Struct,\n-            },\n-            CompletionItem {\n-                label: \"foo(\u2026)\",\n-                source_range: 35..37,\n-                delete: 35..37,\n-                insert: \"foo(${1:xs})$0\",\n-                kind: Function,\n-                lookup: \"foo\",\n-                detail: \"fn foo(xs: Ve)\",\n-                trigger_call_info: true,\n-            },\n-        ]\n-        \"###\n+        check_edit(\n+            \"Vec\",\n+            r#\"\n+struct Vec<T = i128> {}\n+fn foo(xs: Ve<|>)\n+\"#,\n+            r#\"\n+struct Vec<T = i128> {}\n+fn foo(xs: Vec)\n+\"#,\n         );\n-        assert_debug_snapshot!(\n-            do_reference_completion(\n-                r\"\n-                struct Vec<T> {}\n-                fn foo(xs: Ve<|><i128>)\n-                \"\n-            ),\n-            @r###\"\n-        [\n-            CompletionItem {\n-                label: \"Vec\",\n-                source_range: 28..30,\n-                delete: 28..30,\n-                insert: \"Vec\",\n-                kind: Struct,\n-            },\n-            CompletionItem {\n-                label: \"foo(\u2026)\",\n-                source_range: 28..30,\n-                delete: 28..30,\n-                insert: \"foo(${1:xs})$0\",\n-                kind: Function,\n-                lookup: \"foo\",\n-                detail: \"fn foo(xs: Ve<i128>)\",\n-                trigger_call_info: true,\n-            },\n-        ]\n-        \"###\n+        check_edit(\n+            \"Vec\",\n+            r#\"\n+struct Vec<T> {}\n+fn foo(xs: Ve<|><i128>)\n+\"#,\n+            r#\"\n+struct Vec<T> {}\n+fn foo(xs: Vec<i128>)\n+\"#,\n         );\n     }\n \n     #[test]\n     fn dont_insert_macro_call_parens_unncessary() {\n         mark::check!(dont_insert_macro_call_parens_unncessary);\n-        assert_debug_snapshot!(\n-            do_reference_completion(\n-                r\"\n-                //- /main.rs\n-                use foo::<|>;\n-\n-                //- /foo/lib.rs\n-                #[macro_export]\n-                macro_rules frobnicate {\n-                    () => ()\n-                }\n-                \"\n-            ),\n-            @r###\"\n-        [\n-            CompletionItem {\n-                label: \"frobnicate!\",\n-                source_range: 9..9,\n-                delete: 9..9,\n-                insert: \"frobnicate\",\n-                kind: Macro,\n-                detail: \"#[macro_export]\\nmacro_rules! frobnicate\",\n-            },\n-        ]\n-        \"###\n+        check_edit(\n+            \"frobnicate!\",\n+            r#\"\n+//- /main.rs\n+use foo::<|>;\n+//- /foo/lib.rs\n+#[macro_export]\n+macro_rules frobnicate { () => () }\n+\"#,\n+            r#\"\n+use foo::frobnicate;\n+\"#,\n         );\n \n-        assert_debug_snapshot!(\n-            do_reference_completion(\n-                r\"\n-                //- /main.rs\n-                macro_rules frobnicate {\n-                    () => ()\n-                }\n-                fn main() {\n-                    frob<|>!();\n-                }\n-                \"\n-            ),\n-            @r###\"\n-        [\n-            CompletionItem {\n-                label: \"frobnicate!\",\n-                source_range: 56..60,\n-                delete: 56..60,\n-                insert: \"frobnicate\",\n-                kind: Macro,\n-                detail: \"macro_rules! frobnicate\",\n-            },\n-            CompletionItem {\n-                label: \"main()\",\n-                source_range: 56..60,\n-                delete: 56..60,\n-                insert: \"main()$0\",\n-                kind: Function,\n-                lookup: \"main\",\n-                detail: \"fn main()\",\n-            },\n-        ]\n-        \"###\n+        check_edit(\n+            \"frobnicate!\",\n+            r#\"\n+macro_rules frobnicate { () => () }\n+fn main() { frob<|>!(); }\n+\"#,\n+            r#\"\n+macro_rules frobnicate { () => () }\n+fn main() { frobnicate!(); }\n+\"#,\n         );\n     }\n "}]}