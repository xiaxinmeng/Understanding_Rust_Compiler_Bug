{"sha": "12307b3b08edee543a78fb9d4a837fbd6d6ac0fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMzA3YjNiMDhlZGVlNTQzYTc4ZmI5ZDRhODM3ZmJkNmQ2YWMwZmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-14T04:08:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-14T04:08:50Z"}, "message": "Auto merge of #67084 - Pagten:feature/print-msg-from-elf-entrypoint, r=Amanieu\n\nSGX: Change ELF entrypoint\n\nThis fixes [rust-sgx issue #148](https://github.com/fortanix/rust-sgx/issues/148).\n\nA new entry point is created for the ELF file generated by `rustc`, separate from the enclave entry point. When the ELF file is executed as a Linux binary, the error message below is written to stderr.\n\n> Error: This file is an SGX enclave which cannot be executed as a standard Linux binary.\n> See the installation guide at https://edp.fortanix.com/docs/installation/guide/ on how to use 'cargo run' or follow the steps at https://edp.fortanix.com/docs/tasks/deployment/ for manual deployment.\n\nWhen the ELF file is converted to an SGXS using `elf2sgxs`, the old entry point is still set as the enclave entry point. In a future pull request in the rust-sgx repository, `elf2sgxs` will be modified to remove the code in the ELF entry point, since this code is not needed in the enclave.", "tree": {"sha": "a74a47622664cabf385b854f0f33052df341b41e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a74a47622664cabf385b854f0f33052df341b41e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12307b3b08edee543a78fb9d4a837fbd6d6ac0fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12307b3b08edee543a78fb9d4a837fbd6d6ac0fa", "html_url": "https://github.com/rust-lang/rust/commit/12307b3b08edee543a78fb9d4a837fbd6d6ac0fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12307b3b08edee543a78fb9d4a837fbd6d6ac0fa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8843b28e64b02c2245f5869ad90cafa6d85ab0d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8843b28e64b02c2245f5869ad90cafa6d85ab0d9", "html_url": "https://github.com/rust-lang/rust/commit/8843b28e64b02c2245f5869ad90cafa6d85ab0d9"}, {"sha": "f02ffb8b4ca760117875f3b5326e9cff6598dde3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f02ffb8b4ca760117875f3b5326e9cff6598dde3", "html_url": "https://github.com/rust-lang/rust/commit/f02ffb8b4ca760117875f3b5326e9cff6598dde3"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "2c9ba9f2ca971d9a0a414e28b1ce50f01e23c960", "filename": "src/librustc_target/spec/x86_64_fortanix_unknown_sgx.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12307b3b08edee543a78fb9d4a837fbd6d6ac0fa/src%2Flibrustc_target%2Fspec%2Fx86_64_fortanix_unknown_sgx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12307b3b08edee543a78fb9d4a837fbd6d6ac0fa/src%2Flibrustc_target%2Fspec%2Fx86_64_fortanix_unknown_sgx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_fortanix_unknown_sgx.rs?ref=12307b3b08edee543a78fb9d4a837fbd6d6ac0fa", "patch": "@@ -7,7 +7,7 @@ pub fn target() -> Result<Target, String> {\n         \"--as-needed\",\n         \"--eh-frame-hdr\",\n         \"-z\" , \"noexecstack\",\n-        \"-e\",\"sgx_entry\",\n+        \"-e\",\"elf_entry\",\n         \"-Bstatic\",\n         \"--gc-sections\",\n         \"-z\",\"text\","}, {"sha": "a3e059e8131735833e4a0aa60fe7e9a283cb1654", "filename": "src/libstd/sys/sgx/abi/entry.S", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/12307b3b08edee543a78fb9d4a837fbd6d6ac0fa/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S", "raw_url": "https://github.com/rust-lang/rust/raw/12307b3b08edee543a78fb9d4a837fbd6d6ac0fa/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S?ref=12307b3b08edee543a78fb9d4a837fbd6d6ac0fa", "patch": "@@ -104,6 +104,36 @@ IMAGE_BASE:\n         and %gs:tcsls_flags,%\\reg\n .endm\n \n+/* We place the ELF entry point in a separate section so it can be removed by\n+   elf2sgxs */\n+.section .text_no_sgx, \"ax\"\n+.Lelf_entry_error_msg:\n+    .ascii \"Error: This file is an SGX enclave which cannot be executed as a standard Linux binary.\\nSee the installation guide at https://edp.fortanix.com/docs/installation/guide/ on how to use 'cargo run' or follow the steps at https://edp.fortanix.com/docs/tasks/deployment/ for manual deployment.\\n\"\n+.Lelf_entry_error_msg_end:\n+\n+.global elf_entry\n+.type elf_entry,function\n+elf_entry:\n+/* print error message */\n+    movq $2,%rdi                      /* write to stderr (fd 2) */\n+    lea .Lelf_entry_error_msg(%rip),%rsi\n+    movq $.Lelf_entry_error_msg_end-.Lelf_entry_error_msg,%rdx\n+.Lelf_entry_call:\n+    movq $1,%rax                      /* write() syscall        */\n+    syscall\n+    test %rax,%rax\n+    jle .Lelf_exit                    /* exit on error          */\n+    add %rax,%rsi\n+    sub %rax,%rdx                     /* all chars written?     */\n+    jnz .Lelf_entry_call\n+\n+.Lelf_exit:    \n+    movq $60,%rax                     /* exit() syscall         */\n+    movq $1,%rdi                      /* exit code 1            */\n+    syscall\n+    ud2                               /* should not be reached  */\n+/*  end elf_entry */\n+\n .text\n .global sgx_entry\n .type sgx_entry,function"}]}