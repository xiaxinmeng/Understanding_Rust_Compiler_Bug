{"sha": "f19a82beac18b688faa5cdb1a355485d2e429b60", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxOWE4MmJlYWMxOGI2ODhmYWE1Y2RiMWEzNTU0ODVkMmU0MjliNjA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-08T16:16:11Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-08T16:16:11Z"}, "message": "simplify", "tree": {"sha": "14e8e1827d1e1d195bd5688df95a186d9dc2cae6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14e8e1827d1e1d195bd5688df95a186d9dc2cae6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f19a82beac18b688faa5cdb1a355485d2e429b60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f19a82beac18b688faa5cdb1a355485d2e429b60", "html_url": "https://github.com/rust-lang/rust/commit/f19a82beac18b688faa5cdb1a355485d2e429b60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f19a82beac18b688faa5cdb1a355485d2e429b60/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba4a697d8cb577c03c84c0c91a25ecbeaa9c68e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba4a697d8cb577c03c84c0c91a25ecbeaa9c68e6", "html_url": "https://github.com/rust-lang/rust/commit/ba4a697d8cb577c03c84c0c91a25ecbeaa9c68e6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "772d753afa3a6905a1272127178d09713660488f", "filename": "crates/libsyntax2/src/parser_api.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f19a82beac18b688faa5cdb1a355485d2e429b60/crates%2Flibsyntax2%2Fsrc%2Fparser_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19a82beac18b688faa5cdb1a355485d2e429b60/crates%2Flibsyntax2%2Fsrc%2Fparser_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fparser_api.rs?ref=f19a82beac18b688faa5cdb1a355485d2e429b60", "patch": "@@ -118,7 +118,7 @@ impl<'t> Parser<'t> {\n     pub(crate) fn err_recover(&mut self, message: &str, recovery: TokenSet) {\n         if self.at(SyntaxKind::L_CURLY)\n             || self.at(SyntaxKind::R_CURLY)\n-            || recovery.contains(self.current()) {\n+            || self.at_ts(recovery) {\n             self.error(message);\n         } else {\n             let m = self.start();"}]}