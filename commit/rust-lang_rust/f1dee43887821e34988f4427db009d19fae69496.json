{"sha": "f1dee43887821e34988f4427db009d19fae69496", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZGVlNDM4ODc4MjFlMzQ5ODhmNDQyN2RiMDA5ZDE5ZmFlNjk0OTY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-06-10T01:37:52Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-06-19T22:19:15Z"}, "message": "Add link to book for `Sized` errors", "tree": {"sha": "62de2b908b286cab20762895484f01296316baec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62de2b908b286cab20762895484f01296316baec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1dee43887821e34988f4427db009d19fae69496", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1dee43887821e34988f4427db009d19fae69496", "html_url": "https://github.com/rust-lang/rust/commit/f1dee43887821e34988f4427db009d19fae69496", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1dee43887821e34988f4427db009d19fae69496/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "776544f011a6a5beccb7923a261b0dcecdd2396a", "url": "https://api.github.com/repos/rust-lang/rust/commits/776544f011a6a5beccb7923a261b0dcecdd2396a", "html_url": "https://github.com/rust-lang/rust/commit/776544f011a6a5beccb7923a261b0dcecdd2396a"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "9c0508f1234e90f6342d9fa7cafb93d630b8b64a", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1dee43887821e34988f4427db009d19fae69496/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1dee43887821e34988f4427db009d19fae69496/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=f1dee43887821e34988f4427db009d19fae69496", "patch": "@@ -93,7 +93,9 @@ impl<T: ?Sized> !Send for *mut T { }\n #[lang = \"sized\"]\n #[rustc_on_unimplemented(\n     message=\"`{Self}` does not have a constant size known at compile-time\",\n-    label=\"`{Self}` does not have a constant size known at compile-time\"\n+    label=\"`{Self}` does not have a constant size known at compile-time\",\n+    note=\"to learn more, visit <https://doc.rust-lang.org/book/second-edition/\\\n+          ch19-04-advanced-types.html#dynamically-sized-types--sized>\",\n )]\n #[fundamental] // for Default, for example, which requires that `[T]: !Default` be evaluatable\n pub trait Sized {"}, {"sha": "6baeab90db2207e5594f0d1040dc0ed0c74f7557", "filename": "src/test/ui/const-unsized.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Fconst-unsized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Fconst-unsized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-unsized.stderr?ref=f1dee43887821e34988f4427db009d19fae69496", "patch": "@@ -5,6 +5,7 @@ LL | const CONST_0: Debug+Sync = *(&0 as &(Debug+Sync));\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ `std::fmt::Debug + std::marker::Sync + 'static` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `std::fmt::Debug + std::marker::Sync + 'static`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: constant expressions must have a statically known size\n \n error[E0277]: `str` does not have a constant size known at compile-time\n@@ -14,6 +15,7 @@ LL | const CONST_FOO: str = *\"foo\";\n    |                        ^^^^^^ `str` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `str`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: constant expressions must have a statically known size\n \n error[E0277]: `std::fmt::Debug + std::marker::Sync + 'static` does not have a constant size known at compile-time\n@@ -23,6 +25,7 @@ LL | static STATIC_1: Debug+Sync = *(&1 as &(Debug+Sync));\n    |                               ^^^^^^^^^^^^^^^^^^^^^^ `std::fmt::Debug + std::marker::Sync + 'static` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `std::fmt::Debug + std::marker::Sync + 'static`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: constant expressions must have a statically known size\n \n error[E0277]: `str` does not have a constant size known at compile-time\n@@ -32,6 +35,7 @@ LL | static STATIC_BAR: str = *\"bar\";\n    |                          ^^^^^^ `str` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `str`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: constant expressions must have a statically known size\n \n error: aborting due to 4 previous errors"}, {"sha": "e1c3183104a1efca03a1c8afe8dfbeb2c45a0aef", "filename": "src/test/ui/error-codes/E0277.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Ferror-codes%2FE0277.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Ferror-codes%2FE0277.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0277.stderr?ref=f1dee43887821e34988f4427db009d19fae69496", "patch": "@@ -5,6 +5,7 @@ LL | fn f(p: Path) { }\n    |      ^ `[u8]` does not have a constant size known at compile-time\n    |\n    = help: within `std::path::Path`, the trait `std::marker::Sized` is not implemented for `[u8]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: required because it appears within the type `std::path::Path`\n    = note: all local variables must have a statically known size\n "}, {"sha": "9344e78c23c1d931af2fed441f1f7484961062e9", "filename": "src/test/ui/feature-gate-trivial_bounds.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Ffeature-gate-trivial_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Ffeature-gate-trivial_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-trivial_bounds.stderr?ref=f1dee43887821e34988f4427db009d19fae69496", "patch": "@@ -94,6 +94,7 @@ LL | struct TwoStrs(str, str) where str: Sized; //~ ERROR\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `str` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `str`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = help: see issue #48214\n    = help: add #![feature(trivial_bounds)] to the crate attributes to enable\n \n@@ -106,6 +107,7 @@ LL | | }\n    | |_^ `A + 'static` does not have a constant size known at compile-time\n    |\n    = help: within `Dst<A + 'static>`, the trait `std::marker::Sized` is not implemented for `A + 'static`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: required because it appears within the type `Dst<A + 'static>`\n    = help: see issue #48214\n    = help: add #![feature(trivial_bounds)] to the crate attributes to enable\n@@ -119,6 +121,7 @@ LL | | }\n    | |_^ `str` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `str`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = help: see issue #48214\n    = help: add #![feature(trivial_bounds)] to the crate attributes to enable\n "}, {"sha": "7918101850e0c921c66466bf45275b173000950d", "filename": "src/test/ui/generator/sized-yield.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Fgenerator%2Fsized-yield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Fgenerator%2Fsized-yield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fsized-yield.stderr?ref=f1dee43887821e34988f4427db009d19fae69496", "patch": "@@ -9,6 +9,7 @@ LL | |    };\n    | |____^ `str` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `str`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: the yield type of a generator must have a statically known size\n \n error[E0277]: `str` does not have a constant size known at compile-time\n@@ -18,6 +19,7 @@ LL |    unsafe { gen.resume(); }\n    |                 ^^^^^^ `str` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `str`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n \n error: aborting due to 2 previous errors\n "}, {"sha": "70914ded960924db53564d7ea437440a83ef5f86", "filename": "src/test/ui/mismatched_types/cast-rfc0401.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Fmismatched_types%2Fcast-rfc0401.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Fmismatched_types%2Fcast-rfc0401.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fcast-rfc0401.stderr?ref=f1dee43887821e34988f4427db009d19fae69496", "patch": "@@ -223,6 +223,7 @@ LL |     let _ = fat_v as *const Foo; //~ ERROR `[u8]` does not have a constant\n    |             ^^^^^ `[u8]` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `[u8]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: required for the cast to the object type `Foo`\n \n error[E0277]: `str` does not have a constant size known at compile-time\n@@ -232,6 +233,7 @@ LL |     let _ = a as *const Foo; //~ ERROR `str` does not have a constant size\n    |             ^ `str` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `str`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: required for the cast to the object type `Foo`\n \n error[E0606]: casting `&{float}` as `f32` is invalid"}, {"sha": "1488f6b9985398543434c8b43af13bf4b42c03f4", "filename": "src/test/ui/resolve/issue-5035-2.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Fresolve%2Fissue-5035-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Fresolve%2Fissue-5035-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-5035-2.stderr?ref=f1dee43887821e34988f4427db009d19fae69496", "patch": "@@ -5,6 +5,7 @@ LL | fn foo(_x: K) {}\n    |        ^^ `I + 'static` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `I + 'static`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: all local variables must have a statically known size\n \n error: aborting due to previous error"}, {"sha": "acf51f89fc48c7676b3396b8eb69f02af2607e21", "filename": "src/test/ui/suggestions/str-array-assignment.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Fsuggestions%2Fstr-array-assignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Fsuggestions%2Fstr-array-assignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fstr-array-assignment.stderr?ref=f1dee43887821e34988f4427db009d19fae69496", "patch": "@@ -28,6 +28,7 @@ LL |   let v = s[..2];\n    |       `str` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `str`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: all local variables must have a statically known size\n \n error[E0308]: mismatched types"}, {"sha": "d87641d8d0fa92bcdb4591bd8d49f6b555126469", "filename": "src/test/ui/trait-suggest-where-clause.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Ftrait-suggest-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Ftrait-suggest-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-suggest-where-clause.stderr?ref=f1dee43887821e34988f4427db009d19fae69496", "patch": "@@ -5,6 +5,7 @@ LL |     mem::size_of::<U>();\n    |     ^^^^^^^^^^^^^^^^^ `U` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `U`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = help: consider adding a `where U: std::marker::Sized` bound\n    = note: required by `std::mem::size_of`\n \n@@ -15,6 +16,7 @@ LL |     mem::size_of::<Misc<U>>();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ `U` does not have a constant size known at compile-time\n    |\n    = help: within `Misc<U>`, the trait `std::marker::Sized` is not implemented for `U`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = help: consider adding a `where U: std::marker::Sized` bound\n    = note: required because it appears within the type `Misc<U>`\n    = note: required by `std::mem::size_of`\n@@ -52,6 +54,7 @@ LL |     mem::size_of::<[T]>();\n    |     ^^^^^^^^^^^^^^^^^^^ `[T]` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `[T]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: required by `std::mem::size_of`\n \n error[E0277]: `[&U]` does not have a constant size known at compile-time\n@@ -61,6 +64,7 @@ LL |     mem::size_of::<[&U]>();\n    |     ^^^^^^^^^^^^^^^^^^^^ `[&U]` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `[&U]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: required by `std::mem::size_of`\n \n error: aborting due to 7 previous errors"}, {"sha": "9fdc5af0481ae071a76a049521ede2ba3c7f065f", "filename": "src/test/ui/union/union-sized-field.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Funion%2Funion-sized-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Funion%2Funion-sized-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-sized-field.stderr?ref=f1dee43887821e34988f4427db009d19fae69496", "patch": "@@ -5,6 +5,7 @@ LL |     value: T,\n    |     ^^^^^^^^ `T` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `T`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = help: consider adding a `where T: std::marker::Sized` bound\n    = note: no field of a union may have a dynamically sized type\n \n@@ -15,6 +16,7 @@ LL |     value: T,\n    |     ^^^^^^^^ `T` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `T`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = help: consider adding a `where T: std::marker::Sized` bound\n    = note: only the last field of a struct may have a dynamically sized type\n \n@@ -25,6 +27,7 @@ LL |     Value(T),\n    |           ^ `T` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `T`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = help: consider adding a `where T: std::marker::Sized` bound\n    = note: no field of an enum variant may have a dynamically sized type\n "}, {"sha": "91b8e5def7edd445be532796cb45a56ae5a074f0", "filename": "src/test/ui/unsized-enum2.stderr", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Funsized-enum2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1dee43887821e34988f4427db009d19fae69496/src%2Ftest%2Fui%2Funsized-enum2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-enum2.stderr?ref=f1dee43887821e34988f4427db009d19fae69496", "patch": "@@ -5,6 +5,7 @@ LL |     VA(W),\n    |        ^ `W` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `W`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = help: consider adding a `where W: std::marker::Sized` bound\n    = note: no field of an enum variant may have a dynamically sized type\n \n@@ -15,6 +16,7 @@ LL |     VB{x: X},\n    |        ^^^^ `X` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `X`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = help: consider adding a `where X: std::marker::Sized` bound\n    = note: no field of an enum variant may have a dynamically sized type\n \n@@ -25,6 +27,7 @@ LL |     VC(isize, Y),\n    |               ^ `Y` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `Y`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = help: consider adding a `where Y: std::marker::Sized` bound\n    = note: no field of an enum variant may have a dynamically sized type\n \n@@ -35,6 +38,7 @@ LL |     VD{u: isize, x: Z},\n    |                  ^^^^ `Z` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `Z`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = help: consider adding a `where Z: std::marker::Sized` bound\n    = note: no field of an enum variant may have a dynamically sized type\n \n@@ -45,6 +49,7 @@ LL |     VE([u8]),\n    |        ^^^^ `[u8]` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `[u8]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: no field of an enum variant may have a dynamically sized type\n \n error[E0277]: `str` does not have a constant size known at compile-time\n@@ -54,6 +59,7 @@ LL |     VF{x: str},\n    |        ^^^^^^ `str` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `str`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: no field of an enum variant may have a dynamically sized type\n \n error[E0277]: `[f32]` does not have a constant size known at compile-time\n@@ -63,6 +69,7 @@ LL |     VG(isize, [f32]),\n    |               ^^^^^ `[f32]` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `[f32]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: no field of an enum variant may have a dynamically sized type\n \n error[E0277]: `[u32]` does not have a constant size known at compile-time\n@@ -72,6 +79,7 @@ LL |     VH{u: isize, x: [u32]},\n    |                  ^^^^^^^^ `[u32]` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `[u32]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: no field of an enum variant may have a dynamically sized type\n \n error[E0277]: `Foo + 'static` does not have a constant size known at compile-time\n@@ -81,6 +89,7 @@ LL |     VM(Foo),\n    |        ^^^ `Foo + 'static` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `Foo + 'static`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: no field of an enum variant may have a dynamically sized type\n \n error[E0277]: `Bar + 'static` does not have a constant size known at compile-time\n@@ -90,6 +99,7 @@ LL |     VN{x: Bar},\n    |        ^^^^^^ `Bar + 'static` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `Bar + 'static`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: no field of an enum variant may have a dynamically sized type\n \n error[E0277]: `FooBar + 'static` does not have a constant size known at compile-time\n@@ -99,6 +109,7 @@ LL |     VO(isize, FooBar),\n    |               ^^^^^^ `FooBar + 'static` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `FooBar + 'static`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: no field of an enum variant may have a dynamically sized type\n \n error[E0277]: `BarFoo + 'static` does not have a constant size known at compile-time\n@@ -108,6 +119,7 @@ LL |     VP{u: isize, x: BarFoo},\n    |                  ^^^^^^^^^ `BarFoo + 'static` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `BarFoo + 'static`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: no field of an enum variant may have a dynamically sized type\n \n error[E0277]: `[i8]` does not have a constant size known at compile-time\n@@ -117,6 +129,7 @@ LL |     VQ(<&'static [i8] as Deref>::Target),\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `[i8]` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `[i8]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: no field of an enum variant may have a dynamically sized type\n \n error[E0277]: `[char]` does not have a constant size known at compile-time\n@@ -126,6 +139,7 @@ LL |     VR{x: <&'static [char] as Deref>::Target},\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `[char]` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `[char]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: no field of an enum variant may have a dynamically sized type\n \n error[E0277]: `[f64]` does not have a constant size known at compile-time\n@@ -135,6 +149,7 @@ LL |     VS(isize, <&'static [f64] as Deref>::Target),\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `[f64]` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `[f64]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: no field of an enum variant may have a dynamically sized type\n \n error[E0277]: `[i32]` does not have a constant size known at compile-time\n@@ -144,6 +159,7 @@ LL |     VT{u: isize, x: <&'static [i32] as Deref>::Target},\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `[i32]` does not have a constant size known at compile-time\n    |\n    = help: the trait `std::marker::Sized` is not implemented for `[i32]`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: no field of an enum variant may have a dynamically sized type\n \n error[E0277]: `PathHelper1 + 'static` does not have a constant size known at compile-time\n@@ -153,6 +169,7 @@ LL |     VI(Path1),\n    |        ^^^^^ `PathHelper1 + 'static` does not have a constant size known at compile-time\n    |\n    = help: within `Path1`, the trait `std::marker::Sized` is not implemented for `PathHelper1 + 'static`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: required because it appears within the type `Path1`\n    = note: no field of an enum variant may have a dynamically sized type\n \n@@ -163,6 +180,7 @@ LL |     VJ{x: Path2},\n    |        ^^^^^^^^ `PathHelper2 + 'static` does not have a constant size known at compile-time\n    |\n    = help: within `Path2`, the trait `std::marker::Sized` is not implemented for `PathHelper2 + 'static`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: required because it appears within the type `Path2`\n    = note: no field of an enum variant may have a dynamically sized type\n \n@@ -173,6 +191,7 @@ LL |     VK(isize, Path3),\n    |               ^^^^^ `PathHelper3 + 'static` does not have a constant size known at compile-time\n    |\n    = help: within `Path3`, the trait `std::marker::Sized` is not implemented for `PathHelper3 + 'static`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: required because it appears within the type `Path3`\n    = note: no field of an enum variant may have a dynamically sized type\n \n@@ -183,6 +202,7 @@ LL |     VL{u: isize, x: Path4},\n    |                  ^^^^^^^^ `PathHelper4 + 'static` does not have a constant size known at compile-time\n    |\n    = help: within `Path4`, the trait `std::marker::Sized` is not implemented for `PathHelper4 + 'static`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types--sized>\n    = note: required because it appears within the type `Path4`\n    = note: no field of an enum variant may have a dynamically sized type\n "}]}