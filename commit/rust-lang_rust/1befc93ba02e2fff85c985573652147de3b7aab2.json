{"sha": "1befc93ba02e2fff85c985573652147de3b7aab2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiZWZjOTNiYTAyZTJmZmY4NWM5ODU1NzM2NTIxNDdkZTNiN2FhYjI=", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2018-09-12T11:09:07Z"}, "committer": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2018-09-12T11:09:07Z"}, "message": "implement Drop from FmtVisitor in order to simplify failures passing", "tree": {"sha": "0f77d0ddde483017552f889627fa53960dd533ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f77d0ddde483017552f889627fa53960dd533ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1befc93ba02e2fff85c985573652147de3b7aab2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEipi5pnt+pUplKNfibVYg2QghATMFAluY89MACgkQbVYg2Qgh\nATN2wwgAg/N9nLL2783QNWBWKJxreFDowzR/gG+lEUBKHZFeM6/QlW8XoFaPnsBj\nXvcDWgZN0AR/3haB1mgz8/Co8TLuIoWTn2IJLHfeawqCst1uDNWwTSwJuUNTSL9Y\n6nYkxgikYa4iMBXP56IRYGMjUsaoF9wkhBx8K5/MIXUaeQ5Q00j73eXPU+dayPKL\n17kk66uehdtZohp6F30iOWZo4va31Ka2C1K3RZ7wMr0q+KDJGFM96GuuIhkEuSGf\n/7BQRtfykx9QQZ1sDVS0yf6HXfK2QJDIcgdGms5QMk/+6MQ9uTbeqFf5kbEh/577\nyACKGir+l5cCTOp9YtgKna+EaAilng==\n=c5gM\n-----END PGP SIGNATURE-----", "payload": "tree 0f77d0ddde483017552f889627fa53960dd533ce\nparent 6f318e3ceff807a1f2e63a0b73aa5c1a4a27519a\nauthor St\u00e9phane Campinas <stephane.campinas@gmail.com> 1536750547 +0200\ncommitter St\u00e9phane Campinas <stephane.campinas@gmail.com> 1536750547 +0200\n\nimplement Drop from FmtVisitor in order to simplify failures passing\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1befc93ba02e2fff85c985573652147de3b7aab2", "html_url": "https://github.com/rust-lang/rust/commit/1befc93ba02e2fff85c985573652147de3b7aab2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1befc93ba02e2fff85c985573652147de3b7aab2/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f318e3ceff807a1f2e63a0b73aa5c1a4a27519a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f318e3ceff807a1f2e63a0b73aa5c1a4a27519a", "html_url": "https://github.com/rust-lang/rust/commit/6f318e3ceff807a1f2e63a0b73aa5c1a4a27519a"}], "stats": {"total": 40, "additions": 22, "deletions": 18}, "files": [{"sha": "329081f5d7049a11da639729dae98c60dac43b54", "filename": "src/expr.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1befc93ba02e2fff85c985573652147de3b7aab2/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1befc93ba02e2fff85c985573652147de3b7aab2/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=1befc93ba02e2fff85c985573652147de3b7aab2", "patch": "@@ -522,9 +522,6 @@ pub fn rewrite_block_with_visitor(\n     let inner_attrs = attrs.map(inner_attributes);\n     let label_str = rewrite_label(label);\n     visitor.visit_block(block, inner_attrs.as_ref().map(|a| &**a), has_braces);\n-    if visitor.macro_rewrite_failure {\n-        context.macro_rewrite_failure.replace(true);\n-    }\n     Some(format!(\"{}{}{}\", prefix, label_str, visitor.buffer))\n }\n "}, {"sha": "5ad6cfb653f8361915328ea25dbad6acd5d33263", "filename": "src/formatting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1befc93ba02e2fff85c985573652147de3b7aab2/src%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1befc93ba02e2fff85c985573652147de3b7aab2/src%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformatting.rs?ref=1befc93ba02e2fff85c985573652147de3b7aab2", "patch": "@@ -175,7 +175,7 @@ impl<'a, T: FormatHandler + 'a> FormatContext<'a, T> {\n         }\n \n         self.handler\n-            .handle_formatted_file(path, visitor.buffer, &mut self.report)\n+            .handle_formatted_file(path, visitor.buffer.to_owned(), &mut self.report)\n     }\n }\n "}, {"sha": "7f8980dd15068fc6d1a6f8aae7be54a406314539", "filename": "src/items.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1befc93ba02e2fff85c985573652147de3b7aab2/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1befc93ba02e2fff85c985573652147de3b7aab2/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=1befc93ba02e2fff85c985573652147de3b7aab2", "patch": "@@ -747,10 +747,6 @@ pub fn format_impl(\n \n             visitor.format_missing(item.span.hi() - BytePos(1));\n \n-            if visitor.macro_rewrite_failure {\n-                context.macro_rewrite_failure.replace(true);\n-            }\n-\n             let inner_indent_str = visitor.block_indent.to_string_with_newline(context.config);\n             let outer_indent_str = offset.block_only().to_string_with_newline(context.config);\n \n@@ -1110,10 +1106,6 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n \n             visitor.format_missing(item.span.hi() - BytePos(1));\n \n-            if visitor.macro_rewrite_failure {\n-                context.macro_rewrite_failure.replace(true);\n-            }\n-\n             let inner_indent_str = visitor.block_indent.to_string_with_newline(context.config);\n             let outer_indent_str = offset.block_only().to_string_with_newline(context.config);\n "}, {"sha": "3f107f81ab2af3198ffe22dfe4e65a9d3838f382", "filename": "src/macros.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1befc93ba02e2fff85c985573652147de3b7aab2/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1befc93ba02e2fff85c985573652147de3b7aab2/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=1befc93ba02e2fff85c985573652147de3b7aab2", "patch": "@@ -69,10 +69,7 @@ impl Rewrite for ast::Item {\n         visitor.block_indent = shape.indent;\n         visitor.last_pos = self.span().lo();\n         visitor.visit_item(self);\n-        if visitor.macro_rewrite_failure {\n-            context.macro_rewrite_failure.replace(true);\n-        }\n-        Some(visitor.buffer)\n+        Some(visitor.buffer.to_owned())\n     }\n }\n "}, {"sha": "f27a399beed22ba2eef1abdc052707ac2e22784a", "filename": "src/visitor.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1befc93ba02e2fff85c985573652147de3b7aab2/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1befc93ba02e2fff85c985573652147de3b7aab2/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=1befc93ba02e2fff85c985573652147de3b7aab2", "patch": "@@ -60,6 +60,7 @@ impl<'a> SnippetProvider<'a> {\n }\n \n pub struct FmtVisitor<'a> {\n+    parent_context: Option<&'a RewriteContext<'a>>,\n     pub parse_session: &'a ParseSess,\n     pub source_map: &'a SourceMap,\n     pub buffer: String,\n@@ -75,7 +76,21 @@ pub struct FmtVisitor<'a> {\n     pub(crate) report: FormatReport,\n }\n \n+impl<'a> Drop for FmtVisitor<'a> {\n+    fn drop(&mut self) {\n+        if let Some(ctx) = self.parent_context {\n+            if self.macro_rewrite_failure {\n+                ctx.macro_rewrite_failure.replace(true);\n+            }\n+        }\n+    }\n+}\n+\n impl<'b, 'a: 'b> FmtVisitor<'a> {\n+    fn set_parent_context(&mut self, context: &'a RewriteContext) {\n+        self.parent_context = Some(context);\n+    }\n+\n     pub fn shape(&self) -> Shape {\n         Shape::indented(self.block_indent, self.config)\n     }\n@@ -579,12 +594,14 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n     }\n \n     pub fn from_context(ctx: &'a RewriteContext) -> FmtVisitor<'a> {\n-        FmtVisitor::from_source_map(\n+        let mut visitor = FmtVisitor::from_source_map(\n             ctx.parse_session,\n             ctx.config,\n             ctx.snippet_provider,\n             ctx.report.clone(),\n-        )\n+        );\n+        visitor.set_parent_context(ctx);\n+        visitor\n     }\n \n     pub(crate) fn from_source_map(\n@@ -594,6 +611,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n         report: FormatReport,\n     ) -> FmtVisitor<'a> {\n         FmtVisitor {\n+            parent_context: None,\n             parse_session,\n             source_map: parse_session.source_map(),\n             buffer: String::with_capacity(snippet_provider.big_snippet.len() * 2),"}]}