{"sha": "17ca7a0e480bf405082d9b9ac27b3c1fe94d9e33", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3Y2E3YTBlNDgwYmY0MDUwODJkOWI5YWMyN2IzYzFmZTk0ZDllMzM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-02T11:35:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-02T11:35:17Z"}, "message": "explain why we use def_span", "tree": {"sha": "76cc48a5c750eee5a33041b4d067837894fc70b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76cc48a5c750eee5a33041b4d067837894fc70b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17ca7a0e480bf405082d9b9ac27b3c1fe94d9e33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17ca7a0e480bf405082d9b9ac27b3c1fe94d9e33", "html_url": "https://github.com/rust-lang/rust/commit/17ca7a0e480bf405082d9b9ac27b3c1fe94d9e33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17ca7a0e480bf405082d9b9ac27b3c1fe94d9e33/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08ba0145c7801ac57f8ce0d50e9babd1bc7930bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/08ba0145c7801ac57f8ce0d50e9babd1bc7930bc", "html_url": "https://github.com/rust-lang/rust/commit/08ba0145c7801ac57f8ce0d50e9babd1bc7930bc"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "227c221594fb330e7db9c583cb17297f411459f4", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/17ca7a0e480bf405082d9b9ac27b3c1fe94d9e33/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17ca7a0e480bf405082d9b9ac27b3c1fe94d9e33/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=17ca7a0e480bf405082d9b9ac27b3c1fe94d9e33", "patch": "@@ -253,6 +253,7 @@ impl Validator<'mir, 'tcx> {\n         let is_unleashable = O::IS_SUPPORTED_IN_MIRI;\n \n         if is_unleashable && self.tcx.sess.opts.debugging_opts.unleash_the_miri_inside_of_you {\n+            // Use `def_span` to deduplicate all warnings for the same const.\n             self.tcx.sess.span_warn(self.tcx.def_span(self.def_id), \"skipping const checks\");\n             if let Some(feature) = O::feature_gate() {\n                 self.tcx.sess.miri_unleashed_feature(feature);"}]}