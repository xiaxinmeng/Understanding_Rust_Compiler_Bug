{"sha": "65768feaff5fad91c5bded8b606de29ed7ef4b12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1NzY4ZmVhZmY1ZmFkOTFjNWJkZWQ4YjYwNmRlMjllZDdlZjRiMTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-04T07:08:51Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-04T07:08:51Z"}, "message": "Unify naming", "tree": {"sha": "8e220f8b88ebd8171afd716527ea7aed1a7ca1f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e220f8b88ebd8171afd716527ea7aed1a7ca1f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65768feaff5fad91c5bded8b606de29ed7ef4b12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65768feaff5fad91c5bded8b606de29ed7ef4b12", "html_url": "https://github.com/rust-lang/rust/commit/65768feaff5fad91c5bded8b606de29ed7ef4b12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65768feaff5fad91c5bded8b606de29ed7ef4b12/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6518f18f80d5bf0b5dc66320af8b0924918c97d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6518f18f80d5bf0b5dc66320af8b0924918c97d3", "html_url": "https://github.com/rust-lang/rust/commit/6518f18f80d5bf0b5dc66320af8b0924918c97d3"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "329acdc8b6e343c59c196fc6c38683b22b2da69f", "filename": "crates/ra_ide/src/completion/test_utils.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/65768feaff5fad91c5bded8b606de29ed7ef4b12/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65768feaff5fad91c5bded8b606de29ed7ef4b12/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs?ref=65768feaff5fad91c5bded8b606de29ed7ef4b12", "patch": "@@ -13,15 +13,15 @@ use crate::{\n };\n \n pub(crate) fn do_completion(code: &str, kind: CompletionKind) -> Vec<CompletionItem> {\n-    do_completion_with_options(code, kind, &CompletionConfig::default())\n+    do_completion_with_config(code, kind, &CompletionConfig::default())\n }\n \n-pub(crate) fn do_completion_with_options(\n+pub(crate) fn do_completion_with_config(\n     code: &str,\n     kind: CompletionKind,\n-    options: &CompletionConfig,\n+    config: &CompletionConfig,\n ) -> Vec<CompletionItem> {\n-    let mut kind_completions: Vec<CompletionItem> = get_all_completion_items(code, options)\n+    let mut kind_completions: Vec<CompletionItem> = get_all_completion_items(code, config)\n         .into_iter()\n         .filter(|c| c.completion_kind == kind)\n         .collect();\n@@ -30,15 +30,15 @@ pub(crate) fn do_completion_with_options(\n }\n \n pub(crate) fn completion_list(code: &str, kind: CompletionKind) -> String {\n-    completion_list_with_options(code, kind, &CompletionConfig::default())\n+    completion_list_with_config(code, kind, &CompletionConfig::default())\n }\n \n-pub(crate) fn completion_list_with_options(\n+pub(crate) fn completion_list_with_config(\n     code: &str,\n     kind: CompletionKind,\n-    options: &CompletionConfig,\n+    config: &CompletionConfig,\n ) -> String {\n-    let mut kind_completions: Vec<CompletionItem> = get_all_completion_items(code, options)\n+    let mut kind_completions: Vec<CompletionItem> = get_all_completion_items(code, config)\n         .into_iter()\n         .filter(|c| c.completion_kind == kind)\n         .collect();"}]}