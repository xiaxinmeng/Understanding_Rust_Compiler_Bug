{"sha": "bcb9226efb86f5e082476f4b6910735bd8522825", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYjkyMjZlZmI4NmY1ZTA4MjQ3NmY0YjY5MTA3MzViZDg1MjI4MjU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-03-17T23:28:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-17T23:28:14Z"}, "message": "Rollup merge of #83216 - jyn514:register-tool, r=petrochenkov\n\nAllow registering tool lints with `register_tool`\n\nPreviously, there was no way to add a custom tool prefix, even if the tool\nitself had registered a lint:\n\n ```rust\n #![feature(register_tool)]\n #![register_tool(xyz)]\n #![warn(xyz::my_lint)]\n ```\n\n```\n$ rustc unknown-lint.rs  --crate-type lib\nerror[E0710]: an unknown tool name found in scoped lint: `xyz::my_lint`\n --> unknown-lint.rs:3:9\n  |\n3 | #![warn(xyz::my_lint)]\n  |         ^^^\n```\n\nThis allows opting-in to lints from other tools using `register_tool`.\n\ncc https://github.com/rust-lang/rust/issues/66079#issuecomment-788589193, ``@chorman0773``\nr? ``@petrochenkov``", "tree": {"sha": "603ed37ae7d05ac3340a5a99356c7d21a98685fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/603ed37ae7d05ac3340a5a99356c7d21a98685fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcb9226efb86f5e082476f4b6910735bd8522825", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgUpCOCRBK7hj4Ov3rIwAAdHIIAIRdTWlLOciMbFfFjbOXpSoF\nEEnOmTAHlkid2LYZNuSmqXAtEDXt8awZu+W4c11eDfQRQ5L9ZHweT7hKumfQ9K5+\n5IONrSwtYHKqBiXMMICQcWI/BdktsAh5KHjfXMs9JAKSZMeH2CC02xarrtIPe77Q\nL/XTQUsRIgnAjCRdzKbi/5FghP7IOzlg0AQjK9i+d6KPRni0mIQsRJN6RRUlVd2d\n7BcU6hFb+lnKxOau7k1sVl8iNcSvV5ioksZTMwU0NpVkVEww8ZWC1UfvklQ9qM+T\nhuctm+ILcYNvXtFVYD2sEijL9Cg9lRhu7F/0uCxDOIHOzZsfKOykvOnoWV/IH5M=\n=52o9\n-----END PGP SIGNATURE-----\n", "payload": "tree 603ed37ae7d05ac3340a5a99356c7d21a98685fe\nparent 201893f5aca0e98d66b01ce59e0889c8c4266079\nparent e3031fe22ae19965967f4fdf8bf46b017902a06a\nauthor Dylan DPC <dylan.dpc@gmail.com> 1616023694 +0100\ncommitter GitHub <noreply@github.com> 1616023694 +0100\n\nRollup merge of #83216 - jyn514:register-tool, r=petrochenkov\n\nAllow registering tool lints with `register_tool`\n\nPreviously, there was no way to add a custom tool prefix, even if the tool\nitself had registered a lint:\n\n ```rust\n #![feature(register_tool)]\n #![register_tool(xyz)]\n #![warn(xyz::my_lint)]\n ```\n\n```\n$ rustc unknown-lint.rs  --crate-type lib\nerror[E0710]: an unknown tool name found in scoped lint: `xyz::my_lint`\n --> unknown-lint.rs:3:9\n  |\n3 | #![warn(xyz::my_lint)]\n  |         ^^^\n```\n\nThis allows opting-in to lints from other tools using `register_tool`.\n\ncc https://github.com/rust-lang/rust/issues/66079#issuecomment-788589193, ``@chorman0773``\nr? ``@petrochenkov``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcb9226efb86f5e082476f4b6910735bd8522825", "html_url": "https://github.com/rust-lang/rust/commit/bcb9226efb86f5e082476f4b6910735bd8522825", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcb9226efb86f5e082476f4b6910735bd8522825/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "201893f5aca0e98d66b01ce59e0889c8c4266079", "url": "https://api.github.com/repos/rust-lang/rust/commits/201893f5aca0e98d66b01ce59e0889c8c4266079", "html_url": "https://github.com/rust-lang/rust/commit/201893f5aca0e98d66b01ce59e0889c8c4266079"}, {"sha": "e3031fe22ae19965967f4fdf8bf46b017902a06a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3031fe22ae19965967f4fdf8bf46b017902a06a", "html_url": "https://github.com/rust-lang/rust/commit/e3031fe22ae19965967f4fdf8bf46b017902a06a"}], "stats": {"total": 144, "additions": 112, "deletions": 32}, "files": [{"sha": "2c5e180f80d4947cc723de82c320b60a142a91a4", "filename": "compiler/rustc_ast/src/attr/mod.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bcb9226efb86f5e082476f4b6910735bd8522825/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcb9226efb86f5e082476f4b6910735bd8522825/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fattr%2Fmod.rs?ref=bcb9226efb86f5e082476f4b6910735bd8522825", "patch": "@@ -33,10 +33,6 @@ impl MarkedAttrs {\n     }\n }\n \n-pub fn is_known_lint_tool(m_item: Ident) -> bool {\n-    [sym::clippy, sym::rustc, sym::rustdoc].contains(&m_item.name)\n-}\n-\n impl NestedMetaItem {\n     /// Returns the `MetaItem` if `self` is a `NestedMetaItem::MetaItem`.\n     pub fn meta_item(&self) -> Option<&MetaItem> {"}, {"sha": "c9de85a2f1877c1b1e16e519e5d727d8d146831a", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bcb9226efb86f5e082476f4b6910735bd8522825/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcb9226efb86f5e082476f4b6910735bd8522825/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=bcb9226efb86f5e082476f4b6910735bd8522825", "patch": "@@ -748,7 +748,7 @@ impl<'a> EarlyContext<'a> {\n             sess,\n             krate,\n             lint_store,\n-            builder: LintLevelsBuilder::new(sess, warn_about_weird_lints, lint_store),\n+            builder: LintLevelsBuilder::new(sess, warn_about_weird_lints, lint_store, &krate.attrs),\n             buffered,\n         }\n     }"}, {"sha": "a332c30078706931f2291b85086a9c4a93943e66", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 37, "deletions": 9, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/bcb9226efb86f5e082476f4b6910735bd8522825/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcb9226efb86f5e082476f4b6910735bd8522825/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=bcb9226efb86f5e082476f4b6910735bd8522825", "patch": "@@ -1,13 +1,12 @@\n use crate::context::{CheckLintNameResult, LintStore};\n use crate::late::unerased_lint_store;\n use rustc_ast as ast;\n-use rustc_ast::attr;\n use rustc_ast::unwrap_or;\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n-use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n+use rustc_hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::{intravisit, HirId};\n use rustc_middle::hir::map::Map;\n use rustc_middle::lint::LevelAndSource;\n@@ -32,7 +31,8 @@ use std::cmp;\n fn lint_levels(tcx: TyCtxt<'_>, cnum: CrateNum) -> LintLevelMap {\n     assert_eq!(cnum, LOCAL_CRATE);\n     let store = unerased_lint_store(tcx);\n-    let levels = LintLevelsBuilder::new(tcx.sess, false, &store);\n+    let crate_attrs = tcx.get_attrs(DefId { krate: cnum, index: CRATE_DEF_INDEX });\n+    let levels = LintLevelsBuilder::new(tcx.sess, false, &store, crate_attrs);\n     let mut builder = LintLevelMapBuilder { levels, tcx, store };\n     let krate = tcx.hir().krate();\n \n@@ -56,6 +56,7 @@ pub struct LintLevelsBuilder<'s> {\n     cur: u32,\n     warn_about_weird_lints: bool,\n     store: &'s LintStore,\n+    crate_attrs: &'s [ast::Attribute],\n }\n \n pub struct BuilderPush {\n@@ -64,14 +65,20 @@ pub struct BuilderPush {\n }\n \n impl<'s> LintLevelsBuilder<'s> {\n-    pub fn new(sess: &'s Session, warn_about_weird_lints: bool, store: &'s LintStore) -> Self {\n+    pub fn new(\n+        sess: &'s Session,\n+        warn_about_weird_lints: bool,\n+        store: &'s LintStore,\n+        crate_attrs: &'s [ast::Attribute],\n+    ) -> Self {\n         let mut builder = LintLevelsBuilder {\n             sess,\n             sets: LintLevelSets::new(),\n             cur: 0,\n             id_to_set: Default::default(),\n             warn_about_weird_lints,\n             store,\n+            crate_attrs,\n         };\n         builder.process_command_line(sess, store);\n         assert_eq!(builder.sets.list.len(), 1);\n@@ -304,15 +311,22 @@ impl<'s> LintLevelsBuilder<'s> {\n                 };\n                 let tool_name = if meta_item.path.segments.len() > 1 {\n                     let tool_ident = meta_item.path.segments[0].ident;\n-                    if !attr::is_known_lint_tool(tool_ident) {\n-                        struct_span_err!(\n+                    if !is_known_lint_tool(tool_ident.name, sess, &self.crate_attrs) {\n+                        let mut err = struct_span_err!(\n                             sess,\n                             tool_ident.span,\n                             E0710,\n-                            \"an unknown tool name found in scoped lint: `{}`\",\n+                            \"unknown tool name `{}` found in scoped lint: `{}`\",\n+                            tool_ident.name,\n                             pprust::path_to_string(&meta_item.path),\n-                        )\n-                        .emit();\n+                        );\n+                        if sess.is_nightly_build() {\n+                            err.help(&format!(\n+                                \"add `#![register_tool({})]` to the crate root\",\n+                                tool_ident.name\n+                            ));\n+                        }\n+                        err.emit();\n                         continue;\n                     }\n \n@@ -559,6 +573,20 @@ impl<'s> LintLevelsBuilder<'s> {\n     }\n }\n \n+fn is_known_lint_tool(m_item: Symbol, sess: &Session, attrs: &[ast::Attribute]) -> bool {\n+    if [sym::clippy, sym::rustc, sym::rustdoc].contains(&m_item) {\n+        return true;\n+    }\n+    // Look for registered tools\n+    // NOTE: does no error handling; error handling is done by rustc_resolve.\n+    sess.filter_by_name(attrs, sym::register_tool)\n+        .filter_map(|attr| attr.meta_item_list())\n+        .flat_map(std::convert::identity)\n+        .filter_map(|nested_meta| nested_meta.ident())\n+        .map(|ident| ident.name)\n+        .any(|name| name == m_item)\n+}\n+\n struct LintLevelMapBuilder<'a, 'tcx> {\n     levels: LintLevelsBuilder<'tcx>,\n     tcx: TyCtxt<'tcx>,"}, {"sha": "0ba5a37b167cdaff937337bffce3da8e75d431ab", "filename": "src/test/ui/lint/register-tool-lint.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bcb9226efb86f5e082476f4b6910735bd8522825/src%2Ftest%2Fui%2Flint%2Fregister-tool-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcb9226efb86f5e082476f4b6910735bd8522825/src%2Ftest%2Fui%2Flint%2Fregister-tool-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fregister-tool-lint.rs?ref=bcb9226efb86f5e082476f4b6910735bd8522825", "patch": "@@ -0,0 +1,11 @@\n+#![crate_type = \"lib\"]\n+#![feature(register_tool)]\n+#![register_tool(xyz)]\n+#![warn(xyz::my_lint)] // this should not error\n+#![warn(abc::my_lint)]\n+//~^ ERROR unknown tool name `abc` found in scoped lint\n+//~| HELP add `#![register_tool(abc)]`\n+//~| ERROR unknown tool name `abc`\n+//~| HELP add `#![register_tool(abc)]`\n+//~| ERROR unknown tool name `abc`\n+//~| HELP add `#![register_tool(abc)]`"}, {"sha": "750c74cec1eb998ebffcbe7014f153044732d657", "filename": "src/test/ui/lint/register-tool-lint.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/bcb9226efb86f5e082476f4b6910735bd8522825/src%2Ftest%2Fui%2Flint%2Fregister-tool-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bcb9226efb86f5e082476f4b6910735bd8522825/src%2Ftest%2Fui%2Flint%2Fregister-tool-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fregister-tool-lint.stderr?ref=bcb9226efb86f5e082476f4b6910735bd8522825", "patch": "@@ -0,0 +1,27 @@\n+error[E0710]: unknown tool name `abc` found in scoped lint: `abc::my_lint`\n+  --> $DIR/register-tool-lint.rs:5:9\n+   |\n+LL | #![warn(abc::my_lint)]\n+   |         ^^^\n+   |\n+   = help: add `#![register_tool(abc)]` to the crate root\n+\n+error[E0710]: unknown tool name `abc` found in scoped lint: `abc::my_lint`\n+  --> $DIR/register-tool-lint.rs:5:9\n+   |\n+LL | #![warn(abc::my_lint)]\n+   |         ^^^\n+   |\n+   = help: add `#![register_tool(abc)]` to the crate root\n+\n+error[E0710]: unknown tool name `abc` found in scoped lint: `abc::my_lint`\n+  --> $DIR/register-tool-lint.rs:5:9\n+   |\n+LL | #![warn(abc::my_lint)]\n+   |         ^^^\n+   |\n+   = help: add `#![register_tool(abc)]` to the crate root\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0710`."}, {"sha": "9e4aa7a939acbca1a2ba4fdc7d0c942d286c5ada", "filename": "src/test/ui/tool_lints.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bcb9226efb86f5e082476f4b6910735bd8522825/src%2Ftest%2Fui%2Ftool_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcb9226efb86f5e082476f4b6910735bd8522825/src%2Ftest%2Fui%2Ftool_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftool_lints.rs?ref=bcb9226efb86f5e082476f4b6910735bd8522825", "patch": "@@ -1,5 +1,5 @@\n #[warn(foo::bar)]\n-//~^ ERROR an unknown tool name found in scoped lint: `foo::bar`\n-//~| ERROR an unknown tool name found in scoped lint: `foo::bar`\n-//~| ERROR an unknown tool name found in scoped lint: `foo::bar`\n+//~^ ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n+//~| ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n+//~| ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n fn main() {}"}, {"sha": "e06f6ddc1ca3af6651073368df79cf65888a9164", "filename": "src/test/ui/tool_lints.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bcb9226efb86f5e082476f4b6910735bd8522825/src%2Ftest%2Fui%2Ftool_lints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bcb9226efb86f5e082476f4b6910735bd8522825/src%2Ftest%2Fui%2Ftool_lints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftool_lints.stderr?ref=bcb9226efb86f5e082476f4b6910735bd8522825", "patch": "@@ -1,20 +1,26 @@\n-error[E0710]: an unknown tool name found in scoped lint: `foo::bar`\n+error[E0710]: unknown tool name `foo` found in scoped lint: `foo::bar`\n   --> $DIR/tool_lints.rs:1:8\n    |\n LL | #[warn(foo::bar)]\n    |        ^^^\n+   |\n+   = help: add `#![register_tool(foo)]` to the crate root\n \n-error[E0710]: an unknown tool name found in scoped lint: `foo::bar`\n+error[E0710]: unknown tool name `foo` found in scoped lint: `foo::bar`\n   --> $DIR/tool_lints.rs:1:8\n    |\n LL | #[warn(foo::bar)]\n    |        ^^^\n+   |\n+   = help: add `#![register_tool(foo)]` to the crate root\n \n-error[E0710]: an unknown tool name found in scoped lint: `foo::bar`\n+error[E0710]: unknown tool name `foo` found in scoped lint: `foo::bar`\n   --> $DIR/tool_lints.rs:1:8\n    |\n LL | #[warn(foo::bar)]\n    |        ^^^\n+   |\n+   = help: add `#![register_tool(foo)]` to the crate root\n \n error: aborting due to 3 previous errors\n "}, {"sha": "84ab7c1944ab2ac10fe0cb288f04fb3d94a55928", "filename": "src/test/ui/unknown-lint-tool-name.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bcb9226efb86f5e082476f4b6910735bd8522825/src%2Ftest%2Fui%2Funknown-lint-tool-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcb9226efb86f5e082476f4b6910735bd8522825/src%2Ftest%2Fui%2Funknown-lint-tool-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funknown-lint-tool-name.rs?ref=bcb9226efb86f5e082476f4b6910735bd8522825", "patch": "@@ -1,8 +1,8 @@\n-#![deny(foo::bar)] //~ ERROR an unknown tool name found in scoped lint: `foo::bar`\n-                   //~| ERROR an unknown tool name found in scoped lint: `foo::bar`\n-                   //~| ERROR an unknown tool name found in scoped lint: `foo::bar`\n+#![deny(foo::bar)] //~ ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n+                   //~| ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n+                   //~| ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n \n-#[allow(foo::bar)] //~ ERROR an unknown tool name found in scoped lint: `foo::bar`\n-                   //~| ERROR an unknown tool name found in scoped lint: `foo::bar`\n-                   //~| ERROR an unknown tool name found in scoped lint: `foo::bar`\n+#[allow(foo::bar)] //~ ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n+                   //~| ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n+                   //~| ERROR unknown tool name `foo` found in scoped lint: `foo::bar`\n fn main() {}"}, {"sha": "1d145515abf66e60e790adcc8f45311f758e059e", "filename": "src/test/ui/unknown-lint-tool-name.stderr", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bcb9226efb86f5e082476f4b6910735bd8522825/src%2Ftest%2Fui%2Funknown-lint-tool-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bcb9226efb86f5e082476f4b6910735bd8522825/src%2Ftest%2Fui%2Funknown-lint-tool-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funknown-lint-tool-name.stderr?ref=bcb9226efb86f5e082476f4b6910735bd8522825", "patch": "@@ -1,38 +1,50 @@\n-error[E0710]: an unknown tool name found in scoped lint: `foo::bar`\n+error[E0710]: unknown tool name `foo` found in scoped lint: `foo::bar`\n   --> $DIR/unknown-lint-tool-name.rs:1:9\n    |\n LL | #![deny(foo::bar)]\n    |         ^^^\n+   |\n+   = help: add `#![register_tool(foo)]` to the crate root\n \n-error[E0710]: an unknown tool name found in scoped lint: `foo::bar`\n+error[E0710]: unknown tool name `foo` found in scoped lint: `foo::bar`\n   --> $DIR/unknown-lint-tool-name.rs:5:9\n    |\n LL | #[allow(foo::bar)]\n    |         ^^^\n+   |\n+   = help: add `#![register_tool(foo)]` to the crate root\n \n-error[E0710]: an unknown tool name found in scoped lint: `foo::bar`\n+error[E0710]: unknown tool name `foo` found in scoped lint: `foo::bar`\n   --> $DIR/unknown-lint-tool-name.rs:1:9\n    |\n LL | #![deny(foo::bar)]\n    |         ^^^\n+   |\n+   = help: add `#![register_tool(foo)]` to the crate root\n \n-error[E0710]: an unknown tool name found in scoped lint: `foo::bar`\n+error[E0710]: unknown tool name `foo` found in scoped lint: `foo::bar`\n   --> $DIR/unknown-lint-tool-name.rs:5:9\n    |\n LL | #[allow(foo::bar)]\n    |         ^^^\n+   |\n+   = help: add `#![register_tool(foo)]` to the crate root\n \n-error[E0710]: an unknown tool name found in scoped lint: `foo::bar`\n+error[E0710]: unknown tool name `foo` found in scoped lint: `foo::bar`\n   --> $DIR/unknown-lint-tool-name.rs:1:9\n    |\n LL | #![deny(foo::bar)]\n    |         ^^^\n+   |\n+   = help: add `#![register_tool(foo)]` to the crate root\n \n-error[E0710]: an unknown tool name found in scoped lint: `foo::bar`\n+error[E0710]: unknown tool name `foo` found in scoped lint: `foo::bar`\n   --> $DIR/unknown-lint-tool-name.rs:5:9\n    |\n LL | #[allow(foo::bar)]\n    |         ^^^\n+   |\n+   = help: add `#![register_tool(foo)]` to the crate root\n \n error: aborting due to 6 previous errors\n "}]}