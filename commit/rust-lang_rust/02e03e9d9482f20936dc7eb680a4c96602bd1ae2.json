{"sha": "02e03e9d9482f20936dc7eb680a4c96602bd1ae2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZTAzZTlkOTQ4MmYyMDkzNmRjN2ViNjgwYTRjOTY2MDJiZDFhZTI=", "commit": {"author": {"name": "Diego Giagio", "email": "diego@giagio.com", "date": "2014-12-28T18:51:00Z"}, "committer": {"name": "Diego Giagio", "email": "diego@giagio.com", "date": "2014-12-28T18:51:00Z"}, "message": "Fix deprecation warnings on libserialize tests", "tree": {"sha": "af3e8abce37cfe8c9e37c9d90560601cd6b23513", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af3e8abce37cfe8c9e37c9d90560601cd6b23513"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02e03e9d9482f20936dc7eb680a4c96602bd1ae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02e03e9d9482f20936dc7eb680a4c96602bd1ae2", "html_url": "https://github.com/rust-lang/rust/commit/02e03e9d9482f20936dc7eb680a4c96602bd1ae2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02e03e9d9482f20936dc7eb680a4c96602bd1ae2/comments", "author": {"login": "dgiagio", "id": 124647, "node_id": "MDQ6VXNlcjEyNDY0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/124647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgiagio", "html_url": "https://github.com/dgiagio", "followers_url": "https://api.github.com/users/dgiagio/followers", "following_url": "https://api.github.com/users/dgiagio/following{/other_user}", "gists_url": "https://api.github.com/users/dgiagio/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgiagio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgiagio/subscriptions", "organizations_url": "https://api.github.com/users/dgiagio/orgs", "repos_url": "https://api.github.com/users/dgiagio/repos", "events_url": "https://api.github.com/users/dgiagio/events{/privacy}", "received_events_url": "https://api.github.com/users/dgiagio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dgiagio", "id": 124647, "node_id": "MDQ6VXNlcjEyNDY0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/124647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgiagio", "html_url": "https://github.com/dgiagio", "followers_url": "https://api.github.com/users/dgiagio/followers", "following_url": "https://api.github.com/users/dgiagio/following{/other_user}", "gists_url": "https://api.github.com/users/dgiagio/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgiagio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgiagio/subscriptions", "organizations_url": "https://api.github.com/users/dgiagio/orgs", "repos_url": "https://api.github.com/users/dgiagio/repos", "events_url": "https://api.github.com/users/dgiagio/events{/privacy}", "received_events_url": "https://api.github.com/users/dgiagio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e6b29f8ad1ddfcb134d743a66ee5f467e16c350", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e6b29f8ad1ddfcb134d743a66ee5f467e16c350", "html_url": "https://github.com/rust-lang/rust/commit/3e6b29f8ad1ddfcb134d743a66ee5f467e16c350"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "aeb384f464d07c9c87938740e198a2aa16dea97d", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/02e03e9d9482f20936dc7eb680a4c96602bd1ae2/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e03e9d9482f20936dc7eb680a4c96602bd1ae2/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=02e03e9d9482f20936dc7eb680a4c96602bd1ae2", "patch": "@@ -2517,7 +2517,7 @@ mod tests {\n     #[test]\n     fn test_from_str_trait() {\n         let s = \"null\";\n-        assert!(::std::str::from_str::<Json>(s).unwrap() == from_str(s).unwrap());\n+        assert!(s.parse::<Json>().unwrap() == s.parse().unwrap());\n     }\n \n     #[test]\n@@ -3729,8 +3729,8 @@ mod tests {\n         let array3 = Array(vec!(U64(1), U64(2), U64(3)));\n         let object = {\n             let mut tree_map = BTreeMap::new();\n-            tree_map.insert(\"a\".into_string(), U64(1));\n-            tree_map.insert(\"b\".into_string(), U64(2));\n+            tree_map.insert(\"a\".to_string(), U64(1));\n+            tree_map.insert(\"b\".to_string(), U64(2));\n             Object(tree_map)\n         };\n \n@@ -3762,8 +3762,8 @@ mod tests {\n         assert_eq!((vec![1u, 2]).to_json(), array2);\n         assert_eq!(vec!(1u, 2, 3).to_json(), array3);\n         let mut tree_map = BTreeMap::new();\n-        tree_map.insert(\"a\".into_string(), 1u);\n-        tree_map.insert(\"b\".into_string(), 2);\n+        tree_map.insert(\"a\".to_string(), 1u);\n+        tree_map.insert(\"b\".to_string(), 2);\n         assert_eq!(tree_map.to_json(), object);\n         let mut hash_map = HashMap::new();\n         hash_map.insert(\"a\".to_string(), 1u);"}]}