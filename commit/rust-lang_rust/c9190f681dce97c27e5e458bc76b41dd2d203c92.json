{"sha": "c9190f681dce97c27e5e458bc76b41dd2d203c92", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5MTkwZjY4MWRjZTk3YzI3ZTVlNDU4YmM3NmI0MWRkMmQyMDNjOTI=", "commit": {"author": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T14:28:34Z"}, "committer": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T15:22:32Z"}, "message": "clean tests/ui/non_expressive.rs\n\nCleaning the empty lines for clarity.", "tree": {"sha": "bd050a8462790282d313e8de95fff299ff40212a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd050a8462790282d313e8de95fff299ff40212a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9190f681dce97c27e5e458bc76b41dd2d203c92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9190f681dce97c27e5e458bc76b41dd2d203c92", "html_url": "https://github.com/rust-lang/rust/commit/c9190f681dce97c27e5e458bc76b41dd2d203c92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9190f681dce97c27e5e458bc76b41dd2d203c92/comments", "author": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efbaf09308c7d1d32e6df4871f0a8c4774caf16a", "url": "https://api.github.com/repos/rust-lang/rust/commits/efbaf09308c7d1d32e6df4871f0a8c4774caf16a", "html_url": "https://github.com/rust-lang/rust/commit/efbaf09308c7d1d32e6df4871f0a8c4774caf16a"}], "stats": {"total": 102, "additions": 44, "deletions": 58}, "files": [{"sha": "8f8c110b9da6f52f0f401e26baa1ed7ad079c63a", "filename": "tests/ui/non_expressive_names.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c9190f681dce97c27e5e458bc76b41dd2d203c92/tests%2Fui%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9190f681dce97c27e5e458bc76b41dd2d203c92/tests%2Fui%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.rs?ref=c9190f681dce97c27e5e458bc76b41dd2d203c92", "patch": "@@ -1,17 +1,6 @@\n #![feature(plugin)]\n #![plugin(clippy)]\n #![deny(clippy,similar_names)]\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n #![allow(unused)]\n \n \n@@ -129,18 +118,15 @@ fn bla() {\n         }\n         {\n             let e: i32;\n-\n         }\n         {\n             let e: i32;\n-\n             let f: i32;\n \n         }\n         match 5 {\n             1 => println!(\"\"),\n             e => panic!(),\n-\n         }\n         match 5 {\n             1 => println!(\"\"),"}, {"sha": "63fc607b802a0271efee2b433aea7fc34ce3a4a6", "filename": "tests/ui/non_expressive_names.stderr", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/c9190f681dce97c27e5e458bc76b41dd2d203c92/tests%2Fui%2Fnon_expressive_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c9190f681dce97c27e5e458bc76b41dd2d203c92/tests%2Fui%2Fnon_expressive_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.stderr?ref=c9190f681dce97c27e5e458bc76b41dd2d203c92", "patch": "@@ -1,7 +1,7 @@\n error: binding's name is too similar to existing binding\n-  --> $DIR/non_expressive_names.rs:29:9\n+  --> $DIR/non_expressive_names.rs:18:9\n    |\n-29 |     let bpple: i32;\n+18 |     let bpple: i32;\n    |         ^^^^^\n    |\n note: lint level defined here\n@@ -10,107 +10,107 @@ note: lint level defined here\n 3  | #![deny(clippy,similar_names)]\n    |                ^^^^^^^^^^^^^\n note: existing binding defined here\n-  --> $DIR/non_expressive_names.rs:27:9\n+  --> $DIR/non_expressive_names.rs:16:9\n    |\n-27 |     let apple: i32;\n+16 |     let apple: i32;\n    |         ^^^^^\n help: separate the discriminating character by an underscore like: `b_pple`\n-  --> $DIR/non_expressive_names.rs:29:9\n+  --> $DIR/non_expressive_names.rs:18:9\n    |\n-29 |     let bpple: i32;\n+18 |     let bpple: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/non_expressive_names.rs:31:9\n+  --> $DIR/non_expressive_names.rs:20:9\n    |\n-31 |     let cpple: i32;\n+20 |     let cpple: i32;\n    |         ^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/non_expressive_names.rs:27:9\n+  --> $DIR/non_expressive_names.rs:16:9\n    |\n-27 |     let apple: i32;\n+16 |     let apple: i32;\n    |         ^^^^^\n help: separate the discriminating character by an underscore like: `c_pple`\n-  --> $DIR/non_expressive_names.rs:31:9\n+  --> $DIR/non_expressive_names.rs:20:9\n    |\n-31 |     let cpple: i32;\n+20 |     let cpple: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/non_expressive_names.rs:56:9\n+  --> $DIR/non_expressive_names.rs:45:9\n    |\n-56 |     let bluby: i32;\n+45 |     let bluby: i32;\n    |         ^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/non_expressive_names.rs:55:9\n+  --> $DIR/non_expressive_names.rs:44:9\n    |\n-55 |     let blubx: i32;\n+44 |     let blubx: i32;\n    |         ^^^^^\n help: separate the discriminating character by an underscore like: `blub_y`\n-  --> $DIR/non_expressive_names.rs:56:9\n+  --> $DIR/non_expressive_names.rs:45:9\n    |\n-56 |     let bluby: i32;\n+45 |     let bluby: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/non_expressive_names.rs:61:9\n+  --> $DIR/non_expressive_names.rs:50:9\n    |\n-61 |     let coke: i32;\n+50 |     let coke: i32;\n    |         ^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/non_expressive_names.rs:59:9\n+  --> $DIR/non_expressive_names.rs:48:9\n    |\n-59 |     let cake: i32;\n+48 |     let cake: i32;\n    |         ^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/non_expressive_names.rs:79:9\n+  --> $DIR/non_expressive_names.rs:68:9\n    |\n-79 |     let xyzeabc: i32;\n+68 |     let xyzeabc: i32;\n    |         ^^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/non_expressive_names.rs:77:9\n+  --> $DIR/non_expressive_names.rs:66:9\n    |\n-77 |     let xyz1abc: i32;\n+66 |     let xyz1abc: i32;\n    |         ^^^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/non_expressive_names.rs:83:9\n+  --> $DIR/non_expressive_names.rs:72:9\n    |\n-83 |     let parsee: i32;\n+72 |     let parsee: i32;\n    |         ^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/non_expressive_names.rs:81:9\n+  --> $DIR/non_expressive_names.rs:70:9\n    |\n-81 |     let parser: i32;\n+70 |     let parser: i32;\n    |         ^^^^^^\n help: separate the discriminating character by an underscore like: `parse_e`\n-  --> $DIR/non_expressive_names.rs:83:9\n+  --> $DIR/non_expressive_names.rs:72:9\n    |\n-83 |     let parsee: i32;\n+72 |     let parsee: i32;\n    |         ^^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/non_expressive_names.rs:97:16\n+  --> $DIR/non_expressive_names.rs:86:16\n    |\n-97 |         bpple: sprang } = unimplemented!();\n+86 |         bpple: sprang } = unimplemented!();\n    |                ^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/non_expressive_names.rs:96:22\n+  --> $DIR/non_expressive_names.rs:85:22\n    |\n-96 |     let Foo { apple: spring,\n+85 |     let Foo { apple: spring,\n    |                      ^^^^^^\n \n error: 5th binding whose name is just one char\n-   --> $DIR/non_expressive_names.rs:131:17\n+   --> $DIR/non_expressive_names.rs:120:17\n     |\n-131 |             let e: i32;\n+120 |             let e: i32;\n     |                 ^\n     |\n     = note: #[deny(many_single_char_names)] implied by #[deny(clippy)]\n@@ -121,25 +121,25 @@ note: lint level defined here\n     |         ^^^^^^\n \n error: 5th binding whose name is just one char\n-   --> $DIR/non_expressive_names.rs:135:17\n+   --> $DIR/non_expressive_names.rs:123:17\n     |\n-135 |             let e: i32;\n+123 |             let e: i32;\n     |                 ^\n     |\n     = note: #[deny(many_single_char_names)] implied by #[deny(clippy)]\n \n error: 6th binding whose name is just one char\n-   --> $DIR/non_expressive_names.rs:137:17\n+   --> $DIR/non_expressive_names.rs:124:17\n     |\n-137 |             let f: i32;\n+124 |             let f: i32;\n     |                 ^\n     |\n     = note: #[deny(many_single_char_names)] implied by #[deny(clippy)]\n \n error: 5th binding whose name is just one char\n-   --> $DIR/non_expressive_names.rs:142:13\n+   --> $DIR/non_expressive_names.rs:129:13\n     |\n-142 |             e => panic!(),\n+129 |             e => panic!(),\n     |             ^\n     |\n     = note: #[deny(many_single_char_names)] implied by #[deny(clippy)]"}]}