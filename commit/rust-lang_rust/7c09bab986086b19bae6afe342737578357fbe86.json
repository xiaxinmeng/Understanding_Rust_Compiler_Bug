{"sha": "7c09bab986086b19bae6afe342737578357fbe86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjMDliYWI5ODYwODZiMTliYWU2YWZlMzQyNzM3NTc4MzU3ZmJlODY=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-07-26T15:18:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-26T15:18:34Z"}, "message": "Rollup merge of #52674 - tinaun:patch-2, r=cramertj\n\nImpl Executor for Box<E: Executor>\n\nremoves the need for the compatibility lib between futures 0.1 and 0.3 to use a wrapper type to implement Executor for Box<Executor>", "tree": {"sha": "a13047e5fbbc1c108e6b59ee071df6c6e54b4695", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a13047e5fbbc1c108e6b59ee071df6c6e54b4695"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c09bab986086b19bae6afe342737578357fbe86", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbWeZKCRBK7hj4Ov3rIwAAdHIIAK7KCvXOBZ4RKmxhl6mCscsP\n3C6FatInG38nZWErgwqp35i2H7JRrMaoGOeJFzAUKwAtXwlacXCMwyoGG3uPYvLd\nC19JLnAXvBjsTt1O7RdYTJrqj+cODe5YFbZxnhjBjOZxr+NbKgsJ6PNUx1+2iBmM\ntLqns8ET6J85LNKM65YvUgQ34q5PNSIka4MSwIk+LSQ6czJvgroUuWLTtrRWcplQ\nOScka92/VwNWR2Il5Lgsfyg3awTuNen7AP+a566whCu2KJBI9qylWpSTf38t27hN\nGhLxX0uDHprEmVez5pjQBesxLVfGR8d6uI04w3d6AhhVY528MZKO+cWcmrJD3RM=\n=AjKk\n-----END PGP SIGNATURE-----\n", "payload": "tree a13047e5fbbc1c108e6b59ee071df6c6e54b4695\nparent 007177c445f3e56f891245ad1a68f0041310efb4\nparent 75d22263c92c28510a1bff2a91031d28817443d8\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1532618314 -0600\ncommitter GitHub <noreply@github.com> 1532618314 -0600\n\nRollup merge of #52674 - tinaun:patch-2, r=cramertj\n\nImpl Executor for Box<E: Executor>\n\nremoves the need for the compatibility lib between futures 0.1 and 0.3 to use a wrapper type to implement Executor for Box<Executor>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c09bab986086b19bae6afe342737578357fbe86", "html_url": "https://github.com/rust-lang/rust/commit/7c09bab986086b19bae6afe342737578357fbe86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c09bab986086b19bae6afe342737578357fbe86/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "007177c445f3e56f891245ad1a68f0041310efb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/007177c445f3e56f891245ad1a68f0041310efb4", "html_url": "https://github.com/rust-lang/rust/commit/007177c445f3e56f891245ad1a68f0041310efb4"}, {"sha": "75d22263c92c28510a1bff2a91031d28817443d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/75d22263c92c28510a1bff2a91031d28817443d8", "html_url": "https://github.com/rust-lang/rust/commit/75d22263c92c28510a1bff2a91031d28817443d8"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "2cf9b13a67a2750754b0f98070a52aec2e979d34", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7c09bab986086b19bae6afe342737578357fbe86/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c09bab986086b19bae6afe342737578357fbe86/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=7c09bab986086b19bae6afe342737578357fbe86", "patch": "@@ -67,7 +67,7 @@ use core::marker::{Unpin, Unsize};\n use core::mem::{self, PinMut};\n use core::ops::{CoerceUnsized, Deref, DerefMut, Generator, GeneratorState};\n use core::ptr::{self, NonNull, Unique};\n-use core::task::{Context, Poll};\n+use core::task::{Context, Poll, Executor, SpawnErrorKind, SpawnObjError};\n \n use raw_vec::RawVec;\n use str::from_boxed_utf8_unchecked;\n@@ -972,6 +972,19 @@ unsafe impl<'a, T, F> UnsafeFutureObj<'a, T> for PinBox<F>\n     }\n }\n \n+#[unstable(feature = \"futures_api\", issue = \"50547\")]\n+impl<E> Executor for Box<E>\n+    where E: Executor + ?Sized\n+{\n+    fn spawn_obj(&mut self, task: FutureObj<'static, ()>) -> Result<(), SpawnObjError> {\n+        (**self).spawn_obj(task)\n+    }\n+\n+    fn status(&self) -> Result<(), SpawnErrorKind> {\n+        (**self).status()\n+    }\n+}\n+\n #[unstable(feature = \"futures_api\", issue = \"50547\")]\n impl<'a, F: Future<Output = ()> + Send + 'a> From<PinBox<F>> for FutureObj<'a, ()> {\n     fn from(boxed: PinBox<F>) -> Self {"}]}