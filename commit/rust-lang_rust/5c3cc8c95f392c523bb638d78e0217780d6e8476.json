{"sha": "5c3cc8c95f392c523bb638d78e0217780d6e8476", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjM2NjOGM5NWYzOTJjNTIzYmI2MzhkNzhlMDIxNzc4MGQ2ZTg0NzY=", "commit": {"author": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-03-18T21:15:03Z"}, "committer": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-03-18T21:15:03Z"}, "message": "Reformat using Prettier", "tree": {"sha": "2a39db2f3964ac2970423de2cf384e7d6adc415e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a39db2f3964ac2970423de2cf384e7d6adc415e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c3cc8c95f392c523bb638d78e0217780d6e8476", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c3cc8c95f392c523bb638d78e0217780d6e8476", "html_url": "https://github.com/rust-lang/rust/commit/5c3cc8c95f392c523bb638d78e0217780d6e8476", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c3cc8c95f392c523bb638d78e0217780d6e8476/comments", "author": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d2378ed7da7e2255e0ea155632a609909071ca7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d2378ed7da7e2255e0ea155632a609909071ca7", "html_url": "https://github.com/rust-lang/rust/commit/7d2378ed7da7e2255e0ea155632a609909071ca7"}], "stats": {"total": 52, "additions": 35, "deletions": 17}, "files": [{"sha": "23fd280b491058f5faba191b3b6ad7774638e26c", "filename": "editors/code/src/commands/runnables.ts", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5c3cc8c95f392c523bb638d78e0217780d6e8476/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5c3cc8c95f392c523bb638d78e0217780d6e8476/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts?ref=5c3cc8c95f392c523bb638d78e0217780d6e8476", "patch": "@@ -128,7 +128,7 @@ export const autoCargoWatchTask: vscode.Task = {\n     name: 'cargo watch',\n     source: 'rust-analyzer',\n     definition: {\n-        type: \"dupa\",\n+        type: 'watch'\n     },\n     execution: new vscode.ShellExecution('cargo', ['watch'], { cwd: '.' }),\n \n@@ -138,8 +138,8 @@ export const autoCargoWatchTask: vscode.Task = {\n         clear: true\n     },\n     // Not yet exposed in the vscode.d.ts\n-    runOptions: {\n-        runOn: 2 // RunOnOptions.folderOpen, https://github.com/Microsoft/vscode/blob/ea7c31d770e04b51d586b0d3944f3a7feb03afb9/src/vs/workbench/contrib/tasks/common/tasks.ts#L444-L456\n-    } as unknown as vscode.RunOptions,\n-\n+    // https://github.com/Microsoft/vscode/blob/ea7c31d770e04b51d586b0d3944f3a7feb03afb9/src/vs/workbench/contrib/tasks/common/tasks.ts#L444-L456\n+    runOptions: ({\n+        runOn: 2 // RunOnOptions.folderOpen\n+    } as unknown) as vscode.RunOptions\n };"}, {"sha": "f915a50231206438a00219f76f0ab686f90d7227", "filename": "editors/code/src/extension.ts", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/5c3cc8c95f392c523bb638d78e0217780d6e8476/editors%2Fcode%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5c3cc8c95f392c523bb638d78e0217780d6e8476/editors%2Fcode%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fextension.ts?ref=5c3cc8c95f392c523bb638d78e0217780d6e8476", "patch": "@@ -92,11 +92,11 @@ export function activate(context: vscode.ExtensionContext) {\n     const allNotifications: Iterable<\n         [string, lc.GenericNotificationHandler]\n     > = [\n-            [\n-                'rust-analyzer/publishDecorations',\n-                notifications.publishDecorations.handle\n-            ]\n-        ];\n+        [\n+            'rust-analyzer/publishDecorations',\n+            notifications.publishDecorations.handle\n+        ]\n+    ];\n     const syntaxTreeContentProvider = new SyntaxTreeContentProvider();\n \n     // The events below are plain old javascript events, triggered and handled by vscode\n@@ -146,10 +146,17 @@ async function askToCargoWatch() {\n         return;\n     }\n \n-    const { stderr } = await util.promisify(exec)('cargo watch --version').catch(e => e);\n+    const { stderr } = await util\n+        .promisify(exec)('cargo watch --version')\n+        .catch(e => e);\n     if (stderr.includes('no such subcommand: `watch`')) {\n-        const msg = 'The `cargo-watch` subcommand is not installed. Install? (takes ~1-2 minutes)';\n-        const install = await vscode.window.showInformationMessage(msg, 'yes', 'no');\n+        const msg =\n+            'The `cargo-watch` subcommand is not installed. Install? (takes ~1-2 minutes)';\n+        const install = await vscode.window.showInformationMessage(\n+            msg,\n+            'yes',\n+            'no'\n+        );\n         if (install === 'no') {\n             return;\n         }\n@@ -160,15 +167,26 @@ async function askToCargoWatch() {\n                 if (execution.task.name === label) {\n                     disposable.dispose();\n                     resolve();\n-                };\n+                }\n             });\n         });\n \n-        vscode.tasks.executeTask(createTask({ label, bin: 'cargo', args: ['install', 'cargo-watch'], env: {} }));\n+        vscode.tasks.executeTask(\n+            createTask({\n+                label,\n+                bin: 'cargo',\n+                args: ['install', 'cargo-watch'],\n+                env: {}\n+            })\n+        );\n         await taskFinished;\n-        const { stderr } = await util.promisify(exec)('cargo watch --version').catch(e => e);\n+        const { stderr } = await util\n+            .promisify(exec)('cargo watch --version')\n+            .catch(e => e);\n         if (stderr !== '') {\n-            vscode.window.showErrorMessage(`Couldn't install \\`cargo-\\`watch: ${stderr}`);\n+            vscode.window.showErrorMessage(\n+                `Couldn't install \\`cargo-\\`watch: ${stderr}`\n+            );\n             return;\n         }\n     }"}]}