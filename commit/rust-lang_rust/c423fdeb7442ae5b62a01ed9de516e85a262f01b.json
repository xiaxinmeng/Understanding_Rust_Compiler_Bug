{"sha": "c423fdeb7442ae5b62a01ed9de516e85a262f01b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MjNmZGViNzQ0MmFlNWI2MmEwMWVkOWRlNTE2ZTg1YTI2MmYwMWI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-12T03:07:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-12T03:07:12Z"}, "message": "Rollup merge of #75368 - poliorcetics:intra-doc-links-std-prelude, r=jyn514\n\nMove to doc links inside the prelude\n\nHelps with #75080.\n\n@rustbot modify labels: T-doc, A-intra-doc-links, T-rustdoc", "tree": {"sha": "e896008f774fdc80b1caecac824fa5801c8df2fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e896008f774fdc80b1caecac824fa5801c8df2fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c423fdeb7442ae5b62a01ed9de516e85a262f01b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfM1zgCRBK7hj4Ov3rIwAAdHIIABG5D1wk7qVYE8mjDiekugHi\nBEpXDzG26iWIFQqewfll/av/WvQC/iMMlvHDTkTTQrIXuksDLMFGuvuXuQdKCe0M\nOiyGAgLH1TwfHKigKYTUD99/RP3uRNYZww2PKNIT62J7vSl/O14kXXBKBdyhbwIs\njMHciZ4VXHH32JwG5+apG57b9lQ1vn+xTiq7pr5mWAXEMPQXoAIC+++ApHxUYZyK\nJIMM/yZ9YWDX0LY5Y7Lq7o8rPWjthv2Wvorjv5pEbjCnMErh1aFroUejwMKCfW5E\ne/a4vTXZdZB5ifD1rqFAJ1K9VA3Kpfsy82H4mSsdSUSHDa+I+LFapTlvwQ/yLvQ=\n=DZai\n-----END PGP SIGNATURE-----\n", "payload": "tree e896008f774fdc80b1caecac824fa5801c8df2fa\nparent 0bdb83942d8757680e5b616217f075639145e778\nparent 3ff06a9f2cd0dab421b32b00dcb573c8bc1907b1\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1597201632 +0900\ncommitter GitHub <noreply@github.com> 1597201632 +0900\n\nRollup merge of #75368 - poliorcetics:intra-doc-links-std-prelude, r=jyn514\n\nMove to doc links inside the prelude\n\nHelps with #75080.\n\n@rustbot modify labels: T-doc, A-intra-doc-links, T-rustdoc\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c423fdeb7442ae5b62a01ed9de516e85a262f01b", "html_url": "https://github.com/rust-lang/rust/commit/c423fdeb7442ae5b62a01ed9de516e85a262f01b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c423fdeb7442ae5b62a01ed9de516e85a262f01b/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bdb83942d8757680e5b616217f075639145e778", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bdb83942d8757680e5b616217f075639145e778", "html_url": "https://github.com/rust-lang/rust/commit/0bdb83942d8757680e5b616217f075639145e778"}, {"sha": "3ff06a9f2cd0dab421b32b00dcb573c8bc1907b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ff06a9f2cd0dab421b32b00dcb573c8bc1907b1", "html_url": "https://github.com/rust-lang/rust/commit/3ff06a9f2cd0dab421b32b00dcb573c8bc1907b1"}], "stats": {"total": 83, "additions": 25, "deletions": 58}, "files": [{"sha": "710c616be73cbec5d12cd24f36451d1edd3661c9", "filename": "library/std/src/prelude/mod.rs", "status": "modified", "additions": 25, "deletions": 58, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/c423fdeb7442ae5b62a01ed9de516e85a262f01b/library%2Fstd%2Fsrc%2Fprelude%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c423fdeb7442ae5b62a01ed9de516e85a262f01b/library%2Fstd%2Fsrc%2Fprelude%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprelude%2Fmod.rs?ref=c423fdeb7442ae5b62a01ed9de516e85a262f01b", "patch": "@@ -17,7 +17,7 @@\n //! such as [`std::io::prelude`]. Various libraries in the Rust ecosystem may\n //! also define their own preludes.\n //!\n-//! [`std::io::prelude`]: ../io/prelude/index.html\n+//! [`std::io::prelude`]: crate::io::prelude\n //!\n //! The difference between 'the prelude' and these other preludes is that they\n //! are not automatically `use`'d, and must be imported manually. This is still\n@@ -49,67 +49,34 @@\n //! * [`std::iter`]::{[`Iterator`], [`Extend`], [`IntoIterator`],\n //!   [`DoubleEndedIterator`], [`ExactSizeIterator`]}. Iterators of various\n //!   kinds.\n-//! * [`std::option`]::[`Option`]::{`self`, `Some`, `None`}. A type which\n-//!   expresses the presence or absence of a value. This type is so commonly\n-//!   used, its variants are also exported.\n-//! * [`std::result`]::[`Result`]::{`self`, `Ok`, `Err`}. A type for functions\n-//!   that may succeed or fail. Like [`Option`], its variants are exported as\n-//!   well.\n+//! * [`std::option`]::[`Option`]::{[`self`][`Option`], [`Some`], [`None`]}. A\n+//!   type which expresses the presence or absence of a value. This type is so\n+//!   commonly used, its variants are also exported.\n+//! * [`std::result`]::[`Result`]::{[`self`][`Result`], [`Ok`], [`Err`]}. A type\n+//!   for functions that may succeed or fail. Like [`Option`], its variants are\n+//!   exported as well.\n //! * [`std::string`]::{[`String`], [`ToString`]}, heap allocated strings.\n-//! * [`std::vec`]::[`Vec`](../vec/struct.Vec.html), a growable, heap-allocated\n+//! * [`std::vec`]::[`Vec`], a growable, heap-allocated\n //!   vector.\n //!\n-//! [`AsMut`]: ../convert/trait.AsMut.html\n-//! [`AsRef`]: ../convert/trait.AsRef.html\n-//! [`Box`]: ../boxed/struct.Box.html\n-//! [`Clone`]: ../clone/trait.Clone.html\n-//! [`Copy`]: ../marker/trait.Copy.html\n-//! [`Default`]: ../default/trait.Default.html\n-//! [`DoubleEndedIterator`]: ../iter/trait.DoubleEndedIterator.html\n-//! [`Drop`]: ../ops/trait.Drop.html\n-//! [`Eq`]: ../cmp/trait.Eq.html\n-//! [`ExactSizeIterator`]: ../iter/trait.ExactSizeIterator.html\n-//! [`Extend`]: ../iter/trait.Extend.html\n-//! [`FnMut`]: ../ops/trait.FnMut.html\n-//! [`FnOnce`]: ../ops/trait.FnOnce.html\n-//! [`Fn`]: ../ops/trait.Fn.html\n-//! [`From`]: ../convert/trait.From.html\n-//! [`IntoIterator`]: ../iter/trait.IntoIterator.html\n-//! [`Into`]: ../convert/trait.Into.html\n-//! [`Iterator`]: ../iter/trait.Iterator.html\n-//! [`Option`]: ../option/enum.Option.html\n-//! [`Ord`]: ../cmp/trait.Ord.html\n-//! [`PartialEq`]: ../cmp/trait.PartialEq.html\n-//! [`PartialOrd`]: ../cmp/trait.PartialOrd.html\n-//! [`Result`]: ../result/enum.Result.html\n-//! [`Send`]: ../marker/trait.Send.html\n-//! [`Sized`]: ../marker/trait.Sized.html\n-//! [`SliceConcatExt`]: ../slice/trait.SliceConcatExt.html\n-//! [`String`]: ../string/struct.String.html\n-//! [`Sync`]: ../marker/trait.Sync.html\n-//! [`ToOwned`]: ../borrow/trait.ToOwned.html\n-//! [`ToString`]: ../string/trait.ToString.html\n-//! [`Unpin`]: ../marker/trait.Unpin.html\n-//! [`Vec`]: ../vec/struct.Vec.html\n-//! [`Clone::clone`]: ../clone/trait.Clone.html#tymethod.clone\n-//! [`mem::drop`]: ../mem/fn.drop.html\n-//! [`std::borrow`]: ../borrow/index.html\n-//! [`std::boxed`]: ../boxed/index.html\n-//! [`std::clone`]: ../clone/index.html\n-//! [`std::cmp`]: ../cmp/index.html\n-//! [`std::convert`]: ../convert/index.html\n-//! [`std::default`]: ../default/index.html\n-//! [`std::iter`]: ../iter/index.html\n-//! [`std::marker`]: ../marker/index.html\n-//! [`std::mem`]: ../mem/index.html\n-//! [`std::ops`]: ../ops/index.html\n-//! [`std::option`]: ../option/index.html\n-//! [`std::prelude::v1`]: v1/index.html\n-//! [`std::result`]: ../result/index.html\n-//! [`std::slice`]: ../slice/index.html\n-//! [`std::string`]: ../string/index.html\n+//! [`mem::drop`]: crate::mem::drop\n+//! [`std::borrow`]: crate::borrow\n+//! [`std::boxed`]: crate::boxed\n+//! [`std::clone`]: crate::clone\n+//! [`std::cmp`]: crate::cmp\n+//! [`std::convert`]: crate::convert\n+//! [`std::default`]: crate::default\n+//! [`std::iter`]: crate::iter\n+//! [`std::marker`]: crate::marker\n+//! [`std::mem`]: crate::mem\n+//! [`std::ops`]: crate::ops\n+//! [`std::option`]: crate::option\n+//! [`std::prelude::v1`]: v1\n+//! [`std::result`]: crate::result\n+//! [`std::slice`]: crate::slice\n+//! [`std::string`]: crate::string\n //! [`std::vec`]: ../vec/index.html\n-//! [`to_owned`]: ../borrow/trait.ToOwned.html#tymethod.to_owned\n+//! [`to_owned`]: crate::borrow::ToOwned::to_owned\n //! [book-closures]: ../../book/ch13-01-closures.html\n //! [book-dtor]: ../../book/ch15-03-drop.html\n //! [book-enums]: ../../book/ch06-01-defining-an-enum.html"}]}