{"sha": "9fc8394d3bce22ab483f98842434c84c396212ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmYzgzOTRkM2JjZTIyYWI0ODNmOTg4NDI0MzRjODRjMzk2MjEyYWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-17T08:01:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-17T08:01:21Z"}, "message": "auto merge of #15668 : steveklabnik/rust/tree_set_example, r=alexcrichton\n\nSomeone asked for an example usage of this on IRC, so I tossed together the simplest one. Obviously, this isn't up to snuff, but it's better than nothing.", "tree": {"sha": "c062a3ca97cc33668c34019d513c3d0c17f37a54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c062a3ca97cc33668c34019d513c3d0c17f37a54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fc8394d3bce22ab483f98842434c84c396212ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fc8394d3bce22ab483f98842434c84c396212ae", "html_url": "https://github.com/rust-lang/rust/commit/9fc8394d3bce22ab483f98842434c84c396212ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fc8394d3bce22ab483f98842434c84c396212ae/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32cb44bfff3facbded5fd9cc74af3f02e81565a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/32cb44bfff3facbded5fd9cc74af3f02e81565a8", "html_url": "https://github.com/rust-lang/rust/commit/32cb44bfff3facbded5fd9cc74af3f02e81565a8"}, {"sha": "ace3a77f7407690f725ee50f3f42f26a95ed6835", "url": "https://api.github.com/repos/rust-lang/rust/commits/ace3a77f7407690f725ee50f3f42f26a95ed6835", "html_url": "https://github.com/rust-lang/rust/commit/ace3a77f7407690f725ee50f3f42f26a95ed6835"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "c2211d08bfab7a6f1c74c9f2c4476147e76011d2", "filename": "src/libcollections/treemap.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/9fc8394d3bce22ab483f98842434c84c396212ae/src%2Flibcollections%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fc8394d3bce22ab483f98842434c84c396212ae/src%2Flibcollections%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftreemap.rs?ref=9fc8394d3bce22ab483f98842434c84c396212ae", "patch": "@@ -11,6 +11,22 @@\n //! An ordered map and set implemented as self-balancing binary search\n //! trees. The only requirement for the types is that the key implements\n //! `Ord`.\n+//!\n+//! ## Example\n+//!\n+//! ```{rust}\n+//! use std::collections::TreeSet;\n+//!\n+//! let mut tree_set = TreeSet::new();\n+//!\n+//! tree_set.insert(2i);\n+//! tree_set.insert(1i);\n+//! tree_set.insert(3i);\n+//!\n+//! for i in tree_set.iter() {\n+//!    println!(\"{}\", i) // prints 1, then 2, then 3\n+//! }\n+//! ```\n \n use core::prelude::*;\n \n@@ -587,6 +603,22 @@ impl<'a, T> Iterator<&'a T> for RevSetItems<'a, T> {\n /// A implementation of the `Set` trait on top of the `TreeMap` container. The\n /// only requirement is that the type of the elements contained ascribes to the\n /// `Ord` trait.\n+///\n+/// ## Example\n+///\n+/// ```{rust}\n+/// use std::collections::TreeSet;\n+///\n+/// let mut tree_set = TreeSet::new();\n+///\n+/// tree_set.insert(2i);\n+/// tree_set.insert(1i);\n+/// tree_set.insert(3i);\n+///\n+/// for i in tree_set.iter() {\n+///    println!(\"{}\", i) // prints 1, then 2, then 3\n+/// }\n+/// ```\n #[deriving(Clone)]\n pub struct TreeSet<T> {\n     map: TreeMap<T, ()>"}]}