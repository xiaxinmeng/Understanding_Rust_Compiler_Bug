{"sha": "f2902494614643509685c3bf974287ac9844b2fd", "node_id": "C_kwDOAAsO6NoAKGYyOTAyNDk0NjE0NjQzNTA5Njg1YzNiZjk3NDI4N2FjOTg0NGIyZmQ", "commit": {"author": {"name": "goth-turtle", "email": "93494392+goth-turtle@users.noreply.github.com", "date": "2022-04-23T20:20:50Z"}, "committer": {"name": "goth-turtle", "email": "93494392+goth-turtle@users.noreply.github.com", "date": "2022-04-24T13:28:36Z"}, "message": "mistyped_literal_suffixes: improve suggestions for integer types\n\nInstead of just always suggesting signed suffixes regardless of size\nof the value, it now suggests an unsigned suffix when the value wouldn't\nfit into the corresponding signed type, and ignores the literal entirely\nif it is too big for the unsigned type as well.", "tree": {"sha": "5a4d310f5f675276759ace66699c02d0383182c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a4d310f5f675276759ace66699c02d0383182c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2902494614643509685c3bf974287ac9844b2fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2902494614643509685c3bf974287ac9844b2fd", "html_url": "https://github.com/rust-lang/rust/commit/f2902494614643509685c3bf974287ac9844b2fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2902494614643509685c3bf974287ac9844b2fd/comments", "author": {"login": "goth-turtle", "id": 93494392, "node_id": "U_kgDOBZKceA", "avatar_url": "https://avatars.githubusercontent.com/u/93494392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goth-turtle", "html_url": "https://github.com/goth-turtle", "followers_url": "https://api.github.com/users/goth-turtle/followers", "following_url": "https://api.github.com/users/goth-turtle/following{/other_user}", "gists_url": "https://api.github.com/users/goth-turtle/gists{/gist_id}", "starred_url": "https://api.github.com/users/goth-turtle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goth-turtle/subscriptions", "organizations_url": "https://api.github.com/users/goth-turtle/orgs", "repos_url": "https://api.github.com/users/goth-turtle/repos", "events_url": "https://api.github.com/users/goth-turtle/events{/privacy}", "received_events_url": "https://api.github.com/users/goth-turtle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "goth-turtle", "id": 93494392, "node_id": "U_kgDOBZKceA", "avatar_url": "https://avatars.githubusercontent.com/u/93494392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goth-turtle", "html_url": "https://github.com/goth-turtle", "followers_url": "https://api.github.com/users/goth-turtle/followers", "following_url": "https://api.github.com/users/goth-turtle/following{/other_user}", "gists_url": "https://api.github.com/users/goth-turtle/gists{/gist_id}", "starred_url": "https://api.github.com/users/goth-turtle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goth-turtle/subscriptions", "organizations_url": "https://api.github.com/users/goth-turtle/orgs", "repos_url": "https://api.github.com/users/goth-turtle/repos", "events_url": "https://api.github.com/users/goth-turtle/events{/privacy}", "received_events_url": "https://api.github.com/users/goth-turtle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cef882cc9dfae7980a1712609f8d00bfaf78062c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cef882cc9dfae7980a1712609f8d00bfaf78062c", "html_url": "https://github.com/rust-lang/rust/commit/cef882cc9dfae7980a1712609f8d00bfaf78062c"}], "stats": {"total": 128, "additions": 101, "deletions": 27}, "files": [{"sha": "362d45991bb5406ad1d8f4a7eb035268a3a1e72c", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 37, "deletions": 13, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/f2902494614643509685c3bf974287ac9844b2fd/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2902494614643509685c3bf974287ac9844b2fd/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=f2902494614643509685c3bf974287ac9844b2fd", "patch": "@@ -42,17 +42,12 @@ declare_clippy_lint! {\n     /// This is most probably a typo\n     ///\n     /// ### Known problems\n-    /// - Recommends a signed suffix, even though the number might be too big and an unsigned\n-    ///   suffix is required\n+    /// - Does not match on integers too large to fit in the corresponding unsigned type\n     /// - Does not match on `_127` since that is a valid grouping for decimal and octal numbers\n     ///\n     /// ### Example\n-    /// ```rust\n-    /// // Probably mistyped\n-    /// 2_32;\n-    ///\n-    /// // Good\n-    /// 2_i32;\n+    /// `2_32` => `2_i32`\n+    /// `250_8 => `250_u8`\n     /// ```\n     #[clippy::version = \"1.30.0\"]\n     pub MISTYPED_LITERAL_SUFFIXES,\n@@ -310,18 +305,47 @@ impl LiteralDigitGrouping {\n             return true;\n         }\n \n-        let (part, mistyped_suffixes, missing_char) = if let Some((_, exponent)) = &mut num_lit.exponent {\n-            (exponent, &[\"32\", \"64\"][..], 'f')\n+        let (part, mistyped_suffixes, is_float) = if let Some((_, exponent)) = &mut num_lit.exponent {\n+            (exponent, &[\"32\", \"64\"][..], true)\n         } else if num_lit.fraction.is_some() {\n-            (&mut num_lit.integer, &[\"32\", \"64\"][..], 'f')\n+            (&mut num_lit.integer, &[\"32\", \"64\"][..], true)\n         } else {\n-            (&mut num_lit.integer, &[\"8\", \"16\", \"32\", \"64\"][..], 'i')\n+            (&mut num_lit.integer, &[\"8\", \"16\", \"32\", \"64\"][..], false)\n         };\n \n         let mut split = part.rsplit('_');\n         let last_group = split.next().expect(\"At least one group\");\n         if split.next().is_some() && mistyped_suffixes.contains(&last_group) {\n-            *part = &part[..part.len() - last_group.len()];\n+            let main_part = &part[..part.len() - last_group.len()];\n+            let missing_char;\n+            if is_float {\n+                missing_char = 'f';\n+            } else {\n+                let radix = match num_lit.radix {\n+                    Radix::Binary => 2,\n+                    Radix::Octal => 8,\n+                    Radix::Decimal => 10,\n+                    Radix::Hexadecimal => 16,\n+                };\n+                if let Ok(int) = u64::from_str_radix(&main_part.replace('_', \"\"), radix) {\n+                    missing_char = match (last_group, int) {\n+                        (\"8\", i) if i8::try_from(i).is_ok() => 'i',\n+                        (\"16\", i) if i16::try_from(i).is_ok() => 'i',\n+                        (\"32\", i) if i32::try_from(i).is_ok() => 'i',\n+                        (\"64\", i) if i64::try_from(i).is_ok() => 'i',\n+                        (\"8\", u) if u8::try_from(u).is_ok() => 'u',\n+                        (\"16\", u) if u16::try_from(u).is_ok() => 'u',\n+                        (\"32\", u) if u32::try_from(u).is_ok() => 'u',\n+                        (\"64\", _) => 'u',\n+                        _ => {\n+                            return true;\n+                        },\n+                    }\n+                } else {\n+                    return true;\n+                }\n+            }\n+            *part = main_part;\n             let mut sugg = num_lit.format();\n             sugg.push('_');\n             sugg.push(missing_char);"}, {"sha": "a59384e0725d7af5086323c37ba17d2814b38211", "filename": "tests/ui/mistyped_literal_suffix.fixed", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f2902494614643509685c3bf974287ac9844b2fd/tests%2Fui%2Fmistyped_literal_suffix.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f2902494614643509685c3bf974287ac9844b2fd/tests%2Fui%2Fmistyped_literal_suffix.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmistyped_literal_suffix.fixed?ref=f2902494614643509685c3bf974287ac9844b2fd", "patch": "@@ -5,7 +5,8 @@\n     unused_variables,\n     overflowing_literals,\n     clippy::excessive_precision,\n-    clippy::inconsistent_digit_grouping\n+    clippy::inconsistent_digit_grouping,\n+    clippy::unusual_byte_groupings\n )]\n \n fn main() {\n@@ -25,5 +26,14 @@ fn main() {\n     let fail28 = 241_251_235E723_f64;\n     let ok29 = 42279.911_32;\n \n+    // testing that the suggestion actually fits in its type\n+    let fail30 = 127_i8; // should be i8\n+    let fail31 = 240_u8; // should be u8\n+    let ok32 = 360_8; // doesnt fit in either, should be ignored\n+    let fail33 = 0x1234_i16;\n+    let fail34 = 0xABCD_u16;\n+    let ok35 = 0x12345_16;\n+    let fail36 = 0xFFFF_FFFF_FFFF_FFFF_u64; // u64\n+\n     let _ = 1.123_45E1_f32;\n }"}, {"sha": "01e425f9f1d7bf413c660a0de94ccebc774ab242", "filename": "tests/ui/mistyped_literal_suffix.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f2902494614643509685c3bf974287ac9844b2fd/tests%2Fui%2Fmistyped_literal_suffix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2902494614643509685c3bf974287ac9844b2fd/tests%2Fui%2Fmistyped_literal_suffix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmistyped_literal_suffix.rs?ref=f2902494614643509685c3bf974287ac9844b2fd", "patch": "@@ -5,7 +5,8 @@\n     unused_variables,\n     overflowing_literals,\n     clippy::excessive_precision,\n-    clippy::inconsistent_digit_grouping\n+    clippy::inconsistent_digit_grouping,\n+    clippy::unusual_byte_groupings\n )]\n \n fn main() {\n@@ -25,5 +26,14 @@ fn main() {\n     let fail28 = 241251235E723_64;\n     let ok29 = 42279.911_32;\n \n+    // testing that the suggestion actually fits in its type\n+    let fail30 = 127_8; // should be i8\n+    let fail31 = 240_8; // should be u8\n+    let ok32 = 360_8; // doesnt fit in either, should be ignored\n+    let fail33 = 0x1234_16;\n+    let fail34 = 0xABCD_16;\n+    let ok35 = 0x12345_16;\n+    let fail36 = 0xFFFF_FFFF_FFFF_FFFF_64; // u64\n+\n     let _ = 1.12345E1_32;\n }"}, {"sha": "6fcd1f2f180505274def9c7c61a8141014994554", "filename": "tests/ui/mistyped_literal_suffix.stderr", "status": "modified", "additions": 42, "deletions": 12, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/f2902494614643509685c3bf974287ac9844b2fd/tests%2Fui%2Fmistyped_literal_suffix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f2902494614643509685c3bf974287ac9844b2fd/tests%2Fui%2Fmistyped_literal_suffix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmistyped_literal_suffix.stderr?ref=f2902494614643509685c3bf974287ac9844b2fd", "patch": "@@ -1,70 +1,100 @@\n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:12:18\n+  --> $DIR/mistyped_literal_suffix.rs:13:18\n    |\n LL |     let fail14 = 2_32;\n    |                  ^^^^ help: did you mean to write: `2_i32`\n    |\n    = note: `#[deny(clippy::mistyped_literal_suffixes)]` on by default\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:13:18\n+  --> $DIR/mistyped_literal_suffix.rs:14:18\n    |\n LL |     let fail15 = 4_64;\n    |                  ^^^^ help: did you mean to write: `4_i64`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:14:18\n+  --> $DIR/mistyped_literal_suffix.rs:15:18\n    |\n LL |     let fail16 = 7_8; //\n    |                  ^^^ help: did you mean to write: `7_i8`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:15:18\n+  --> $DIR/mistyped_literal_suffix.rs:16:18\n    |\n LL |     let fail17 = 23_16; //\n    |                  ^^^^^ help: did you mean to write: `23_i16`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:18:18\n+  --> $DIR/mistyped_literal_suffix.rs:19:18\n    |\n LL |     let fail20 = 2__8; //\n    |                  ^^^^ help: did you mean to write: `2_i8`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:19:18\n+  --> $DIR/mistyped_literal_suffix.rs:20:18\n    |\n LL |     let fail21 = 4___16; //\n    |                  ^^^^^^ help: did you mean to write: `4_i16`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:22:18\n+  --> $DIR/mistyped_literal_suffix.rs:23:18\n    |\n LL |     let fail25 = 1E2_32;\n    |                  ^^^^^^ help: did you mean to write: `1E2_f32`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:23:18\n+  --> $DIR/mistyped_literal_suffix.rs:24:18\n    |\n LL |     let fail26 = 43E7_64;\n    |                  ^^^^^^^ help: did you mean to write: `43E7_f64`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:24:18\n+  --> $DIR/mistyped_literal_suffix.rs:25:18\n    |\n LL |     let fail27 = 243E17_32;\n    |                  ^^^^^^^^^ help: did you mean to write: `243E17_f32`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:25:18\n+  --> $DIR/mistyped_literal_suffix.rs:26:18\n    |\n LL |     let fail28 = 241251235E723_64;\n    |                  ^^^^^^^^^^^^^^^^ help: did you mean to write: `241_251_235E723_f64`\n \n error: mistyped literal suffix\n-  --> $DIR/mistyped_literal_suffix.rs:28:13\n+  --> $DIR/mistyped_literal_suffix.rs:30:18\n+   |\n+LL |     let fail30 = 127_8; // should be i8\n+   |                  ^^^^^ help: did you mean to write: `127_i8`\n+\n+error: mistyped literal suffix\n+  --> $DIR/mistyped_literal_suffix.rs:31:18\n+   |\n+LL |     let fail31 = 240_8; // should be u8\n+   |                  ^^^^^ help: did you mean to write: `240_u8`\n+\n+error: mistyped literal suffix\n+  --> $DIR/mistyped_literal_suffix.rs:33:18\n+   |\n+LL |     let fail33 = 0x1234_16;\n+   |                  ^^^^^^^^^ help: did you mean to write: `0x1234_i16`\n+\n+error: mistyped literal suffix\n+  --> $DIR/mistyped_literal_suffix.rs:34:18\n+   |\n+LL |     let fail34 = 0xABCD_16;\n+   |                  ^^^^^^^^^ help: did you mean to write: `0xABCD_u16`\n+\n+error: mistyped literal suffix\n+  --> $DIR/mistyped_literal_suffix.rs:36:18\n+   |\n+LL |     let fail36 = 0xFFFF_FFFF_FFFF_FFFF_64; // u64\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: did you mean to write: `0xFFFF_FFFF_FFFF_FFFF_u64`\n+\n+error: mistyped literal suffix\n+  --> $DIR/mistyped_literal_suffix.rs:38:13\n    |\n LL |     let _ = 1.12345E1_32;\n    |             ^^^^^^^^^^^^ help: did you mean to write: `1.123_45E1_f32`\n \n-error: aborting due to 11 previous errors\n+error: aborting due to 16 previous errors\n "}]}