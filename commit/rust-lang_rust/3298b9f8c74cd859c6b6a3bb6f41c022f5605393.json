{"sha": "3298b9f8c74cd859c6b6a3bb6f41c022f5605393", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyOThiOWY4Yzc0Y2Q4NTljNmI2YTNiYjZmNDFjMDIyZjU2MDUzOTM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-07-25T01:44:34Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-07-25T01:44:34Z"}, "message": "Fix unittest", "tree": {"sha": "85342eccd4d79057ba65547ea32ee29d78ad384c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85342eccd4d79057ba65547ea32ee29d78ad384c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3298b9f8c74cd859c6b6a3bb6f41c022f5605393", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3298b9f8c74cd859c6b6a3bb6f41c022f5605393", "html_url": "https://github.com/rust-lang/rust/commit/3298b9f8c74cd859c6b6a3bb6f41c022f5605393", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3298b9f8c74cd859c6b6a3bb6f41c022f5605393/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d8aa5989c3ecbcee9da63fdcf4564f71ac328fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d8aa5989c3ecbcee9da63fdcf4564f71ac328fc", "html_url": "https://github.com/rust-lang/rust/commit/4d8aa5989c3ecbcee9da63fdcf4564f71ac328fc"}], "stats": {"total": 50, "additions": 26, "deletions": 24}, "files": [{"sha": "136aedeb71d0662b33cfe9524cab2df92d555ff6", "filename": "src/libsyntax_ext/format_foreign.rs", "status": "modified", "additions": 26, "deletions": 24, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/3298b9f8c74cd859c6b6a3bb6f41c022f5605393/src%2Flibsyntax_ext%2Fformat_foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3298b9f8c74cd859c6b6a3bb6f41c022f5605393/src%2Flibsyntax_ext%2Fformat_foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat_foreign.rs?ref=3298b9f8c74cd859c6b6a3bb6f41c022f5605393", "patch": "@@ -649,6 +649,7 @@ pub mod printf {\n                 ($in_:expr, {\n                     $param:expr, $flags:expr,\n                     $width:expr, $prec:expr, $len:expr, $type_:expr,\n+                    $pos:expr,\n                 }) => {\n                     assert_eq!(\n                         pns(concat!($in_, \"!\")),\n@@ -661,6 +662,7 @@ pub mod printf {\n                                 precision: $prec,\n                                 length: $len,\n                                 type_: $type_,\n+                                position: $pos,\n                             }),\n                             \"!\"\n                         ))\n@@ -669,53 +671,53 @@ pub mod printf {\n             }\n \n             assert_pns_eq_sub!(\"%!\",\n-                { None, \"\", None, None, None, \"!\", });\n+                { None, \"\", None, None, None, \"!\", (0, 2), });\n             assert_pns_eq_sub!(\"%c\",\n-                { None, \"\", None, None, None, \"c\", });\n+                { None, \"\", None, None, None, \"c\", (0, 2), });\n             assert_pns_eq_sub!(\"%s\",\n-                { None, \"\", None, None, None, \"s\", });\n+                { None, \"\", None, None, None, \"s\", (0, 2), });\n             assert_pns_eq_sub!(\"%06d\",\n-                { None, \"0\", Some(N::Num(6)), None, None, \"d\", });\n+                { None, \"0\", Some(N::Num(6)), None, None, \"d\", (0, 4), });\n             assert_pns_eq_sub!(\"%4.2f\",\n-                { None, \"\", Some(N::Num(4)), Some(N::Num(2)), None, \"f\", });\n+                { None, \"\", Some(N::Num(4)), Some(N::Num(2)), None, \"f\", (0, 5), });\n             assert_pns_eq_sub!(\"%#x\",\n-                { None, \"#\", None, None, None, \"x\", });\n+                { None, \"#\", None, None, None, \"x\", (0, 3), });\n             assert_pns_eq_sub!(\"%-10s\",\n-                { None, \"-\", Some(N::Num(10)), None, None, \"s\", });\n+                { None, \"-\", Some(N::Num(10)), None, None, \"s\", (0, 5), });\n             assert_pns_eq_sub!(\"%*s\",\n-                { None, \"\", Some(N::Next), None, None, \"s\", });\n+                { None, \"\", Some(N::Next), None, None, \"s\", (0, 3), });\n             assert_pns_eq_sub!(\"%-10.*s\",\n-                { None, \"-\", Some(N::Num(10)), Some(N::Next), None, \"s\", });\n+                { None, \"-\", Some(N::Num(10)), Some(N::Next), None, \"s\", (0, 7), });\n             assert_pns_eq_sub!(\"%-*.*s\",\n-                { None, \"-\", Some(N::Next), Some(N::Next), None, \"s\", });\n+                { None, \"-\", Some(N::Next), Some(N::Next), None, \"s\", (0, 6), });\n             assert_pns_eq_sub!(\"%.6i\",\n-                { None, \"\", None, Some(N::Num(6)), None, \"i\", });\n+                { None, \"\", None, Some(N::Num(6)), None, \"i\", (0, 4), });\n             assert_pns_eq_sub!(\"%+i\",\n-                { None, \"+\", None, None, None, \"i\", });\n+                { None, \"+\", None, None, None, \"i\", (0, 3), });\n             assert_pns_eq_sub!(\"%08X\",\n-                { None, \"0\", Some(N::Num(8)), None, None, \"X\", });\n+                { None, \"0\", Some(N::Num(8)), None, None, \"X\", (0, 4), });\n             assert_pns_eq_sub!(\"%lu\",\n-                { None, \"\", None, None, Some(\"l\"), \"u\", });\n+                { None, \"\", None, None, Some(\"l\"), \"u\", (0, 3), });\n             assert_pns_eq_sub!(\"%Iu\",\n-                { None, \"\", None, None, Some(\"I\"), \"u\", });\n+                { None, \"\", None, None, Some(\"I\"), \"u\", (0, 3), });\n             assert_pns_eq_sub!(\"%I32u\",\n-                { None, \"\", None, None, Some(\"I32\"), \"u\", });\n+                { None, \"\", None, None, Some(\"I32\"), \"u\", (0, 5), });\n             assert_pns_eq_sub!(\"%I64u\",\n-                { None, \"\", None, None, Some(\"I64\"), \"u\", });\n+                { None, \"\", None, None, Some(\"I64\"), \"u\", (0, 5), });\n             assert_pns_eq_sub!(\"%'d\",\n-                { None, \"'\", None, None, None, \"d\", });\n+                { None, \"'\", None, None, None, \"d\", (0, 3), });\n             assert_pns_eq_sub!(\"%10s\",\n-                { None, \"\", Some(N::Num(10)), None, None, \"s\", });\n+                { None, \"\", Some(N::Num(10)), None, None, \"s\", (0, 4), });\n             assert_pns_eq_sub!(\"%-10.10s\",\n-                { None, \"-\", Some(N::Num(10)), Some(N::Num(10)), None, \"s\", });\n+                { None, \"-\", Some(N::Num(10)), Some(N::Num(10)), None, \"s\", (0, 8), });\n             assert_pns_eq_sub!(\"%1$d\",\n-                { Some(1), \"\", None, None, None, \"d\", });\n+                { Some(1), \"\", None, None, None, \"d\", (0, 4), });\n             assert_pns_eq_sub!(\"%2$.*3$d\",\n-                { Some(2), \"\", None, Some(N::Arg(3)), None, \"d\", });\n+                { Some(2), \"\", None, Some(N::Arg(3)), None, \"d\", (0, 8), });\n             assert_pns_eq_sub!(\"%1$*2$.*3$d\",\n-                { Some(1), \"\", Some(N::Arg(2)), Some(N::Arg(3)), None, \"d\", });\n+                { Some(1), \"\", Some(N::Arg(2)), Some(N::Arg(3)), None, \"d\", (0, 11), });\n             assert_pns_eq_sub!(\"%-8ld\",\n-                { None, \"-\", Some(N::Num(8)), None, Some(\"l\"), \"d\", });\n+                { None, \"-\", Some(N::Num(8)), None, Some(\"l\"), \"d\", (0, 5), });\n         }\n \n         #[test]"}]}