{"sha": "7b2020f2c3f51de0dd4dcfe4a107673eda6f25e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMjAyMGYyYzNmNTFkZTBkZDRkY2ZlNGExMDc2NzNlZGE2ZjI1ZTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-07T07:18:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-07T07:18:37Z"}, "message": "auto merge of #6245 : youknowone/rust/match-range-static, r=graydon\n\nFix unintended error problem of:\r\n````\r\nstatic s: int = 1;\r\nstatic e: int = 42;\r\n\r\nfn main() {\r\n    match 7 {\r\n        s..e => (),\r\n         ^~                 error: expected `=>` but found `..`\r\n        _ => (),\r\n    }\r\n}\r\n````", "tree": {"sha": "75adf0b0609e8c8185568cd151b6b1ef3a745f74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75adf0b0609e8c8185568cd151b6b1ef3a745f74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b2020f2c3f51de0dd4dcfe4a107673eda6f25e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b2020f2c3f51de0dd4dcfe4a107673eda6f25e7", "html_url": "https://github.com/rust-lang/rust/commit/7b2020f2c3f51de0dd4dcfe4a107673eda6f25e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b2020f2c3f51de0dd4dcfe4a107673eda6f25e7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3225870191f7e6b601d70fa5aa08617eb04b170b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3225870191f7e6b601d70fa5aa08617eb04b170b", "html_url": "https://github.com/rust-lang/rust/commit/3225870191f7e6b601d70fa5aa08617eb04b170b"}, {"sha": "cb918e1a831782d6072a0b93dd57614cb9c2d961", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb918e1a831782d6072a0b93dd57614cb9c2d961", "html_url": "https://github.com/rust-lang/rust/commit/cb918e1a831782d6072a0b93dd57614cb9c2d961"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "810efd3917765b8fc355bd7fa60619a23b354c8d", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7b2020f2c3f51de0dd4dcfe4a107673eda6f25e7/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2020f2c3f51de0dd4dcfe4a107673eda6f25e7/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=7b2020f2c3f51de0dd4dcfe4a107673eda6f25e7", "patch": "@@ -2383,7 +2383,13 @@ pub impl Parser {\n                         can_be_enum_or_struct = false\n                 }\n \n-                if is_plain_ident(&*self.token) && !can_be_enum_or_struct {\n+                if self.look_ahead(1) == token::DOTDOT {\n+                    let start = self.parse_expr_res(RESTRICT_NO_BAR_OP);\n+                    self.eat(&token::DOTDOT);\n+                    let end = self.parse_expr_res(RESTRICT_NO_BAR_OP);\n+                    pat = pat_range(start, end);\n+                }\n+                else if is_plain_ident(&*self.token) && !can_be_enum_or_struct {\n                     let name = self.parse_path_without_tps();\n                     let sub;\n                     if self.eat(&token::AT) {\n@@ -2392,7 +2398,7 @@ pub impl Parser {\n                     } else {\n                         // or just foo\n                         sub = None;\n-                    };\n+                    }\n                     pat = pat_ident(binding_mode, name, sub);\n                 } else {\n                     // parse an enum pat"}, {"sha": "3eefc386250ed3e8d44ecceae39ab98d19a4e52b", "filename": "src/test/run-pass/match-range-static.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7b2020f2c3f51de0dd4dcfe4a107673eda6f25e7/src%2Ftest%2Frun-pass%2Fmatch-range-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2020f2c3f51de0dd4dcfe4a107673eda6f25e7/src%2Ftest%2Frun-pass%2Fmatch-range-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-range-static.rs?ref=7b2020f2c3f51de0dd4dcfe4a107673eda6f25e7", "patch": "@@ -0,0 +1,10 @@\n+static s: int = 1;\n+static e: int = 42;\n+\n+fn main() {\n+    match 7 {\n+        s..e => (),\n+        _ => (),\n+    }\n+}\n+"}]}