{"sha": "a9dbb7908dd851dff81f613452518db3ba04887c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5ZGJiNzkwOGRkODUxZGZmODFmNjEzNDUyNTE4ZGIzYmEwNDg4N2M=", "commit": {"author": {"name": "jbranchaud", "email": "jbranchaud@gmail.com", "date": "2014-12-15T22:40:27Z"}, "committer": {"name": "jbranchaud", "email": "jbranchaud@gmail.com", "date": "2014-12-15T22:40:27Z"}, "message": "Add a doctest for the string Add function.", "tree": {"sha": "0d0db3f453bb58989b534394a43fe2ed334097f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d0db3f453bb58989b534394a43fe2ed334097f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9dbb7908dd851dff81f613452518db3ba04887c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9dbb7908dd851dff81f613452518db3ba04887c", "html_url": "https://github.com/rust-lang/rust/commit/a9dbb7908dd851dff81f613452518db3ba04887c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9dbb7908dd851dff81f613452518db3ba04887c/comments", "author": {"login": "jbranchaud", "id": 694063, "node_id": "MDQ6VXNlcjY5NDA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbranchaud", "html_url": "https://github.com/jbranchaud", "followers_url": "https://api.github.com/users/jbranchaud/followers", "following_url": "https://api.github.com/users/jbranchaud/following{/other_user}", "gists_url": "https://api.github.com/users/jbranchaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbranchaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbranchaud/subscriptions", "organizations_url": "https://api.github.com/users/jbranchaud/orgs", "repos_url": "https://api.github.com/users/jbranchaud/repos", "events_url": "https://api.github.com/users/jbranchaud/events{/privacy}", "received_events_url": "https://api.github.com/users/jbranchaud/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbranchaud", "id": 694063, "node_id": "MDQ6VXNlcjY5NDA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbranchaud", "html_url": "https://github.com/jbranchaud", "followers_url": "https://api.github.com/users/jbranchaud/followers", "following_url": "https://api.github.com/users/jbranchaud/following{/other_user}", "gists_url": "https://api.github.com/users/jbranchaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbranchaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbranchaud/subscriptions", "organizations_url": "https://api.github.com/users/jbranchaud/orgs", "repos_url": "https://api.github.com/users/jbranchaud/repos", "events_url": "https://api.github.com/users/jbranchaud/events{/privacy}", "received_events_url": "https://api.github.com/users/jbranchaud/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92e9e70d15bcf8d29890bf93793be402ad629229", "url": "https://api.github.com/repos/rust-lang/rust/commits/92e9e70d15bcf8d29890bf93793be402ad629229", "html_url": "https://github.com/rust-lang/rust/commit/92e9e70d15bcf8d29890bf93793be402ad629229"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "3dd24fc33ae517ca3742e1666c4703a59d11d7a1", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a9dbb7908dd851dff81f613452518db3ba04887c/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9dbb7908dd851dff81f613452518db3ba04887c/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=a9dbb7908dd851dff81f613452518db3ba04887c", "patch": "@@ -857,6 +857,16 @@ impl<'a, S: Str> Equiv<S> for String {\n \n #[experimental = \"waiting on Add stabilization\"]\n impl<S: Str> Add<S, String> for String {\n+    /// Concatenates `self` and `other` as a new mutable `String`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// let string1 = \"foo\".to_string();\n+    /// let string2 = \"bar\".to_string();\n+    /// let string3 = string1 + string2;\n+    /// assert_eq!(string3, \"foobar\".to_string());\n+    /// ```\n     fn add(&self, other: &S) -> String {\n         let mut s = String::from_str(self.as_slice());\n         s.push_str(other.as_slice());"}]}