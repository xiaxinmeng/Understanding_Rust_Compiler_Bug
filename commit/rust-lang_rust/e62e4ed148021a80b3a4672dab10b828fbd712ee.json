{"sha": "e62e4ed148021a80b3a4672dab10b828fbd712ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MmU0ZWQxNDgwMjFhODBiM2E0NjcyZGFiMTBiODI4ZmJkNzEyZWU=", "commit": {"author": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2020-12-30T16:14:35Z"}, "committer": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2021-01-23T07:40:25Z"}, "message": "Address review comments", "tree": {"sha": "e515a5438c3cbe29f755363ee83e23a651666e1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e515a5438c3cbe29f755363ee83e23a651666e1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e62e4ed148021a80b3a4672dab10b828fbd712ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e62e4ed148021a80b3a4672dab10b828fbd712ee", "html_url": "https://github.com/rust-lang/rust/commit/e62e4ed148021a80b3a4672dab10b828fbd712ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e62e4ed148021a80b3a4672dab10b828fbd712ee/comments", "author": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "449ced4d218f413e152785fb81d161a6389974f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/449ced4d218f413e152785fb81d161a6389974f7", "html_url": "https://github.com/rust-lang/rust/commit/449ced4d218f413e152785fb81d161a6389974f7"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "5828ea35ae4dee8794b51fa0f32ff65673bba70a", "filename": "crates/ide/src/diagnostics/fixes.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e62e4ed148021a80b3a4672dab10b828fbd712ee/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e62e4ed148021a80b3a4672dab10b828fbd712ee/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs?ref=e62e4ed148021a80b3a4672dab10b828fbd712ee", "patch": "@@ -1,6 +1,5 @@\n //! Provides a way to attach fixes to the diagnostics.\n //! The same module also has all curret custom fixes for the diagnostics implemented.\n-use ast::MethodCallExpr;\n use hir::{\n     db::AstDatabase,\n     diagnostics::{\n@@ -14,11 +13,7 @@ use ide_db::{\n     source_change::{FileSystemEdit, SourceChange},\n     RootDatabase,\n };\n-use syntax::{\n-    algo,\n-    ast::{self, edit::IndentLevel, make, ArgList},\n-    AstNode, TextRange,\n-};\n+use syntax::{AstNode, TextRange, algo, ast::{self, ArgListOwner, edit::IndentLevel, make}};\n use text_edit::TextEdit;\n \n use crate::{diagnostics::Fix, references::rename::rename_with_semantics, FilePosition};\n@@ -149,11 +144,11 @@ impl DiagnosticWithFix for ReplaceFilterMapNextWithFindMap {\n     fn fix(&self, sema: &Semantics<RootDatabase>) -> Option<Fix> {\n         let root = sema.db.parse_or_expand(self.file)?;\n         let next_expr = self.next_expr.to_node(&root);\n-        let next_call = MethodCallExpr::cast(next_expr.syntax().clone())?;\n+        let next_call = ast::MethodCallExpr::cast(next_expr.syntax().clone())?;\n \n-        let filter_map_call = MethodCallExpr::cast(next_call.receiver()?.syntax().clone())?;\n+        let filter_map_call = ast::MethodCallExpr::cast(next_call.receiver()?.syntax().clone())?;\n         let filter_map_name_range = filter_map_call.name_ref()?.ident_token()?.text_range();\n-        let filter_map_args = filter_map_call.syntax().children().find_map(ArgList::cast)?;\n+        let filter_map_args = filter_map_call.arg_list()?;\n \n         let range_to_replace =\n             TextRange::new(filter_map_name_range.start(), next_expr.syntax().text_range().end());"}]}