{"sha": "beab2e6608810ab43312f61fe226f187d017416d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYWIyZTY2MDg4MTBhYjQzMzEyZjYxZmUyMjZmMTg3ZDAxNzQxNmQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-14T15:31:04Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-14T16:15:57Z"}, "message": "Rollup merge of #48874 - jcowgill:mips-features, r=sanxiyn\n\nbump mipsel isa leval and enable fpxx\n\nThis PR:\n* Bumps the default ISA level of the mipsel targets to `mips32r2`. The big endian mips targets are already built with `mips32r2`. This is the usual baseline for the MIPS ISA these days used by other projects, although it does drop support for the 4K processor (which was the only processor released with mips32 r1). Debian no longer supports pre-R2 processors. Using R2 also improves code generation in FPXX in certain circumstances.\n* Enables the FPXX floating point ABI[1] on 32-bit hard-float targets by default. This ABI adds some extra restrictions to the existing ABI which allows code to run on the two main floating point modes found on MIPS (FR0 and FR1) and remains compatible with the FR32 ABI currently in use. All code within an executable (including all shared libraries) must be compiled with FPXX/FP64 to be able to use MSA on 32-bit MIPS.\n* Enables the \"nooddspreg\" feature with FPXX. This feature is usually enabled whenever FPXX is. It also helps workaround some issues on Loongson processors. I'm hoping this will fix some test failures mentioned in #39013.\n* Adds the `fp64` feature to the MIPS whitelist. This feature must be enabled to use MSA on 32-bit MIPS, otherwise LLVM will complain.\n\n[1] See https://dmz-portal.mips.com/wiki/MIPS_O32_ABI_-_FR0_and_FR1_Interlinking", "tree": {"sha": "968ebc8899cfd1b9af898af2099592dafce620e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/968ebc8899cfd1b9af898af2099592dafce620e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beab2e6608810ab43312f61fe226f187d017416d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqpSr4ACgkQ/vbIBR0O\nATzlShAAoTz6aSScCxlFP5AMv92Q1BpijiX0WfWmaoRm3wS35s1cHitdd0YWQ1Ec\ndv2OPXIfDpdpfgwRbjeb5mbsj/IjnN5o9sI7rG6c/r4Ne7dX37lnF+BOwdNqqQGw\npCqCH/TPhnFVMFM4u31wWSZZvEPLf6A48oJnwVU1qgPL4yMVdkDDs+NDbx/2H12X\nRLoJC6qGdjDJOJDn7hVPOb5zKWelQLHJp4EZmx0JnXOWRATw41baq7EBVv6pirMm\niMwZT6WWWs6lt8kriOZqRQGblH0IO0CWhCL13G3wwkPVB3b2f0hsuyfF45eCENf8\ngZkdMI3uWZHulgy8nkdXAdXDhK/MmTXde1g2CoQzLdZVXnq4NvNIivkNDLrU2ztY\n4xxMJ3SPbBffiiC+dZV+G0ApF85lQFCnnMJN2+NUwSY3+N2gsts/lFrNYZ6JWYs6\nA84HPB+KwndcQCRT1fHbbsuATr+004NNzQAP/b5UTGcLJo7u1HmrJV86U2Gx0LR7\nBZ43fUb3b/Q17yj7VNeNUV7mkpvAfivHeLGX6akSRs0uLjYPgoTDRbPnBC2L9rtf\nN1NYr1BuZNUZ5Q5w6N0coVIUWwvusGM7gFyBjMvtp685SPGFJafYkPJOsltLjZ2Q\ngGzdAdipzKnwnxMiN1vgB/cyDt8SuwOKAAErgvpzhUFLKibvYVc=\n=GYfw\n-----END PGP SIGNATURE-----", "payload": "tree 968ebc8899cfd1b9af898af2099592dafce620e6\nparent 508ffa3352e734d7dae0c167773cd9a02e2a22a5\nparent 0711a7a72f5828825357a4eb5db70aedb2dabef4\nauthor kennytm <kennytm@gmail.com> 1521041464 +0800\ncommitter kennytm <kennytm@gmail.com> 1521044157 +0800\n\nRollup merge of #48874 - jcowgill:mips-features, r=sanxiyn\n\nbump mipsel isa leval and enable fpxx\n\nThis PR:\n* Bumps the default ISA level of the mipsel targets to `mips32r2`. The big endian mips targets are already built with `mips32r2`. This is the usual baseline for the MIPS ISA these days used by other projects, although it does drop support for the 4K processor (which was the only processor released with mips32 r1). Debian no longer supports pre-R2 processors. Using R2 also improves code generation in FPXX in certain circumstances.\n* Enables the FPXX floating point ABI[1] on 32-bit hard-float targets by default. This ABI adds some extra restrictions to the existing ABI which allows code to run on the two main floating point modes found on MIPS (FR0 and FR1) and remains compatible with the FR32 ABI currently in use. All code within an executable (including all shared libraries) must be compiled with FPXX/FP64 to be able to use MSA on 32-bit MIPS.\n* Enables the \"nooddspreg\" feature with FPXX. This feature is usually enabled whenever FPXX is. It also helps workaround some issues on Loongson processors. I'm hoping this will fix some test failures mentioned in #39013.\n* Adds the `fp64` feature to the MIPS whitelist. This feature must be enabled to use MSA on 32-bit MIPS, otherwise LLVM will complain.\n\n[1] See https://dmz-portal.mips.com/wiki/MIPS_O32_ABI_-_FR0_and_FR1_Interlinking\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beab2e6608810ab43312f61fe226f187d017416d", "html_url": "https://github.com/rust-lang/rust/commit/beab2e6608810ab43312f61fe226f187d017416d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beab2e6608810ab43312f61fe226f187d017416d/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "508ffa3352e734d7dae0c167773cd9a02e2a22a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/508ffa3352e734d7dae0c167773cd9a02e2a22a5", "html_url": "https://github.com/rust-lang/rust/commit/508ffa3352e734d7dae0c167773cd9a02e2a22a5"}, {"sha": "0711a7a72f5828825357a4eb5db70aedb2dabef4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0711a7a72f5828825357a4eb5db70aedb2dabef4", "html_url": "https://github.com/rust-lang/rust/commit/0711a7a72f5828825357a4eb5db70aedb2dabef4"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "cffd1daed99f28bc7a5a0adf560d052b98cda8b3", "filename": "src/librustc_back/target/mips_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/beab2e6608810ab43312f61fe226f187d017416d/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beab2e6608810ab43312f61fe226f187d017416d/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_gnu.rs?ref=beab2e6608810ab43312f61fe226f187d017416d", "patch": "@@ -25,7 +25,7 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Gcc,\n         options: TargetOptions {\n             cpu: \"mips32r2\".to_string(),\n-            features: \"+mips32r2\".to_string(),\n+            features: \"+mips32r2,+fpxx,+nooddspreg\".to_string(),\n             max_atomic_width: Some(32),\n \n             // see #36994"}, {"sha": "555855b8f815ddea8dc971a62fc2a54f60b60896", "filename": "src/librustc_back/target/mipsel_unknown_linux_gnu.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/beab2e6608810ab43312f61fe226f187d017416d/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beab2e6608810ab43312f61fe226f187d017416d/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_gnu.rs?ref=beab2e6608810ab43312f61fe226f187d017416d", "patch": "@@ -25,8 +25,8 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Gcc,\n \n         options: TargetOptions {\n-            cpu: \"mips32\".to_string(),\n-            features: \"+mips32\".to_string(),\n+            cpu: \"mips32r2\".to_string(),\n+            features: \"+mips32r2,+fpxx,+nooddspreg\".to_string(),\n             max_atomic_width: Some(32),\n \n             // see #36994"}, {"sha": "6bef2fe2ea717eb0cbb88452c17179d1de62bfed", "filename": "src/librustc_back/target/mipsel_unknown_linux_musl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/beab2e6608810ab43312f61fe226f187d017416d/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beab2e6608810ab43312f61fe226f187d017416d/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_musl.rs?ref=beab2e6608810ab43312f61fe226f187d017416d", "patch": "@@ -13,8 +13,8 @@ use target::{Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();\n-    base.cpu = \"mips32\".to_string();\n-    base.features = \"+mips32,+soft-float\".to_string();\n+    base.cpu = \"mips32r2\".to_string();\n+    base.features = \"+mips32r2,+soft-float\".to_string();\n     base.max_atomic_width = Some(32);\n     // see #36994\n     base.exe_allocation_crate = None;"}, {"sha": "a5dbdd111835976abf0112af111da65a48dd7a08", "filename": "src/librustc_back/target/mipsel_unknown_linux_uclibc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/beab2e6608810ab43312f61fe226f187d017416d/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beab2e6608810ab43312f61fe226f187d017416d/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_uclibc.rs?ref=beab2e6608810ab43312f61fe226f187d017416d", "patch": "@@ -25,8 +25,8 @@ pub fn target() -> TargetResult {\n         linker_flavor: LinkerFlavor::Gcc,\n \n         options: TargetOptions {\n-            cpu: \"mips32\".to_string(),\n-            features: \"+mips32,+soft-float\".to_string(),\n+            cpu: \"mips32r2\".to_string(),\n+            features: \"+mips32r2,+soft-float\".to_string(),\n             max_atomic_width: Some(32),\n \n             // see #36994"}, {"sha": "afe32f3f66933560915451c20b5700d2dd80c607", "filename": "src/librustc_trans/llvm_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/beab2e6608810ab43312f61fe226f187d017416d/src%2Flibrustc_trans%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beab2e6608810ab43312f61fe226f187d017416d/src%2Flibrustc_trans%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fllvm_util.rs?ref=beab2e6608810ab43312f61fe226f187d017416d", "patch": "@@ -104,7 +104,7 @@ const POWERPC_WHITELIST: &'static [&'static str] = &[\"altivec\",\n                                                      \"power8-vector\", \"power9-vector\",\n                                                      \"vsx\"];\n \n-const MIPS_WHITELIST: &'static [&'static str] = &[\"msa\"];\n+const MIPS_WHITELIST: &'static [&'static str] = &[\"fp64\", \"msa\"];\n \n pub fn to_llvm_feature<'a>(sess: &Session, s: &'a str) -> &'a str {\n     let arch = if sess.target.target.arch == \"x86_64\" {"}]}