{"sha": "1090509564b129886db8629bcab4cb46e46f9041", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwOTA1MDk1NjRiMTI5ODg2ZGI4NjI5YmNhYjRjYjQ2ZTQ2ZjkwNDE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T12:39:56Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T21:45:18Z"}, "message": "non_copy_const: remove incorrect suggestion", "tree": {"sha": "a4e2934fda8ec76ceecfd3a20b8152fb4896b2a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4e2934fda8ec76ceecfd3a20b8152fb4896b2a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1090509564b129886db8629bcab4cb46e46f9041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1090509564b129886db8629bcab4cb46e46f9041", "html_url": "https://github.com/rust-lang/rust/commit/1090509564b129886db8629bcab4cb46e46f9041", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1090509564b129886db8629bcab4cb46e46f9041/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9a3350455ecd46ef1a9b6f3851373fcdc98c0e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9a3350455ecd46ef1a9b6f3851373fcdc98c0e9", "html_url": "https://github.com/rust-lang/rust/commit/a9a3350455ecd46ef1a9b6f3851373fcdc98c0e9"}], "stats": {"total": 76, "additions": 23, "deletions": 53}, "files": [{"sha": "90a31f710f4d5d82680d0ab2b8e6dd25237aa598", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1090509564b129886db8629bcab4cb46e46f9041/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1090509564b129886db8629bcab4cb46e46f9041/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=1090509564b129886db8629bcab4cb46e46f9041", "patch": "@@ -10,7 +10,6 @@ use rustc::lint::{LateContext, LateLintPass, Lint, LintArray, LintPass};\n use rustc::ty::adjustment::Adjust;\n use rustc::ty::{Ty, TypeFlags};\n use rustc::{declare_lint_pass, declare_tool_lint};\n-use rustc_errors::Applicability;\n use rustc_typeck::hir_ty_to_ty;\n use syntax_pos::{InnerSpan, Span, DUMMY_SP};\n \n@@ -125,16 +124,11 @@ fn verify_ty_bound<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, ty: Ty<'tcx>, source: S\n         match source {\n             Source::Item { .. } => {\n                 let const_kw_span = span.from_inner(InnerSpan::new(0, 5));\n-                db.span_suggestion(\n-                    const_kw_span,\n-                    \"make this a static item\",\n-                    \"static\".to_string(),\n-                    Applicability::MachineApplicable,\n-                );\n+                db.span_label(const_kw_span, \"make this a static item (maybe with lazy_static)\");\n             },\n             Source::Assoc { ty: ty_span, .. } => {\n                 if ty.flags.contains(TypeFlags::HAS_FREE_LOCAL_NAMES) {\n-                    db.span_help(ty_span, &format!(\"consider requiring `{}` to be `Copy`\", ty));\n+                    db.span_label(ty_span, &format!(\"consider requiring `{}` to be `Copy`\", ty));\n                 }\n             },\n             Source::Expr { .. } => {"}, {"sha": "0568386f889bb5f874bb334a76fec5c88be797b4", "filename": "tests/ui/non_copy_const.stderr", "status": "modified", "additions": 21, "deletions": 45, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/1090509564b129886db8629bcab4cb46e46f9041/tests%2Fui%2Fnon_copy_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1090509564b129886db8629bcab4cb46e46f9041/tests%2Fui%2Fnon_copy_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_copy_const.stderr?ref=1090509564b129886db8629bcab4cb46e46f9041", "patch": "@@ -4,7 +4,7 @@ error: a const item should never be interior mutable\n LL | const ATOMIC: AtomicUsize = AtomicUsize::new(5); //~ ERROR interior mutable\n    | -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    | |\n-   | help: make this a static item: `static`\n+   | make this a static item (maybe with lazy_static)\n    |\n    = note: `#[deny(clippy::declare_interior_mutable_const)]` on by default\n \n@@ -14,15 +14,15 @@ error: a const item should never be interior mutable\n LL | const CELL: Cell<usize> = Cell::new(6); //~ ERROR interior mutable\n    | -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    | |\n-   | help: make this a static item: `static`\n+   | make this a static item (maybe with lazy_static)\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:11:1\n    |\n LL | const ATOMIC_TUPLE: ([AtomicUsize; 1], Vec<AtomicUsize>, u8) = ([ATOMIC], Vec::new(), 7);\n    | -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    | |\n-   | help: make this a static item: `static`\n+   | make this a static item (maybe with lazy_static)\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:16:9\n@@ -43,37 +43,25 @@ error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:44:5\n    |\n LL |     const INPUT: T;\n-   |     ^^^^^^^^^^^^^^^\n-   |\n-help: consider requiring `T` to be `Copy`\n-  --> $DIR/non_copy_const.rs:44:18\n-   |\n-LL |     const INPUT: T;\n-   |                  ^\n+   |     ^^^^^^^^^^^^^-^\n+   |                  |\n+   |                  consider requiring `T` to be `Copy`\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:47:5\n    |\n LL |     const ASSOC: Self::NonCopyType;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: consider requiring `<Self as Trait<T>>::NonCopyType` to be `Copy`\n-  --> $DIR/non_copy_const.rs:47:18\n-   |\n-LL |     const ASSOC: Self::NonCopyType;\n-   |                  ^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^-----------------^\n+   |                  |\n+   |                  consider requiring `<Self as Trait<T>>::NonCopyType` to be `Copy`\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:51:5\n    |\n LL |     const AN_INPUT: T = Self::INPUT;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: consider requiring `T` to be `Copy`\n-  --> $DIR/non_copy_const.rs:51:21\n-   |\n-LL |     const AN_INPUT: T = Self::INPUT;\n-   |                     ^\n+   |     ^^^^^^^^^^^^^^^^-^^^^^^^^^^^^^^^\n+   |                     |\n+   |                     consider requiring `T` to be `Copy`\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:16:9\n@@ -88,13 +76,9 @@ error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:60:5\n    |\n LL |     const SELF_2: Self;\n-   |     ^^^^^^^^^^^^^^^^^^^\n-   |\n-help: consider requiring `Self` to be `Copy`\n-  --> $DIR/non_copy_const.rs:60:19\n-   |\n-LL |     const SELF_2: Self;\n-   |                   ^^^^\n+   |     ^^^^^^^^^^^^^^----^\n+   |                   |\n+   |                   consider requiring `Self` to be `Copy`\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:81:5\n@@ -106,25 +90,17 @@ error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:84:5\n    |\n LL |     const U_SELF: U = U::SELF_2;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: consider requiring `U` to be `Copy`\n-  --> $DIR/non_copy_const.rs:84:19\n-   |\n-LL |     const U_SELF: U = U::SELF_2;\n-   |                   ^\n+   |     ^^^^^^^^^^^^^^-^^^^^^^^^^^^^\n+   |                   |\n+   |                   consider requiring `U` to be `Copy`\n \n error: a const item should never be interior mutable\n   --> $DIR/non_copy_const.rs:87:5\n    |\n LL |     const T_ASSOC: T::NonCopyType = T::ASSOC;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: consider requiring `<T as Trait<u32>>::NonCopyType` to be `Copy`\n-  --> $DIR/non_copy_const.rs:87:20\n-   |\n-LL |     const T_ASSOC: T::NonCopyType = T::ASSOC;\n-   |                    ^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^--------------^^^^^^^^^^^^\n+   |                    |\n+   |                    consider requiring `<T as Trait<u32>>::NonCopyType` to be `Copy`\n \n error: a const item with interior mutability should not be borrowed\n   --> $DIR/non_copy_const.rs:94:5"}]}