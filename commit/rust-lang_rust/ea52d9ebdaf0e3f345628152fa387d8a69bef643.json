{"sha": "ea52d9ebdaf0e3f345628152fa387d8a69bef643", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNTJkOWViZGFmMGUzZjM0NTYyODE1MmZhMzg3ZDhhNjliZWY2NDM=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-01-07T23:15:59Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-01-07T23:15:59Z"}, "message": "[MIR] Fix translation of ConstVal::{Struct, Tuple}\n\nFixes #30772", "tree": {"sha": "bd9934fd2dc4fd33f335d3de5d05a8362c146323", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd9934fd2dc4fd33f335d3de5d05a8362c146323"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea52d9ebdaf0e3f345628152fa387d8a69bef643", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea52d9ebdaf0e3f345628152fa387d8a69bef643", "html_url": "https://github.com/rust-lang/rust/commit/ea52d9ebdaf0e3f345628152fa387d8a69bef643", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea52d9ebdaf0e3f345628152fa387d8a69bef643/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2edb1d9b96bdf78ee06b73d37f1382a30bc67882", "url": "https://api.github.com/repos/rust-lang/rust/commits/2edb1d9b96bdf78ee06b73d37f1382a30bc67882", "html_url": "https://github.com/rust-lang/rust/commit/2edb1d9b96bdf78ee06b73d37f1382a30bc67882"}], "stats": {"total": 47, "additions": 37, "deletions": 10}, "files": [{"sha": "e96c8f900b18cf78f56c930f41dd1274b443c167", "filename": "src/librustc_trans/trans/mir/constant.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ea52d9ebdaf0e3f345628152fa387d8a69bef643/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea52d9ebdaf0e3f345628152fa387d8a69bef643/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs?ref=ea52d9ebdaf0e3f345628152fa387d8a69bef643", "patch": "@@ -15,13 +15,14 @@ use middle::ty::{Ty, HasTypeFlags};\n use rustc::middle::const_eval::ConstVal;\n use rustc::mir::repr as mir;\n use trans::common::{self, Block, C_bool, C_bytes, C_floating_f64, C_integral, C_str_slice};\n-use trans::consts::{self, TrueConst};\n-use trans::{type_of, expr};\n-\n+use trans::consts;\n+use trans::expr;\n+use trans::type_of;\n \n use super::operand::{OperandRef, OperandValue};\n use super::MirContext;\n \n+\n impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n     pub fn trans_constval(&mut self,\n                           bcx: Block<'bcx, 'tcx>,\n@@ -66,13 +67,7 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n             ConstVal::Uint(v) => C_integral(llty, v, false),\n             ConstVal::Str(ref v) => C_str_slice(ccx, v.clone()),\n             ConstVal::ByteStr(ref v) => consts::addr_of(ccx, C_bytes(ccx, v), 1, \"byte_str\"),\n-            ConstVal::Struct(id) | ConstVal::Tuple(id) => {\n-                let expr = bcx.tcx().map.expect_expr(id);\n-                match consts::const_expr(ccx, expr, param_substs, None, TrueConst::Yes) {\n-                    Ok((val, _)) => val,\n-                    Err(e) => panic!(\"const eval failure: {}\", e.description()),\n-                }\n-            },\n+            ConstVal::Struct(id) | ConstVal::Tuple(id) |\n             ConstVal::Array(id, _) | ConstVal::Repeat(id, _) => {\n                 let expr = bcx.tcx().map.expect_expr(id);\n                 expr::trans(bcx, expr).datum.val"}, {"sha": "8a1f68dbea3eede0adb7fa8ddd1c8a46058da6ad", "filename": "src/test/run-pass/mir_constval_adts.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ea52d9ebdaf0e3f345628152fa387d8a69bef643/src%2Ftest%2Frun-pass%2Fmir_constval_adts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea52d9ebdaf0e3f345628152fa387d8a69bef643/src%2Ftest%2Frun-pass%2Fmir_constval_adts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmir_constval_adts.rs?ref=ea52d9ebdaf0e3f345628152fa387d8a69bef643", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![feature(rustc_attrs)]\n+\n+#[derive(PartialEq, Debug)]\n+struct Point {\n+    _x: i32,\n+    _y: i32,\n+}\n+const STRUCT: Point = Point { _x: 42, _y: 42 };\n+const TUPLE1: (i32, i32) = (42, 42);\n+const TUPLE2: (&'static str, &'static str) = (\"hello\",\"world\");\n+\n+#[rustc_mir]\n+fn mir() -> (Point, (i32, i32), (&'static str, &'static str)){\n+    let struct1 = STRUCT;\n+    let tuple1 = TUPLE1;\n+    let tuple2 = TUPLE2;\n+    (struct1, tuple1, tuple2)\n+}\n+\n+fn main(){\n+    assert_eq!(mir(), (STRUCT, TUPLE1, TUPLE2));\n+}\n+"}]}