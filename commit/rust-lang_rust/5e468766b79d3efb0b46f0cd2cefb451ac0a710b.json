{"sha": "5e468766b79d3efb0b46f0cd2cefb451ac0a710b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNDY4NzY2Yjc5ZDNlZmIwYjQ2ZjBjZDJjZWZiNDUxYWMwYTcxMGI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-08T19:37:07Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-09T19:00:40Z"}, "message": "also pass actual arguments to Windows", "tree": {"sha": "8cf99030399901e3430abb4910649310b1884d5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cf99030399901e3430abb4910649310b1884d5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e468766b79d3efb0b46f0cd2cefb451ac0a710b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e468766b79d3efb0b46f0cd2cefb451ac0a710b", "html_url": "https://github.com/rust-lang/rust/commit/5e468766b79d3efb0b46f0cd2cefb451ac0a710b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e468766b79d3efb0b46f0cd2cefb451ac0a710b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e400b42c216cc88ba1689fb72a704ee4aacbb2b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e400b42c216cc88ba1689fb72a704ee4aacbb2b3", "html_url": "https://github.com/rust-lang/rust/commit/e400b42c216cc88ba1689fb72a704ee4aacbb2b3"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "721ebe5cfd46b972a7241d1039081aeb2eb81a03", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5e468766b79d3efb0b46f0cd2cefb451ac0a710b/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5e468766b79d3efb0b46f0cd2cefb451ac0a710b/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=5e468766b79d3efb0b46f0cd2cefb451ac0a710b", "patch": "@@ -39,6 +39,7 @@ directories = { version = \"1.0\", optional = true }\n rustc_version = { version = \"0.2.3\", optional = true }\n env_logger = \"0.6\"\n log = \"0.4\"\n+shell-escape = \"0.1.4\"\n # A noop dependency that changes in the Rust repository, it's a bit of a hack.\n # See the `src/tools/rustc-workspace-hack/README.md` file in `rust-lang/rust`\n # for more information."}, {"sha": "f59a476ed94e8478af52371d267d80053e631b1f", "filename": "src/lib.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5e468766b79d3efb0b46f0cd2cefb451ac0a710b/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e468766b79d3efb0b46f0cd2cefb451ac0a710b/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=5e468766b79d3efb0b46f0cd2cefb451ac0a710b", "patch": "@@ -139,9 +139,19 @@ pub fn create_ecx<'a, 'mir: 'a, 'tcx: 'mir>(\n     // FIXME: extract main source file path\n     // Third argument (argv): Created from config.args\n     let dest = ecx.eval_place(&mir::Place::Local(args.next().unwrap()))?;\n+    // For Windows, construct a command string with all the aguments\n+    let mut cmd = String::new();\n+    for arg in config.args.iter() {\n+        if !cmd.is_empty() {\n+            cmd.push(' ');\n+        }\n+        cmd.push_str(&*shell_escape::windows::escape(arg.as_str().into()));\n+    }\n+    cmd.push(std::char::from_u32(0).unwrap()); // don't forget 0 terminator\n     // Collect the pointers to the individual strings.\n     let mut argvs = Vec::<Pointer<Borrow>>::new();\n     for arg in config.args {\n+        // Add 0 terminator\n         let mut arg = arg.into_bytes();\n         arg.push(0);\n         argvs.push(ecx.memory_mut().allocate_static_bytes(arg.as_slice()).with_default_tag());\n@@ -165,9 +175,8 @@ pub fn create_ecx<'a, 'mir: 'a, 'tcx: 'mir>(\n     }\n     // Store cmdline as UTF-16 for Windows GetCommandLineW\n     {\n-        const CMD: &str = \"running-in-miri\\0\";\n         let tcx = &{ecx.tcx.tcx};\n-        let cmd_utf16: Vec<u16> = CMD.encode_utf16().collect();\n+        let cmd_utf16: Vec<u16> = cmd.encode_utf16().collect();\n         let cmd_ptr = ecx.memory_mut().allocate(\n             Size::from_bytes(cmd_utf16.len() as u64 * 2),\n             Align::from_bytes(2).unwrap(),"}]}