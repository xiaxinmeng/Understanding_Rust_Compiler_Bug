{"sha": "b930efb3546777fce80d941489afe888d6e654a6", "node_id": "C_kwDOAAsO6NoAKGI5MzBlZmIzNTQ2Nzc3ZmNlODBkOTQxNDg5YWZlODg4ZDZlNjU0YTY", "commit": {"author": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-03-07T18:55:58Z"}, "committer": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-03-07T18:55:58Z"}, "message": "fix", "tree": {"sha": "0d837781fce6755d3c319133758595614f3a1ae0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d837781fce6755d3c319133758595614f3a1ae0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b930efb3546777fce80d941489afe888d6e654a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b930efb3546777fce80d941489afe888d6e654a6", "html_url": "https://github.com/rust-lang/rust/commit/b930efb3546777fce80d941489afe888d6e654a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b930efb3546777fce80d941489afe888d6e654a6/comments", "author": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecb867ec3cefa97a5807453a68758392730e3ed9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecb867ec3cefa97a5807453a68758392730e3ed9", "html_url": "https://github.com/rust-lang/rust/commit/ecb867ec3cefa97a5807453a68758392730e3ed9"}], "stats": {"total": 98, "additions": 98, "deletions": 0}, "files": [{"sha": "19c80ac7f1af7c4fad8a0cf2bcb22ecd7aec9f2b", "filename": "compiler/rustc_middle/src/ty/diagnostics.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b930efb3546777fce80d941489afe888d6e654a6/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b930efb3546777fce80d941489afe888d6e654a6/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs?ref=b930efb3546777fce80d941489afe888d6e654a6", "patch": "@@ -325,6 +325,12 @@ pub fn suggest_constraining_type_params<'a>(\n             }\n         }\n \n+        // This check is always run on non-valid code\n+        // to not trigger ICE\n+        if constraints.is_empty() && suggestions.is_empty() {\n+            return false;\n+        }\n+\n         if constraints.is_empty() {\n             continue;\n         }"}, {"sha": "69b874bed1b9073d91df4b43e0f090b2dbaa2896", "filename": "src/test/ui/suggestions/constrain-suggest-ice.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b930efb3546777fce80d941489afe888d6e654a6/src%2Ftest%2Fui%2Fsuggestions%2Fconstrain-suggest-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b930efb3546777fce80d941489afe888d6e654a6/src%2Ftest%2Fui%2Fsuggestions%2Fconstrain-suggest-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconstrain-suggest-ice.rs?ref=b930efb3546777fce80d941489afe888d6e654a6", "patch": "@@ -0,0 +1,11 @@\n+struct Bug<S>{ //~ ERROR parameter `S` is never used [E0392]\n+    A: [(); {\n+        let x: [u8; Self::W] = [0; Self::W]; //~ ERROR generic `Self` types are currently not permitted in anonymous constants\n+        //~^ ERROR generic `Self` types are currently not permitted in anonymous constants\n+        //~^^ ERROR the size for values of type `S` cannot be known at compilation time [E0277]\n+        F //~ ERROR cannot find value `F` in this scope [E0425]\n+    }\n+} //~ ERROR mismatched closing delimiter: `}`\n+//~^ ERROR mismatched closing delimiter: `}`\n+\n+fn main() {}"}, {"sha": "477eb2786799a5d9320e5ed5b210dfef659c3af8", "filename": "src/test/ui/suggestions/constrain-suggest-ice.stderr", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/b930efb3546777fce80d941489afe888d6e654a6/src%2Ftest%2Fui%2Fsuggestions%2Fconstrain-suggest-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b930efb3546777fce80d941489afe888d6e654a6/src%2Ftest%2Fui%2Fsuggestions%2Fconstrain-suggest-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconstrain-suggest-ice.stderr?ref=b930efb3546777fce80d941489afe888d6e654a6", "patch": "@@ -0,0 +1,81 @@\n+error: mismatched closing delimiter: `}`\n+  --> $DIR/constrain-suggest-ice.rs:2:8\n+   |\n+LL | struct Bug<S>{\n+   |              - closing delimiter possibly meant for this\n+LL |     A: [(); {\n+   |        ^ unclosed delimiter\n+...\n+LL | }\n+   | ^ mismatched closing delimiter\n+\n+error: mismatched closing delimiter: `}`\n+  --> $DIR/constrain-suggest-ice.rs:2:8\n+   |\n+LL | struct Bug<S>{\n+   |              - closing delimiter possibly meant for this\n+LL |     A: [(); {\n+   |        ^ unclosed delimiter\n+...\n+LL | }\n+   | ^ mismatched closing delimiter\n+\n+error[E0425]: cannot find value `F` in this scope\n+  --> $DIR/constrain-suggest-ice.rs:6:9\n+   |\n+LL |         F\n+   |         ^\n+   |\n+help: a local variable with a similar name exists\n+   |\n+LL |         x\n+   |         ~\n+help: you might be missing a type parameter\n+   |\n+LL | struct Bug<S, F>{\n+   |             +++\n+\n+error: generic `Self` types are currently not permitted in anonymous constants\n+  --> $DIR/constrain-suggest-ice.rs:3:21\n+   |\n+LL |         let x: [u8; Self::W] = [0; Self::W];\n+   |                     ^^^^\n+\n+error: generic `Self` types are currently not permitted in anonymous constants\n+  --> $DIR/constrain-suggest-ice.rs:3:36\n+   |\n+LL |         let x: [u8; Self::W] = [0; Self::W];\n+   |                                    ^^^^\n+\n+error[E0277]: the size for values of type `S` cannot be known at compilation time\n+  --> $DIR/constrain-suggest-ice.rs:3:36\n+   |\n+LL | struct Bug<S>{\n+   |            - this type parameter needs to be `std::marker::Sized`\n+LL |     A: [(); {\n+LL |         let x: [u8; Self::W] = [0; Self::W];\n+   |                                    ^^^^^^^ doesn't have a size known at compile-time\n+   |\n+note: required by a bound in `Bug`\n+  --> $DIR/constrain-suggest-ice.rs:1:12\n+   |\n+LL | struct Bug<S>{\n+   |            ^ required by this bound in `Bug`\n+help: consider relaxing the implicit `Sized` restriction\n+   |\n+LL | struct Bug<S: ?Sized>{\n+   |             ++++++++\n+\n+error[E0392]: parameter `S` is never used\n+  --> $DIR/constrain-suggest-ice.rs:1:12\n+   |\n+LL | struct Bug<S>{\n+   |            ^ unused parameter\n+   |\n+   = help: consider removing `S`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `S` to be a const parameter, use `const S: usize` instead\n+\n+error: aborting due to 7 previous errors\n+\n+Some errors have detailed explanations: E0277, E0392, E0425.\n+For more information about an error, try `rustc --explain E0277`."}]}