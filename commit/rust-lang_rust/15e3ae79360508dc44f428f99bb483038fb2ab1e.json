{"sha": "15e3ae79360508dc44f428f99bb483038fb2ab1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1ZTNhZTc5MzYwNTA4ZGM0NGY0MjhmOTliYjQ4MzAzOGZiMmFiMWU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-25T18:11:21Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-27T22:54:44Z"}, "message": "Convert std::os to istrs. Issue #855", "tree": {"sha": "51242ae2fd6af2abb879d6f493241397ffb33485", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51242ae2fd6af2abb879d6f493241397ffb33485"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15e3ae79360508dc44f428f99bb483038fb2ab1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15e3ae79360508dc44f428f99bb483038fb2ab1e", "html_url": "https://github.com/rust-lang/rust/commit/15e3ae79360508dc44f428f99bb483038fb2ab1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15e3ae79360508dc44f428f99bb483038fb2ab1e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85b4253bc1946a1e17fe7d93a80fbb5bea96ee27", "url": "https://api.github.com/repos/rust-lang/rust/commits/85b4253bc1946a1e17fe7d93a80fbb5bea96ee27", "html_url": "https://github.com/rust-lang/rust/commit/85b4253bc1946a1e17fe7d93a80fbb5bea96ee27"}], "stats": {"total": 52, "additions": 30, "deletions": 22}, "files": [{"sha": "bb8f201d254ebdd808b2f424f88d5108a5600a45", "filename": "src/comp/back/x86.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Fcomp%2Fback%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Fcomp%2Fback%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fx86.rs?ref=15e3ae79360508dc44f428f99bb483038fb2ab1e", "patch": "@@ -2,31 +2,32 @@\n import lib::llvm::llvm;\n import lib::llvm::llvm::ModuleRef;\n import std::str;\n+import std::istr;\n import std::os::target_os;\n \n fn get_module_asm() -> str { ret \"\"; }\n \n fn get_meta_sect_name() -> str {\n-    if str::eq(target_os(), \"macos\") { ret \"__DATA,__note.rustc\"; }\n-    if str::eq(target_os(), \"win32\") { ret \".note.rustc\"; }\n+    if istr::eq(target_os(), ~\"macos\") { ret \"__DATA,__note.rustc\"; }\n+    if istr::eq(target_os(), ~\"win32\") { ret \".note.rustc\"; }\n     ret \".note.rustc\";\n }\n \n fn get_data_layout() -> str {\n-    if str::eq(target_os(), \"macos\") {\n+    if istr::eq(target_os(), ~\"macos\") {\n         ret \"e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16\" + \"-i32:32:32-i64:32:64\" +\n                 \"-f32:32:32-f64:32:64-v64:64:64\" +\n                 \"-v128:128:128-a0:0:64-f80:128:128\" + \"-n8:16:32\";\n     }\n-    if str::eq(target_os(), \"win32\") {\n+    if istr::eq(target_os(), ~\"win32\") {\n         ret \"e-p:32:32-f64:64:64-i64:64:64-f80:32:32-n8:16:32\";\n     }\n     ret \"e-p:32:32-f64:32:64-i64:32:64-f80:32:32-n8:16:32\";\n }\n \n fn get_target_triple() -> str {\n-    if str::eq(target_os(), \"macos\") { ret \"i686-apple-darwin\"; }\n-    if str::eq(target_os(), \"win32\") { ret \"i686-pc-mingw32\"; }\n+    if istr::eq(target_os(), ~\"macos\") { ret \"i686-apple-darwin\"; }\n+    if istr::eq(target_os(), ~\"win32\") { ret \"i686-pc-mingw32\"; }\n     ret \"i686-unknown-linux-gnu\";\n }\n //"}, {"sha": "204b6ef0d5146576e1ad18cd250980ed0f97033b", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=15e3ae79360508dc44f428f99bb483038fb2ab1e", "patch": "@@ -55,7 +55,8 @@ fn default_configuration(sess: session::session, argv0: str, input: str) ->\n     let mk = attr::mk_name_value_item_str;\n \n     ret [ // Target bindings.\n-         mk(\"target_os\", std::os::target_os()), mk(\"target_arch\", \"x86\"),\n+         mk(\"target_os\", istr::to_estr(std::os::target_os())),\n+        mk(\"target_arch\", \"x86\"),\n          mk(\"target_libc\", libc),\n          // Build bindings.\n          mk(\"build_compiler\", argv0), mk(\"build_input\", input)];"}, {"sha": "6005467438e9cea8b5a56f92a7e005a8dff25d07", "filename": "src/lib/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Flib%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Flib%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ffs.rs?ref=15e3ae79360508dc44f428f99bb483038fb2ab1e", "patch": "@@ -70,7 +70,7 @@ fn make_absolute(p: &path) -> path {\n     if path_is_absolute(p) {\n         ret p;\n     } else {\n-        ret connect(istr::from_estr(getcwd()), p);\n+        ret connect(getcwd(), p);\n     }\n }\n "}, {"sha": "4c67a01fc56f4a3e8309adfb8965f24bdc04af07", "filename": "src/lib/linux_os.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Flib%2Flinux_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Flib%2Flinux_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Flinux_os.rs?ref=15e3ae79360508dc44f428f99bb483038fb2ab1e", "patch": "@@ -52,11 +52,11 @@ mod libc_constants {\n     fn S_IWUSR() -> uint { ret 128u; }\n }\n \n-fn exec_suffix() -> str { ret \"\"; }\n+fn exec_suffix() -> istr { ret ~\"\"; }\n \n-fn target_os() -> str { ret \"linux\"; }\n+fn target_os() -> istr { ret ~\"linux\"; }\n \n-fn dylib_filename(base: str) -> str { ret \"lib\" + base + \".so\"; }\n+fn dylib_filename(base: &istr) -> istr { ret ~\"lib\" + base + ~\".so\"; }\n \n fn pipe() -> {in: int, out: int} {\n     let fds = {mutable in: 0, mutable out: 0};\n@@ -76,7 +76,9 @@ native \"rust\" mod rustrt {\n     fn rust_getcwd() -> str;\n }\n \n-fn getcwd() -> str { ret rustrt::rust_getcwd(); }\n+fn getcwd() -> istr {\n+    ret istr::from_estr(rustrt::rust_getcwd());\n+}\n \n \n // Local Variables:"}, {"sha": "2ac38c35aa8950ab4a565f7a29379672d0eca0fc", "filename": "src/lib/macos_os.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Flib%2Fmacos_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Flib%2Fmacos_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmacos_os.rs?ref=15e3ae79360508dc44f428f99bb483038fb2ab1e", "patch": "@@ -49,11 +49,11 @@ mod libc_constants {\n     fn S_IWUSR() -> uint { ret 512u; }\n }\n \n-fn exec_suffix() -> str { ret \"\"; }\n+fn exec_suffix() -> istr { ret ~\"\"; }\n \n-fn target_os() -> str { ret \"macos\"; }\n+fn target_os() -> istr { ret ~\"macos\"; }\n \n-fn dylib_filename(base: str) -> str { ret \"lib\" + base + \".dylib\"; }\n+fn dylib_filename(base: &istr) -> istr { ret ~\"lib\" + base + ~\".dylib\"; }\n \n fn pipe() -> {in: int, out: int} {\n     let fds = {mutable in: 0, mutable out: 0};\n@@ -73,7 +73,9 @@ native \"rust\" mod rustrt {\n     fn rust_getcwd() -> str;\n }\n \n-fn getcwd() -> str { ret rustrt::rust_getcwd(); }\n+fn getcwd() -> istr {\n+    ret istr::from_estr(rustrt::rust_getcwd());\n+}\n \n \n // Local Variables:"}, {"sha": "f7c3d4570ddff77aeb29b8e84a1e061211cda7b5", "filename": "src/lib/win32_os.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Flib%2Fwin32_os.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Flib%2Fwin32_os.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fwin32_os.rs?ref=15e3ae79360508dc44f428f99bb483038fb2ab1e", "patch": "@@ -46,11 +46,11 @@ native \"x86stdcall\" mod kernel32 {\n     fn SetEnvironmentVariableA(n: sbuf, v: sbuf) -> int;\n }\n \n-fn exec_suffix() -> str { ret \".exe\"; }\n+fn exec_suffix() -> istr { ret ~\".exe\"; }\n \n-fn target_os() -> str { ret \"win32\"; }\n+fn target_os() -> istr { ret ~\"win32\"; }\n \n-fn dylib_filename(base: str) -> str { ret base + \".dll\"; }\n+fn dylib_filename(base: &istr) -> istr { ret base + ~\".dll\"; }\n \n fn pipe() -> {in: int, out: int} {\n     // Windows pipes work subtly differently than unix pipes, and their\n@@ -78,7 +78,9 @@ native \"rust\" mod rustrt {\n \n fn waitpid(pid: int) -> int { ret rustrt::rust_process_wait(pid); }\n \n-fn getcwd() -> str { ret rustrt::rust_getcwd(); }\n+fn getcwd() -> istr {\n+    ret istr::from_estr(rustrt::rust_getcwd());\n+}\n \n // Local Variables:\n // mode: rust;"}, {"sha": "314f96774378541246807fe8b55dfab65171f372", "filename": "src/test/compiletest/runtest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Ftest%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Ftest%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompiletest%2Fruntest.rs?ref=15e3ae79360508dc44f428f99bb483038fb2ab1e", "patch": "@@ -252,7 +252,7 @@ fn make_compile_args(config: &config, props: &test_props, testfile: &str) ->\n }\n \n fn make_exe_name(config: &config, testfile: &str) -> str {\n-    output_base_name(config, testfile) + os::exec_suffix()\n+    output_base_name(config, testfile) + istr::to_estr(os::exec_suffix())\n }\n \n fn make_run_args(config: &config, props: &test_props, testfile: &str) ->"}, {"sha": "82fe54413d93fc43ac300200f5e629486ac89dba", "filename": "src/test/stdtest/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Ftest%2Fstdtest%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15e3ae79360508dc44f428f99bb483038fb2ab1e/src%2Ftest%2Fstdtest%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fpath.rs?ref=15e3ae79360508dc44f428f99bb483038fb2ab1e", "patch": "@@ -10,7 +10,7 @@ import std::os;\n fn test() {\n     assert (!fs::path_is_absolute(~\"test-path\"));\n \n-    log \"Current working directory: \" + os::getcwd();\n+    log ~\"Current working directory: \" + os::getcwd();\n \n     log fs::make_absolute(~\"test-path\");\n     log fs::make_absolute(~\"/usr/bin\");"}]}