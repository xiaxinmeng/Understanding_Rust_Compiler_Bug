{"sha": "3e9d7e8aa8b73ea3d73940a573523fd498181b6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlOWQ3ZThhYThiNzNlYTNkNzM5NDBhNTczNTIzZmQ0OTgxODFiNmU=", "commit": {"author": {"name": "Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-29T20:31:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-29T20:31:22Z"}, "message": "Add a comment explaining the two checks", "tree": {"sha": "4993f52c0f3eb6f49a0c9ce133c2be13825a8d84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4993f52c0f3eb6f49a0c9ce133c2be13825a8d84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e9d7e8aa8b73ea3d73940a573523fd498181b6e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb124aCRBK7hj4Ov3rIwAAdHIIAHNM968Yyan7PucWPlhARNzE\nDW9lwH67bXx1nxIeKpftCoTsIAcHENeNnKkdJd3ih/dVrPjuzYB9ES4+5wLhWezu\nH6O0g8wKmv/4BumBqushtoGN+rtc3kdpfBsrkBZVf2LoXMlM2IUaRmRnPVUVW6M+\nFBTWmtwAFYY34+cQ+0VAKAOOPkRk10xNZLEPBSXy7XL4Gkn+lbW3TOVczilEPGut\nk+CfmNGlLnQfT6V9w/xAL5z55QfNMNYq1kupl7BKs3YW8VJ7aLRuNmmfWS+SJh0G\nqbXLl45n8ibumNP49XIIFhDE6elr59W8tM9PrvEmF/B5xzUXuImmGIrGFhATJYI=\n=NWTm\n-----END PGP SIGNATURE-----\n", "payload": "tree 4993f52c0f3eb6f49a0c9ce133c2be13825a8d84\nparent 3ad154f4842e9a1f09b5da37a76a333691f31784\nauthor Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer <github35764891676564198441@oli-obk.de> 1540845082 +0100\ncommitter GitHub <noreply@github.com> 1540845082 +0100\n\nAdd a comment explaining the two checks"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e9d7e8aa8b73ea3d73940a573523fd498181b6e", "html_url": "https://github.com/rust-lang/rust/commit/3e9d7e8aa8b73ea3d73940a573523fd498181b6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e9d7e8aa8b73ea3d73940a573523fd498181b6e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ad154f4842e9a1f09b5da37a76a333691f31784", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ad154f4842e9a1f09b5da37a76a333691f31784", "html_url": "https://github.com/rust-lang/rust/commit/3ad154f4842e9a1f09b5da37a76a333691f31784"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "9d86e737dd5b6aa8acd953ce895f6f055beb1896", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3e9d7e8aa8b73ea3d73940a573523fd498181b6e/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e9d7e8aa8b73ea3d73940a573523fd498181b6e/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=3e9d7e8aa8b73ea3d73940a573523fd498181b6e", "patch": "@@ -303,6 +303,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n         let (lo, hi) = layout.valid_range.clone().into_inner();\n         let max_hi = u128::max_value() >> (128 - size.bits()); // as big as the size fits\n         assert!(hi <= max_hi);\n+        // We could also write `(hi + 1) % (max_hi + 1) == lo` but `max_hi + 1` overflows for `u128`\n         if (lo == 0 && hi == max_hi) || (hi + 1 == lo) {\n             // Nothing to check\n             return Ok(());"}]}