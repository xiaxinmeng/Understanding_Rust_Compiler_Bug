{"sha": "8093db6e2b51bd9036ea2f76ad4342da0ca03bea", "node_id": "C_kwDOAAsO6NoAKDgwOTNkYjZlMmI1MWJkOTAzNmVhMmY3NmFkNDM0MmRhMGNhMDNiZWE", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-06-04T09:24:29Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-06-14T14:11:36Z"}, "message": "correctly create Scalar for meta info", "tree": {"sha": "6b333f07cc640c902fdb4ab2cf8158cae5f76ce1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b333f07cc640c902fdb4ab2cf8158cae5f76ce1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8093db6e2b51bd9036ea2f76ad4342da0ca03bea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8093db6e2b51bd9036ea2f76ad4342da0ca03bea", "html_url": "https://github.com/rust-lang/rust/commit/8093db6e2b51bd9036ea2f76ad4342da0ca03bea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8093db6e2b51bd9036ea2f76ad4342da0ca03bea/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90c4b947aafb087091c5b30f40f133abbd5aa31a", "url": "https://api.github.com/repos/rust-lang/rust/commits/90c4b947aafb087091c5b30f40f133abbd5aa31a", "html_url": "https://github.com/rust-lang/rust/commit/90c4b947aafb087091c5b30f40f133abbd5aa31a"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "4849a07e3b4f4a626f6a2b005f0c8cf4ff177f63", "filename": "compiler/rustc_const_eval/src/const_eval/valtrees.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8093db6e2b51bd9036ea2f76ad4342da0ca03bea/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fvaltrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8093db6e2b51bd9036ea2f76ad4342da0ca03bea/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fvaltrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fvaltrees.rs?ref=8093db6e2b51bd9036ea2f76ad4342da0ca03bea", "patch": "@@ -240,7 +240,7 @@ fn create_pointee_place<'tcx>(\n         let place = MPlaceTy::from_aligned_ptr_with_meta(\n             ptr.into(),\n             layout,\n-            MemPlaceMeta::Meta(Scalar::from_u64(num_elems as u64)),\n+            MemPlaceMeta::Meta(Scalar::from_machine_usize(num_elems as u64, &tcx)),\n         );\n         debug!(?place);\n \n@@ -370,7 +370,8 @@ fn valtree_into_mplace<'tcx>(\n             let imm = match inner_ty.kind() {\n                 ty::Slice(_) | ty::Str => {\n                     let len = valtree.unwrap_branch().len();\n-                    let len_scalar = ScalarMaybeUninit::Scalar(Scalar::from_u64(len as u64));\n+                    let len_scalar =\n+                        ScalarMaybeUninit::Scalar(Scalar::from_machine_usize(len as u64, &tcx));\n \n                     Immediate::ScalarPair(\n                         ScalarMaybeUninit::from_maybe_pointer((*pointee_place).ptr, &tcx),\n@@ -441,7 +442,10 @@ fn valtree_into_mplace<'tcx>(\n                         place\n                             .offset(\n                                 offset,\n-                                MemPlaceMeta::Meta(Scalar::from_u64(num_elems as u64)),\n+                                MemPlaceMeta::Meta(Scalar::from_machine_usize(\n+                                    num_elems as u64,\n+                                    &tcx,\n+                                )),\n                                 inner_layout,\n                                 &tcx,\n                             )"}]}