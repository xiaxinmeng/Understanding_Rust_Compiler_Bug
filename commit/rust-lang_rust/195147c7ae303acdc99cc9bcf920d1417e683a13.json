{"sha": "195147c7ae303acdc99cc9bcf920d1417e683a13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NTE0N2M3YWUzMDNhY2RjOTljYzliY2Y5MjBkMTQxN2U2ODNhMTM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-03-26T20:44:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-26T20:44:09Z"}, "message": "Rollup merge of #70437 - RalfJung:miri-saturate, r=hanna-kruppe\n\nMiri float->int casts: be explicit that this is saturating\n\nr? @hanna-kruppe\nCc https://github.com/rust-lang/miri/issues/1264", "tree": {"sha": "0edfb75370b8c0af344b9aad1d1a8adb2518ddcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0edfb75370b8c0af344b9aad1d1a8adb2518ddcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/195147c7ae303acdc99cc9bcf920d1417e683a13", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJefRQZCRBK7hj4Ov3rIwAAdHIIAHbfnOR4X3t4mLvrFAjtjkab\nc3j2oWn5JdQ7muqAvFKSWS2rYiLoRA9e+OVvyzOdx1bpKl+1vXpxpQB5SYsO1Xop\nH6jtC1rkINAyckyEWX5p/T09zvSjUG/ql9ksOdlbO0wpanbp9WpC4OP5yzZFbcZr\nLApKOFrUJvumb6ynnAIZ7EoqJ94PGbjPUBXa4f0MqJx0tt39LO76N7jSKaJrHGqZ\n/KvIqk9qLeGsA8Su85i/yKNZwVsLMPOIo20Wgirq6/FgyjbjNVuGPPPPz4lfFOrw\nYKIN3A1ti52wq8tJB3FowczZjlZYb1zZviMzplYLTG9nkALP0xwZH484U4zEv7I=\n=ay0w\n-----END PGP SIGNATURE-----\n", "payload": "tree 0edfb75370b8c0af344b9aad1d1a8adb2518ddcb\nparent e5c5e025acae925a52bdf81384454c94d526a69b\nparent 27777e2e7b72a28349cfa79d4950aef7869af118\nauthor Dylan DPC <dylan.dpc@gmail.com> 1585255449 +0100\ncommitter GitHub <noreply@github.com> 1585255449 +0100\n\nRollup merge of #70437 - RalfJung:miri-saturate, r=hanna-kruppe\n\nMiri float->int casts: be explicit that this is saturating\n\nr? @hanna-kruppe\nCc https://github.com/rust-lang/miri/issues/1264\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/195147c7ae303acdc99cc9bcf920d1417e683a13", "html_url": "https://github.com/rust-lang/rust/commit/195147c7ae303acdc99cc9bcf920d1417e683a13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/195147c7ae303acdc99cc9bcf920d1417e683a13/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5c5e025acae925a52bdf81384454c94d526a69b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5c5e025acae925a52bdf81384454c94d526a69b", "html_url": "https://github.com/rust-lang/rust/commit/e5c5e025acae925a52bdf81384454c94d526a69b"}, {"sha": "27777e2e7b72a28349cfa79d4950aef7869af118", "url": "https://api.github.com/repos/rust-lang/rust/commits/27777e2e7b72a28349cfa79d4950aef7869af118", "html_url": "https://github.com/rust-lang/rust/commit/27777e2e7b72a28349cfa79d4950aef7869af118"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "24176427ba526aebb9fcc722b28329a028283b95", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/195147c7ae303acdc99cc9bcf920d1417e683a13/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/195147c7ae303acdc99cc9bcf920d1417e683a13/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=195147c7ae303acdc99cc9bcf920d1417e683a13", "patch": "@@ -229,13 +229,17 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             // float -> uint\n             Uint(t) => {\n                 let width = t.bit_width().unwrap_or_else(|| self.pointer_size().bits());\n+                // `to_u128` is a saturating cast, which is what we need\n+                // (https://doc.rust-lang.org/nightly/nightly-rustc/rustc_apfloat/trait.Float.html#method.to_i128_r).\n                 let v = f.to_u128(usize::try_from(width).unwrap()).value;\n                 // This should already fit the bit width\n                 Ok(Scalar::from_uint(v, Size::from_bits(width)))\n             }\n             // float -> int\n             Int(t) => {\n                 let width = t.bit_width().unwrap_or_else(|| self.pointer_size().bits());\n+                // `to_i128` is a saturating cast, which is what we need\n+                // (https://doc.rust-lang.org/nightly/nightly-rustc/rustc_apfloat/trait.Float.html#method.to_i128_r).\n                 let v = f.to_i128(usize::try_from(width).unwrap()).value;\n                 Ok(Scalar::from_int(v, Size::from_bits(width)))\n             }"}]}