{"sha": "30375ccb303807223dac67a74a0a0f6a3c37263f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMzc1Y2NiMzAzODA3MjIzZGFjNjdhNzRhMGEwZjZhM2MzNzI2M2Y=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-08-28T15:47:31Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-09-04T16:38:46Z"}, "message": "debuginfo: Support for by-value arguments (still excluding some cases of self arguments)", "tree": {"sha": "391accf2eecc6bca704599440fb50e9b694d118e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/391accf2eecc6bca704599440fb50e9b694d118e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30375ccb303807223dac67a74a0a0f6a3c37263f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30375ccb303807223dac67a74a0a0f6a3c37263f", "html_url": "https://github.com/rust-lang/rust/commit/30375ccb303807223dac67a74a0a0f6a3c37263f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30375ccb303807223dac67a74a0a0f6a3c37263f/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b81ea86530dfd9dff69815b099ba10be274830ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/b81ea86530dfd9dff69815b099ba10be274830ea", "html_url": "https://github.com/rust-lang/rust/commit/b81ea86530dfd9dff69815b099ba10be274830ea"}], "stats": {"total": 104, "additions": 99, "deletions": 5}, "files": [{"sha": "9e81ee5e64ccf96b4b2877c13682a0b474c16bf0", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/30375ccb303807223dac67a74a0a0f6a3c37263f/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30375ccb303807223dac67a74a0a0f6a3c37263f/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=30375ccb303807223dac67a74a0a0f6a3c37263f", "patch": "@@ -2103,6 +2103,12 @@ pub mod llvm {\n             ArgNo: c_uint)\n             -> ValueRef;\n \n+        #[fast_ffi]\n+        pub fn LLVMIsAArgument(value_ref: ValueRef) -> ValueRef;\n+\n+        #[fast_ffi]\n+        pub fn LLVMIsAAllocaInst(value_ref: ValueRef) -> ValueRef;\n+\n         pub fn LLVMInitializeX86TargetInfo();\n         pub fn LLVMInitializeX86Target();\n         pub fn LLVMInitializeX86TargetMC();"}, {"sha": "70eb54313ca637afbfe57164aeb4db69aad094a8", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/30375ccb303807223dac67a74a0a0f6a3c37263f/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30375ccb303807223dac67a74a0a0f6a3c37263f/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=30375ccb303807223dac67a74a0a0f6a3c37263f", "patch": "@@ -333,12 +333,18 @@ pub fn create_self_argument_metadata(bcx: @mut Block,\n         argument_index\n     };\n \n+    let variable_access = if unsafe { llvm::LLVMIsAAllocaInst(llptr) } != ptr::null() {\n+        DirectVariable\n+    } else {\n+        IndirectVariable\n+    };\n+\n     declare_local(bcx,\n                   llptr,\n                   special_idents::self_,\n                   type_of_self,\n                   scope_metadata,\n-                  DirectVariable,\n+                  variable_access,\n                   ArgumentVariable(argument_index),\n                   span);\n }\n@@ -371,6 +377,12 @@ pub fn create_argument_metadata(bcx: @mut Block,\n             }\n         };\n \n+        let variable_access = if unsafe { llvm::LLVMIsAAllocaInst(llptr) } != ptr::null() {\n+            DirectVariable\n+        } else {\n+            IndirectVariable\n+        };\n+\n         let argument_type = node_id_type(bcx, node_id);\n         let argument_ident = ast_util::path_to_ident(path_ref);\n \n@@ -386,7 +398,7 @@ pub fn create_argument_metadata(bcx: @mut Block,\n                       argument_ident,\n                       argument_type,\n                       scope_metadata,\n-                      DirectVariable,\n+                      variable_access,\n                       ArgumentVariable(argument_index),\n                       span);\n     }"}, {"sha": "6e381c74a339e963e5d296458cad27a5016a04c3", "filename": "src/test/debug-info/by-value-self-argument-in-trait-impl.rs", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/30375ccb303807223dac67a74a0a0f6a3c37263f/src%2Ftest%2Fdebug-info%2Fby-value-self-argument-in-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30375ccb303807223dac67a74a0a0f6a3c37263f/src%2Ftest%2Fdebug-info%2Fby-value-self-argument-in-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fby-value-self-argument-in-trait-impl.rs?ref=30375ccb303807223dac67a74a0a0f6a3c37263f", "patch": "@@ -0,0 +1,79 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:-Z extra-debug-info\n+// debugger:break zzz\n+// debugger:run\n+\n+// debugger:finish\n+// debugger:print self\n+// check:$1 = 1111\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print self\n+// check:$2 = {x = 2222, y = 3333}\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print self\n+// check:$3 = {4444.5, 5555, 6666, 7777.5}\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print self->val\n+// check:$4 = 8888\n+// debugger:continue\n+\n+trait Trait {\n+    fn method(self) -> Self;\n+}\n+\n+impl Trait for int {\n+    fn method(self) -> int {\n+        zzz();\n+        self\n+    }\n+}\n+\n+struct Struct {\n+    x: uint,\n+    y: uint,\n+}\n+\n+impl Trait for Struct {\n+    fn method(self) -> Struct {\n+        zzz();\n+        self\n+    }\n+}\n+\n+impl Trait for (float, int, int, float) {\n+    fn method(self) -> (float, int, int, float) {\n+        zzz();\n+        self\n+    }\n+}\n+\n+impl Trait for @int {\n+    fn method(self) -> @int {\n+        zzz();\n+        self\n+    }\n+}\n+\n+fn main() {\n+    let _ = (1111 as int).method();\n+    let _ = Struct { x: 2222, y: 3333 }.method();\n+    let _ = (4444.5, 5555, 6666, 7777.5).method();\n+    let _ = (@8888).method();\n+}\n+\n+fn zzz() {()}"}, {"sha": "73bd805a6f4c78466a967c04bec45b68df9a0884", "filename": "src/test/debug-info/by-value-struct-argument.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/30375ccb303807223dac67a74a0a0f6a3c37263f/src%2Ftest%2Fdebug-info%2Fby-value-struct-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30375ccb303807223dac67a74a0a0f6a3c37263f/src%2Ftest%2Fdebug-info%2Fby-value-struct-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fby-value-struct-argument.rs?ref=30375ccb303807223dac67a74a0a0f6a3c37263f", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// Does not work yet, see issue #8512\n-// xfail-test\n-\n // compile-flags:-Z extra-debug-info\n // debugger:break zzz\n // debugger:run"}]}