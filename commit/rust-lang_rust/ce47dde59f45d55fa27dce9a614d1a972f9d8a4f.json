{"sha": "ce47dde59f45d55fa27dce9a614d1a972f9d8a4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlNDdkZGU1OWY0NWQ1NWZhMjdkY2U5YTYxNGQxYTk3MmY5ZDhhNGY=", "commit": {"author": {"name": "Kevin Leimkuhler", "email": "kevin@kleimkuhler.com", "date": "2018-10-12T21:47:01Z"}, "committer": {"name": "Kevin Leimkuhler", "email": "kevin@kleimkuhler.com", "date": "2019-01-18T06:34:43Z"}, "message": "Add is_sorted unstable documentation", "tree": {"sha": "18177d1f5095ade1e718adca6a0cfca73b5c6d6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18177d1f5095ade1e718adca6a0cfca73b5c6d6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce47dde59f45d55fa27dce9a614d1a972f9d8a4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce47dde59f45d55fa27dce9a614d1a972f9d8a4f", "html_url": "https://github.com/rust-lang/rust/commit/ce47dde59f45d55fa27dce9a614d1a972f9d8a4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce47dde59f45d55fa27dce9a614d1a972f9d8a4f/comments", "author": {"login": "kleimkuhler", "id": 4572153, "node_id": "MDQ6VXNlcjQ1NzIxNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/4572153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kleimkuhler", "html_url": "https://github.com/kleimkuhler", "followers_url": "https://api.github.com/users/kleimkuhler/followers", "following_url": "https://api.github.com/users/kleimkuhler/following{/other_user}", "gists_url": "https://api.github.com/users/kleimkuhler/gists{/gist_id}", "starred_url": "https://api.github.com/users/kleimkuhler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kleimkuhler/subscriptions", "organizations_url": "https://api.github.com/users/kleimkuhler/orgs", "repos_url": "https://api.github.com/users/kleimkuhler/repos", "events_url": "https://api.github.com/users/kleimkuhler/events{/privacy}", "received_events_url": "https://api.github.com/users/kleimkuhler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kleimkuhler", "id": 4572153, "node_id": "MDQ6VXNlcjQ1NzIxNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/4572153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kleimkuhler", "html_url": "https://github.com/kleimkuhler", "followers_url": "https://api.github.com/users/kleimkuhler/followers", "following_url": "https://api.github.com/users/kleimkuhler/following{/other_user}", "gists_url": "https://api.github.com/users/kleimkuhler/gists{/gist_id}", "starred_url": "https://api.github.com/users/kleimkuhler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kleimkuhler/subscriptions", "organizations_url": "https://api.github.com/users/kleimkuhler/orgs", "repos_url": "https://api.github.com/users/kleimkuhler/repos", "events_url": "https://api.github.com/users/kleimkuhler/events{/privacy}", "received_events_url": "https://api.github.com/users/kleimkuhler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02477f6f99c22509825a85bd090e42f935b33983", "url": "https://api.github.com/repos/rust-lang/rust/commits/02477f6f99c22509825a85bd090e42f935b33983", "html_url": "https://github.com/rust-lang/rust/commit/02477f6f99c22509825a85bd090e42f935b33983"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "e3b7dc3b28eb2fe62537b662ebce429c4ab1192e", "filename": "src/doc/unstable-book/src/library-features/is-sorted.md", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ce47dde59f45d55fa27dce9a614d1a972f9d8a4f/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fis-sorted.md", "raw_url": "https://github.com/rust-lang/rust/raw/ce47dde59f45d55fa27dce9a614d1a972f9d8a4f/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fis-sorted.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fis-sorted.md?ref=ce47dde59f45d55fa27dce9a614d1a972f9d8a4f", "patch": "@@ -0,0 +1,11 @@\n+# `is_sorted`\n+\n+The tracking issue for this feature is: [#53485]\n+\n+[#53485]: https://github.com/rust-lang/rust/issues/53485\n+\n+------------------------\n+\n+Add the methods `is_sorted`, `is_sorted_by` and `is_sorted_by_key` to `[T]`;\n+add the methods `is_sorted`, `is_sorted_by` and `is_sorted_by_key` to\n+`Iterator`."}, {"sha": "67591381fdc92aeec9488df84b910725ac02de76", "filename": "src/libcore/iter/iterator.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce47dde59f45d55fa27dce9a614d1a972f9d8a4f/src%2Flibcore%2Fiter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce47dde59f45d55fa27dce9a614d1a972f9d8a4f/src%2Flibcore%2Fiter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fiterator.rs?ref=ce47dde59f45d55fa27dce9a614d1a972f9d8a4f", "patch": "@@ -2626,6 +2626,7 @@ pub trait Iterator {\n     /// assert!(std::iter::empty::<i32>().is_sorted());\n     /// assert!(![0.0, 1.0, std::f32::NAN].iter().is_sorted());\n     /// ```\n+    #[inline]\n     #[unstable(feature = \"is_sorted\", reason = \"new API\", issue = \"53485\")]\n     fn is_sorted(self) -> bool\n     where\n@@ -2676,6 +2677,7 @@ pub trait Iterator {\n     /// assert!([\"c\", \"bb\", \"aaa\"].iter().is_sorted_by_key(|s| s.len()));\n     /// assert!(![-2i32, -1, 0, 3].iter().is_sorted_by_key(|n| n.abs()));\n     /// ```\n+    #[inline]\n     #[unstable(feature = \"is_sorted\", reason = \"new API\", issue = \"53485\")]\n     fn is_sorted_by_key<F, K>(self, mut f: F) -> bool\n     where"}, {"sha": "ab160a6c0c406eb50079cdb4c6a5717f5a989777", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce47dde59f45d55fa27dce9a614d1a972f9d8a4f/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce47dde59f45d55fa27dce9a614d1a972f9d8a4f/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=ce47dde59f45d55fa27dce9a614d1a972f9d8a4f", "patch": "@@ -2272,6 +2272,7 @@ impl<T> [T] {\n     /// assert!(empty.is_sorted());\n     /// assert!(![0.0, 1.0, std::f32::NAN].is_sorted());\n     /// ```\n+    #[inline]\n     #[unstable(feature = \"is_sorted\", reason = \"new API\", issue = \"53485\")]\n     pub fn is_sorted(&self) -> bool\n     where\n@@ -2319,6 +2320,7 @@ impl<T> [T] {\n     /// assert!([\"c\", \"bb\", \"aaa\"].is_sorted_by_key(|s| s.len()));\n     /// assert!(![-2i32, -1, 0, 3].is_sorted_by_key(|n| n.abs()));\n     /// ```\n+    #[inline]\n     #[unstable(feature = \"is_sorted\", reason = \"new API\", issue = \"53485\")]\n     pub fn is_sorted_by_key<F, K>(&self, mut f: F) -> bool\n     where"}, {"sha": "f44e74838ed2364ab1f79ae4afdd9d442677130a", "filename": "src/test/ui/feature-gates/feature-gate-is_sorted.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ce47dde59f45d55fa27dce9a614d1a972f9d8a4f/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce47dde59f45d55fa27dce9a614d1a972f9d8a4f/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.rs?ref=ce47dde59f45d55fa27dce9a614d1a972f9d8a4f", "patch": "@@ -9,8 +9,15 @@\n // except according to those terms.\n \n fn main() {\n+    // Assert `Iterator` methods are feature gated\n     assert!([1, 2, 2, 9].iter().is_sorted());\n     //^ ERROR: use of unstable library feature 'is_sorted'\n     assert!(![-2i32, -1, 0, 3].iter().is_sorted_by_key(|n| n.abs()));\n     //^ ERROR: use of unstable library feature 'is_sorted'\n+\n+    // Assert `[T]` methods are feature gated\n+    assert!([1, 2, 2, 9].is_sorted());\n+    //^ ERROR: use of unstable library feature 'is_sorted'\n+    assert!(![-2i32, -1, 0, 3].is_sorted_by_key(|n| n.abs()));\n+    //^ ERROR: use of unstable library feature 'is_sorted'\n }"}, {"sha": "873cee533705da7684b0957b287f7986a0e6ed0e", "filename": "src/test/ui/feature-gates/feature-gate-is_sorted.stderr", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ce47dde59f45d55fa27dce9a614d1a972f9d8a4f/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ce47dde59f45d55fa27dce9a614d1a972f9d8a4f/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.stderr?ref=ce47dde59f45d55fa27dce9a614d1a972f9d8a4f", "patch": "@@ -1,19 +1,35 @@\n error[E0658]: use of unstable library feature 'is_sorted': new API (see issue #53485)\n-  --> $DIR/feature-gate-is_sorted.rs:12:33\n+  --> $DIR/feature-gate-is_sorted.rs:13:33\n    |\n LL |     assert!([1, 2, 2, 9].iter().is_sorted());\n    |                                 ^^^^^^^^^\n    |\n    = help: add #![feature(is_sorted)] to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'is_sorted': new API (see issue #53485)\n-  --> $DIR/feature-gate-is_sorted.rs:14:39\n+  --> $DIR/feature-gate-is_sorted.rs:15:39\n    |\n LL |     assert!(![-2i32, -1, 0, 3].iter().is_sorted_by_key(|n| n.abs()));\n    |                                       ^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(is_sorted)] to the crate attributes to enable\n \n-error: aborting due to 2 previous errors\n+error[E0658]: use of unstable library feature 'is_sorted': new API (see issue #53485)\n+  --> $DIR/feature-gate-is_sorted.rs:19:26\n+   |\n+LL |     assert!([1, 2, 2, 9].is_sorted());\n+   |                          ^^^^^^^^^\n+   |\n+   = help: add #![feature(is_sorted)] to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'is_sorted': new API (see issue #53485)\n+  --> $DIR/feature-gate-is_sorted.rs:21:32\n+   |\n+LL |     assert!(![-2i32, -1, 0, 3].is_sorted_by_key(|n| n.abs()));\n+   |                                ^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(is_sorted)] to the crate attributes to enable\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}]}