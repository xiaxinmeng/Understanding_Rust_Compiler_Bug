{"sha": "5c0556c2caa2e896d20ab47f87dc88121eda8261", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjMDU1NmMyY2FhMmU4OTZkMjBhYjQ3Zjg3ZGM4ODEyMWVkYTgyNjE=", "commit": {"author": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-03-07T18:28:51Z"}, "committer": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-03-07T18:33:33Z"}, "message": "Fix EnumVariants not showing properly when hovering\n\nThis fixes documentation as well for EnumVariants", "tree": {"sha": "903c32cdf41ab5866eb046e793d4c6f6ac6aee9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/903c32cdf41ab5866eb046e793d4c6f6ac6aee9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c0556c2caa2e896d20ab47f87dc88121eda8261", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c0556c2caa2e896d20ab47f87dc88121eda8261", "html_url": "https://github.com/rust-lang/rust/commit/5c0556c2caa2e896d20ab47f87dc88121eda8261", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c0556c2caa2e896d20ab47f87dc88121eda8261/comments", "author": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ce962f64e219a9e65f080fe98ebaba2008ae64e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ce962f64e219a9e65f080fe98ebaba2008ae64e", "html_url": "https://github.com/rust-lang/rust/commit/4ce962f64e219a9e65f080fe98ebaba2008ae64e"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "1c7d1f3fdd71b11a70b420a7812d6bc1943ebc56", "filename": "crates/ra_ide_api/src/hover.rs", "status": "modified", "additions": 56, "deletions": 2, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/5c0556c2caa2e896d20ab47f87dc88121eda8261/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c0556c2caa2e896d20ab47f87dc88121eda8261/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=5c0556c2caa2e896d20ab47f87dc88121eda8261", "patch": "@@ -195,6 +195,7 @@ impl NavigationTarget {\n             .visit(doc_comments::<ast::ConstDef>)\n             .visit(doc_comments::<ast::StaticDef>)\n             .visit(doc_comments::<ast::NamedFieldDef>)\n+            .visit(doc_comments::<ast::EnumVariant>)\n             .accept(&node)?\n     }\n \n@@ -240,6 +241,7 @@ impl NavigationTarget {\n             .visit(|node: &ast::ConstDef| visit_ascribed_node(node, \"const \"))\n             .visit(|node: &ast::StaticDef| visit_ascribed_node(node, \"static \"))\n             .visit(|node: &ast::NamedFieldDef| visit_ascribed_node(node, \"\"))\n+            .visit(|node: &ast::EnumVariant| Some(node.name()?.syntax().text().to_string()))\n             .accept(&node)?\n     }\n }\n@@ -428,8 +430,60 @@ mod tests {\n             \",\n         );\n         let hover = analysis.hover(position).unwrap().unwrap();\n-        // not the nicest way to show it currently\n-        assert_eq!(trim_markup_opt(hover.info.first()), Some(\"Some<i32>(T) -> Option<T>\"));\n+        assert_eq!(trim_markup_opt(hover.info.first()), Some(\"Some\"));\n+\n+        let (analysis, position) = single_file_with_position(\n+            \"\n+            enum Option<T> { Some(T) }\n+            use Option::Some;\n+\n+            fn main() {\n+                let b<|>ar = Some(12);\n+            }\n+            \",\n+        );\n+        let hover = analysis.hover(position).unwrap().unwrap();\n+        assert_eq!(trim_markup_opt(hover.info.first()), Some(\"Option<i32>\"));\n+    }\n+\n+    #[test]\n+    fn hover_enum_variant() {\n+        check_hover_result(\n+            r#\"\n+            //- /main.rs\n+            enum Option<T> {\n+                /// The None variant\n+                Non<|>e\n+            }\n+        \"#,\n+            &[\"\n+None\n+```\n+\n+The None variant\n+            \"\n+            .trim()],\n+        );\n+\n+        check_hover_result(\n+            r#\"\n+            //- /main.rs\n+            enum Option<T> {\n+                /// The Some variant\n+                Some(T)\n+            }\n+            fn main() {\n+                let s = Option::Som<|>e(12);\n+            }\n+        \"#,\n+            &[\"\n+Some\n+```\n+\n+The Some variant\n+            \"\n+            .trim()],\n+        );\n     }\n \n     #[test]"}]}