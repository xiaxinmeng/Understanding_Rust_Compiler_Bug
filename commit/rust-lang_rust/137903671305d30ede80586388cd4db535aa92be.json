{"sha": "137903671305d30ede80586388cd4db535aa92be", "node_id": "C_kwDOAAsO6NoAKDEzNzkwMzY3MTMwNWQzMGVkZTgwNTg2Mzg4Y2Q0ZGI1MzVhYTkyYmU", "commit": {"author": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2022-06-05T09:37:40Z"}, "committer": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2022-06-06T18:16:01Z"}, "message": "Simplify known C++20 inconsistency test", "tree": {"sha": "4b7e95930e8e7a6f0be8e68245a8c886ef6dff53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b7e95930e8e7a6f0be8e68245a8c886ef6dff53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/137903671305d30ede80586388cd4db535aa92be", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE7dcbcBMl24/h63ldGBtJ+fOPM3QFAmKeRGEACgkQGBtJ+fOP\nM3RT2QwAiyJu9XpSG7zBcri0+E4w/5XGbAstoS6z0i2gW9OWTNi3tpIhQFSUJ1ty\nc29BTa5W4hLoxrVvzjmab6Z4PsjFGkifdOisEXLK2oztrdYO8x4Ktb6XzvBk8DDL\nAIgI71Ew+gjMgnCBJVPewIVBBM2btkjnnnLfSCz7BFYsnYmRa+/BF6RmKycgjSHk\nfArugzkzVLZJGo29u4joRFBaQri9g51WU8Ep+3qTE75y5Nu+dGD072lOKtqLi/0W\ngdKYwGjeucuWdokADtwSgu9dFcWm5LsEjbRGyhfMrKXSHR6bILWTfSV0S7CYgg62\n7MxRycSwxqMeF78l9wtQi7p2+uFFgkvzH73/l4dDFKaZP6PjfD13TPB6SXpD492/\nlRvvpjZMLGsb28nEZdgQOz5Bb0Hb79/tbJG3HYA47Kpht65vKxsPvLUmc3xEW9fC\nQmUoJD7f0b3hiHrztkkOQJN+wQOp0jsfk7kS54OX9YQzVEkXDOgUCvku29OdlOzB\n7K5owqJU\n=y5uf\n-----END PGP SIGNATURE-----", "payload": "tree 4b7e95930e8e7a6f0be8e68245a8c886ef6dff53\nparent 65f39bd5cf708c5d934ccb6d20efa7b9e54bab2a\nauthor Andy Wang <cbeuw.andy@gmail.com> 1654421860 +0100\ncommitter Andy Wang <cbeuw.andy@gmail.com> 1654539361 +0100\n\nSimplify known C++20 inconsistency test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/137903671305d30ede80586388cd4db535aa92be", "html_url": "https://github.com/rust-lang/rust/commit/137903671305d30ede80586388cd4db535aa92be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/137903671305d30ede80586388cd4db535aa92be/comments", "author": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65f39bd5cf708c5d934ccb6d20efa7b9e54bab2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/65f39bd5cf708c5d934ccb6d20efa7b9e54bab2a", "html_url": "https://github.com/rust-lang/rust/commit/65f39bd5cf708c5d934ccb6d20efa7b9e54bab2a"}], "stats": {"total": 37, "additions": 9, "deletions": 28}, "files": [{"sha": "e5192cd0d6706214e07090da453d240c9979ed32", "filename": "tests/fail/should-pass/cpp20_rwc_syncs.rs", "status": "renamed", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/137903671305d30ede80586388cd4db535aa92be/tests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/137903671305d30ede80586388cd4db535aa92be/tests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.rs?ref=137903671305d30ede80586388cd4db535aa92be", "patch": "@@ -1,5 +1,6 @@\n // ignore-windows: Concurrency on Windows is not supported yet.\n // compile-flags: -Zmiri-ignore-leaks\n+// error-pattern:\n \n // https://plv.mpi-sws.org/scfix/paper.pdf\n // 2.2 Second Problem: SC Fences are Too Weak\n@@ -70,12 +71,12 @@ fn test_cpp20_rwc_syncs() {\n     let b = j2.join().unwrap();\n     let c = j3.join().unwrap();\n \n+    // We cannot write assert_ne!() since ui_test's fail\n+    // tests expect exit status 1, whereas panics produce 101.\n+    // Our ui_test does not yet support overriding failure status codes.\n     if (b, c) == (0, 0) {\n-        // FIXME: the standalone compiletest-rs needs to support\n-        // failure-status header to allow us to write assert_ne!((b, c), (0, 0))\n-        // https://rustc-dev-guide.rust-lang.org/tests/headers.html#miscellaneous-headers\n-        // because panic exits with 101 but compile-rs expects 1\n-        let _ = unsafe { std::mem::MaybeUninit::<*const u32>::uninit().assume_init() }; //~ ERROR uninitialized\n+        // This *should* be unreachable, but Miri will reach it.\n+        std::process::exit(1);\n     }\n }\n ", "previous_filename": "tests/fail/weak_memory/cpp20_rwc_syncs.rs"}, {"sha": "9fe6daa778c1fc66489c84ab4c37b05f227b1e52", "filename": "tests/fail/should-pass/cpp20_rwc_syncs.stderr", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/137903671305d30ede80586388cd4db535aa92be/tests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/137903671305d30ede80586388cd4db535aa92be/tests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshould-pass%2Fcpp20_rwc_syncs.stderr?ref=137903671305d30ede80586388cd4db535aa92be", "patch": "@@ -0,0 +1,3 @@\n+warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n+         (see https://github.com/rust-lang/miri/issues/1388)\n+"}, {"sha": "f4f467120e8a43ca857411324e1113b2c1dcb2d6", "filename": "tests/fail/weak_memory/cpp20_rwc_syncs.stderr", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/65f39bd5cf708c5d934ccb6d20efa7b9e54bab2a/tests%2Ffail%2Fweak_memory%2Fcpp20_rwc_syncs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65f39bd5cf708c5d934ccb6d20efa7b9e54bab2a/tests%2Ffail%2Fweak_memory%2Fcpp20_rwc_syncs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fweak_memory%2Fcpp20_rwc_syncs.stderr?ref=65f39bd5cf708c5d934ccb6d20efa7b9e54bab2a", "patch": "@@ -1,23 +0,0 @@\n-warning: thread support is experimental: the scheduler is not preemptive, and can get stuck in spin loops.\n-         (see https://github.com/rust-lang/miri/issues/1388)\n-\n-error: Undefined Behavior: type validation failed at .value: encountered uninitialized raw pointer\n-  --> $DIR/cpp20_rwc_syncs.rs:LL:CC\n-   |\n-LL |         let _ = unsafe { std::mem::MaybeUninit::<*const u32>::uninit().assume_init() };\n-   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .value: encountered uninitialized raw pointer\n-   |\n-   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n-   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n-           \n-   = note: inside `test_cpp20_rwc_syncs` at $DIR/cpp20_rwc_syncs.rs:LL:CC\n-note: inside `main` at $DIR/cpp20_rwc_syncs.rs:LL:CC\n-  --> $DIR/cpp20_rwc_syncs.rs:LL:CC\n-   |\n-LL |         test_cpp20_rwc_syncs();\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n-\n-note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n-\n-error: aborting due to previous error; 1 warning emitted\n-"}]}