{"sha": "a7eabec1df53fe726455c8088ecc0da07dd4009d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZWFiZWMxZGY1M2ZlNzI2NDU1YzgwODhlY2MwZGEwN2RkNDAwOWQ=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-08-04T21:26:23Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-08-06T19:55:26Z"}, "message": "Add some comments for magic numbers + Add tests", "tree": {"sha": "3494aeee3178bc77e4baa113e5d03492986fb721", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3494aeee3178bc77e4baa113e5d03492986fb721"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7eabec1df53fe726455c8088ecc0da07dd4009d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7eabec1df53fe726455c8088ecc0da07dd4009d", "html_url": "https://github.com/rust-lang/rust/commit/a7eabec1df53fe726455c8088ecc0da07dd4009d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7eabec1df53fe726455c8088ecc0da07dd4009d/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b25c50ed467396c367d41eca6b8248136140974", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b25c50ed467396c367d41eca6b8248136140974", "html_url": "https://github.com/rust-lang/rust/commit/6b25c50ed467396c367d41eca6b8248136140974"}], "stats": {"total": 85, "additions": 84, "deletions": 1}, "files": [{"sha": "c3a79660eb9b9fb15e2d6dc3c00dc532673a1771", "filename": "src/librustc_parse/lexer/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a7eabec1df53fe726455c8088ecc0da07dd4009d/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7eabec1df53fe726455c8088ecc0da07dd4009d/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flexer%2Fmod.rs?ref=a7eabec1df53fe726455c8088ecc0da07dd4009d", "patch": "@@ -172,6 +172,7 @@ impl<'a> StringReader<'a> {\n                 let string = self.str_from(start);\n                 if let Some(attr_style) = comments::line_doc_comment_style(string) {\n                     self.forbid_bare_cr(start, string, \"bare CR not allowed in doc-comment\");\n+                    // Opening delimiter of the length 3 is not included into the symbol.\n                     token::DocComment(CommentKind::Line, attr_style, Symbol::intern(&string[3..]))\n                 } else {\n                     token::Comment\n@@ -201,6 +202,8 @@ impl<'a> StringReader<'a> {\n \n                 if let Some(attr_style) = attr_style {\n                     self.forbid_bare_cr(start, string, \"bare CR not allowed in block doc-comment\");\n+                    // Opening delimiter of the length 3 and closing delimiter of the length 2\n+                    // are not included into the symbol.\n                     token::DocComment(\n                         CommentKind::Block,\n                         attr_style,"}, {"sha": "c2724ae18066a2bad5d6f154783198032d03f2b6", "filename": "src/test/ui/proc-macro/doc-comment-preserved.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a7eabec1df53fe726455c8088ecc0da07dd4009d/src%2Ftest%2Fui%2Fproc-macro%2Fdoc-comment-preserved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7eabec1df53fe726455c8088ecc0da07dd4009d/src%2Ftest%2Fui%2Fproc-macro%2Fdoc-comment-preserved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdoc-comment-preserved.rs?ref=a7eabec1df53fe726455c8088ecc0da07dd4009d", "patch": "@@ -0,0 +1,24 @@\n+// check-pass\n+// aux-build:test-macros.rs\n+\n+// Anonymize unstable non-dummy spans while still showing dummy spans `0..0`.\n+// normalize-stdout-test \"bytes\\([^0]\\w*\\.\\.(\\w+)\\)\" -> \"bytes(LO..$1)\"\n+// normalize-stdout-test \"bytes\\((\\w+)\\.\\.[^0]\\w*\\)\" -> \"bytes($1..HI)\"\n+\n+#[macro_use]\n+extern crate test_macros;\n+\n+print_bang! {\n+\n+/**\n+*******\n+* DOC *\n+* DOC *\n+* DOC *\n+*******\n+*/\n+pub struct S;\n+\n+}\n+\n+fn main() {}"}, {"sha": "f7904536a76131d7b8a5fca777eeb61a9dfdbfd7", "filename": "src/test/ui/proc-macro/doc-comment-preserved.stdout", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/a7eabec1df53fe726455c8088ecc0da07dd4009d/src%2Ftest%2Fui%2Fproc-macro%2Fdoc-comment-preserved.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a7eabec1df53fe726455c8088ecc0da07dd4009d/src%2Ftest%2Fui%2Fproc-macro%2Fdoc-comment-preserved.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdoc-comment-preserved.stdout?ref=a7eabec1df53fe726455c8088ecc0da07dd4009d", "patch": "@@ -0,0 +1,54 @@\n+PRINT-BANG INPUT (DISPLAY): /**\n+*******\n+* DOC *\n+* DOC *\n+* DOC *\n+*******\n+*/\n+ pub struct S ;\n+PRINT-BANG RE-COLLECTED (DISPLAY): #[doc = \"\\n*******\\n* DOC *\\n* DOC *\\n* DOC *\\n*******\\n\"] pub struct S ;\n+PRINT-BANG INPUT (DEBUG): TokenStream [\n+    Punct {\n+        ch: '#',\n+        spacing: Alone,\n+        span: #0 bytes(LO..HI),\n+    },\n+    Group {\n+        delimiter: Bracket,\n+        stream: TokenStream [\n+            Ident {\n+                ident: \"doc\",\n+                span: #0 bytes(LO..HI),\n+            },\n+            Punct {\n+                ch: '=',\n+                spacing: Alone,\n+                span: #0 bytes(LO..HI),\n+            },\n+            Literal {\n+                kind: Str,\n+                symbol: \"\\n*******\\n* DOC *\\n* DOC *\\n* DOC *\\n*******\\n\",\n+                suffix: None,\n+                span: #0 bytes(LO..HI),\n+            },\n+        ],\n+        span: #0 bytes(LO..HI),\n+    },\n+    Ident {\n+        ident: \"pub\",\n+        span: #0 bytes(LO..HI),\n+    },\n+    Ident {\n+        ident: \"struct\",\n+        span: #0 bytes(LO..HI),\n+    },\n+    Ident {\n+        ident: \"S\",\n+        span: #0 bytes(LO..HI),\n+    },\n+    Punct {\n+        ch: ';',\n+        spacing: Alone,\n+        span: #0 bytes(LO..HI),\n+    },\n+]"}, {"sha": "6ce36fd2360e1e9569cb748e566a3b38ce57ef4a", "filename": "src/tools/clippy/clippy_lints/src/doc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a7eabec1df53fe726455c8088ecc0da07dd4009d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7eabec1df53fe726455c8088ecc0da07dd4009d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdoc.rs?ref=a7eabec1df53fe726455c8088ecc0da07dd4009d", "patch": "@@ -264,6 +264,7 @@ pub fn strip_doc_comment_decoration(doc: &str, comment_kind: CommentKind, span:\n         let mut doc = doc.to_owned();\n         doc.push('\\n');\n         let len = doc.len();\n+        // +3 skips the opening delimiter\n         return (doc, vec![(len, span.with_lo(span.lo() + BytePos(3)))]);\n     }\n \n@@ -273,7 +274,7 @@ pub fn strip_doc_comment_decoration(doc: &str, comment_kind: CommentKind, span:\n         let offset = line.as_ptr() as usize - doc.as_ptr() as usize;\n         debug_assert_eq!(offset as u32 as usize, offset);\n         contains_initial_stars |= line.trim_start().starts_with('*');\n-        // +1 for the newline\n+        // +1 adds the newline, +3 skips the opening delimiter\n         sizes.push((line.len() + 1, span.with_lo(span.lo() + BytePos(3 + offset as u32))));\n     }\n     if !contains_initial_stars {"}, {"sha": "74ccd9235de85d847daf593d4cc3a0018db586b1", "filename": "src/tools/clippy/clippy_lints/src/tabs_in_doc_comments.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a7eabec1df53fe726455c8088ecc0da07dd4009d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7eabec1df53fe726455c8088ecc0da07dd4009d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs?ref=a7eabec1df53fe726455c8088ecc0da07dd4009d", "patch": "@@ -64,6 +64,7 @@ impl TabsInDocComments {\n             let comment = comment.as_str();\n \n             for (lo, hi) in get_chunks_of_tabs(&comment) {\n+                // +3 skips the opening delimiter\n                 let new_span = Span::new(\n                     attr.span.lo() + BytePos(3 + lo),\n                     attr.span.lo() + BytePos(3 + hi),"}]}