{"sha": "636270f4a4f80f5d24571147bcadfbeaa29310a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNjI3MGY0YTRmODBmNWQyNDU3MTE0N2JjYWRmYmVhYTI5MzEwYTA=", "commit": {"author": {"name": "robojumper", "email": "robojumper@gmail.com", "date": "2019-04-03T15:11:56Z"}, "committer": {"name": "robojumper", "email": "robojumper@gmail.com", "date": "2019-04-03T15:11:56Z"}, "message": "Parse unsafe async / const unsafe fns properly", "tree": {"sha": "777c9aeef61ae26cba2b589eaa42686c4020fad6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/777c9aeef61ae26cba2b589eaa42686c4020fad6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/636270f4a4f80f5d24571147bcadfbeaa29310a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/636270f4a4f80f5d24571147bcadfbeaa29310a0", "html_url": "https://github.com/rust-lang/rust/commit/636270f4a4f80f5d24571147bcadfbeaa29310a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/636270f4a4f80f5d24571147bcadfbeaa29310a0/comments", "author": {"login": "robojumper", "id": 14299449, "node_id": "MDQ6VXNlcjE0Mjk5NDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14299449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robojumper", "html_url": "https://github.com/robojumper", "followers_url": "https://api.github.com/users/robojumper/followers", "following_url": "https://api.github.com/users/robojumper/following{/other_user}", "gists_url": "https://api.github.com/users/robojumper/gists{/gist_id}", "starred_url": "https://api.github.com/users/robojumper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robojumper/subscriptions", "organizations_url": "https://api.github.com/users/robojumper/orgs", "repos_url": "https://api.github.com/users/robojumper/repos", "events_url": "https://api.github.com/users/robojumper/events{/privacy}", "received_events_url": "https://api.github.com/users/robojumper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "robojumper", "id": 14299449, "node_id": "MDQ6VXNlcjE0Mjk5NDQ5", "avatar_url": "https://avatars.githubusercontent.com/u/14299449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robojumper", "html_url": "https://github.com/robojumper", "followers_url": "https://api.github.com/users/robojumper/followers", "following_url": "https://api.github.com/users/robojumper/following{/other_user}", "gists_url": "https://api.github.com/users/robojumper/gists{/gist_id}", "starred_url": "https://api.github.com/users/robojumper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robojumper/subscriptions", "organizations_url": "https://api.github.com/users/robojumper/orgs", "repos_url": "https://api.github.com/users/robojumper/repos", "events_url": "https://api.github.com/users/robojumper/events{/privacy}", "received_events_url": "https://api.github.com/users/robojumper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6c88070c4f25cd3710f03b7461cb277de8d3cc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6c88070c4f25cd3710f03b7461cb277de8d3cc5", "html_url": "https://github.com/rust-lang/rust/commit/c6c88070c4f25cd3710f03b7461cb277de8d3cc5"}], "stats": {"total": 101, "additions": 95, "deletions": 6}, "files": [{"sha": "318fd69a1a7c59362b87db66ea7e0f6e7b71646f", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/636270f4a4f80f5d24571147bcadfbeaa29310a0/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/636270f4a4f80f5d24571147bcadfbeaa29310a0/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=636270f4a4f80f5d24571147bcadfbeaa29310a0", "patch": "@@ -79,19 +79,22 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n     let mut has_mods = false;\n \n     // modifiers\n-    // test_err async_without_semicolon\n-    // fn foo() { let _ = async {} }\n     has_mods |= p.eat(CONST_KW);\n-    if p.at(ASYNC_KW) && p.nth(1) != L_CURLY && p.nth(1) != MOVE_KW && p.nth(1) != PIPE {\n-        p.eat(ASYNC_KW);\n-        has_mods = true;\n-    }\n+\n     // test_err unsafe_block_in_mod\n     // fn foo(){} unsafe { } fn bar(){}\n     if p.at(UNSAFE_KW) && p.nth(1) != L_CURLY {\n         p.eat(UNSAFE_KW);\n         has_mods = true;\n     }\n+\n+    // test_err async_without_semicolon\n+    // fn foo() { let _ = async {} }\n+    if p.at(ASYNC_KW) && p.nth(1) != L_CURLY && p.nth(1) != MOVE_KW && p.nth(1) != PIPE {\n+        p.eat(ASYNC_KW);\n+        has_mods = true;\n+    }\n+\n     if p.at(EXTERN_KW) {\n         has_mods = true;\n         abi(p);\n@@ -124,6 +127,14 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n \n         // test unsafe_fn\n         // unsafe fn foo() {}\n+\n+        // test combined_fns\n+        // unsafe async fn foo() {}\n+        // const unsafe fn bar() {}\n+\n+        // test_err wrong_order_fns\n+        // async unsafe fn foo() {}\n+        // unsafe const fn bar() {}\n         FN_KW => {\n             fn_def(p, flavor);\n             m.complete(p, FN_DEF);"}, {"sha": "16edee95d7af3a4616d57485d16273c6228de74a", "filename": "crates/ra_syntax/tests/data/parser/inline/err/0010_wrong_order_fns.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/636270f4a4f80f5d24571147bcadfbeaa29310a0/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/636270f4a4f80f5d24571147bcadfbeaa29310a0/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rs?ref=636270f4a4f80f5d24571147bcadfbeaa29310a0", "patch": "@@ -0,0 +1,2 @@\n+async unsafe fn foo() {}\n+unsafe const fn bar() {}"}, {"sha": "220191ffa66e420561eb173b836c63971fb86895", "filename": "crates/ra_syntax/tests/data/parser/inline/err/0010_wrong_order_fns.txt", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/636270f4a4f80f5d24571147bcadfbeaa29310a0/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.txt", "raw_url": "https://github.com/rust-lang/rust/raw/636270f4a4f80f5d24571147bcadfbeaa29310a0/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.txt?ref=636270f4a4f80f5d24571147bcadfbeaa29310a0", "patch": "@@ -0,0 +1,39 @@\n+SOURCE_FILE@[0; 50)\n+  ERROR@[0; 5)\n+    ASYNC_KW@[0; 5) \"async\"\n+    err: `expected fn, trait or impl`\n+  WHITESPACE@[5; 6) \" \"\n+  FN_DEF@[6; 24)\n+    UNSAFE_KW@[6; 12) \"unsafe\"\n+    WHITESPACE@[12; 13) \" \"\n+    FN_KW@[13; 15) \"fn\"\n+    WHITESPACE@[15; 16) \" \"\n+    NAME@[16; 19)\n+      IDENT@[16; 19) \"foo\"\n+    PARAM_LIST@[19; 21)\n+      L_PAREN@[19; 20) \"(\"\n+      R_PAREN@[20; 21) \")\"\n+    WHITESPACE@[21; 22) \" \"\n+    BLOCK@[22; 24)\n+      L_CURLY@[22; 23) \"{\"\n+      R_CURLY@[23; 24) \"}\"\n+  WHITESPACE@[24; 25) \"\\n\"\n+  ERROR@[25; 31)\n+    UNSAFE_KW@[25; 31) \"unsafe\"\n+    err: `expected fn, trait or impl`\n+  WHITESPACE@[31; 32) \" \"\n+  FN_DEF@[32; 49)\n+    CONST_KW@[32; 37) \"const\"\n+    WHITESPACE@[37; 38) \" \"\n+    FN_KW@[38; 40) \"fn\"\n+    WHITESPACE@[40; 41) \" \"\n+    NAME@[41; 44)\n+      IDENT@[41; 44) \"bar\"\n+    PARAM_LIST@[44; 46)\n+      L_PAREN@[44; 45) \"(\"\n+      R_PAREN@[45; 46) \")\"\n+    WHITESPACE@[46; 47) \" \"\n+    BLOCK@[47; 49)\n+      L_CURLY@[47; 48) \"{\"\n+      R_CURLY@[48; 49) \"}\"\n+  WHITESPACE@[49; 50) \"\\n\""}, {"sha": "46af91b827a55c74fdb6dd476ddb76799e1f0e1d", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0128_combined_fns.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/636270f4a4f80f5d24571147bcadfbeaa29310a0/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0128_combined_fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/636270f4a4f80f5d24571147bcadfbeaa29310a0/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0128_combined_fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0128_combined_fns.rs?ref=636270f4a4f80f5d24571147bcadfbeaa29310a0", "patch": "@@ -0,0 +1,2 @@\n+unsafe async fn foo() {}\n+const unsafe fn bar() {}"}, {"sha": "2a16aeb6174313a166743e4b3eabacbdf75875e8", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0128_combined_fns.txt", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/636270f4a4f80f5d24571147bcadfbeaa29310a0/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0128_combined_fns.txt", "raw_url": "https://github.com/rust-lang/rust/raw/636270f4a4f80f5d24571147bcadfbeaa29310a0/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0128_combined_fns.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0128_combined_fns.txt?ref=636270f4a4f80f5d24571147bcadfbeaa29310a0", "patch": "@@ -0,0 +1,35 @@\n+SOURCE_FILE@[0; 50)\n+  FN_DEF@[0; 24)\n+    UNSAFE_KW@[0; 6) \"unsafe\"\n+    WHITESPACE@[6; 7) \" \"\n+    ASYNC_KW@[7; 12) \"async\"\n+    WHITESPACE@[12; 13) \" \"\n+    FN_KW@[13; 15) \"fn\"\n+    WHITESPACE@[15; 16) \" \"\n+    NAME@[16; 19)\n+      IDENT@[16; 19) \"foo\"\n+    PARAM_LIST@[19; 21)\n+      L_PAREN@[19; 20) \"(\"\n+      R_PAREN@[20; 21) \")\"\n+    WHITESPACE@[21; 22) \" \"\n+    BLOCK@[22; 24)\n+      L_CURLY@[22; 23) \"{\"\n+      R_CURLY@[23; 24) \"}\"\n+  WHITESPACE@[24; 25) \"\\n\"\n+  FN_DEF@[25; 49)\n+    CONST_KW@[25; 30) \"const\"\n+    WHITESPACE@[30; 31) \" \"\n+    UNSAFE_KW@[31; 37) \"unsafe\"\n+    WHITESPACE@[37; 38) \" \"\n+    FN_KW@[38; 40) \"fn\"\n+    WHITESPACE@[40; 41) \" \"\n+    NAME@[41; 44)\n+      IDENT@[41; 44) \"bar\"\n+    PARAM_LIST@[44; 46)\n+      L_PAREN@[44; 45) \"(\"\n+      R_PAREN@[45; 46) \")\"\n+    WHITESPACE@[46; 47) \" \"\n+    BLOCK@[47; 49)\n+      L_CURLY@[47; 48) \"{\"\n+      R_CURLY@[48; 49) \"}\"\n+  WHITESPACE@[49; 50) \"\\n\""}]}