{"sha": "7510048ec0a5d5e7136e3ea258954eb244d15baf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1MTAwNDhlYzBhNWQ1ZTcxMzZlM2VhMjU4OTU0ZWIyNDRkMTViYWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-12T14:58:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-12T14:58:56Z"}, "message": "Cleanup TextEdit API", "tree": {"sha": "97a472bf38e4e3e079db27abf1f2c7b523a0d0b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97a472bf38e4e3e079db27abf1f2c7b523a0d0b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7510048ec0a5d5e7136e3ea258954eb244d15baf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7510048ec0a5d5e7136e3ea258954eb244d15baf", "html_url": "https://github.com/rust-lang/rust/commit/7510048ec0a5d5e7136e3ea258954eb244d15baf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7510048ec0a5d5e7136e3ea258954eb244d15baf/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d34262956059aca7e6fded351a9299b3581a5cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d34262956059aca7e6fded351a9299b3581a5cf", "html_url": "https://github.com/rust-lang/rust/commit/8d34262956059aca7e6fded351a9299b3581a5cf"}], "stats": {"total": 58, "additions": 34, "deletions": 24}, "files": [{"sha": "daa872546405ebedc0f93842a3c0e0c5774caf12", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7510048ec0a5d5e7136e3ea258954eb244d15baf/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/7510048ec0a5d5e7136e3ea258954eb244d15baf/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=7510048ec0a5d5e7136e3ea258954eb244d15baf", "patch": "@@ -1205,7 +1205,7 @@ dependencies = [\n \n [[package]]\n name = \"ra_text_edit\"\n-version = \"0.1.0\"\n+version = \"0.0.0\"\n dependencies = [\n  \"text-size\",\n ]"}, {"sha": "afba860d1dcf7c8c326cfd5e3f85965d549d8202", "filename": "crates/ra_assists/src/assist_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_context.rs?ref=7510048ec0a5d5e7136e3ea258954eb244d15baf", "patch": "@@ -15,7 +15,7 @@ use ra_syntax::{\n     AstNode, SourceFile, SyntaxElement, SyntaxKind, SyntaxNode, SyntaxToken, TextRange, TextSize,\n     TokenAtOffset,\n };\n-use ra_text_edit::TextEditBuilder;\n+use ra_text_edit::{TextEdit, TextEditBuilder};\n \n use crate::{\n     assist_config::{AssistConfig, SnippetCap},\n@@ -214,7 +214,7 @@ pub(crate) struct AssistBuilder {\n impl AssistBuilder {\n     pub(crate) fn new(file_id: FileId) -> AssistBuilder {\n         AssistBuilder {\n-            edit: TextEditBuilder::default(),\n+            edit: TextEdit::builder(),\n             file_id,\n             is_snippet: false,\n             change: SourceChange::default(),"}, {"sha": "e006c777548583699ac11534f19b9972ff9ec1d1", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=7510048ec0a5d5e7136e3ea258954eb244d15baf", "patch": "@@ -14,7 +14,7 @@ use ra_syntax::{\n     ast::{self, AstNode},\n     SyntaxNode, TextRange, T,\n };\n-use ra_text_edit::{TextEdit, TextEditBuilder};\n+use ra_text_edit::TextEdit;\n \n use crate::{Diagnostic, FileId, Fix, SourceFileEdit};\n \n@@ -103,7 +103,7 @@ fn check_unnecessary_braces_in_use_statement(\n             text_edit_for_remove_unnecessary_braces_with_self_in_use_statement(&single_use_tree)\n                 .unwrap_or_else(|| {\n                     let to_replace = single_use_tree.syntax().text().to_string();\n-                    let mut edit_builder = TextEditBuilder::default();\n+                    let mut edit_builder = TextEdit::builder();\n                     edit_builder.delete(use_range);\n                     edit_builder.insert(use_range.start(), to_replace);\n                     edit_builder.finish()\n@@ -149,7 +149,7 @@ fn check_struct_shorthand_initialization(\n             let field_expr = expr.syntax().text().to_string();\n             let field_name_is_tup_index = name_ref.as_tuple_field().is_some();\n             if field_name == field_expr && !field_name_is_tup_index {\n-                let mut edit_builder = TextEditBuilder::default();\n+                let mut edit_builder = TextEdit::builder();\n                 edit_builder.delete(record_field.syntax().text_range());\n                 edit_builder.insert(record_field.syntax().text_range().start(), field_name);\n                 let edit = edit_builder.finish();"}, {"sha": "88e593e0039daf89b2306fe91d3a73f31ffb5d44", "filename": "crates/ra_ide/src/diagnostics/diagnostics_with_fix.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs?ref=7510048ec0a5d5e7136e3ea258954eb244d15baf", "patch": "@@ -13,7 +13,7 @@ use ra_ide_db::{\n     RootDatabase,\n };\n use ra_syntax::{algo, ast, AstNode};\n-use ra_text_edit::{TextEdit, TextEditBuilder};\n+use ra_text_edit::TextEdit;\n \n /// A [Diagnostic] that potentially has a fix available.\n ///\n@@ -70,7 +70,7 @@ impl DiagnosticWithFix for MissingFields {\n         }\n \n         let edit = {\n-            let mut builder = TextEditBuilder::default();\n+            let mut builder = TextEdit::builder();\n             algo::diff(&old_field_list.syntax(), &new_field_list.syntax())\n                 .into_text_edit(&mut builder);\n             builder.finish()"}, {"sha": "1c881386f7dd90bb6677d9f1ad1f4be5e1b00489", "filename": "crates/ra_ide/src/join_lines.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs?ref=7510048ec0a5d5e7136e3ea258954eb244d15baf", "patch": "@@ -23,7 +23,7 @@ pub fn join_lines(file: &SourceFile, range: TextRange) -> TextEdit {\n         let syntax = file.syntax();\n         let text = syntax.text().slice(range.start()..);\n         let pos = match text.find_char('\\n') {\n-            None => return TextEditBuilder::default().finish(),\n+            None => return TextEdit::builder().finish(),\n             Some(pos) => pos,\n         };\n         TextRange::at(range.start() + pos, TextSize::of('\\n'))\n@@ -35,7 +35,7 @@ pub fn join_lines(file: &SourceFile, range: TextRange) -> TextEdit {\n         NodeOrToken::Node(node) => node,\n         NodeOrToken::Token(token) => token.parent(),\n     };\n-    let mut edit = TextEditBuilder::default();\n+    let mut edit = TextEdit::builder();\n     for token in node.descendants_with_tokens().filter_map(|it| it.into_token()) {\n         let range = match range.intersect(token.text_range()) {\n             Some(range) => range,"}, {"sha": "8c1ac3c5601a18965f718d75d41a090ff9e3fc2d", "filename": "crates/ra_ide/src/references/rename.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs?ref=7510048ec0a5d5e7136e3ea258954eb244d15baf", "patch": "@@ -281,7 +281,7 @@ mod tests {\n         let ra_fixture_after = &trim_indent(ra_fixture_after);\n         let (analysis, position) = analysis_and_position(ra_fixture_before);\n         let source_change = analysis.rename(position, new_name).unwrap();\n-        let mut text_edit_builder = TextEditBuilder::default();\n+        let mut text_edit_builder = TextEdit::builder();\n         let mut file_id: Option<FileId> = None;\n         if let Some(change) = source_change {\n             for edit in change.info.source_file_edits {"}, {"sha": "36ced3842da136c53b7d843dbc126a3a3320c391", "filename": "crates/ra_ssr/src/replacing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_ssr%2Fsrc%2Freplacing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_ssr%2Fsrc%2Freplacing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Freplacing.rs?ref=7510048ec0a5d5e7136e3ea258954eb244d15baf", "patch": "@@ -24,7 +24,7 @@ fn matches_to_edit_at_offset(\n     relative_start: TextSize,\n     rules: &[ResolvedRule],\n ) -> TextEdit {\n-    let mut edit_builder = ra_text_edit::TextEditBuilder::default();\n+    let mut edit_builder = TextEdit::builder();\n     for m in &matches.matches {\n         edit_builder.replace(\n             m.range.range.checked_sub(relative_start).unwrap(),"}, {"sha": "427862a5cc568f4af675f4d6b9b3e8ce2a8359cd", "filename": "crates/ra_text_edit/Cargo.toml", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_text_edit%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_text_edit%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_text_edit%2FCargo.toml?ref=7510048ec0a5d5e7136e3ea258954eb244d15baf", "patch": "@@ -1,10 +1,9 @@\n [package]\n-edition = \"2018\"\n name = \"ra_text_edit\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n-publish = false\n+version = \"0.0.0\"\n license = \"MIT OR Apache-2.0\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false"}, {"sha": "ab8cd7fd1197a3b7cede4bc5759fd1f2de2f1965", "filename": "crates/ra_text_edit/src/lib.rs", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_text_edit%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7510048ec0a5d5e7136e3ea258954eb244d15baf/crates%2Fra_text_edit%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_text_edit%2Fsrc%2Flib.rs?ref=7510048ec0a5d5e7136e3ea258954eb244d15baf", "patch": "@@ -3,8 +3,6 @@\n //! `rust-analyzer` never mutates text itself and only sends diffs to clients,\n //! so `TextEdit` is the ultimate representation of the work done by\n //! rust-analyzer.\n-use std::{slice, vec};\n-\n pub use text_size::{TextRange, TextSize};\n \n /// `InsertDelete` -- a single \"atomic\" change to text\n@@ -46,20 +44,24 @@ impl Indel {\n }\n \n impl TextEdit {\n+    pub fn builder() -> TextEditBuilder {\n+        TextEditBuilder::default()\n+    }\n+\n     pub fn insert(offset: TextSize, text: String) -> TextEdit {\n-        let mut builder = TextEditBuilder::default();\n+        let mut builder = TextEdit::builder();\n         builder.insert(offset, text);\n         builder.finish()\n     }\n \n     pub fn delete(range: TextRange) -> TextEdit {\n-        let mut builder = TextEditBuilder::default();\n+        let mut builder = TextEdit::builder();\n         builder.delete(range);\n         builder.finish()\n     }\n \n     pub fn replace(range: TextRange, replace_with: String) -> TextEdit {\n-        let mut builder = TextEditBuilder::default();\n+        let mut builder = TextEdit::builder();\n         builder.replace(range, replace_with);\n         builder.finish()\n     }\n@@ -72,8 +74,8 @@ impl TextEdit {\n         self.indels.is_empty()\n     }\n \n-    pub fn iter(&self) -> slice::Iter<'_, Indel> {\n-        self.indels.iter()\n+    pub fn iter(&self) -> std::slice::Iter<'_, Indel> {\n+        self.into_iter()\n     }\n \n     pub fn apply(&self, text: &mut String) {\n@@ -139,13 +141,22 @@ impl TextEdit {\n \n impl IntoIterator for TextEdit {\n     type Item = Indel;\n-    type IntoIter = vec::IntoIter<Self::Item>;\n+    type IntoIter = std::vec::IntoIter<Indel>;\n \n     fn into_iter(self) -> Self::IntoIter {\n         self.indels.into_iter()\n     }\n }\n \n+impl<'a> IntoIterator for &'a TextEdit {\n+    type Item = &'a Indel;\n+    type IntoIter = std::slice::Iter<'a, Indel>;\n+\n+    fn into_iter(self) -> Self::IntoIter {\n+        self.indels.iter()\n+    }\n+}\n+\n impl TextEditBuilder {\n     pub fn replace(&mut self, range: TextRange, replace_with: String) {\n         self.indels.push(Indel::replace(range, replace_with))"}]}