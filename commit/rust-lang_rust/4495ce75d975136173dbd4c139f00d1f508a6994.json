{"sha": "4495ce75d975136173dbd4c139f00d1f508a6994", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0OTVjZTc1ZDk3NTEzNjE3M2RiZDRjMTM5ZjAwZDFmNTA4YTY5OTQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-21T22:37:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-21T22:37:56Z"}, "message": "Rollup merge of #86493 - Smittyvb:ctor-typeck-error, r=davidtwco\n\nSay \"this enum variant takes\"/\"this struct takes\" instead of \"this function takes\"\n\nThis makes error messages for functions with incorrect argument counts adapt if they refer to a struct or enum variant:\n```\nerror[E0061]: this enum variant takes 1 argument but 0 arguments were supplied\n  --> $DIR/struct-enum-wrong-args.rs:7:13\n   |\nLL |     let _ = Ok();\n   |             ^^-- supplied 0 arguments\n   |             |\n   |             expected 1 argument\n\nerror[E0061]: this struct takes 1 argument but 0 arguments were supplied\n  --> $DIR/struct-enum-wrong-args.rs:8:13\n   |\nLL |     let _ = Wrapper();\n   |             ^^^^^^^-- supplied 0 arguments\n   |             |\n   |             expected 1 argument\n```\n\nFixes #86481.", "tree": {"sha": "879bd98b662303415d3f267432ae4e92f6fe4e12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/879bd98b662303415d3f267432ae4e92f6fe4e12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4495ce75d975136173dbd4c139f00d1f508a6994", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg0RTECRBK7hj4Ov3rIwAA6mUIAEdxPzOE2mnaDHR/nbMpWf1i\ncNJgc5tY+Sg42HZTF2rfVNPJnrsCy6BQ7i6mham17vT8FGgErOJKAhPsW5jNG3Qt\ngU4GQo+ql1ia3brgOYEXTB5mst9sOwZYZfSTjP1WOZklp3UFHZf4xP+t+IJBR6+i\nO9Guc8qw9WI+3d/NzqgzVX9GI50PcUUgVcxIp3DPhjQUAuKLinT36+lHPu2S+6B2\ni6Fhf6XZAKqSEIhA74Hbv0k6UUoFpaZU1aeJekqp+VkpuxqGB4CwiF/lf02BwhxY\nQPe4sLFlvcEXJCMdV+IAnH5kvP82rAbbbGv5DjnprnIp1nD8j/uE280k4gN2kXo=\n=jZn0\n-----END PGP SIGNATURE-----\n", "payload": "tree 879bd98b662303415d3f267432ae4e92f6fe4e12\nparent fdb1daa00cf73b4f9793bfdc0355d084c7d67b0c\nparent b8a7bfb9f15b26b81f071d8eb1a039489ffce446\nauthor Yuki Okushi <jtitor@2k36.org> 1624315076 +0900\ncommitter GitHub <noreply@github.com> 1624315076 +0900\n\nRollup merge of #86493 - Smittyvb:ctor-typeck-error, r=davidtwco\n\nSay \"this enum variant takes\"/\"this struct takes\" instead of \"this function takes\"\n\nThis makes error messages for functions with incorrect argument counts adapt if they refer to a struct or enum variant:\n```\nerror[E0061]: this enum variant takes 1 argument but 0 arguments were supplied\n  --> $DIR/struct-enum-wrong-args.rs:7:13\n   |\nLL |     let _ = Ok();\n   |             ^^-- supplied 0 arguments\n   |             |\n   |             expected 1 argument\n\nerror[E0061]: this struct takes 1 argument but 0 arguments were supplied\n  --> $DIR/struct-enum-wrong-args.rs:8:13\n   |\nLL |     let _ = Wrapper();\n   |             ^^^^^^^-- supplied 0 arguments\n   |             |\n   |             expected 1 argument\n```\n\nFixes #86481.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4495ce75d975136173dbd4c139f00d1f508a6994", "html_url": "https://github.com/rust-lang/rust/commit/4495ce75d975136173dbd4c139f00d1f508a6994", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4495ce75d975136173dbd4c139f00d1f508a6994/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdb1daa00cf73b4f9793bfdc0355d084c7d67b0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdb1daa00cf73b4f9793bfdc0355d084c7d67b0c", "html_url": "https://github.com/rust-lang/rust/commit/fdb1daa00cf73b4f9793bfdc0355d084c7d67b0c"}, {"sha": "b8a7bfb9f15b26b81f071d8eb1a039489ffce446", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8a7bfb9f15b26b81f071d8eb1a039489ffce446", "html_url": "https://github.com/rust-lang/rust/commit/b8a7bfb9f15b26b81f071d8eb1a039489ffce446"}], "stats": {"total": 113, "additions": 107, "deletions": 6}, "files": [{"sha": "f65cc429fbd48241fdb5423ee8fa47fde73a1d38", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/checks.rs", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4495ce75d975136173dbd4c139f00d1f508a6994/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4495ce75d975136173dbd4c139f00d1f508a6994/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs?ref=4495ce75d975136173dbd4c139f00d1f508a6994", "patch": "@@ -11,7 +11,7 @@ use crate::check::{\n use rustc_ast as ast;\n use rustc_errors::{Applicability, DiagnosticBuilder, DiagnosticId};\n use rustc_hir as hir;\n-use rustc_hir::def::{DefKind, Res};\n+use rustc_hir::def::{CtorOf, DefKind, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::{ExprKind, Node, QPath};\n use rustc_middle::ty::adjustment::AllowTwoPhase;\n@@ -120,8 +120,22 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                  error_code: &str,\n                                  c_variadic: bool,\n                                  sugg_unit: bool| {\n-            let (span, start_span, args) = match &expr.kind {\n-                hir::ExprKind::Call(hir::Expr { span, .. }, args) => (*span, *span, &args[..]),\n+            let (span, start_span, args, ctor_of) = match &expr.kind {\n+                hir::ExprKind::Call(\n+                    hir::Expr {\n+                        span,\n+                        kind:\n+                            hir::ExprKind::Path(hir::QPath::Resolved(\n+                                _,\n+                                hir::Path { res: Res::Def(DefKind::Ctor(of, _), _), .. },\n+                            )),\n+                        ..\n+                    },\n+                    args,\n+                ) => (*span, *span, &args[..], Some(of)),\n+                hir::ExprKind::Call(hir::Expr { span, .. }, args) => {\n+                    (*span, *span, &args[..], None)\n+                }\n                 hir::ExprKind::MethodCall(path_segment, span, args, _) => (\n                     *span,\n                     // `sp` doesn't point at the whole `foo.bar()`, only at `bar`.\n@@ -137,6 +151,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         })\n                         .unwrap_or(*span),\n                     &args[1..], // Skip the receiver.\n+                    None,       // methods are never ctors\n                 ),\n                 k => span_bug!(sp, \"checking argument types on a non-call: `{:?}`\", k),\n             };\n@@ -157,7 +172,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             let mut err = tcx.sess.struct_span_err_with_code(\n                 span,\n                 &format!(\n-                    \"this function takes {}{} but {} {} supplied\",\n+                    \"this {} takes {}{} but {} {} supplied\",\n+                    match ctor_of {\n+                        Some(CtorOf::Struct) => \"struct\",\n+                        Some(CtorOf::Variant) => \"enum variant\",\n+                        None => \"function\",\n+                    },\n                     if c_variadic { \"at least \" } else { \"\" },\n                     potentially_plural_count(expected_count, \"argument\"),\n                     potentially_plural_count(arg_count, \"argument\"),"}, {"sha": "5b9861da6e8544079bcb506ddc7e683f4d76788e", "filename": "src/test/ui/span/missing-unit-argument.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4495ce75d975136173dbd4c139f00d1f508a6994/src%2Ftest%2Fui%2Fspan%2Fmissing-unit-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4495ce75d975136173dbd4c139f00d1f508a6994/src%2Ftest%2Fui%2Fspan%2Fmissing-unit-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmissing-unit-argument.rs?ref=4495ce75d975136173dbd4c139f00d1f508a6994", "patch": "@@ -8,7 +8,7 @@ impl S {\n }\n \n fn main() {\n-    let _: Result<(), String> = Ok(); //~ ERROR this function takes\n+    let _: Result<(), String> = Ok(); //~ ERROR this enum variant takes\n     foo(); //~ ERROR this function takes\n     foo(()); //~ ERROR this function takes\n     bar(); //~ ERROR this function takes"}, {"sha": "7a24ffbd81c88d2e6edbd271dcf3e32eafa3b4a8", "filename": "src/test/ui/span/missing-unit-argument.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4495ce75d975136173dbd4c139f00d1f508a6994/src%2Ftest%2Fui%2Fspan%2Fmissing-unit-argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4495ce75d975136173dbd4c139f00d1f508a6994/src%2Ftest%2Fui%2Fspan%2Fmissing-unit-argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmissing-unit-argument.stderr?ref=4495ce75d975136173dbd4c139f00d1f508a6994", "patch": "@@ -1,4 +1,4 @@\n-error[E0061]: this function takes 1 argument but 0 arguments were supplied\n+error[E0061]: this enum variant takes 1 argument but 0 arguments were supplied\n   --> $DIR/missing-unit-argument.rs:11:33\n    |\n LL |     let _: Result<(), String> = Ok();"}, {"sha": "19de4d67729fcf47bcb835328badb27e5ef94833", "filename": "src/test/ui/typeck/struct-enum-wrong-args.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4495ce75d975136173dbd4c139f00d1f508a6994/src%2Ftest%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4495ce75d975136173dbd4c139f00d1f508a6994/src%2Ftest%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.rs?ref=4495ce75d975136173dbd4c139f00d1f508a6994", "patch": "@@ -0,0 +1,14 @@\n+// Regression test of #86481.\n+struct Wrapper(i32);\n+struct DoubleWrapper(i32, i32);\n+\n+fn main() {\n+    let _ = Some(3, 2); //~ ERROR this enum variant takes\n+    let _ = Ok(3, 6, 2); //~ ERROR this enum variant takes\n+    let _ = Ok(); //~ ERROR this enum variant takes\n+    let _ = Wrapper(); //~ ERROR this struct takes\n+    let _ = Wrapper(5, 2); //~ ERROR this struct takes\n+    let _ = DoubleWrapper(); //~ ERROR this struct takes\n+    let _ = DoubleWrapper(5); //~ ERROR this struct takes\n+    let _ = DoubleWrapper(5, 2, 7); //~ ERROR this struct takes\n+}"}, {"sha": "d77ef73028b0cd7ff06db0edf08506a8f4aff136", "filename": "src/test/ui/typeck/struct-enum-wrong-args.stderr", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/4495ce75d975136173dbd4c139f00d1f508a6994/src%2Ftest%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4495ce75d975136173dbd4c139f00d1f508a6994/src%2Ftest%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr?ref=4495ce75d975136173dbd4c139f00d1f508a6994", "patch": "@@ -0,0 +1,67 @@\n+error[E0061]: this enum variant takes 1 argument but 2 arguments were supplied\n+  --> $DIR/struct-enum-wrong-args.rs:6:13\n+   |\n+LL |     let _ = Some(3, 2);\n+   |             ^^^^ -  - supplied 2 arguments\n+   |             |\n+   |             expected 1 argument\n+\n+error[E0061]: this enum variant takes 1 argument but 3 arguments were supplied\n+  --> $DIR/struct-enum-wrong-args.rs:7:13\n+   |\n+LL |     let _ = Ok(3, 6, 2);\n+   |             ^^ -  -  - supplied 3 arguments\n+   |             |\n+   |             expected 1 argument\n+\n+error[E0061]: this enum variant takes 1 argument but 0 arguments were supplied\n+  --> $DIR/struct-enum-wrong-args.rs:8:13\n+   |\n+LL |     let _ = Ok();\n+   |             ^^-- supplied 0 arguments\n+   |             |\n+   |             expected 1 argument\n+\n+error[E0061]: this struct takes 1 argument but 0 arguments were supplied\n+  --> $DIR/struct-enum-wrong-args.rs:9:13\n+   |\n+LL |     let _ = Wrapper();\n+   |             ^^^^^^^-- supplied 0 arguments\n+   |             |\n+   |             expected 1 argument\n+\n+error[E0061]: this struct takes 1 argument but 2 arguments were supplied\n+  --> $DIR/struct-enum-wrong-args.rs:10:13\n+   |\n+LL |     let _ = Wrapper(5, 2);\n+   |             ^^^^^^^ -  - supplied 2 arguments\n+   |             |\n+   |             expected 1 argument\n+\n+error[E0061]: this struct takes 2 arguments but 0 arguments were supplied\n+  --> $DIR/struct-enum-wrong-args.rs:11:13\n+   |\n+LL |     let _ = DoubleWrapper();\n+   |             ^^^^^^^^^^^^^-- supplied 0 arguments\n+   |             |\n+   |             expected 2 arguments\n+\n+error[E0061]: this struct takes 2 arguments but 1 argument was supplied\n+  --> $DIR/struct-enum-wrong-args.rs:12:13\n+   |\n+LL |     let _ = DoubleWrapper(5);\n+   |             ^^^^^^^^^^^^^ - supplied 1 argument\n+   |             |\n+   |             expected 2 arguments\n+\n+error[E0061]: this struct takes 2 arguments but 3 arguments were supplied\n+  --> $DIR/struct-enum-wrong-args.rs:13:13\n+   |\n+LL |     let _ = DoubleWrapper(5, 2, 7);\n+   |             ^^^^^^^^^^^^^ -  -  - supplied 3 arguments\n+   |             |\n+   |             expected 2 arguments\n+\n+error: aborting due to 8 previous errors\n+\n+For more information about this error, try `rustc --explain E0061`."}]}