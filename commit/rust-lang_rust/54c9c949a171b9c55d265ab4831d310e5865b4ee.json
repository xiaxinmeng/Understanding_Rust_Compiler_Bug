{"sha": "54c9c949a171b9c55d265ab4831d310e5865b4ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0YzljOTQ5YTE3MWI5YzU1ZDI2NWFiNDgzMWQzMTBlNTg2NWI0ZWU=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-09-25T12:40:16Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-09-25T13:19:46Z"}, "message": "Allow multiple allow_internal_unstable attributes\n\nCo-authored-by: varkor <github@varkor.com>", "tree": {"sha": "a93247b597a7b883c160be16218b6df98f4da562", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a93247b597a7b883c160be16218b6df98f4da562"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54c9c949a171b9c55d265ab4831d310e5865b4ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54c9c949a171b9c55d265ab4831d310e5865b4ee", "html_url": "https://github.com/rust-lang/rust/commit/54c9c949a171b9c55d265ab4831d310e5865b4ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54c9c949a171b9c55d265ab4831d310e5865b4ee/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d74efe32eb8e1053d9e00f604d4c5760be9382f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d74efe32eb8e1053d9e00f604d4c5760be9382f", "html_url": "https://github.com/rust-lang/rust/commit/9d74efe32eb8e1053d9e00f604d4c5760be9382f"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "03dbcc450246f742fbca3d6859f346790b0219db", "filename": "compiler/rustc_attr/src/builtin.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/54c9c949a171b9c55d265ab4831d310e5865b4ee/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54c9c949a171b9c55d265ab4831d310e5865b4ee/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs?ref=54c9c949a171b9c55d265ab4831d310e5865b4ee", "patch": "@@ -1022,14 +1022,21 @@ pub fn find_transparency(\n \n pub fn allow_internal_unstable<'a>(\n     sess: &'a Session,\n-    attrs: &[Attribute],\n+    attrs: &'a [Attribute],\n ) -> Option<impl Iterator<Item = Symbol> + 'a> {\n-    let attr = sess.find_by_name(attrs, sym::allow_internal_unstable)?;\n-    let list = attr.meta_item_list().or_else(|| {\n-        sess.diagnostic()\n-            .span_err(attr.span, \"allow_internal_unstable expects list of feature names\");\n-        None\n-    })?;\n+    let attrs = sess.filter_by_name(attrs, sym::allow_internal_unstable);\n+    let list = attrs\n+        .filter_map(move |attr| {\n+            attr.meta_item_list().or_else(|| {\n+                sess.diagnostic().span_err(\n+                    attr.span,\n+                    \"`allow_internal_unstable` expects a list of feature names\",\n+                );\n+                None\n+            })\n+        })\n+        .flatten();\n+\n     Some(list.into_iter().filter_map(move |it| {\n         let name = it.ident().map(|ident| ident.name);\n         if name.is_none() {"}, {"sha": "eb4d6cb380efe78e78d5898f99e5343800bc87fc", "filename": "src/test/ui/internal/auxiliary/internal_unstable.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/54c9c949a171b9c55d265ab4831d310e5865b4ee/src%2Ftest%2Fui%2Finternal%2Fauxiliary%2Finternal_unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54c9c949a171b9c55d265ab4831d310e5865b4ee/src%2Ftest%2Fui%2Finternal%2Fauxiliary%2Finternal_unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finternal%2Fauxiliary%2Finternal_unstable.rs?ref=54c9c949a171b9c55d265ab4831d310e5865b4ee", "patch": "@@ -52,6 +52,15 @@ macro_rules! access_field_allow {\n     ($e: expr) => { $e.x }\n }\n \n+// regression test for #77088\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+#[allow_internal_unstable(struct_field)]\n+#[allow_internal_unstable(struct2_field)]\n+#[macro_export]\n+macro_rules! access_field_allow2 {\n+    ($e: expr) => { $e.x }\n+}\n+\n #[stable(feature = \"stable\", since = \"1.0.0\")]\n #[allow_internal_unstable()]\n #[macro_export]"}, {"sha": "94bd6aab23bffe6a4f5d16c3ca23569f0445a729", "filename": "src/test/ui/internal/internal-unstable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54c9c949a171b9c55d265ab4831d310e5865b4ee/src%2Ftest%2Fui%2Finternal%2Finternal-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54c9c949a171b9c55d265ab4831d310e5865b4ee/src%2Ftest%2Fui%2Finternal%2Finternal-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finternal%2Finternal-unstable.rs?ref=54c9c949a171b9c55d265ab4831d310e5865b4ee", "patch": "@@ -28,6 +28,7 @@ fn main() {\n     construct_unstable_allow!(0);\n     |x: internal_unstable::Foo| { call_method_allow!(x) };\n     |x: internal_unstable::Bar| { access_field_allow!(x) };\n+    |x: internal_unstable::Bar| { access_field_allow2!(x) }; // regression test for #77088\n \n     // bad.\n     pass_through_allow!(internal_unstable::unstable()); //~ ERROR use of unstable"}, {"sha": "2e6360c75c42af9f4ecd0909e921fff942e3e32b", "filename": "src/test/ui/internal/internal-unstable.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/54c9c949a171b9c55d265ab4831d310e5865b4ee/src%2Ftest%2Fui%2Finternal%2Finternal-unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54c9c949a171b9c55d265ab4831d310e5865b4ee/src%2Ftest%2Fui%2Finternal%2Finternal-unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finternal%2Finternal-unstable.stderr?ref=54c9c949a171b9c55d265ab4831d310e5865b4ee", "patch": "@@ -1,29 +1,29 @@\n error[E0658]: use of unstable library feature 'function'\n-  --> $DIR/internal-unstable.rs:33:25\n+  --> $DIR/internal-unstable.rs:34:25\n    |\n LL |     pass_through_allow!(internal_unstable::unstable());\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(function)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'function'\n-  --> $DIR/internal-unstable.rs:35:27\n+  --> $DIR/internal-unstable.rs:36:27\n    |\n LL |     pass_through_noallow!(internal_unstable::unstable());\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(function)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'function'\n-  --> $DIR/internal-unstable.rs:39:22\n+  --> $DIR/internal-unstable.rs:40:22\n    |\n LL |     println!(\"{:?}\", internal_unstable::unstable());\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(function)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'function'\n-  --> $DIR/internal-unstable.rs:41:10\n+  --> $DIR/internal-unstable.rs:42:10\n    |\n LL |     bar!(internal_unstable::unstable());\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}