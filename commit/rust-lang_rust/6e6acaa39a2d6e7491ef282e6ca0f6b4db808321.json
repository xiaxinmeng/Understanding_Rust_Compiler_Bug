{"sha": "6e6acaa39a2d6e7491ef282e6ca0f6b4db808321", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNmFjYWEzOWEyZDZlNzQ5MWVmMjgyZTZjYTBmNmI0ZGI4MDgzMjE=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-02T18:12:19Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-03T00:35:50Z"}, "message": "Fail on non-exhaustive alt matches", "tree": {"sha": "c661fa8031f36dc4a642cc48fc59009e763ebb66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c661fa8031f36dc4a642cc48fc59009e763ebb66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e6acaa39a2d6e7491ef282e6ca0f6b4db808321", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e6acaa39a2d6e7491ef282e6ca0f6b4db808321", "html_url": "https://github.com/rust-lang/rust/commit/6e6acaa39a2d6e7491ef282e6ca0f6b4db808321", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e6acaa39a2d6e7491ef282e6ca0f6b4db808321/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d0a505d61e77d6186631552065438aa04944b12", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d0a505d61e77d6186631552065438aa04944b12", "html_url": "https://github.com/rust-lang/rust/commit/9d0a505d61e77d6186631552065438aa04944b12"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b16acfd9d4c5fc8c783e678d24ae491850b8b50e", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6e6acaa39a2d6e7491ef282e6ca0f6b4db808321/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e6acaa39a2d6e7491ef282e6ca0f6b4db808321/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=6e6acaa39a2d6e7491ef282e6ca0f6b4db808321", "patch": "@@ -3581,9 +3581,9 @@ fn trans_alt(@block_ctxt cx, @ast.expr expr, vec[ast.arm] arms)\n         this_cx = next_cx;\n     }\n \n-    // FIXME: This is executed when none of the patterns match; it should fail\n-    // instead!\n-    this_cx.build.Br(last_cx.llbb);\n+    auto default_cx = this_cx;\n+    auto default_res = trans_fail(default_cx, expr.span,\n+                                  \"non-exhaustive match failure\");\n \n     // FIXME: This is very wrong; we should phi together all the arm blocks,\n     // since this is an expression."}]}