{"sha": "7cb234bee9dcb411031d4a0b960b2096258aa6ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjYjIzNGJlZTlkY2I0MTEwMzFkNGEwYjk2MGIyMDk2MjU4YWE2YWQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-22T01:18:07Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:33Z"}, "message": "librustc: De-`@mut` the test context", "tree": {"sha": "b52eb957e88f5dbfcaad15fe8a92f12984c3df14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b52eb957e88f5dbfcaad15fe8a92f12984c3df14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cb234bee9dcb411031d4a0b960b2096258aa6ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cb234bee9dcb411031d4a0b960b2096258aa6ad", "html_url": "https://github.com/rust-lang/rust/commit/7cb234bee9dcb411031d4a0b960b2096258aa6ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cb234bee9dcb411031d4a0b960b2096258aa6ad/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0dfc35fc906e30502c17139ac91798db4d99fce", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0dfc35fc906e30502c17139ac91798db4d99fce", "html_url": "https://github.com/rust-lang/rust/commit/d0dfc35fc906e30502c17139ac91798db4d99fce"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "86641598a13ad7db922adf4828d4acb61124cde4", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7cb234bee9dcb411031d4a0b960b2096258aa6ad/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb234bee9dcb411031d4a0b960b2096258aa6ad/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=7cb234bee9dcb411031d4a0b960b2096258aa6ad", "patch": "@@ -63,7 +63,7 @@ pub fn modify_for_testing(sess: session::Session,\n }\n \n struct TestHarnessGenerator {\n-    cx: @mut TestCtxt,\n+    cx: @TestCtxt,\n }\n \n impl fold::ast_fold for TestHarnessGenerator {\n@@ -126,7 +126,7 @@ impl fold::ast_fold for TestHarnessGenerator {\n         // Remove any #[main] from the AST so it doesn't clash with\n         // the one we're going to add. Only if compiling an executable.\n \n-        fn nomain(cx: @mut TestCtxt, item: @ast::item) -> @ast::item {\n+        fn nomain(cx: @TestCtxt, item: @ast::item) -> @ast::item {\n             if !*cx.sess.building_library {\n                 @ast::item {\n                     attrs: item.attrs.iter().filter_map(|attr| {\n@@ -154,7 +154,7 @@ impl fold::ast_fold for TestHarnessGenerator {\n \n fn generate_test_harness(sess: session::Session, crate: ast::Crate)\n                          -> ast::Crate {\n-    let cx: @mut TestCtxt = @mut TestCtxt {\n+    let cx: @TestCtxt = @TestCtxt {\n         sess: sess,\n         ext_cx: ExtCtxt::new(sess.parse_sess, sess.opts.cfg.clone()),\n         path: RefCell::new(~[]),\n@@ -190,7 +190,7 @@ fn strip_test_functions(crate: ast::Crate) -> ast::Crate {\n     })\n }\n \n-fn is_test_fn(cx: @mut TestCtxt, i: @ast::item) -> bool {\n+fn is_test_fn(cx: @TestCtxt, i: @ast::item) -> bool {\n     let has_test_attr = attr::contains_name(i.attrs, \"test\");\n \n     fn has_test_signature(i: @ast::item) -> bool {\n@@ -243,7 +243,7 @@ fn is_bench_fn(i: @ast::item) -> bool {\n     return has_bench_attr && has_test_signature(i);\n }\n \n-fn is_ignored(cx: @mut TestCtxt, i: @ast::item) -> bool {\n+fn is_ignored(cx: @TestCtxt, i: @ast::item) -> bool {\n     i.attrs.iter().any(|attr| {\n         // check ignore(cfg(foo, bar))\n         \"ignore\" == attr.name() && match attr.meta_item_list() {"}]}