{"sha": "5d6f1a1e32de4936e5b269b04781b2737f6d410b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkNmYxYTFlMzJkZTQ5MzZlNWIyNjliMDQ3ODFiMjczN2Y2ZDQxMGI=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-21T18:44:45Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-21T18:44:45Z"}, "message": "Move `use align_of` in atomic.rs into the places where it is used.", "tree": {"sha": "77c37d92d6ad55f3ac6ab3b18157f6e54f392621", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77c37d92d6ad55f3ac6ab3b18157f6e54f392621"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d6f1a1e32de4936e5b269b04781b2737f6d410b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d6f1a1e32de4936e5b269b04781b2737f6d410b", "html_url": "https://github.com/rust-lang/rust/commit/5d6f1a1e32de4936e5b269b04781b2737f6d410b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d6f1a1e32de4936e5b269b04781b2737f6d410b/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a04ff6c33c8bc9b8b1012e12a9920df52956e2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a04ff6c33c8bc9b8b1012e12a9920df52956e2f", "html_url": "https://github.com/rust-lang/rust/commit/7a04ff6c33c8bc9b8b1012e12a9920df52956e2f"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "5c9cfe27101f07edbcfbbe669bf4074ec0385584", "filename": "library/core/src/sync/atomic.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5d6f1a1e32de4936e5b269b04781b2737f6d410b/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d6f1a1e32de4936e5b269b04781b2737f6d410b/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs?ref=5d6f1a1e32de4936e5b269b04781b2737f6d410b", "patch": "@@ -111,9 +111,6 @@ use crate::cell::UnsafeCell;\n use crate::fmt;\n use crate::intrinsics;\n \n-#[allow(unused_imports)]\n-use crate::mem::align_of;\n-\n use crate::hint::spin_loop;\n \n /// Signals the processor that it is inside a busy-wait spin-loop (\"spin lock\").\n@@ -861,6 +858,7 @@ impl<T> AtomicPtr<T> {\n     #[cfg(target_has_atomic_equal_alignment = \"ptr\")]\n     #[unstable(feature = \"atomic_from_mut\", issue = \"76314\")]\n     pub fn from_mut(v: &mut *mut T) -> &Self {\n+        use crate::mem::align_of;\n         let [] = [(); align_of::<AtomicPtr<()>>() - align_of::<*mut ()>()];\n         // SAFETY:\n         //  - the mutable reference guarantees unique ownership.\n@@ -1311,6 +1309,7 @@ assert_eq!(some_int, 100);\n                 #[$cfg_align]\n                 #[unstable(feature = \"atomic_from_mut\", issue = \"76314\")]\n                 pub fn from_mut(v: &mut $int_type) -> &Self {\n+                    use crate::mem::align_of;\n                     let [] = [(); align_of::<Self>() - align_of::<$int_type>()];\n                     // SAFETY:\n                     //  - the mutable reference guarantees unique ownership."}]}