{"sha": "d853e9b1ef54be586d8e5b0c43519b5f74e090ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4NTNlOWIxZWY1NGJlNTg2ZDhlNWIwYzQzNTE5YjVmNzRlMDkwZWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-23T14:52:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-23T14:52:35Z"}, "message": "better names", "tree": {"sha": "10c1c320bab0747996751a357a8d8f5f8ec4c4be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10c1c320bab0747996751a357a8d8f5f8ec4c4be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d853e9b1ef54be586d8e5b0c43519b5f74e090ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d853e9b1ef54be586d8e5b0c43519b5f74e090ef", "html_url": "https://github.com/rust-lang/rust/commit/d853e9b1ef54be586d8e5b0c43519b5f74e090ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d853e9b1ef54be586d8e5b0c43519b5f74e090ef/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a583070b7d47852094b498c3191b4b5d87520fc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a583070b7d47852094b498c3191b4b5d87520fc3", "html_url": "https://github.com/rust-lang/rust/commit/a583070b7d47852094b498c3191b4b5d87520fc3"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "c9a15967c90455aadf5bba74ba195d876dc9b002", "filename": "crates/ra_hir/src/module_tree.rs", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/d853e9b1ef54be586d8e5b0c43519b5f74e090ef/crates%2Fra_hir%2Fsrc%2Fmodule_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d853e9b1ef54be586d8e5b0c43519b5f74e090ef/crates%2Fra_hir%2Fsrc%2Fmodule_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule_tree.rs?ref=d853e9b1ef54be586d8e5b0c43519b5f74e090ef", "patch": "@@ -131,6 +131,17 @@ impl ModuleTree {\n         let (res, _) = self.mods.iter().find(|(_, m)| m.source == source)?;\n         Some(res)\n     }\n+\n+    fn alloc_mod(&mut self, data: ModuleData) -> ModuleId {\n+        self.mods.alloc(data)\n+    }\n+\n+    fn alloc_link(&mut self, data: LinkData) -> LinkId {\n+        let owner = data.owner;\n+        let id = self.links.alloc(data);\n+        self.mods[owner].children.push(id);\n+        id\n+    }\n }\n \n impl ModuleId {\n@@ -198,18 +209,6 @@ impl LinkId {\n     }\n }\n \n-impl ModuleTree {\n-    fn push_mod(&mut self, data: ModuleData) -> ModuleId {\n-        self.mods.alloc(data)\n-    }\n-    fn push_link(&mut self, data: LinkData) -> LinkId {\n-        let owner = data.owner;\n-        let id = self.links.alloc(data);\n-        self.mods[owner].children.push(id);\n-        id\n-    }\n-}\n-\n fn modules(root: &impl ast::ModuleItemOwner) -> impl Iterator<Item = (Name, &ast::Module)> {\n     root.items()\n         .filter_map(|item| match item.kind() {\n@@ -266,13 +265,13 @@ fn build_subtree(\n     source: SourceItemId,\n ) -> ModuleId {\n     visited.insert(source);\n-    let id = tree.push_mod(ModuleData {\n+    let id = tree.alloc_mod(ModuleData {\n         source,\n         parent,\n         children: Vec::new(),\n     });\n     for sub in db.submodules(source).iter() {\n-        let link = tree.push_link(LinkData {\n+        let link = tree.alloc_link(LinkData {\n             source: sub.source,\n             name: sub.name.clone(),\n             owner: id,"}]}