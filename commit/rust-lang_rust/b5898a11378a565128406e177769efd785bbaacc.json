{"sha": "b5898a11378a565128406e177769efd785bbaacc", "node_id": "C_kwDOAAsO6NoAKGI1ODk4YTExMzc4YTU2NTEyODQwNmUxNzc3NjllZmQ3ODViYmFhY2M", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-12-24T11:21:04Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-12-28T15:17:22Z"}, "message": "Update pulldown-cmark version to 0.9", "tree": {"sha": "215cd8986e8d957ceb578061dd442b177ded13cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/215cd8986e8d957ceb578061dd442b177ded13cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5898a11378a565128406e177769efd785bbaacc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5898a11378a565128406e177769efd785bbaacc", "html_url": "https://github.com/rust-lang/rust/commit/b5898a11378a565128406e177769efd785bbaacc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5898a11378a565128406e177769efd785bbaacc/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60f3bd78eeac87ad474916d36d29ed7e5084b25b", "url": "https://api.github.com/repos/rust-lang/rust/commits/60f3bd78eeac87ad474916d36d29ed7e5084b25b", "html_url": "https://github.com/rust-lang/rust/commit/60f3bd78eeac87ad474916d36d29ed7e5084b25b"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "cfba7d3fd40a0383dab5c997c0dcd2edf709887e", "filename": "Cargo.lock", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b5898a11378a565128406e177769efd785bbaacc/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b5898a11378a565128406e177769efd785bbaacc/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=b5898a11378a565128406e177769efd785bbaacc", "patch": "@@ -2154,7 +2154,7 @@ dependencies = [\n  \"log\",\n  \"memchr\",\n  \"opener\",\n- \"pulldown-cmark\",\n+ \"pulldown-cmark 0.8.0\",\n  \"regex\",\n  \"serde\",\n  \"serde_derive\",\n@@ -2813,6 +2813,17 @@ dependencies = [\n  \"unicase\",\n ]\n \n+[[package]]\n+name = \"pulldown-cmark\"\n+version = \"0.9.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"acd16514d1af5f7a71f909a44ef253cdb712a376d7ebc8ae4a471a9be9743548\"\n+dependencies = [\n+ \"bitflags\",\n+ \"memchr\",\n+ \"unicase\",\n+]\n+\n [[package]]\n name = \"punycode\"\n version = \"0.4.1\"\n@@ -4615,7 +4626,7 @@ dependencies = [\n  \"expect-test\",\n  \"itertools 0.9.0\",\n  \"minifier\",\n- \"pulldown-cmark\",\n+ \"pulldown-cmark 0.9.0\",\n  \"rayon\",\n  \"regex\",\n  \"rustdoc-json-types\","}, {"sha": "578cf70d4910bc221be3267708f50f4f1394635e", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5898a11378a565128406e177769efd785bbaacc/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b5898a11378a565128406e177769efd785bbaacc/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=b5898a11378a565128406e177769efd785bbaacc", "patch": "@@ -8,7 +8,7 @@ path = \"lib.rs\"\n \n [dependencies]\n arrayvec = { version = \"0.7\", default-features = false }\n-pulldown-cmark = { version = \"0.8\", default-features = false }\n+pulldown-cmark = { version = \"0.9\", default-features = false }\n minifier = \"0.0.41\"\n rayon = \"1.3.1\"\n serde = { version = \"1.0\", features = [\"derive\"] }"}, {"sha": "3fd9c0a1944859b56528f9dad0bf35f2e0c43787", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b5898a11378a565128406e177769efd785bbaacc/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5898a11378a565128406e177769efd785bbaacc/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=b5898a11378a565128406e177769efd785bbaacc", "patch": "@@ -538,7 +538,7 @@ impl<'a, 'b, 'ids, I: Iterator<Item = SpannedEvent<'a>>> Iterator\n         }\n \n         let event = self.inner.next();\n-        if let Some((Event::Start(Tag::Heading(level)), _)) = event {\n+        if let Some((Event::Start(Tag::Heading(level, _, _)), _)) = event {\n             let mut id = String::new();\n             for event in &mut self.inner {\n                 match &event.0 {\n@@ -560,7 +560,8 @@ impl<'a, 'b, 'ids, I: Iterator<Item = SpannedEvent<'a>>> Iterator\n                 self.buf.push_front((Event::Html(format!(\"{} \", sec).into()), 0..0));\n             }\n \n-            let level = std::cmp::min(level + (self.heading_offset as u32), MAX_HEADER_LEVEL);\n+            let level =\n+                std::cmp::min(level as u32 + (self.heading_offset as u32), MAX_HEADER_LEVEL);\n             self.buf.push_back((Event::Html(format!(\"</a></h{}>\", level).into()), 0..0));\n \n             let start_tags = format!(\n@@ -773,7 +774,7 @@ crate fn find_testable_code<T: doctest::Tester>(\n                 tests.add_test(text, block_info, line);\n                 prev_offset = offset.start;\n             }\n-            Event::Start(Tag::Heading(level)) => {\n+            Event::Start(Tag::Heading(level, _, _)) => {\n                 register_header = Some(level as u32);\n             }\n             Event::Text(ref s) if register_header.is_some() => {\n@@ -1053,7 +1054,7 @@ impl Markdown<'_> {\n         let mut replacer = |broken_link: BrokenLink<'_>| {\n             links\n                 .iter()\n-                .find(|link| &*link.original_text == broken_link.reference)\n+                .find(|link| link.original_text.as_str() == &*broken_link.reference)\n                 .map(|link| (link.href.as_str().into(), link.new_text.as_str().into()))\n         };\n \n@@ -1134,7 +1135,7 @@ impl MarkdownSummaryLine<'_> {\n         let mut replacer = |broken_link: BrokenLink<'_>| {\n             links\n                 .iter()\n-                .find(|link| &*link.original_text == broken_link.reference)\n+                .find(|link| link.original_text.as_str() == &*broken_link.reference)\n                 .map(|link| (link.href.as_str().into(), link.new_text.as_str().into()))\n         };\n \n@@ -1168,7 +1169,7 @@ fn markdown_summary_with_limit(\n     let mut replacer = |broken_link: BrokenLink<'_>| {\n         link_names\n             .iter()\n-            .find(|link| &*link.original_text == broken_link.reference)\n+            .find(|link| link.original_text.as_str() == &*broken_link.reference)\n             .map(|link| (link.href.as_str().into(), link.new_text.as_str().into()))\n     };\n \n@@ -1311,10 +1312,10 @@ crate fn markdown_links(md: &str) -> Vec<MarkdownLink> {\n     };\n \n     let mut push = |link: BrokenLink<'_>| {\n-        let span = span_for_link(&CowStr::Borrowed(link.reference), link.span);\n+        let span = span_for_link(&link.reference, link.span);\n         links.borrow_mut().push(MarkdownLink {\n             kind: LinkType::ShortcutUnknown,\n-            link: link.reference.to_owned(),\n+            link: link.reference.to_string(),\n             range: span,\n         });\n         None"}]}