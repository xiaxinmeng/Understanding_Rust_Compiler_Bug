{"sha": "375fe17218965e77ed46ab458da53cb90e2e83f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NWZlMTcyMTg5NjVlNzdlZDQ2YWI0NThkYTUzY2I5MGUyZTgzZjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-25T12:02:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-25T12:02:52Z"}, "message": "auto merge of #17497 : nodakai/rust/libnative-misc-fixes, r=alexcrichton\n\nlibnative/io: datasync() wrongly called fsync().\r\nliblibc and libnative: send() should use const buffers.", "tree": {"sha": "5439a027a50a20a2ad4407e631c405b470098f35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5439a027a50a20a2ad4407e631c405b470098f35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/375fe17218965e77ed46ab458da53cb90e2e83f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/375fe17218965e77ed46ab458da53cb90e2e83f5", "html_url": "https://github.com/rust-lang/rust/commit/375fe17218965e77ed46ab458da53cb90e2e83f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/375fe17218965e77ed46ab458da53cb90e2e83f5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d299bafb31a7c0528e690e48ec6d5591f1eb0bac", "url": "https://api.github.com/repos/rust-lang/rust/commits/d299bafb31a7c0528e690e48ec6d5591f1eb0bac", "html_url": "https://github.com/rust-lang/rust/commit/d299bafb31a7c0528e690e48ec6d5591f1eb0bac"}, {"sha": "d4b7bdae33fbd80da27b02d40211e926fff7ac6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4b7bdae33fbd80da27b02d40211e926fff7ac6d", "html_url": "https://github.com/rust-lang/rust/commit/d4b7bdae33fbd80da27b02d40211e926fff7ac6d"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "494c98bc54da281df254799dbb43bcb3135e2959", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/375fe17218965e77ed46ab458da53cb90e2e83f5/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/375fe17218965e77ed46ab458da53cb90e2e83f5/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=375fe17218965e77ed46ab458da53cb90e2e83f5", "patch": "@@ -4633,7 +4633,7 @@ pub mod funcs {\n                               option_len: socklen_t) -> c_int;\n             pub fn recv(socket: c_int, buf: *mut c_void, len: size_t,\n                         flags: c_int) -> ssize_t;\n-            pub fn send(socket: c_int, buf: *mut c_void, len: size_t,\n+            pub fn send(socket: c_int, buf: *const c_void, len: size_t,\n                         flags: c_int) -> ssize_t;\n             pub fn recvfrom(socket: c_int, buf: *mut c_void, len: size_t,\n                             flags: c_int, addr: *mut sockaddr,\n@@ -4673,7 +4673,7 @@ pub mod funcs {\n             pub fn closesocket(socket: SOCKET) -> c_int;\n             pub fn recv(socket: SOCKET, buf: *mut c_void, len: c_int,\n                         flags: c_int) -> c_int;\n-            pub fn send(socket: SOCKET, buf: *mut c_void, len: c_int,\n+            pub fn send(socket: SOCKET, buf: *const c_void, len: c_int,\n                         flags: c_int) -> c_int;\n             pub fn recvfrom(socket: SOCKET, buf: *mut c_void, len: c_int,\n                             flags: c_int, addr: *mut sockaddr,"}, {"sha": "90fbc7729d478efad894270e1789147e70c43891", "filename": "src/libnative/io/file_unix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/375fe17218965e77ed46ab458da53cb90e2e83f5/src%2Flibnative%2Fio%2Ffile_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/375fe17218965e77ed46ab458da53cb90e2e83f5/src%2Flibnative%2Fio%2Ffile_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ffile_unix.rs?ref=375fe17218965e77ed46ab458da53cb90e2e83f5", "patch": "@@ -303,7 +303,7 @@ impl rtio::RtioFileStream for CFile {\n         self.flush().and_then(|()| self.fd.fsync())\n     }\n     fn datasync(&mut self) -> IoResult<()> {\n-        self.flush().and_then(|()| self.fd.fsync())\n+        self.flush().and_then(|()| self.fd.datasync())\n     }\n     fn truncate(&mut self, offset: i64) -> IoResult<()> {\n         self.flush().and_then(|()| self.fd.truncate(offset))"}, {"sha": "335a52b0bbed6ce63ed5f030b79ffeb52ef40a90", "filename": "src/libnative/io/net.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/375fe17218965e77ed46ab458da53cb90e2e83f5/src%2Flibnative%2Fio%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/375fe17218965e77ed46ab458da53cb90e2e83f5/src%2Flibnative%2Fio%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Fnet.rs?ref=375fe17218965e77ed46ab458da53cb90e2e83f5", "patch": "@@ -337,7 +337,7 @@ impl rtio::RtioTcpStream for TcpStream {\n         let dowrite = |nb: bool, buf: *const u8, len: uint| unsafe {\n             let flags = if nb {c::MSG_DONTWAIT} else {0};\n             libc::send(fd,\n-                       buf as *mut libc::c_void,\n+                       buf as *const _,\n                        len as wrlen,\n                        flags) as i64\n         };"}, {"sha": "48f31615339a0ef7d58cb0b71a47850d66009afe", "filename": "src/libnative/io/pipe_unix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/375fe17218965e77ed46ab458da53cb90e2e83f5/src%2Flibnative%2Fio%2Fpipe_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/375fe17218965e77ed46ab458da53cb90e2e83f5/src%2Flibnative%2Fio%2Fpipe_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Fpipe_unix.rs?ref=375fe17218965e77ed46ab458da53cb90e2e83f5", "patch": "@@ -173,7 +173,7 @@ impl rtio::RtioPipe for UnixStream {\n         let dowrite = |nb: bool, buf: *const u8, len: uint| unsafe {\n             let flags = if nb {c::MSG_DONTWAIT} else {0};\n             libc::send(fd,\n-                       buf as *mut libc::c_void,\n+                       buf as *const _,\n                        len as libc::size_t,\n                        flags) as i64\n         };"}]}