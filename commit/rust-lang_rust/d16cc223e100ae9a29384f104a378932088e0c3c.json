{"sha": "d16cc223e100ae9a29384f104a378932088e0c3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNmNjMjIzZTEwMGFlOWEyOTM4NGYxMDRhMzc4OTMyMDg4ZTBjM2M=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-19T17:06:10Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-11-19T17:06:10Z"}, "message": "Use DocumentProvider instead of Hover", "tree": {"sha": "fda3e9fc76db85ae902a11a200a762030863a74f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fda3e9fc76db85ae902a11a200a762030863a74f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d16cc223e100ae9a29384f104a378932088e0c3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d16cc223e100ae9a29384f104a378932088e0c3c", "html_url": "https://github.com/rust-lang/rust/commit/d16cc223e100ae9a29384f104a378932088e0c3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d16cc223e100ae9a29384f104a378932088e0c3c/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80fe467ce864de077d2f5a4e29e1a4d5fe535dc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/80fe467ce864de077d2f5a4e29e1a4d5fe535dc3", "html_url": "https://github.com/rust-lang/rust/commit/80fe467ce864de077d2f5a4e29e1a4d5fe535dc3"}], "stats": {"total": 108, "additions": 75, "deletions": 33}, "files": [{"sha": "94887674ba3309ad5d28352c285d28c1c2f7e7b5", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d16cc223e100ae9a29384f104a378932088e0c3c/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/d16cc223e100ae9a29384f104a378932088e0c3c/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=d16cc223e100ae9a29384f104a378932088e0c3c", "patch": "@@ -90,6 +90,11 @@\n                 \"title\": \"Show Syntax Tree\",\n                 \"category\": \"Rust Analyzer\"\n             },\n+            {\n+                \"command\": \"rust-analyzer.expandMacro\",\n+                \"title\": \"Expand macro recursively\",\n+                \"category\": \"Rust Analyzer\"\n+            },\n             {\n                 \"command\": \"rust-analyzer.matchingBrace\",\n                 \"title\": \"Find matching brace\","}, {"sha": "1fa2cf7393feaeabe960d444995a3d545ecf09e4", "filename": "editors/code/src/commands/expand_macro.ts", "status": "modified", "additions": 58, "deletions": 23, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/d16cc223e100ae9a29384f104a378932088e0c3c/editors%2Fcode%2Fsrc%2Fcommands%2Fexpand_macro.ts", "raw_url": "https://github.com/rust-lang/rust/raw/d16cc223e100ae9a29384f104a378932088e0c3c/editors%2Fcode%2Fsrc%2Fcommands%2Fexpand_macro.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fexpand_macro.ts?ref=d16cc223e100ae9a29384f104a378932088e0c3c", "patch": "@@ -2,47 +2,82 @@ import * as vscode from 'vscode';\n import { Position, TextDocumentIdentifier } from 'vscode-languageclient';\n import { Server } from '../server';\n \n-interface ExpandedMacro {\n-    name: string,\n-    expansion: string,\n-}\n+export const expandMacroUri = vscode.Uri.parse(\n+    'rust-analyzer://expandMacro/[EXPANSION].rs'\n+);\n \n-function code_format(expanded: ExpandedMacro): vscode.MarkdownString {\n-    const markdown = new vscode.MarkdownString(\n-        `#### Recursive expansion of ${expanded.name}! macro`\n-    );\n-    markdown.appendCodeblock(expanded.expansion, 'rust');\n-    return markdown;\n-}\n+export class ExpandMacroContentProvider\n+    implements vscode.TextDocumentContentProvider {\n+    public eventEmitter = new vscode.EventEmitter<vscode.Uri>();\n \n-export class ExpandMacroHoverProvider implements vscode.HoverProvider {\n-    public provideHover(\n-        document: vscode.TextDocument,\n-        position: vscode.Position,\n-        token: vscode.CancellationToken\n-    ): Thenable<vscode.Hover | null> | null {\n+    public provideTextDocumentContent(\n+        uri: vscode.Uri\n+    ): vscode.ProviderResult<string> {\n         async function handle() {\n+            const editor = vscode.window.activeTextEditor;\n+            if (editor == null) {\n+                return '';\n+            }\n+\n+            const position = editor.selection.active;\n             const request: MacroExpandParams = {\n-                textDocument: { uri: document.uri.toString() },\n+                textDocument: { uri: editor.document.uri.toString() },\n                 position\n             };\n-            const result = await Server.client.sendRequest<ExpandedMacro>(\n+            const expanded = await Server.client.sendRequest<ExpandedMacro>(\n                 'rust-analyzer/expandMacro',\n                 request\n             );\n-            if (result != null) {\n-                const formated = code_format(result);\n-                return new vscode.Hover(formated);\n+\n+            if (expanded == null) {\n+                return 'Not available';\n             }\n \n-            return null;\n+            return code_format(expanded);\n         }\n \n         return handle();\n     }\n+\n+    get onDidChange(): vscode.Event<vscode.Uri> {\n+        return this.eventEmitter.event;\n+    }\n+}\n+\n+// Opens the virtual file that will show the syntax tree\n+//\n+// The contents of the file come from the `TextDocumentContentProvider`\n+export function createHandle(provider: ExpandMacroContentProvider) {\n+    return async () => {\n+        const uri = expandMacroUri;\n+\n+        const document = await vscode.workspace.openTextDocument(uri);\n+\n+        provider.eventEmitter.fire(uri);\n+\n+        return vscode.window.showTextDocument(\n+            document,\n+            vscode.ViewColumn.Two,\n+            true\n+        );\n+    };\n }\n \n interface MacroExpandParams {\n     textDocument: TextDocumentIdentifier;\n     position: Position;\n }\n+\n+interface ExpandedMacro {\n+    name: string;\n+    expansion: string;\n+}\n+\n+function code_format(expanded: ExpandedMacro): string {\n+    let result = `// Recursive expansion of ${expanded.name}! macro\\n`;\n+    result += '='.repeat(result.length);\n+    result += '\\n\\n';\n+    result += expanded.expansion;\n+\n+    return result;\n+}"}, {"sha": "683497dfd4dc9d7e3911b47b5f835c3049cd40af", "filename": "editors/code/src/extension.ts", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d16cc223e100ae9a29384f104a378932088e0c3c/editors%2Fcode%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/d16cc223e100ae9a29384f104a378932088e0c3c/editors%2Fcode%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fextension.ts?ref=d16cc223e100ae9a29384f104a378932088e0c3c", "patch": "@@ -3,7 +3,7 @@ import * as lc from 'vscode-languageclient';\n \n import * as commands from './commands';\n import { CargoWatchProvider } from './commands/cargo_watch';\n-import { ExpandMacroHoverProvider } from './commands/expand_macro';\n+import { ExpandMacroContentProvider } from './commands/expand_macro';\n import { HintsUpdater } from './commands/inlay_hints';\n import {\n     interactivelyStartCargoWatch,\n@@ -98,6 +98,7 @@ export function activate(context: vscode.ExtensionContext) {\n         ]\n     ];\n     const syntaxTreeContentProvider = new SyntaxTreeContentProvider();\n+    const expandMacroContentProvider = new ExpandMacroContentProvider();\n \n     // The events below are plain old javascript events, triggered and handled by vscode\n     vscode.window.onDidChangeActiveTextEditor(\n@@ -110,27 +111,28 @@ export function activate(context: vscode.ExtensionContext) {\n             syntaxTreeContentProvider\n         )\n     );\n+    disposeOnDeactivation(\n+        vscode.workspace.registerTextDocumentContentProvider(\n+            'rust-analyzer',\n+            expandMacroContentProvider\n+        )\n+    );\n \n     registerCommand(\n         'rust-analyzer.syntaxTree',\n         commands.syntaxTree.createHandle(syntaxTreeContentProvider)\n     );\n+    registerCommand(\n+        'rust-analyzer.expandMacro',\n+        commands.expandMacro.createHandle(expandMacroContentProvider)\n+    );\n \n     vscode.workspace.onDidChangeTextDocument(\n         events.changeTextDocument.createHandler(syntaxTreeContentProvider),\n         null,\n         context.subscriptions\n     );\n \n-    const expandMacroContentProvider = new ExpandMacroHoverProvider();\n-\n-    disposeOnDeactivation(\n-        vscode.languages.registerHoverProvider(\n-            'rust',\n-            expandMacroContentProvider\n-        )\n-    );\n-\n     const startServer = () => Server.start(allNotifications);\n     const reloadCommand = () => reloadServer(startServer);\n "}]}