{"sha": "ba5d9c094daf8d78178058e7a3498b66d47db950", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhNWQ5YzA5NGRhZjhkNzgxNzgwNThlN2EzNDk4YjY2ZDQ3ZGI5NTA=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-04-23T23:45:50Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-05-23T16:51:46Z"}, "message": "Optimize alloc_from_iter", "tree": {"sha": "10713684723db39b4058a0187a9d6b278226d083", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10713684723db39b4058a0187a9d6b278226d083"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba5d9c094daf8d78178058e7a3498b66d47db950", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba5d9c094daf8d78178058e7a3498b66d47db950", "html_url": "https://github.com/rust-lang/rust/commit/ba5d9c094daf8d78178058e7a3498b66d47db950", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba5d9c094daf8d78178058e7a3498b66d47db950/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28482db2479b24caef8f738a5973d2e410ed13bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/28482db2479b24caef8f738a5973d2e410ed13bf", "html_url": "https://github.com/rust-lang/rust/commit/28482db2479b24caef8f738a5973d2e410ed13bf"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "d6bec816e4ee60fcea0fb79e277a4ccd27d99990", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ba5d9c094daf8d78178058e7a3498b66d47db950/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba5d9c094daf8d78178058e7a3498b66d47db950/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=ba5d9c094daf8d78178058e7a3498b66d47db950", "patch": "@@ -486,9 +486,31 @@ impl DroplessArena {\n         }\n     }\n \n+    #[inline]\n+    unsafe fn write_from_iter<T, I: Iterator<Item = T>>(\n+        &self,\n+        mut iter: I,\n+        len: usize,\n+        mem: *mut T,\n+    ) -> &mut [T] {\n+        let mut i = 0;\n+        // Use a manual loop since LLVM manages to optimize it better for\n+        // slice iterators\n+        loop {\n+            let value = iter.next();\n+            if i >= len || value.is_none() {\n+                // We only return as many items as the iterator gave us, even\n+                // though it was supposed to give us `len`\n+                return slice::from_raw_parts_mut(mem, i);\n+            }\n+            ptr::write(mem.offset(i as isize), value.unwrap());\n+            i += 1;\n+        }\n+    }\n+\n     #[inline]\n     pub fn alloc_from_iter<T, I: IntoIterator<Item = T>>(&self, iter: I) -> &mut [T] {\n-        let mut iter = iter.into_iter();\n+        let iter = iter.into_iter();\n         assert!(mem::size_of::<T>() != 0);\n         assert!(!mem::needs_drop::<T>());\n \n@@ -505,10 +527,7 @@ impl DroplessArena {\n                 let size = len.checked_mul(mem::size_of::<T>()).unwrap();\n                 let mem = self.alloc_raw(size, mem::align_of::<T>()) as *mut _ as *mut T;\n                 unsafe {\n-                    for i in 0..len {\n-                        ptr::write(mem.offset(i as isize), iter.next().unwrap())\n-                    }\n-                    slice::from_raw_parts_mut(mem, len)\n+                    self.write_from_iter(iter, len, mem)\n                 }\n             }\n             (_, _) => {"}]}