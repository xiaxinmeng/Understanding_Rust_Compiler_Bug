{"sha": "9759d1e08ad288f84a262257242bfd167d2492e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NTlkMWUwOGFkMjg4Zjg0YTI2MjI1NzI0MmJmZDE2N2QyNDkyZTg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-16T18:34:54Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-16T18:34:54Z"}, "message": "Annotate obj items while folding ast in typeck.", "tree": {"sha": "60148bb44f772de06b616695fd97a53cde8f18a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60148bb44f772de06b616695fd97a53cde8f18a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9759d1e08ad288f84a262257242bfd167d2492e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9759d1e08ad288f84a262257242bfd167d2492e8", "html_url": "https://github.com/rust-lang/rust/commit/9759d1e08ad288f84a262257242bfd167d2492e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9759d1e08ad288f84a262257242bfd167d2492e8/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d2feae8572cb06dd4dee090f303d788dbfa5115", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d2feae8572cb06dd4dee090f303d788dbfa5115", "html_url": "https://github.com/rust-lang/rust/commit/7d2feae8572cb06dd4dee090f303d788dbfa5115"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "9837ffa1add0b2ccad07bb65a6d9b9b0f32282f3", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9759d1e08ad288f84a262257242bfd167d2492e8/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9759d1e08ad288f84a262257242bfd167d2492e8/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=9759d1e08ad288f84a262257242bfd167d2492e8", "patch": "@@ -597,6 +597,16 @@ fn collect_item_types(@ast.crate crate) -> tup(@ast.crate, @ty_table) {\n         ret @fold.respan[ast.item_](sp, item);\n     }\n \n+    fn fold_item_obj(&@env e, &span sp, ast.ident i,\n+                    &ast._obj ob, vec[ast.ty_param] ty_params,\n+                    ast.def_id id, ast.ann a) -> @ast.item {\n+        check (e.item_to_ty.contains_key(id));\n+        auto ty = e.item_to_ty.get(id);\n+        auto item = ast.item_obj(i, ob, ty_params, id,\n+                                ast.ann_type(ty));\n+        ret @fold.respan[ast.item_](sp, item);\n+    }\n+\n     fn fold_item_ty(&@env e, &span sp, ast.ident i,\n                     @ast.ty t, vec[ast.ty_param] ty_params,\n                     ast.def_id id, ast.ann a) -> @ast.item {\n@@ -623,6 +633,7 @@ fn collect_item_types(@ast.crate crate) -> tup(@ast.crate, @ty_table) {\n         @rec(update_env_for_item = bind convert(_,_),\n              fold_item_const = bind fold_item_const(_,_,_,_,_,_,_),\n              fold_item_fn    = bind fold_item_fn(_,_,_,_,_,_,_),\n+             fold_item_obj   = bind fold_item_obj(_,_,_,_,_,_,_),\n              fold_item_ty    = bind fold_item_ty(_,_,_,_,_,_,_),\n              fold_item_tag   = bind fold_item_tag(_,_,_,_,_,_)\n              with *fld_2);"}]}