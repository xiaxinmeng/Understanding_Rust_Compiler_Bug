{"sha": "cbbdf998edc905bcf44ba212f068114b3a62f858", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiYmRmOTk4ZWRjOTA1YmNmNDRiYTIxMmYwNjgxMTRiM2E2MmY4NTg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-04-30T17:18:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-30T17:18:40Z"}, "message": "Rollup merge of #50327 - varkor:match-unused-struct-field, r=estebank\n\nDisplay correct unused field suggestion for nested struct patterns\n\nExtends https://github.com/rust-lang/rust/pull/47922 by checking more sophisticated patterns (e.g. references, slices, etc.).\nBefore:\n```\nwarning: unused variable: `bar`\n  --> src/main.rs:37:21\n   |\n37 |         &Foo::Bar { bar } => true,\n   |                     ^^^ help: consider using `_bar` instead\n   |\n   = note: #[warn(unused_variables)] on by default\n```\nAfter:\n```\nwarning: unused variable: `bar`\n  --> src/main.rs:37:21\n   |\n37 |         &Foo::Bar { bar } => true,\n   |                     ^^^ help: try ignoring the field: `bar: _`\n   |\n   = note: #[warn(unused_variables)] on by default\n```\n\nFixes #50303.\n\nr? @estebank", "tree": {"sha": "bc16a74fee61bf9eeaedb96eb2dcce767e957496", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc16a74fee61bf9eeaedb96eb2dcce767e957496"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbbdf998edc905bcf44ba212f068114b3a62f858", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa50/wCRBK7hj4Ov3rIwAAdHIIALLVf4PuO2t5pgMnGEpouCWd\nZbgVq5PQgQ5fEJIncFJT/LkOUN3AM1X0CjX+RQXKEzuhjl9+VtMN5h8a9TFkKVxh\nRagY4mdNDDcWsU9Qx16sGgts0oi5ZY+3SykpbBkwdLmEus/BYcTJBKAOm8Bsg+SL\nmRUUcXu5IZZbRpXvFN3XHzkTuqpQF+ZtBWsOQdJRkzzm+69JopALW2+zZiHkWbhC\n79+CdAnDOPmVupJnkaDeNToAxX2bnV1M8jYi4shfLgQhDmnKgCjy7PhJSvY3Dfji\nqfJoSBVwQ0me3FYToW3Fk3IsJukc20q41OB87iVGBYnAZwBowqSNc8hyP9k8xgs=\n=JVaN\n-----END PGP SIGNATURE-----\n", "payload": "tree bc16a74fee61bf9eeaedb96eb2dcce767e957496\nparent 30c990b69354f9bfb1d7851da931bce2d1efe087\nparent 2eb8343af18470d3c48a50c68dbaeb1887b42c37\nauthor kennytm <kennytm@gmail.com> 1525108720 +0800\ncommitter GitHub <noreply@github.com> 1525108720 +0800\n\nRollup merge of #50327 - varkor:match-unused-struct-field, r=estebank\n\nDisplay correct unused field suggestion for nested struct patterns\n\nExtends https://github.com/rust-lang/rust/pull/47922 by checking more sophisticated patterns (e.g. references, slices, etc.).\nBefore:\n```\nwarning: unused variable: `bar`\n  --> src/main.rs:37:21\n   |\n37 |         &Foo::Bar { bar } => true,\n   |                     ^^^ help: consider using `_bar` instead\n   |\n   = note: #[warn(unused_variables)] on by default\n```\nAfter:\n```\nwarning: unused variable: `bar`\n  --> src/main.rs:37:21\n   |\n37 |         &Foo::Bar { bar } => true,\n   |                     ^^^ help: try ignoring the field: `bar: _`\n   |\n   = note: #[warn(unused_variables)] on by default\n```\n\nFixes #50303.\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbbdf998edc905bcf44ba212f068114b3a62f858", "html_url": "https://github.com/rust-lang/rust/commit/cbbdf998edc905bcf44ba212f068114b3a62f858", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbbdf998edc905bcf44ba212f068114b3a62f858/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30c990b69354f9bfb1d7851da931bce2d1efe087", "url": "https://api.github.com/repos/rust-lang/rust/commits/30c990b69354f9bfb1d7851da931bce2d1efe087", "html_url": "https://github.com/rust-lang/rust/commit/30c990b69354f9bfb1d7851da931bce2d1efe087"}, {"sha": "2eb8343af18470d3c48a50c68dbaeb1887b42c37", "url": "https://api.github.com/repos/rust-lang/rust/commits/2eb8343af18470d3c48a50c68dbaeb1887b42c37", "html_url": "https://github.com/rust-lang/rust/commit/2eb8343af18470d3c48a50c68dbaeb1887b42c37"}], "stats": {"total": 135, "additions": 120, "deletions": 15}, "files": [{"sha": "d1a46f5f155637f02624592f1e9d127436a87425", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 35, "deletions": 9, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/cbbdf998edc905bcf44ba212f068114b3a62f858/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbbdf998edc905bcf44ba212f068114b3a62f858/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=cbbdf998edc905bcf44ba212f068114b3a62f858", "patch": "@@ -111,6 +111,7 @@ use ty::{self, TyCtxt};\n use lint;\n use util::nodemap::{NodeMap, NodeSet};\n \n+use std::collections::VecDeque;\n use std::{fmt, usize};\n use std::io::prelude::*;\n use std::io;\n@@ -412,18 +413,43 @@ fn visit_local<'a, 'tcx>(ir: &mut IrMaps<'a, 'tcx>, local: &'tcx hir::Local) {\n }\n \n fn visit_arm<'a, 'tcx>(ir: &mut IrMaps<'a, 'tcx>, arm: &'tcx hir::Arm) {\n-    for pat in &arm.pats {\n-        // for struct patterns, take note of which fields used shorthand (`x` rather than `x: x`)\n+    for mut pat in &arm.pats {\n+        // For struct patterns, take note of which fields used shorthand\n+        // (`x` rather than `x: x`).\n         //\n-        // FIXME: according to the rust-lang-nursery/rustc-guide book, `NodeId`s are to be phased\n-        // out in favor of `HirId`s; however, we need to match the signature of `each_binding`,\n-        // which uses `NodeIds`.\n+        // FIXME: according to the rust-lang-nursery/rustc-guide book, `NodeId`s are to be\n+        // phased out in favor of `HirId`s; however, we need to match the signature of\n+        // `each_binding`, which uses `NodeIds`.\n         let mut shorthand_field_ids = NodeSet();\n-        if let hir::PatKind::Struct(_, ref fields, _) = pat.node {\n-            for field in fields {\n-                if field.node.is_shorthand {\n-                    shorthand_field_ids.insert(field.node.pat.id);\n+        let mut pats = VecDeque::new();\n+        pats.push_back(pat);\n+        while let Some(pat) = pats.pop_front() {\n+            use hir::PatKind::*;\n+            match pat.node {\n+                Binding(_, _, _, ref inner_pat) => {\n+                    pats.extend(inner_pat.iter());\n                 }\n+                Struct(_, ref fields, _) => {\n+                    for field in fields {\n+                        if field.node.is_shorthand {\n+                            shorthand_field_ids.insert(field.node.pat.id);\n+                        }\n+                    }\n+                }\n+                Ref(ref inner_pat, _) |\n+                Box(ref inner_pat) => {\n+                    pats.push_back(inner_pat);\n+                }\n+                TupleStruct(_, ref inner_pats, _) |\n+                Tuple(ref inner_pats, _) => {\n+                    pats.extend(inner_pats.iter());\n+                }\n+                Slice(ref pre_pats, ref inner_pat, ref post_pats) => {\n+                    pats.extend(pre_pats.iter());\n+                    pats.extend(inner_pat.iter());\n+                    pats.extend(post_pats.iter());\n+                }\n+                _ => {}\n             }\n         }\n "}, {"sha": "6994a377a06d7c01373dca5bc51034f61bbec92d", "filename": "src/test/ui/lint/issue-47390-unused-variable-in-struct-pattern.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/cbbdf998edc905bcf44ba212f068114b3a62f858/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbbdf998edc905bcf44ba212f068114b3a62f858/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.rs?ref=cbbdf998edc905bcf44ba212f068114b3a62f858", "patch": "@@ -10,6 +10,8 @@\n \n // compile-pass\n \n+#![feature(box_syntax)]\n+#![feature(box_patterns)]\n #![warn(unused)] // UI tests pass `-A unused` (#43896)\n \n struct SoulHistory {\n@@ -18,6 +20,13 @@ struct SoulHistory {\n     endless_and_singing: bool\n }\n \n+#[derive(Clone, Copy)]\n+enum Large {\n+    Suit { case: () }\n+}\n+\n+struct Tuple(Large, ());\n+\n fn main() {\n     let i_think_continually = 2;\n     let who_from_the_womb_remembered = SoulHistory {\n@@ -31,4 +40,38 @@ fn main() {\n                          endless_and_singing: true } = who_from_the_womb_remembered {\n         hours_are_suns = false;\n     }\n+\n+    let bag = Large::Suit {\n+        case: ()\n+    };\n+\n+    // Plain struct\n+    match bag {\n+        Large::Suit { case } => {}\n+    };\n+\n+    // Referenced struct\n+    match &bag {\n+        &Large::Suit { case } => {}\n+    };\n+\n+    // Boxed struct\n+    match box bag {\n+        box Large::Suit { case } => {}\n+    };\n+\n+    // Tuple with struct\n+    match (bag,) {\n+        (Large::Suit { case },) => {}\n+    };\n+\n+    // Slice with struct\n+    match [bag] {\n+        [Large::Suit { case }] => {}\n+    };\n+\n+    // Tuple struct with struct\n+    match Tuple(bag, ()) {\n+        Tuple(Large::Suit { case }, ()) => {}\n+    };\n }"}, {"sha": "7bfe2c9162ed17d9a30936a164989645d8bea17f", "filename": "src/test/ui/lint/issue-47390-unused-variable-in-struct-pattern.stderr", "status": "modified", "additions": 42, "deletions": 6, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/cbbdf998edc905bcf44ba212f068114b3a62f858/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cbbdf998edc905bcf44ba212f068114b3a62f858/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr?ref=cbbdf998edc905bcf44ba212f068114b3a62f858", "patch": "@@ -1,40 +1,76 @@\n warning: unused variable: `i_think_continually`\n-  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:22:9\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:31:9\n    |\n LL |     let i_think_continually = 2;\n    |         ^^^^^^^^^^^^^^^^^^^ help: consider using `_i_think_continually` instead\n    |\n note: lint level defined here\n-  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:13:9\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:15:9\n    |\n LL | #![warn(unused)] // UI tests pass `-A unused` (#43896)\n    |         ^^^^^^\n    = note: #[warn(unused_variables)] implied by #[warn(unused)]\n \n warning: unused variable: `corridors_of_light`\n-  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:29:26\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:38:26\n    |\n LL |     if let SoulHistory { corridors_of_light,\n    |                          ^^^^^^^^^^^^^^^^^^ help: try ignoring the field: `corridors_of_light: _`\n \n warning: variable `hours_are_suns` is assigned to, but never used\n-  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:30:26\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:39:26\n    |\n LL |                          mut hours_are_suns,\n    |                          ^^^^^^^^^^^^^^^^^^\n    |\n    = note: consider using `_hours_are_suns` instead\n \n warning: value assigned to `hours_are_suns` is never read\n-  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:32:9\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:41:9\n    |\n LL |         hours_are_suns = false;\n    |         ^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:13:9\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:15:9\n    |\n LL | #![warn(unused)] // UI tests pass `-A unused` (#43896)\n    |         ^^^^^^\n    = note: #[warn(unused_assignments)] implied by #[warn(unused)]\n \n+warning: unused variable: `case`\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:50:23\n+   |\n+LL |         Large::Suit { case } => {}\n+   |                       ^^^^ help: try ignoring the field: `case: _`\n+\n+warning: unused variable: `case`\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:55:24\n+   |\n+LL |         &Large::Suit { case } => {}\n+   |                        ^^^^ help: try ignoring the field: `case: _`\n+\n+warning: unused variable: `case`\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:60:27\n+   |\n+LL |         box Large::Suit { case } => {}\n+   |                           ^^^^ help: try ignoring the field: `case: _`\n+\n+warning: unused variable: `case`\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:65:24\n+   |\n+LL |         (Large::Suit { case },) => {}\n+   |                        ^^^^ help: try ignoring the field: `case: _`\n+\n+warning: unused variable: `case`\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:70:24\n+   |\n+LL |         [Large::Suit { case }] => {}\n+   |                        ^^^^ help: try ignoring the field: `case: _`\n+\n+warning: unused variable: `case`\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:75:29\n+   |\n+LL |         Tuple(Large::Suit { case }, ()) => {}\n+   |                             ^^^^ help: try ignoring the field: `case: _`\n+"}]}