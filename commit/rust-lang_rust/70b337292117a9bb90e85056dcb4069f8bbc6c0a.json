{"sha": "70b337292117a9bb90e85056dcb4069f8bbc6c0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwYjMzNzI5MjExN2E5YmI5MGU4NTA1NmRjYjQwNjlmOGJiYzZjMGE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-30T20:20:02Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-30T20:20:02Z"}, "message": "Don't allocate when traversing children", "tree": {"sha": "4a5f28a2f14d53e5a07b1735ec60931093fd7280", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a5f28a2f14d53e5a07b1735ec60931093fd7280"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70b337292117a9bb90e85056dcb4069f8bbc6c0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70b337292117a9bb90e85056dcb4069f8bbc6c0a", "html_url": "https://github.com/rust-lang/rust/commit/70b337292117a9bb90e85056dcb4069f8bbc6c0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70b337292117a9bb90e85056dcb4069f8bbc6c0a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27a40e0a8844310960f12294fe7cd1f5b6d25fcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/27a40e0a8844310960f12294fe7cd1f5b6d25fcb", "html_url": "https://github.com/rust-lang/rust/commit/27a40e0a8844310960f12294fe7cd1f5b6d25fcb"}], "stats": {"total": 78, "additions": 66, "deletions": 12}, "files": [{"sha": "5c31a3f35798c2316d531f0fda8903bd30886216", "filename": "src/yellow/syntax.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/70b337292117a9bb90e85056dcb4069f8bbc6c0a/src%2Fyellow%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70b337292117a9bb90e85056dcb4069f8bbc6c0a/src%2Fyellow%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fyellow%2Fsyntax.rs?ref=70b337292117a9bb90e85056dcb4069f8bbc6c0a", "patch": "@@ -11,8 +11,8 @@ impl TreeRoot for Arc<SyntaxRoot> {}\n impl<'a> TreeRoot for &'a SyntaxRoot {}\n \n #[derive(Clone, Copy)]\n-pub struct SyntaxNode<ROOT: TreeRoot = Arc<SyntaxRoot>> {\n-    pub(crate) root: ROOT,\n+pub struct SyntaxNode<R: TreeRoot = Arc<SyntaxRoot>> {\n+    pub(crate) root: R,\n     // Guaranteed to not dangle, because `root` holds a\n     // strong reference to red's ancestor\n     red: ptr::NonNull<RedNode>,\n@@ -52,7 +52,7 @@ impl SyntaxNode<Arc<SyntaxRoot>> {\n     }\n }\n \n-impl<ROOT: TreeRoot> SyntaxNode<ROOT> {\n+impl<R: TreeRoot> SyntaxNode<R> {\n     pub fn borrow<'a>(&'a self) -> SyntaxNode<&'a SyntaxRoot> {\n         SyntaxNode {\n             root: &*self.root,\n@@ -73,20 +73,18 @@ impl<ROOT: TreeRoot> SyntaxNode<ROOT> {\n         self.red().green().text()\n     }\n \n-    pub fn children(&self) -> Vec<SyntaxNode<ROOT>> {\n+    pub fn children<'a>(&'a self) -> impl Iterator<Item=SyntaxNode<R>> + 'a {\n         let red = self.red();\n         let n_children = red.n_children();\n-        let mut res = Vec::with_capacity(n_children);\n-        for i in 0..n_children {\n-            res.push(SyntaxNode {\n+        (0..n_children).map(move |i| {\n+            SyntaxNode {\n                 root: self.root.clone(),\n                 red: red.nth_child(i),\n-            });\n-        }\n-        res\n+            }\n+        })\n     }\n \n-    pub fn parent(&self) -> Option<SyntaxNode<ROOT>> {\n+    pub fn parent(&self) -> Option<SyntaxNode<R>> {\n         let parent = self.red().parent()?;\n         Some(SyntaxNode {\n             root: self.root.clone(),\n@@ -99,7 +97,7 @@ impl<ROOT: TreeRoot> SyntaxNode<ROOT> {\n     }\n }\n \n-impl<ROOT: TreeRoot> fmt::Debug for SyntaxNode<ROOT> {\n+impl<R: TreeRoot> fmt::Debug for SyntaxNode<R> {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n         write!(fmt, \"{:?}@{:?}\", self.kind(), self.range())?;\n         if has_short_text(self.kind()) {"}, {"sha": "919bde0ee92b0a67e53559a960d6d46afadd3124", "filename": "tests/data/parser/inline/0041_type_param_bounds.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/70b337292117a9bb90e85056dcb4069f8bbc6c0a/tests%2Fdata%2Fparser%2Finline%2F0041_type_param_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70b337292117a9bb90e85056dcb4069f8bbc6c0a/tests%2Fdata%2Fparser%2Finline%2F0041_type_param_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0041_type_param_bounds.rs?ref=70b337292117a9bb90e85056dcb4069f8bbc6c0a", "patch": "@@ -0,0 +1 @@\n+struct S<T: 'a + ?Sized + (Copy)>;"}, {"sha": "d607bd416a40582743bad1c94d09f401be48f5f9", "filename": "tests/data/parser/inline/0041_type_param_bounds.txt", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/70b337292117a9bb90e85056dcb4069f8bbc6c0a/tests%2Fdata%2Fparser%2Finline%2F0041_type_param_bounds.txt", "raw_url": "https://github.com/rust-lang/rust/raw/70b337292117a9bb90e85056dcb4069f8bbc6c0a/tests%2Fdata%2Fparser%2Finline%2F0041_type_param_bounds.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0041_type_param_bounds.txt?ref=70b337292117a9bb90e85056dcb4069f8bbc6c0a", "patch": "@@ -0,0 +1,33 @@\n+FILE@[0; 35)\n+  STRUCT_ITEM@[0; 35)\n+    STRUCT_KW@[0; 6)\n+    NAME@[6; 8)\n+      WHITESPACE@[6; 7)\n+      IDENT@[7; 8) \"S\"\n+    TYPE_PARAM_LIST@[8; 33)\n+      L_ANGLE@[8; 9)\n+      TYPE_PARAM@[9; 32)\n+        IDENT@[9; 10) \"T\"\n+        COLON@[10; 11)\n+        WHITESPACE@[11; 12)\n+        LIFETIME@[12; 14) \"'a\"\n+        WHITESPACE@[14; 15)\n+        PLUS@[15; 16)\n+        WHITESPACE@[16; 17)\n+        QUESTION@[17; 18)\n+        PATH@[18; 24)\n+          PATH_SEGMENT@[18; 24)\n+            NAME_REF@[18; 24)\n+              IDENT@[18; 23) \"Sized\"\n+              WHITESPACE@[23; 24)\n+        PLUS@[24; 25)\n+        WHITESPACE@[25; 26)\n+        L_PAREN@[26; 27)\n+        PATH@[27; 31)\n+          PATH_SEGMENT@[27; 31)\n+            NAME_REF@[27; 31)\n+              IDENT@[27; 31) \"Copy\"\n+        R_PAREN@[31; 32)\n+      R_ANGLE@[32; 33)\n+    SEMI@[33; 34)\n+    WHITESPACE@[34; 35)"}, {"sha": "540eacb027750f3fd519903435b08db4edd548ab", "filename": "tests/data/parser/inline/0042_type_param_default.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/70b337292117a9bb90e85056dcb4069f8bbc6c0a/tests%2Fdata%2Fparser%2Finline%2F0042_type_param_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70b337292117a9bb90e85056dcb4069f8bbc6c0a/tests%2Fdata%2Fparser%2Finline%2F0042_type_param_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0042_type_param_default.rs?ref=70b337292117a9bb90e85056dcb4069f8bbc6c0a", "patch": "@@ -0,0 +1 @@\n+struct S<T = i32>;"}, {"sha": "9642a90840c791d933522832f47bca70bb4408dd", "filename": "tests/data/parser/inline/0042_type_param_default.txt", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/70b337292117a9bb90e85056dcb4069f8bbc6c0a/tests%2Fdata%2Fparser%2Finline%2F0042_type_param_default.txt", "raw_url": "https://github.com/rust-lang/rust/raw/70b337292117a9bb90e85056dcb4069f8bbc6c0a/tests%2Fdata%2Fparser%2Finline%2F0042_type_param_default.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0042_type_param_default.txt?ref=70b337292117a9bb90e85056dcb4069f8bbc6c0a", "patch": "@@ -0,0 +1,21 @@\n+FILE@[0; 19)\n+  STRUCT_ITEM@[0; 19)\n+    STRUCT_KW@[0; 6)\n+    NAME@[6; 8)\n+      WHITESPACE@[6; 7)\n+      IDENT@[7; 8) \"S\"\n+    TYPE_PARAM_LIST@[8; 17)\n+      L_ANGLE@[8; 9)\n+      TYPE_PARAM@[9; 16)\n+        IDENT@[9; 10) \"T\"\n+        WHITESPACE@[10; 11)\n+        EQ@[11; 12)\n+        PATH_TYPE@[12; 16)\n+          PATH@[12; 16)\n+            PATH_SEGMENT@[12; 16)\n+              NAME_REF@[12; 16)\n+                WHITESPACE@[12; 13)\n+                IDENT@[13; 16) \"i32\"\n+      R_ANGLE@[16; 17)\n+    SEMI@[17; 18)\n+    WHITESPACE@[18; 19)"}]}