{"sha": "1bfb26d6cae6f535ac1034877635fc0cef87fe64", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiZmIyNmQ2Y2FlNmY1MzVhYzEwMzQ4Nzc2MzVmYzBjZWY4N2ZlNjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-13T06:44:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-13T06:44:00Z"}, "message": "Auto merge of #1504 - RalfJung:ill-formed-const, r=RalfJung\n\nadd test for unused ill-formed constant\n\nOnce https://github.com/rust-lang/rust/pull/75339 lands, this test should pass.\n\nFixes https://github.com/rust-lang/miri/issues/1382.", "tree": {"sha": "1e63988e2efcb147bcdd12cf624aed6a788ff24f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e63988e2efcb147bcdd12cf624aed6a788ff24f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bfb26d6cae6f535ac1034877635fc0cef87fe64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bfb26d6cae6f535ac1034877635fc0cef87fe64", "html_url": "https://github.com/rust-lang/rust/commit/1bfb26d6cae6f535ac1034877635fc0cef87fe64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bfb26d6cae6f535ac1034877635fc0cef87fe64/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a44bb290f1d32d59119f380013c10e8a3ffdd7d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a44bb290f1d32d59119f380013c10e8a3ffdd7d9", "html_url": "https://github.com/rust-lang/rust/commit/a44bb290f1d32d59119f380013c10e8a3ffdd7d9"}, {"sha": "925d60760eb953af3ffd288fa5a8e9546f60311e", "url": "https://api.github.com/repos/rust-lang/rust/commits/925d60760eb953af3ffd288fa5a8e9546f60311e", "html_url": "https://github.com/rust-lang/rust/commit/925d60760eb953af3ffd288fa5a8e9546f60311e"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "198b3970e0d1619e419b431f1e3b81c21f63eb2c", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1bfb26d6cae6f535ac1034877635fc0cef87fe64/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/1bfb26d6cae6f535ac1034877635fc0cef87fe64/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=1bfb26d6cae6f535ac1034877635fc0cef87fe64", "patch": "@@ -1 +1 @@\n-c94ed5ca91f1363b66970ce2cbd6e2773e3cb1d3\n+814bc4fe9364865bfaa94d7825b8eabc11245c7c"}, {"sha": "eed60c2696e1218846385949b0bb243beda67399", "filename": "src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1bfb26d6cae6f535ac1034877635fc0cef87fe64/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bfb26d6cae6f535ac1034877635fc0cef87fe64/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=1bfb26d6cae6f535ac1034877635fc0cef87fe64", "patch": "@@ -227,7 +227,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         TopFrameInfo {\n             stack_size: this.active_thread_stack().len(),\n             instance: Some(frame.instance),\n-            span: frame.current_source_info().map_or(DUMMY_SP, |si| si.span),\n+            span: frame.current_span(),\n         }\n     }\n "}, {"sha": "287e0735814160f8ddc954227332668c0cc3534a", "filename": "tests/compile-fail/erroneous_const.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1bfb26d6cae6f535ac1034877635fc0cef87fe64/tests%2Fcompile-fail%2Ferroneous_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bfb26d6cae6f535ac1034877635fc0cef87fe64/tests%2Fcompile-fail%2Ferroneous_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ferroneous_const.rs?ref=1bfb26d6cae6f535ac1034877635fc0cef87fe64", "patch": "@@ -0,0 +1,19 @@\n+//! Make sure we detect erroneous constants post-monomorphization even when they are unused.\n+//! (https://github.com/rust-lang/miri/issues/1382)\n+#![feature(const_panic)]\n+#![feature(never_type)]\n+#![warn(warnings, const_err)]\n+\n+struct PrintName<T>(T);\n+impl<T> PrintName<T> {\n+    const VOID: ! = panic!(); //~WARN any use of this value will cause an error\n+}\n+\n+fn no_codegen<T>() {\n+    if false {\n+        let _ = PrintName::<T>::VOID; //~ERROR referenced constant has errors\n+    }\n+}\n+fn main() {\n+    no_codegen::<i32>();\n+}"}]}