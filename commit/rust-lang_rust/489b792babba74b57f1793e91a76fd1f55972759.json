{"sha": "489b792babba74b57f1793e91a76fd1f55972759", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4OWI3OTJiYWJiYTc0YjU3ZjE3OTNlOTFhNzZmZDFmNTU5NzI3NTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-30T17:42:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-30T17:42:32Z"}, "message": "Auto merge of #43515 - QuietMisdreavus:show-assoc-types, r=GuillaumeGomez\n\nrustdoc: print associated types in traits \"implementors\" section\n\nWhen viewing a trait's implementors, they won't show anything about the implementation other than any bounds on the generics. You can see the full implementation details on the page for the type, but if the type is external (e.g. it's an extension trait being implemented for primitives), then you'll never be able to see the details of the implementation without opening the source code. This doesn't solve everything about that, but it does still show an incredibly useful piece of information: the associated types. This can help immensely for traits like `Deref` or `IntoIterator` in libstd, and also for traits like `IntoFuture` outside the standard library.\n\nFixes #24200\n\n\ud83d\udea8 BIKESHED ALERT \ud83d\udea8 The indentation and sizing of the types is suspect. I put it in the small text so it wouldn't blend in with the next impl line. (It shares a CSS class with the where clauses, as you can see in the following image.) However, the indentation is nonstandard. I initially tried with no indentation (looked awkward and blended too well with the surrounding impls) and with 4-space indentation (too easy to confuse with where clauses), before settling on the 2-space indentation seen below. It's... okay, i guess. Open to suggestions.\n\n![snippet of the implementors of IntoIterator, showing the associated types](https://user-images.githubusercontent.com/5217170/28697456-a4e01a12-7301-11e7-868e-2a6441d6c9e0.png)", "tree": {"sha": "2f795a538eed9faf3d02ca49355ba4f854e582a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f795a538eed9faf3d02ca49355ba4f854e582a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/489b792babba74b57f1793e91a76fd1f55972759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/489b792babba74b57f1793e91a76fd1f55972759", "html_url": "https://github.com/rust-lang/rust/commit/489b792babba74b57f1793e91a76fd1f55972759", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/489b792babba74b57f1793e91a76fd1f55972759/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "477e9f01714b6dffa1fb75e95b890d7abc2fcc52", "url": "https://api.github.com/repos/rust-lang/rust/commits/477e9f01714b6dffa1fb75e95b890d7abc2fcc52", "html_url": "https://github.com/rust-lang/rust/commit/477e9f01714b6dffa1fb75e95b890d7abc2fcc52"}, {"sha": "612081a78d136c7ad0b63dd3454ceb727d0e69c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/612081a78d136c7ad0b63dd3454ceb727d0e69c5", "html_url": "https://github.com/rust-lang/rust/commit/612081a78d136c7ad0b63dd3454ceb727d0e69c5"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "fc0adef70baa1da01307f902724ac1e8650132ba", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/489b792babba74b57f1793e91a76fd1f55972759/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/489b792babba74b57f1793e91a76fd1f55972759/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=489b792babba74b57f1793e91a76fd1f55972759", "patch": "@@ -2235,6 +2235,13 @@ fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n                 _ => false,\n             };\n             fmt_impl_for_trait_page(&implementor.impl_, w, use_absolute)?;\n+            for it in &implementor.impl_.items {\n+                if let clean::TypedefItem(ref tydef, _) = it.inner {\n+                    write!(w, \"<span class=\\\"where fmt-newline\\\">  \")?;\n+                    assoc_type(w, it, &vec![], Some(&tydef.type_), AssocItemLink::Anchor(None))?;\n+                    write!(w, \";</span>\")?;\n+                }\n+            }\n             writeln!(w, \"</code></li>\")?;\n         }\n     }"}]}