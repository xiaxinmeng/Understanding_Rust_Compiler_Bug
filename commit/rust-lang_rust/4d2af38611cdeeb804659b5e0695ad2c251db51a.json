{"sha": "4d2af38611cdeeb804659b5e0695ad2c251db51a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMmFmMzg2MTFjZGVlYjgwNDY1OWI1ZTA2OTVhZDJjMjUxZGI1MWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-17T15:51:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-17T15:51:11Z"}, "message": "auto merge of #16836 : P1start/rust/closure_ret_bang, r=alexcrichton\n\nFixes #13490.", "tree": {"sha": "d6a7b0ac11f4db82ec40f8c3a01fe395acabfc16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6a7b0ac11f4db82ec40f8c3a01fe395acabfc16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d2af38611cdeeb804659b5e0695ad2c251db51a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d2af38611cdeeb804659b5e0695ad2c251db51a", "html_url": "https://github.com/rust-lang/rust/commit/4d2af38611cdeeb804659b5e0695ad2c251db51a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d2af38611cdeeb804659b5e0695ad2c251db51a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad9ed40e7fec03158929ba3a2847870d54498d6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad9ed40e7fec03158929ba3a2847870d54498d6d", "html_url": "https://github.com/rust-lang/rust/commit/ad9ed40e7fec03158929ba3a2847870d54498d6d"}, {"sha": "e5bbbbe274dff5d420f256b58ff107e619ddf86d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5bbbbe274dff5d420f256b58ff107e619ddf86d", "html_url": "https://github.com/rust-lang/rust/commit/e5bbbbe274dff5d420f256b58ff107e619ddf86d"}], "stats": {"total": 64, "additions": 54, "deletions": 10}, "files": [{"sha": "0db1f2282a6a5781217781cfe367dac5715d3d34", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4d2af38611cdeeb804659b5e0695ad2c251db51a/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d2af38611cdeeb804659b5e0695ad2c251db51a/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=4d2af38611cdeeb804659b5e0695ad2c251db51a", "patch": "@@ -4143,20 +4143,20 @@ impl<'a> Parser<'a> {\n                 (optional_unboxed_closure_kind, args)\n             }\n         };\n-        let output = if self.eat(&token::RARROW) {\n-            self.parse_ty(true)\n+        let (style, output) = if self.token == token::RARROW {\n+            self.parse_ret_ty()\n         } else {\n-            P(Ty {\n+            (Return, P(Ty {\n                 id: ast::DUMMY_NODE_ID,\n                 node: TyInfer,\n                 span: self.span,\n-            })\n+            }))\n         };\n \n         (P(FnDecl {\n             inputs: inputs_captures,\n             output: output,\n-            cf: Return,\n+            cf: style,\n             variadic: false\n         }), optional_unboxed_closure_kind)\n     }\n@@ -4169,20 +4169,20 @@ impl<'a> Parser<'a> {\n                                      seq_sep_trailing_allowed(token::COMMA),\n                                      |p| p.parse_fn_block_arg());\n \n-        let output = if self.eat(&token::RARROW) {\n-            self.parse_ty(true)\n+        let (style, output) = if self.token == token::RARROW {\n+            self.parse_ret_ty()\n         } else {\n-            P(Ty {\n+            (Return, P(Ty {\n                 id: ast::DUMMY_NODE_ID,\n                 node: TyInfer,\n                 span: self.span,\n-            })\n+            }))\n         };\n \n         P(FnDecl {\n             inputs: inputs,\n             output: output,\n-            cf: Return,\n+            cf: style,\n             variadic: false\n         })\n     }"}, {"sha": "7ce8e95a761f2bddfcca5d1ad5dd3863f9fbc032", "filename": "src/test/compile-fail/closure-that-fails.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d2af38611cdeeb804659b5e0695ad2c251db51a/src%2Ftest%2Fcompile-fail%2Fclosure-that-fails.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d2af38611cdeeb804659b5e0695ad2c251db51a/src%2Ftest%2Fcompile-fail%2Fclosure-that-fails.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-that-fails.rs?ref=4d2af38611cdeeb804659b5e0695ad2c251db51a", "patch": "@@ -13,5 +13,8 @@ fn foo(f: || -> !) {}\n fn main() {\n     // Type inference didn't use to be able to handle this:\n     foo(|| fail!());\n+    foo(|| -> ! fail!());\n     foo(|| 22); //~ ERROR mismatched types\n+    foo(|| -> ! 22); //~ ERROR mismatched types\n+    let x = || -> ! 1; //~ ERROR mismatched types\n }"}, {"sha": "96e8378a35df8e8e6da67e7a73cb9c5114827a49", "filename": "src/test/compile-fail/dead-code-closure-bang.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4d2af38611cdeeb804659b5e0695ad2c251db51a/src%2Ftest%2Fcompile-fail%2Fdead-code-closure-bang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d2af38611cdeeb804659b5e0695ad2c251db51a/src%2Ftest%2Fcompile-fail%2Fdead-code-closure-bang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdead-code-closure-bang.rs?ref=4d2af38611cdeeb804659b5e0695ad2c251db51a", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![deny(unreachable_code)]\n+\n+fn main() {\n+    let x: || -> ! = || fail!();\n+    x();\n+    println!(\"Foo bar\"); //~ ERROR: unreachable statement\n+}"}, {"sha": "e164aeca013b2533fb609d9f8a3530983d5c7337", "filename": "src/test/run-pass/closure-return-bang.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4d2af38611cdeeb804659b5e0695ad2c251db51a/src%2Ftest%2Frun-pass%2Fclosure-return-bang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d2af38611cdeeb804659b5e0695ad2c251db51a/src%2Ftest%2Frun-pass%2Fclosure-return-bang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclosure-return-bang.rs?ref=4d2af38611cdeeb804659b5e0695ad2c251db51a", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(dead_code)]\n+\n+fn f(x: || -> !) -> ! {\n+    x();\n+}\n+\n+fn main() {\n+    let x: || -> ! = || fail!();\n+    let _y: || -> ! = || x();\n+}"}, {"sha": "b5a94a02b346b319ad6c8e7d0c599ea78e4d089b", "filename": "src/test/run-pass/closure-syntax.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d2af38611cdeeb804659b5e0695ad2c251db51a/src%2Ftest%2Frun-pass%2Fclosure-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d2af38611cdeeb804659b5e0695ad2c251db51a/src%2Ftest%2Frun-pass%2Fclosure-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclosure-syntax.rs?ref=4d2af38611cdeeb804659b5e0695ad2c251db51a", "patch": "@@ -78,6 +78,10 @@ fn bar<'b>() {\n \n     let a = A;\n     a.foo::<<'a>||>();\n+\n+    // issue #13490\n+    let _ = || -> ! loop {};\n+    let _ = proc() -> ! loop {};\n }\n \n struct B<T>;"}]}