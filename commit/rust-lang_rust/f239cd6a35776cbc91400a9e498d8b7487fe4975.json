{"sha": "f239cd6a35776cbc91400a9e498d8b7487fe4975", "node_id": "C_kwDOAAsO6NoAKGYyMzljZDZhMzU3NzZjYmM5MTQwMGE5ZTQ5OGQ4Yjc0ODdmZTQ5NzU", "commit": {"author": {"name": "James Dietz", "email": "jamesthespeedy@gmail.com", "date": "2023-05-05T00:54:17Z"}, "committer": {"name": "James Dietz", "email": "jamesthespeedy@gmail.com", "date": "2023-05-05T00:54:17Z"}, "message": "added SAFETY comment", "tree": {"sha": "009f7eef0587668576a522f4038c2c6f70a4433b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/009f7eef0587668576a522f4038c2c6f70a4433b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f239cd6a35776cbc91400a9e498d8b7487fe4975", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f239cd6a35776cbc91400a9e498d8b7487fe4975", "html_url": "https://github.com/rust-lang/rust/commit/f239cd6a35776cbc91400a9e498d8b7487fe4975", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f239cd6a35776cbc91400a9e498d8b7487fe4975/comments", "author": {"login": "mj10021", "id": 5280405, "node_id": "MDQ6VXNlcjUyODA0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5280405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mj10021", "html_url": "https://github.com/mj10021", "followers_url": "https://api.github.com/users/mj10021/followers", "following_url": "https://api.github.com/users/mj10021/following{/other_user}", "gists_url": "https://api.github.com/users/mj10021/gists{/gist_id}", "starred_url": "https://api.github.com/users/mj10021/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mj10021/subscriptions", "organizations_url": "https://api.github.com/users/mj10021/orgs", "repos_url": "https://api.github.com/users/mj10021/repos", "events_url": "https://api.github.com/users/mj10021/events{/privacy}", "received_events_url": "https://api.github.com/users/mj10021/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mj10021", "id": 5280405, "node_id": "MDQ6VXNlcjUyODA0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5280405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mj10021", "html_url": "https://github.com/mj10021", "followers_url": "https://api.github.com/users/mj10021/followers", "following_url": "https://api.github.com/users/mj10021/following{/other_user}", "gists_url": "https://api.github.com/users/mj10021/gists{/gist_id}", "starred_url": "https://api.github.com/users/mj10021/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mj10021/subscriptions", "organizations_url": "https://api.github.com/users/mj10021/orgs", "repos_url": "https://api.github.com/users/mj10021/repos", "events_url": "https://api.github.com/users/mj10021/events{/privacy}", "received_events_url": "https://api.github.com/users/mj10021/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb74cd524f2798a098943425c271d9eada8d901e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb74cd524f2798a098943425c271d9eada8d901e", "html_url": "https://github.com/rust-lang/rust/commit/cb74cd524f2798a098943425c271d9eada8d901e"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "2fbdab9f8ce03af6e514205d5651a0f76dd9b55a", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f239cd6a35776cbc91400a9e498d8b7487fe4975/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f239cd6a35776cbc91400a9e498d8b7487fe4975/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=f239cd6a35776cbc91400a9e498d8b7487fe4975", "patch": "@@ -330,6 +330,9 @@ pub(crate) fn print(req: PrintRequest, sess: &Session) {\n     let tm = create_informational_target_machine(sess);\n     match req {\n         PrintRequest::TargetCPUs => {\n+            // SAFETY generate a C compatible string from a byte slice to pass\n+            // the target CPU name into LLVM, the lifetime of the reference is\n+            // at least as long as the C function\n             let cpu_cstring = CString::new(handle_native(sess.target.cpu.as_ref()))\n                 .unwrap_or_else(|e| bug!(\"failed to convert to cstring: {}\", e));\n             unsafe { llvm::LLVMRustPrintTargetCPUs(tm, cpu_cstring.as_ptr()) };"}]}