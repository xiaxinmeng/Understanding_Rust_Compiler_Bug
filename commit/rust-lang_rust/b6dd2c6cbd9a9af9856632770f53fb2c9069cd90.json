{"sha": "b6dd2c6cbd9a9af9856632770f53fb2c9069cd90", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ZGQyYzZjYmQ5YTlhZjk4NTY2MzI3NzBmNTNmYjJjOTA2OWNkOTA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-11-27T17:08:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-27T17:08:22Z"}, "message": "Merge #6652\n\n6652: Add/Fix macro expansion profiling r=jonas-schievink a=jonas-schievink\n\nbors r+ :robot:\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "7bc0a9ae0196366687e2d3feae3369b1b403bf00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bc0a9ae0196366687e2d3feae3369b1b403bf00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6dd2c6cbd9a9af9856632770f53fb2c9069cd90", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfwTKGCRBK7hj4Ov3rIwAAdHIIAJ0j6mEqNwqEyi1VxRXnJZHR\nBxgyAId7TTUUWg8wzlRD1DqhJ5dqd+m6+5OvGT1njrALyOxkFSPJNX0SFYPyutjr\nWaWwXFnILs+4K5RjLc56nw/DmpgEQ6NlLayMa9nuEl4mP/XtYxyXzvCLlmISzd1T\nm0ACtMmdxxpPftc+lHkf0pU1AeVQQaXSBySsNXNrzavxBeUG0XOyLnIbki0MhrBa\nKXhznig/tv3gtAlmipJbBtarJ5xAwjuig5tpmqutybmTLlKHMVKap/E/fEZWgeWj\nHTquAHVhxAkhBSj3cWKeRfElLUF5QtiUXNKeHNeDjlXMhXXwiZFvOGMEYCi5UII=\n=2N8v\n-----END PGP SIGNATURE-----\n", "payload": "tree 7bc0a9ae0196366687e2d3feae3369b1b403bf00\nparent 0993f9067cfc14cded484906283d1df8e8741e8e\nparent ec7d2bbe420105a7101ab01b7b6e72901b3dd29a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1606496902 +0000\ncommitter GitHub <noreply@github.com> 1606496902 +0000\n\nMerge #6652\n\n6652: Add/Fix macro expansion profiling r=jonas-schievink a=jonas-schievink\n\nbors r+ :robot:\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6dd2c6cbd9a9af9856632770f53fb2c9069cd90", "html_url": "https://github.com/rust-lang/rust/commit/b6dd2c6cbd9a9af9856632770f53fb2c9069cd90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6dd2c6cbd9a9af9856632770f53fb2c9069cd90/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0993f9067cfc14cded484906283d1df8e8741e8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0993f9067cfc14cded484906283d1df8e8741e8e", "html_url": "https://github.com/rust-lang/rust/commit/0993f9067cfc14cded484906283d1df8e8741e8e"}, {"sha": "ec7d2bbe420105a7101ab01b7b6e72901b3dd29a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec7d2bbe420105a7101ab01b7b6e72901b3dd29a", "html_url": "https://github.com/rust-lang/rust/commit/ec7d2bbe420105a7101ab01b7b6e72901b3dd29a"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "bf16b56b1d57e3595a954c6eaee8f62b686351e6", "filename": "crates/hir_expand/src/db.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b6dd2c6cbd9a9af9856632770f53fb2c9069cd90/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6dd2c6cbd9a9af9856632770f53fb2c9069cd90/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdb.rs?ref=b6dd2c6cbd9a9af9856632770f53fb2c9069cd90", "patch": "@@ -189,6 +189,7 @@ fn macro_expand_with_arg(\n     id: MacroCallId,\n     arg: Option<Arc<(tt::Subtree, mbe::TokenMap)>>,\n ) -> ExpandResult<Option<Arc<tt::Subtree>>> {\n+    let _p = profile::span(\"macro_expand\");\n     let lazy_id = match id {\n         MacroCallId::LazyMacro(id) => id,\n         MacroCallId::EagerMacro(id) => {\n@@ -276,14 +277,15 @@ fn parse_macro_with_arg(\n     macro_file: MacroFile,\n     arg: Option<Arc<(tt::Subtree, mbe::TokenMap)>>,\n ) -> ExpandResult<Option<(Parse<SyntaxNode>, Arc<mbe::TokenMap>)>> {\n-    let _p = profile::span(\"parse_macro_query\");\n-\n     let macro_call_id = macro_file.macro_call_id;\n     let result = if let Some(arg) = arg {\n         macro_expand_with_arg(db, macro_call_id, Some(arg))\n     } else {\n         db.macro_expand(macro_call_id)\n     };\n+\n+    let _p = profile::span(\"parse_macro_expansion\");\n+\n     if let Some(err) = &result.err {\n         // Note:\n         // The final goal we would like to make all parse_macro success,"}]}