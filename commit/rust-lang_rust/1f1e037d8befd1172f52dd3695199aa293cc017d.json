{"sha": "1f1e037d8befd1172f52dd3695199aa293cc017d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMWUwMzdkOGJlZmQxMTcyZjUyZGQzNjk1MTk5YWEyOTNjYzAxN2Q=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-09-15T06:49:58Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-09-15T14:24:17Z"}, "message": "Avoid panicking when calling 'cargo fmt --all'", "tree": {"sha": "677f7a7cfef6752fec18bcabade0212a2c53ba05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/677f7a7cfef6752fec18bcabade0212a2c53ba05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f1e037d8befd1172f52dd3695199aa293cc017d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f1e037d8befd1172f52dd3695199aa293cc017d", "html_url": "https://github.com/rust-lang/rust/commit/1f1e037d8befd1172f52dd3695199aa293cc017d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f1e037d8befd1172f52dd3695199aa293cc017d/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e309a4ad83e1403d7bd23c4a1ee2c02cf4e273d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e309a4ad83e1403d7bd23c4a1ee2c02cf4e273d", "html_url": "https://github.com/rust-lang/rust/commit/7e309a4ad83e1403d7bd23c4a1ee2c02cf4e273d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4f611d853653cbf208772ab53d507cdd54c63b6b", "filename": "src/bin/cargo-fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f1e037d8befd1172f52dd3695199aa293cc017d/src%2Fbin%2Fcargo-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f1e037d8befd1172f52dd3695199aa293cc017d/src%2Fbin%2Fcargo-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-fmt.rs?ref=1f1e037d8befd1172f52dd3695199aa293cc017d", "patch": "@@ -248,7 +248,7 @@ fn get_targets(workspace_hitlist: &WorkspaceHitlist) -> Result<Vec<Target>, std:\n                 hitlist.take(&member_name.to_string()).is_some()\n             })\n             .collect();\n-        if hitlist.is_empty() {\n+        if !hitlist.is_empty() {\n             // Mimick cargo of only outputting one <package> spec.\n             return Err(std::io::Error::new(\n                 std::io::ErrorKind::InvalidInput,"}]}