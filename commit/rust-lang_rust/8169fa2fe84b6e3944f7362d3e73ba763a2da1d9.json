{"sha": "8169fa2fe84b6e3944f7362d3e73ba763a2da1d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxNjlmYTJmZTg0YjZlMzk0NGY3MzYyZDNlNzNiYTc2M2EyZGExZDk=", "commit": {"author": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-05-04T10:08:11Z"}, "committer": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-05-04T10:23:10Z"}, "message": "Add test for `EscapeUnicode` specializations", "tree": {"sha": "1fd377e045b352db022571dfa2f3c9cb54f0b280", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fd377e045b352db022571dfa2f3c9cb54f0b280"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8169fa2fe84b6e3944f7362d3e73ba763a2da1d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8169fa2fe84b6e3944f7362d3e73ba763a2da1d9", "html_url": "https://github.com/rust-lang/rust/commit/8169fa2fe84b6e3944f7362d3e73ba763a2da1d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8169fa2fe84b6e3944f7362d3e73ba763a2da1d9/comments", "author": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "167b510b7c59ad4d87993059401b94a5e1d1f8ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/167b510b7c59ad4d87993059401b94a5e1d1f8ff", "html_url": "https://github.com/rust-lang/rust/commit/167b510b7c59ad4d87993059401b94a5e1d1f8ff"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "e959e71daf73ff9c9d3d099743f899ac1bcf7753", "filename": "src/libcoretest/char.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/8169fa2fe84b6e3944f7362d3e73ba763a2da1d9/src%2Flibcoretest%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8169fa2fe84b6e3944f7362d3e73ba763a2da1d9/src%2Flibcoretest%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fchar.rs?ref=8169fa2fe84b6e3944f7362d3e73ba763a2da1d9", "patch": "@@ -262,4 +262,37 @@ fn ed_iterator_specializations() {\n     assert_eq!('\\''.escape_default().last(), Some('\\''));\n }\n \n+#[test]\n+fn eu_iterator_specializations() {\n+    fn check(c: char) {\n+        let len = c.escape_unicode().count();\n+\n+        // Check OoB\n+        assert_eq!(c.escape_unicode().nth(len), None);\n+\n+        // For all possible in-bound offsets\n+        let mut iter = c.escape_unicode();\n+        for offset in 0..len {\n+            // Check last\n+            assert_eq!(iter.clone().last(), Some('}'));\n \n+            // Check counting\n+            assert_eq!(iter.clone().count(), len - offset);\n+\n+            // Check nth\n+            assert_eq!(c.escape_unicode().nth(offset), iter.next());\n+        }\n+\n+        // Check post-last\n+        assert_eq!(iter.clone().last(), None);\n+        assert_eq!(iter.clone().count(), 0);\n+    }\n+\n+    check('\\u{0}');\n+    check('\\u{1}');\n+    check('\\u{12}');\n+    check('\\u{123}');\n+    check('\\u{1234}');\n+    check('\\u{12340}');\n+    check('\\u{10FFFF}');\n+}"}]}