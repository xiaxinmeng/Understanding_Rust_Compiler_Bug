{"sha": "d021c55fb9a18b854cd70a3d67a260d4d71a14c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwMjFjNTVmYjlhMThiODU0Y2Q3MGEzZDY3YTI2MGQ0ZDcxYTE0YzM=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2015-02-20T22:42:53Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2015-02-22T01:14:27Z"}, "message": "Restore the coherence visitor and fix fallouts", "tree": {"sha": "c6a318a8cda3f3a21b13c47f656f5a31f4d63a47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6a318a8cda3f3a21b13c47f656f5a31f4d63a47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d021c55fb9a18b854cd70a3d67a260d4d71a14c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d021c55fb9a18b854cd70a3d67a260d4d71a14c3", "html_url": "https://github.com/rust-lang/rust/commit/d021c55fb9a18b854cd70a3d67a260d4d71a14c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d021c55fb9a18b854cd70a3d67a260d4d71a14c3/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3343e9c16976aabef9836e61213e64a0552ec051", "url": "https://api.github.com/repos/rust-lang/rust/commits/3343e9c16976aabef9836e61213e64a0552ec051", "html_url": "https://github.com/rust-lang/rust/commit/3343e9c16976aabef9836e61213e64a0552ec051"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "366e934b4ddce1e8d5165a3bb0dc95e90d26cd08", "filename": "src/librustc_typeck/coherence/overlap.rs", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/d021c55fb9a18b854cd70a3d67a260d4d71a14c3/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d021c55fb9a18b854cd70a3d67a260d4d71a14c3/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs?ref=d021c55fb9a18b854cd70a3d67a260d4d71a14c3", "patch": "@@ -17,12 +17,18 @@ use middle::infer::{self, new_infer_ctxt};\n use syntax::ast::{DefId};\n use syntax::ast::{LOCAL_CRATE};\n use syntax::ast;\n+use syntax::ast_util;\n+use syntax::visit;\n use syntax::codemap::Span;\n use util::ppaux::Repr;\n \n pub fn check(tcx: &ty::ctxt) {\n-    let overlap = OverlapChecker { tcx: tcx };\n+    let mut overlap = OverlapChecker { tcx: tcx };\n     overlap.check_for_overlapping_impls();\n+\n+    // this secondary walk specifically checks for impls of defaulted\n+    // traits, for which additional overlap rules exist\n+    visit::walk_crate(&mut overlap, tcx.map.krate());\n }\n \n struct OverlapChecker<'cx, 'tcx:'cx> {\n@@ -122,3 +128,33 @@ impl<'cx, 'tcx> OverlapChecker<'cx, 'tcx> {\n         self.tcx.map.span(impl_did.node)\n     }\n }\n+\n+\n+impl<'cx, 'tcx,'v> visit::Visitor<'v> for OverlapChecker<'cx, 'tcx> {\n+    fn visit_item(&mut self, item: &'v ast::Item) {\n+        match item.node {\n+            ast::ItemDefaultImpl(_, _) => {\n+                let impl_def_id = ast_util::local_def(item.id);\n+                match ty::impl_trait_ref(self.tcx, impl_def_id) {\n+                    Some(ref trait_ref) => {\n+                        match ty::trait_default_impl(self.tcx, trait_ref.def_id) {\n+                            Some(other_impl) if other_impl != impl_def_id => {\n+                                self.report_overlap_error(trait_ref.def_id,\n+                                                          other_impl,\n+                                                          impl_def_id);\n+                            }\n+                            Some(_) => {}\n+                            None => {\n+                                self.tcx.sess.bug(\n+                                          &format!(\"no default implementation recorded for `{:?}`\",\n+                                          item)[]);\n+                            }\n+                        }\n+                    }\n+                    _ => {}\n+                }\n+            }\n+            _ => {}\n+        }\n+    }\n+}"}, {"sha": "6bcbefb904d9e6a510ec6120a94a40e80aeefa57", "filename": "src/test/compile-fail/coherence-default-trait-impl.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d021c55fb9a18b854cd70a3d67a260d4d71a14c3/src%2Ftest%2Fcompile-fail%2Fcoherence-default-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d021c55fb9a18b854cd70a3d67a260d4d71a14c3/src%2Ftest%2Fcompile-fail%2Fcoherence-default-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoherence-default-trait-impl.rs?ref=d021c55fb9a18b854cd70a3d67a260d4d71a14c3", "patch": "@@ -21,7 +21,4 @@ impl MyTrait for .. {}\n impl MyTrait for .. {}\n //~^ ERROR conflicting implementations for trait `MyTrait`\n \n-impl MyTrait for (i32, i32) {}\n-//~^ ERROR implementations for traits providing default implementations are only allowed on\n-\n fn main() {}"}, {"sha": "3e132dcb11fa32a3188efc241446b407c469562e", "filename": "src/test/compile-fail/coherence-impls-builtin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d021c55fb9a18b854cd70a3d67a260d4d71a14c3/src%2Ftest%2Fcompile-fail%2Fcoherence-impls-builtin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d021c55fb9a18b854cd70a3d67a260d4d71a14c3/src%2Ftest%2Fcompile-fail%2Fcoherence-impls-builtin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoherence-impls-builtin.rs?ref=d021c55fb9a18b854cd70a3d67a260d4d71a14c3", "patch": "@@ -34,6 +34,7 @@ unsafe impl Send for [MyType] {}\n \n unsafe impl Send for &'static [NotSync] {}\n //~^ ERROR builtin traits can only be implemented on structs or enums\n+//~^^ ERROR conflicting implementations for trait `core::marker::Send`\n \n fn is_send<T: Send>() {}\n "}, {"sha": "e8bc11317f2aadbd597b1a58228d0a61be3505a1", "filename": "src/test/compile-fail/recursion_limit.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d021c55fb9a18b854cd70a3d67a260d4d71a14c3/src%2Ftest%2Fcompile-fail%2Frecursion_limit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d021c55fb9a18b854cd70a3d67a260d4d71a14c3/src%2Ftest%2Fcompile-fail%2Frecursion_limit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frecursion_limit.rs?ref=d021c55fb9a18b854cd70a3d67a260d4d71a14c3", "patch": "@@ -47,4 +47,7 @@ fn main() {\n     //~^^^^ ERROR overflow evaluating\n     //~^^^^^ NOTE consider adding a `#![recursion_limit=\"20\"]` attribute to your crate\n     //~^^^^^^ NOTE required by `is_send`\n+    //~^^^^^^^ ERROR overflow evaluating\n+    //~^^^^^^^^ NOTE consider adding a `#![recursion_limit=\"20\"]` attribute to your crate\n+    //~^^^^^^^^^ NOTE required by `is_send`\n }"}, {"sha": "4006eb2e83ed92383d1e755b09c398c2b24e459b", "filename": "src/test/compile-fail/typeck-default-trait-impl-precedence.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d021c55fb9a18b854cd70a3d67a260d4d71a14c3/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d021c55fb9a18b854cd70a3d67a260d4d71a14c3/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-default-trait-impl-precedence.rs?ref=d021c55fb9a18b854cd70a3d67a260d4d71a14c3", "patch": "@@ -29,4 +29,5 @@ impl Signed for i32 { }\n fn main() {\n     is_defaulted::<&'static i32>();\n     is_defaulted::<&'static u32>();\n+    //~^ ERROR the trait `Signed` is not implemented for the type `u32`\n }"}]}