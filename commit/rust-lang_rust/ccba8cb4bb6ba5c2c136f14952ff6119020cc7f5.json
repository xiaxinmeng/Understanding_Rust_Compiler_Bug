{"sha": "ccba8cb4bb6ba5c2c136f14952ff6119020cc7f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYmE4Y2I0YmI2YmE1YzJjMTM2ZjE0OTUyZmY2MTE5MDIwY2M3ZjU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-09-15T16:44:31Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-09-15T16:46:53Z"}, "message": "Make two functions private", "tree": {"sha": "1307dbb1869a13e68670a268e2c7210809e697b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1307dbb1869a13e68670a268e2c7210809e697b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccba8cb4bb6ba5c2c136f14952ff6119020cc7f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccba8cb4bb6ba5c2c136f14952ff6119020cc7f5", "html_url": "https://github.com/rust-lang/rust/commit/ccba8cb4bb6ba5c2c136f14952ff6119020cc7f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccba8cb4bb6ba5c2c136f14952ff6119020cc7f5/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ad89819457e7067884597e9a816dab483377ed5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ad89819457e7067884597e9a816dab483377ed5", "html_url": "https://github.com/rust-lang/rust/commit/0ad89819457e7067884597e9a816dab483377ed5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4cdf2167b9034a602c6f222fc33e2dcfac58140d", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ccba8cb4bb6ba5c2c136f14952ff6119020cc7f5/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccba8cb4bb6ba5c2c136f14952ff6119020cc7f5/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=ccba8cb4bb6ba5c2c136f14952ff6119020cc7f5", "patch": "@@ -1726,7 +1726,7 @@ impl Interner {\n     }\n \n     #[inline]\n-    pub(crate) fn intern(&self, string: &str) -> Symbol {\n+    fn intern(&self, string: &str) -> Symbol {\n         let mut inner = self.0.lock();\n         if let Some(&name) = inner.names.get(string) {\n             return name;\n@@ -1748,7 +1748,7 @@ impl Interner {\n \n     // Get the symbol as a string. `Symbol::as_str()` should be used in\n     // preference to this function.\n-    pub(crate) fn get(&self, symbol: Symbol) -> &str {\n+    fn get(&self, symbol: Symbol) -> &str {\n         self.0.lock().strings[symbol.0.as_usize()]\n     }\n }"}]}