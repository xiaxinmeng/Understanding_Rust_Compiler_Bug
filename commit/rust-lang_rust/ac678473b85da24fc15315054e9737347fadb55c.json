{"sha": "ac678473b85da24fc15315054e9737347fadb55c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNjc4NDczYjg1ZGEyNGZjMTUzMTUwNTRlOTczNzM0N2ZhZGI1NWM=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-03-04T14:52:48Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-03-04T14:52:48Z"}, "message": "Use impl_froms!", "tree": {"sha": "ce8e8dfab834b7bbb7f1a073a045cafeedfe2d0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce8e8dfab834b7bbb7f1a073a045cafeedfe2d0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac678473b85da24fc15315054e9737347fadb55c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac678473b85da24fc15315054e9737347fadb55c", "html_url": "https://github.com/rust-lang/rust/commit/ac678473b85da24fc15315054e9737347fadb55c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac678473b85da24fc15315054e9737347fadb55c/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1578375b89848b98a4d5187aaf794bc227d1eda6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1578375b89848b98a4d5187aaf794bc227d1eda6", "html_url": "https://github.com/rust-lang/rust/commit/1578375b89848b98a4d5187aaf794bc227d1eda6"}], "stats": {"total": 16, "additions": 3, "deletions": 13}, "files": [{"sha": "268d2c1104692942ad1afb77b9df2d0f25d28729", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ac678473b85da24fc15315054e9737347fadb55c/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac678473b85da24fc15315054e9737347fadb55c/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=ac678473b85da24fc15315054e9737347fadb55c", "patch": "@@ -57,21 +57,11 @@ pub fn infer(db: &impl HirDatabase, func: Function) -> Arc<InferenceResult> {\n \n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n enum ExprOrPatId {\n-    Expr(ExprId),\n-    Pat(PatId),\n+    ExprId(ExprId),\n+    PatId(PatId),\n }\n \n-impl From<ExprId> for ExprOrPatId {\n-    fn from(id: ExprId) -> Self {\n-        ExprOrPatId::Expr(id)\n-    }\n-}\n-\n-impl From<PatId> for ExprOrPatId {\n-    fn from(id: PatId) -> Self {\n-        ExprOrPatId::Pat(id)\n-    }\n-}\n+impl_froms!(ExprOrPatId: ExprId, PatId);\n \n /// The result of type inference: A mapping from expressions and patterns to types.\n #[derive(Clone, PartialEq, Eq, Debug)]"}]}