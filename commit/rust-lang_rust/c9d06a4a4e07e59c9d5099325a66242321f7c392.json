{"sha": "c9d06a4a4e07e59c9d5099325a66242321f7c392", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5ZDA2YTRhNGUwN2U1OWM5ZDUwOTkzMjVhNjYyNDIzMjFmN2MzOTI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-17T09:20:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-17T09:20:42Z"}, "message": "Rollup merge of #48960 - nikomatsakis:issue-48468-dyn-trait-elision, r=cramertj\n\nresolve `'_` in `dyn Trait` just like ordinary elision\n\nr? @cramertj\n\nFixes #48468", "tree": {"sha": "56676a661770ee138524798990ac9e0900fb893a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56676a661770ee138524798990ac9e0900fb893a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9d06a4a4e07e59c9d5099325a66242321f7c392", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJarN3qCRBK7hj4Ov3rIwAAdHIIAH1+Fr14hWJ2lm1iyCVP6bn+\nJ8fDVd1sVzuwWmoqcIPn2pAbFxNAr+oNENjxA+9DASHWRtVGknnunmoZCuYylNnC\nm+cn3ExGSsOZnvxwg0WoKLahvkhd5TIfDIufx0RYL2G2hZRk7a2T6+ghkMlE4atz\n0G1OYG99cMv7gADl+zALFXcMhEBOMaY/E/3b39uyF5+lBeKgkckAt/3ldJ6FtHQt\nqXRclM2pAl1W/T4Ln4TH+ii6Akyr9ukXM+AoVyXkLtoKRwwUCyh5e4msieQI+exo\nJnm8tPNZH7bBnuO396zOrtKohV90/5K14Ldp9S8KQO2CjpiEZNbpwJjk9UIKetw=\n=PTnK\n-----END PGP SIGNATURE-----\n", "payload": "tree 56676a661770ee138524798990ac9e0900fb893a\nparent 2a7dac05e7d774c0b2138fbb7139f73f86808cdd\nparent f9bf8270556ea7f89df32c40bd536a26457f8818\nauthor kennytm <kennytm@gmail.com> 1521278442 +0800\ncommitter GitHub <noreply@github.com> 1521278442 +0800\n\nRollup merge of #48960 - nikomatsakis:issue-48468-dyn-trait-elision, r=cramertj\n\nresolve `'_` in `dyn Trait` just like ordinary elision\n\nr? @cramertj\n\nFixes #48468\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9d06a4a4e07e59c9d5099325a66242321f7c392", "html_url": "https://github.com/rust-lang/rust/commit/c9d06a4a4e07e59c9d5099325a66242321f7c392", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9d06a4a4e07e59c9d5099325a66242321f7c392/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a7dac05e7d774c0b2138fbb7139f73f86808cdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a7dac05e7d774c0b2138fbb7139f73f86808cdd", "html_url": "https://github.com/rust-lang/rust/commit/2a7dac05e7d774c0b2138fbb7139f73f86808cdd"}, {"sha": "f9bf8270556ea7f89df32c40bd536a26457f8818", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9bf8270556ea7f89df32c40bd536a26457f8818", "html_url": "https://github.com/rust-lang/rust/commit/f9bf8270556ea7f89df32c40bd536a26457f8818"}], "stats": {"total": 84, "additions": 80, "deletions": 4}, "files": [{"sha": "0aa750aba066057b50db4eca855e2472a535362f", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c9d06a4a4e07e59c9d5099325a66242321f7c392/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9d06a4a4e07e59c9d5099325a66242321f7c392/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=c9d06a4a4e07e59c9d5099325a66242321f7c392", "patch": "@@ -19,6 +19,7 @@ use hir::map::Map;\n use hir::def::Def;\n use hir::def_id::{CrateNum, DefId, LocalDefId, LOCAL_CRATE};\n use hir::ItemLocalId;\n+use hir::LifetimeName;\n use ty::{self, TyCtxt};\n \n use std::cell::Cell;\n@@ -569,10 +570,26 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n                 for bound in bounds {\n                     self.visit_poly_trait_ref(bound, hir::TraitBoundModifier::None);\n                 }\n-                if lifetime.is_elided() {\n-                    self.resolve_object_lifetime_default(lifetime)\n-                } else {\n-                    self.visit_lifetime(lifetime);\n+                match lifetime.name {\n+                    LifetimeName::Implicit => {\n+                        // If the user does not write *anything*, we\n+                        // use the object lifetime defaulting\n+                        // rules. So e.g. `Box<dyn Debug>` becomes\n+                        // `Box<dyn Debug + 'static>`.\n+                        self.resolve_object_lifetime_default(lifetime)\n+                    }\n+                    LifetimeName::Underscore => {\n+                        // If the user writes `'_`, we use the *ordinary* elision\n+                        // rules. So the `'_` in e.g. `Box<dyn Debug + '_>` will be\n+                        // resolved the same as the `'_` in `&'_ Foo`.\n+                        //\n+                        // cc #48468\n+                        self.resolve_elided_lifetimes(slice::from_ref(lifetime), false)\n+                    }\n+                    LifetimeName::Static | LifetimeName::Name(_) => {\n+                        // If the user wrote an explicit name, use that.\n+                        self.visit_lifetime(lifetime);\n+                    }\n                 }\n             }\n             hir::TyRptr(ref lifetime_ref, ref mt) => {"}, {"sha": "c24762201004b4bbe9b90d2ed1d14e0e406af069", "filename": "src/test/ui/underscore-lifetime/dyn-trait-underscore.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c9d06a4a4e07e59c9d5099325a66242321f7c392/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9d06a4a4e07e59c9d5099325a66242321f7c392/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.rs?ref=c9d06a4a4e07e59c9d5099325a66242321f7c392", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Check that the `'_` in `dyn Trait + '_` acts like ordinary elision,\n+// and not like an object lifetime default.\n+//\n+// cc #48468\n+\n+#![feature(dyn_trait)]\n+#![feature(underscore_lifetimes)]\n+\n+fn a<T>(items: &[T]) -> Box<dyn Iterator<Item=&T>> {\n+    //                      ^^^^^^^^^^^^^^^^^^^^^ bound *here* defaults to `'static`\n+    Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n+}\n+\n+fn b<T>(items: &[T]) -> Box<dyn Iterator<Item=&T> + '_> {\n+    Box::new(items.iter()) // OK, equivalent to c\n+}\n+\n+fn c<'a, T>(items: &'a [T]) -> Box<dyn Iterator<Item=&'a T> + 'a> {\n+    Box::new(items.iter()) // OK, equivalent to b\n+}\n+\n+fn main() { }"}, {"sha": "cb3035f42a04a1256cbade9a68eef0b67b594ab6", "filename": "src/test/ui/underscore-lifetime/dyn-trait-underscore.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/c9d06a4a4e07e59c9d5099325a66242321f7c392/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c9d06a4a4e07e59c9d5099325a66242321f7c392/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.stderr?ref=c9d06a4a4e07e59c9d5099325a66242321f7c392", "patch": "@@ -0,0 +1,27 @@\n+error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n+  --> $DIR/dyn-trait-underscore.rs:21:20\n+   |\n+LL |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n+   |                    ^^^^\n+   |\n+note: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the function body at 19:1...\n+  --> $DIR/dyn-trait-underscore.rs:19:1\n+   |\n+LL | / fn a<T>(items: &[T]) -> Box<dyn Iterator<Item=&T>> {\n+LL | |     //                      ^^^^^^^^^^^^^^^^^^^^^ bound *here* defaults to `'static`\n+LL | |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n+LL | | }\n+   | |_^\n+note: ...so that reference does not outlive borrowed content\n+  --> $DIR/dyn-trait-underscore.rs:21:14\n+   |\n+LL |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n+   |              ^^^^^\n+   = note: but, the lifetime must be valid for the static lifetime...\n+   = note: ...so that the expression is assignable:\n+           expected std::boxed::Box<std::iter::Iterator<Item=&T> + 'static>\n+              found std::boxed::Box<std::iter::Iterator<Item=&T>>\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0495`."}]}