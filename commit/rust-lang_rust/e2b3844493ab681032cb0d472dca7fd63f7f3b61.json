{"sha": "e2b3844493ab681032cb0d472dca7fd63f7f3b61", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyYjM4NDQ0OTNhYjY4MTAzMmNiMGQ0NzJkY2E3ZmQ2M2Y3ZjNiNjE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-09-02T16:21:28Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-09-02T16:21:28Z"}, "message": "remove needless clone", "tree": {"sha": "8be5bb466275b740440d5a9240dfee154cc175f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8be5bb466275b740440d5a9240dfee154cc175f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2b3844493ab681032cb0d472dca7fd63f7f3b61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2b3844493ab681032cb0d472dca7fd63f7f3b61", "html_url": "https://github.com/rust-lang/rust/commit/e2b3844493ab681032cb0d472dca7fd63f7f3b61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2b3844493ab681032cb0d472dca7fd63f7f3b61/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4417a97bc519d8cf658dbd2d09e1d34c8b8f1f23", "url": "https://api.github.com/repos/rust-lang/rust/commits/4417a97bc519d8cf658dbd2d09e1d34c8b8f1f23", "html_url": "https://github.com/rust-lang/rust/commit/4417a97bc519d8cf658dbd2d09e1d34c8b8f1f23"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "01641fdee3f768599742eec9e8d7f4f48ba5e429", "filename": "crates/ra_mbe/src/mbe_expander.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2b3844493ab681032cb0d472dca7fd63f7f3b61/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b3844493ab681032cb0d472dca7fd63f7f3b61/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fmbe_expander.rs?ref=e2b3844493ab681032cb0d472dca7fd63f7f3b61", "patch": "@@ -193,7 +193,7 @@ fn match_lhs(pattern: &crate::Subtree, input: &mut TtCursor) -> Result<Bindings,\n         match pat {\n             crate::TokenTree::Leaf(leaf) => match leaf {\n                 crate::Leaf::Var(crate::Var { text, kind }) => {\n-                    let kind = kind.clone().ok_or(ExpandError::UnexpectedToken)?;\n+                    let kind = kind.as_ref().ok_or(ExpandError::UnexpectedToken)?;\n                     match match_meta_var(kind.as_str(), input)? {\n                         Some(tt) => {\n                             res.inner.insert(text.clone(), Binding::Simple(tt));"}]}