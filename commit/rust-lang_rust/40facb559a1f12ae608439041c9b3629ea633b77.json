{"sha": "40facb559a1f12ae608439041c9b3629ea633b77", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwZmFjYjU1OWExZjEyYWU2MDg0MzkwNDFjOWIzNjI5ZWE2MzNiNzc=", "commit": {"author": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-02T19:40:59Z"}, "committer": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-02T19:40:59Z"}, "message": "Change postfix completion to keyword completion", "tree": {"sha": "b2c629595f3c0922d37b2517e70835883c44f6af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2c629595f3c0922d37b2517e70835883c44f6af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40facb559a1f12ae608439041c9b3629ea633b77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40facb559a1f12ae608439041c9b3629ea633b77", "html_url": "https://github.com/rust-lang/rust/commit/40facb559a1f12ae608439041c9b3629ea633b77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40facb559a1f12ae608439041c9b3629ea633b77/comments", "author": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "291bd81e74742472572c88ccf3d2cf9cf70af6b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/291bd81e74742472572c88ccf3d2cf9cf70af6b2", "html_url": "https://github.com/rust-lang/rust/commit/291bd81e74742472572c88ccf3d2cf9cf70af6b2"}], "stats": {"total": 30, "additions": 8, "deletions": 22}, "files": [{"sha": "272a38f1199650151f48f4599c453bbef1d8099a", "filename": "crates/ra_ide_api/src/completion/complete_dot.rs", "status": "modified", "additions": 8, "deletions": 22, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/40facb559a1f12ae608439041c9b3629ea633b77/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40facb559a1f12ae608439041c9b3629ea633b77/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=40facb559a1f12ae608439041c9b3629ea633b77", "patch": "@@ -10,25 +10,9 @@ use ra_syntax::TextRange;\n use ra_text_edit::TextEditBuilder;\n use rustc_hash::FxHashSet;\n \n-/// Applies postfix edition but with CompletionKind::Reference\n-fn postfix_reference(ctx: &CompletionContext, label: &str, detail: &str, snippet: &str) -> Builder {\n-    let edit = {\n-        let receiver_range =\n-            ctx.dot_receiver.as_ref().expect(\"no receiver available\").syntax().text_range();\n-        let delete_range = TextRange::from_to(receiver_range.start(), ctx.source_range().end());\n-        let mut builder = TextEditBuilder::default();\n-        builder.replace(delete_range, snippet.to_string());\n-        builder.finish()\n-    };\n-    CompletionItem::new(CompletionKind::Reference, ctx.source_range(), label)\n-        .detail(detail)\n-        .snippet_edit(edit)\n-}\n-\n /// Complete dot accesses, i.e. fields or methods (and .await syntax).\n pub(super) fn complete_dot(acc: &mut Completions, ctx: &CompletionContext) {\n     if let Some(dot_receiver) = &ctx.dot_receiver {\n-        let receiver_text = dot_receiver.syntax().text().to_string();\n         let receiver_ty = ctx.analyzer.type_of(ctx.db, &dot_receiver);\n \n         if let Some(receiver_ty) = receiver_ty {\n@@ -39,7 +23,9 @@ pub(super) fn complete_dot(acc: &mut Completions, ctx: &CompletionContext) {\n \n             // Suggest .await syntax for types that implement Future trait\n             if ctx.analyzer.impls_future(ctx.db, receiver_ty) {\n-                postfix_reference(ctx, \".await\", \"expr.await\", &format!(\"{}.await\", receiver_text))\n+                CompletionItem::new(CompletionKind::Keyword, ctx.source_range(), \"await\")\n+                    .detail(\"expr.await\")\n+                    .insert_text(\"await\")\n                     .add_to(acc);\n             }\n         }\n@@ -440,7 +426,7 @@ mod tests {\n     #[test]\n     fn test_completion_await_impls_future() {\n         assert_debug_snapshot_matches!(\n-        do_ref_completion(\n+        do_completion(\n             r###\"\n             // Mock Future trait from stdlib\n             pub mod std {\n@@ -457,14 +443,14 @@ mod tests {\n             fn foo(a: A) {\n                 a.<|>\n             }\n-            \"###),\n+            \"###, CompletionKind::Keyword),\n         @r###\"\n        \u22ee[\n        \u22ee    CompletionItem {\n-       \u22ee        label: \".await\",\n+       \u22ee        label: \"await\",\n        \u22ee        source_range: [358; 358),\n-       \u22ee        delete: [356; 358),\n-       \u22ee        insert: \"a.await\",\n+       \u22ee        delete: [358; 358),\n+       \u22ee        insert: \"await\",\n        \u22ee        detail: \"expr.await\",\n        \u22ee    },\n        \u22ee]"}]}