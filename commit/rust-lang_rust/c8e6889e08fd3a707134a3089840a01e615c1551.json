{"sha": "c8e6889e08fd3a707134a3089840a01e615c1551", "node_id": "C_kwDOAAsO6NoAKGM4ZTY4ODllMDhmZDNhNzA3MTM0YTMwODk4NDBhMDFlNjE1YzE1NTE", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-01-19T17:41:04Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-01-19T17:41:04Z"}, "message": "Add assert that fallback targets must be available.", "tree": {"sha": "be6e6a36e360c8ce1f7ce7ee9064fc210a596579", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be6e6a36e360c8ce1f7ce7ee9064fc210a596579"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8e6889e08fd3a707134a3089840a01e615c1551", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8e6889e08fd3a707134a3089840a01e615c1551", "html_url": "https://github.com/rust-lang/rust/commit/c8e6889e08fd3a707134a3089840a01e615c1551", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8e6889e08fd3a707134a3089840a01e615c1551/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a1099c2026dc224bdf53a17665cef563f10755a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a1099c2026dc224bdf53a17665cef563f10755a", "html_url": "https://github.com/rust-lang/rust/commit/6a1099c2026dc224bdf53a17665cef563f10755a"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "6b56d6bc4adf068391105254d9e00539619fb004", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c8e6889e08fd3a707134a3089840a01e615c1551/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8e6889e08fd3a707134a3089840a01e615c1551/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=c8e6889e08fd3a707134a3089840a01e615c1551", "patch": "@@ -536,7 +536,10 @@ impl Builder {\n             }\n             for (substr, fallback_target) in fallback {\n                 if target_name.contains(substr) {\n-                    return Target::from_compressed_tar(self, &tarball_name!(fallback_target));\n+                    let t = Target::from_compressed_tar(self, &tarball_name!(fallback_target));\n+                    // Fallbacks must always be available.\n+                    assert!(t.available);\n+                    return t;\n                 }\n             }\n             Target::unavailable()"}]}