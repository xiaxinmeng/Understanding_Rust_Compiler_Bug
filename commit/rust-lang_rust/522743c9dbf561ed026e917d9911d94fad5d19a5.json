{"sha": "522743c9dbf561ed026e917d9911d94fad5d19a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMjc0M2M5ZGJmNTYxZWQwMjZlOTE3ZDk5MTFkOTRmYWQ1ZDE5YTU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-22T01:20:42Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:33Z"}, "message": "librustc: De-`@mut` the moved variables set", "tree": {"sha": "593769c052d1c3000ca5d250b0e3d39863d50141", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/593769c052d1c3000ca5d250b0e3d39863d50141"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/522743c9dbf561ed026e917d9911d94fad5d19a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/522743c9dbf561ed026e917d9911d94fad5d19a5", "html_url": "https://github.com/rust-lang/rust/commit/522743c9dbf561ed026e917d9911d94fad5d19a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/522743c9dbf561ed026e917d9911d94fad5d19a5/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cb234bee9dcb411031d4a0b960b2096258aa6ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cb234bee9dcb411031d4a0b960b2096258aa6ad", "html_url": "https://github.com/rust-lang/rust/commit/7cb234bee9dcb411031d4a0b960b2096258aa6ad"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "38598e8b78fc9512a2d45abdf6f6e2442c8aeeef", "filename": "src/librustc/middle/borrowck/gather_loans/lifetime.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/522743c9dbf561ed026e917d9911d94fad5d19a5/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Flifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522743c9dbf561ed026e917d9911d94fad5d19a5/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Flifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Flifetime.rs?ref=522743c9dbf561ed026e917d9911d94fad5d19a5", "patch": "@@ -305,7 +305,10 @@ impl<'a> GuaranteeLifetimeContext<'a> {\n             mc::cat_local(id) |\n             mc::cat_self(id) |\n             mc::cat_arg(id) => {\n-                self.bccx.moved_variables_set.contains(&id)\n+                let moved_variables_set = self.bccx\n+                                              .moved_variables_set\n+                                              .borrow();\n+                moved_variables_set.get().contains(&id)\n             }\n             mc::cat_rvalue(..) |\n             mc::cat_static_item |"}, {"sha": "52c20ba281992ea8d7e71f615996cdd3130a1bf4", "filename": "src/librustc/middle/moves.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/522743c9dbf561ed026e917d9911d94fad5d19a5/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/522743c9dbf561ed026e917d9911d94fad5d19a5/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmoves.rs?ref=522743c9dbf561ed026e917d9911d94fad5d19a5", "patch": "@@ -169,7 +169,7 @@ pub type MovesMap = @RefCell<HashSet<NodeId>>;\n  * Note: The `VariableMovesMap` stores expression ids that\n  * are moves, whereas this set stores the ids of the variables\n  * that are moved at some point */\n-pub type MovedVariablesSet = @mut HashSet<NodeId>;\n+pub type MovedVariablesSet = @RefCell<HashSet<NodeId>>;\n \n /** See the section Output on the module comment for explanation. */\n #[deriving(Clone)]\n@@ -217,7 +217,7 @@ pub fn compute_moves(tcx: ty::ctxt,\n         move_maps: MoveMaps {\n             moves_map: @RefCell::new(HashSet::new()),\n             capture_map: @RefCell::new(HashMap::new()),\n-            moved_variables_set: @mut HashSet::new()\n+            moved_variables_set: @RefCell::new(HashSet::new())\n         }\n     };\n     let visit_cx = &mut visit_cx;\n@@ -344,7 +344,11 @@ impl VisitContext {\n                         let def = self.tcx.def_map.get_copy(&expr.id);\n                         let r = moved_variable_node_id_from_def(def);\n                         for &id in r.iter() {\n-                            self.move_maps.moved_variables_set.insert(id);\n+                            let mut moved_variables_set =\n+                                self.move_maps\n+                                    .moved_variables_set\n+                                    .borrow_mut();\n+                            moved_variables_set.get().insert(id);\n                         }\n                     }\n                     Read => {}"}]}