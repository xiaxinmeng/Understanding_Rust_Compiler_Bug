{"sha": "cf6d14cee7fee17ed668f502de5042136446945b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNmQxNGNlZTdmZWUxN2VkNjY4ZjUwMmRlNTA0MjEzNjQ0Njk0NWI=", "commit": {"author": {"name": "Jeremy Kolb", "email": "kjeremy@gmail.com", "date": "2020-08-09T20:27:48Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-08-10T15:03:08Z"}, "message": "Return InvalidRequest if Shutdown has been requested\n\nFrom the LSP 3.16 spec: \"If a server receives requests after a shutdown request those requests should error with InvalidRequest.\"", "tree": {"sha": "b5c91a8daa3c9461b1e9305ae141ece3907b4d9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5c91a8daa3c9461b1e9305ae141ece3907b4d9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf6d14cee7fee17ed668f502de5042136446945b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf6d14cee7fee17ed668f502de5042136446945b", "html_url": "https://github.com/rust-lang/rust/commit/cf6d14cee7fee17ed668f502de5042136446945b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf6d14cee7fee17ed668f502de5042136446945b/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cef39c3efb98e5ece42bb72c14d96388380a308c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cef39c3efb98e5ece42bb72c14d96388380a308c", "html_url": "https://github.com/rust-lang/rust/commit/cef39c3efb98e5ece42bb72c14d96388380a308c"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "658a50d1507ddf10a5a022386dde7abcbb1d7b44", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf6d14cee7fee17ed668f502de5042136446945b/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf6d14cee7fee17ed668f502de5042136446945b/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=cf6d14cee7fee17ed668f502de5042136446945b", "patch": "@@ -73,6 +73,7 @@ pub(crate) struct GlobalState {\n     pub(crate) mem_docs: FxHashMap<VfsPath, DocumentData>,\n     pub(crate) semantic_tokens_cache: Arc<Mutex<FxHashMap<Url, SemanticTokens>>>,\n     pub(crate) vfs: Arc<RwLock<(vfs::Vfs, FxHashMap<FileId, LineEndings>)>>,\n+    pub(crate) shutdown_requested: bool,\n     pub(crate) status: Status,\n     pub(crate) source_root_config: SourceRootConfig,\n     pub(crate) proc_macro_client: ProcMacroClient,\n@@ -124,6 +125,7 @@ impl GlobalState {\n             mem_docs: FxHashMap::default(),\n             semantic_tokens_cache: Arc::new(Default::default()),\n             vfs: Arc::new(RwLock::new((vfs::Vfs::default(), FxHashMap::default()))),\n+            shutdown_requested: false,\n             status: Status::default(),\n             source_root_config: SourceRootConfig::default(),\n             proc_macro_client: ProcMacroClient::dummy(),"}, {"sha": "e6cf46df23ea668b3258bde9c3d6ed478c01242a", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cf6d14cee7fee17ed668f502de5042136446945b/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf6d14cee7fee17ed668f502de5042136446945b/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=cf6d14cee7fee17ed668f502de5042136446945b", "patch": "@@ -337,6 +337,16 @@ impl GlobalState {\n     fn on_request(&mut self, request_received: Instant, req: Request) -> Result<()> {\n         self.register_request(&req, request_received);\n \n+        if self.shutdown_requested {\n+            self.respond(Response::new_err(\n+                req.id,\n+                lsp_server::ErrorCode::InvalidRequest as i32,\n+                \"Shutdown already requested.\".to_owned(),\n+            ));\n+\n+            return Ok(());\n+        }\n+\n         if self.status == Status::Loading && req.method != \"shutdown\" {\n             self.respond(lsp_server::Response::new_err(\n                 req.id,\n@@ -351,7 +361,10 @@ impl GlobalState {\n             .on_sync::<lsp_ext::ReloadWorkspace>(|s, ()| Ok(s.fetch_workspaces()))?\n             .on_sync::<lsp_ext::JoinLines>(|s, p| handlers::handle_join_lines(s.snapshot(), p))?\n             .on_sync::<lsp_ext::OnEnter>(|s, p| handlers::handle_on_enter(s.snapshot(), p))?\n-            .on_sync::<lsp_types::request::Shutdown>(|_, ()| Ok(()))?\n+            .on_sync::<lsp_types::request::Shutdown>(|s, ()| {\n+                s.shutdown_requested = true;\n+                Ok(())\n+            })?\n             .on_sync::<lsp_types::request::SelectionRangeRequest>(|s, p| {\n                 handlers::handle_selection_range(s.snapshot(), p)\n             })?"}]}