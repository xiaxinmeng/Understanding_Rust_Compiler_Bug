{"sha": "43ad8e4260bec289c522a2fd3597c275e9e3c39c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYWQ4ZTQyNjBiZWMyODljNTIyYTJmZDM1OTdjMjc1ZTllM2MzOWM=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-05-25T21:22:19Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-18T19:23:00Z"}, "message": "simplify_try: print dest_prop diff and bless\n\nThe new diff is to convince me that this is correct and nothing funky\nis going on.", "tree": {"sha": "8365ea4cd57c9019c1ebc9d349f791f21259e501", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8365ea4cd57c9019c1ebc9d349f791f21259e501"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43ad8e4260bec289c522a2fd3597c275e9e3c39c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43ad8e4260bec289c522a2fd3597c275e9e3c39c", "html_url": "https://github.com/rust-lang/rust/commit/43ad8e4260bec289c522a2fd3597c275e9e3c39c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43ad8e4260bec289c522a2fd3597c275e9e3c39c/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78ff69ba1086decb205b988f05aba7711dddb221", "url": "https://api.github.com/repos/rust-lang/rust/commits/78ff69ba1086decb205b988f05aba7711dddb221", "html_url": "https://github.com/rust-lang/rust/commit/78ff69ba1086decb205b988f05aba7711dddb221"}], "stats": {"total": 150, "additions": 148, "deletions": 2}, "files": [{"sha": "ff84af7491dbfb57e889e99682080a841e1d1e56", "filename": "src/test/mir-opt/rustc.try_identity.DestinationPropagation.diff", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/43ad8e4260bec289c522a2fd3597c275e9e3c39c/src%2Ftest%2Fmir-opt%2Frustc.try_identity.DestinationPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/43ad8e4260bec289c522a2fd3597c275e9e3c39c/src%2Ftest%2Fmir-opt%2Frustc.try_identity.DestinationPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Frustc.try_identity.DestinationPropagation.diff?ref=43ad8e4260bec289c522a2fd3597c275e9e3c39c", "patch": "@@ -0,0 +1,72 @@\n+- // MIR for `try_identity` before DestinationPropagation\n++ // MIR for `try_identity` after DestinationPropagation\n+  \n+  fn try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i32> {\n+      debug x => _1;                       // in scope 0 at $DIR/simplify_try.rs:5:17: 5:18\n+      let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/simplify_try.rs:5:41: 5:57\n+      let _2: u32;                         // in scope 0 at $DIR/simplify_try.rs:6:9: 6:10\n+      let mut _3: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n+      let mut _4: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n+      let mut _5: isize;                   // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+      let _6: i32;                         // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+      let mut _7: !;                       // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+      let mut _8: i32;                     // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+      let mut _9: i32;                     // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+      let _10: u32;                        // in scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n+      let mut _11: u32;                    // in scope 0 at $DIR/simplify_try.rs:7:8: 7:9\n+      scope 1 {\n+          debug y => _2;                   // in scope 1 at $DIR/simplify_try.rs:6:9: 6:10\n+      }\n+      scope 2 {\n+          debug err => _6;                 // in scope 2 at $DIR/simplify_try.rs:6:14: 6:15\n+          scope 3 {\n+              scope 7 {\n+                  debug t => _9;           // in scope 7 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n+              }\n+              scope 8 {\n+                  debug v => _8;           // in scope 8 at $SRC_DIR/libcore/result.rs:LL:COL\n+                  let mut _12: i32;        // in scope 8 at $DIR/simplify_try.rs:6:14: 6:15\n+              }\n+          }\n+      }\n+      scope 4 {\n+          debug val => _10;                // in scope 4 at $DIR/simplify_try.rs:6:13: 6:15\n+          scope 5 {\n+          }\n+      }\n+      scope 6 {\n+-         debug self => _4;                // in scope 6 at $SRC_DIR/libcore/result.rs:LL:COL\n++         debug self => _0;                // in scope 6 at $SRC_DIR/libcore/result.rs:LL:COL\n+      }\n+  \n+      bb0: {\n+          StorageLive(_2);                 // scope 0 at $DIR/simplify_try.rs:6:9: 6:10\n+-         StorageLive(_3);                 // scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n+-         StorageLive(_4);                 // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n+-         _4 = _1;                         // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n+-         _3 = move _4;                    // scope 6 at $SRC_DIR/libcore/result.rs:LL:COL\n+-         StorageDead(_4);                 // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+-         _5 = discriminant(_3);           // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n++         _0 = _1;                         // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n++         nop;                             // scope 6 at $SRC_DIR/libcore/result.rs:LL:COL\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n++         _5 = discriminant(_0);           // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+          goto -> bb1;                     // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+      }\n+  \n+      bb1: {\n+-         _0 = move _3;                    // scope 1 at $DIR/simplify_try.rs:7:5: 7:10\n+-         StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:6:15: 6:16\n++         nop;                             // scope 1 at $DIR/simplify_try.rs:7:5: 7:10\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:6:15: 6:16\n+          StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:8:1: 8:2\n+          goto -> bb2;                     // scope 0 at $DIR/simplify_try.rs:8:2: 8:2\n+      }\n+  \n+      bb2: {\n+          return;                          // scope 0 at $DIR/simplify_try.rs:8:2: 8:2\n+      }\n+  }\n+  "}, {"sha": "d77e17c1c62fba83af19e27737342ab642d397ff", "filename": "src/test/mir-opt/simplify_try.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43ad8e4260bec289c522a2fd3597c275e9e3c39c/src%2Ftest%2Fmir-opt%2Fsimplify_try.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43ad8e4260bec289c522a2fd3597c275e9e3c39c/src%2Ftest%2Fmir-opt%2Fsimplify_try.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_try.rs?ref=43ad8e4260bec289c522a2fd3597c275e9e3c39c", "patch": "@@ -10,3 +10,5 @@ fn try_identity(x: Result<u32, i32>) -> Result<u32, i32> {\n fn main() {\n     let _ = try_identity(Ok(0));\n }\n+\n+// EMIT_MIR simplify_try.try_identity.DestinationPropagation.diff"}, {"sha": "78b0b24bf1109789ca96a55a578910ec93f8c1d9", "filename": "src/test/mir-opt/simplify_try.try_identity.DestinationPropagation.diff", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/43ad8e4260bec289c522a2fd3597c275e9e3c39c/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.DestinationPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/43ad8e4260bec289c522a2fd3597c275e9e3c39c/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.DestinationPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.DestinationPropagation.diff?ref=43ad8e4260bec289c522a2fd3597c275e9e3c39c", "patch": "@@ -0,0 +1,72 @@\n+- // MIR for `try_identity` before DestinationPropagation\n++ // MIR for `try_identity` after DestinationPropagation\n+  \n+  fn try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i32> {\n+      debug x => _1;                       // in scope 0 at $DIR/simplify_try.rs:5:17: 5:18\n+      let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/simplify_try.rs:5:41: 5:57\n+      let _2: u32;                         // in scope 0 at $DIR/simplify_try.rs:6:9: 6:10\n+      let mut _3: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n+      let mut _4: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n+      let mut _5: isize;                   // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+      let _6: i32;                         // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+      let mut _7: !;                       // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+      let mut _8: i32;                     // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+      let mut _9: i32;                     // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+      let _10: u32;                        // in scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n+      let mut _11: u32;                    // in scope 0 at $DIR/simplify_try.rs:7:8: 7:9\n+      scope 1 {\n+          debug y => ((_0 as Ok).0: u32);  // in scope 1 at $DIR/simplify_try.rs:6:9: 6:10\n+      }\n+      scope 2 {\n+          debug err => ((_0 as Err).0: i32); // in scope 2 at $DIR/simplify_try.rs:6:14: 6:15\n+          scope 3 {\n+              scope 7 {\n+                  debug t => ((_0 as Err).0: i32); // in scope 7 at $SRC_DIR/core/src/convert/mod.rs:LL:COL\n+              }\n+              scope 8 {\n+                  debug v => ((_0 as Err).0: i32); // in scope 8 at $SRC_DIR/core/src/result.rs:LL:COL\n+                  let mut _12: i32;        // in scope 8 at $DIR/simplify_try.rs:6:14: 6:15\n+              }\n+          }\n+      }\n+      scope 4 {\n+          debug val => ((_0 as Ok).0: u32); // in scope 4 at $DIR/simplify_try.rs:6:13: 6:15\n+          scope 5 {\n+          }\n+      }\n+      scope 6 {\n+-         debug self => _4;                // in scope 6 at $SRC_DIR/core/src/result.rs:LL:COL\n++         debug self => _0;                // in scope 6 at $SRC_DIR/core/src/result.rs:LL:COL\n+      }\n+  \n+      bb0: {\n+          StorageLive(_2);                 // scope 0 at $DIR/simplify_try.rs:6:9: 6:10\n+-         StorageLive(_3);                 // scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n+-         StorageLive(_4);                 // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n+-         _4 = _1;                         // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n+-         _3 = move _4;                    // scope 6 at $SRC_DIR/core/src/result.rs:LL:COL\n+-         StorageDead(_4);                 // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+-         _5 = discriminant(_3);           // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n++         _0 = _1;                         // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n++         nop;                             // scope 6 at $SRC_DIR/core/src/result.rs:LL:COL\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n++         _5 = discriminant(_0);           // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+          goto -> bb1;                     // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+      }\n+  \n+      bb1: {\n+-         _0 = move _3;                    // scope 1 at $DIR/simplify_try.rs:7:5: 7:10\n+-         StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:6:15: 6:16\n++         nop;                             // scope 1 at $DIR/simplify_try.rs:7:5: 7:10\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:6:15: 6:16\n+          StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:8:1: 8:2\n+          goto -> bb2;                     // scope 0 at $DIR/simplify_try.rs:8:2: 8:2\n+      }\n+  \n+      bb2: {\n+          return;                          // scope 0 at $DIR/simplify_try.rs:8:2: 8:2\n+      }\n+  }\n+  "}, {"sha": "d11e4454d25381210857a143c45ba84ffbf18a54", "filename": "src/test/mir-opt/simplify_try.try_identity.SimplifyLocals.after.mir", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/43ad8e4260bec289c522a2fd3597c275e9e3c39c/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyLocals.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/43ad8e4260bec289c522a2fd3597c275e9e3c39c/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyLocals.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyLocals.after.mir?ref=43ad8e4260bec289c522a2fd3597c275e9e3c39c", "patch": "@@ -23,11 +23,11 @@ fn try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i\n         }\n     }\n     scope 6 {\n-        debug self => _1;                // in scope 6 at $SRC_DIR/core/src/result.rs:LL:COL\n+        debug self => _0;                // in scope 6 at $SRC_DIR/core/src/result.rs:LL:COL\n     }\n \n     bb0: {\n-        _0 = move _1;                    // scope 1 at $DIR/simplify_try.rs:7:5: 7:10\n+        _0 = _1;                         // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n         return;                          // scope 0 at $DIR/simplify_try.rs:8:2: 8:2\n     }\n }"}]}