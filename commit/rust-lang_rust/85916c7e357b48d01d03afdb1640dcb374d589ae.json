{"sha": "85916c7e357b48d01d03afdb1640dcb374d589ae", "node_id": "C_kwDOAAsO6NoAKDg1OTE2YzdlMzU3YjQ4ZDAxZDAzYWZkYjE2NDBkY2IzNzRkNTg5YWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-28T07:35:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-28T07:35:12Z"}, "message": "Rollup merge of #98301 - ortem:pretty-printers-nonzero, r=wesleywiser\n\nAdd GDB/LLDB pretty-printers for NonZero types\n\nAdd GDB/LLDB pretty-printers for `NonZero` types.\nThese pretty-printers were originally implemented for IntelliJ Rust by ```@Kobzol``` in https://github.com/intellij-rust/intellij-rust/pull/5270.\n\nPart of #29392.", "tree": {"sha": "5d4e246f4f1d2eed47b8f95c4004a770953b3d59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d4e246f4f1d2eed47b8f95c4004a770953b3d59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85916c7e357b48d01d03afdb1640dcb374d589ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjCxqwCRBK7hj4Ov3rIwAAe7EIAJzJBG/tNIjdlvjGCaga0IXi\nRmgOP0Zt8jE3nYtutetajsvPFadQC6s4/3liRALG+F54Ovfeyw4S3MnfzXy5uoFP\noAsAKuWzeZ5mCCu8b9GqUgY3N5xHAKgQR1pfPtpluLpfgFj7egos9SIFmrRHHdQ9\nC4B54xKEwk75rhBY5EWMKp74rs2HQ95sdGoxLDYbjLyggv67o6icgEkl640gSNP+\nmW5MVUB/L0jMFXvT9tmN+46oyM0xXNEDFKmOSUPkxCdJfZaHIPKHRpebPdhQ1WlU\ne8y6PwtFRPJ7AfdK8sDqfDL5dhwbIckuULE8ZCZHO8fX3zr83Q21S+fZDZto1tU=\n=2XtC\n-----END PGP SIGNATURE-----\n", "payload": "tree 5d4e246f4f1d2eed47b8f95c4004a770953b3d59\nparent b9306c231a9ffaf83d420ec09f165f58444d142e\nparent 2a26987b36656a16ee6e9d65e972ca36b9a99449\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1661672112 +0200\ncommitter GitHub <noreply@github.com> 1661672112 +0200\n\nRollup merge of #98301 - ortem:pretty-printers-nonzero, r=wesleywiser\n\nAdd GDB/LLDB pretty-printers for NonZero types\n\nAdd GDB/LLDB pretty-printers for `NonZero` types.\nThese pretty-printers were originally implemented for IntelliJ Rust by ```@Kobzol``` in https://github.com/intellij-rust/intellij-rust/pull/5270.\n\nPart of #29392.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85916c7e357b48d01d03afdb1640dcb374d589ae", "html_url": "https://github.com/rust-lang/rust/commit/85916c7e357b48d01d03afdb1640dcb374d589ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85916c7e357b48d01d03afdb1640dcb374d589ae/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9306c231a9ffaf83d420ec09f165f58444d142e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9306c231a9ffaf83d420ec09f165f58444d142e", "html_url": "https://github.com/rust-lang/rust/commit/b9306c231a9ffaf83d420ec09f165f58444d142e"}, {"sha": "2a26987b36656a16ee6e9d65e972ca36b9a99449", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a26987b36656a16ee6e9d65e972ca36b9a99449", "html_url": "https://github.com/rust-lang/rust/commit/2a26987b36656a16ee6e9d65e972ca36b9a99449"}], "stats": {"total": 117, "additions": 116, "deletions": 1}, "files": [{"sha": "8171cb4e9a68aa0c27a7bd25a53c87f07e672eff", "filename": "src/etc/gdb_lookup.py", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Fetc%2Fgdb_lookup.py", "raw_url": "https://github.com/rust-lang/rust/raw/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Fetc%2Fgdb_lookup.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_lookup.py?ref=85916c7e357b48d01d03afdb1640dcb374d589ae", "patch": "@@ -89,4 +89,7 @@ def lookup(valobj):\n     if rust_type == RustType.STD_REF_CELL:\n         return StdRefCellProvider(valobj)\n \n+    if rust_type == RustType.STD_NONZERO_NUMBER:\n+        return StdNonZeroNumberProvider(valobj)\n+\n     return None"}, {"sha": "c351c3450f582d630e7d4708728ce71a336c3431", "filename": "src/etc/gdb_providers.py", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Fetc%2Fgdb_providers.py", "raw_url": "https://github.com/rust-lang/rust/raw/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Fetc%2Fgdb_providers.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_providers.py?ref=85916c7e357b48d01d03afdb1640dcb374d589ae", "patch": "@@ -231,6 +231,17 @@ def children(self):\n         yield \"borrow\", self.borrow\n \n \n+class StdNonZeroNumberProvider:\n+    def __init__(self, valobj):\n+        fields = valobj.type.fields()\n+        assert len(fields) == 1\n+        field = list(fields)[0]\n+        self.value = str(valobj[field.name])\n+\n+    def to_string(self):\n+        return self.value\n+\n+\n # Yields children (in a provider's sense of the word) for a BTreeMap.\n def children_of_btree_map(map):\n     # Yields each key/value pair in the node and in any child nodes."}, {"sha": "ed66ecf30729e471299d8167f5bf3bb1aeb5a37b", "filename": "src/etc/lldb_commands", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Fetc%2Flldb_commands", "raw_url": "https://github.com/rust-lang/rust/raw/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Fetc%2Flldb_commands", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_commands?ref=85916c7e357b48d01d03afdb1640dcb374d589ae", "patch": "@@ -15,4 +15,5 @@ type summary add -F lldb_lookup.summary_lookup  -e -x -h \"^(core::([a-z_]+::)+)C\n type summary add -F lldb_lookup.summary_lookup  -e -x -h \"^(core::([a-z_]+::)+)Ref<.+>$\" --category Rust\n type summary add -F lldb_lookup.summary_lookup  -e -x -h \"^(core::([a-z_]+::)+)RefMut<.+>$\" --category Rust\n type summary add -F lldb_lookup.summary_lookup  -e -x -h \"^(core::([a-z_]+::)+)RefCell<.+>$\" --category Rust\n+type summary add -F lldb_lookup.summary_lookup  -e -x -h \"^core::num::([a-z_]+::)*NonZero.+$\" --category Rust\n type category enable Rust"}, {"sha": "bca9c2ae192a715fc0572e0ab43af716764035fb", "filename": "src/etc/lldb_lookup.py", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Fetc%2Flldb_lookup.py", "raw_url": "https://github.com/rust-lang/rust/raw/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Fetc%2Flldb_lookup.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_lookup.py?ref=85916c7e357b48d01d03afdb1640dcb374d589ae", "patch": "@@ -55,6 +55,9 @@ def summary_lookup(valobj, dict):\n     if rust_type == RustType.STD_REF_CELL:\n         return StdRefSummaryProvider(valobj, dict)\n \n+    if rust_type == RustType.STD_NONZERO_NUMBER:\n+        return StdNonZeroNumberSummaryProvider(valobj, dict)\n+\n     return \"\"\n \n "}, {"sha": "8a9927e7d96d7d26b134bd32160ce106b9b37940", "filename": "src/etc/lldb_providers.py", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Fetc%2Flldb_providers.py", "raw_url": "https://github.com/rust-lang/rust/raw/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Fetc%2Flldb_providers.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_providers.py?ref=85916c7e357b48d01d03afdb1640dcb374d589ae", "patch": "@@ -739,3 +739,11 @@ def update(self):\n     def has_children(self):\n         # type: () -> bool\n         return True\n+\n+\n+def StdNonZeroNumberSummaryProvider(valobj, _dict):\n+    # type: (SBValue, dict) -> str\n+    objtype = valobj.GetType()\n+    field = objtype.GetFieldAtIndex(0)\n+    element = valobj.GetChildMemberWithName(field.name)\n+    return element.GetValue()"}, {"sha": "bf512bc99b8f282ad27181d5135fb3dabadf6e1d", "filename": "src/etc/rust_types.py", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Fetc%2Frust_types.py", "raw_url": "https://github.com/rust-lang/rust/raw/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Fetc%2Frust_types.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Frust_types.py?ref=85916c7e357b48d01d03afdb1640dcb374d589ae", "patch": "@@ -31,6 +31,7 @@ class RustType(object):\n     STD_REF = \"StdRef\"\n     STD_REF_MUT = \"StdRefMut\"\n     STD_REF_CELL = \"StdRefCell\"\n+    STD_NONZERO_NUMBER = \"StdNonZeroNumber\"\n \n \n STD_STRING_REGEX = re.compile(r\"^(alloc::(\\w+::)+)String$\")\n@@ -49,6 +50,7 @@ class RustType(object):\n STD_REF_REGEX = re.compile(r\"^(core::(\\w+::)+)Ref<.+>$\")\n STD_REF_MUT_REGEX = re.compile(r\"^(core::(\\w+::)+)RefMut<.+>$\")\n STD_REF_CELL_REGEX = re.compile(r\"^(core::(\\w+::)+)RefCell<.+>$\")\n+STD_NONZERO_NUMBER_REGEX = re.compile(r\"^core::num::([a-z_]+::)*NonZero.+$\")\n \n TUPLE_ITEM_REGEX = re.compile(r\"__\\d+$\")\n \n@@ -72,6 +74,7 @@ class RustType(object):\n     RustType.STD_REF_MUT: STD_REF_MUT_REGEX,\n     RustType.STD_REF_CELL: STD_REF_CELL_REGEX,\n     RustType.STD_CELL: STD_CELL_REGEX,\n+    RustType.STD_NONZERO_NUMBER: STD_NONZERO_NUMBER_REGEX,\n }\n \n def is_tuple_fields(fields):"}, {"sha": "c41c9ee21df892c2bde379b70a5c8386f3209a81", "filename": "src/test/debuginfo/numeric-types.rs", "status": "modified", "additions": 86, "deletions": 1, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Ftest%2Fdebuginfo%2Fnumeric-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Ftest%2Fdebuginfo%2Fnumeric-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fnumeric-types.rs?ref=85916c7e357b48d01d03afdb1640dcb374d589ae", "patch": "@@ -1,6 +1,7 @@\n-// only-cdb\n // compile-flags:-g\n \n+// min-gdb-version: 8.1\n+\n // Tests the visualizations for `NonZero{I,U}{8,16,32,64,128,size}`, `Wrapping<T>` and\n // `Atomic{Bool,I8,I16,I32,I64,Isize,U8,U16,U32,U64,Usize}` located in `libcore.natvis`.\n \n@@ -153,6 +154,90 @@\n // cdb-check:a_usize          : 0x400 [Type: core::sync::atomic::AtomicUsize]\n // cdb-check:    [<Raw View>]     [Type: core::sync::atomic::AtomicUsize]\n \n+\n+// === GDB TESTS ===================================================================================\n+\n+// gdb-command:run\n+\n+// gdb-command:print/d nz_i8\n+// gdb-check:[...]$1 = 11\n+\n+// gdb-command:print nz_i16\n+// gdb-check:[...]$2 = 22\n+\n+// gdb-command:print nz_i32\n+// gdb-check:[...]$3 = 33\n+\n+// gdb-command:print nz_i64\n+// gdb-check:[...]$4 = 44\n+\n+// gdb-command:print nz_i128\n+// gdb-check:[...]$5 = 55\n+\n+// gdb-command:print nz_isize\n+// gdb-check:[...]$6 = 66\n+\n+// gdb-command:print/d nz_u8\n+// gdb-check:[...]$7 = 77\n+\n+// gdb-command:print nz_u16\n+// gdb-check:[...]$8 = 88\n+\n+// gdb-command:print nz_u32\n+// gdb-check:[...]$9 = 99\n+\n+// gdb-command:print nz_u64\n+// gdb-check:[...]$10 = 100\n+\n+// gdb-command:print nz_u128\n+// gdb-check:[...]$11 = 111\n+\n+// gdb-command:print nz_usize\n+// gdb-check:[...]$12 = 122\n+\n+\n+\n+// === LLDB TESTS ==================================================================================\n+\n+// lldb-command:run\n+\n+// lldb-command:print/d nz_i8\n+// lldb-check:[...]$0 = 11 { __0 = 11 }\n+\n+// lldb-command:print nz_i16\n+// lldb-check:[...]$1 = 22 { __0 = 22 }\n+\n+// lldb-command:print nz_i32\n+// lldb-check:[...]$2 = 33 { __0 = 33 }\n+\n+// lldb-command:print nz_i64\n+// lldb-check:[...]$3 = 44 { __0 = 44 }\n+\n+// lldb-command:print nz_i128\n+// lldb-check:[...]$4 = 55 { __0 = 55 }\n+\n+// lldb-command:print nz_isize\n+// lldb-check:[...]$5 = 66 { __0 = 66 }\n+\n+// lldb-command:print/d nz_u8\n+// lldb-check:[...]$6 = 77 { __0 = 77 }\n+\n+// lldb-command:print nz_u16\n+// lldb-check:[...]$7 = 88 { __0 = 88 }\n+\n+// lldb-command:print nz_u32\n+// lldb-check:[...]$8 = 99 { __0 = 99 }\n+\n+// lldb-command:print nz_u64\n+// lldb-check:[...]$9 = 100 { __0 = 100 }\n+\n+// lldb-command:print nz_u128\n+// lldb-check:[...]$10 = 111 { __0 = 111 }\n+\n+// lldb-command:print nz_usize\n+// lldb-check:[...]$11 = 122 { __0 = 122 }\n+\n+\n use std::num::*;\n use std::sync::atomic::*;\n "}, {"sha": "e168a81890c948660b03ff263700d0de4ce8ae36", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85916c7e357b48d01d03afdb1640dcb374d589ae/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=85916c7e357b48d01d03afdb1640dcb374d589ae", "patch": "@@ -1103,6 +1103,7 @@ impl<'test> TestCx<'test> {\n             \"^(core::([a-z_]+::)+)Ref<.+>$\",\n             \"^(core::([a-z_]+::)+)RefMut<.+>$\",\n             \"^(core::([a-z_]+::)+)RefCell<.+>$\",\n+            \"^core::num::([a-z_]+::)*NonZero.+$\",\n         ];\n \n         script_str"}]}