{"sha": "d1db5e4a85a0124c96ef99d185dba708ca8398fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxZGI1ZTRhODVhMDEyNGM5NmVmOTlkMTg1ZGJhNzA4Y2E4Mzk4ZmU=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-03T13:59:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-03T13:59:22Z"}, "message": "Rollup merge of #62229 - christianpoveda:intptrcast-explicit-casts, r=RalfJung\n\nEnable intptrcast for explicit casts\n\nI checked locally that this does not break miri on master. r? @RalfJung", "tree": {"sha": "ad915662255ed2aa11c18ef4da3f5d6eacdf6373", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad915662255ed2aa11c18ef4da3f5d6eacdf6373"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1db5e4a85a0124c96ef99d185dba708ca8398fe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdHLS7CRBK7hj4Ov3rIwAAdHIIAIStC38FLAGsciGI3xQD+380\nc1Hsp6Q4efRf0JAmz16Vv5EpfxCLj1yJOBEZjLVHAf68qpFwcNWnIZ0K8Xh0aElC\n3S2DdeEuWwBQaD6wWrm0ddUwj53AgPdl1NxhVT+Xi9xOxXHvFrTRb8jj3eIIQ0Em\nzUYMD81TjcGUUn+NQ+exdeX4irAZ7rYFghviizdOwZLJkLsln8vt719KnS04ycMK\nb74oX+W/3WUUatf+V+Qw2T+qAPijFrOQ6hxSWvHYQUWOHvgYFaK5vC5PgagpGRMW\nyERNS+ngPsikK0EFeEs64r6QjNSVG0B0m4qPNAUA7JA/Yvoai2BK6akLEATjmdE=\n=5cog\n-----END PGP SIGNATURE-----\n", "payload": "tree ad915662255ed2aa11c18ef4da3f5d6eacdf6373\nparent b8713e550dace2db4b76fd3f4340e1c85777ce71\nparent 92c28bfabcbbbbf864308cd71750d4b20f306b37\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1562162362 -0400\ncommitter GitHub <noreply@github.com> 1562162362 -0400\n\nRollup merge of #62229 - christianpoveda:intptrcast-explicit-casts, r=RalfJung\n\nEnable intptrcast for explicit casts\n\nI checked locally that this does not break miri on master. r? @RalfJung\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1db5e4a85a0124c96ef99d185dba708ca8398fe", "html_url": "https://github.com/rust-lang/rust/commit/d1db5e4a85a0124c96ef99d185dba708ca8398fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1db5e4a85a0124c96ef99d185dba708ca8398fe/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8713e550dace2db4b76fd3f4340e1c85777ce71", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8713e550dace2db4b76fd3f4340e1c85777ce71", "html_url": "https://github.com/rust-lang/rust/commit/b8713e550dace2db4b76fd3f4340e1c85777ce71"}, {"sha": "92c28bfabcbbbbf864308cd71750d4b20f306b37", "url": "https://api.github.com/repos/rust-lang/rust/commits/92c28bfabcbbbbf864308cd71750d4b20f306b37", "html_url": "https://github.com/rust-lang/rust/commit/92c28bfabcbbbbf864308cd71750d4b20f306b37"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "e6c9d9f5c79d8b92342157a342451e658dc2c4c3", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d1db5e4a85a0124c96ef99d185dba708ca8398fe/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1db5e4a85a0124c96ef99d185dba708ca8398fe/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=d1db5e4a85a0124c96ef99d185dba708ca8398fe", "patch": "@@ -1,7 +1,7 @@\n use rustc::ty::{self, Ty, TypeAndMut};\n use rustc::ty::layout::{self, TyLayout, Size};\n use rustc::ty::adjustment::{PointerCast};\n-use syntax::ast::{FloatTy, IntTy, UintTy};\n+use syntax::ast::FloatTy;\n use syntax::symbol::sym;\n \n use rustc_apfloat::ieee::{Single, Double};\n@@ -151,7 +151,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpretCx<'mir, 'tcx, M> {\n                     \"Unexpected cast from type {:?}\", src_layout.ty\n                 );\n                 match val.to_bits_or_ptr(src_layout.size, self) {\n-                    Err(ptr) => self.cast_from_ptr(ptr, dest_layout.ty),\n+                    Err(ptr) => self.cast_from_ptr(ptr, src_layout, dest_layout),\n                     Ok(data) => self.cast_from_int(data, src_layout, dest_layout),\n                 }\n             }\n@@ -239,17 +239,25 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpretCx<'mir, 'tcx, M> {\n     fn cast_from_ptr(\n         &self,\n         ptr: Pointer<M::PointerTag>,\n-        ty: Ty<'tcx>\n+        src_layout: TyLayout<'tcx>,\n+        dest_layout: TyLayout<'tcx>,\n     ) -> InterpResult<'tcx, Scalar<M::PointerTag>> {\n         use rustc::ty::TyKind::*;\n-        match ty.sty {\n+\n+        match dest_layout.ty.sty {\n             // Casting to a reference or fn pointer is not permitted by rustc,\n             // no need to support it here.\n-            RawPtr(_) |\n-            Int(IntTy::Isize) |\n-            Uint(UintTy::Usize) => Ok(ptr.into()),\n-            Int(_) | Uint(_) => err!(ReadPointerAsBytes),\n-            _ => err!(Unimplemented(format!(\"ptr to {:?} cast\", ty))),\n+            RawPtr(_) => Ok(ptr.into()),\n+            Int(_) | Uint(_) => {\n+                let size = self.memory.pointer_size();\n+\n+                match self.force_bits(Scalar::Ptr(ptr), size) {\n+                    Ok(bits) => self.cast_from_int(bits, src_layout, dest_layout),\n+                    Err(_) if dest_layout.size == size => Ok(ptr.into()),\n+                    Err(e) => Err(e),\n+                }\n+            }\n+            _ => bug!(\"invalid MIR: ptr to {:?} cast\", dest_layout.ty)\n         }\n     }\n "}]}