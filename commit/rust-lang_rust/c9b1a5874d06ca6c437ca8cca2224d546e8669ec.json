{"sha": "c9b1a5874d06ca6c437ca8cca2224d546e8669ec", "node_id": "C_kwDOAAsO6NoAKGM5YjFhNTg3NGQwNmNhNmM0MzdjYThjY2EyMjI0ZDU0NmU4NjY5ZWM", "commit": {"author": {"name": "Xiretza", "email": "xiretza@xiretza.xyz", "date": "2022-08-17T10:09:06Z"}, "committer": {"name": "Xiretza", "email": "xiretza@xiretza.xyz", "date": "2022-08-22T06:42:44Z"}, "message": "fluent: mandate slug names to be prefixed by crate name", "tree": {"sha": "26679898bc571ff18117e92207c16725a31e50cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26679898bc571ff18117e92207c16725a31e50cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9b1a5874d06ca6c437ca8cca2224d546e8669ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9b1a5874d06ca6c437ca8cca2224d546e8669ec", "html_url": "https://github.com/rust-lang/rust/commit/c9b1a5874d06ca6c437ca8cca2224d546e8669ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9b1a5874d06ca6c437ca8cca2224d546e8669ec/comments", "author": {"login": "Xiretza", "id": 3107142, "node_id": "MDQ6VXNlcjMxMDcxNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3107142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xiretza", "html_url": "https://github.com/Xiretza", "followers_url": "https://api.github.com/users/Xiretza/followers", "following_url": "https://api.github.com/users/Xiretza/following{/other_user}", "gists_url": "https://api.github.com/users/Xiretza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xiretza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xiretza/subscriptions", "organizations_url": "https://api.github.com/users/Xiretza/orgs", "repos_url": "https://api.github.com/users/Xiretza/repos", "events_url": "https://api.github.com/users/Xiretza/events{/privacy}", "received_events_url": "https://api.github.com/users/Xiretza/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xiretza", "id": 3107142, "node_id": "MDQ6VXNlcjMxMDcxNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3107142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xiretza", "html_url": "https://github.com/Xiretza", "followers_url": "https://api.github.com/users/Xiretza/followers", "following_url": "https://api.github.com/users/Xiretza/following{/other_user}", "gists_url": "https://api.github.com/users/Xiretza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xiretza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xiretza/subscriptions", "organizations_url": "https://api.github.com/users/Xiretza/orgs", "repos_url": "https://api.github.com/users/Xiretza/repos", "events_url": "https://api.github.com/users/Xiretza/events{/privacy}", "received_events_url": "https://api.github.com/users/Xiretza/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0ea1d767925d53b2230e2ba81197821514781f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0ea1d767925d53b2230e2ba81197821514781f0", "html_url": "https://github.com/rust-lang/rust/commit/d0ea1d767925d53b2230e2ba81197821514781f0"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "223092a74bd97cf00d62ed229dcbae3493e985c4", "filename": "compiler/rustc_error_messages/locales/en-US/privacy.ftl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9b1a5874d06ca6c437ca8cca2224d546e8669ec/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fprivacy.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/c9b1a5874d06ca6c437ca8cca2224d546e8669ec/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fprivacy.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fprivacy.ftl?ref=c9b1a5874d06ca6c437ca8cca2224d546e8669ec", "patch": "@@ -14,7 +14,7 @@ privacy_in_public_interface = {$vis_descr} {$kind} `{$descr}` in public interfac\n privacy_from_private_dep_in_public_interface =\n     {$kind} `{$descr}` from private dependency '{$krate}' in public interface\n \n-private_in_public_lint =\n+privacy_private_in_public_lint =\n     {$vis_descr} {$kind} `{$descr}` in public interface (error {$kind ->\n         [trait] E0445\n         *[other] E0446"}, {"sha": "a222b9d5f129cb2dc86a1db7e2ad2489aef42bf4", "filename": "compiler/rustc_macros/src/diagnostics/fluent.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c9b1a5874d06ca6c437ca8cca2224d546e8669ec/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Ffluent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9b1a5874d06ca6c437ca8cca2224d546e8669ec/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Ffluent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Ffluent.rs?ref=c9b1a5874d06ca6c437ca8cca2224d546e8669ec", "patch": "@@ -205,11 +205,23 @@ pub(crate) fn fluent_messages(input: proc_macro::TokenStream) -> proc_macro::Tok\n                 // The last case we error about above, but we want to fall back gracefully\n                 // so that only the error is being emitted and not also one about the macro\n                 // failing.\n-                let snake_name = Ident::new(\n-                    // FIXME: should probably trim prefix, not replace all occurrences\n-                    &name.replace('-', \"_\").replace(&format!(\"{}_\", res.ident), \"\"),\n-                    span,\n-                );\n+                let crate_prefix = format!(\"{}_\", res.ident);\n+\n+                let snake_name = name.replace('-', \"_\");\n+                let snake_name = match snake_name.strip_prefix(&crate_prefix) {\n+                    Some(rest) => Ident::new(rest, span),\n+                    None => {\n+                        Diagnostic::spanned(\n+                            ident_span,\n+                            Level::Error,\n+                            format!(\"name `{name}` does not start with the crate name\"),\n+                        )\n+                        .help(format!(\"prepend `{crate_prefix}` to the slug name: `{crate_prefix}{snake_name}`\"))\n+                        .emit();\n+                        Ident::new(&snake_name, span)\n+                    }\n+                };\n+\n                 constants.extend(quote! {\n                     pub const #snake_name: crate::DiagnosticMessage =\n                         crate::DiagnosticMessage::FluentIdentifier("}]}