{"sha": "0c470b3339532e063d3cedc517b7952779376d78", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjNDcwYjMzMzk1MzJlMDYzZDNjZWRjNTE3Yjc5NTI3NzkzNzZkNzg=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-06-03T19:15:53Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-06-03T19:27:51Z"}, "message": "Bump to 1.46", "tree": {"sha": "eb47d479e5f8ad61687a3199cc7ffaa9c7b95dcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb47d479e5f8ad61687a3199cc7ffaa9c7b95dcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c470b3339532e063d3cedc517b7952779376d78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c470b3339532e063d3cedc517b7952779376d78", "html_url": "https://github.com/rust-lang/rust/commit/0c470b3339532e063d3cedc517b7952779376d78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c470b3339532e063d3cedc517b7952779376d78/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fd8e1088fe858b6a5da2b7e8baaeeacd26c6a31", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fd8e1088fe858b6a5da2b7e8baaeeacd26c6a31", "html_url": "https://github.com/rust-lang/rust/commit/9fd8e1088fe858b6a5da2b7e8baaeeacd26c6a31"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "37fbc2bad468f5f9a258f8c7dc792b778868a1a7", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0c470b3339532e063d3cedc517b7952779376d78/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c470b3339532e063d3cedc517b7952779376d78/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=0c470b3339532e063d3cedc517b7952779376d78", "patch": "@@ -279,13 +279,13 @@ impl EarlyLintPass for Write {\n             if let (Some(fmt_str), expr) = self.check_tts(cx, &mac.args.inner_tokens(), true) {\n                 if fmt_str.symbol == Symbol::intern(\"\") {\n                     let mut applicability = Applicability::MachineApplicable;\n-                    let suggestion = expr.map_or_else(\n-                        move || {\n+                    let suggestion = match expr {\n+                        Some(expr) => snippet_with_applicability(cx, expr.span, \"v\", &mut applicability),\n+                        None => {\n                             applicability = Applicability::HasPlaceholders;\n                             Cow::Borrowed(\"v\")\n                         },\n-                        move |expr| snippet_with_applicability(cx, expr.span, \"v\", &mut applicability),\n-                    );\n+                    };\n \n                     span_lint_and_sugg(\n                         cx,"}]}