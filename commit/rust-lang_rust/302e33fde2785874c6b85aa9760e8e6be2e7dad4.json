{"sha": "302e33fde2785874c6b85aa9760e8e6be2e7dad4", "node_id": "C_kwDOAAsO6NoAKDMwMmUzM2ZkZTI3ODU4NzRjNmI4NWFhOTc2MGU4ZTZiZTJlN2RhZDQ", "commit": {"author": {"name": "Pointerbender", "email": "pointerbender@gmail.com", "date": "2022-09-12T09:12:28Z"}, "committer": {"name": "Pointerbender", "email": "pointerbender@gmail.com", "date": "2022-09-12T09:12:28Z"}, "message": "add description of the memory layout for `UnsafeCell<T>`", "tree": {"sha": "1ec675cdbb2c7d96be39e2ba21e768e00ccfeee8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ec675cdbb2c7d96be39e2ba21e768e00ccfeee8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/302e33fde2785874c6b85aa9760e8e6be2e7dad4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/302e33fde2785874c6b85aa9760e8e6be2e7dad4", "html_url": "https://github.com/rust-lang/rust/commit/302e33fde2785874c6b85aa9760e8e6be2e7dad4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/302e33fde2785874c6b85aa9760e8e6be2e7dad4/comments", "author": {"login": "Pointerbender", "id": 81013316, "node_id": "MDQ6VXNlcjgxMDEzMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/81013316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pointerbender", "html_url": "https://github.com/Pointerbender", "followers_url": "https://api.github.com/users/Pointerbender/followers", "following_url": "https://api.github.com/users/Pointerbender/following{/other_user}", "gists_url": "https://api.github.com/users/Pointerbender/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pointerbender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pointerbender/subscriptions", "organizations_url": "https://api.github.com/users/Pointerbender/orgs", "repos_url": "https://api.github.com/users/Pointerbender/repos", "events_url": "https://api.github.com/users/Pointerbender/events{/privacy}", "received_events_url": "https://api.github.com/users/Pointerbender/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Pointerbender", "id": 81013316, "node_id": "MDQ6VXNlcjgxMDEzMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/81013316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pointerbender", "html_url": "https://github.com/Pointerbender", "followers_url": "https://api.github.com/users/Pointerbender/followers", "following_url": "https://api.github.com/users/Pointerbender/following{/other_user}", "gists_url": "https://api.github.com/users/Pointerbender/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pointerbender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pointerbender/subscriptions", "organizations_url": "https://api.github.com/users/Pointerbender/orgs", "repos_url": "https://api.github.com/users/Pointerbender/repos", "events_url": "https://api.github.com/users/Pointerbender/events{/privacy}", "received_events_url": "https://api.github.com/users/Pointerbender/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56e7678ca97e9740f7d09206f767d5bb676917f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/56e7678ca97e9740f7d09206f767d5bb676917f7", "html_url": "https://github.com/rust-lang/rust/commit/56e7678ca97e9740f7d09206f767d5bb676917f7"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "cce4e5a59467298c07db380b96ad7188fcb14e7b", "filename": "library/core/src/cell.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/302e33fde2785874c6b85aa9760e8e6be2e7dad4/library%2Fcore%2Fsrc%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302e33fde2785874c6b85aa9760e8e6be2e7dad4/library%2Fcore%2Fsrc%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell.rs?ref=302e33fde2785874c6b85aa9760e8e6be2e7dad4", "patch": "@@ -1811,6 +1811,8 @@ impl<T: ?Sized + fmt::Display> fmt::Display for RefMut<'_, T> {\n ///\n /// [`.get_mut()`]: `UnsafeCell::get_mut`\n ///\n+/// `UnsafeCell<T>` has the same in-memory representation as its inner type `T`.\n+///\n /// # Examples\n ///\n /// Here is an example showcasing how to soundly mutate the contents of an `UnsafeCell<_>` despite"}]}