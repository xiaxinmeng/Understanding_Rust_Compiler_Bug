{"sha": "9e2947a62114e095c589854ae60b6c8df37b5c7a", "node_id": "C_kwDOAAsO6NoAKDllMjk0N2E2MjExNGUwOTVjNTg5ODU0YWU2MGI2YzhkZjM3YjVjN2E", "commit": {"author": {"name": "Alan Egerton", "email": "eggyal@gmail.com", "date": "2023-02-14T09:53:12Z"}, "committer": {"name": "Alan Egerton", "email": "eggyal@gmail.com", "date": "2023-02-14T12:13:05Z"}, "message": "Ord entails its supertraits", "tree": {"sha": "55f3da5895dd1ba58cdea72f2bd33ff18aa306ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55f3da5895dd1ba58cdea72f2bd33ff18aa306ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e2947a62114e095c589854ae60b6c8df37b5c7a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJFBAABCAAvFiEEvrRBFuOXsbT1OVTHfUwvbCISJTIFAmPretERHGVnZ3lhbEBn\nbWFpbC5jb20ACgkQfUwvbCISJTK8+A//V4ydQ4CtUMifNv81fZb8chW9l5dDWWBu\n+w2oSQJjYuSU4dM4wrHuXqP15akFVvllIGNoa4Ddi5G2yyisygH+Vpf+SuLLwU/m\ni9/9h60Uf3u0uXor9TzTGpSlYhmwsYouUQxEHd6eCcLzQX4cFVlEyXhr06f1Zpwu\nxXpQgWTywhDenMB9XOzkCms6W1FWYhPkzBfTq0lbqJIBYGDLDqE22L/BMgzKoqSV\nhB8RNOVlej12lFFES/noltYyXFnCeahGwqnBSQ7EzkHuhcl6yfv/YJ+ap4bo1h6O\nZhV2eFTmVkIuVhJ7iAy59bPUlXKLM6FIj9jVD8YsLgkQYTtxY+AXDI8+kn9obq9u\nFIeUxiRBauzj2fCGwYNH6/K+C0tCtcfPTqWn/sU8fwRIL8JUCy/xBOlZe/yqJr59\nyb3piMOgX0oUsVSPjYZFF8W0IlycVlyZCB5gcd24L1FXNzRz0Ww4pIuMt2R5/oSu\nAWu2QkGocQ2/iLiQoRmArkTCvxWV9ZzUS3nRg9wv2kIfvtavJh8CpZn5m/L8t4Nx\nty2ph7gylfV3VBqpEVuYAbA2cuqMl7zj0HuULR5W/TVWcRCYQX82jVpOCBggjGHh\noMyDXtlctzl7/gbF3gGBMqWTqfIpaWRxtHYE5kF8fJVAScjrwCzYbWeFkyYTk078\nX8Bsizoz1VQ=\n=SQu9\n-----END PGP SIGNATURE-----", "payload": "tree 55f3da5895dd1ba58cdea72f2bd33ff18aa306ab\nparent e9ab7872fd77861e3d182ea85a82c4649c5bb3f8\nauthor Alan Egerton <eggyal@gmail.com> 1676368392 +0000\ncommitter Alan Egerton <eggyal@gmail.com> 1676376785 +0000\n\nOrd entails its supertraits\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e2947a62114e095c589854ae60b6c8df37b5c7a", "html_url": "https://github.com/rust-lang/rust/commit/9e2947a62114e095c589854ae60b6c8df37b5c7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e2947a62114e095c589854ae60b6c8df37b5c7a/comments", "author": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9ab7872fd77861e3d182ea85a82c4649c5bb3f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9ab7872fd77861e3d182ea85a82c4649c5bb3f8", "html_url": "https://github.com/rust-lang/rust/commit/e9ab7872fd77861e3d182ea85a82c4649c5bb3f8"}], "stats": {"total": 50, "additions": 25, "deletions": 25}, "files": [{"sha": "f27bcb9ea6b7384ab1ac2fc190e937d06b9e9d0b", "filename": "compiler/rustc_type_ir/src/lib.rs", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/9e2947a62114e095c589854ae60b6c8df37b5c7a/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e2947a62114e095c589854ae60b6c8df37b5c7a/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs?ref=9e2947a62114e095c589854ae60b6c8df37b5c7a", "patch": "@@ -39,35 +39,35 @@ pub use ty_info::*;\n pub trait HashStableContext {}\n \n pub trait Interner: Sized {\n-    type AdtDef: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type SubstsRef: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type DefId: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n+    type AdtDef: Clone + Debug + Hash + Ord;\n+    type SubstsRef: Clone + Debug + Hash + Ord;\n+    type DefId: Clone + Debug + Hash + Ord;\n     type Binder<T>;\n-    type Ty: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type Const: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type Region: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n+    type Ty: Clone + Debug + Hash + Ord;\n+    type Const: Clone + Debug + Hash + Ord;\n+    type Region: Clone + Debug + Hash + Ord;\n     type Predicate;\n-    type TypeAndMut: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type Mutability: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type Movability: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type PolyFnSig: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type ListBinderExistentialPredicate: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type BinderListTy: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type ListTy: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type AliasTy: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type ParamTy: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type BoundTy: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type PlaceholderType: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type InferTy: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type ErrorGuaranteed: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n+    type TypeAndMut: Clone + Debug + Hash + Ord;\n+    type Mutability: Clone + Debug + Hash + Ord;\n+    type Movability: Clone + Debug + Hash + Ord;\n+    type PolyFnSig: Clone + Debug + Hash + Ord;\n+    type ListBinderExistentialPredicate: Clone + Debug + Hash + Ord;\n+    type BinderListTy: Clone + Debug + Hash + Ord;\n+    type ListTy: Clone + Debug + Hash + Ord;\n+    type AliasTy: Clone + Debug + Hash + Ord;\n+    type ParamTy: Clone + Debug + Hash + Ord;\n+    type BoundTy: Clone + Debug + Hash + Ord;\n+    type PlaceholderType: Clone + Debug + Hash + Ord;\n+    type InferTy: Clone + Debug + Hash + Ord;\n+    type ErrorGuaranteed: Clone + Debug + Hash + Ord;\n     type PredicateKind: Clone + Debug + Hash + PartialEq + Eq;\n-    type AllocId: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n+    type AllocId: Clone + Debug + Hash + Ord;\n \n-    type EarlyBoundRegion: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type BoundRegion: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type FreeRegion: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type RegionVid: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n-    type PlaceholderRegion: Clone + Debug + Hash + PartialEq + Eq + PartialOrd + Ord;\n+    type EarlyBoundRegion: Clone + Debug + Hash + Ord;\n+    type BoundRegion: Clone + Debug + Hash + Ord;\n+    type FreeRegion: Clone + Debug + Hash + Ord;\n+    type RegionVid: Clone + Debug + Hash + Ord;\n+    type PlaceholderRegion: Clone + Debug + Hash + Ord;\n }\n \n pub trait InternAs<T: ?Sized, R> {"}]}