{"sha": "5c8066b4a735f952cf1223c903c1bdd7ea606b81", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjODA2NmI0YTczNWY5NTJjZjEyMjNjOTAzYzFiZGQ3ZWE2MDZiODE=", "commit": {"author": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2017-09-28T14:45:09Z"}, "committer": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2017-09-29T13:41:26Z"}, "message": "mir-borrowck: Move span_label calls for `cannot_use_when_mutably_borrowed()` inside `borrowck_errors.rs`", "tree": {"sha": "da35ccff371f826cf56af08573e1c64ee6fc0329", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da35ccff371f826cf56af08573e1c64ee6fc0329"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c8066b4a735f952cf1223c903c1bdd7ea606b81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c8066b4a735f952cf1223c903c1bdd7ea606b81", "html_url": "https://github.com/rust-lang/rust/commit/5c8066b4a735f952cf1223c903c1bdd7ea606b81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c8066b4a735f952cf1223c903c1bdd7ea606b81/comments", "author": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcda69572064cfcc679ac4dc7ad0b0a369e3b861", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcda69572064cfcc679ac4dc7ad0b0a369e3b861", "html_url": "https://github.com/rust-lang/rust/commit/bcda69572064cfcc679ac4dc7ad0b0a369e3b861"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "834bde660a83347466eb0ed5e4118986ee7ac1c4", "filename": "src/librustc_borrowck/borrowck/check_loans.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5c8066b4a735f952cf1223c903c1bdd7ea606b81/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c8066b4a735f952cf1223c903c1bdd7ea606b81/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs?ref=5c8066b4a735f952cf1223c903c1bdd7ea606b81", "patch": "@@ -640,14 +640,10 @@ impl<'a, 'tcx> CheckLoanCtxt<'a, 'tcx> {\n             UseOk => { }\n             UseWhileBorrowed(loan_path, loan_span) => {\n                 let desc = self.bccx.loan_path_to_string(copy_path);\n-                self.bccx.cannot_use_when_mutably_borrowed(span, &desc, Origin::Ast)\n-                    .span_label(loan_span,\n-                               format!(\"borrow of `{}` occurs here\",\n-                                       &self.bccx.loan_path_to_string(&loan_path))\n-                               )\n-                    .span_label(span,\n-                               format!(\"use of borrowed `{}`\",\n-                                        &self.bccx.loan_path_to_string(&loan_path)))\n+                self.bccx.cannot_use_when_mutably_borrowed(\n+                        span, &desc,\n+                        loan_span, &self.bccx.loan_path_to_string(&loan_path),\n+                        Origin::Ast)\n                     .emit();\n             }\n         }"}, {"sha": "b38df4416e8ac810cc204f31279f6fa704ae9b5d", "filename": "src/librustc_mir/borrow_check.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5c8066b4a735f952cf1223c903c1bdd7ea606b81/src%2Flibrustc_mir%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c8066b4a735f952cf1223c903c1bdd7ea606b81/src%2Flibrustc_mir%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check.rs?ref=5c8066b4a735f952cf1223c903c1bdd7ea606b81", "patch": "@@ -931,14 +931,11 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n                                          _context: Context,\n                                          (lvalue, span): (&Lvalue, Span),\n                                          borrow : &BorrowData) {\n-        let described_lvalue = self.describe_lvalue(lvalue);\n-        let borrow_span = self.retrieve_borrow_span(borrow);\n \n         let mut err = self.tcx.cannot_use_when_mutably_borrowed(\n-            span, &described_lvalue, Origin::Mir);\n-\n-        err.span_label(borrow_span, format!(\"borrow of `{}` occurs here\", described_lvalue));\n-        err.span_label(span, format!(\"use of borrowed `{}`\", described_lvalue));\n+            span, &self.describe_lvalue(lvalue),\n+            self.retrieve_borrow_span(borrow), &self.describe_lvalue(&borrow.lvalue),\n+            Origin::Mir);\n \n         err.emit();\n     }"}, {"sha": "3b96ac3f2e7c1da034f1f672930f29bb61fbd7b0", "filename": "src/librustc_mir/util/borrowck_errors.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5c8066b4a735f952cf1223c903c1bdd7ea606b81/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c8066b4a735f952cf1223c903c1bdd7ea606b81/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs?ref=5c8066b4a735f952cf1223c903c1bdd7ea606b81", "patch": "@@ -57,12 +57,22 @@ pub trait BorrowckErrors {\n                          desc, OGN=o)\n     }\n \n-    fn cannot_use_when_mutably_borrowed(&self, span: Span, desc: &str, o: Origin)\n+    fn cannot_use_when_mutably_borrowed(&self,\n+                                        span: Span,\n+                                        desc: &str,\n+                                        borrow_span: Span,\n+                                        borrow_desc: &str,\n+                                        o: Origin)\n                                         -> DiagnosticBuilder\n     {\n-        struct_span_err!(self, span, E0503,\n+        let mut err = struct_span_err!(self, span, E0503,\n                          \"cannot use `{}` because it was mutably borrowed{OGN}\",\n-                         desc, OGN=o)\n+                         desc, OGN=o);\n+\n+        err.span_label(borrow_span, format!(\"borrow of `{}` occurs here\", borrow_desc));\n+        err.span_label(span, format!(\"use of borrowed `{}`\", borrow_desc));\n+\n+        err\n     }\n \n     fn cannot_act_on_uninitialized_variable(&self,"}]}