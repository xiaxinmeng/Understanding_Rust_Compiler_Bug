{"sha": "f5fd9ded000d7968b6641d2b17f4eca53a4a8f67", "node_id": "C_kwDOAAsO6NoAKGY1ZmQ5ZGVkMDAwZDc5NjhiNjY0MWQyYjE3ZjRlY2E1M2E0YThmNjc", "commit": {"author": {"name": "tamaron", "email": "tamaron1203@gmail.com", "date": "2022-02-02T02:25:15Z"}, "committer": {"name": "tamaron", "email": "tamaron1203@gmail.com", "date": "2022-02-02T02:25:15Z"}, "message": "chore", "tree": {"sha": "72acf83f4199bbaca4a39646d489d8f429f7e047", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72acf83f4199bbaca4a39646d489d8f429f7e047"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5fd9ded000d7968b6641d2b17f4eca53a4a8f67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5fd9ded000d7968b6641d2b17f4eca53a4a8f67", "html_url": "https://github.com/rust-lang/rust/commit/f5fd9ded000d7968b6641d2b17f4eca53a4a8f67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5fd9ded000d7968b6641d2b17f4eca53a4a8f67/comments", "author": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b13704a9cd866b9c1ed73c26f697158c16b75873", "url": "https://api.github.com/repos/rust-lang/rust/commits/b13704a9cd866b9c1ed73c26f697158c16b75873", "html_url": "https://github.com/rust-lang/rust/commit/b13704a9cd866b9c1ed73c26f697158c16b75873"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "b6c746d3e397116fd1e6856a8a646f696076ef53", "filename": "clippy_lints/src/loops/utils.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5fd9ded000d7968b6641d2b17f4eca53a4a8f67/clippy_lints%2Fsrc%2Floops%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5fd9ded000d7968b6641d2b17f4eca53a4a8f67/clippy_lints%2Fsrc%2Floops%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Futils.rs?ref=f5fd9ded000d7968b6641d2b17f4eca53a4a8f67", "patch": "@@ -335,7 +335,7 @@ pub(super) fn make_iterator_snippet(cx: &LateContext<'_>, arg: &Expr<'_>, applic\n         let arg_ty = cx.typeck_results().expr_ty_adjusted(arg);\n         match &arg_ty.kind() {\n             ty::Ref(_, inner_ty, mutbl) if has_iter_method(cx, inner_ty).is_some() => {\n-                let meth_name = match mutbl {\n+                let method_name = match mutbl {\n                     Mutability::Mut => \"iter_mut\",\n                     Mutability::Not => \"iter\",\n                 };\n@@ -346,7 +346,7 @@ pub(super) fn make_iterator_snippet(cx: &LateContext<'_>, arg: &Expr<'_>, applic\n                 format!(\n                     \"{}.{}()\",\n                     sugg::Sugg::hir_with_applicability(cx, caller, \"_\", applic_ref).maybe_par(),\n-                    meth_name,\n+                    method_name,\n                 )\n             },\n             _ => format!("}]}