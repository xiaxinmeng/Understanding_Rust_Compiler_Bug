{"sha": "af514240089891ddfaa3b9368dd255513141e7a9", "node_id": "C_kwDOAAsO6NoAKGFmNTE0MjQwMDg5ODkxZGRmYWEzYjkzNjhkZDI1NTUxMzE0MWU3YTk", "commit": {"author": {"name": "Nika Layzell", "email": "nika@thelayzells.com", "date": "2022-06-17T15:07:42Z"}, "committer": {"name": "Nika Layzell", "email": "nika@thelayzells.com", "date": "2022-06-17T15:07:42Z"}, "message": "Move empty final TokenStream handling to server side of bridge", "tree": {"sha": "a6047e2451b4f0b2d8b4487d279fdb17c17524d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6047e2451b4f0b2d8b4487d279fdb17c17524d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af514240089891ddfaa3b9368dd255513141e7a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af514240089891ddfaa3b9368dd255513141e7a9", "html_url": "https://github.com/rust-lang/rust/commit/af514240089891ddfaa3b9368dd255513141e7a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af514240089891ddfaa3b9368dd255513141e7a9/comments", "author": {"login": "mystor", "id": 1261662, "node_id": "MDQ6VXNlcjEyNjE2NjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1261662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mystor", "html_url": "https://github.com/mystor", "followers_url": "https://api.github.com/users/mystor/followers", "following_url": "https://api.github.com/users/mystor/following{/other_user}", "gists_url": "https://api.github.com/users/mystor/gists{/gist_id}", "starred_url": "https://api.github.com/users/mystor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mystor/subscriptions", "organizations_url": "https://api.github.com/users/mystor/orgs", "repos_url": "https://api.github.com/users/mystor/repos", "events_url": "https://api.github.com/users/mystor/events{/privacy}", "received_events_url": "https://api.github.com/users/mystor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mystor", "id": 1261662, "node_id": "MDQ6VXNlcjEyNjE2NjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1261662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mystor", "html_url": "https://github.com/mystor", "followers_url": "https://api.github.com/users/mystor/followers", "following_url": "https://api.github.com/users/mystor/following{/other_user}", "gists_url": "https://api.github.com/users/mystor/gists{/gist_id}", "starred_url": "https://api.github.com/users/mystor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mystor/subscriptions", "organizations_url": "https://api.github.com/users/mystor/orgs", "repos_url": "https://api.github.com/users/mystor/repos", "events_url": "https://api.github.com/users/mystor/events{/privacy}", "received_events_url": "https://api.github.com/users/mystor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d45af9e734ed0e2350290b4705d7931f70349d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d45af9e734ed0e2350290b4705d7931f70349d4", "html_url": "https://github.com/rust-lang/rust/commit/4d45af9e734ed0e2350290b4705d7931f70349d4"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "068f3e241beac4f56d1f31b9e7d5a782d8e77324", "filename": "library/proc_macro/src/bridge/client.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/af514240089891ddfaa3b9368dd255513141e7a9/library%2Fproc_macro%2Fsrc%2Fbridge%2Fclient.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af514240089891ddfaa3b9368dd255513141e7a9/library%2Fproc_macro%2Fsrc%2Fbridge%2Fclient.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Fbridge%2Fclient.rs?ref=af514240089891ddfaa3b9368dd255513141e7a9", "patch": "@@ -427,11 +427,7 @@ impl Client<crate::TokenStream, crate::TokenStream> {\n         Client {\n             get_handle_counters: HandleCounters::get,\n             run: super::selfless_reify::reify_to_extern_c_fn_hrt_bridge(move |bridge| {\n-                run_client(bridge, |input| {\n-                    f(crate::TokenStream(Some(input)))\n-                        .0\n-                        .unwrap_or_else(|| TokenStream::concat_streams(None, vec![]))\n-                })\n+                run_client(bridge, |input| f(crate::TokenStream(Some(input))).0)\n             }),\n             _marker: PhantomData,\n         }\n@@ -446,9 +442,7 @@ impl Client<(crate::TokenStream, crate::TokenStream), crate::TokenStream> {\n             get_handle_counters: HandleCounters::get,\n             run: super::selfless_reify::reify_to_extern_c_fn_hrt_bridge(move |bridge| {\n                 run_client(bridge, |(input, input2)| {\n-                    f(crate::TokenStream(Some(input)), crate::TokenStream(Some(input2)))\n-                        .0\n-                        .unwrap_or_else(|| TokenStream::concat_streams(None, vec![]))\n+                    f(crate::TokenStream(Some(input)), crate::TokenStream(Some(input2))).0\n                 })\n             }),\n             _marker: PhantomData,"}, {"sha": "3672299f18f486a1361045ac40110c0d3bc5530c", "filename": "library/proc_macro/src/bridge/server.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/af514240089891ddfaa3b9368dd255513141e7a9/library%2Fproc_macro%2Fsrc%2Fbridge%2Fserver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af514240089891ddfaa3b9368dd255513141e7a9/library%2Fproc_macro%2Fsrc%2Fbridge%2Fserver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Fbridge%2Fserver.rs?ref=af514240089891ddfaa3b9368dd255513141e7a9", "patch": "@@ -273,13 +273,17 @@ fn run_server<\n }\n \n impl client::Client<crate::TokenStream, crate::TokenStream> {\n-    pub fn run<S: Server>(\n+    pub fn run<S>(\n         &self,\n         strategy: &impl ExecutionStrategy,\n         server: S,\n         input: S::TokenStream,\n         force_show_panics: bool,\n-    ) -> Result<S::TokenStream, PanicMessage> {\n+    ) -> Result<S::TokenStream, PanicMessage>\n+    where\n+        S: Server,\n+        S::TokenStream: Default,\n+    {\n         let client::Client { get_handle_counters, run, _marker } = *self;\n         run_server(\n             strategy,\n@@ -289,19 +293,23 @@ impl client::Client<crate::TokenStream, crate::TokenStream> {\n             run,\n             force_show_panics,\n         )\n-        .map(<MarkedTypes<S> as Types>::TokenStream::unmark)\n+        .map(|s| <Option<<MarkedTypes<S> as Types>::TokenStream>>::unmark(s).unwrap_or_default())\n     }\n }\n \n impl client::Client<(crate::TokenStream, crate::TokenStream), crate::TokenStream> {\n-    pub fn run<S: Server>(\n+    pub fn run<S>(\n         &self,\n         strategy: &impl ExecutionStrategy,\n         server: S,\n         input: S::TokenStream,\n         input2: S::TokenStream,\n         force_show_panics: bool,\n-    ) -> Result<S::TokenStream, PanicMessage> {\n+    ) -> Result<S::TokenStream, PanicMessage>\n+    where\n+        S: Server,\n+        S::TokenStream: Default,\n+    {\n         let client::Client { get_handle_counters, run, _marker } = *self;\n         run_server(\n             strategy,\n@@ -314,6 +322,6 @@ impl client::Client<(crate::TokenStream, crate::TokenStream), crate::TokenStream\n             run,\n             force_show_panics,\n         )\n-        .map(<MarkedTypes<S> as Types>::TokenStream::unmark)\n+        .map(|s| <Option<<MarkedTypes<S> as Types>::TokenStream>>::unmark(s).unwrap_or_default())\n     }\n }"}]}