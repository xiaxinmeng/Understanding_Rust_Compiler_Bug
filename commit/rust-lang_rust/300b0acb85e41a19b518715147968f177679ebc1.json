{"sha": "300b0acb85e41a19b518715147968f177679ebc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMGIwYWNiODVlNDFhMTliNTE4NzE1MTQ3OTY4ZjE3NzY3OWViYzE=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-09-10T07:48:02Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-09-10T07:48:02Z"}, "message": "fix tidy, small cleanup", "tree": {"sha": "65761d3ac48cc94c1bdbd3379f9f61da0784b988", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65761d3ac48cc94c1bdbd3379f9f61da0784b988"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/300b0acb85e41a19b518715147968f177679ebc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/300b0acb85e41a19b518715147968f177679ebc1", "html_url": "https://github.com/rust-lang/rust/commit/300b0acb85e41a19b518715147968f177679ebc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/300b0acb85e41a19b518715147968f177679ebc1/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8667f93040cf539c469e3a64b9ed82c5f13bf938", "url": "https://api.github.com/repos/rust-lang/rust/commits/8667f93040cf539c469e3a64b9ed82c5f13bf938", "html_url": "https://github.com/rust-lang/rust/commit/8667f93040cf539c469e3a64b9ed82c5f13bf938"}], "stats": {"total": 41, "additions": 28, "deletions": 13}, "files": [{"sha": "1aeb0bd5ad9aafff2ac80cd9f6f7c6597c355142", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/300b0acb85e41a19b518715147968f177679ebc1/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300b0acb85e41a19b518715147968f177679ebc1/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=300b0acb85e41a19b518715147968f177679ebc1", "patch": "@@ -586,7 +586,7 @@ declare_features! (\n     (active, if_let_guard, \"1.47.0\", Some(51114), None),\n \n     /// Allows non trivial generic constants which have to be manually propageted upwards.\n-    (active, const_evaluatable_checked, \"1.48.0\", Some(0), None),\n+    (active, const_evaluatable_checked, \"1.48.0\", Some(76560), None),\n \n     // -------------------------------------------------------------------------\n     // feature-group-end: actual feature gates"}, {"sha": "fdb87c085b54ef377ba7306c1d4e44a548812087", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/300b0acb85e41a19b518715147968f177679ebc1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300b0acb85e41a19b518715147968f177679ebc1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=300b0acb85e41a19b518715147968f177679ebc1", "patch": "@@ -73,10 +73,6 @@ pub fn is_const_evaluatable<'cx, 'tcx>(\n         }\n     }\n \n-    if concrete.is_ok() {\n-        debug!(\"is_const_evaluatable: concrete ~~> ok\");\n-    } else {\n-        debug!(\"is_const_evaluatable: concrete ~~> err\");\n-    }\n+    debug!(?concrete, \"is_const_evaluatable\");\n     concrete.map(drop)\n }"}, {"sha": "7d6b3df03b06496fc073bd471935ad3545894f84", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/300b0acb85e41a19b518715147968f177679ebc1/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300b0acb85e41a19b518715147968f177679ebc1/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=300b0acb85e41a19b518715147968f177679ebc1", "patch": "@@ -1678,13 +1678,8 @@ fn predicates_defined_on(tcx: TyCtxt<'_>, def_id: DefId) -> ty::GenericPredicate\n \n     if tcx.features().const_evaluatable_checked {\n         let const_evaluatable = const_evaluatable_predicates_of(tcx, def_id, &result);\n-        if result.predicates.is_empty() {\n-            result.predicates = tcx.arena.alloc_from_iter(const_evaluatable);\n-        } else {\n-            result.predicates = tcx\n-                .arena\n-                .alloc_from_iter(result.predicates.iter().copied().chain(const_evaluatable));\n-        }\n+        result.predicates =\n+            tcx.arena.alloc_from_iter(result.predicates.iter().copied().chain(const_evaluatable));\n     }\n \n     debug!(\"predicates_defined_on({:?}) = {:?}\", def_id, result);"}, {"sha": "941bd5e9e5d0a984e894258e5b427ba210f1d424", "filename": "src/test/ui/const-generics/const_evaluatable_checked/feature-gate-const_evaluatable_checked.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/300b0acb85e41a19b518715147968f177679ebc1/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/300b0acb85e41a19b518715147968f177679ebc1/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.rs?ref=300b0acb85e41a19b518715147968f177679ebc1", "patch": "@@ -0,0 +1,14 @@\n+#![feature(const_generics)]\n+#![allow(incomplete_features)]\n+\n+type Arr<const N: usize> = [u8; N - 1];\n+\n+fn test<const N: usize>() -> Arr<N> where Arr<N>: Default {\n+    //~^ ERROR constant expression depends\n+    Default::default()\n+}\n+\n+fn main() {\n+    let x = test::<33>();\n+    assert_eq!(x, [0; 32]);\n+}"}, {"sha": "6e4a22a38b17c63be5f4871e945081fd3bac5e89", "filename": "src/test/ui/const-generics/const_evaluatable_checked/feature-gate-const_evaluatable_checked.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/300b0acb85e41a19b518715147968f177679ebc1/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/300b0acb85e41a19b518715147968f177679ebc1/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.stderr?ref=300b0acb85e41a19b518715147968f177679ebc1", "patch": "@@ -0,0 +1,10 @@\n+error: constant expression depends on a generic parameter\n+  --> $DIR/feature-gate-const_evaluatable_checked.rs:6:30\n+   |\n+LL | fn test<const N: usize>() -> Arr<N> where Arr<N>: Default {\n+   |                              ^^^^^^\n+   |\n+   = note: this may fail depending on what value the parameter takes\n+\n+error: aborting due to previous error\n+"}]}