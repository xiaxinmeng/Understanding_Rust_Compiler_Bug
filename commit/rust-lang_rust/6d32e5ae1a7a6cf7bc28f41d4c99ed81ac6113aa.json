{"sha": "6d32e5ae1a7a6cf7bc28f41d4c99ed81ac6113aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkMzJlNWFlMWE3YTZjZjdiYzI4ZjQxZDRjOTllZDgxYWM2MTEzYWE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-24T19:34:24Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-24T19:34:24Z"}, "message": "prefer into_initialized over read_initialited", "tree": {"sha": "0c8874988947e0884d1dc738dc57bc124a04c373", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c8874988947e0884d1dc738dc57bc124a04c373"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d32e5ae1a7a6cf7bc28f41d4c99ed81ac6113aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d32e5ae1a7a6cf7bc28f41d4c99ed81ac6113aa", "html_url": "https://github.com/rust-lang/rust/commit/6d32e5ae1a7a6cf7bc28f41d4c99ed81ac6113aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d32e5ae1a7a6cf7bc28f41d4c99ed81ac6113aa/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be8d728f3cb1cb79a630c6e6aba6df923dd3e999", "url": "https://api.github.com/repos/rust-lang/rust/commits/be8d728f3cb1cb79a630c6e6aba6df923dd3e999", "html_url": "https://github.com/rust-lang/rust/commit/be8d728f3cb1cb79a630c6e6aba6df923dd3e999"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "4b5056c5adffa1d4ec44e1756b076b10ca9971b1", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6d32e5ae1a7a6cf7bc28f41d4c99ed81ac6113aa/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d32e5ae1a7a6cf7bc28f41d4c99ed81ac6113aa/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=6d32e5ae1a7a6cf7bc28f41d4c99ed81ac6113aa", "patch": "@@ -1321,6 +1321,9 @@ impl<T> MaybeUninit<T> {\n     /// Reads the value from the `MaybeUninit<T>` container. The resulting `T` is subject\n     /// to the usual drop handling.\n     ///\n+    /// Whenever possible, it is preferrable to use [`into_initialized`] instead, which\n+    /// prevents duplicating the content of the `MaybeUninit<T>`.\n+    ///\n     /// # Safety\n     ///\n     /// It is up to the caller to guarantee that the `MaybeUninit<T>` really is in an initialized"}]}