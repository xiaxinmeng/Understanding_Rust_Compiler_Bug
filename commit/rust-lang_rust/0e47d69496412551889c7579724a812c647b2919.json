{"sha": "0e47d69496412551889c7579724a812c647b2919", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNDdkNjk0OTY0MTI1NTE4ODljNzU3OTcyNGE4MTJjNjQ3YjI5MTk=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-12T12:49:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-12T12:49:08Z"}, "message": "Rollup merge of #71053 - phansch:update_kw_sym_docs, r=Dylan-DPC\n\nAdd some basic docs to `sym` and `kw` modules\n\nI was looking into improving some Clippy documentation but was missing a\nplace that explains the `kw` and `sym` modules from rustc.\n\nThis adds some very basic usage documentation to these modules.", "tree": {"sha": "facd8dc3765a0121005083ee9bcc730db40cbc82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/facd8dc3765a0121005083ee9bcc730db40cbc82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e47d69496412551889c7579724a812c647b2919", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJekw5ECRBK7hj4Ov3rIwAAdHIIAAC7FqokdcXv+/qYpLVSAtar\n4xSfsVhI/N2eD1c2uXbO0MkQxvjeVJ/n5X1npQHXyuaGqTi38aGwufjSXIH82tda\n4o0RYgNM6nqIFn6EbzQ3JaRlYAPg1/IOH7IxYetUGEMI+Loz88EeHrRjalN8i+oY\nFloFHqK1iyakd9WVIoPjEEMH4MbnphjLs93YirXZrRnuW+5s8e3QcUt9GhkK6yzS\nWzUXAVO0WKju+wMmDUJciHBkgVqQhxQ63ko3sS/rTJ/5hAiaq9Vc122RZoBxD8Yc\nlygRK5Z9IqtREJKy4UMdBgD49mpyVf+wN5koWUNvtoaokA3aSQMvrsX8gW0s0TU=\n=EPgA\n-----END PGP SIGNATURE-----\n", "payload": "tree facd8dc3765a0121005083ee9bcc730db40cbc82\nparent 9c34740e92c434595bb776b948b9a53d171373b2\nparent ec4f7e2edfa8ee6cf9933ceb9194db44158e9222\nauthor Dylan DPC <dylan.dpc@gmail.com> 1586695748 +0200\ncommitter GitHub <noreply@github.com> 1586695748 +0200\n\nRollup merge of #71053 - phansch:update_kw_sym_docs, r=Dylan-DPC\n\nAdd some basic docs to `sym` and `kw` modules\n\nI was looking into improving some Clippy documentation but was missing a\nplace that explains the `kw` and `sym` modules from rustc.\n\nThis adds some very basic usage documentation to these modules.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e47d69496412551889c7579724a812c647b2919", "html_url": "https://github.com/rust-lang/rust/commit/0e47d69496412551889c7579724a812c647b2919", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e47d69496412551889c7579724a812c647b2919/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c34740e92c434595bb776b948b9a53d171373b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c34740e92c434595bb776b948b9a53d171373b2", "html_url": "https://github.com/rust-lang/rust/commit/9c34740e92c434595bb776b948b9a53d171373b2"}, {"sha": "ec4f7e2edfa8ee6cf9933ceb9194db44158e9222", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec4f7e2edfa8ee6cf9933ceb9194db44158e9222", "html_url": "https://github.com/rust-lang/rust/commit/ec4f7e2edfa8ee6cf9933ceb9194db44158e9222"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "4c963ac84dc85c1f3b93f1013bb1ebcbd467efdb", "filename": "src/librustc_span/symbol.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0e47d69496412551889c7579724a812c647b2919/src%2Flibrustc_span%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e47d69496412551889c7579724a812c647b2919/src%2Flibrustc_span%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsymbol.rs?ref=0e47d69496412551889c7579724a812c647b2919", "patch": "@@ -1153,12 +1153,20 @@ impl Interner {\n }\n \n // This module has a very short name because it's used a lot.\n+/// This module contains all the defined keyword `Symbol`s.\n+///\n+/// Given that `kw` is imported, use them like `kw::keyword_name`.\n+/// For example `kw::Loop` or `kw::Break`.\n pub mod kw {\n     use super::Symbol;\n     keywords!();\n }\n \n // This module has a very short name because it's used a lot.\n+/// This module contains all the defined non-keyword `Symbol`s.\n+///\n+/// Given that `sym` is imported, use them like `sym::symbol_name`.\n+/// For example `sym::rustfmt` or `sym::u8`.\n #[allow(rustc::default_hash_types)]\n pub mod sym {\n     use super::Symbol;"}]}