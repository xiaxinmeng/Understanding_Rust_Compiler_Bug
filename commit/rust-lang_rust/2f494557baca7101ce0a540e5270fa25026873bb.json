{"sha": "2f494557baca7101ce0a540e5270fa25026873bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNDk0NTU3YmFjYTcxMDFjZTBhNTQwZTUyNzBmYTI1MDI2ODczYmI=", "commit": {"author": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2021-04-25T17:09:35Z"}, "committer": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2021-04-29T00:35:08Z"}, "message": "Implement RFC 1260 with feature_name `imported_main`.", "tree": {"sha": "165f5681a9ce5d192990715d292aa5bec03ed80a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/165f5681a9ce5d192990715d292aa5bec03ed80a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f494557baca7101ce0a540e5270fa25026873bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f494557baca7101ce0a540e5270fa25026873bb", "html_url": "https://github.com/rust-lang/rust/commit/2f494557baca7101ce0a540e5270fa25026873bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f494557baca7101ce0a540e5270fa25026873bb/comments", "author": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae72f1adb9cbf16141f880e9e955723a5fdabf00", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae72f1adb9cbf16141f880e9e955723a5fdabf00", "html_url": "https://github.com/rust-lang/rust/commit/ae72f1adb9cbf16141f880e9e955723a5fdabf00"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e81a92eb74ca7c74afd2bb56aed669ec8a9cadb1", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f494557baca7101ce0a540e5270fa25026873bb/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f494557baca7101ce0a540e5270fa25026873bb/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=2f494557baca7101ce0a540e5270fa25026873bb", "patch": "@@ -678,7 +678,7 @@ pub fn method_chain_args<'a>(expr: &'a Expr<'_>, methods: &[&str]) -> Option<Vec\n pub fn is_entrypoint_fn(cx: &LateContext<'_>, def_id: DefId) -> bool {\n     cx.tcx\n         .entry_fn(LOCAL_CRATE)\n-        .map_or(false, |(entry_fn_def_id, _)| def_id == entry_fn_def_id.to_def_id())\n+        .map_or(false, |(entry_fn_def_id, _)| def_id == entry_fn_def_id)\n }\n \n /// Returns `true` if the expression is in the program's `#[panic_handler]`."}]}