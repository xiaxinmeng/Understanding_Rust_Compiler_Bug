{"sha": "3ce205a9ed75c530facd25a082b65bb67ecf331a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZTIwNWE5ZWQ3NWM1MzBmYWNkMjVhMDgyYjY1YmI2N2VjZjMzMWE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-09-03T11:30:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-03T11:30:46Z"}, "message": "Rollup merge of #88483 - jethrogb:jb/llvm-libunwind-self-contained, r=petrochenkov\n\nFix LLVM libunwind build for non-musl targets\n\nBroken in #85600. AFAICT, [only musl, mingw, and wasm](https://github.com/rust-lang/rust/blob/673d0db5e393e9c64897005b470bfeb6d5aec61b/compiler/rustc_target/src/spec/crt_objects.rs#L128-L132) should use the \u201cself-contained\u201d logic in rustbuild.", "tree": {"sha": "e6520071b7b89368a15a21ec78e00627176c3f99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6520071b7b89368a15a21ec78e00627176c3f99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ce205a9ed75c530facd25a082b65bb67ecf331a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhMgdnCRBK7hj4Ov3rIwAADxAIAFIMrCCyBVxGgtVj41CRpURi\nZWTzjevBLiV1q6ib7Y0511MGZ3DtkEYB2iBvIN1QkF2aFf3LSpMPGkAMOGyUnmzM\nRnwY0REgnjTlyuGUuME6zTMLsShH7sfgCVhMEif3FazOjQkW+cz0rcntRCMbkmdZ\nFwkGgkaY7+0Z6YaBxzRChl1ZSRNkyszh3+xKVDQMZ22+d3PLql0z9kHLz2j1HJ5+\noK6zwVJF8ZyJcB7fJniyBYBdnxNrX3ALDAf0Fgp5GenhJKar3new1R7AK7n4wz0Y\nZ5h/5e/0B86CsqdBGF0rAC1L+n5Lv0+Ku5v1xAwGEUQXduVd2KO4ClreCeWl2ys=\n=4A6o\n-----END PGP SIGNATURE-----\n", "payload": "tree e6520071b7b89368a15a21ec78e00627176c3f99\nparent cb2be32dbd518badcecb5c43cfc30e3db857e5ef\nparent 446c42945d7518e848ba9b9f7c844d6b3cc7b892\nauthor Mara Bos <m-ou.se@m-ou.se> 1630668646 +0200\ncommitter GitHub <noreply@github.com> 1630668646 +0200\n\nRollup merge of #88483 - jethrogb:jb/llvm-libunwind-self-contained, r=petrochenkov\n\nFix LLVM libunwind build for non-musl targets\n\nBroken in #85600. AFAICT, [only musl, mingw, and wasm](https://github.com/rust-lang/rust/blob/673d0db5e393e9c64897005b470bfeb6d5aec61b/compiler/rustc_target/src/spec/crt_objects.rs#L128-L132) should use the \u201cself-contained\u201d logic in rustbuild.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ce205a9ed75c530facd25a082b65bb67ecf331a", "html_url": "https://github.com/rust-lang/rust/commit/3ce205a9ed75c530facd25a082b65bb67ecf331a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ce205a9ed75c530facd25a082b65bb67ecf331a/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb2be32dbd518badcecb5c43cfc30e3db857e5ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb2be32dbd518badcecb5c43cfc30e3db857e5ef", "html_url": "https://github.com/rust-lang/rust/commit/cb2be32dbd518badcecb5c43cfc30e3db857e5ef"}, {"sha": "446c42945d7518e848ba9b9f7c844d6b3cc7b892", "url": "https://api.github.com/repos/rust-lang/rust/commits/446c42945d7518e848ba9b9f7c844d6b3cc7b892", "html_url": "https://github.com/rust-lang/rust/commit/446c42945d7518e848ba9b9f7c844d6b3cc7b892"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "df9e9bce415276245571bf083e0608ee390e1d88", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/3ce205a9ed75c530facd25a082b65bb67ecf331a/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ce205a9ed75c530facd25a082b65bb67ecf331a/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=3ce205a9ed75c530facd25a082b65bb67ecf331a", "patch": "@@ -142,6 +142,14 @@ fn copy_and_stamp(\n     target_deps.push((target, dependency_type));\n }\n \n+fn copy_llvm_libunwind(builder: &Builder<'_>, target: TargetSelection, libdir: &Path) -> PathBuf {\n+    let libunwind_path = builder.ensure(native::Libunwind { target });\n+    let libunwind_source = libunwind_path.join(\"libunwind.a\");\n+    let libunwind_target = libdir.join(\"libunwind.a\");\n+    builder.copy(&libunwind_source, &libunwind_target);\n+    libunwind_target\n+}\n+\n /// Copies third party objects needed by various targets.\n fn copy_third_party_objects(\n     builder: &Builder<'_>,\n@@ -167,6 +175,15 @@ fn copy_third_party_objects(\n         );\n     }\n \n+    if target == \"x86_64-fortanix-unknown-sgx\"\n+        || builder.config.llvm_libunwind == LlvmLibunwind::InTree\n+            && (target.contains(\"linux\") || target.contains(\"fuchsia\"))\n+    {\n+        let libunwind_path =\n+            copy_llvm_libunwind(builder, target, &builder.sysroot_libdir(*compiler, target));\n+        target_deps.push((libunwind_path, DependencyType::Target));\n+    }\n+\n     target_deps\n }\n \n@@ -208,6 +225,9 @@ fn copy_self_contained_objects(\n             builder.copy(&src, &target);\n             target_deps.push((target, DependencyType::TargetSelfContained));\n         }\n+\n+        let libunwind_path = copy_llvm_libunwind(builder, target, &libdir_self_contained);\n+        target_deps.push((libunwind_path, DependencyType::TargetSelfContained));\n     } else if target.ends_with(\"-wasi\") {\n         let srcdir = builder\n             .wasi_root(target)\n@@ -234,18 +254,6 @@ fn copy_self_contained_objects(\n         }\n     }\n \n-    if target.contains(\"musl\")\n-        || target.contains(\"x86_64-fortanix-unknown-sgx\")\n-        || builder.config.llvm_libunwind == LlvmLibunwind::InTree\n-            && (target.contains(\"linux\") || target.contains(\"fuchsia\"))\n-    {\n-        let libunwind_path = builder.ensure(native::Libunwind { target });\n-        let libunwind_source = libunwind_path.join(\"libunwind.a\");\n-        let libunwind_target = libdir_self_contained.join(\"libunwind.a\");\n-        builder.copy(&libunwind_source, &libunwind_target);\n-        target_deps.push((libunwind_target, DependencyType::TargetSelfContained));\n-    }\n-\n     target_deps\n }\n "}]}