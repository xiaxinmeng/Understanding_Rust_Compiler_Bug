{"sha": "e11dd802c1aa07ed61de2fdc8a7c79bae1e99f0a", "node_id": "C_kwDOAAsO6NoAKGUxMWRkODAyYzFhYTA3ZWQ2MWRlMmZkYzhhN2M3OWJhZTFlOTlmMGE", "commit": {"author": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-05-02T07:44:59Z"}, "committer": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-07-02T13:54:37Z"}, "message": "seek before counting zero bytes", "tree": {"sha": "0ee86ab0d6460a87e21d2829b3d0a569c2bf6e01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ee86ab0d6460a87e21d2829b3d0a569c2bf6e01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e11dd802c1aa07ed61de2fdc8a7c79bae1e99f0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e11dd802c1aa07ed61de2fdc8a7c79bae1e99f0a", "html_url": "https://github.com/rust-lang/rust/commit/e11dd802c1aa07ed61de2fdc8a7c79bae1e99f0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e11dd802c1aa07ed61de2fdc8a7c79bae1e99f0a/comments", "author": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ead92dd64d256ec631fb05eb4d5723c179533cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ead92dd64d256ec631fb05eb4d5723c179533cb", "html_url": "https://github.com/rust-lang/rust/commit/1ead92dd64d256ec631fb05eb4d5723c179533cb"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "71642305504931209e966580b9fb3a4ef6e0104e", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e11dd802c1aa07ed61de2fdc8a7c79bae1e99f0a/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e11dd802c1aa07ed61de2fdc8a7c79bae1e99f0a/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=e11dd802c1aa07ed61de2fdc8a7c79bae1e99f0a", "patch": "@@ -40,7 +40,7 @@ use rustc_span::{\n use rustc_target::abi::VariantIdx;\n use std::borrow::Borrow;\n use std::hash::Hash;\n-use std::io::{Read, Write};\n+use std::io::{Read, Seek, Write};\n use std::iter;\n use std::num::NonZeroUsize;\n use std::path::{Path, PathBuf};\n@@ -735,6 +735,7 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n \n         if tcx.sess.meta_stats() {\n             let mut zero_bytes = 0;\n+            self.opaque.file().seek(std::io::SeekFrom::Start(0)).unwrap();\n             let file = std::io::BufReader::new(self.opaque.file());\n             for e in file.bytes() {\n                 if e.unwrap() == 0 {"}]}