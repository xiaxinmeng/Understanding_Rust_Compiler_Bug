{"sha": "d4c317320d58fa5d31eab6f3533c14ad2c12d78d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YzMxNzMyMGQ1OGZhNWQzMWVhYjZmMzUzM2MxNGFkMmMxMmQ3OGQ=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-03-30T16:07:27Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-03-30T16:07:27Z"}, "message": "Simplify SemanticTokensBuilder build method\n\nThis matches the next stable vscode api", "tree": {"sha": "f33561c0a48dfeca9a029852d15352661084734c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f33561c0a48dfeca9a029852d15352661084734c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4c317320d58fa5d31eab6f3533c14ad2c12d78d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4c317320d58fa5d31eab6f3533c14ad2c12d78d", "html_url": "https://github.com/rust-lang/rust/commit/d4c317320d58fa5d31eab6f3533c14ad2c12d78d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4c317320d58fa5d31eab6f3533c14ad2c12d78d/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "671926ac93f0ff921758a919eaf87c056979189f", "url": "https://api.github.com/repos/rust-lang/rust/commits/671926ac93f0ff921758a919eaf87c056979189f", "html_url": "https://github.com/rust-lang/rust/commit/671926ac93f0ff921758a919eaf87c056979189f"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "f60a3f0a0bde96c80d8f2087e27b75f4321f7d9f", "filename": "crates/rust-analyzer/src/main_loop/handlers.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4c317320d58fa5d31eab6f3533c14ad2c12d78d/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4c317320d58fa5d31eab6f3533c14ad2c12d78d/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=d4c317320d58fa5d31eab6f3533c14ad2c12d78d", "patch": "@@ -14,7 +14,7 @@ use lsp_types::{\n     CodeAction, CodeActionResponse, CodeLens, Command, CompletionItem, Diagnostic,\n     DocumentFormattingParams, DocumentHighlight, DocumentSymbol, FoldingRange, FoldingRangeParams,\n     Hover, HoverContents, Location, MarkupContent, MarkupKind, Position, PrepareRenameResponse,\n-    Range, RenameParams, SemanticTokens, SemanticTokensParams, SemanticTokensRangeParams,\n+    Range, RenameParams, SemanticTokensParams, SemanticTokensRangeParams,\n     SemanticTokensRangeResult, SemanticTokensResult, SymbolInformation, TextDocumentIdentifier,\n     TextEdit, WorkspaceEdit,\n };\n@@ -1145,7 +1145,7 @@ pub fn handle_semantic_tokens(\n         }\n     }\n \n-    let tokens = SemanticTokens { data: builder.build(), ..Default::default() };\n+    let tokens = builder.build();\n \n     Ok(Some(tokens.into()))\n }\n@@ -1166,7 +1166,7 @@ pub fn handle_semantic_tokens_range(\n         builder.push(highlight_range.range.conv_with(&line_index), token_type, token_modifiers);\n     }\n \n-    let tokens = SemanticTokens { data: builder.build(), ..Default::default() };\n+    let tokens = builder.build();\n \n     Ok(Some(tokens.into()))\n }"}, {"sha": "2a66bbfd85e5183209c9ac23f88d1db34a08a36e", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d4c317320d58fa5d31eab6f3533c14ad2c12d78d/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4c317320d58fa5d31eab6f3533c14ad2c12d78d/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=d4c317320d58fa5d31eab6f3533c14ad2c12d78d", "patch": "@@ -2,7 +2,7 @@\n \n use std::ops;\n \n-use lsp_types::{Range, SemanticToken, SemanticTokenModifier, SemanticTokenType};\n+use lsp_types::{Range, SemanticToken, SemanticTokenModifier, SemanticTokenType, SemanticTokens};\n \n pub(crate) const ATTRIBUTE: SemanticTokenType = SemanticTokenType::new(\"attribute\");\n pub(crate) const BUILTIN_TYPE: SemanticTokenType = SemanticTokenType::new(\"builtinType\");\n@@ -109,8 +109,8 @@ impl SemanticTokensBuilder {\n         self.prev_char = range.start.character as u32;\n     }\n \n-    pub fn build(self) -> Vec<SemanticToken> {\n-        self.data\n+    pub fn build(self) -> SemanticTokens {\n+        SemanticTokens { result_id: None, data: self.data }\n     }\n }\n "}]}