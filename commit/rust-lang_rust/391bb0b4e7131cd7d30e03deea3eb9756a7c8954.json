{"sha": "391bb0b4e7131cd7d30e03deea3eb9756a7c8954", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MWJiMGI0ZTcxMzFjZDdkMzBlMDNkZWVhM2ViOTc1NmE3Yzg5NTQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-06-20T01:37:50Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-06-20T01:37:50Z"}, "message": "std: Make newsched failures log correctly", "tree": {"sha": "6205ff4d378f0e50c7b1e10ecb91b4c542881fa7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6205ff4d378f0e50c7b1e10ecb91b4c542881fa7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/391bb0b4e7131cd7d30e03deea3eb9756a7c8954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/391bb0b4e7131cd7d30e03deea3eb9756a7c8954", "html_url": "https://github.com/rust-lang/rust/commit/391bb0b4e7131cd7d30e03deea3eb9756a7c8954", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/391bb0b4e7131cd7d30e03deea3eb9756a7c8954/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5086c0850ebdd8407901d108f312ab141e4a4a18", "url": "https://api.github.com/repos/rust-lang/rust/commits/5086c0850ebdd8407901d108f312ab141e4a4a18", "html_url": "https://github.com/rust-lang/rust/commit/5086c0850ebdd8407901d108f312ab141e4a4a18"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "f2591996e3a9eba291f6c76d76835fb76c6f95bb", "filename": "src/libstd/sys.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/391bb0b4e7131cd7d30e03deea3eb9756a7c8954/src%2Flibstd%2Fsys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/391bb0b4e7131cd7d30e03deea3eb9756a7c8954/src%2Flibstd%2Fsys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys.rs?ref=391bb0b4e7131cd7d30e03deea3eb9756a7c8954", "patch": "@@ -180,10 +180,13 @@ impl FailWithCause for &'static str {\n \n // FIXME #4427: Temporary until rt::rt_fail_ goes away\n pub fn begin_unwind_(msg: *c_char, file: *c_char, line: size_t) -> ! {\n+    use cell::Cell;\n     use option::Option;\n+    use either::Left;\n     use rt::{context, OldTaskContext, TaskContext};\n     use rt::task::{Task, Unwinder};\n     use rt::local::Local;\n+    use rt::logging::Logger;\n \n     let context = context();\n     match context {\n@@ -200,12 +203,18 @@ pub fn begin_unwind_(msg: *c_char, file: *c_char, line: size_t) -> ! {\n                 let msg = str::raw::from_c_str(msg);\n                 let file = str::raw::from_c_str(file);\n \n-                let outmsg = fmt!(\"%s at line %i of file %s\", msg, line as int, file);\n+                let outmsg = fmt!(\"task failed: '%s' at line %i of file %s\",\n+                                  msg, line as int, file);\n \n                 // XXX: Logging doesn't work correctly in non-task context because it\n                 // invokes the local heap\n                 if context == TaskContext {\n-                    error!(outmsg);\n+                    // XXX: Logging doesn't work here - the check to call the log\n+                    // function never passes - so calling the log function directly.\n+                    let outmsg = Cell::new(outmsg);\n+                    do Local::borrow::<Task, ()> |task| {\n+                        task.logger.log(Left(outmsg.take()));\n+                    }\n                 } else {\n                     rtdebug!(\"%s\", outmsg);\n                 }"}]}