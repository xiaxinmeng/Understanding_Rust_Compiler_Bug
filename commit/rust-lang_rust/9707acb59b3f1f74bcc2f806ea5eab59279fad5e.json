{"sha": "9707acb59b3f1f74bcc2f806ea5eab59279fad5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3MDdhY2I1OWIzZjFmNzRiY2MyZjgwNmVhNWVhYjU5Mjc5ZmFkNWU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-05T08:52:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-05T08:52:07Z"}, "message": "Merge #7876\n\n7876: Cleanup install command r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "d57e4695c79e7485a1295adac9a2aafa20e9a3df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d57e4695c79e7485a1295adac9a2aafa20e9a3df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9707acb59b3f1f74bcc2f806ea5eab59279fad5e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgQfE3CRBK7hj4Ov3rIwAAdHIIACRMxCe16EEwVgO3k9fSZgzp\nm/rqGBnciBuO2LmnwnB0qikwHMi+fgVbUQKAD8wpeb84a5SFIjFMOOth/jHi11yR\nwiplBD+L/wXt4VPi81KQD/FuD1WtIlOPEpXwUHvtVxMEmHcjk9SPMsSuUKrSBtFB\ncwDwedjCkqjKWnnS8JMIgx+ClUw4EdEwozduNtVYxvMlha3hac8buDcgbB3LHibr\nQmtm4+i8wmhOymx4pOw/6mok162zdSu9UK/pSsgxaPV2lRh6+fsv8/C34nFGhb6Q\nFgukiMbppCntxmSI3norLJ25ppAAxOkWUzmcYJao34y4rw8qBg5ITA1Qaa0RXr0=\n=iOe8\n-----END PGP SIGNATURE-----\n", "payload": "tree d57e4695c79e7485a1295adac9a2aafa20e9a3df\nparent 16a76aa158d0898d6a46d7bba7310150555a69b9\nparent 142f9a03fd4bad366439b18d8de7f2237bed65ab\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1614934327 +0000\ncommitter GitHub <noreply@github.com> 1614934327 +0000\n\nMerge #7876\n\n7876: Cleanup install command r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9707acb59b3f1f74bcc2f806ea5eab59279fad5e", "html_url": "https://github.com/rust-lang/rust/commit/9707acb59b3f1f74bcc2f806ea5eab59279fad5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9707acb59b3f1f74bcc2f806ea5eab59279fad5e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16a76aa158d0898d6a46d7bba7310150555a69b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/16a76aa158d0898d6a46d7bba7310150555a69b9", "html_url": "https://github.com/rust-lang/rust/commit/16a76aa158d0898d6a46d7bba7310150555a69b9"}, {"sha": "142f9a03fd4bad366439b18d8de7f2237bed65ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/142f9a03fd4bad366439b18d8de7f2237bed65ab", "html_url": "https://github.com/rust-lang/rust/commit/142f9a03fd4bad366439b18d8de7f2237bed65ab"}], "stats": {"total": 107, "additions": 56, "deletions": 51}, "files": [{"sha": "e8f10b9385e1bed6063afcc8383f3fbee58b7bd5", "filename": "Cargo.lock", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9707acb59b3f1f74bcc2f806ea5eab59279fad5e/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9707acb59b3f1f74bcc2f806ea5eab59279fad5e/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=9707acb59b3f1f74bcc2f806ea5eab59279fad5e", "patch": "@@ -1919,18 +1919,18 @@ checksum = \"06069a848f95fceae3e5e03c0ddc8cb78452b56654ee0c8e68f938cf790fb9e3\"\n \n [[package]]\n name = \"xflags\"\n-version = \"0.1.3\"\n+version = \"0.1.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ddb4b07c0db813f8e2b5e1b2189ef56fcddb27a6f9ef71314dbf8cc50096a5db\"\n+checksum = \"222e914b43cec5d7305ac5116d10a14b3a52c50e9062d642c92631f3beabc729\"\n dependencies = [\n  \"xflags-macros\",\n ]\n \n [[package]]\n name = \"xflags-macros\"\n-version = \"0.1.3\"\n+version = \"0.1.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f8e168a99d6ce9d5dd0d0913f1bded279377843952dd8ff83f81b862a1dad0e1\"\n+checksum = \"52f18f5b4aa7f95e209d5b9274f6164c3938920b4d5c75f97f0dd16daee25ddd\"\n dependencies = [\n  \"proc-macro2\",\n ]"}, {"sha": "2ca05d3dfe59092c14affe5e858ca60d30e7e105", "filename": "xtask/src/flags.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/9707acb59b3f1f74bcc2f806ea5eab59279fad5e/xtask%2Fsrc%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9707acb59b3f1f74bcc2f806ea5eab59279fad5e/xtask%2Fsrc%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fflags.rs?ref=9707acb59b3f1f74bcc2f806ea5eab59279fad5e", "patch": "@@ -1,5 +1,7 @@\n #![allow(unreachable_pub)]\n \n+use crate::install::{ClientOpt, Malloc, ServerOpt};\n+\n xflags::args_parser! {\n     /// Run custom build command.\n     cmd xtask {\n@@ -137,3 +139,34 @@ impl Xtask {\n     }\n }\n // generated end\n+\n+impl Install {\n+    pub(crate) fn validate(&self) -> xflags::Result<()> {\n+        if let Some(code_bin) = &self.code_bin {\n+            if let Err(err) = code_bin.parse::<ClientOpt>() {\n+                return Err(xflags::Error::new(format!(\"failed to parse `--code-bin`: {}\", err)));\n+            }\n+        }\n+        Ok(())\n+    }\n+    pub(crate) fn server(&self) -> Option<ServerOpt> {\n+        if self.client && !self.server {\n+            return None;\n+        }\n+        let malloc = if self.mimalloc {\n+            Malloc::Mimalloc\n+        } else if self.jemalloc {\n+            Malloc::Jemalloc\n+        } else {\n+            Malloc::System\n+        };\n+        Some(ServerOpt { malloc })\n+    }\n+    pub(crate) fn client(&self) -> Option<ClientOpt> {\n+        if !self.client && self.server {\n+            return None;\n+        }\n+        let client_opt = self.code_bin.as_ref().and_then(|it| it.parse().ok()).unwrap_or_default();\n+        Some(client_opt)\n+    }\n+}"}, {"sha": "3e8fbe0a6243ce66f8a9e87e0bf4407194d27db6", "filename": "xtask/src/install.rs", "status": "modified", "additions": 15, "deletions": 18, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/9707acb59b3f1f74bcc2f806ea5eab59279fad5e/xtask%2Fsrc%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9707acb59b3f1f74bcc2f806ea5eab59279fad5e/xtask%2Fsrc%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Finstall.rs?ref=9707acb59b3f1f74bcc2f806ea5eab59279fad5e", "patch": "@@ -5,12 +5,24 @@ use std::{env, path::PathBuf, str};\n use anyhow::{bail, format_err, Context, Result};\n use xshell::{cmd, pushd};\n \n+use crate::flags;\n+\n // Latest stable, feel free to send a PR if this lags behind.\n const REQUIRED_RUST_VERSION: u32 = 50;\n \n-pub(crate) struct InstallCmd {\n-    pub(crate) client: Option<ClientOpt>,\n-    pub(crate) server: Option<ServerOpt>,\n+impl flags::Install {\n+    pub(crate) fn run(self) -> Result<()> {\n+        if cfg!(target_os = \"macos\") {\n+            fix_path_for_mac().context(\"Fix path for mac\")?\n+        }\n+        if let Some(server) = self.server() {\n+            install_server(server).context(\"install server\")?;\n+        }\n+        if let Some(client) = self.client() {\n+            install_client(client).context(\"install client\")?;\n+        }\n+        Ok(())\n+    }\n }\n \n #[derive(Clone, Copy)]\n@@ -70,21 +82,6 @@ pub(crate) enum Malloc {\n     Jemalloc,\n }\n \n-impl InstallCmd {\n-    pub(crate) fn run(self) -> Result<()> {\n-        if cfg!(target_os = \"macos\") {\n-            fix_path_for_mac().context(\"Fix path for mac\")?\n-        }\n-        if let Some(server) = self.server {\n-            install_server(server).context(\"install server\")?;\n-        }\n-        if let Some(client) = self.client {\n-            install_client(client).context(\"install client\")?;\n-        }\n-        Ok(())\n-    }\n-}\n-\n fn fix_path_for_mac() -> Result<()> {\n     let mut vscode_path: Vec<PathBuf> = {\n         const COMMON_APP_PATH: &str ="}, {"sha": "ca27b6cec4d749c83a2075390f3dd4ccb8845c44", "filename": "xtask/src/main.rs", "status": "modified", "additions": 4, "deletions": 29, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/9707acb59b3f1f74bcc2f806ea5eab59279fad5e/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9707acb59b3f1f74bcc2f806ea5eab59279fad5e/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=9707acb59b3f1f74bcc2f806ea5eab59279fad5e", "patch": "@@ -28,11 +28,7 @@ use std::{\n use walkdir::{DirEntry, WalkDir};\n use xshell::{cmd, cp, pushd, pushenv};\n \n-use crate::{\n-    codegen::Mode,\n-    dist::DistCmd,\n-    install::{InstallCmd, Malloc, ServerOpt},\n-};\n+use crate::{codegen::Mode, dist::DistCmd};\n \n fn main() -> Result<()> {\n     let _d = pushd(project_root())?;\n@@ -43,30 +39,9 @@ fn main() -> Result<()> {\n             println!(\"{}\", flags::Xtask::HELP);\n             return Ok(());\n         }\n-        flags::XtaskCmd::Install(flags) => {\n-            if flags.server && flags.client {\n-                eprintln!(\n-                    \"error: The argument `--server` cannot be used with `--client`\\n\\n\\\n-                     For more information try --help\"\n-                );\n-                return Ok(());\n-            }\n-\n-            let malloc = if flags.mimalloc {\n-                Malloc::Mimalloc\n-            } else if flags.jemalloc {\n-                Malloc::Jemalloc\n-            } else {\n-                Malloc::System\n-            };\n-\n-            let client_bin = flags.code_bin.map(|it| it.parse()).transpose()?;\n-\n-            InstallCmd {\n-                client: if flags.server { None } else { client_bin },\n-                server: if flags.client { None } else { Some(ServerOpt { malloc }) },\n-            }\n-            .run()\n+        flags::XtaskCmd::Install(cmd) => {\n+            cmd.validate()?;\n+            cmd.run()\n         }\n         flags::XtaskCmd::Codegen(cmd) => cmd.run(),\n         flags::XtaskCmd::Lint(_) => run_clippy(),"}]}