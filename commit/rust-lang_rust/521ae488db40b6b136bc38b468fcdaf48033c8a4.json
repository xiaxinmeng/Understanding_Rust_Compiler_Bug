{"sha": "521ae488db40b6b136bc38b468fcdaf48033c8a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMWFlNDg4ZGI0MGI2YjEzNmJjMzhiNDY4ZmNkYWY0ODAzM2M4YTQ=", "commit": {"author": {"name": "Chris Wong", "email": "lambda.fairy@gmail.com", "date": "2015-04-14T23:31:20Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-17T02:23:36Z"}, "message": "rustc: Add long diagnostics for E0152", "tree": {"sha": "878cdde4d2f68ab2c963410a90f4640c2bdb2cdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/878cdde4d2f68ab2c963410a90f4640c2bdb2cdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/521ae488db40b6b136bc38b468fcdaf48033c8a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/521ae488db40b6b136bc38b468fcdaf48033c8a4", "html_url": "https://github.com/rust-lang/rust/commit/521ae488db40b6b136bc38b468fcdaf48033c8a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/521ae488db40b6b136bc38b468fcdaf48033c8a4/comments", "author": {"login": "lambda-fairy", "id": 1572323, "node_id": "MDQ6VXNlcjE1NzIzMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1572323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambda-fairy", "html_url": "https://github.com/lambda-fairy", "followers_url": "https://api.github.com/users/lambda-fairy/followers", "following_url": "https://api.github.com/users/lambda-fairy/following{/other_user}", "gists_url": "https://api.github.com/users/lambda-fairy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambda-fairy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambda-fairy/subscriptions", "organizations_url": "https://api.github.com/users/lambda-fairy/orgs", "repos_url": "https://api.github.com/users/lambda-fairy/repos", "events_url": "https://api.github.com/users/lambda-fairy/events{/privacy}", "received_events_url": "https://api.github.com/users/lambda-fairy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0afdab11ec42ccf5dbe12cd37f71f30cca581f14", "url": "https://api.github.com/repos/rust-lang/rust/commits/0afdab11ec42ccf5dbe12cd37f71f30cca581f14", "html_url": "https://github.com/rust-lang/rust/commit/0afdab11ec42ccf5dbe12cd37f71f30cca581f14"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "19006578767859cfd0cdc7a933d4d09bcaa50791", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/521ae488db40b6b136bc38b468fcdaf48033c8a4/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/521ae488db40b6b136bc38b468fcdaf48033c8a4/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=521ae488db40b6b136bc38b468fcdaf48033c8a4", "patch": "@@ -112,6 +112,20 @@ reference when using guards or refactor the entire expression, perhaps by\n putting the condition inside the body of the arm.\n \"##,\n \n+E0152: r##\"\n+Lang items are already implemented in the standard library. Unless you are\n+writing a free-standing application (e.g. a kernel), you do not need to provide\n+them yourself.\n+\n+You can build a free-standing crate by adding `#![no_std]` to the crate\n+attributes:\n+\n+#![feature(no_std)]\n+#![no_std]\n+\n+See also https://doc.rust-lang.org/book/no-stdlib.html\n+\"##,\n+\n E0162: r##\"\n An if-let pattern attempts to match the pattern, and enters the body if the\n match was succesful. If the match is irrefutable (when it cannot fail to match),\n@@ -256,7 +270,6 @@ register_diagnostics! {\n     E0137,\n     E0138,\n     E0139,\n-    E0152,\n     E0158,\n     E0161,\n     E0170,"}]}