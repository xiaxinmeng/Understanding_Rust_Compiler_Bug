{"sha": "e615a26ae4fe293cda83961470907e78e4b2ee75", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MTVhMjZhZTRmZTI5M2NkYTgzOTYxNDcwOTA3ZTc4ZTRiMmVlNzU=", "commit": {"author": {"name": "Christian Stefanescu", "email": "chris@0chris.com", "date": "2020-08-21T12:03:42Z"}, "committer": {"name": "Christian Stefanescu", "email": "chris@0chris.com", "date": "2020-08-22T12:22:02Z"}, "message": "Use more elegant way to check for prelude string", "tree": {"sha": "f34783d02fddd0d77cc53fcd1592dce18d664745", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f34783d02fddd0d77cc53fcd1592dce18d664745"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e615a26ae4fe293cda83961470907e78e4b2ee75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e615a26ae4fe293cda83961470907e78e4b2ee75", "html_url": "https://github.com/rust-lang/rust/commit/e615a26ae4fe293cda83961470907e78e4b2ee75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e615a26ae4fe293cda83961470907e78e4b2ee75/comments", "author": {"login": "stchris", "id": 217554, "node_id": "MDQ6VXNlcjIxNzU1NA==", "avatar_url": "https://avatars.githubusercontent.com/u/217554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stchris", "html_url": "https://github.com/stchris", "followers_url": "https://api.github.com/users/stchris/followers", "following_url": "https://api.github.com/users/stchris/following{/other_user}", "gists_url": "https://api.github.com/users/stchris/gists{/gist_id}", "starred_url": "https://api.github.com/users/stchris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stchris/subscriptions", "organizations_url": "https://api.github.com/users/stchris/orgs", "repos_url": "https://api.github.com/users/stchris/repos", "events_url": "https://api.github.com/users/stchris/events{/privacy}", "received_events_url": "https://api.github.com/users/stchris/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stchris", "id": 217554, "node_id": "MDQ6VXNlcjIxNzU1NA==", "avatar_url": "https://avatars.githubusercontent.com/u/217554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stchris", "html_url": "https://github.com/stchris", "followers_url": "https://api.github.com/users/stchris/followers", "following_url": "https://api.github.com/users/stchris/following{/other_user}", "gists_url": "https://api.github.com/users/stchris/gists{/gist_id}", "starred_url": "https://api.github.com/users/stchris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stchris/subscriptions", "organizations_url": "https://api.github.com/users/stchris/orgs", "repos_url": "https://api.github.com/users/stchris/repos", "events_url": "https://api.github.com/users/stchris/events{/privacy}", "received_events_url": "https://api.github.com/users/stchris/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53508aeb65963c389233c956105202466128a900", "url": "https://api.github.com/repos/rust-lang/rust/commits/53508aeb65963c389233c956105202466128a900", "html_url": "https://github.com/rust-lang/rust/commit/53508aeb65963c389233c956105202466128a900"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5683a71efea4eff68208fd420aeda4c0d95b73d5", "filename": "clippy_lints/src/wildcard_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e615a26ae4fe293cda83961470907e78e4b2ee75/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e615a26ae4fe293cda83961470907e78e4b2ee75/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_imports.rs?ref=e615a26ae4fe293cda83961470907e78e4b2ee75", "patch": "@@ -198,7 +198,7 @@ impl WildcardImports {\n // Allow \"...prelude::..::*\" imports.\n // Many crates have a prelude, and it is imported as a glob by design.\n fn is_prelude_import(segments: &[PathSegment<'_>]) -> bool {\n-    segments.iter().filter(|ps| ps.ident.as_str() == \"prelude\").count() > 0\n+    segments.iter().any(|ps| ps.ident.as_str() == \"prelude\")\n }\n \n // Allow \"super::*\" imports in tests."}]}