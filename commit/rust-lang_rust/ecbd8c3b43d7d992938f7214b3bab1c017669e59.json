{"sha": "ecbd8c3b43d7d992938f7214b3bab1c017669e59", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYmQ4YzNiNDNkN2Q5OTI5MzhmNzIxNGIzYmFiMWMwMTc2NjllNTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-22T20:57:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-22T20:57:43Z"}, "message": "Auto merge of #28369 - ebfull:fix-higher-ranked, r=nikomatsakis\n\nFixes #28279.\r\n\r\nCurrently\r\n\r\n`common_supertype(*mut for<'a> Fn(&'a usize), *mut for<'a> Fn(&'a usize) + 'static)`\r\n\r\nequals `*mut Fn(&usize)` which seems to be caused by `higher_ranked_sub()` allowing region variables to escape the comparison. This prevents inference from working properly with stuff like `Rc<Fn(&T)>`.\r\n\r\nr? @nikomatsakis", "tree": {"sha": "74c81fd994c81cbb45839314e8ee5c63ea827b07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74c81fd994c81cbb45839314e8ee5c63ea827b07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecbd8c3b43d7d992938f7214b3bab1c017669e59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecbd8c3b43d7d992938f7214b3bab1c017669e59", "html_url": "https://github.com/rust-lang/rust/commit/ecbd8c3b43d7d992938f7214b3bab1c017669e59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecbd8c3b43d7d992938f7214b3bab1c017669e59/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c1aaeb7b97e34b6688f31c6921d636d27c02e73", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c1aaeb7b97e34b6688f31c6921d636d27c02e73", "html_url": "https://github.com/rust-lang/rust/commit/9c1aaeb7b97e34b6688f31c6921d636d27c02e73"}, {"sha": "e567cb5a3ee0fd01c3a96d9688b1ae54e9b541e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e567cb5a3ee0fd01c3a96d9688b1ae54e9b541e7", "html_url": "https://github.com/rust-lang/rust/commit/e567cb5a3ee0fd01c3a96d9688b1ae54e9b541e7"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "d1dad4921ae2107cdc9d545c80a066eda3dc9078", "filename": "src/librustc/middle/infer/equate.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ecbd8c3b43d7d992938f7214b3bab1c017669e59/src%2Flibrustc%2Fmiddle%2Finfer%2Fequate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecbd8c3b43d7d992938f7214b3bab1c017669e59/src%2Flibrustc%2Fmiddle%2Finfer%2Fequate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fequate.rs?ref=ecbd8c3b43d7d992938f7214b3bab1c017669e59", "patch": "@@ -17,6 +17,7 @@ use middle::ty::{self, Ty};\n use middle::ty::TyVar;\n use middle::ty::relate::{Relate, RelateResult, TypeRelation};\n \n+/// Ensures `a` is made equal to `b`. Returns `a` on success.\n pub struct Equate<'a, 'tcx: 'a> {\n     fields: CombineFields<'a, 'tcx>\n }\n@@ -68,7 +69,8 @@ impl<'a, 'tcx> TypeRelation<'a,'tcx> for Equate<'a, 'tcx> {\n             }\n \n             _ => {\n-                combine::super_combine_tys(self.fields.infcx, self, a, b)\n+                try!(combine::super_combine_tys(self.fields.infcx, self, a, b));\n+                Ok(a)\n             }\n         }\n     }"}, {"sha": "2cd686fde156ed755996aa90eb5c803329e7e695", "filename": "src/librustc/middle/infer/sub.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ecbd8c3b43d7d992938f7214b3bab1c017669e59/src%2Flibrustc%2Fmiddle%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecbd8c3b43d7d992938f7214b3bab1c017669e59/src%2Flibrustc%2Fmiddle%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fsub.rs?ref=ecbd8c3b43d7d992938f7214b3bab1c017669e59", "patch": "@@ -18,7 +18,7 @@ use middle::ty::TyVar;\n use middle::ty::relate::{Cause, Relate, RelateResult, TypeRelation};\n use std::mem;\n \n-/// \"Greatest lower bound\" (common subtype)\n+/// Ensures `a` is made a subtype of `b`. Returns `a` on success.\n pub struct Sub<'a, 'tcx: 'a> {\n     fields: CombineFields<'a, 'tcx>,\n }\n@@ -90,7 +90,8 @@ impl<'a, 'tcx> TypeRelation<'a, 'tcx> for Sub<'a, 'tcx> {\n             }\n \n             _ => {\n-                combine::super_combine_tys(self.fields.infcx, self, a, b)\n+                try!(combine::super_combine_tys(self.fields.infcx, self, a, b));\n+                Ok(a)\n             }\n         }\n     }"}, {"sha": "ae40ce44d178da9fb8e14c561996f5f35bec7430", "filename": "src/test/run-pass/issue-28279.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ecbd8c3b43d7d992938f7214b3bab1c017669e59/src%2Ftest%2Frun-pass%2Fissue-28279.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecbd8c3b43d7d992938f7214b3bab1c017669e59/src%2Ftest%2Frun-pass%2Fissue-28279.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-28279.rs?ref=ecbd8c3b43d7d992938f7214b3bab1c017669e59", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::rc::Rc;\n+\n+fn test1() -> Rc<for<'a> Fn(&'a usize) + 'static> {\n+    if let Some(_) = Some(1) {\n+        loop{}\n+    } else {\n+        loop{}\n+    }\n+}\n+\n+fn test2() -> *mut for<'a> Fn(&'a usize) + 'static {\n+    if let Some(_) = Some(1) {\n+        loop{}\n+    } else {\n+        loop{}\n+    }\n+}\n+\n+fn main() {}\n+"}]}