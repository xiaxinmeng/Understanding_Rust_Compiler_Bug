{"sha": "bea2e55efac9cd4d40cc37a543dba3f1d1714bd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYTJlNTVlZmFjOWNkNGQ0MGNjMzdhNTQzZGJhM2YxZDE3MTRiZDI=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-06-03T17:14:45Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-06-05T23:57:58Z"}, "message": "Utilize cfg(bootstrap) over cfg(stage0)\n\nAlso removes stage1, stage2 cfgs being passed to rustc to ensure that\nstage1 and stage2 are only differentiated as a group (i.e., only through\nnot bootstrap).", "tree": {"sha": "ac1e4f4d4cbffa3b243cc47ddb2919da051d960c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac1e4f4d4cbffa3b243cc47ddb2919da051d960c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bea2e55efac9cd4d40cc37a543dba3f1d1714bd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bea2e55efac9cd4d40cc37a543dba3f1d1714bd2", "html_url": "https://github.com/rust-lang/rust/commit/bea2e55efac9cd4d40cc37a543dba3f1d1714bd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bea2e55efac9cd4d40cc37a543dba3f1d1714bd2/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cdaffd7962c4aae0cadd82baa241901b03f9458", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cdaffd7962c4aae0cadd82baa241901b03f9458", "html_url": "https://github.com/rust-lang/rust/commit/7cdaffd7962c4aae0cadd82baa241901b03f9458"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "f5fb6f0b4d0080362c76202e9a5be40b501e03af", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bea2e55efac9cd4d40cc37a543dba3f1d1714bd2/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea2e55efac9cd4d40cc37a543dba3f1d1714bd2/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=bea2e55efac9cd4d40cc37a543dba3f1d1714bd2", "patch": "@@ -89,12 +89,16 @@ fn main() {\n \n     let mut cmd = Command::new(rustc);\n     cmd.args(&args)\n-        .arg(\"--cfg\")\n-        .arg(format!(\"stage{}\", stage))\n         .env(bootstrap::util::dylib_path_var(),\n              env::join_paths(&dylib_path).unwrap());\n     let mut maybe_crate = None;\n \n+    // Non-zero stages must all be treated uniformly to avoid problems when attempting to uplift\n+    // compiler libraries and such from stage 1 to 2.\n+    if stage == \"0\" {\n+        cmd.arg(\"--cfg\").arg(\"bootstrap\");\n+    }\n+\n     // Print backtrace in case of ICE\n     if env::var(\"RUSTC_BACKTRACE_ON_ICE\").is_ok() && env::var(\"RUST_BACKTRACE\").is_err() {\n         cmd.env(\"RUST_BACKTRACE\", \"1\");"}, {"sha": "c7fa8e788b573b02350f0445800853a284a2c180", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bea2e55efac9cd4d40cc37a543dba3f1d1714bd2/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea2e55efac9cd4d40cc37a543dba3f1d1714bd2/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=bea2e55efac9cd4d40cc37a543dba3f1d1714bd2", "patch": "@@ -341,7 +341,7 @@ impl Step for StartupObjects {\n             if !up_to_date(src_file, dst_file) {\n                 let mut cmd = Command::new(&builder.initial_rustc);\n                 builder.run(cmd.env(\"RUSTC_BOOTSTRAP\", \"1\")\n-                            .arg(\"--cfg\").arg(\"stage0\")\n+                            .arg(\"--cfg\").arg(\"bootstrap\")\n                             .arg(\"--target\").arg(target)\n                             .arg(\"--emit=obj\")\n                             .arg(\"-o\").arg(dst_file)"}, {"sha": "84867264e70161212e9b65c37e10b459e4bbddf3", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bea2e55efac9cd4d40cc37a543dba3f1d1714bd2/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea2e55efac9cd4d40cc37a543dba3f1d1714bd2/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=bea2e55efac9cd4d40cc37a543dba3f1d1714bd2", "patch": "@@ -1242,17 +1242,17 @@ extern \"rust-intrinsic\" {\n \n     /// Returns the result of an unchecked addition, resulting in\n     /// undefined behavior when `x + y > T::max_value()` or `x + y < T::min_value()`.\n-    #[cfg(not(stage0))]\n+    #[cfg(not(bootstrap))]\n     pub fn unchecked_add<T>(x: T, y: T) -> T;\n \n     /// Returns the result of an unchecked substraction, resulting in\n     /// undefined behavior when `x - y > T::max_value()` or `x - y < T::min_value()`.\n-    #[cfg(not(stage0))]\n+    #[cfg(not(bootstrap))]\n     pub fn unchecked_sub<T>(x: T, y: T) -> T;\n \n     /// Returns the result of an unchecked multiplication, resulting in\n     /// undefined behavior when `x * y > T::max_value()` or `x * y < T::min_value()`.\n-    #[cfg(not(stage0))]\n+    #[cfg(not(bootstrap))]\n     pub fn unchecked_mul<T>(x: T, y: T) -> T;\n \n     /// Performs rotate left."}, {"sha": "dd7090623f5b3bdd6628ebaf44874cae95560072", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bea2e55efac9cd4d40cc37a543dba3f1d1714bd2/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea2e55efac9cd4d40cc37a543dba3f1d1714bd2/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=bea2e55efac9cd4d40cc37a543dba3f1d1714bd2", "patch": "@@ -50,7 +50,7 @@ assert_eq!(size_of::<Option<core::num::\", stringify!($Ty), \">>(), size_of::<\", s\n                 #[derive(Copy, Clone, Eq, PartialEq, Ord, PartialOrd, Hash)]\n                 #[repr(transparent)]\n                 #[rustc_layout_scalar_valid_range_start(1)]\n-                #[cfg_attr(not(stage0), rustc_nonnull_optimization_guaranteed)]\n+                #[cfg_attr(not(bootstrap), rustc_nonnull_optimization_guaranteed)]\n                 pub struct $Ty($Int);\n             }\n "}, {"sha": "46dde7c1da58993cc2c9e65463672e618f69a9b8", "filename": "src/libcore/ptr/non_null.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bea2e55efac9cd4d40cc37a543dba3f1d1714bd2/src%2Flibcore%2Fptr%2Fnon_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea2e55efac9cd4d40cc37a543dba3f1d1714bd2/src%2Flibcore%2Fptr%2Fnon_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr%2Fnon_null.rs?ref=bea2e55efac9cd4d40cc37a543dba3f1d1714bd2", "patch": "@@ -38,7 +38,7 @@ use crate::cmp::Ordering;\n #[stable(feature = \"nonnull\", since = \"1.25.0\")]\n #[repr(transparent)]\n #[rustc_layout_scalar_valid_range_start(1)]\n-#[cfg_attr(not(stage0), rustc_nonnull_optimization_guaranteed)]\n+#[cfg_attr(not(bootstrap), rustc_nonnull_optimization_guaranteed)]\n pub struct NonNull<T: ?Sized> {\n     pointer: *const T,\n }"}]}