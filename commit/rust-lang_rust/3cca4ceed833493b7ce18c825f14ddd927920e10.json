{"sha": "3cca4ceed833493b7ce18c825f14ddd927920e10", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjY2E0Y2VlZDgzMzQ5M2I3Y2UxOGM4MjVmMTRkZGQ5Mjc5MjBlMTA=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-06-12T06:56:07Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-07-07T18:51:29Z"}, "message": "syntax: Add feature gate.\n\nThis commit adds a `const_in_array_repeat_expressions` feature gate and\nonly create `Candidate::Repeat` if it is enabled.", "tree": {"sha": "40e401d8c86625171d981f51ad1fe1edaa3d72c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40e401d8c86625171d981f51ad1fe1edaa3d72c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cca4ceed833493b7ce18c825f14ddd927920e10", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl0iPzIACgkQJZLnbIc4\nH9kldg/9HJiWeWVGqRql6Gx50XkgF0+i/R0IumlaWjLXUGIGaIgkcSPfDtqtLnbP\ndd9rndJjWzOM5tHv1LmYQafvl0PNhg87+2lg4qfQxV2BpV2VhGjA/VPau1X4V0Uu\nT1QMCTP8faTGmN8H3e9C2zX/TPezB300KsLedaa2YXFQrSff1ho4zy3iQnaepDnf\nddkTP5fcNwQjEzJ+ut6DTvTdDJNYndIv8fxL6xfCJpQk57KshOQasJXribAn5az4\n0djmOkGIHQScVbNrtgnutpBX9lFNS/fwbteqLnzqwRCzlP6uYqyLnMyIblvMvXat\nVvuaVpOcFr/trW1OIteEVSEyrGcu8qQ5wFz56zhIABRgb/F92ovXG5lCKbgt7Gsz\nyWLZY41sPrCb9RgL8H0Iu4gfnLrjoA7Mn8GrPLLAefeILyK93BPr17kzuEfJkDZW\nYP5PeFybXxZWo+HMPt7Z64cDmEkSqxa4plu1dOfoiIMr5hpuewPBKJlbJfHmj0kV\n33QMcQnLlE5Bl3nxB/r639X2DTCF+3A12B7FVySjqvDfCwz5qiQU+lW3ax3q3lJ5\nhHWdLST1Rupuh6vo004Gd90KVkHm/HMRviIrw56l2oejDCbUa+NGgFMqLlKsiQjP\nzpv10to6X/SaFM/JGsvyzDU72ti1YYZ5fmjNdZIBtOHbZtVghOc=\n=7Ywt\n-----END PGP SIGNATURE-----", "payload": "tree 40e401d8c86625171d981f51ad1fe1edaa3d72c8\nparent 485a80255b13840551e08f34a268528bbb2a33d9\nauthor David Wood <david@davidtw.co> 1560322567 +0100\ncommitter David Wood <david@davidtw.co> 1562525489 +0100\n\nsyntax: Add feature gate.\n\nThis commit adds a `const_in_array_repeat_expressions` feature gate and\nonly create `Candidate::Repeat` if it is enabled.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cca4ceed833493b7ce18c825f14ddd927920e10", "html_url": "https://github.com/rust-lang/rust/commit/3cca4ceed833493b7ce18c825f14ddd927920e10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cca4ceed833493b7ce18c825f14ddd927920e10/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "485a80255b13840551e08f34a268528bbb2a33d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/485a80255b13840551e08f34a268528bbb2a33d9", "html_url": "https://github.com/rust-lang/rust/commit/485a80255b13840551e08f34a268528bbb2a33d9"}], "stats": {"total": 52, "additions": 46, "deletions": 6}, "files": [{"sha": "09d1b19b4c3c382868c7500a2557a48c241f4cba", "filename": "src/doc/unstable-book/src/language-features/const-in-array-repeat-expressions.md", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fconst-in-array-repeat-expressions.md", "raw_url": "https://github.com/rust-lang/rust/raw/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fconst-in-array-repeat-expressions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fconst-in-array-repeat-expressions.md?ref=3cca4ceed833493b7ce18c825f14ddd927920e10", "patch": "@@ -0,0 +1,11 @@\n+# `const_in_array_repeat_expressions`\n+\n+The tracking issue for this feature is: [#49147]\n+\n+[#44109]: https://github.com/rust-lang/rust/issues/49147\n+\n+------------------------\n+\n+Relaxes the rules for repeat expressions, `[x; N]` such that `x` may also be `const` (strictly\n+speaking rvalue promotable), in addition to `typeof(x): Copy`. The result of `[x; N]` where `x` is\n+`const` is itself also `const`."}, {"sha": "f980c717d6e1610de6cb6c20c7cecc3176d3ff74", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=3cca4ceed833493b7ce18c825f14ddd927920e10", "patch": "@@ -811,7 +811,7 @@ impl<'a, 'tcx> Checker<'a, 'tcx> {\n                 let not_promotable = IsNotImplicitlyPromotable::in_operand(self, operand) ||\n                                      IsNotPromotable::in_operand(self, operand);\n                 debug!(\"assign: self.def_id={:?} operand={:?}\", self.def_id, operand);\n-                if !not_promotable {\n+                if !not_promotable && self.tcx.features().const_in_array_repeat_expressions {\n                     debug!(\"assign: candidate={:?}\", candidate);\n                     self.promotion_candidates.push(candidate);\n                 }"}, {"sha": "ca3e6d254bd1d7ee2f0b43ab14e8acc617ee8fa9", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=3cca4ceed833493b7ce18c825f14ddd927920e10", "patch": "@@ -562,10 +562,10 @@ declare_features! (\n     // Allows `if/while p && let q = r && ...` chains.\n     (active, let_chains, \"1.37.0\", Some(53667), None),\n \n-    // #[repr(transparent)] on enums.\n+    // Allows #[repr(transparent)] on enums (RFC 2645).\n     (active, transparent_enums, \"1.37.0\", Some(60405), None),\n \n-    // #[repr(transparent)] on unions.\n+    // Allows #[repr(transparent)] on unions (RFC 2645).\n     (active, transparent_unions, \"1.37.0\", Some(60405), None),\n \n     // Allows explicit discriminants on non-unit enum variants.\n@@ -580,6 +580,9 @@ declare_features! (\n     // Allows the use of `#[cfg(doctest)]`, set when rustdoc is collecting doctests\n     (active, cfg_doctest, \"1.37.0\", Some(62210), None),\n \n+    // Allows `[x; N]` where `x` is a constant (RFC 2203).\n+    (active, const_in_array_repeat_expressions, \"1.37.0\", Some(49147), None),\n+\n     // -------------------------------------------------------------------------\n     // feature-group-end: actual feature gates\n     // -------------------------------------------------------------------------"}, {"sha": "670e445a30bf8c339653eae4fcbeb2d7db30799e", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=3cca4ceed833493b7ce18c825f14ddd927920e10", "patch": "@@ -199,6 +199,7 @@ symbols! {\n         const_fn_union,\n         const_generics,\n         const_indexing,\n+        const_in_array_repeat_expressions,\n         const_let,\n         const_panic,\n         const_raw_ptr_deref,"}, {"sha": "fb944df14c852b6f1ab8a222e88e49357b09118f", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/migrate-borrowck.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-borrowck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-borrowck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-borrowck.rs?ref=3cca4ceed833493b7ce18c825f14ddd927920e10", "patch": "@@ -1,5 +1,6 @@\n // ignore-compile-mode-nll\n // compile-flags: -Z borrowck=migrate\n+#![feature(constants_in_array_repeat_expressions)]\n #![allow(warnings)]\n \n // Some type that is not copyable."}, {"sha": "5de0cd505eb7765ae1777c32ca2fdf8ffae0ef78", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/migrate-borrowck.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-borrowck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-borrowck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fmigrate-borrowck.stderr?ref=3cca4ceed833493b7ce18c825f14ddd927920e10", "patch": "@@ -1,13 +1,13 @@\n error: repeated expression does not implement `std::marker::Copy`\n-  --> $DIR/migrate-borrowck.rs:87:37\n+  --> $DIR/migrate-borrowck.rs:88:37\n    |\n LL |         let arr: [Option<Bar>; 2] = [x; 2];\n    |                                     ^^^^^^ the trait `std::marker::Copy` is not implemented for `std::option::Option<Bar>`\n    |\n    = note: the `std::marker::Copy` trait is required because the repeated element will be copied\n \n error: repeated expression does not implement `std::marker::Copy`\n-  --> $DIR/migrate-borrowck.rs:103:37\n+  --> $DIR/migrate-borrowck.rs:104:37\n    |\n LL |         let arr: [Option<Bar>; 2] = [x; 2];\n    |                                     ^^^^^^ the trait `std::marker::Copy` is not implemented for `std::option::Option<Bar>`"}, {"sha": "eed7be5f16efa05b1b73ff94fa0a8726829e7ec0", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/nll-borrowck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fnll-borrowck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fnll-borrowck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fnll-borrowck.rs?ref=3cca4ceed833493b7ce18c825f14ddd927920e10", "patch": "@@ -1,6 +1,6 @@\n // ignore-compile-mode-nll\n #![allow(warnings)]\n-#![feature(nll)]\n+#![feature(constants_in_array_repeat_expressions, nll)]\n \n // Some type that is not copyable.\n struct Bar;"}, {"sha": "be195271c10cec0d8a30e2419f9e33c8e4e2e90d", "filename": "src/test/ui/feature-gates/feature-gate-const_in_array_repeat_expressions.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_in_array_repeat_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_in_array_repeat_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_in_array_repeat_expressions.rs?ref=3cca4ceed833493b7ce18c825f14ddd927920e10", "patch": "@@ -0,0 +1,11 @@\n+// ignore-tidy-linelength\n+#![allow(warnings)]\n+\n+struct Bar;\n+\n+fn foo() {\n+    let arr: [Option<String>; 2] = [None::<String>; 2];\n+    //~^ ERROR the trait bound `std::option::Option<std::string::String>: std::marker::Copy` is not satisfied [E0277]\n+}\n+\n+fn main() {}"}, {"sha": "eed69a0c28db840dc74507b84ffb9921458cee0f", "filename": "src/test/ui/feature-gates/feature-gate-const_in_array_repeat_expressions.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_in_array_repeat_expressions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3cca4ceed833493b7ce18c825f14ddd927920e10/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_in_array_repeat_expressions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_in_array_repeat_expressions.stderr?ref=3cca4ceed833493b7ce18c825f14ddd927920e10", "patch": "@@ -0,0 +1,13 @@\n+error[E0277]: the trait bound `std::option::Option<std::string::String>: std::marker::Copy` is not satisfied\n+  --> $DIR/feature-gate-const_in_array_repeat_expressions.rs:7:36\n+   |\n+LL |     let arr: [Option<String>; 2] = [None::<String>; 2];\n+   |                                    ^^^^^^^^^^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `std::option::Option<std::string::String>`\n+   |\n+   = help: the following implementations were found:\n+             <std::option::Option<T> as std::marker::Copy>\n+   = note: the `Copy` trait is required because the repeated element will be copied\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}