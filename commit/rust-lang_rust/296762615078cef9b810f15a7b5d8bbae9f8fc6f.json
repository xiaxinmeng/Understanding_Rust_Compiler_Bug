{"sha": "296762615078cef9b810f15a7b5d8bbae9f8fc6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5Njc2MjYxNTA3OGNlZjliODEwZjE1YTdiNWQ4YmJhZTlmOGZjNmY=", "commit": {"author": {"name": "Deadbeef", "email": "fee1-dead-beef@protonmail.com", "date": "2021-05-26T03:57:57Z"}, "committer": {"name": "Deadbeef", "email": "fee1-dead-beef@protonmail.com", "date": "2021-05-27T13:50:28Z"}, "message": "Document `From` impls in path.rs", "tree": {"sha": "622dc540ce01a66280478422bda7daa7278dd45f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/622dc540ce01a66280478422bda7daa7278dd45f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/296762615078cef9b810f15a7b5d8bbae9f8fc6f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEErZiERmmtiO2FTkTyyGmC8u3gwSgFAmCvo68ACgkQyGmC8u3g\nwSiKcRAAw93TioTYplHw/H7ZF/EGmL8s+xO0Bba5n79ztctA5pwn0V7GdQ2Mrg2b\nMpRuilnK7+zYfGXuN43kOTnqE2ciRiQIC12bMkf83CNii5ICITonbsT4KQ7W2Owr\newWwiS98HZWMrgEybXhLVHwJICL+8C6KURvUhRTOx38doHNnOQjf4g/eflcBC8Cu\njZjk5VGcad5443Zu/wEo/BFSCjlpQ4ZgI8QyqZnN+mVImPQjS27qeNh56GPrfufT\nF/bLRIwsMaeDr1wGo9vcN3Rqgo6ccng6ytM5GchVbtpFZ9HHFvdWi2oXcAN86uXK\nnUVygQiiFsIIW52R+5AvgTU4riAM2jF1MLni1cC9CU0ubowQtXVq1w2ayxgrdMDa\ntMKEEAPuBDUZEexEmUDJf+ii2rNuC1vnRukXN0CWdqGLH5awNrXSduhUEzgQmBDu\nmxesS86IlMBkqDoQwja5VhrZNpKGR90FMSLivvSehb1eHmfb2JSJ1M6HQ2QlTWN6\n3tGBZg4j8jv6/AdlZyTri5jTdFKjiwhJJq4JD7kVxXvC3XZ+lkzR+wo2zja6tW73\novaDh3P/pegXbV86q3HNHekarjGvTW2e3Xg99XEK6QcTRIWtYp9SrcAvIwMxjIfN\nOlVPyXk7qP5mHjGHoBaaKMHpBANPbUBgNKKvWEVjovQvDGnYL0g=\n=UR6X\n-----END PGP SIGNATURE-----", "payload": "tree 622dc540ce01a66280478422bda7daa7278dd45f\nparent cdbe2888979bb8797b05f0d58a6f6e60753983d2\nauthor Deadbeef <fee1-dead-beef@protonmail.com> 1622001477 +0800\ncommitter Deadbeef <fee1-dead-beef@protonmail.com> 1622123428 +0000\n\nDocument `From` impls in path.rs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/296762615078cef9b810f15a7b5d8bbae9f8fc6f", "html_url": "https://github.com/rust-lang/rust/commit/296762615078cef9b810f15a7b5d8bbae9f8fc6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/296762615078cef9b810f15a7b5d8bbae9f8fc6f/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdbe2888979bb8797b05f0d58a6f6e60753983d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdbe2888979bb8797b05f0d58a6f6e60753983d2", "html_url": "https://github.com/rust-lang/rust/commit/cdbe2888979bb8797b05f0d58a6f6e60753983d2"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "64ff7a23d479cf4d517079e819638073a5c1c36d", "filename": "library/std/src/path.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/296762615078cef9b810f15a7b5d8bbae9f8fc6f/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/296762615078cef9b810f15a7b5d8bbae9f8fc6f/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=296762615078cef9b810f15a7b5d8bbae9f8fc6f", "patch": "@@ -1420,6 +1420,9 @@ impl Clone for PathBuf {\n \n #[stable(feature = \"box_from_path\", since = \"1.17.0\")]\n impl From<&Path> for Box<Path> {\n+    /// Creates a boxed [`Path`] from a reference.\n+    ///\n+    /// This will allocate and clone `path` to it.\n     fn from(path: &Path) -> Box<Path> {\n         let boxed: Box<OsStr> = path.inner.into();\n         let rw = Box::into_raw(boxed) as *mut Path;\n@@ -1429,6 +1432,9 @@ impl From<&Path> for Box<Path> {\n \n #[stable(feature = \"box_from_cow\", since = \"1.45.0\")]\n impl From<Cow<'_, Path>> for Box<Path> {\n+    /// Creates a boxed [`Path`] from a clone-on-write pointer.\n+    ///\n+    /// Converting from a `Cow::Owned` does not clone or allocate.\n     #[inline]\n     fn from(cow: Cow<'_, Path>) -> Box<Path> {\n         match cow {\n@@ -1471,6 +1477,9 @@ impl Clone for Box<Path> {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized + AsRef<OsStr>> From<&T> for PathBuf {\n+    /// Converts a borrowed `OsStr` to a `PathBuf`.\n+    ///\n+    /// Allocates a [`PathBuf`] and copies the data into it.\n     #[inline]\n     fn from(s: &T) -> PathBuf {\n         PathBuf::from(s.as_ref().to_os_string())\n@@ -1575,6 +1584,10 @@ impl Default for PathBuf {\n \n #[stable(feature = \"cow_from_path\", since = \"1.6.0\")]\n impl<'a> From<&'a Path> for Cow<'a, Path> {\n+    /// Creates a clone-on-write pointer from a reference to\n+    /// [`Path`].\n+    ///\n+    /// This conversion does not clone or allocate.\n     #[inline]\n     fn from(s: &'a Path) -> Cow<'a, Path> {\n         Cow::Borrowed(s)\n@@ -1583,6 +1596,10 @@ impl<'a> From<&'a Path> for Cow<'a, Path> {\n \n #[stable(feature = \"cow_from_path\", since = \"1.6.0\")]\n impl<'a> From<PathBuf> for Cow<'a, Path> {\n+    /// Creates a clone-on-write pointer from an owned\n+    /// instance of [`PathBuf`].\n+    ///\n+    /// This conversion does not clone or allocate.\n     #[inline]\n     fn from(s: PathBuf) -> Cow<'a, Path> {\n         Cow::Owned(s)\n@@ -1591,6 +1608,10 @@ impl<'a> From<PathBuf> for Cow<'a, Path> {\n \n #[stable(feature = \"cow_from_pathbuf_ref\", since = \"1.28.0\")]\n impl<'a> From<&'a PathBuf> for Cow<'a, Path> {\n+    /// Creates a clone-on-write pointer from a reference to\n+    /// [`PathBuf`].\n+    ///\n+    /// This conversion does not clone or allocate.\n     #[inline]\n     fn from(p: &'a PathBuf) -> Cow<'a, Path> {\n         Cow::Borrowed(p.as_path())\n@@ -1599,6 +1620,9 @@ impl<'a> From<&'a PathBuf> for Cow<'a, Path> {\n \n #[stable(feature = \"pathbuf_from_cow_path\", since = \"1.28.0\")]\n impl<'a> From<Cow<'a, Path>> for PathBuf {\n+    /// Converts a clone-on-write pointer to an owned path.\n+    ///\n+    /// Converting from a `Cow::Owned` does not clone or allocate.\n     #[inline]\n     fn from(p: Cow<'a, Path>) -> Self {\n         p.into_owned()"}]}