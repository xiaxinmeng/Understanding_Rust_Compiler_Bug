{"sha": "db6d214411505de6534fce183e9bea8109bc5283", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNmQyMTQ0MTE1MDVkZTY1MzRmY2UxODNlOWJlYTgxMDliYzUyODM=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-11T19:25:26Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-11T19:25:26Z"}, "message": "Merge #793\n\n793: remove hard-coded query-group macro r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "ca0c8d13f9723a4d54feec9e3359c2e5461712b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca0c8d13f9723a4d54feec9e3359c2e5461712b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db6d214411505de6534fce183e9bea8109bc5283", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db6d214411505de6534fce183e9bea8109bc5283", "html_url": "https://github.com/rust-lang/rust/commit/db6d214411505de6534fce183e9bea8109bc5283", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db6d214411505de6534fce183e9bea8109bc5283/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "a78142cc648cd0c95dcaabc598d614f0edc24eb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a78142cc648cd0c95dcaabc598d614f0edc24eb6", "html_url": "https://github.com/rust-lang/rust/commit/a78142cc648cd0c95dcaabc598d614f0edc24eb6"}, {"sha": "0d060b073ce965511e3c794c4b6e70f69d14d2ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d060b073ce965511e3c794c4b6e70f69d14d2ff", "html_url": "https://github.com/rust-lang/rust/commit/0d060b073ce965511e3c794c4b6e70f69d14d2ff"}], "stats": {"total": 71, "additions": 4, "deletions": 67}, "files": [{"sha": "dd477e9f9805b21966588a1719264066a464cab5", "filename": "crates/ra_hir/src/macros.rs", "status": "modified", "additions": 2, "deletions": 24, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/db6d214411505de6534fce183e9bea8109bc5283/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db6d214411505de6534fce183e9bea8109bc5283/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmacros.rs?ref=db6d214411505de6534fce183e9bea8109bc5283", "patch": "@@ -11,7 +11,7 @@ use std::sync::Arc;\n \n use ra_syntax::{\n     TextRange, TextUnit, SourceFile, AstNode, SyntaxNode, TreeArc, SyntaxNodePtr,\n-    ast::{self, NameOwner},\n+    ast,\n };\n \n use crate::{MacroCallId, PersistentHirDatabase};\n@@ -20,7 +20,6 @@ use crate::{MacroCallId, PersistentHirDatabase};\n #[derive(Debug, Clone, PartialEq, Eq)]\n pub enum MacroDef {\n     Vec,\n-    QueryGroup,\n }\n \n impl MacroDef {\n@@ -39,8 +38,6 @@ impl MacroDef {\n             let name_ref = path.segment()?.name_ref()?;\n             if name_ref.text() == \"vec\" {\n                 MacroDef::Vec\n-            } else if name_ref.text() == \"query_group\" {\n-                MacroDef::QueryGroup\n             } else {\n                 return None;\n             }\n@@ -56,7 +53,6 @@ impl MacroDef {\n     fn expand(self, input: MacroInput) -> Option<MacroExpansion> {\n         match self {\n             MacroDef::Vec => self.expand_vec(input),\n-            MacroDef::QueryGroup => self.expand_query_group(input),\n         }\n     }\n     fn expand_vec(self, input: MacroInput) -> Option<MacroExpansion> {\n@@ -69,24 +65,6 @@ impl MacroDef {\n         let res = MacroExpansion { text, ranges_map, ptr };\n         Some(res)\n     }\n-    fn expand_query_group(self, input: MacroInput) -> Option<MacroExpansion> {\n-        let anchor = \"trait \";\n-        let pos = input.text.find(anchor)? + anchor.len();\n-        let trait_name =\n-            input.text[pos..].chars().take_while(|c| c.is_alphabetic()).collect::<String>();\n-        if trait_name.is_empty() {\n-            return None;\n-        }\n-        let src_range = TextRange::offset_len((pos as u32).into(), TextUnit::of_str(&trait_name));\n-        let text = format!(r\"trait {} {{ }}\", trait_name);\n-        let file = SourceFile::parse(&text);\n-        let trait_def = file.syntax().descendants().find_map(ast::TraitDef::cast)?;\n-        let name = trait_def.name()?;\n-        let ptr = SyntaxNodePtr::new(trait_def.syntax());\n-        let ranges_map = vec![(src_range, name.syntax().range())];\n-        let res = MacroExpansion { text, ranges_map, ptr };\n-        Some(res)\n-    }\n }\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n@@ -109,7 +87,7 @@ pub struct MacroExpansion {\n }\n \n impl MacroExpansion {\n-    // FIXME: does not really make sense, macro expansion is not neccessary a\n+    // FIXME: does not really make sense, macro expansion is not necessary a\n     // whole file. See `MacroExpansion::ptr` as well.\n     pub(crate) fn file(&self) -> TreeArc<SourceFile> {\n         SourceFile::parse(&self.text)"}, {"sha": "6dbe759d1110534dc8d68183ee006a9cca70069c", "filename": "crates/ra_hir/src/nameres/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/db6d214411505de6534fce183e9bea8109bc5283/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db6d214411505de6534fce183e9bea8109bc5283/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs?ref=db6d214411505de6534fce183e9bea8109bc5283", "patch": "@@ -326,6 +326,7 @@ fn name_res_works_for_broken_modules() {\n }\n \n #[test]\n+#[ignore]\n fn item_map_contains_items_from_expansions() {\n     let (item_map, module_id) = item_map(\n         \""}, {"sha": "0b802ac3dcbb623d6c901520e23341edbb2568b9", "filename": "crates/ra_ide_api/src/snapshots/tests__highlight_query_group_macro.snap", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a78142cc648cd0c95dcaabc598d614f0edc24eb6/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlight_query_group_macro.snap", "raw_url": "https://github.com/rust-lang/rust/raw/a78142cc648cd0c95dcaabc598d614f0edc24eb6/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlight_query_group_macro.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlight_query_group_macro.snap?ref=a78142cc648cd0c95dcaabc598d614f0edc24eb6", "patch": "@@ -1,28 +0,0 @@\n----\n-created: \"2019-02-01T07:52:15.689836752+00:00\"\n-creator: insta@0.5.3\n-expression: \"&highlights\"\n-source: crates/ra_ide_api/src/syntax_highlighting.rs\n----\n-[\n-    HighlightedRange {\n-        range: [20; 32),\n-        tag: \"macro\"\n-    },\n-    HighlightedRange {\n-        range: [13; 18),\n-        tag: \"text\"\n-    },\n-    HighlightedRange {\n-        range: [51; 54),\n-        tag: \"keyword\"\n-    },\n-    HighlightedRange {\n-        range: [55; 60),\n-        tag: \"keyword\"\n-    },\n-    HighlightedRange {\n-        range: [61; 72),\n-        tag: \"function\"\n-    }\n-]"}, {"sha": "345b6653d8812ba5ad68bdceeb5fe3622411b79a", "filename": "crates/ra_ide_api/src/syntax_highlighting.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/db6d214411505de6534fce183e9bea8109bc5283/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db6d214411505de6534fce183e9bea8109bc5283/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs?ref=db6d214411505de6534fce183e9bea8109bc5283", "patch": "@@ -41,19 +41,4 @@ mod tests {\n         let highlights = analysis.highlight(file_id).unwrap();\n         assert_debug_snapshot_matches!(\"highlights_code_inside_macros\", &highlights);\n     }\n-\n-    // FIXME: this test is not really necessary: artifact of the inital hacky\n-    // macros implementation.\n-    #[test]\n-    fn highlight_query_group_macro() {\n-        let (analysis, file_id) = single_file(\n-            \"\n-            salsa::query_group! {\n-                pub trait HirDatabase: SyntaxDatabase {}\n-            }\n-            \",\n-        );\n-        let highlights = analysis.highlight(file_id).unwrap();\n-        assert_debug_snapshot_matches!(\"highlight_query_group_macro\", &highlights);\n-    }\n }"}, {"sha": "7d1695cfdd16709b3a4f55476d76607070fcb095", "filename": "crates/ra_ide_api/tests/test/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/db6d214411505de6534fce183e9bea8109bc5283/crates%2Fra_ide_api%2Ftests%2Ftest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db6d214411505de6534fce183e9bea8109bc5283/crates%2Fra_ide_api%2Ftests%2Ftest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Ftests%2Ftest%2Fmain.rs?ref=db6d214411505de6534fce183e9bea8109bc5283", "patch": "@@ -91,6 +91,7 @@ fn test_find_all_refs_for_fn_param() {\n }\n \n #[test]\n+#[ignore]\n fn world_symbols_include_stuff_from_macros() {\n     let (analysis, _) = single_file(\n         \""}]}