{"sha": "7b36408b5f6373647eba37ad1f91c26070298454", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMzY0MDhiNWY2MzczNjQ3ZWJhMzdhZDFmOTFjMjYwNzAyOTg0NTQ=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-01-08T23:16:20Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-01-08T23:16:20Z"}, "message": "Use an empty `TokenCursorFrame` stack when capturing tokens\n\nWe will never need to pop  past our starting frame during token\ncapturing. Using an empty stack allows us to avoid pointless heap\nallocations/deallocations.", "tree": {"sha": "2c8ac31c2ee11e979a9d3f420b09a6d9e2d629de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c8ac31c2ee11e979a9d3f420b09a6d9e2d629de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b36408b5f6373647eba37ad1f91c26070298454", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl/46B8ACgkQtAh+UQ6Y\nsWTNbw/9GVrhNPapO+ByKhDrEkZCOjWph4hFNvQX0VJZBDcCHr5YTZYP2bN1JokA\nGRfZrHR+WYCql+2vack0tKhmEOKX3KAzpZIbaLkN/GsFnGF6ERklaamC+Dug3iCz\n+3II+K4hWKld8sdjBeNQxPVXCysk5qIKU5jOK+hL4W4v0vwaHi+KXBkVFgBOfVHP\nwlw4ejy3XtA2WAks8Zex6qLrjE5kyadALYxFAMY0GUs6KfVriXjTKKFotsEiiZyr\nbsQLqxb8fCCw2TivTQ+a2zsRIS78kQLx0avWhVn7pcWLOdzg0ZD6NeyYod/17aW7\nYhL2T/KtOP6fvZbFhQmiU8tXqLWRJsUaaNvB3bn9CtRmNoaDPjQO1Xmx9aZeIQPf\nUaAUDOmquVsOoPawLZwcN7DBfmsZhcmYtf/NoAPbdXax9YKjn3J14Y18ONatUbts\ncDz2sp/kP/ReD6L3SthlsqfBFqybBCVS5Poddw1tKr0cK9albdoQv3KLhO6IQtM5\nXqV9IMFE+tBMVdWPDomPQD9ObMNtu0KDQOuL3b8wdv91uWKdQuKn21rkONMSDbqO\ny89st8zdw2aa/VMti0YWWEfRr5p1JNrpRBqyP5qChMTXY7OxpkfULikt7nUNEAiE\n6imUY6EI+Jhd584ZUhw70NXJU/GdCvcCpn1+tm7OFkvJF3ajGTU=\n=54fk\n-----END PGP SIGNATURE-----", "payload": "tree 2c8ac31c2ee11e979a9d3f420b09a6d9e2d629de\nparent 26438b473883ea607b30288e461187f0fb2fe589\nauthor Aaron Hill <aa1ronham@gmail.com> 1610147780 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1610147780 -0500\n\nUse an empty `TokenCursorFrame` stack when capturing tokens\n\nWe will never need to pop  past our starting frame during token\ncapturing. Using an empty stack allows us to avoid pointless heap\nallocations/deallocations.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b36408b5f6373647eba37ad1f91c26070298454", "html_url": "https://github.com/rust-lang/rust/commit/7b36408b5f6373647eba37ad1f91c26070298454", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b36408b5f6373647eba37ad1f91c26070298454/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26438b473883ea607b30288e461187f0fb2fe589", "url": "https://api.github.com/repos/rust-lang/rust/commits/26438b473883ea607b30288e461187f0fb2fe589", "html_url": "https://github.com/rust-lang/rust/commit/26438b473883ea607b30288e461187f0fb2fe589"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "cecf0130cf7db844a03c410fdf22dcfa34b1ade2", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7b36408b5f6373647eba37ad1f91c26070298454/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b36408b5f6373647eba37ad1f91c26070298454/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=7b36408b5f6373647eba37ad1f91c26070298454", "patch": "@@ -1239,7 +1239,15 @@ impl<'a> Parser<'a> {\n         f: impl FnOnce(&mut Self) -> PResult<'a, R>,\n     ) -> PResult<'a, (R, Option<LazyTokenStream>)> {\n         let start_token = (self.token.clone(), self.token_spacing);\n-        let cursor_snapshot = self.token_cursor.clone();\n+        let cursor_snapshot = TokenCursor {\n+            frame: self.token_cursor.frame.clone(),\n+            // We only ever capture tokens within our current frame,\n+            // so we can just use an empty frame stack\n+            stack: vec![],\n+            desugar_doc_comments: self.token_cursor.desugar_doc_comments,\n+            num_next_calls: self.token_cursor.num_next_calls,\n+            append_unglued_token: self.token_cursor.append_unglued_token.clone(),\n+        };\n \n         let ret = f(self)?;\n "}]}