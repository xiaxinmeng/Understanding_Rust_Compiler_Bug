{"sha": "60a649ef6ecf905253507997211ebd081f298f24", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwYTY0OWVmNmVjZjkwNTI1MzUwNzk5NzIxMWViZDA4MWYyOThmMjQ=", "commit": {"author": {"name": "Tim", "email": "t.diekmann.3dv@gmail.com", "date": "2019-03-03T22:43:46Z"}, "committer": {"name": "Tim", "email": "t.diekmann.3dv@gmail.com", "date": "2019-03-03T22:43:46Z"}, "message": "Add .nll.stderr output", "tree": {"sha": "a788e1b2745415e698fea8f7daa686a64ee92758", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a788e1b2745415e698fea8f7daa686a64ee92758"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60a649ef6ecf905253507997211ebd081f298f24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60a649ef6ecf905253507997211ebd081f298f24", "html_url": "https://github.com/rust-lang/rust/commit/60a649ef6ecf905253507997211ebd081f298f24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60a649ef6ecf905253507997211ebd081f298f24/comments", "author": null, "committer": null, "parents": [{"sha": "797d8ea4789c64bb20869fa7fb0c15e2c09432cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/797d8ea4789c64bb20869fa7fb0c15e2c09432cf", "html_url": "https://github.com/rust-lang/rust/commit/797d8ea4789c64bb20869fa7fb0c15e2c09432cf"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "6977e7fdc11837d6a841b33a306f2994c1088e39", "filename": "src/test/ui/consts/const-ptr-nonnull.nll.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/60a649ef6ecf905253507997211ebd081f298f24/src%2Ftest%2Fui%2Fconsts%2Fconst-ptr-nonnull.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/60a649ef6ecf905253507997211ebd081f298f24/src%2Ftest%2Fui%2Fconsts%2Fconst-ptr-nonnull.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-ptr-nonnull.nll.stderr?ref=60a649ef6ecf905253507997211ebd081f298f24", "patch": "@@ -0,0 +1,25 @@\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/const-ptr-nonnull.rs:4:37\n+   |\n+LL |     let x: &'static NonNull<u32> = &(NonNull::dangling());\n+   |            ---------------------    ^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            |\n+   |            type annotation requires that borrow lasts for `'static`\n+...\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/const-ptr-nonnull.rs:9:37\n+   |\n+LL |     let x: &'static NonNull<u32> = &(non_null.cast());\n+   |            ---------------------    ^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            |\n+   |            type annotation requires that borrow lasts for `'static`\n+LL |     //~^ ERROR borrowed value does not live long enough\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0716`."}, {"sha": "b201994c894e4d2d9277f6784ccbf4923453a9e3", "filename": "src/test/ui/consts/const-ptr-unique.nll.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/60a649ef6ecf905253507997211ebd081f298f24/src%2Ftest%2Fui%2Fconsts%2Fconst-ptr-unique.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/60a649ef6ecf905253507997211ebd081f298f24/src%2Ftest%2Fui%2Fconsts%2Fconst-ptr-unique.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-ptr-unique.nll.stderr?ref=60a649ef6ecf905253507997211ebd081f298f24", "patch": "@@ -0,0 +1,14 @@\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/const-ptr-unique.rs:8:33\n+   |\n+LL |     let x: &'static *mut u32 = &(unique.as_ptr());\n+   |            -----------------    ^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |            |\n+   |            type annotation requires that borrow lasts for `'static`\n+LL |     //~^ ERROR borrowed value does not live long enough\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0716`."}]}