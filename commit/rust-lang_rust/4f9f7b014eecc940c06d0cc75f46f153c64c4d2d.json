{"sha": "4f9f7b014eecc940c06d0cc75f46f153c64c4d2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmOWY3YjAxNGVlY2M5NDBjMDZkMGNjNzVmNDZmMTUzYzY0YzRkMmQ=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-11-09T21:56:10Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-11-12T22:33:35Z"}, "message": "also enable the MSP430 backend in Makefiles", "tree": {"sha": "4a61add3f1ccebbe5d23b2d78a71df310b56c21e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a61add3f1ccebbe5d23b2d78a71df310b56c21e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f9f7b014eecc940c06d0cc75f46f153c64c4d2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f9f7b014eecc940c06d0cc75f46f153c64c4d2d", "html_url": "https://github.com/rust-lang/rust/commit/4f9f7b014eecc940c06d0cc75f46f153c64c4d2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f9f7b014eecc940c06d0cc75f46f153c64c4d2d/comments", "author": null, "committer": null, "parents": [{"sha": "30e5667607ca6eb6b6fb8fbe44c420a8de2ea749", "url": "https://api.github.com/repos/rust-lang/rust/commits/30e5667607ca6eb6b6fb8fbe44c420a8de2ea749", "html_url": "https://github.com/rust-lang/rust/commit/30e5667607ca6eb6b6fb8fbe44c420a8de2ea749"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "16d6a90bf391d07715eaac159e19b659a1d2ebfc", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f9f7b014eecc940c06d0cc75f46f153c64c4d2d/configure", "raw_url": "https://github.com/rust-lang/rust/raw/4f9f7b014eecc940c06d0cc75f46f153c64c4d2d/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=4f9f7b014eecc940c06d0cc75f46f153c64c4d2d", "patch": "@@ -1782,7 +1782,7 @@ do\n         CMAKE_ARGS=\"$CMAKE_ARGS -DLLVM_ENABLE_ASSERTIONS=ON\"\n     fi\n \n-    CMAKE_ARGS=\"$CMAKE_ARGS -DLLVM_TARGETS_TO_BUILD='X86;ARM;AArch64;Mips;PowerPC;SystemZ;JSBackend'\"\n+    CMAKE_ARGS=\"$CMAKE_ARGS -DLLVM_TARGETS_TO_BUILD='X86;ARM;AArch64;Mips;PowerPC;SystemZ;JSBackend;MSP430'\"\n     CMAKE_ARGS=\"$CMAKE_ARGS -G '$CFG_CMAKE_GENERATOR'\"\n     CMAKE_ARGS=\"$CMAKE_ARGS $CFG_LLVM_SRC_DIR\"\n "}, {"sha": "9936c5b59be5c4c8f26a817e72eba3e59b09a0cf", "filename": "mk/main.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f9f7b014eecc940c06d0cc75f46f153c64c4d2d/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/4f9f7b014eecc940c06d0cc75f46f153c64c4d2d/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=4f9f7b014eecc940c06d0cc75f46f153c64c4d2d", "patch": "@@ -285,7 +285,7 @@ endif\n # LLVM macros\n ######################################################################\n \n-LLVM_OPTIONAL_COMPONENTS=x86 arm aarch64 mips powerpc pnacl systemz jsbackend\n+LLVM_OPTIONAL_COMPONENTS=x86 arm aarch64 mips powerpc pnacl systemz jsbackend msp430\n LLVM_REQUIRED_COMPONENTS=ipo bitreader bitwriter linker asmparser mcjit \\\n                 interpreter instrumentation\n "}, {"sha": "a5ba1d219c369facd880704562ecc5b971294fb2", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4f9f7b014eecc940c06d0cc75f46f153c64c4d2d/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/4f9f7b014eecc940c06d0cc75f46f153c64c4d2d/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=4f9f7b014eecc940c06d0cc75f46f153c64c4d2d", "patch": "@@ -137,13 +137,20 @@ LLVMRustAddPass(LLVMPassManagerRef PM, LLVMPassRef rust_pass) {\n #define SUBTARGET_SYSTEMZ\n #endif\n \n+#ifdef LLVM_COMPONENT_MSP430\n+#define SUBTARGET_MSP430 SUBTARGET(MSP430)\n+#else\n+#define SUBTARGET_MSP430\n+#endif\n+\n #define GEN_SUBTARGETS    \\\n         SUBTARGET_X86     \\\n         SUBTARGET_ARM     \\\n         SUBTARGET_AARCH64 \\\n         SUBTARGET_MIPS    \\\n         SUBTARGET_PPC     \\\n-        SUBTARGET_SYSTEMZ\n+        SUBTARGET_SYSTEMZ \\\n+        SUBTARGET_MSP430\n \n #define SUBTARGET(x) namespace llvm {                \\\n     extern const SubtargetFeatureKV x##FeatureKV[];  \\"}]}