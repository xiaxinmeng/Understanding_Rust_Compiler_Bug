{"sha": "4b09dc6e394c3d2397ad46530a96fd5f63a1c88c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiMDlkYzZlMzk0YzNkMjM5N2FkNDY1MzBhOTZmZDVmNjNhMWM4OGM=", "commit": {"author": {"name": "Samuel Holland", "email": "samuel@sholland.org", "date": "2017-08-22T21:24:29Z"}, "committer": {"name": "Samuel Holland", "email": "samuel@sholland.org", "date": "2017-08-22T21:24:29Z"}, "message": "Introduce crt_static target option in config.toml\n\nThis controls the value of the crt-static feature used when building the\nstandard library for a target, as well as the compiler itself when that\ntarget is the host.", "tree": {"sha": "4274e5a1e05db4814b88479e5d5800a0f696914e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4274e5a1e05db4814b88479e5d5800a0f696914e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b09dc6e394c3d2397ad46530a96fd5f63a1c88c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b09dc6e394c3d2397ad46530a96fd5f63a1c88c", "html_url": "https://github.com/rust-lang/rust/commit/4b09dc6e394c3d2397ad46530a96fd5f63a1c88c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b09dc6e394c3d2397ad46530a96fd5f63a1c88c/comments", "author": {"login": "smaeul", "id": 5846453, "node_id": "MDQ6VXNlcjU4NDY0NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5846453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smaeul", "html_url": "https://github.com/smaeul", "followers_url": "https://api.github.com/users/smaeul/followers", "following_url": "https://api.github.com/users/smaeul/following{/other_user}", "gists_url": "https://api.github.com/users/smaeul/gists{/gist_id}", "starred_url": "https://api.github.com/users/smaeul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smaeul/subscriptions", "organizations_url": "https://api.github.com/users/smaeul/orgs", "repos_url": "https://api.github.com/users/smaeul/repos", "events_url": "https://api.github.com/users/smaeul/events{/privacy}", "received_events_url": "https://api.github.com/users/smaeul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smaeul", "id": 5846453, "node_id": "MDQ6VXNlcjU4NDY0NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5846453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smaeul", "html_url": "https://github.com/smaeul", "followers_url": "https://api.github.com/users/smaeul/followers", "following_url": "https://api.github.com/users/smaeul/following{/other_user}", "gists_url": "https://api.github.com/users/smaeul/gists{/gist_id}", "starred_url": "https://api.github.com/users/smaeul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smaeul/subscriptions", "organizations_url": "https://api.github.com/users/smaeul/orgs", "repos_url": "https://api.github.com/users/smaeul/repos", "events_url": "https://api.github.com/users/smaeul/events{/privacy}", "received_events_url": "https://api.github.com/users/smaeul/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c7a0e9851b8ac48d51fe7289257bc03ae3e3a37", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c7a0e9851b8ac48d51fe7289257bc03ae3e3a37", "html_url": "https://github.com/rust-lang/rust/commit/0c7a0e9851b8ac48d51fe7289257bc03ae3e3a37"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "fd1f03b9d0e24bb17d73e2bec658316c5c786e1f", "filename": "config.toml.example", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4b09dc6e394c3d2397ad46530a96fd5f63a1c88c/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/4b09dc6e394c3d2397ad46530a96fd5f63a1c88c/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=4b09dc6e394c3d2397ad46530a96fd5f63a1c88c", "patch": "@@ -292,6 +292,12 @@\n # build native code.\n #android-ndk = \"/path/to/ndk\"\n \n+# Force static or dynamic linkage of the standard library for this target. If\n+# this target is a host for rustc, this will also affect the linkage of the\n+# compiler itself. This is useful for building rustc on targets that normally\n+# only use static libraries. If unset, the target's default linkage is used.\n+#crt-static = false\n+\n # The root location of the MUSL installation directory. The library directory\n # will also need to contain libunwind.a for an unwinding implementation. Note\n # that this option only makes sense for MUSL targets that produce statically"}, {"sha": "d098806a8a002de9dd39f9a0921a0fa466eca382", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4b09dc6e394c3d2397ad46530a96fd5f63a1c88c/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b09dc6e394c3d2397ad46530a96fd5f63a1c88c/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=4b09dc6e394c3d2397ad46530a96fd5f63a1c88c", "patch": "@@ -242,6 +242,15 @@ fn main() {\n             cmd.arg(\"-C\").arg(\"target-feature=+crt-static\");\n         }\n \n+        if let Ok(s) = env::var(\"RUSTC_CRT_STATIC\") {\n+            if s == \"true\" {\n+                cmd.arg(\"-C\").arg(\"target-feature=+crt-static\");\n+            }\n+            if s == \"false\" {\n+                cmd.arg(\"-C\").arg(\"target-feature=-crt-static\");\n+            }\n+        }\n+\n         // Force all crates compiled by this compiler to (a) be unstable and (b)\n         // allow the `rustc_private` feature to link to other unstable crates\n         // also in the sysroot."}, {"sha": "298f6a004a20aefd1c6da6c892bf62b6c9450bd1", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b09dc6e394c3d2397ad46530a96fd5f63a1c88c/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b09dc6e394c3d2397ad46530a96fd5f63a1c88c/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=4b09dc6e394c3d2397ad46530a96fd5f63a1c88c", "patch": "@@ -503,6 +503,10 @@ impl<'a> Builder<'a> {\n             cargo.env(\"RUSTC_METADATA_SUFFIX\", \"rustc\");\n         }\n \n+        if let Some(x) = self.crt_static(target) {\n+            cargo.env(\"RUSTC_CRT_STATIC\", x.to_string());\n+        }\n+\n         // Enable usage of unstable features\n         cargo.env(\"RUSTC_BOOTSTRAP\", \"1\");\n         self.add_rust_test_threads(&mut cargo);"}, {"sha": "f43035fbfe8a1a75b342fee167b2ef449e42441f", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4b09dc6e394c3d2397ad46530a96fd5f63a1c88c/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b09dc6e394c3d2397ad46530a96fd5f63a1c88c/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=4b09dc6e394c3d2397ad46530a96fd5f63a1c88c", "patch": "@@ -143,6 +143,7 @@ pub struct Target {\n     pub cc: Option<PathBuf>,\n     pub cxx: Option<PathBuf>,\n     pub ndk: Option<PathBuf>,\n+    pub crt_static: Option<bool>,\n     pub musl_root: Option<PathBuf>,\n     pub qemu_rootfs: Option<PathBuf>,\n }\n@@ -275,6 +276,7 @@ struct TomlTarget {\n     cc: Option<String>,\n     cxx: Option<String>,\n     android_ndk: Option<String>,\n+    crt_static: Option<bool>,\n     musl_root: Option<String>,\n     qemu_rootfs: Option<String>,\n }\n@@ -446,6 +448,7 @@ impl Config {\n                 }\n                 target.cxx = cfg.cxx.clone().map(PathBuf::from);\n                 target.cc = cfg.cc.clone().map(PathBuf::from);\n+                target.crt_static = cfg.crt_static.clone();\n                 target.musl_root = cfg.musl_root.clone().map(PathBuf::from);\n                 target.qemu_rootfs = cfg.qemu_rootfs.clone().map(PathBuf::from);\n "}, {"sha": "d6afc562f3dc894a27b66547f1da06e6c8b5545d", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4b09dc6e394c3d2397ad46530a96fd5f63a1c88c/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b09dc6e394c3d2397ad46530a96fd5f63a1c88c/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=4b09dc6e394c3d2397ad46530a96fd5f63a1c88c", "patch": "@@ -656,6 +656,12 @@ impl Build {\n         base\n     }\n \n+    /// Returns if this target should statically link the C runtime, if specified\n+    fn crt_static(&self, target: Interned<String>) -> Option<bool> {\n+        self.config.target_config.get(&target)\n+            .and_then(|t| t.crt_static)\n+    }\n+\n     /// Returns the \"musl root\" for this `target`, if defined\n     fn musl_root(&self, target: Interned<String>) -> Option<&Path> {\n         self.config.target_config.get(&target)"}]}