{"sha": "a602fc06bdc1570e48761542cf06e6b051e802d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MDJmYzA2YmRjMTU3MGU0ODc2MTU0MmNmMDZlNmIwNTFlODAyZDY=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-14T23:37:43Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-07-28T13:46:25Z"}, "message": "Revert some whitespace changes", "tree": {"sha": "4a024c6cf28a2e606b8138f26f7cdc6b574effcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a024c6cf28a2e606b8138f26f7cdc6b574effcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a602fc06bdc1570e48761542cf06e6b051e802d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a602fc06bdc1570e48761542cf06e6b051e802d6", "html_url": "https://github.com/rust-lang/rust/commit/a602fc06bdc1570e48761542cf06e6b051e802d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a602fc06bdc1570e48761542cf06e6b051e802d6/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10def9a6e0fc9ace09934f71a8eef0b556e9111f", "url": "https://api.github.com/repos/rust-lang/rust/commits/10def9a6e0fc9ace09934f71a8eef0b556e9111f", "html_url": "https://github.com/rust-lang/rust/commit/10def9a6e0fc9ace09934f71a8eef0b556e9111f"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "aa334bc570a768a238b5ae6264f638e27ab250eb", "filename": "src/librustc_typeck/variance/constraints.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a602fc06bdc1570e48761542cf06e6b051e802d6/src%2Flibrustc_typeck%2Fvariance%2Fconstraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a602fc06bdc1570e48761542cf06e6b051e802d6/src%2Flibrustc_typeck%2Fvariance%2Fconstraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fconstraints.rs?ref=a602fc06bdc1570e48761542cf06e6b051e802d6", "patch": "@@ -149,11 +149,11 @@ impl<'a, 'tcx> ConstraintContext<'a, 'tcx> {\n         //\n         // See README.md for a detailed discussion\n         // on dep-graph management.\n-                let dep_node = def_id.to_dep_node(tcx, DepKind::ItemVarianceConstraints);\n-                tcx.dep_graph.with_task(dep_node,\n-                                        AssertDepGraphSafe(self),\n-                                        def_id,\n-                                        visit_item_task);\n+        let dep_node = def_id.to_dep_node(tcx, DepKind::ItemVarianceConstraints);\n+        tcx.dep_graph.with_task(dep_node,\n+                                AssertDepGraphSafe(self),\n+                                def_id,\n+                                visit_item_task);\n \n         fn visit_item_task<'a, 'tcx>(ccx: AssertDepGraphSafe<&mut ConstraintContext<'a, 'tcx>>,\n                                      def_id: DefId)\n@@ -202,9 +202,9 @@ impl<'a, 'tcx> ConstraintContext<'a, 'tcx> {\n             _ => {\n                 span_bug!(tcx.def_span(def_id),\n                           \"`build_constraints_for_item` unsupported for this item\");\n+            }\n         }\n     }\n-    }\n \n     fn add_constraint(&mut self,\n                       current: &CurrentItem,\n@@ -269,7 +269,7 @@ impl<'a, 'tcx> ConstraintContext<'a, 'tcx> {\n         let variance_i = self.invariant(variance);\n         for ty in substs.types() {\n             self.add_constraints_from_ty(current, ty, variance_i);\n-    }\n+        }\n \n         for region in substs.regions() {\n             self.add_constraints_from_region(current, region, variance_i);\n@@ -350,7 +350,7 @@ impl<'a, 'tcx> ConstraintContext<'a, 'tcx> {\n \n             ty::TyParam(ref data) => {\n                 self.add_constraint(current, data.idx, variance);\n-                }\n+            }\n \n             ty::TyFnPtr(sig) => {\n                 self.add_constraints_from_sig(current, sig, variance);\n@@ -419,7 +419,7 @@ impl<'a, 'tcx> ConstraintContext<'a, 'tcx> {\n                 self.add_constraints_from_region(current, r, variance_i);\n             } else {\n                 bug!();\n-        }\n+            }\n         }\n     }\n \n@@ -445,7 +445,7 @@ impl<'a, 'tcx> ConstraintContext<'a, 'tcx> {\n         match *region {\n             ty::ReEarlyBound(ref data) => {\n                 self.add_constraint(current, data.index, variance);\n-                }\n+            }\n \n             ty::ReStatic => {}\n "}]}