{"sha": "d4b592ed17471622d27deeab8a1d8d89bc5c17d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YjU5MmVkMTc0NzE2MjJkMjdkZWVhYjhhMWQ4ZDg5YmM1YzE3ZDE=", "commit": {"author": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2021-01-25T10:59:12Z"}, "committer": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2021-01-26T08:13:54Z"}, "message": "Fail 80% of the time on weak cmpxchg, not 50%", "tree": {"sha": "5a94248c9dc73023c9a7fdd0747ee0e753d00853", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a94248c9dc73023c9a7fdd0747ee0e753d00853"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4b592ed17471622d27deeab8a1d8d89bc5c17d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4b592ed17471622d27deeab8a1d8d89bc5c17d1", "html_url": "https://github.com/rust-lang/rust/commit/d4b592ed17471622d27deeab8a1d8d89bc5c17d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4b592ed17471622d27deeab8a1d8d89bc5c17d1/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efd2d55e001de2a069d9ad45687abb5834f227da", "url": "https://api.github.com/repos/rust-lang/rust/commits/efd2d55e001de2a069d9ad45687abb5834f227da", "html_url": "https://github.com/rust-lang/rust/commit/efd2d55e001de2a069d9ad45687abb5834f227da"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "dd0dccd0e9504b5ff30c7c9266d40068f4d76a9d", "filename": "src/data_race.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4b592ed17471622d27deeab8a1d8d89bc5c17d1/src%2Fdata_race.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4b592ed17471622d27deeab8a1d8d89bc5c17d1/src%2Fdata_race.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdata_race.rs?ref=d4b592ed17471622d27deeab8a1d8d89bc5c17d1", "patch": "@@ -567,10 +567,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: MiriEvalContextExt<'mir, 'tcx> {\n         let old = this.allow_data_races_mut(|this| this.read_immediate(place.into()))?;\n         // `binary_op` will bail if either of them is not a scalar.\n         let eq = this.overflowing_binary_op(mir::BinOp::Eq, old, expect_old)?.0;\n-        // If the operation would succeed, but is \"weak\", fail 50% of the time.\n+        // If the operation would succeed, but is \"weak\", fail 80% of the time.\n         // FIXME: this is quite arbitrary.\n         let cmpxchg_success = eq.to_bool()?\n-            && (!can_fail_spuriously || this.memory.extra.rng.borrow_mut().gen_range(0, 2) == 0);\n+            && (!can_fail_spuriously || this.memory.extra.rng.borrow_mut().gen_range(0, 10) < 8);\n         let res = Immediate::ScalarPair(\n             old.to_scalar_or_uninit(),\n             Scalar::from_bool(cmpxchg_success).into(),"}, {"sha": "4f27c2bd54d67a319f1e733059fb37b8522245d7", "filename": "tests/run-pass/atomic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4b592ed17471622d27deeab8a1d8d89bc5c17d1/tests%2Frun-pass%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4b592ed17471622d27deeab8a1d8d89bc5c17d1/tests%2Frun-pass%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fatomic.rs?ref=d4b592ed17471622d27deeab8a1d8d89bc5c17d1", "patch": "@@ -89,7 +89,7 @@ fn atomic_fences() {\n \n fn weak_sometimes_fails() {\n     let atomic = AtomicBool::new(false);\n-    let tries = 20;\n+    let tries = 100;\n     for _ in 0..tries {\n         let cur = atomic.load(Relaxed);\n         // Try (weakly) to flip the flag."}]}