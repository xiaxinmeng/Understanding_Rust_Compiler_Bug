{"sha": "c8c2bd097a8cb47b3105d32d9d22c6f2c7fbd590", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4YzJiZDA5N2E4Y2I0N2IzMTA1ZDMyZDlkMjJjNmYyYzdmYmQ1OTA=", "commit": {"author": {"name": "Vincent Esche", "email": "regexident@gmail.com", "date": "2021-01-08T14:41:32Z"}, "committer": {"name": "Vincent Esche", "email": "regexident@gmail.com", "date": "2021-01-09T14:41:29Z"}, "message": "Fixed typos in local bindings", "tree": {"sha": "8f57715929bfa2af417a6e8e62cc0b48c4541890", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f57715929bfa2af417a6e8e62cc0b48c4541890"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8c2bd097a8cb47b3105d32d9d22c6f2c7fbd590", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8c2bd097a8cb47b3105d32d9d22c6f2c7fbd590", "html_url": "https://github.com/rust-lang/rust/commit/c8c2bd097a8cb47b3105d32d9d22c6f2c7fbd590", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8c2bd097a8cb47b3105d32d9d22c6f2c7fbd590/comments", "author": {"login": "regexident", "id": 138017, "node_id": "MDQ6VXNlcjEzODAxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/138017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regexident", "html_url": "https://github.com/regexident", "followers_url": "https://api.github.com/users/regexident/followers", "following_url": "https://api.github.com/users/regexident/following{/other_user}", "gists_url": "https://api.github.com/users/regexident/gists{/gist_id}", "starred_url": "https://api.github.com/users/regexident/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regexident/subscriptions", "organizations_url": "https://api.github.com/users/regexident/orgs", "repos_url": "https://api.github.com/users/regexident/repos", "events_url": "https://api.github.com/users/regexident/events{/privacy}", "received_events_url": "https://api.github.com/users/regexident/received_events", "type": "User", "site_admin": false}, "committer": {"login": "regexident", "id": 138017, "node_id": "MDQ6VXNlcjEzODAxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/138017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regexident", "html_url": "https://github.com/regexident", "followers_url": "https://api.github.com/users/regexident/followers", "following_url": "https://api.github.com/users/regexident/following{/other_user}", "gists_url": "https://api.github.com/users/regexident/gists{/gist_id}", "starred_url": "https://api.github.com/users/regexident/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regexident/subscriptions", "organizations_url": "https://api.github.com/users/regexident/orgs", "repos_url": "https://api.github.com/users/regexident/repos", "events_url": "https://api.github.com/users/regexident/events{/privacy}", "received_events_url": "https://api.github.com/users/regexident/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4702c01553a8747f72026a52269426097b4cc4d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4702c01553a8747f72026a52269426097b4cc4d5", "html_url": "https://github.com/rust-lang/rust/commit/4702c01553a8747f72026a52269426097b4cc4d5"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "107417c27809f8b7a0fe4d26868074b901ec7bc0", "filename": "crates/hir_ty/src/diagnostics/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c8c2bd097a8cb47b3105d32d9d22c6f2c7fbd590/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c2bd097a8cb47b3105d32d9d22c6f2c7fbd590/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs?ref=c8c2bd097a8cb47b3105d32d9d22c6f2c7fbd590", "patch": "@@ -379,7 +379,7 @@ pub fn record_literal_missing_fields(\n     id: ExprId,\n     expr: &Expr,\n ) -> Option<(VariantId, Vec<LocalFieldId>, /*exhaustive*/ bool)> {\n-    let (fields, exhausitve) = match expr {\n+    let (fields, exhaustive) = match expr {\n         Expr::RecordLit { path: _, fields, spread } => (fields, spread.is_none()),\n         _ => return None,\n     };\n@@ -400,7 +400,7 @@ pub fn record_literal_missing_fields(\n     if missed_fields.is_empty() {\n         return None;\n     }\n-    Some((variant_def, missed_fields, exhausitve))\n+    Some((variant_def, missed_fields, exhaustive))\n }\n \n pub fn record_pattern_missing_fields("}, {"sha": "9594cce8b7f4b809065c551c693559a6baf30c5a", "filename": "crates/hir_ty/src/lower.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c8c2bd097a8cb47b3105d32d9d22c6f2c7fbd590/crates%2Fhir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c2bd097a8cb47b3105d32d9d22c6f2c7fbd590/crates%2Fhir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flower.rs?ref=c8c2bd097a8cb47b3105d32d9d22c6f2c7fbd590", "patch": "@@ -491,16 +491,16 @@ impl Ty {\n     fn from_hir_path_inner(\n         ctx: &TyLoweringContext<'_>,\n         segment: PathSegment<'_>,\n-        typable: TyDefId,\n+        typeable: TyDefId,\n         infer_args: bool,\n     ) -> Ty {\n-        let generic_def = match typable {\n+        let generic_def = match typeable {\n             TyDefId::BuiltinType(_) => None,\n             TyDefId::AdtId(it) => Some(it.into()),\n             TyDefId::TypeAliasId(it) => Some(it.into()),\n         };\n         let substs = substs_from_path_segment(ctx, segment, generic_def, infer_args);\n-        ctx.db.ty(typable).subst(&substs)\n+        ctx.db.ty(typeable).subst(&substs)\n     }\n \n     /// Collect generic arguments from a path into a `Substs`. See also"}, {"sha": "384d031e714034bb9a7a0c4bf9d0a18c3b96deb4", "filename": "crates/syntax/src/algo.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c8c2bd097a8cb47b3105d32d9d22c6f2c7fbd590/crates%2Fsyntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c2bd097a8cb47b3105d32d9d22c6f2c7fbd590/crates%2Fsyntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Falgo.rs?ref=c8c2bd097a8cb47b3105d32d9d22c6f2c7fbd590", "patch": "@@ -88,8 +88,8 @@ pub fn least_common_ancestor(u: &SyntaxNode, v: &SyntaxNode) -> Option<SyntaxNod\n     let keep = u_depth.min(v_depth);\n \n     let u_candidates = u.ancestors().skip(u_depth - keep);\n-    let v_canidates = v.ancestors().skip(v_depth - keep);\n-    let (res, _) = u_candidates.zip(v_canidates).find(|(x, y)| x == y)?;\n+    let v_candidates = v.ancestors().skip(v_depth - keep);\n+    let (res, _) = u_candidates.zip(v_candidates).find(|(x, y)| x == y)?;\n     Some(res)\n }\n "}]}