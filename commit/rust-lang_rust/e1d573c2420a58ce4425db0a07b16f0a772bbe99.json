{"sha": "e1d573c2420a58ce4425db0a07b16f0a772bbe99", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxZDU3M2MyNDIwYTU4Y2U0NDI1ZGIwYTA3YjE2ZjBhNzcyYmJlOTk=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-08-15T08:04:47Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-08-15T08:14:06Z"}, "message": "Rustup to rust-lang/rust#62672\n\ntry macro is deprecated now, so Clippy will drop the support for it also", "tree": {"sha": "0af2156a5b8be07d1c8ecc85266cfe7211fcfd43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0af2156a5b8be07d1c8ecc85266cfe7211fcfd43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1d573c2420a58ce4425db0a07b16f0a772bbe99", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl1VFE4ACgkQaTCGhp1Q\nZjdnsg/+Ka+FauekUQkh8s12d7/jiBqm7P8SUIQv3jQqLkc78U9hp6eC0Dg9kOpq\nMhD2zHiTgiLowna9On+vTWS69YGjHxoVfq8h5pf26x2ktmcZLoSVcBobV3R5huP6\nTcI+tNHNRnpz1v2vorYGkJrsSgVNrfGsuv/g8vfbnxnogWgdZBiPiVR4+/u/eh8Q\n7GZ+0ucMJBuYePghWTWTnKgyr/QwO4GtSrUV1KPsn2WpeGio7OtiSIOl35tz799D\nf5d8bVq7WFQPeDLfiWCeQrmUk4TrpixgCOUly2Efy0STSoDP+RBDCm41F+bAKQ6J\nrhQ2IBsbn74XcdRu/O7CukkasMB2gNVIb0/ZAS2Yq33UpX8fnXOBT0DwroV5x1J1\nIXyHl8l5V795rYyU977J6xgVsM6UZPIZVZIOqIoRYEecrVZnnQNVHkh5nR/2RdOR\ntLO8fPJRBJSWCBevDN/itkkrROIRdgUgjgfwiUEI0YkHkPOxcGVspnl789NLaPht\np4FfG0uQoHDdJCfesPXk6bRDeYPXMPbmnvCFbTGMiWv2J6oa94RhEO0/tU3J83iN\nuF59wCXSBc7A+cTtXtWox1EI3kmw4i4zUe7P5g42o9zc3R2VrXo7SGuBwERPuZIQ\nddFhDcTudBeD/IQ2x8bwYZbKB5I0lVspYpy8+rH26WP1VnEt5rw=\n=2ISB\n-----END PGP SIGNATURE-----", "payload": "tree 0af2156a5b8be07d1c8ecc85266cfe7211fcfd43\nparent 9533fa5b194775293de8682f41db12d9d93e7452\nauthor flip1995 <hello@philkrones.com> 1565856287 +0200\ncommitter flip1995 <hello@philkrones.com> 1565856846 +0200\n\nRustup to rust-lang/rust#62672\n\ntry macro is deprecated now, so Clippy will drop the support for it also\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1d573c2420a58ce4425db0a07b16f0a772bbe99", "html_url": "https://github.com/rust-lang/rust/commit/e1d573c2420a58ce4425db0a07b16f0a772bbe99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1d573c2420a58ce4425db0a07b16f0a772bbe99/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9533fa5b194775293de8682f41db12d9d93e7452", "url": "https://api.github.com/repos/rust-lang/rust/commits/9533fa5b194775293de8682f41db12d9d93e7452", "html_url": "https://github.com/rust-lang/rust/commit/9533fa5b194775293de8682f41db12d9d93e7452"}], "stats": {"total": 64, "additions": 21, "deletions": 43}, "files": [{"sha": "7c81cc73d3ca4c111c4d0cad2b827ca8d45e15b5", "filename": "tests/ui/cognitive_complexity.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e1d573c2420a58ce4425db0a07b16f0a772bbe99/tests%2Fui%2Fcognitive_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d573c2420a58ce4425db0a07b16f0a772bbe99/tests%2Fui%2Fcognitive_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcognitive_complexity.rs?ref=e1d573c2420a58ce4425db0a07b16f0a772bbe99", "patch": "@@ -322,14 +322,14 @@ fn try_() -> Result<i32, &'static str> {\n \n #[clippy::cognitive_complexity = \"0\"]\n fn try_again() -> Result<i32, &'static str> {\n-    let _ = r#try!(Ok(42));\n-    let _ = r#try!(Ok(43));\n-    let _ = r#try!(Ok(44));\n-    let _ = r#try!(Ok(45));\n-    let _ = r#try!(Ok(46));\n-    let _ = r#try!(Ok(47));\n-    let _ = r#try!(Ok(48));\n-    let _ = r#try!(Ok(49));\n+    let _ = Ok(42)?;\n+    let _ = Ok(43)?;\n+    let _ = Ok(44)?;\n+    let _ = Ok(45)?;\n+    let _ = Ok(46)?;\n+    let _ = Ok(47)?;\n+    let _ = Ok(48)?;\n+    let _ = Ok(49)?;\n     match 5 {\n         5 => Ok(5),\n         _ => return Err(\"bla\"),"}, {"sha": "824b056388b2a6d698a85a911bd944756196c2f8", "filename": "tests/ui/cognitive_complexity.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e1d573c2420a58ce4425db0a07b16f0a772bbe99/tests%2Fui%2Fcognitive_complexity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e1d573c2420a58ce4425db0a07b16f0a772bbe99/tests%2Fui%2Fcognitive_complexity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcognitive_complexity.stderr?ref=e1d573c2420a58ce4425db0a07b16f0a772bbe99", "patch": "@@ -230,9 +230,9 @@ error: the function has a cognitive complexity of 1\n   --> $DIR/cognitive_complexity.rs:324:1\n    |\n LL | / fn try_again() -> Result<i32, &'static str> {\n-LL | |     let _ = r#try!(Ok(42));\n-LL | |     let _ = r#try!(Ok(43));\n-LL | |     let _ = r#try!(Ok(44));\n+LL | |     let _ = Ok(42)?;\n+LL | |     let _ = Ok(43)?;\n+LL | |     let _ = Ok(44)?;\n ...  |\n LL | |     }\n LL | | }"}, {"sha": "ecdc5623ca585b75c9bbabfd098037fb7167f1d3", "filename": "tests/ui/if_same_then_else.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1d573c2420a58ce4425db0a07b16f0a772bbe99/tests%2Fui%2Fif_same_then_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d573c2420a58ce4425db0a07b16f0a772bbe99/tests%2Fui%2Fif_same_then_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else.rs?ref=e1d573c2420a58ce4425db0a07b16f0a772bbe99", "patch": "@@ -215,10 +215,10 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n     };\n \n     if true {\n-        r#try!(Ok(\"foo\"));\n+        Ok(\"foo\")?;\n     } else {\n         //~ ERROR same body as `if` block\n-        r#try!(Ok(\"foo\"));\n+        Ok(\"foo\")?;\n     }\n \n     if true {"}, {"sha": "e1a7b6f7f8b8cde5932cb3237dcb64599743d96c", "filename": "tests/ui/if_same_then_else.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1d573c2420a58ce4425db0a07b16f0a772bbe99/tests%2Fui%2Fif_same_then_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e1d573c2420a58ce4425db0a07b16f0a772bbe99/tests%2Fui%2Fif_same_then_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else.stderr?ref=e1d573c2420a58ce4425db0a07b16f0a772bbe99", "patch": "@@ -197,7 +197,7 @@ error: this `if` has identical blocks\n LL |       } else {\n    |  ____________^\n LL | |         //~ ERROR same body as `if` block\n-LL | |         r#try!(Ok(\"foo\"));\n+LL | |         Ok(\"foo\")?;\n LL | |     }\n    | |_____^\n    |\n@@ -206,7 +206,7 @@ note: same as this\n    |\n LL |       if true {\n    |  _____________^\n-LL | |         r#try!(Ok(\"foo\"));\n+LL | |         Ok(\"foo\")?;\n LL | |     } else {\n    | |_____^\n "}, {"sha": "2e81eea44003a8729ee59569e0378f0d8604aa60", "filename": "tests/ui/redundant_closure_call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1d573c2420a58ce4425db0a07b16f0a772bbe99/tests%2Fui%2Fredundant_closure_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d573c2420a58ce4425db0a07b16f0a772bbe99/tests%2Fui%2Fredundant_closure_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call.rs?ref=e1d573c2420a58ce4425db0a07b16f0a772bbe99", "patch": "@@ -19,5 +19,5 @@ fn main() {\n     #[allow(clippy::needless_return)]\n     (|| return 2)();\n     (|| -> Option<i32> { None? })();\n-    (|| -> Result<i32, i32> { r#try!(Err(2)) })();\n+    (|| -> Result<i32, i32> { Err(2)? })();\n }"}, {"sha": "75ddae7b7ea3ef8a8651bb3a09f041d995c1200e", "filename": "tests/ui/unused_io_amount.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e1d573c2420a58ce4425db0a07b16f0a772bbe99/tests%2Fui%2Funused_io_amount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d573c2420a58ce4425db0a07b16f0a772bbe99/tests%2Fui%2Funused_io_amount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_io_amount.rs?ref=e1d573c2420a58ce4425db0a07b16f0a772bbe99", "patch": "@@ -3,13 +3,6 @@\n \n use std::io;\n \n-fn try_macro<T: io::Read + io::Write>(s: &mut T) -> io::Result<()> {\n-    r#try!(s.write(b\"test\"));\n-    let mut buf = [0u8; 4];\n-    r#try!(s.read(&mut buf));\n-    Ok(())\n-}\n-\n fn question_mark<T: io::Read + io::Write>(s: &mut T) -> io::Result<()> {\n     s.write(b\"test\")?;\n     let mut buf = [0u8; 4];"}, {"sha": "53975b51b7e0f524fd859521eb0eec6d55a042c5", "filename": "tests/ui/unused_io_amount.stderr", "status": "modified", "additions": 5, "deletions": 20, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/e1d573c2420a58ce4425db0a07b16f0a772bbe99/tests%2Fui%2Funused_io_amount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e1d573c2420a58ce4425db0a07b16f0a772bbe99/tests%2Fui%2Funused_io_amount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_io_amount.stderr?ref=e1d573c2420a58ce4425db0a07b16f0a772bbe99", "patch": "@@ -1,43 +1,28 @@\n error: handle written amount returned or use `Write::write_all` instead\n   --> $DIR/unused_io_amount.rs:7:5\n    |\n-LL |     r#try!(s.write(b\"test\"));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     s.write(b\"test\")?;\n+   |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unused-io-amount` implied by `-D warnings`\n-   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: handle read amount returned or use `Read::read_exact` instead\n   --> $DIR/unused_io_amount.rs:9:5\n    |\n-LL |     r#try!(s.read(&mut buf));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n-\n-error: handle written amount returned or use `Write::write_all` instead\n-  --> $DIR/unused_io_amount.rs:14:5\n-   |\n-LL |     s.write(b\"test\")?;\n-   |     ^^^^^^^^^^^^^^^^^\n-\n-error: handle read amount returned or use `Read::read_exact` instead\n-  --> $DIR/unused_io_amount.rs:16:5\n-   |\n LL |     s.read(&mut buf)?;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: handle written amount returned or use `Write::write_all` instead\n-  --> $DIR/unused_io_amount.rs:21:5\n+  --> $DIR/unused_io_amount.rs:14:5\n    |\n LL |     s.write(b\"test\").unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: handle read amount returned or use `Read::read_exact` instead\n-  --> $DIR/unused_io_amount.rs:23:5\n+  --> $DIR/unused_io_amount.rs:16:5\n    |\n LL |     s.read(&mut buf).unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n "}]}