{"sha": "461265825bf8bf4382a428629a9bff9b6b1665e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2MTI2NTgyNWJmOGJmNDM4MmE0Mjg2MjlhOWJmZjliNmIxNjY1ZTA=", "commit": {"author": {"name": "Waffle", "email": "waffle.lapkin@gmail.com", "date": "2020-10-08T17:08:40Z"}, "committer": {"name": "Waffle", "email": "waffle.lapkin@gmail.com", "date": "2020-11-21T23:39:22Z"}, "message": "Remove multiline `use`s", "tree": {"sha": "9599258e73cee99f2480f36ca2039b506f6010c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9599258e73cee99f2480f36ca2039b506f6010c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/461265825bf8bf4382a428629a9bff9b6b1665e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/461265825bf8bf4382a428629a9bff9b6b1665e0", "html_url": "https://github.com/rust-lang/rust/commit/461265825bf8bf4382a428629a9bff9b6b1665e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/461265825bf8bf4382a428629a9bff9b6b1665e0/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0e906b5170579d7f28c840932d33cb8dbe848c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0e906b5170579d7f28c840932d33cb8dbe848c1", "html_url": "https://github.com/rust-lang/rust/commit/e0e906b5170579d7f28c840932d33cb8dbe848c1"}], "stats": {"total": 176, "additions": 61, "deletions": 115}, "files": [{"sha": "9753e1b43ba956aac96fc6c70d7c173ff316a4f4", "filename": "library/core/src/iter/adapters/chain.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fchain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fchain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fchain.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,8 +1,5 @@\n-use crate::{\n-    iter::{DoubleEndedIterator, FusedIterator, Iterator, TrustedLen},\n-    ops::Try,\n-    usize,\n-};\n+use crate::iter::{DoubleEndedIterator, FusedIterator, Iterator, TrustedLen};\n+use crate::{ops::Try, usize};\n \n /// An iterator that links two iterators together, in a chain.\n ///"}, {"sha": "7da47dcd2d1478d004d4042069f2b79f9fdc6181", "filename": "library/core/src/iter/adapters/cloned.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fcloned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fcloned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fcloned.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,9 +1,6 @@\n-use crate::{\n-    iter::{\n-        adapters::zip::try_get_unchecked, adapters::TrustedRandomAccess, FusedIterator, TrustedLen,\n-    },\n-    ops::Try,\n-};\n+use crate::iter::adapters::{zip::try_get_unchecked, TrustedRandomAccess};\n+use crate::iter::{FusedIterator, TrustedLen};\n+use crate::ops::Try;\n \n /// An iterator that clones the elements of an underlying iterator.\n ///"}, {"sha": "46f22354111a642faf838d9af3864af99b71b5ec", "filename": "library/core/src/iter/adapters/copied.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fcopied.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fcopied.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fcopied.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,9 +1,6 @@\n-use crate::{\n-    iter::{\n-        adapters::zip::try_get_unchecked, adapters::TrustedRandomAccess, FusedIterator, TrustedLen,\n-    },\n-    ops::Try,\n-};\n+use crate::iter::adapters::{zip::try_get_unchecked, TrustedRandomAccess};\n+use crate::iter::{FusedIterator, TrustedLen};\n+use crate::ops::Try;\n \n /// An iterator that copies the elements of an underlying iterator.\n ///"}, {"sha": "5978c2da98c35796a3863e54712c6e110738ad49", "filename": "library/core/src/iter/adapters/enumerate.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fenumerate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fenumerate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fenumerate.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,10 +1,6 @@\n-use crate::{\n-    iter::{\n-        adapters::{zip::try_get_unchecked, SourceIter, TrustedRandomAccess},\n-        FusedIterator, InPlaceIterable, TrustedLen,\n-    },\n-    ops::{Add, AddAssign, Try},\n-};\n+use crate::iter::adapters::{zip::try_get_unchecked, SourceIter, TrustedRandomAccess};\n+use crate::iter::{FusedIterator, InPlaceIterable, TrustedLen};\n+use crate::ops::{Add, AddAssign, Try};\n \n /// An iterator that yields the current count and the element during iteration.\n ///"}, {"sha": "f8d684fcdda46ca9d7c52cb770a947579fb54add", "filename": "library/core/src/iter/adapters/filter.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffilter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffilter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffilter.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,8 +1,6 @@\n-use crate::{\n-    fmt,\n-    iter::{adapters::SourceIter, FusedIterator, InPlaceIterable},\n-    ops::Try,\n-};\n+use crate::fmt;\n+use crate::iter::{adapters::SourceIter, FusedIterator, InPlaceIterable};\n+use crate::ops::Try;\n \n /// An iterator that filters the elements of `iter` with `predicate`.\n ///"}, {"sha": "0dccf2c533b57e8f3455ad12d95c85bb7f790c2d", "filename": "library/core/src/iter/adapters/filter_map.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffilter_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffilter_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffilter_map.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,9 +1,6 @@\n-use crate::{\n-    fmt,\n-    iter::{adapters::SourceIter, FusedIterator, InPlaceIterable},\n-    ops::ControlFlow,\n-    ops::Try,\n-};\n+use crate::fmt;\n+use crate::iter::{adapters::SourceIter, FusedIterator, InPlaceIterable};\n+use crate::ops::{ControlFlow, Try};\n \n /// An iterator that uses `f` to both filter and map elements from `iter`.\n ///"}, {"sha": "ff85e114dc98262699267286c50691c033e7fab0", "filename": "library/core/src/iter/adapters/flatten.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,8 +1,6 @@\n-use crate::{\n-    fmt,\n-    iter::{DoubleEndedIterator, Fuse, FusedIterator, Iterator, Map},\n-    ops::Try,\n-};\n+use crate::fmt;\n+use crate::iter::{DoubleEndedIterator, Fuse, FusedIterator, Iterator, Map};\n+use crate::ops::Try;\n \n /// An iterator that maps each element to an iterator, and yields the elements\n /// of the produced iterators."}, {"sha": "ae074065315935f8a96971d7c7ef845ab2fe3a53", "filename": "library/core/src/iter/adapters/fuse.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffuse.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,11 +1,7 @@\n-use crate::{\n-    intrinsics,\n-    iter::{\n-        adapters::{zip::try_get_unchecked, InPlaceIterable, SourceIter},\n-        DoubleEndedIterator, ExactSizeIterator, FusedIterator, Iterator, TrustedRandomAccess,\n-    },\n-    ops::Try,\n-};\n+use crate::intrinsics;\n+use crate::iter::adapters::{zip::try_get_unchecked, InPlaceIterable, SourceIter};\n+use crate::iter::{DoubleEndedIterator, ExactSizeIterator, FusedIterator, TrustedRandomAccess};\n+use crate::ops::Try;\n \n /// An iterator that yields `None` forever after the underlying iterator\n /// yields `None` once."}, {"sha": "88f5ee61b6b7348b127f58c872d8d4a0673d8500", "filename": "library/core/src/iter/adapters/inspect.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Finspect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Finspect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Finspect.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,8 +1,6 @@\n-use crate::{\n-    fmt,\n-    iter::{adapters::SourceIter, FusedIterator, InPlaceIterable},\n-    ops::Try,\n-};\n+use crate::fmt;\n+use crate::iter::{adapters::SourceIter, FusedIterator, InPlaceIterable};\n+use crate::ops::Try;\n \n /// An iterator that calls a function with a reference to each element before\n /// yielding it."}, {"sha": "12673806ec40d5d2ad74e267545e3588a1a24d5a", "filename": "library/core/src/iter/adapters/map.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmap.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,11 +1,7 @@\n-use crate::{\n-    fmt,\n-    iter::{\n-        adapters::{zip::try_get_unchecked, SourceIter, TrustedRandomAccess},\n-        FusedIterator, InPlaceIterable, TrustedLen,\n-    },\n-    ops::Try,\n-};\n+use crate::fmt;\n+use crate::iter::adapters::{zip::try_get_unchecked, SourceIter, TrustedRandomAccess};\n+use crate::iter::{FusedIterator, InPlaceIterable, TrustedLen};\n+use crate::ops::Try;\n \n /// An iterator that maps the values of `iter` with `f`.\n ///"}, {"sha": "26114d5328498c39671b3dba3780cc9be94d0631", "filename": "library/core/src/iter/adapters/map_while.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmap_while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmap_while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmap_while.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,8 +1,6 @@\n-use crate::{\n-    fmt,\n-    iter::{adapters::SourceIter, InPlaceIterable},\n-    ops::{ControlFlow, Try},\n-};\n+use crate::fmt;\n+use crate::iter::{adapters::SourceIter, InPlaceIterable};\n+use crate::ops::{ControlFlow, Try};\n \n /// An iterator that only accepts elements while `predicate` returns `Some(_)`.\n ///"}, {"sha": "5ef5717085e4ffb403e1f54783eb0c30bce62da5", "filename": "library/core/src/iter/adapters/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,7 +1,5 @@\n-use crate::{\n-    iter::{InPlaceIterable, Iterator},\n-    ops::{ControlFlow, Try},\n-};\n+use crate::iter::{InPlaceIterable, Iterator};\n+use crate::ops::{ControlFlow, Try};\n \n mod chain;\n mod cloned;"}, {"sha": "e7fb3abc94265d6c315cebe390666ca499f19502", "filename": "library/core/src/iter/adapters/peekable.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fpeekable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fpeekable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fpeekable.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,7 +1,5 @@\n-use crate::{\n-    iter::{adapters::SourceIter, FusedIterator, InPlaceIterable, TrustedLen},\n-    ops::Try,\n-};\n+use crate::iter::{adapters::SourceIter, FusedIterator, InPlaceIterable, TrustedLen};\n+use crate::ops::Try;\n \n /// An iterator with a `peek()` that returns an optional reference to the next\n /// element."}, {"sha": "105ed40a3ed117cbf2adc6ef25173bf47d8591da", "filename": "library/core/src/iter/adapters/rev.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Frev.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Frev.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Frev.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,7 +1,5 @@\n-use crate::{\n-    iter::{FusedIterator, TrustedLen},\n-    ops::Try,\n-};\n+use crate::iter::{FusedIterator, TrustedLen};\n+use crate::ops::Try;\n \n /// A double-ended iterator with the direction inverted.\n ///"}, {"sha": "0214899295e351c88ac10c498fa228394ed8a6c5", "filename": "library/core/src/iter/adapters/scan.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fscan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fscan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fscan.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,8 +1,6 @@\n-use crate::{\n-    fmt,\n-    iter::{adapters::SourceIter, InPlaceIterable},\n-    ops::{ControlFlow, Try},\n-};\n+use crate::fmt;\n+use crate::iter::{adapters::SourceIter, InPlaceIterable};\n+use crate::ops::{ControlFlow, Try};\n \n /// An iterator to maintain state while iterating another iterator.\n ///"}, {"sha": "dd5325660c3427a80de015f6ff7f6bbe60da0234", "filename": "library/core/src/iter/adapters/skip.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fskip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fskip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fskip.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,7 +1,5 @@\n-use crate::{\n-    iter::{adapters::SourceIter, FusedIterator, InPlaceIterable},\n-    ops::{ControlFlow, Try},\n-};\n+use crate::iter::{adapters::SourceIter, FusedIterator, InPlaceIterable};\n+use crate::ops::{ControlFlow, Try};\n \n /// An iterator that skips over `n` elements of `iter`.\n ///"}, {"sha": "efcb469fc957725b9d8b787f73e545ef89c9a5ca", "filename": "library/core/src/iter/adapters/skip_while.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fskip_while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fskip_while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fskip_while.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,8 +1,6 @@\n-use crate::{\n-    fmt,\n-    iter::{adapters::SourceIter, FusedIterator, InPlaceIterable},\n-    ops::Try,\n-};\n+use crate::fmt;\n+use crate::iter::{adapters::SourceIter, FusedIterator, InPlaceIterable};\n+use crate::ops::Try;\n \n /// An iterator that rejects elements while `predicate` returns `true`.\n ///"}, {"sha": "9efc7a480aeb4a4f7001ee4fdcc69a8fad060075", "filename": "library/core/src/iter/adapters/take.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ftake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ftake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ftake.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,8 +1,6 @@\n-use crate::{\n-    cmp,\n-    iter::{adapters::SourceIter, FusedIterator, InPlaceIterable, TrustedLen},\n-    ops::{ControlFlow, Try},\n-};\n+use crate::cmp;\n+use crate::iter::{adapters::SourceIter, FusedIterator, InPlaceIterable, TrustedLen};\n+use crate::ops::{ControlFlow, Try};\n \n /// An iterator that only iterates over the first `n` iterations of `iter`.\n ///"}, {"sha": "746eb41f4c38742ec23a7764cc3aead95c8f8e86", "filename": "library/core/src/iter/adapters/take_while.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ftake_while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ftake_while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ftake_while.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,8 +1,6 @@\n-use crate::{\n-    fmt,\n-    iter::{adapters::SourceIter, FusedIterator, InPlaceIterable},\n-    ops::{ControlFlow, Try},\n-};\n+use crate::fmt;\n+use crate::iter::{adapters::SourceIter, FusedIterator, InPlaceIterable};\n+use crate::ops::{ControlFlow, Try};\n \n /// An iterator that only accepts elements while `predicate` returns `true`.\n ///"}, {"sha": "8cd4c775231926d54ba38bc8dd3965dfd4d097c5", "filename": "library/core/src/iter/adapters/zip.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fzip.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,11 +1,7 @@\n-use crate::{\n-    cmp,\n-    fmt::{self, Debug},\n-    iter::{\n-        DoubleEndedIterator, ExactSizeIterator, FusedIterator, InPlaceIterable, Iterator,\n-        SourceIter, TrustedLen,\n-    },\n-};\n+use crate::cmp;\n+use crate::fmt::{self, Debug};\n+use crate::iter::{DoubleEndedIterator, ExactSizeIterator, FusedIterator, Iterator};\n+use crate::iter::{InPlaceIterable, SourceIter, TrustedLen};\n \n /// An iterator that iterates two other iterators simultaneously.\n ///"}, {"sha": "5d4a9fe8c6cc0dde45f7609b323fbe4b40ec5a6c", "filename": "library/core/src/iter/sources/empty.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fempty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461265825bf8bf4382a428629a9bff9b6b1665e0/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fempty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fempty.rs?ref=461265825bf8bf4382a428629a9bff9b6b1665e0", "patch": "@@ -1,8 +1,6 @@\n-use crate::{\n-    fmt,\n-    iter::{FusedIterator, TrustedLen},\n-    marker,\n-};\n+use crate::fmt;\n+use crate::iter::{FusedIterator, TrustedLen};\n+use crate::marker;\n \n /// Creates an iterator that yields nothing.\n ///"}]}