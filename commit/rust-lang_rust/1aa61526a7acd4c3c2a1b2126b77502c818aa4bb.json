{"sha": "1aa61526a7acd4c3c2a1b2126b77502c818aa4bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhYTYxNTI2YTdhY2Q0YzNjMmExYjIxMjZiNzc1MDJjODE4YWE0YmI=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-31T20:40:46Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-09T15:44:20Z"}, "message": "Add trivial early return for sort_by_cached_key", "tree": {"sha": "dc9bd27fdc27cafd0d7f46a0866c46759366644d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc9bd27fdc27cafd0d7f46a0866c46759366644d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1aa61526a7acd4c3c2a1b2126b77502c818aa4bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1aa61526a7acd4c3c2a1b2126b77502c818aa4bb", "html_url": "https://github.com/rust-lang/rust/commit/1aa61526a7acd4c3c2a1b2126b77502c818aa4bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1aa61526a7acd4c3c2a1b2126b77502c818aa4bb/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57eedbaaf8d2b789fbb3348589af0a43b98e40b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/57eedbaaf8d2b789fbb3348589af0a43b98e40b8", "html_url": "https://github.com/rust-lang/rust/commit/57eedbaaf8d2b789fbb3348589af0a43b98e40b8"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "56c53fca62cb1be2ffaf0da408e664ce1e27ab77", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1aa61526a7acd4c3c2a1b2126b77502c818aa4bb/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1aa61526a7acd4c3c2a1b2126b77502c818aa4bb/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=1aa61526a7acd4c3c2a1b2126b77502c818aa4bb", "patch": "@@ -1400,6 +1400,7 @@ impl<T> [T] {\n         let sz_usize = mem::size_of::<(K, usize)>();\n \n         let len = self.len();\n+        if len < 2 { return }\n         if sz_u8  < sz_u16   && len <= ( u8::MAX as usize) { return sort_by_key!( u8, self, f) }\n         if sz_u16 < sz_u32   && len <= (u16::MAX as usize) { return sort_by_key!(u16, self, f) }\n         if sz_u32 < sz_usize && len <= (u32::MAX as usize) { return sort_by_key!(u32, self, f) }"}]}