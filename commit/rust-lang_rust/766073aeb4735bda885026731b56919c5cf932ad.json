{"sha": "766073aeb4735bda885026731b56919c5cf932ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NjA3M2FlYjQ3MzViZGE4ODUwMjY3MzFiNTY5MTljNWNmOTMyYWQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-20T10:40:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-20T10:40:16Z"}, "message": "Rollup merge of #65551 - sinkuu:cstring_spec, r=sfackler\n\nAvoid realloc in `CString::new`\n\nIf `&[u8]` or `&str` is given, `CString::new` allocates a new `Vec` with the exact capacity, and then `CString::from_vec_unchecked` calls `.reserve_exact(1)` for nul byte. This PR avoids the reallocation by allocationg `len + 1` bytes beforehand. In microbenchmark this PR speeds up `CString::new(&[u8])` by 30%.", "tree": {"sha": "72e4c064d9c9c983df7ddff5d858c7499634b08c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72e4c064d9c9c983df7ddff5d858c7499634b08c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/766073aeb4735bda885026731b56919c5cf932ad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdrDmQCRBK7hj4Ov3rIwAAdHIIAFZopFfhLw/051/S4B11J9X4\nRG4i9zHw84zixlMq8c+HNcF9fjjwYmJUJDhJZqYNSfJcMwOV9u4vRCOIbiMjWv46\ngMkBLKhRL7MBLtdhofy36PvTKbeYdZBsp6+uJTTpD7BjAOC8a/CKP1A5qdFu20S+\n91cNV3Q9kjylt4BYJ7swTozmSxNzSpfw4Fy41V79yStNDFws6ERgxx+gWVp3zL7g\nr4XQoZ1ini/1c2KBCHnaT3T4OSETSTDXgOydwsaAB9BlaOqNFJF3DwZ/MY1r61Hs\neQreACWDcBF/dVx/7GsfDkA9c1rkE6V+rmu80sK7/uUujtcM4JqDrDXt4QclIm0=\n=PTiR\n-----END PGP SIGNATURE-----\n", "payload": "tree 72e4c064d9c9c983df7ddff5d858c7499634b08c\nparent f01ffbc7f14c5e80c130d679e99c3507591e4bab\nparent 23cb1d520bbe943b9dfae54c6a8f2f1fe4748872\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1571568016 +0200\ncommitter GitHub <noreply@github.com> 1571568016 +0200\n\nRollup merge of #65551 - sinkuu:cstring_spec, r=sfackler\n\nAvoid realloc in `CString::new`\n\nIf `&[u8]` or `&str` is given, `CString::new` allocates a new `Vec` with the exact capacity, and then `CString::from_vec_unchecked` calls `.reserve_exact(1)` for nul byte. This PR avoids the reallocation by allocationg `len + 1` bytes beforehand. In microbenchmark this PR speeds up `CString::new(&[u8])` by 30%.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/766073aeb4735bda885026731b56919c5cf932ad", "html_url": "https://github.com/rust-lang/rust/commit/766073aeb4735bda885026731b56919c5cf932ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/766073aeb4735bda885026731b56919c5cf932ad/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f01ffbc7f14c5e80c130d679e99c3507591e4bab", "url": "https://api.github.com/repos/rust-lang/rust/commits/f01ffbc7f14c5e80c130d679e99c3507591e4bab", "html_url": "https://github.com/rust-lang/rust/commit/f01ffbc7f14c5e80c130d679e99c3507591e4bab"}, {"sha": "23cb1d520bbe943b9dfae54c6a8f2f1fe4748872", "url": "https://api.github.com/repos/rust-lang/rust/commits/23cb1d520bbe943b9dfae54c6a8f2f1fe4748872", "html_url": "https://github.com/rust-lang/rust/commit/23cb1d520bbe943b9dfae54c6a8f2f1fe4748872"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "b3be3d09f17da9c06748786d74244af39edfcffb", "filename": "src/librustc_codegen_llvm/back/lto.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/766073aeb4735bda885026731b56919c5cf932ad/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766073aeb4735bda885026731b56919c5cf932ad/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs?ref=766073aeb4735bda885026731b56919c5cf932ad", "patch": "@@ -53,9 +53,7 @@ fn prepare_lto(cgcx: &CodegenContext<LlvmCodegenBackend>,\n \n     let symbol_filter = &|&(ref name, level): &(String, SymbolExportLevel)| {\n         if level.is_below_threshold(export_threshold) {\n-            let mut bytes = Vec::with_capacity(name.len() + 1);\n-            bytes.extend(name.bytes());\n-            Some(CString::new(bytes).unwrap())\n+            Some(CString::new(name.as_str()).unwrap())\n         } else {\n             None\n         }"}, {"sha": "6dcda98631014a1eed927bdcc5c5c7c73af702a7", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/766073aeb4735bda885026731b56919c5cf932ad/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766073aeb4735bda885026731b56919c5cf932ad/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=766073aeb4735bda885026731b56919c5cf932ad", "patch": "@@ -327,7 +327,31 @@ impl CString {\n     /// [`NulError`]: struct.NulError.html\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn new<T: Into<Vec<u8>>>(t: T) -> Result<CString, NulError> {\n-        Self::_new(t.into())\n+        trait SpecIntoVec {\n+            fn into_vec(self) -> Vec<u8>;\n+        }\n+        impl<T: Into<Vec<u8>>> SpecIntoVec for T {\n+            default fn into_vec(self) -> Vec<u8> {\n+                self.into()\n+            }\n+        }\n+        // Specialization for avoiding reallocation.\n+        impl SpecIntoVec for &'_ [u8] {\n+            fn into_vec(self) -> Vec<u8> {\n+                let mut v = Vec::with_capacity(self.len() + 1);\n+                v.extend(self);\n+                v\n+            }\n+        }\n+        impl SpecIntoVec for &'_ str {\n+            fn into_vec(self) -> Vec<u8> {\n+                let mut v = Vec::with_capacity(self.len() + 1);\n+                v.extend(self.as_bytes());\n+                v\n+            }\n+        }\n+\n+        Self::_new(SpecIntoVec::into_vec(t))\n     }\n \n     fn _new(bytes: Vec<u8>) -> Result<CString, NulError> {"}, {"sha": "50a1226cc1d07be54ff7ab68d27310bd6a3763e5", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/766073aeb4735bda885026731b56919c5cf932ad/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/766073aeb4735bda885026731b56919c5cf932ad/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=766073aeb4735bda885026731b56919c5cf932ad", "patch": "@@ -297,6 +297,7 @@\n #![feature(slice_concat_ext)]\n #![feature(slice_internals)]\n #![feature(slice_patterns)]\n+#![feature(specialization)]\n #![feature(staged_api)]\n #![feature(std_internals)]\n #![feature(stdsimd)]"}]}