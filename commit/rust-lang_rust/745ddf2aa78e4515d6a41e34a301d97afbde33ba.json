{"sha": "745ddf2aa78e4515d6a41e34a301d97afbde33ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NWRkZjJhYTc4ZTQ1MTVkNmE0MWUzNGEzMDFkOTdhZmJkZTMzYmE=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-12-01T22:49:32Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-12-18T23:26:31Z"}, "message": "Refactor out `mark.as_placeholder_id()`.", "tree": {"sha": "5c2a337c30fe17acf2d31dc3fa44e03764148877", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c2a337c30fe17acf2d31dc3fa44e03764148877"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/745ddf2aa78e4515d6a41e34a301d97afbde33ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/745ddf2aa78e4515d6a41e34a301d97afbde33ba", "html_url": "https://github.com/rust-lang/rust/commit/745ddf2aa78e4515d6a41e34a301d97afbde33ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/745ddf2aa78e4515d6a41e34a301d97afbde33ba/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f040b48ef3f8bce0706d838f5672ca8a3e07880", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f040b48ef3f8bce0706d838f5672ca8a3e07880", "html_url": "https://github.com/rust-lang/rust/commit/6f040b48ef3f8bce0706d838f5672ca8a3e07880"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "5d62175fbf23a7af4c44dbf9836ebb499102c086", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/745ddf2aa78e4515d6a41e34a301d97afbde33ba/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/745ddf2aa78e4515d6a41e34a301d97afbde33ba/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=745ddf2aa78e4515d6a41e34a301d97afbde33ba", "patch": "@@ -275,7 +275,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n             if expansions.len() < depth {\n                 expansions.push(Vec::new());\n             }\n-            expansions[depth - 1].push((mark.as_u32(), expansion));\n+            expansions[depth - 1].push((mark, expansion));\n             if !self.cx.ecfg.single_step {\n                 invocations.extend(new_invocations.into_iter().rev());\n             }\n@@ -286,7 +286,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n         let mut placeholder_expander = PlaceholderExpander::new(self.cx, self.monotonic);\n         while let Some(expansions) = expansions.pop() {\n             for (mark, expansion) in expansions.into_iter().rev() {\n-                placeholder_expander.add(ast::NodeId::from_u32(mark), expansion);\n+                placeholder_expander.add(mark.as_placeholder_id(), expansion);\n             }\n         }\n \n@@ -586,7 +586,7 @@ impl<'a, 'b> InvocationCollector<'a, 'b> {\n                 ..self.cx.current_expansion.clone()\n             },\n         });\n-        placeholder(expansion_kind, ast::NodeId::from_u32(mark.as_u32()))\n+        placeholder(expansion_kind, mark.as_placeholder_id())\n     }\n \n     fn collect_bang(&mut self, mac: ast::Mac, span: Span, kind: ExpansionKind) -> Expansion {\n@@ -748,7 +748,7 @@ impl<'a, 'b> Folder for InvocationCollector<'a, 'b> {\n \n                 item.and_then(|mut item| match item.node {\n                     ItemKind::Mac(_) if is_macro_def => {\n-                        item.id = ast::NodeId::from_u32(Mark::fresh().as_u32());\n+                        item.id = Mark::fresh().as_placeholder_id();\n                         SmallVector::one(P(item))\n                     }\n                     ItemKind::Mac(mac) => {"}, {"sha": "2af5c2ea9995ef61f20ba390f2efffd5bf043065", "filename": "src/libsyntax/ext/hygiene.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/745ddf2aa78e4515d6a41e34a301d97afbde33ba/src%2Flibsyntax%2Fext%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/745ddf2aa78e4515d6a41e34a301d97afbde33ba/src%2Flibsyntax%2Fext%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fhygiene.rs?ref=745ddf2aa78e4515d6a41e34a301d97afbde33ba", "patch": "@@ -51,7 +51,11 @@ impl Mark {\n         Mark(id.as_u32())\n     }\n \n-    pub fn as_u32(&self) -> u32 {\n+    pub fn as_placeholder_id(self) -> NodeId {\n+        NodeId::from_u32(self.0)\n+    }\n+\n+    pub fn as_u32(self) -> u32 {\n         self.0\n     }\n }"}]}