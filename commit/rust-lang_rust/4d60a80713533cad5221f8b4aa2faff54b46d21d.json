{"sha": "4d60a80713533cad5221f8b4aa2faff54b46d21d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNjBhODA3MTM1MzNjYWQ1MjIxZjhiNGFhMmZhZmY1NGI0NmQyMWQ=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-10-29T22:23:58Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-10-30T19:39:33Z"}, "message": "Address review comment and update chalk to 0.36.0", "tree": {"sha": "ea198f08b2a5e526d6f2bae7bd1c041b0a6f4319", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea198f08b2a5e526d6f2bae7bd1c041b0a6f4319"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d60a80713533cad5221f8b4aa2faff54b46d21d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d60a80713533cad5221f8b4aa2faff54b46d21d", "html_url": "https://github.com/rust-lang/rust/commit/4d60a80713533cad5221f8b4aa2faff54b46d21d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d60a80713533cad5221f8b4aa2faff54b46d21d/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acb6a061237053971bc75ca6477b39a8cbf13822", "url": "https://api.github.com/repos/rust-lang/rust/commits/acb6a061237053971bc75ca6477b39a8cbf13822", "html_url": "https://github.com/rust-lang/rust/commit/acb6a061237053971bc75ca6477b39a8cbf13822"}], "stats": {"total": 82, "additions": 41, "deletions": 41}, "files": [{"sha": "cd5ba897ae70d2ae1947f8b5c888f7c857c213f0", "filename": "Cargo.lock", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4d60a80713533cad5221f8b4aa2faff54b46d21d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/4d60a80713533cad5221f8b4aa2faff54b46d21d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=4d60a80713533cad5221f8b4aa2faff54b46d21d", "patch": "@@ -460,9 +460,9 @@ checksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n \n [[package]]\n name = \"chalk-derive\"\n-version = \"0.35.0\"\n+version = \"0.36.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"bc6d2895e93c0939074a7a0f525fd549b49da8362dea3def555e4aab95ff64cd\"\n+checksum = \"9f88ce4deae1dace71e49b7611cfae2d5489de3530d6daba5758043c47ac3a10\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -472,9 +472,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-engine\"\n-version = \"0.35.0\"\n+version = \"0.36.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"93ed23c35d243ccc2caeae7ba4660a091e74b11c40e441d7849f07d8e71b5cb8\"\n+checksum = \"0e34c9b1b10616782143d7f49490f91ae94afaf2202de3ab0b2835e78b4f0ccc\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\",\n@@ -485,19 +485,19 @@ dependencies = [\n \n [[package]]\n name = \"chalk-ir\"\n-version = \"0.35.0\"\n+version = \"0.36.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"40d7f6140cccc889117e7372b6f9cfbc8103c86a1a0269ff6ab868f20ab414d6\"\n+checksum = \"63362c629c2014ab639b04029070763fb8224df136d1363d30e9ece4c8877da3\"\n dependencies = [\n  \"chalk-derive\",\n  \"lazy_static\",\n ]\n \n [[package]]\n name = \"chalk-solve\"\n-version = \"0.35.0\"\n+version = \"0.36.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"fa65b636e64cbfcba31f053da97c32f3e15f2670b3cc620b84231a1656d754ec\"\n+checksum = \"cac338a67af52a7f50bb2f8232e730a3518ce432dbe303246acfe525ddd838c7\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\","}, {"sha": "3250f1830de18598575312312d7a4557a49ee5fd", "filename": "compiler/rustc_middle/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d60a80713533cad5221f8b4aa2faff54b46d21d/compiler%2Frustc_middle%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4d60a80713533cad5221f8b4aa2faff54b46d21d/compiler%2Frustc_middle%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2FCargo.toml?ref=4d60a80713533cad5221f8b4aa2faff54b46d21d", "patch": "@@ -26,7 +26,7 @@ rustc_index = { path = \"../rustc_index\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_span = { path = \"../rustc_span\" }\n-chalk-ir = \"0.35.0\"\n+chalk-ir = \"0.36.0\"\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n measureme = \"9.0.0\"\n rustc_session = { path = \"../rustc_session\" }"}, {"sha": "8bd9e29629dce8baa8929764fcb2a6ec661131e2", "filename": "compiler/rustc_traits/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4d60a80713533cad5221f8b4aa2faff54b46d21d/compiler%2Frustc_traits%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4d60a80713533cad5221f8b4aa2faff54b46d21d/compiler%2Frustc_traits%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2FCargo.toml?ref=4d60a80713533cad5221f8b4aa2faff54b46d21d", "patch": "@@ -12,9 +12,9 @@ rustc_hir = { path = \"../rustc_hir\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_span = { path = \"../rustc_span\" }\n-chalk-ir = \"0.35.0\"\n-chalk-solve = \"0.35.0\"\n-chalk-engine = \"0.35.0\"\n+chalk-ir = \"0.36.0\"\n+chalk-solve = \"0.36.0\"\n+chalk-engine = \"0.36.0\"\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n rustc_infer = { path = \"../rustc_infer\" }\n rustc_trait_selection = { path = \"../rustc_trait_selection\" }"}, {"sha": "b89ed6da58b2680290cb14127aad30a2e55b0210", "filename": "compiler/rustc_traits/src/chalk/lowering.rs", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/4d60a80713533cad5221f8b4aa2faff54b46d21d/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d60a80713533cad5221f8b4aa2faff54b46d21d/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs?ref=4d60a80713533cad5221f8b4aa2faff54b46d21d", "patch": "@@ -31,6 +31,7 @@\n //! not. To lower anything wrapped in a `Binder`, we first deeply find any bound\n //! variables from the current `Binder`.\n \n+use rustc_ast::ast;\n use rustc_middle::traits::{ChalkEnvironmentAndGoal, ChalkRustInterner as RustInterner};\n use rustc_middle::ty::fold::TypeFolder;\n use rustc_middle::ty::subst::{GenericArg, GenericArgKind, SubstsRef};\n@@ -278,26 +279,14 @@ impl<'tcx> LowerInto<'tcx, chalk_ir::Ty<RustInterner<'tcx>>> for Ty<'tcx> {\n             }\n             ty::Slice(ty) => chalk_ir::TyKind::Slice(ty.lower_into(interner)),\n \n-            ty::RawPtr(ptr) => match ptr.mutbl {\n-                ast::Mutability::Mut => {\n-                    chalk_ir::TyKind::Raw(chalk_ir::Mutability::Mut, ptr.ty.lower_into(interner))\n-                }\n-                ast::Mutability::Not => {\n-                    chalk_ir::TyKind::Raw(chalk_ir::Mutability::Not, ptr.ty.lower_into(interner))\n-                }\n-            },\n-            ty::Ref(region, ty, mutability) => match mutability {\n-                ast::Mutability::Mut => chalk_ir::TyKind::Ref(\n-                    chalk_ir::Mutability::Mut,\n-                    region.lower_into(interner),\n-                    ty.lower_into(interner),\n-                ),\n-                ast::Mutability::Not => chalk_ir::TyKind::Ref(\n-                    chalk_ir::Mutability::Not,\n-                    region.lower_into(interner),\n-                    ty.lower_into(interner),\n-                ),\n-            },\n+            ty::RawPtr(ptr) => {\n+                chalk_ir::TyKind::Raw(ptr.mutbl.lower_into(interner), ptr.ty.lower_into(interner))\n+            }\n+            ty::Ref(region, ty, mutability) => chalk_ir::TyKind::Ref(\n+                mutability.lower_into(interner),\n+                region.lower_into(interner),\n+                ty.lower_into(interner),\n+            ),\n             ty::FnDef(def_id, substs) => {\n                 chalk_ir::TyKind::FnDef(chalk_ir::FnDefId(def_id), substs.lower_into(interner))\n             }\n@@ -356,7 +345,6 @@ impl<'tcx> LowerInto<'tcx, chalk_ir::Ty<RustInterner<'tcx>>> for Ty<'tcx> {\n impl<'tcx> LowerInto<'tcx, Ty<'tcx>> for &chalk_ir::Ty<RustInterner<'tcx>> {\n     fn lower_into(self, interner: &RustInterner<'tcx>) -> Ty<'tcx> {\n         use chalk_ir::TyKind;\n-        use rustc_ast::ast;\n \n         let kind = match self.kind(interner) {\n             TyKind::Adt(struct_id, substitution) => {\n@@ -402,18 +390,12 @@ impl<'tcx> LowerInto<'tcx, Ty<'tcx>> for &chalk_ir::Ty<RustInterner<'tcx>> {\n             TyKind::Slice(ty) => ty::Slice(ty.lower_into(interner)),\n             TyKind::Raw(mutbl, ty) => ty::RawPtr(ty::TypeAndMut {\n                 ty: ty.lower_into(interner),\n-                mutbl: match mutbl {\n-                    chalk_ir::Mutability::Mut => ast::Mutability::Mut,\n-                    chalk_ir::Mutability::Not => ast::Mutability::Not,\n-                },\n+                mutbl: mutbl.lower_into(interner),\n             }),\n             TyKind::Ref(mutbl, lifetime, ty) => ty::Ref(\n                 lifetime.lower_into(interner),\n                 ty.lower_into(interner),\n-                match mutbl {\n-                    chalk_ir::Mutability::Mut => ast::Mutability::Mut,\n-                    chalk_ir::Mutability::Not => ast::Mutability::Not,\n-                },\n+                mutbl.lower_into(interner),\n             ),\n             TyKind::Str => ty::Str,\n             TyKind::OpaqueType(opaque_ty, substitution) => {\n@@ -767,6 +749,24 @@ impl<'tcx> LowerInto<'tcx, chalk_solve::rust_ir::TraitBound<RustInterner<'tcx>>>\n     }\n }\n \n+impl<'tcx> LowerInto<'tcx, chalk_ir::Mutability> for ast::Mutability {\n+    fn lower_into(self, _interner: &RustInterner<'tcx>) -> chalk_ir::Mutability {\n+        match self {\n+            rustc_ast::Mutability::Mut => chalk_ir::Mutability::Mut,\n+            rustc_ast::Mutability::Not => chalk_ir::Mutability::Not,\n+        }\n+    }\n+}\n+\n+impl<'tcx> LowerInto<'tcx, ast::Mutability> for chalk_ir::Mutability {\n+    fn lower_into(self, _interner: &RustInterner<'tcx>) -> ast::Mutability {\n+        match self {\n+            chalk_ir::Mutability::Mut => ast::Mutability::Mut,\n+            chalk_ir::Mutability::Not => ast::Mutability::Not,\n+        }\n+    }\n+}\n+\n impl<'tcx> LowerInto<'tcx, chalk_solve::rust_ir::Polarity> for ty::ImplPolarity {\n     fn lower_into(self, _interner: &RustInterner<'tcx>) -> chalk_solve::rust_ir::Polarity {\n         match self {"}]}