{"sha": "a35dc959693afc714989d039c83853abb0f2d650", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNWRjOTU5NjkzYWZjNzE0OTg5ZDAzOWM4Mzg1M2FiYjBmMmQ2NTA=", "commit": {"author": {"name": "Young-il Choi", "email": "duddlf.choi@samsung.com", "date": "2013-03-05T04:12:23Z"}, "committer": {"name": "Young-il Choi", "email": "duddlf.choi@samsung.com", "date": "2013-03-05T04:12:23Z"}, "message": "mk: --android-cross-path to rustc", "tree": {"sha": "c90d80d7aa848307028b106cbbd5248a9951c609", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c90d80d7aa848307028b106cbbd5248a9951c609"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a35dc959693afc714989d039c83853abb0f2d650", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a35dc959693afc714989d039c83853abb0f2d650", "html_url": "https://github.com/rust-lang/rust/commit/a35dc959693afc714989d039c83853abb0f2d650", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a35dc959693afc714989d039c83853abb0f2d650/comments", "author": {"login": "yichoi", "id": 3222276, "node_id": "MDQ6VXNlcjMyMjIyNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3222276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichoi", "html_url": "https://github.com/yichoi", "followers_url": "https://api.github.com/users/yichoi/followers", "following_url": "https://api.github.com/users/yichoi/following{/other_user}", "gists_url": "https://api.github.com/users/yichoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichoi/subscriptions", "organizations_url": "https://api.github.com/users/yichoi/orgs", "repos_url": "https://api.github.com/users/yichoi/repos", "events_url": "https://api.github.com/users/yichoi/events{/privacy}", "received_events_url": "https://api.github.com/users/yichoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yichoi", "id": 3222276, "node_id": "MDQ6VXNlcjMyMjIyNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3222276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichoi", "html_url": "https://github.com/yichoi", "followers_url": "https://api.github.com/users/yichoi/followers", "following_url": "https://api.github.com/users/yichoi/following{/other_user}", "gists_url": "https://api.github.com/users/yichoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichoi/subscriptions", "organizations_url": "https://api.github.com/users/yichoi/orgs", "repos_url": "https://api.github.com/users/yichoi/repos", "events_url": "https://api.github.com/users/yichoi/events{/privacy}", "received_events_url": "https://api.github.com/users/yichoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "995a019dffc9c0b91392f2afe0be5685be045c2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/995a019dffc9c0b91392f2afe0be5685be045c2f", "html_url": "https://github.com/rust-lang/rust/commit/995a019dffc9c0b91392f2afe0be5685be045c2f"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "fd1bb049e38ae77e2953f8903c7172babddaa518", "filename": "mk/platform.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a35dc959693afc714989d039c83853abb0f2d650/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/a35dc959693afc714989d039c83853abb0f2d650/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=a35dc959693afc714989d039c83853abb0f2d650", "patch": "@@ -143,6 +143,7 @@ CFG_PATH_MUNGE_arm-unknown-android := true\n CFG_LDPATH_arm-unknown-android :=\n CFG_RUN_arm-unknown-android=\n CFG_RUN_TARG_arm-unknown-android=\n+RUSTC_FLAGS_arm-unknown-android :=--android-cross-path='$(CFG_ANDROID_CROSS_PATH)'\n \n # i686-pc-mingw32 configuration\n CFG_LIB_NAME_i686-pc-mingw32=$(1).dll"}, {"sha": "b6ac068ff7f329ac8a0dc66111539ddb6477e5dc", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a35dc959693afc714989d039c83853abb0f2d650/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a35dc959693afc714989d039c83853abb0f2d650/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=a35dc959693afc714989d039c83853abb0f2d650", "patch": "@@ -774,11 +774,18 @@ pub fn link_binary(sess: Session,\n     // instead of hard-coded gcc.\n     // For win32, there is no cc command,\n     // so we add a condition to make it use gcc.\n-    let cc_prog: ~str =\n-        if sess.targ_cfg.os == session::os_android {\n-            ~\"arm-linux-androideabi-g++\"\n-        } else if sess.targ_cfg.os == session::os_win32 { ~\"gcc\" }\n-        else { ~\"cc\" };\n+    let cc_prog: ~str = if sess.targ_cfg.os == session::os_android {\n+        match &sess.opts.android_cross_path {\n+            &Some(copy path) => {\n+                fmt!(\"%s/bin/arm-linux-androideabi-gcc\", path)\n+            }\n+            &None => {\n+                sess.fatal(~\"need Android NDK path for linking \\\n+                             (--android-cross-path)\")\n+            }\n+        }\n+    } else if sess.targ_cfg.os == session::os_win32 { ~\"gcc\" }\n+    else { ~\"cc\" };\n     // The invocations of cc share some flags across platforms\n \n     let mut cc_args =\n@@ -876,9 +883,7 @@ pub fn link_binary(sess: Session,\n     }\n \n     // Stack growth requires statically linking a __morestack function\n-    if sess.targ_cfg.os != session::os_android {\n     cc_args.push(~\"-lmorestack\");\n-    }\n \n     // FIXME (#2397): At some point we want to rpath our guesses as to where\n     // extern libraries might live, based on the addl_lib_search_paths"}, {"sha": "e2647885d6ac5f8ccdcfd44c9ba4f22700cfb757", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a35dc959693afc714989d039c83853abb0f2d650/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a35dc959693afc714989d039c83853abb0f2d650/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=a35dc959693afc714989d039c83853abb0f2d650", "patch": "@@ -641,6 +641,8 @@ pub fn build_session_options(+binary: ~str,\n         .map(|s| Path(*s));\n     let cfg = parse_cfgspecs(getopts::opt_strs(matches, ~\"cfg\"));\n     let test = opt_present(matches, ~\"test\");\n+    let android_cross_path = getopts::opt_maybe_str(\n+        matches, ~\"android-cross-path\");\n     let sopts = @session::options {\n         crate_type: crate_type,\n         is_static: static,\n@@ -660,7 +662,8 @@ pub fn build_session_options(+binary: ~str,\n         test: test,\n         parse_only: parse_only,\n         no_trans: no_trans,\n-        debugging_opts: debugging_opts\n+        debugging_opts: debugging_opts,\n+        android_cross_path: android_cross_path\n     };\n     return sopts;\n }\n@@ -764,6 +767,8 @@ pub fn optgroups() -> ~[getopts::groups::OptGroup] {\n                           to compile for (see\n          http://sources.redhat.com/autobook/autobook/autobook_17.html\n                           for detail)\", ~\"TRIPLE\"),\n+  optopt(~\"\", ~\"android-cross-path\",\n+         ~\"The path to the Android NDK\", \"PATH\"),\n   optmulti(~\"W\", ~\"warn\",\n                         ~\"Set lint warnings\", ~\"OPT\"),\n   optmulti(~\"A\", ~\"allow\","}, {"sha": "65a81f39845b3e0fcff8e89f3717e5d75bc72dee", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a35dc959693afc714989d039c83853abb0f2d650/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a35dc959693afc714989d039c83853abb0f2d650/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=a35dc959693afc714989d039c83853abb0f2d650", "patch": "@@ -140,6 +140,7 @@ pub struct options {\n     parse_only: bool,\n     no_trans: bool,\n     debugging_opts: uint,\n+    android_cross_path: Option<~str>\n }\n \n pub struct crate_metadata {\n@@ -289,7 +290,8 @@ pub fn basic_options() -> @options {\n         test: false,\n         parse_only: false,\n         no_trans: false,\n-        debugging_opts: 0u\n+        debugging_opts: 0u,\n+        android_cross_path: None\n     }\n }\n "}, {"sha": "a57840ffe09556ef138f009c1ae0d0a2d85c7151", "filename": "src/rt/rust_crate_map.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a35dc959693afc714989d039c83853abb0f2d650/src%2Frt%2Frust_crate_map.h", "raw_url": "https://github.com/rust-lang/rust/raw/a35dc959693afc714989d039c83853abb0f2d650/src%2Frt%2Frust_crate_map.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_crate_map.h?ref=a35dc959693afc714989d039c83853abb0f2d650", "patch": "@@ -49,6 +49,7 @@ class cratemap {\n         case 0: return NULL;\n         case 1: return m_annihilate_fn;\n         default: assert(false && \"Unknown crate map version!\");\n+            return NULL; // Appease -Werror=return-type\n         }\n     }\n \n@@ -57,6 +58,7 @@ class cratemap {\n         case 0: return reinterpret_cast<const cratemap_v0 *>(this)->m_entries;\n         case 1: return m_entries;\n         default: assert(false && \"Unknown crate map version!\");\n+            return NULL; // Appease -Werror=return-type\n         }\n     }\n \n@@ -68,6 +70,7 @@ class cratemap {\n         case 1:\n             return &m_children[1];\n         default: assert(false && \"Unknown crate map version!\");\n+            return NULL; // Appease -Werror=return-type\n         }\n     }\n "}, {"sha": "2b86db6defe09f8345919b9c653585b876faedb5", "filename": "src/rt/rust_log.cpp", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a35dc959693afc714989d039c83853abb0f2d650/src%2Frt%2Frust_log.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/a35dc959693afc714989d039c83853abb0f2d650/src%2Frt%2Frust_log.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_log.cpp?ref=a35dc959693afc714989d039c83853abb0f2d650", "patch": "@@ -314,9 +314,11 @@ void update_log_settings(void* crate_map, char* settings) {\n                      n_dirs, &n_matches);\n \n     if (n_matches < n_dirs) {\n-        printf(\"warning: got %\" PRIdPTR \" RUST_LOG specs, \"\n+        // NOTE: Android compiler is complaining about format specifiers here\n+        // and I don't understand why\n+        /*printf(\"warning: got %\" PRIdPTR \" RUST_LOG specs, \"\n                \"enabled %\" PRIdPTR \" flags.\",\n-               (uintptr_t)n_dirs, (uintptr_t)n_matches);\n+               (uintptr_t)n_dirs, (uintptr_t)n_matches);*/\n     }\n \n     free(buffer);"}]}