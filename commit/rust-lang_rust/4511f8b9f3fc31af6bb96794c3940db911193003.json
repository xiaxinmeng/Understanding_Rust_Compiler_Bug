{"sha": "4511f8b9f3fc31af6bb96794c3940db911193003", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MTFmOGI5ZjNmYzMxYWY2YmI5Njc5NGMzOTQwZGI5MTExOTMwMDM=", "commit": {"author": {"name": "Austin Shafer", "email": "ashafer@badland.io", "date": "2020-10-09T19:08:18Z"}, "committer": {"name": "Austin Shafer", "email": "ashafer@badland.io", "date": "2020-10-13T19:56:30Z"}, "message": "Add a target option for selecting a DWARF version\n\nCertain platforms need to limit the DWARF version emitted (oxs, *bsd). This\nchange adds a dwarf_version entry to the options that allows a platform to\nspecify the dwarf version to use. By default this option is none and the default\nDWARF version is selected.\n\nAlso adds an option for printing Option<u32> json keys", "tree": {"sha": "782017227646cbd37c6df4490c2475685fb00f79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/782017227646cbd37c6df4490c2475685fb00f79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4511f8b9f3fc31af6bb96794c3940db911193003", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4511f8b9f3fc31af6bb96794c3940db911193003", "html_url": "https://github.com/rust-lang/rust/commit/4511f8b9f3fc31af6bb96794c3940db911193003", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4511f8b9f3fc31af6bb96794c3940db911193003/comments", "author": {"login": "amshafer", "id": 6434216, "node_id": "MDQ6VXNlcjY0MzQyMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6434216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amshafer", "html_url": "https://github.com/amshafer", "followers_url": "https://api.github.com/users/amshafer/followers", "following_url": "https://api.github.com/users/amshafer/following{/other_user}", "gists_url": "https://api.github.com/users/amshafer/gists{/gist_id}", "starred_url": "https://api.github.com/users/amshafer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amshafer/subscriptions", "organizations_url": "https://api.github.com/users/amshafer/orgs", "repos_url": "https://api.github.com/users/amshafer/repos", "events_url": "https://api.github.com/users/amshafer/events{/privacy}", "received_events_url": "https://api.github.com/users/amshafer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "amshafer", "id": 6434216, "node_id": "MDQ6VXNlcjY0MzQyMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6434216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amshafer", "html_url": "https://github.com/amshafer", "followers_url": "https://api.github.com/users/amshafer/followers", "following_url": "https://api.github.com/users/amshafer/following{/other_user}", "gists_url": "https://api.github.com/users/amshafer/gists{/gist_id}", "starred_url": "https://api.github.com/users/amshafer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amshafer/subscriptions", "organizations_url": "https://api.github.com/users/amshafer/orgs", "repos_url": "https://api.github.com/users/amshafer/repos", "events_url": "https://api.github.com/users/amshafer/events{/privacy}", "received_events_url": "https://api.github.com/users/amshafer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08764ad1638d49ee8303a8e5b1a9e439cbbc87f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/08764ad1638d49ee8303a8e5b1a9e439cbbc87f6", "html_url": "https://github.com/rust-lang/rust/commit/08764ad1638d49ee8303a8e5b1a9e439cbbc87f6"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "6516869e47b6f594496d17828abd72a44a389df6", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmod.rs?ref=4511f8b9f3fc31af6bb96794c3940db911193003", "patch": "@@ -120,10 +120,8 @@ pub fn finalize(cx: &CodegenCx<'_, '_>) {\n         // for macOS to understand. For more info see #11352\n         // This can be overridden using --llvm-opts -dwarf-version,N.\n         // Android has the same issue (#22398)\n-        if cx.sess().target.target.options.is_like_osx\n-            || cx.sess().target.target.options.is_like_android\n-        {\n-            llvm::LLVMRustAddModuleFlag(cx.llmod, \"Dwarf Version\\0\".as_ptr().cast(), 2)\n+        if let Some(version) = cx.sess().target.target.options.dwarf_version {\n+            llvm::LLVMRustAddModuleFlag(cx.llmod, \"Dwarf Version\\0\".as_ptr().cast(), version)\n         }\n \n         // Indicate that we want CodeView debug information on MSVC"}, {"sha": "0824bc3035828b048b1220a97c9016119350376b", "filename": "compiler/rustc_target/src/spec/android_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs?ref=4511f8b9f3fc31af6bb96794c3940db911193003", "patch": "@@ -9,6 +9,7 @@ pub fn opts() -> TargetOptions {\n         .unwrap()\n         .push(\"-Wl,--allow-multiple-definition\".to_string());\n     base.is_like_android = true;\n+    base.dwarf_version = Some(2);\n     base.position_independent_executables = true;\n     base.has_elf_tls = false;\n     base.requires_uwtable = true;"}, {"sha": "2e3c835c0e5ec28054d87012e216218136631f2d", "filename": "compiler/rustc_target/src/spec/apple_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs?ref=4511f8b9f3fc31af6bb96794c3940db911193003", "patch": "@@ -23,6 +23,7 @@ pub fn opts() -> TargetOptions {\n         executables: true,\n         target_family: Some(\"unix\".to_string()),\n         is_like_osx: true,\n+        dwarf_version: Some(2),\n         has_rpath: true,\n         dll_prefix: \"lib\".to_string(),\n         dll_suffix: \".dylib\".to_string(),"}, {"sha": "82dc5f5465921e981b41d7e717928ada25078584", "filename": "compiler/rustc_target/src/spec/dragonfly_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_target%2Fsrc%2Fspec%2Fdragonfly_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_target%2Fsrc%2Fspec%2Fdragonfly_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fdragonfly_base.rs?ref=4511f8b9f3fc31af6bb96794c3940db911193003", "patch": "@@ -24,6 +24,7 @@ pub fn opts() -> TargetOptions {\n         pre_link_args: args,\n         position_independent_executables: true,\n         relro_level: RelroLevel::Full,\n+        dwarf_version: Some(2),\n         ..Default::default()\n     }\n }"}, {"sha": "051325a8df6878f2e1972ed53063c05db9618f46", "filename": "compiler/rustc_target/src/spec/freebsd_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffreebsd_base.rs?ref=4511f8b9f3fc31af6bb96794c3940db911193003", "patch": "@@ -26,6 +26,7 @@ pub fn opts() -> TargetOptions {\n         eliminate_frame_pointer: false, // FIXME 43575\n         relro_level: RelroLevel::Full,\n         abi_return_struct_as_int: true,\n+        dwarf_version: Some(2),\n         ..Default::default()\n     }\n }"}, {"sha": "6f400854ec6808ec69edfd494bed942191dda6a6", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=4511f8b9f3fc31af6bb96794c3940db911193003", "patch": "@@ -816,6 +816,9 @@ pub struct TargetOptions {\n     pub is_like_emscripten: bool,\n     /// Whether the target toolchain is like Fuchsia's.\n     pub is_like_fuchsia: bool,\n+    /// Version of DWARF to use if not using the default.\n+    /// Useful because some platforms (osx, bsd) only want up to DWARF2.\n+    pub dwarf_version: Option<u32>,\n     /// Whether the linker support GNU-like arguments such as -O. Defaults to false.\n     pub linker_is_gnu: bool,\n     /// The MinGW toolchain has a known issue that prevents it from correctly\n@@ -1012,6 +1015,7 @@ impl Default for TargetOptions {\n             is_like_emscripten: false,\n             is_like_msvc: false,\n             is_like_fuchsia: false,\n+            dwarf_version: None,\n             linker_is_gnu: false,\n             allows_weak_linkage: true,\n             has_rpath: false,\n@@ -1165,6 +1169,15 @@ impl Target {\n                     base.options.$key_name = s;\n                 }\n             } );\n+            ($key_name:ident, Option<u32>) => ( {\n+                let name = (stringify!($key_name)).replace(\"_\", \"-\");\n+                if let Some(s) = obj.find(&name).and_then(Json::as_u64) {\n+                    if s < 1 || s > 5 {\n+                        return Err(\"Not a valid DWARF version number\".to_string());\n+                    }\n+                    base.options.$key_name = Some(s as u32);\n+                }\n+            } );\n             ($key_name:ident, Option<u64>) => ( {\n                 let name = (stringify!($key_name)).replace(\"_\", \"-\");\n                 if let Some(s) = obj.find(&name).and_then(Json::as_u64) {\n@@ -1417,6 +1430,7 @@ impl Target {\n         key!(is_like_emscripten, bool);\n         key!(is_like_android, bool);\n         key!(is_like_fuchsia, bool);\n+        key!(dwarf_version, Option<u32>);\n         key!(linker_is_gnu, bool);\n         key!(allows_weak_linkage, bool);\n         key!(has_rpath, bool);\n@@ -1654,6 +1668,7 @@ impl ToJson for Target {\n         target_option_val!(is_like_emscripten);\n         target_option_val!(is_like_android);\n         target_option_val!(is_like_fuchsia);\n+        target_option_val!(dwarf_version);\n         target_option_val!(linker_is_gnu);\n         target_option_val!(allows_weak_linkage);\n         target_option_val!(has_rpath);"}, {"sha": "d7baf81fce36caa6265a356540d98de7189722b0", "filename": "compiler/rustc_target/src/spec/netbsd_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_target%2Fsrc%2Fspec%2Fnetbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_target%2Fsrc%2Fspec%2Fnetbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fnetbsd_base.rs?ref=4511f8b9f3fc31af6bb96794c3940db911193003", "patch": "@@ -24,6 +24,7 @@ pub fn opts() -> TargetOptions {\n         position_independent_executables: true,\n         relro_level: RelroLevel::Full,\n         use_ctors_section: true,\n+        dwarf_version: Some(2),\n         ..Default::default()\n     }\n }"}, {"sha": "92a382e826b999088941156c3202b8a6659d7a07", "filename": "compiler/rustc_target/src/spec/openbsd_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_target%2Fsrc%2Fspec%2Fopenbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4511f8b9f3fc31af6bb96794c3940db911193003/compiler%2Frustc_target%2Fsrc%2Fspec%2Fopenbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fopenbsd_base.rs?ref=4511f8b9f3fc31af6bb96794c3940db911193003", "patch": "@@ -26,6 +26,7 @@ pub fn opts() -> TargetOptions {\n         position_independent_executables: true,\n         eliminate_frame_pointer: false, // FIXME 43575\n         relro_level: RelroLevel::Full,\n+        dwarf_version: Some(2),\n         ..Default::default()\n     }\n }"}]}