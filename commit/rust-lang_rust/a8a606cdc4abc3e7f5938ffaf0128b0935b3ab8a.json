{"sha": "a8a606cdc4abc3e7f5938ffaf0128b0935b3ab8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4YTYwNmNkYzRhYmMzZTdmNTkzOGZmYWYwMTI4YjA5MzViM2FiOGE=", "commit": {"author": {"name": "Paul Daniel Faria", "email": "nashenas88@users.noreply.github.com", "date": "2020-06-23T16:40:55Z"}, "committer": {"name": "Paul Daniel Faria", "email": "nashenas88@users.noreply.github.com", "date": "2020-06-23T16:40:55Z"}, "message": "Remove unrelated change", "tree": {"sha": "9dd945d3fa1d8fb066755ab3fbd57cf36e26957d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dd945d3fa1d8fb066755ab3fbd57cf36e26957d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8a606cdc4abc3e7f5938ffaf0128b0935b3ab8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8a606cdc4abc3e7f5938ffaf0128b0935b3ab8a", "html_url": "https://github.com/rust-lang/rust/commit/a8a606cdc4abc3e7f5938ffaf0128b0935b3ab8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8a606cdc4abc3e7f5938ffaf0128b0935b3ab8a/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e9095ae8c98813ba2e89318f35f0ec15cc833b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e9095ae8c98813ba2e89318f35f0ec15cc833b3", "html_url": "https://github.com/rust-lang/rust/commit/1e9095ae8c98813ba2e89318f35f0ec15cc833b3"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "91f27aa2a95c4b6665bb77812397ccdcc030409f", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a8a606cdc4abc3e7f5938ffaf0128b0935b3ab8a/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8a606cdc4abc3e7f5938ffaf0128b0935b3ab8a/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=a8a606cdc4abc3e7f5938ffaf0128b0935b3ab8a", "patch": "@@ -540,12 +540,10 @@ fn highlight_element(\n \n             let expr = prefix_expr.expr()?;\n             let ty = sema.type_of_expr(&expr)?;\n-            let mut h = HighlightTag::Operator.into();\n             if !ty.is_raw_ptr() {\n-                h\n+                return None;\n             } else {\n-                h |= HighlightModifier::Unsafe;\n-                h\n+                HighlightTag::Operator | HighlightModifier::Unsafe\n             }\n         }\n         T![!] if element.parent().and_then(ast::MacroCall::cast).is_some() => {"}]}