{"sha": "f4aa00b71dbb7433c408ff111c58c81788dc879f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0YWEwMGI3MWRiYjc0MzNjNDA4ZmYxMTFjNThjODE3ODhkYzg3OWY=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-08-12T17:23:07Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-08-19T15:57:09Z"}, "message": "rustc_typeck: fix the generics for (const-generic) `N` expression in e.g. `[T; N]`.", "tree": {"sha": "a937b68eadaffbd49ddd931b7f6b52d3d3a66375", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a937b68eadaffbd49ddd931b7f6b52d3d3a66375"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4aa00b71dbb7433c408ff111c58c81788dc879f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4aa00b71dbb7433c408ff111c58c81788dc879f", "html_url": "https://github.com/rust-lang/rust/commit/f4aa00b71dbb7433c408ff111c58c81788dc879f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4aa00b71dbb7433c408ff111c58c81788dc879f/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d9af83ffcc1543deebb7b91725981314c7af8c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d9af83ffcc1543deebb7b91725981314c7af8c2", "html_url": "https://github.com/rust-lang/rust/commit/7d9af83ffcc1543deebb7b91725981314c7af8c2"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "312a598af02bf20962c6a67e6abe8f725afec00f", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f4aa00b71dbb7433c408ff111c58c81788dc879f/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4aa00b71dbb7433c408ff111c58c81788dc879f/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=f4aa00b71dbb7433c408ff111c58c81788dc879f", "patch": "@@ -900,6 +900,20 @@ fn generics_of(tcx: TyCtxt<'_>, def_id: DefId) -> &ty::Generics {\n             let parent_id = tcx.hir().get_parent_item(hir_id);\n             Some(tcx.hir().local_def_id(parent_id))\n         }\n+        // FIXME(#43408) enable this in all cases when we get lazy normalization.\n+        Node::AnonConst(&anon_const) => {\n+            // HACK(eddyb) this provides the correct generics when the workaround\n+            // for a const parameter `AnonConst` is being used elsewhere, as then\n+            // there won't be the kind of cyclic dependency blocking #43408.\n+            let expr = &tcx.hir().body(anon_const.body).value;\n+            let icx = ItemCtxt::new(tcx, def_id);\n+            if AstConv::const_param_def_id(&icx, expr).is_some() {\n+                let parent_id = tcx.hir().get_parent_item(hir_id);\n+                Some(tcx.hir().local_def_id(parent_id))\n+            } else {\n+                None\n+            }\n+        }\n         Node::Expr(&hir::Expr {\n             node: hir::ExprKind::Closure(..),\n             .."}]}