{"sha": "7e171836c669be2f78e72a1342ce8a4b55761eb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlMTcxODM2YzY2OWJlMmY3OGU3MmExMzQyY2U4YTRiNTU3NjFlYjA=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-08-20T23:26:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-20T23:26:36Z"}, "message": "Merge pull request #1900 from spinda/attributes-on-same-line\n\nAdd attributes_on_same_line_as_{field,variant} configs", "tree": {"sha": "a9a4e254aa4c9ed4eb2e7ac46cc5bc7bf118ef43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9a4e254aa4c9ed4eb2e7ac46cc5bc7bf118ef43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e171836c669be2f78e72a1342ce8a4b55761eb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e171836c669be2f78e72a1342ce8a4b55761eb0", "html_url": "https://github.com/rust-lang/rust/commit/7e171836c669be2f78e72a1342ce8a4b55761eb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e171836c669be2f78e72a1342ce8a4b55761eb0/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7b5e7de54d83fc95936d38c9c88f6dab8f0e77a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7b5e7de54d83fc95936d38c9c88f6dab8f0e77a", "html_url": "https://github.com/rust-lang/rust/commit/d7b5e7de54d83fc95936d38c9c88f6dab8f0e77a"}, {"sha": "1c9d044c05d08f8d5d8bb7633329facc25aae0eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c9d044c05d08f8d5d8bb7633329facc25aae0eb", "html_url": "https://github.com/rust-lang/rust/commit/1c9d044c05d08f8d5d8bb7633329facc25aae0eb"}], "stats": {"total": 161, "additions": 155, "deletions": 6}, "files": [{"sha": "27c1c47280c558a654cf9342bce993820f274721", "filename": "Configurations.md", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/7e171836c669be2f78e72a1342ce8a4b55761eb0/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/7e171836c669be2f78e72a1342ce8a4b55761eb0/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=7e171836c669be2f78e72a1342ce8a4b55761eb0", "patch": "@@ -100,6 +100,66 @@ let lorem = vec![\"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"\n #### Lines longer than `array_width`:\n See [`array_layout`](#array_layout).\n \n+## `attributes_on_same_line_as_field`\n+\n+Try to put attributes on the same line as fields\n+\n+- **Default value**: `true`\n+- **Possible values**: `true`, `false`\n+\n+#### `true`\n+\n+```rust\n+struct Lorem {\n+    #[serde(rename = \"Ipsum\")] ipsum: usize,\n+    #[serde(rename = \"Dolor\")] dolor: usize,\n+    #[serde(rename = \"Amet\")] amet: usize,\n+}\n+```\n+\n+#### `false`\n+\n+```rust\n+struct Lorem {\n+    #[serde(rename = \"Ipsum\")]\n+    ipsum: usize,\n+    #[serde(rename = \"Dolor\")]\n+    dolor: usize,\n+    #[serde(rename = \"Amet\")]\n+    amet: usize,\n+}\n+```\n+\n+## `attributes_on_same_line_as_variant`\n+\n+Try to put attributes on the same line as variants\n+\n+- **Default value**: `true`\n+- **Possible values**: `true`, `false`\n+\n+#### `true`\n+\n+```rust\n+enum Lorem {\n+    #[serde(skip_serializing)] Ipsum,\n+    #[serde(skip_serializing)] Dolor,\n+    #[serde(skip_serializing)] Amet,\n+}\n+```\n+\n+#### `false`\n+\n+```rust\n+enum Lorem {\n+    #[serde(skip_serializing)]\n+    Ipsum,\n+    #[serde(skip_serializing)]\n+    Dolor,\n+    #[serde(skip_serializing)]\n+    Amet,\n+}\n+```\n+\n ## `chain_indent`\n \n Indentation of chain"}, {"sha": "02fd111fd9aa6e1814d05116bd7ce47a95c3b006", "filename": "src/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e171836c669be2f78e72a1342ce8a4b55761eb0/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e171836c669be2f78e72a1342ce8a4b55761eb0/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=7e171836c669be2f78e72a1342ce8a4b55761eb0", "patch": "@@ -611,6 +611,10 @@ create_config! {\n                                              threshold.\";\n     remove_blank_lines_at_start_or_end_of_block: bool, true,\n         \"Remove blank lines at start or end of a block\";\n+    attributes_on_same_line_as_field: bool, true,\n+        \"Try to put attributes on the same line as fields.\";\n+    attributes_on_same_line_as_variant: bool, true,\n+        \"Try to put attributes on the same line as variants in enum declarations.\";\n }\n \n #[cfg(test)]"}, {"sha": "c42ef7f971cafc22b64370ef67c20c3f31bfea66", "filename": "src/items.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7e171836c669be2f78e72a1342ce8a4b55761eb0/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e171836c669be2f78e72a1342ce8a4b55761eb0/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=7e171836c669be2f78e72a1342ce8a4b55761eb0", "patch": "@@ -549,13 +549,16 @@ impl<'a> FmtVisitor<'a> {\n             },\n         };\n \n+        let attrs_extendable = attrs_str.is_empty() ||\n+            (context.config.attributes_on_same_line_as_variant() &&\n+                is_attributes_extendable(&attrs_str));\n         combine_strs_with_missing_comments(\n             &context,\n             &attrs_str,\n             &variant_body,\n             span,\n             shape,\n-            is_attributes_extendable(&attrs_str),\n+            attrs_extendable,\n         )\n     }\n }\n@@ -1414,6 +1417,8 @@ pub fn rewrite_struct_field(\n     let prefix = try_opt!(rewrite_struct_field_prefix(context, field));\n \n     let attrs_str = try_opt!(field.attrs.rewrite(context, shape));\n+    let attrs_extendable = attrs_str.is_empty() ||\n+        (context.config.attributes_on_same_line_as_field() && is_attributes_extendable(&attrs_str));\n     let missing_span = if field.attrs.is_empty() {\n         mk_sp(field.span.lo, field.span.lo)\n     } else {\n@@ -1431,17 +1436,15 @@ pub fn rewrite_struct_field(\n         &prefix,\n         missing_span,\n         shape,\n-        is_attributes_extendable(&attrs_str),\n+        attrs_extendable,\n     ));\n     let overhead = last_line_width(&attr_prefix);\n     let lhs_offset = lhs_max_width.checked_sub(overhead).unwrap_or(0);\n     for _ in 0..lhs_offset {\n         spacing.push(' ');\n     }\n     // In this extreme case we will be missing a space betweeen an attribute and a field.\n-    if prefix.is_empty() && !attrs_str.is_empty() && is_attributes_extendable(&attrs_str) &&\n-        spacing.is_empty()\n-    {\n+    if prefix.is_empty() && !attrs_str.is_empty() && attrs_extendable && spacing.is_empty() {\n         spacing.push(' ');\n     }\n     let ty_rewritten = rewrite_struct_field_type(context, overhead, field, &spacing, shape);\n@@ -1489,7 +1492,7 @@ pub fn rewrite_struct_field(\n         &field_str,\n         missing_span,\n         shape,\n-        is_attributes_extendable(&attrs_str),\n+        attrs_extendable,\n     )\n }\n "}, {"sha": "ba63fd5caa027381f2f47476cac4f6677be62e6b", "filename": "tests/source/configs-attributes_on_same_line_as_field-false.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_field-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_field-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_field-false.rs?ref=7e171836c669be2f78e72a1342ce8a4b55761eb0", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-attributes_on_same_line_as_field: false\n+// Option to place attributes on the same line as fields where possible\n+\n+struct Lorem {\n+    #[ serde(rename = \"Ipsum\") ]\n+    ipsum: usize,\n+    #[ serde(rename = \"Dolor\") ]\n+    dolor: usize,\n+    #[ serde(rename = \"Amet\") ]\n+    amet: usize,\n+}"}, {"sha": "3258c754e5018815219edf5a30496045bdaef21f", "filename": "tests/source/configs-attributes_on_same_line_as_field-true.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_field-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_field-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_field-true.rs?ref=7e171836c669be2f78e72a1342ce8a4b55761eb0", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-attributes_on_same_line_as_field: true\n+// Option to place attributes on the same line as fields where possible\n+\n+struct Lorem {\n+    #[ serde(rename = \"Ipsum\") ]\n+    ipsum: usize,\n+    #[ serde(rename = \"Dolor\") ]\n+    dolor: usize,\n+    #[ serde(rename = \"Amet\") ]\n+    amet: usize,\n+}"}, {"sha": "d3456b7087cc5b412800943a608eb332eac3155e", "filename": "tests/source/configs-attributes_on_same_line_as_variant-false.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_variant-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_variant-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_variant-false.rs?ref=7e171836c669be2f78e72a1342ce8a4b55761eb0", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-attributes_on_same_line_as_variant: false\n+// Option to place attributes on the same line as variants where possible\n+\n+enum Lorem {\n+    #[ serde(skip_serializing) ]\n+    Ipsum,\n+    #[ serde(skip_serializing) ]\n+    Dolor,\n+    #[ serde(skip_serializing) ]\n+    Amet,\n+}"}, {"sha": "0f7d98f200ac0f45d71333bdca288798e8df6265", "filename": "tests/source/configs-attributes_on_same_line_as_variant-true.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_variant-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_variant-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_variant-true.rs?ref=7e171836c669be2f78e72a1342ce8a4b55761eb0", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-attributes_on_same_line_as_variant: true\n+// Option to place attributes on the same line as variants where possible\n+\n+enum Lorem {\n+    #[ serde(skip_serializing) ]\n+    Ipsum,\n+    #[ serde(skip_serializing) ]\n+    Dolor,\n+    #[ serde(skip_serializing) ]\n+    Amet,\n+}"}, {"sha": "7cb074d13a91bd49544df7628b93ed484efceeff", "filename": "tests/target/configs-attributes_on_same_line_as_field-false.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_field-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_field-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_field-false.rs?ref=7e171836c669be2f78e72a1342ce8a4b55761eb0", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-attributes_on_same_line_as_field: false\n+// Option to place attributes on the same line as fields where possible\n+\n+struct Lorem {\n+    #[serde(rename = \"Ipsum\")]\n+    ipsum: usize,\n+    #[serde(rename = \"Dolor\")]\n+    dolor: usize,\n+    #[serde(rename = \"Amet\")]\n+    amet: usize,\n+}"}, {"sha": "3261fa24ea05df8ad81fa718a452bea4064c6fa7", "filename": "tests/target/configs-attributes_on_same_line_as_field-true.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_field-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_field-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_field-true.rs?ref=7e171836c669be2f78e72a1342ce8a4b55761eb0", "patch": "@@ -0,0 +1,8 @@\n+// rustfmt-attributes_on_same_line_as_field: true\n+// Option to place attributes on the same line as fields where possible\n+\n+struct Lorem {\n+    #[serde(rename = \"Ipsum\")] ipsum: usize,\n+    #[serde(rename = \"Dolor\")] dolor: usize,\n+    #[serde(rename = \"Amet\")] amet: usize,\n+}"}, {"sha": "3442a10915a540ae699a39ce14d93c5e90ef012d", "filename": "tests/target/configs-attributes_on_same_line_as_variant-false.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_variant-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_variant-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_variant-false.rs?ref=7e171836c669be2f78e72a1342ce8a4b55761eb0", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-attributes_on_same_line_as_variant: false\n+// Option to place attributes on the same line as variants where possible\n+\n+enum Lorem {\n+    #[serde(skip_serializing)]\n+    Ipsum,\n+    #[serde(skip_serializing)]\n+    Dolor,\n+    #[serde(skip_serializing)]\n+    Amet,\n+}"}, {"sha": "0bced842c7585d0f6dd03ed41d5631a453ff73c5", "filename": "tests/target/configs-attributes_on_same_line_as_variant-true.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_variant-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e171836c669be2f78e72a1342ce8a4b55761eb0/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_variant-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_variant-true.rs?ref=7e171836c669be2f78e72a1342ce8a4b55761eb0", "patch": "@@ -0,0 +1,8 @@\n+// rustfmt-attributes_on_same_line_as_variant: true\n+// Option to place attributes on the same line as variants where possible\n+\n+enum Lorem {\n+    #[serde(skip_serializing)] Ipsum,\n+    #[serde(skip_serializing)] Dolor,\n+    #[serde(skip_serializing)] Amet,\n+}"}]}