{"sha": "25f575b29f467d2bb7aff9be359743414d218dfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ZjU3NWIyOWY0NjdkMmJiN2FmZjliZTM1OTc0MzQxNGQyMThkZmE=", "commit": {"author": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-05-20T22:11:56Z"}, "committer": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-05-21T16:07:48Z"}, "message": "Use `DefId` in `ResolverOutputs::maybe_unused_extern_crates` instead of `NodeId`", "tree": {"sha": "d087355bc4d8b013cb4773015ff950a2712f6cbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d087355bc4d8b013cb4773015ff950a2712f6cbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25f575b29f467d2bb7aff9be359743414d218dfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25f575b29f467d2bb7aff9be359743414d218dfa", "html_url": "https://github.com/rust-lang/rust/commit/25f575b29f467d2bb7aff9be359743414d218dfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25f575b29f467d2bb7aff9be359743414d218dfa/comments", "author": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13c86f289ba0d2944da320fd6c0359a591ce4374", "url": "https://api.github.com/repos/rust-lang/rust/commits/13c86f289ba0d2944da320fd6c0359a591ce4374", "html_url": "https://github.com/rust-lang/rust/commit/13c86f289ba0d2944da320fd6c0359a591ce4374"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "fc77df51aa8552c206f82b7dad11872765d8fb1f", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/25f575b29f467d2bb7aff9be359743414d218dfa/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25f575b29f467d2bb7aff9be359743414d218dfa/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=25f575b29f467d2bb7aff9be359743414d218dfa", "patch": "@@ -1133,11 +1133,7 @@ impl<'tcx> TyCtxt<'tcx> {\n             trait_map,\n             export_map: resolutions.export_map,\n             maybe_unused_trait_imports: resolutions.maybe_unused_trait_imports,\n-            maybe_unused_extern_crates: resolutions\n-                .maybe_unused_extern_crates\n-                .into_iter()\n-                .map(|(id, sp)| (definitions.local_def_id(id).to_def_id(), sp))\n-                .collect(),\n+            maybe_unused_extern_crates: resolutions.maybe_unused_extern_crates,\n             glob_map: resolutions\n                 .glob_map\n                 .into_iter()"}, {"sha": "550016ce81b489a7b84d9880ec6b340aa9bdf7fe", "filename": "src/librustc_middle/ty/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/25f575b29f467d2bb7aff9be359743414d218dfa/src%2Flibrustc_middle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25f575b29f467d2bb7aff9be359743414d218dfa/src%2Flibrustc_middle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fmod.rs?ref=25f575b29f467d2bb7aff9be359743414d218dfa", "patch": "@@ -17,7 +17,7 @@ use crate::ty;\n use crate::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use crate::ty::util::{Discr, IntTypeExt};\n use rustc_ast::ast;\n-use rustc_ast::node_id::{NodeId, NodeMap};\n+use rustc_ast::node_id::NodeMap;\n use rustc_attr as attr;\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fingerprint::Fingerprint;\n@@ -124,7 +124,7 @@ pub struct ResolverOutputs {\n     pub extern_crate_map: NodeMap<CrateNum>,\n     pub trait_map: FxHashMap<hir::HirId, Vec<hir::TraitCandidate<hir::HirId>>>,\n     pub maybe_unused_trait_imports: FxHashSet<LocalDefId>,\n-    pub maybe_unused_extern_crates: Vec<(NodeId, Span)>,\n+    pub maybe_unused_extern_crates: Vec<(DefId, Span)>,\n     pub export_map: ExportMap<hir::HirId>,\n     pub glob_map: GlobMap,\n     /// Extern prelude entries. The value is `true` if the entry was introduced"}, {"sha": "b3a668f00ff0e55a03f068901e4b93167ad1b83d", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/25f575b29f467d2bb7aff9be359743414d218dfa/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25f575b29f467d2bb7aff9be359743414d218dfa/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=25f575b29f467d2bb7aff9be359743414d218dfa", "patch": "@@ -1303,6 +1303,11 @@ impl<'a> Resolver<'a> {\n             .into_iter()\n             .map(|id| definitions.local_def_id(id))\n             .collect();\n+        let maybe_unused_extern_crates = self\n+            .maybe_unused_extern_crates\n+            .into_iter()\n+            .map(|(id, sp)| (definitions.local_def_id(id).to_def_id(), sp))\n+            .collect();\n         ResolverOutputs {\n             definitions: definitions,\n             cstore: Box::new(self.crate_loader.into_cstore()),\n@@ -1311,7 +1316,7 @@ impl<'a> Resolver<'a> {\n             trait_map,\n             glob_map: self.glob_map,\n             maybe_unused_trait_imports,\n-            maybe_unused_extern_crates: self.maybe_unused_extern_crates,\n+            maybe_unused_extern_crates,\n             extern_prelude: self\n                 .extern_prelude\n                 .iter()\n@@ -1358,7 +1363,11 @@ impl<'a> Resolver<'a> {\n                 .iter()\n                 .map(|id| self.definitions.local_def_id(id.clone()))\n                 .collect(),\n-            maybe_unused_extern_crates: self.maybe_unused_extern_crates.clone(),\n+            maybe_unused_extern_crates: self\n+                .maybe_unused_extern_crates\n+                .iter()\n+                .map(|(id, sp)| (self.definitions.local_def_id(id.clone()).to_def_id(), sp.clone()))\n+                .collect(),\n             extern_prelude: self\n                 .extern_prelude\n                 .iter()"}]}