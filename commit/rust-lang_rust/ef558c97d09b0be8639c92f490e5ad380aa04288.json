{"sha": "ef558c97d09b0be8639c92f490e5ad380aa04288", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNTU4Yzk3ZDA5YjBiZTg2MzljOTJmNDkwZTVhZDM4MGFhMDQyODg=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-05-21T17:50:18Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-05-21T17:51:21Z"}, "message": "Clean up visibilities", "tree": {"sha": "07e8fa0db2d21f0ab8ebeae635e8b9973c19896c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07e8fa0db2d21f0ab8ebeae635e8b9973c19896c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef558c97d09b0be8639c92f490e5ad380aa04288", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef558c97d09b0be8639c92f490e5ad380aa04288", "html_url": "https://github.com/rust-lang/rust/commit/ef558c97d09b0be8639c92f490e5ad380aa04288", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef558c97d09b0be8639c92f490e5ad380aa04288/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67f1a08fd8eff669a997950cac6c538dd96718b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/67f1a08fd8eff669a997950cac6c538dd96718b3", "html_url": "https://github.com/rust-lang/rust/commit/67f1a08fd8eff669a997950cac6c538dd96718b3"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "21d3fb54e9de2938d401ce83e223355e67660d49", "filename": "crates/hir_ty/src/infer/unify.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ef558c97d09b0be8639c92f490e5ad380aa04288/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef558c97d09b0be8639c92f490e5ad380aa04288/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs?ref=ef558c97d09b0be8639c92f490e5ad380aa04288", "patch": "@@ -136,10 +136,10 @@ type ChalkInferenceTable = chalk_solve::infer::InferenceTable<Interner>;\n \n #[derive(Clone)]\n pub(crate) struct InferenceTable<'a> {\n-    pub db: &'a dyn HirDatabase,\n-    pub trait_env: Arc<TraitEnvironment>,\n-    pub(super) var_unification_table: ChalkInferenceTable,\n-    pub(super) type_variable_table: Vec<TypeVariableData>,\n+    pub(crate) db: &'a dyn HirDatabase,\n+    pub(crate) trait_env: Arc<TraitEnvironment>,\n+    var_unification_table: ChalkInferenceTable,\n+    type_variable_table: Vec<TypeVariableData>,\n     pending_obligations: Vec<Canonicalized<InEnvironment<Goal>>>,\n }\n \n@@ -332,7 +332,7 @@ impl<'a> InferenceTable<'a> {\n         self.var_unification_table.normalize_ty_shallow(&Interner, ty).unwrap_or_else(|| ty.clone())\n     }\n \n-    pub fn register_obligation(&mut self, goal: Goal) {\n+    pub(crate) fn register_obligation(&mut self, goal: Goal) {\n         let in_env = InEnvironment::new(&self.trait_env.env, goal);\n         self.register_obligation_in_env(in_env)\n     }\n@@ -344,11 +344,11 @@ impl<'a> InferenceTable<'a> {\n         }\n     }\n \n-    pub fn register_infer_ok(&mut self, infer_ok: InferOk) {\n+    pub(crate) fn register_infer_ok(&mut self, infer_ok: InferOk) {\n         infer_ok.goals.into_iter().for_each(|goal| self.register_obligation_in_env(goal));\n     }\n \n-    pub fn resolve_obligations_as_possible(&mut self) {\n+    pub(crate) fn resolve_obligations_as_possible(&mut self) {\n         let _span = profile::span(\"resolve_obligations_as_possible\");\n         let mut changed = true;\n         let mut obligations = Vec::new();\n@@ -445,9 +445,9 @@ mod resolve {\n     use hir_def::type_ref::ConstScalar;\n \n     pub(super) struct Resolver<'a, 'b, F> {\n-        pub table: &'a mut InferenceTable<'b>,\n-        pub var_stack: &'a mut Vec<InferenceVar>,\n-        pub fallback: F,\n+        pub(super) table: &'a mut InferenceTable<'b>,\n+        pub(super) var_stack: &'a mut Vec<InferenceVar>,\n+        pub(super) fallback: F,\n     }\n     impl<'a, 'b, 'i, F> Folder<'i, Interner> for Resolver<'a, 'b, F>\n     where"}]}