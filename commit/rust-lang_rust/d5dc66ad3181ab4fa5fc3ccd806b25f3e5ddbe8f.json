{"sha": "d5dc66ad3181ab4fa5fc3ccd806b25f3e5ddbe8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ZGM2NmFkMzE4MWFiNGZhNWZjM2NjZDgwNmIyNWYzZTVkZGJlOGY=", "commit": {"author": {"name": "Peter Williams", "email": "peter@newton.cx", "date": "2013-01-12T23:48:19Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-13T22:32:34Z"}, "message": "core: Align cmp::le() with the other implementations\n\nAlso add comments reminding that IEEE 754 requires unusual semantics for\ncomparison operators as applied to NaNs (x != x, if x = NaN), in case someone\nin the future wants to get clever.", "tree": {"sha": "01a15da2eb0491d7e02742317884200a15b3f14c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01a15da2eb0491d7e02742317884200a15b3f14c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5dc66ad3181ab4fa5fc3ccd806b25f3e5ddbe8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5dc66ad3181ab4fa5fc3ccd806b25f3e5ddbe8f", "html_url": "https://github.com/rust-lang/rust/commit/d5dc66ad3181ab4fa5fc3ccd806b25f3e5ddbe8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5dc66ad3181ab4fa5fc3ccd806b25f3e5ddbe8f/comments", "author": {"login": "pkgw", "id": 59598, "node_id": "MDQ6VXNlcjU5NTk4", "avatar_url": "https://avatars.githubusercontent.com/u/59598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkgw", "html_url": "https://github.com/pkgw", "followers_url": "https://api.github.com/users/pkgw/followers", "following_url": "https://api.github.com/users/pkgw/following{/other_user}", "gists_url": "https://api.github.com/users/pkgw/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkgw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkgw/subscriptions", "organizations_url": "https://api.github.com/users/pkgw/orgs", "repos_url": "https://api.github.com/users/pkgw/repos", "events_url": "https://api.github.com/users/pkgw/events{/privacy}", "received_events_url": "https://api.github.com/users/pkgw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7eae397e58641392c20b4baefb39257264f7dcde", "url": "https://api.github.com/repos/rust-lang/rust/commits/7eae397e58641392c20b4baefb39257264f7dcde", "html_url": "https://github.com/rust-lang/rust/commit/7eae397e58641392c20b4baefb39257264f7dcde"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "05dc74fb3c8e670a9af5f5ef351cdedd912971d4", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d5dc66ad3181ab4fa5fc3ccd806b25f3e5ddbe8f/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5dc66ad3181ab4fa5fc3ccd806b25f3e5ddbe8f/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=d5dc66ad3181ab4fa5fc3ccd806b25f3e5ddbe8f", "patch": "@@ -30,7 +30,10 @@ and `Eq` to overload the `==` and `!=` operators.\n *\n * Eventually this may be simplified to only require\n * an `eq` method, with the other generated from\n-* a default implementation.\n+* a default implementation. However it should\n+* remain possible to implement `ne` separately, for\n+* compatibility with floating-point NaN semantics\n+* (cf. IEEE 754-2008 section 5.11).\n */\n #[lang=\"eq\"]\n pub trait Eq {\n@@ -43,7 +46,10 @@ pub trait Eq {\n *\n * Eventually this may be simplified to only require\n * an `le` method, with the others generated from\n-* default implementations.\n+* default implementations. However it should remain\n+* possible to implement the others separately, for\n+* compatibility with floating-point NaN semantics\n+* (cf. IEEE 754-2008 section 5.11).\n */\n #[lang=\"ord\"]\n pub trait Ord {\n@@ -59,8 +65,8 @@ pub pure fn lt<T: Ord>(v1: &T, v2: &T) -> bool {\n }\n \n #[inline(always)]\n-pub pure fn le<T: Ord Eq>(v1: &T, v2: &T) -> bool {\n-    (*v1).lt(v2) || (*v1).eq(v2)\n+pub pure fn le<T: Ord>(v1: &T, v2: &T) -> bool {\n+    (*v1).le(v2)\n }\n \n #[inline(always)]"}]}