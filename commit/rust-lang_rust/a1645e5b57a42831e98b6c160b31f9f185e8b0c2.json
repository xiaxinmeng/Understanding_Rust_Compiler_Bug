{"sha": "a1645e5b57a42831e98b6c160b31f9f185e8b0c2", "node_id": "C_kwDOAAsO6NoAKGExNjQ1ZTViNTdhNDI4MzFlOThiNmMxNjBiMzFmOWYxODVlOGIwYzI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-23T19:13:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-23T19:13:07Z"}, "message": "Rollup merge of #93229 - mark-i-m:noquiet, r=eddyb\n\nRemove DiagnosticBuilder.quiet\n\nr? `@eddyb`\n\ncc https://github.com/rust-lang/rust/issues/69426 `@GuillaumeGomez` `@Manishearth`", "tree": {"sha": "f08a428f95494f258e824d579e808414ad021d6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f08a428f95494f258e824d579e808414ad021d6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1645e5b57a42831e98b6c160b31f9f185e8b0c2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh7ajECRBK7hj4Ov3rIwAAnMQIADEO19fId/sadiu65oDBg62k\nx+gqh3YozeDuanepJBL+4gvLEJwyL/CLS/WRsdI5TPI9RJh4o8h1MnjqZTiUhQ+y\nfXOlItDciIk0Bm2fqxOjF+d5eMKDIlC6spWuxLCfxb3qFFCBkEzs7+60UY3+XCxv\nTaRSBG7OWznSNcY7QUGrtNHyCT61Iw2M/fgRD5Xje+b5a8Ro8Op9KlKNwEvSJKpy\nO+WsrV9ZB4MyPfi26CCCXij5jFNSDuC/HsEHRuJgefsraQlQqn4SwMP5f6OVzYIA\nGk5INk8iJ2ucZ7Taa7TapxgtJpHDMgvE7U2/BUGRTf5wCLEko/i29LM8Y0L3hqM=\n=dyy7\n-----END PGP SIGNATURE-----\n", "payload": "tree f08a428f95494f258e824d579e808414ad021d6b\nparent 8810af8082e760cf6d7930be88877e5aae2bf65a\nparent cf382de0cc268e6af8d37d31323bf36d0099ade3\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642965187 +0100\ncommitter GitHub <noreply@github.com> 1642965187 +0100\n\nRollup merge of #93229 - mark-i-m:noquiet, r=eddyb\n\nRemove DiagnosticBuilder.quiet\n\nr? `@eddyb`\n\ncc https://github.com/rust-lang/rust/issues/69426 `@GuillaumeGomez` `@Manishearth`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1645e5b57a42831e98b6c160b31f9f185e8b0c2", "html_url": "https://github.com/rust-lang/rust/commit/a1645e5b57a42831e98b6c160b31f9f185e8b0c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1645e5b57a42831e98b6c160b31f9f185e8b0c2/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8810af8082e760cf6d7930be88877e5aae2bf65a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8810af8082e760cf6d7930be88877e5aae2bf65a", "html_url": "https://github.com/rust-lang/rust/commit/8810af8082e760cf6d7930be88877e5aae2bf65a"}, {"sha": "cf382de0cc268e6af8d37d31323bf36d0099ade3", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf382de0cc268e6af8d37d31323bf36d0099ade3", "html_url": "https://github.com/rust-lang/rust/commit/cf382de0cc268e6af8d37d31323bf36d0099ade3"}], "stats": {"total": 33, "additions": 8, "deletions": 25}, "files": [{"sha": "16e9b265d69d57490dd9b2ca78dd1efbc248a15c", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a1645e5b57a42831e98b6c160b31f9f185e8b0c2/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1645e5b57a42831e98b6c160b31f9f185e8b0c2/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=a1645e5b57a42831e98b6c160b31f9f185e8b0c2", "patch": "@@ -445,9 +445,6 @@ struct HandlerInner {\n     deduplicated_warn_count: usize,\n \n     future_breakage_diagnostics: Vec<Diagnostic>,\n-\n-    /// If set to `true`, no warning or error will be emitted.\n-    quiet: bool,\n }\n \n /// A key denoting where from a diagnostic was stashed.\n@@ -563,19 +560,10 @@ impl Handler {\n                 emitted_diagnostics: Default::default(),\n                 stashed_diagnostics: Default::default(),\n                 future_breakage_diagnostics: Vec::new(),\n-                quiet: false,\n             }),\n         }\n     }\n \n-    pub fn with_disabled_diagnostic<T, F: FnOnce() -> T>(&self, f: F) -> T {\n-        let prev = self.inner.borrow_mut().quiet;\n-        self.inner.borrow_mut().quiet = true;\n-        let ret = f();\n-        self.inner.borrow_mut().quiet = prev;\n-        ret\n-    }\n-\n     // This is here to not allow mutation of flags;\n     // as of this writing it's only used in tests in librustc_middle.\n     pub fn can_emit_warnings(&self) -> bool {\n@@ -946,7 +934,7 @@ impl HandlerInner {\n     }\n \n     fn emit_diagnostic(&mut self, diagnostic: &Diagnostic) {\n-        if diagnostic.cancelled() || self.quiet {\n+        if diagnostic.cancelled() {\n             return;\n         }\n \n@@ -1170,9 +1158,6 @@ impl HandlerInner {\n     }\n \n     fn delay_as_bug(&mut self, diagnostic: Diagnostic) {\n-        if self.quiet {\n-            return;\n-        }\n         if self.flags.report_delayed_bugs {\n             self.emit_diagnostic(&diagnostic);\n         }"}, {"sha": "9bcdd7f3da6b3c729c58934964d9b4180b6166a0", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a1645e5b57a42831e98b6c160b31f9f185e8b0c2/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1645e5b57a42831e98b6c160b31f9f185e8b0c2/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=a1645e5b57a42831e98b6c160b31f9f185e8b0c2", "patch": "@@ -476,10 +476,6 @@ impl Session {\n         &self.parse_sess.span_diagnostic\n     }\n \n-    pub fn with_disabled_diagnostic<T, F: FnOnce() -> T>(&self, f: F) -> T {\n-        self.parse_sess.span_diagnostic.with_disabled_diagnostic(f)\n-    }\n-\n     /// Analogous to calling methods on the given `DiagnosticBuilder`, but\n     /// deduplicates on lint ID, span (if any), and message for this `Session`\n     fn diag_once<'a, 'b>("}, {"sha": "731e18b1eec2cf20dce6538a62ba831a6396dd46", "filename": "src/librustdoc/html/render/span_map.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a1645e5b57a42831e98b6c160b31f9f185e8b0c2/src%2Flibrustdoc%2Fhtml%2Frender%2Fspan_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1645e5b57a42831e98b6c160b31f9f185e8b0c2/src%2Flibrustdoc%2Fhtml%2Frender%2Fspan_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fspan_map.rs?ref=a1645e5b57a42831e98b6c160b31f9f185e8b0c2", "patch": "@@ -134,11 +134,13 @@ impl<'tcx> Visitor<'tcx> for SpanMapVisitor<'tcx> {\n             if let Some(hir_id) = segment.hir_id {\n                 let hir = self.tcx.hir();\n                 let body_id = hir.enclosing_body_owner(hir_id);\n-                let typeck_results = self.tcx.sess.with_disabled_diagnostic(|| {\n-                    self.tcx.typeck_body(\n-                        hir.maybe_body_owned_by(body_id).expect(\"a body which isn't a body\"),\n-                    )\n-                });\n+                // FIXME: this is showing error messages for parts of the code that are not\n+                // compiled (because of cfg)!\n+                //\n+                // See discussion in https://github.com/rust-lang/rust/issues/69426#issuecomment-1019412352\n+                let typeck_results = self.tcx.typeck_body(\n+                    hir.maybe_body_owned_by(body_id).expect(\"a body which isn't a body\"),\n+                );\n                 if let Some(def_id) = typeck_results.type_dependent_def_id(expr.hir_id) {\n                     self.matches.insert(\n                         segment.ident.span,"}]}