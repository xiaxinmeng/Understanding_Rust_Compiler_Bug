{"sha": "5b4e569bf357a3f3c66e96d252a27a1a3c2b3af1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNGU1NjliZjM1N2EzZjNjNjZlOTZkMjUyYTI3YTFhM2MyYjNhZjE=", "commit": {"author": {"name": "Josh Matthews", "email": "josh@joshmatthews.net", "date": "2013-01-20T02:24:08Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-22T22:27:21Z"}, "message": "Fix building of all rustc components with -g.", "tree": {"sha": "26ed396ede8a6d428c30b4e82d9c9288ca34be9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26ed396ede8a6d428c30b4e82d9c9288ca34be9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b4e569bf357a3f3c66e96d252a27a1a3c2b3af1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b4e569bf357a3f3c66e96d252a27a1a3c2b3af1", "html_url": "https://github.com/rust-lang/rust/commit/5b4e569bf357a3f3c66e96d252a27a1a3c2b3af1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b4e569bf357a3f3c66e96d252a27a1a3c2b3af1/comments", "author": {"login": "jdm", "id": 27658, "node_id": "MDQ6VXNlcjI3NjU4", "avatar_url": "https://avatars.githubusercontent.com/u/27658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdm", "html_url": "https://github.com/jdm", "followers_url": "https://api.github.com/users/jdm/followers", "following_url": "https://api.github.com/users/jdm/following{/other_user}", "gists_url": "https://api.github.com/users/jdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdm/subscriptions", "organizations_url": "https://api.github.com/users/jdm/orgs", "repos_url": "https://api.github.com/users/jdm/repos", "events_url": "https://api.github.com/users/jdm/events{/privacy}", "received_events_url": "https://api.github.com/users/jdm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8d076d2de662cb1a13cc1efa092e7202b129eae", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8d076d2de662cb1a13cc1efa092e7202b129eae", "html_url": "https://github.com/rust-lang/rust/commit/a8d076d2de662cb1a13cc1efa092e7202b129eae"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "f6a2574d50d4961d59d1ab56d438fc6d6f344145", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5b4e569bf357a3f3c66e96d252a27a1a3c2b3af1/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b4e569bf357a3f3c66e96d252a27a1a3c2b3af1/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=5b4e569bf357a3f3c66e96d252a27a1a3c2b3af1", "patch": "@@ -769,28 +769,31 @@ fn create_function(fcx: fn_ctxt) -> @metadata<subprogram_md> {\n       ast_map::node_item(item, _) => {\n         match /*bad*/copy item.node {\n           ast::item_fn(decl, _, _, _) => {\n-            (item.ident, decl.output, item.id)\n+            (item.ident, Some(decl.output), item.id)\n           }\n           _ => fcx.ccx.sess.span_bug(item.span, ~\"create_function: item \\\n                                                   bound to non-function\")\n         }\n       }\n       ast_map::node_method(method, _, _) => {\n-          (method.ident, method.decl.output, method.id)\n+          (method.ident, Some(method.decl.output), method.id)\n       }\n       ast_map::node_expr(expr) => {\n         match /*bad*/copy expr.node {\n           ast::expr_fn(_, decl, _, _) => {\n-            ((dbg_cx.names)(~\"fn\"), decl.output, expr.id)\n+            ((dbg_cx.names)(~\"fn\"), Some(decl.output), expr.id)\n           }\n           ast::expr_fn_block(decl, _, _) => {\n-            ((dbg_cx.names)(~\"fn\"), decl.output, expr.id)\n+            ((dbg_cx.names)(~\"fn\"), Some(decl.output), expr.id)\n           }\n           _ => fcx.ccx.sess.span_bug(expr.span,\n                                      ~\"create_function: \\\n                                        expected an expr_fn or fn_block here\")\n         }\n       }\n+      ast_map::node_dtor(_, _, did, _) => {\n+        ((dbg_cx.names)(~\"dtor\"), None, did.node)\n+      }\n       _ => fcx.ccx.sess.bug(~\"create_function: unexpected \\\n                               sort of node\")\n     };\n@@ -807,7 +810,8 @@ fn create_function(fcx: fn_ctxt) -> @metadata<subprogram_md> {\n \n     let loc = cx.sess.codemap.lookup_char_pos(sp.lo);\n     let file_node = create_file(cx, loc.file.name).node;\n-    let ty_node = if cx.sess.opts.extra_debuginfo {\n+    let ty_node = if ret_ty.is_some() && cx.sess.opts.extra_debuginfo {\n+        let ret_ty = ret_ty.unwrap();\n         match ret_ty.node {\n           ast::ty_nil => llnull(),\n           _ => create_ty(cx, ty::node_id_to_type(cx.tcx, id), ret_ty).node"}]}