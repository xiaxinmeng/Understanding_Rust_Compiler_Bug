{"sha": "3bd09dee45c045307f6a1cd41498e362c5992fd9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZDA5ZGVlNDVjMDQ1MzA3ZjZhMWNkNDE0OThlMzYyYzU5OTJmZDk=", "commit": {"author": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2017-09-19T03:53:33Z"}, "committer": {"name": "Douglas Campos", "email": "qmx@qmx.me", "date": "2017-09-30T02:34:46Z"}, "message": "re-enable mir inlining across trait methods\n\nthis fixes #44389", "tree": {"sha": "59649601b9ebc33b9e57c2ad3d52404ec9bca123", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59649601b9ebc33b9e57c2ad3d52404ec9bca123"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bd09dee45c045307f6a1cd41498e362c5992fd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bd09dee45c045307f6a1cd41498e362c5992fd9", "html_url": "https://github.com/rust-lang/rust/commit/3bd09dee45c045307f6a1cd41498e362c5992fd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bd09dee45c045307f6a1cd41498e362c5992fd9/comments", "author": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qmx", "id": 66734, "node_id": "MDQ6VXNlcjY2NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/66734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qmx", "html_url": "https://github.com/qmx", "followers_url": "https://api.github.com/users/qmx/followers", "following_url": "https://api.github.com/users/qmx/following{/other_user}", "gists_url": "https://api.github.com/users/qmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/qmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qmx/subscriptions", "organizations_url": "https://api.github.com/users/qmx/orgs", "repos_url": "https://api.github.com/users/qmx/repos", "events_url": "https://api.github.com/users/qmx/events{/privacy}", "received_events_url": "https://api.github.com/users/qmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baa010561e5c109341e9a1ebe8a613fcae095884", "url": "https://api.github.com/repos/rust-lang/rust/commits/baa010561e5c109341e9a1ebe8a613fcae095884", "html_url": "https://github.com/rust-lang/rust/commit/baa010561e5c109341e9a1ebe8a613fcae095884"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "41eaf864ca47e8ca2fc1a6e6912f87752326d052", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/3bd09dee45c045307f6a1cd41498e362c5992fd9/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bd09dee45c045307f6a1cd41498e362c5992fd9/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=3bd09dee45c045307f6a1cd41498e362c5992fd9", "patch": "@@ -18,7 +18,7 @@ use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n use rustc::mir::*;\n use rustc::mir::transform::{MirPass, MirSource};\n use rustc::mir::visit::*;\n-use rustc::ty::{self, Ty, TyCtxt};\n+use rustc::ty::{self, Ty, TyCtxt, Instance};\n use rustc::ty::subst::{Subst,Substs};\n \n use std::collections::VecDeque;\n@@ -88,13 +88,28 @@ impl<'a, 'tcx> Inliner<'a, 'tcx> {\n                 if let TerminatorKind::Call {\n                     func: Operand::Constant(ref f), .. } = terminator.kind {\n                     if let ty::TyFnDef(callee_def_id, substs) = f.ty.sty {\n-                        if self.tcx.trait_of_item(callee_def_id).is_none() {\n-                            callsites.push_back(CallSite {\n-                                callee: callee_def_id,\n-                                substs,\n-                                bb,\n-                                location: terminator.source_info\n-                            });\n+                        match self.tcx.trait_of_item(callee_def_id) {\n+                            Some(_) => {\n+                                match Instance::new(callee_def_id, substs).resolve(self.tcx) {\n+                                    Some(instance) => {\n+                                        callsites.push_back(CallSite {\n+                                            callee: instance.def_id(),\n+                                            substs: instance.substs,\n+                                            bb,\n+                                            location: terminator.source_info\n+                                        });\n+                                    },\n+                                    None => {}\n+                                }\n+                            }\n+                            None => {\n+                                callsites.push_back(CallSite {\n+                                    callee: callee_def_id,\n+                                    substs,\n+                                    bb,\n+                                    location: terminator.source_info\n+                                });\n+                            }\n                         }\n                     }\n                 }"}]}