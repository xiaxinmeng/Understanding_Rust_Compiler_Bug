{"sha": "72cec0562cf3ff5a50f4318e316e188325cda54c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyY2VjMDU2MmNmM2ZmNWE1MGY0MzE4ZTMxNmUxODgzMjVjZGE1NGM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-17T13:20:33Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-17T14:02:57Z"}, "message": "add tests for fixes: sharing no longer leaks, and we can handle entering interior mutability", "tree": {"sha": "aa21fbf75592cb07a606af2ae410d62795f96cf0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa21fbf75592cb07a606af2ae410d62795f96cf0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72cec0562cf3ff5a50f4318e316e188325cda54c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72cec0562cf3ff5a50f4318e316e188325cda54c", "html_url": "https://github.com/rust-lang/rust/commit/72cec0562cf3ff5a50f4318e316e188325cda54c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72cec0562cf3ff5a50f4318e316e188325cda54c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46d5fd848773dcb3699344a8927a21e285d9207a", "url": "https://api.github.com/repos/rust-lang/rust/commits/46d5fd848773dcb3699344a8927a21e285d9207a", "html_url": "https://github.com/rust-lang/rust/commit/46d5fd848773dcb3699344a8927a21e285d9207a"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "dc37814729000eca6459924be5fdbccc9f9a86a5", "filename": "tests/compile-fail/stacked_borrows/illegal_read6.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/72cec0562cf3ff5a50f4318e316e188325cda54c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72cec0562cf3ff5a50f4318e316e188325cda54c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read6.rs?ref=72cec0562cf3ff5a50f4318e316e188325cda54c", "patch": "@@ -0,0 +1,8 @@\n+// Creating a shared reference does not leak the data to raw pointers.\n+fn main() { unsafe {\n+    let x = &mut 0;\n+    let raw = x as *mut _;\n+    let x = &mut *x; // kill `raw`\n+    let _y = &*x; // this should not activate `raw` again\n+    let _val = *raw; //~ ERROR borrow stack\n+} }"}, {"sha": "33f44d0093ed4d4886961dab416ef15d796d25a4", "filename": "tests/run-pass/stacked-borrows/interior_mutability.rs", "status": "renamed", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/72cec0562cf3ff5a50f4318e316e188325cda54c/tests%2Frun-pass%2Fstacked-borrows%2Finterior_mutability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72cec0562cf3ff5a50f4318e316e188325cda54c/tests%2Frun-pass%2Fstacked-borrows%2Finterior_mutability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstacked-borrows%2Finterior_mutability.rs?ref=72cec0562cf3ff5a50f4318e316e188325cda54c", "patch": "@@ -1,8 +1,12 @@\n+#![feature(maybe_uninit, maybe_uninit_ref)]\n+use std::mem::MaybeUninit;\n+use std::cell::Cell;\n use std::cell::RefCell;\n \n fn main() {\n     aliasing_mut_and_shr();\n     aliasing_frz_and_shr();\n+    into_interior_mutability();\n }\n \n fn aliasing_mut_and_shr() {\n@@ -42,3 +46,14 @@ fn aliasing_frz_and_shr() {\n     inner(&rc, &*bshr);\n     assert_eq!(*rc.borrow(), 23);\n }\n+\n+// Getting a pointer into a union with interior mutability used to be tricky\n+// business (https://github.com/rust-lang/miri/issues/615), but it should work\n+// now.\n+fn into_interior_mutability() {\n+    let mut x: MaybeUninit<(Cell<u32>, u32)> = MaybeUninit::uninit();\n+    x.as_ptr();\n+    x.write((Cell::new(0), 1));\n+    let ptr = unsafe { x.get_ref() };\n+    assert_eq!(ptr.1, 1);\n+}", "previous_filename": "tests/run-pass/stacked-borrows/refcell.rs"}]}