{"sha": "4ab9a2d1d6a5140c1968e59449442d3cc9006fdd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhYjlhMmQxZDZhNTE0MGMxOTY4ZTU5NDQ5NDQyZDNjYzkwMDZmZGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-17T22:51:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-17T22:51:11Z"}, "message": "Auto merge of #30964 - GuillaumeGomez:patch-5, r=Manishearth\n\nr? @Manishearth", "tree": {"sha": "305c2be770db3a1e2b7484ab370b273be8af272c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/305c2be770db3a1e2b7484ab370b273be8af272c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ab9a2d1d6a5140c1968e59449442d3cc9006fdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ab9a2d1d6a5140c1968e59449442d3cc9006fdd", "html_url": "https://github.com/rust-lang/rust/commit/4ab9a2d1d6a5140c1968e59449442d3cc9006fdd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ab9a2d1d6a5140c1968e59449442d3cc9006fdd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f682639ce63e8001f3a7e62649bca2e4a49fb623", "url": "https://api.github.com/repos/rust-lang/rust/commits/f682639ce63e8001f3a7e62649bca2e4a49fb623", "html_url": "https://github.com/rust-lang/rust/commit/f682639ce63e8001f3a7e62649bca2e4a49fb623"}, {"sha": "f15512e7f9a49f9ca0ac84daaecaf364411b1dc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f15512e7f9a49f9ca0ac84daaecaf364411b1dc9", "html_url": "https://github.com/rust-lang/rust/commit/f15512e7f9a49f9ca0ac84daaecaf364411b1dc9"}], "stats": {"total": 89, "additions": 88, "deletions": 1}, "files": [{"sha": "1f5824f82e486377596c5827d3ba55f67cf729f4", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 88, "deletions": 1, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/4ab9a2d1d6a5140c1968e59449442d3cc9006fdd/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ab9a2d1d6a5140c1968e59449442d3cc9006fdd/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=4ab9a2d1d6a5140c1968e59449442d3cc9006fdd", "patch": "@@ -293,6 +293,94 @@ let c = &i; // still ok!\n ```\n \"##,\n \n+E0507: r##\"\n+You tried to move out of a value which was borrowed. Erroneous code example:\n+\n+```\n+use std::cell::RefCell;\n+\n+struct TheDarkKnight;\n+\n+impl TheDarkKnight {\n+    fn nothing_is_true(self) {}\n+}\n+\n+fn main() {\n+    let x = RefCell::new(TheDarkKnight);\n+\n+    x.borrow().nothing_is_true(); // error: cannot move out of borrowed content\n+}\n+```\n+\n+Here, the `nothing_is_true` method takes the ownership of `self`. However,\n+`self` cannot be moved because `.borrow()` only provides an `&TheDarkKnight`,\n+which is a borrow of the content owned by the `RefCell`. To fix this error,\n+you have three choices:\n+\n+* Try to avoid moving the variable.\n+* Somehow reclaim the ownership.\n+* Implement the `Copy` trait on the type.\n+\n+Examples:\n+\n+```\n+use std::cell::RefCell;\n+\n+struct TheDarkKnight;\n+\n+impl TheDarkKnight {\n+    fn nothing_is_true(&self) {} // First case, we don't take ownership\n+}\n+\n+fn main() {\n+    let x = RefCell::new(TheDarkKnight);\n+\n+    x.borrow().nothing_is_true(); // ok!\n+}\n+```\n+\n+Or:\n+\n+```\n+use std::cell::RefCell;\n+\n+struct TheDarkKnight;\n+\n+impl TheDarkKnight {\n+    fn nothing_is_true(self) {}\n+}\n+\n+fn main() {\n+    let x = RefCell::new(TheDarkKnight);\n+    let x = x.into_inner(); // we get back ownership\n+\n+    x.nothing_is_true(); // ok!\n+}\n+```\n+\n+Or:\n+\n+```\n+use std::cell::RefCell;\n+\n+#[derive(Clone, Copy)] // we implement the Copy trait\n+struct TheDarkKnight;\n+\n+impl TheDarkKnight {\n+    fn nothing_is_true(self) {}\n+}\n+\n+fn main() {\n+    let x = RefCell::new(TheDarkKnight);\n+\n+    x.borrow().nothing_is_true(); // ok!\n+}\n+```\n+\n+You can find more information about borrowing in the rust-book:\n+http://doc.rust-lang.org/stable/book/references-and-borrowing.html\n+\"##,\n+\n }\n \n register_diagnostics! {\n@@ -306,7 +394,6 @@ register_diagnostics! {\n     E0504, // cannot move `..` into closure because it is borrowed\n     E0505, // cannot move out of `..` because it is borrowed\n     E0506, // cannot assign to `..` because it is borrowed\n-    E0507, // cannot move out of ..\n     E0508, // cannot move out of type `..`, a non-copy fixed-size array\n     E0509, // cannot move out of type `..`, which defines the `Drop` trait\n }"}]}