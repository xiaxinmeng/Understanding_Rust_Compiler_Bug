{"sha": "e4b83fcad48dc78e0d0753d4441ffdb34121b1c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0YjgzZmNhZDQ4ZGM3OGUwZDA3NTNkNDQ0MWZmZGIzNDEyMWIxYzI=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-02-08T04:12:26Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-02-08T04:19:16Z"}, "message": "Document smart punctuation", "tree": {"sha": "6bf46188dad3eab9dec643850c4f16a2402d68db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bf46188dad3eab9dec643850c4f16a2402d68db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4b83fcad48dc78e0d0753d4441ffdb34121b1c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4b83fcad48dc78e0d0753d4441ffdb34121b1c2", "html_url": "https://github.com/rust-lang/rust/commit/e4b83fcad48dc78e0d0753d4441ffdb34121b1c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4b83fcad48dc78e0d0753d4441ffdb34121b1c2/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1581ed8fc752417a02d7664067e6895d2f448eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1581ed8fc752417a02d7664067e6895d2f448eb", "html_url": "https://github.com/rust-lang/rust/commit/f1581ed8fc752417a02d7664067e6895d2f448eb"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "688be7aedea38a17ebfd5b456c9081f1adc2caa0", "filename": "src/doc/rustdoc/src/how-to-write-documentation.md", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e4b83fcad48dc78e0d0753d4441ffdb34121b1c2/src%2Fdoc%2Frustdoc%2Fsrc%2Fhow-to-write-documentation.md", "raw_url": "https://github.com/rust-lang/rust/raw/e4b83fcad48dc78e0d0753d4441ffdb34121b1c2/src%2Fdoc%2Frustdoc%2Fsrc%2Fhow-to-write-documentation.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fhow-to-write-documentation.md?ref=e4b83fcad48dc78e0d0753d4441ffdb34121b1c2", "patch": "@@ -101,7 +101,7 @@ what an item is, how it is used, and for what purpose it exists.\n Let's see an example coming from the [standard library] by taking a look at the\n [`std::env::args()`][env::args] function:\n \n-``````text\n+``````markdown\n Returns the arguments which this program was started with (normally passed\n via the command line).\n \n@@ -135,7 +135,7 @@ for argument in env::args() {\n \n Everything before the first empty line will be reused to describe the component\n in searches and module overviews.  For example, the function `std::env::args()`\n-above will be shown on the [`std::env`] module documentation.  It is good\n+above will be shown on the [`std::env`] module documentation. It is good\n practice to keep the summary to one line: concise writing is a goal of good\n documentation.\n \n@@ -153,9 +153,10 @@ and finally provides a code example.\n \n ## Markdown\n \n-`rustdoc` uses the [CommonMark markdown specification]. You might be\n-interested into taking a look at their website to see what's possible to do.\n- - [commonmark quick reference]\n+`rustdoc` uses the [CommonMark Markdown specification]. You might be\n+interested in taking a look at their website to see what's possible:\n+\n+ - [CommonMark quick reference]\n  - [current spec]\n \n In addition to the standard CommonMark syntax, `rustdoc` supports several\n@@ -240,6 +241,21 @@ This will render as\n \n See the specification for the [task list extension] for more details.\n \n+### Smart punctuation\n+\n+Some ASCII punctuation sequences will be automatically turned into fancy Unicode\n+characters:\n+\n+| ASCII sequence | Unicode |\n+|----------------|---------|\n+| `--`           | \u2013       |\n+| `---`          | \u2014       |\n+| `...`          | \u2026       |\n+| `\"`            | \u201c or \u201d, depending on context |\n+| `'`            | \u2018 or \u2019, depending on context |\n+\n+So, no need to manually enter those Unicode characters!\n+\n [`backtrace`]: https://docs.rs/backtrace/0.3.50/backtrace/\n [commonmark markdown specification]: https://commonmark.org/\n [commonmark quick reference]: https://commonmark.org/help/"}]}