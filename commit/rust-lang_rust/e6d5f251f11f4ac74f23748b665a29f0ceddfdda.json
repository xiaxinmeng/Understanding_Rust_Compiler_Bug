{"sha": "e6d5f251f11f4ac74f23748b665a29f0ceddfdda", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ZDVmMjUxZjExZjRhYzc0ZjIzNzQ4YjY2NWEyOWYwY2VkZGZkZGE=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-01-29T23:50:27Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-01-30T20:26:49Z"}, "message": "Fix #57730", "tree": {"sha": "1d627ddc1ec39db1fc511be7c285103b43098232", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d627ddc1ec39db1fc511be7c285103b43098232"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6d5f251f11f4ac74f23748b665a29f0ceddfdda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6d5f251f11f4ac74f23748b665a29f0ceddfdda", "html_url": "https://github.com/rust-lang/rust/commit/e6d5f251f11f4ac74f23748b665a29f0ceddfdda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6d5f251f11f4ac74f23748b665a29f0ceddfdda/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1c3c4e95b69dfeaca5c5db6c622d7f90ad30a54", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1c3c4e95b69dfeaca5c5db6c622d7f90ad30a54", "html_url": "https://github.com/rust-lang/rust/commit/c1c3c4e95b69dfeaca5c5db6c622d7f90ad30a54"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "bad1367a89af447e0b7d4f2025f183b2a9d1a261", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6d5f251f11f4ac74f23748b665a29f0ceddfdda/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6d5f251f11f4ac74f23748b665a29f0ceddfdda/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=e6d5f251f11f4ac74f23748b665a29f0ceddfdda", "patch": "@@ -519,7 +519,7 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                 if let Some(ref type_) = data.output {\n                     // `-> Foo` syntax is essentially an associated type binding,\n                     // so it is also allowed to contain nested `impl Trait`.\n-                    self.with_impl_trait(None, |this| visit::walk_ty(this, type_));\n+                    self.with_impl_trait(None, |this| this.visit_ty(type_));\n                 }\n             }\n         }"}]}