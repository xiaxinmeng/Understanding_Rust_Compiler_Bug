{"sha": "d347d5a76234dcbaf576620732c93dd876cc2e99", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNDdkNWE3NjIzNGRjYmFmNTc2NjIwNzMyYzkzZGQ4NzZjYzJlOTk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-27T23:11:45Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T22:01:58Z"}, "message": "libsyntax: De-`@mut` `TtFrame`", "tree": {"sha": "d4a4887a58ea114b764d930aedb27c1dc99bff17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4a4887a58ea114b764d930aedb27c1dc99bff17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d347d5a76234dcbaf576620732c93dd876cc2e99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d347d5a76234dcbaf576620732c93dd876cc2e99", "html_url": "https://github.com/rust-lang/rust/commit/d347d5a76234dcbaf576620732c93dd876cc2e99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d347d5a76234dcbaf576620732c93dd876cc2e99/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7f7482e792936f22f1123759b7df57358d66c1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7f7482e792936f22f1123759b7df57358d66c1c", "html_url": "https://github.com/rust-lang/rust/commit/a7f7482e792936f22f1123759b7df57358d66c1c"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "060f6b8a8b92b384c85cf92e30ad6c0a880433d2", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d347d5a76234dcbaf576620732c93dd876cc2e99/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d347d5a76234dcbaf576620732c93dd876cc2e99/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=d347d5a76234dcbaf576620732c93dd876cc2e99", "patch": "@@ -27,13 +27,13 @@ struct TtFrame {\n     idx: Cell<uint>,\n     dotdotdoted: bool,\n     sep: Option<Token>,\n-    up: Option<@mut TtFrame>,\n+    up: Option<@TtFrame>,\n }\n \n pub struct TtReader {\n     sp_diag: @SpanHandler,\n     // the unzipped tree:\n-    priv stack: RefCell<@mut TtFrame>,\n+    priv stack: RefCell<@TtFrame>,\n     /* for MBE-style macro transcription */\n     priv interpolations: RefCell<HashMap<Ident, @named_match>>,\n     priv repeat_idx: RefCell<~[uint]>,\n@@ -52,7 +52,7 @@ pub fn new_tt_reader(sp_diag: @SpanHandler,\n                      -> @TtReader {\n     let r = @TtReader {\n         sp_diag: sp_diag,\n-        stack: RefCell::new(@mut TtFrame {\n+        stack: RefCell::new(@TtFrame {\n             forest: @src,\n             idx: Cell::new(0u),\n             dotdotdoted: false,\n@@ -73,8 +73,8 @@ pub fn new_tt_reader(sp_diag: @SpanHandler,\n     return r;\n }\n \n-fn dup_tt_frame(f: @mut TtFrame) -> @mut TtFrame {\n-    @mut TtFrame {\n+fn dup_tt_frame(f: @TtFrame) -> @TtFrame {\n+    @TtFrame {\n         forest: @(*f.forest).clone(),\n         idx: f.idx.clone(),\n         dotdotdoted: f.dotdotdoted,\n@@ -233,7 +233,7 @@ pub fn tt_next_token(r: &TtReader) -> TokenAndSpan {\n         // XXX(pcwalton): Bad copy.\n         match r.stack.get().forest[r.stack.get().idx.get()].clone() {\n           tt_delim(tts) => {\n-            r.stack.set(@mut TtFrame {\n+            r.stack.set(@TtFrame {\n                 forest: tts,\n                 idx: Cell::new(0u),\n                 dotdotdoted: false,\n@@ -280,7 +280,7 @@ pub fn tt_next_token(r: &TtReader) -> TokenAndSpan {\n                         let mut repeat_len = r.repeat_len.borrow_mut();\n                         repeat_len.get().push(len);\n                         repeat_idx.get().push(0u);\n-                        r.stack.set(@mut TtFrame {\n+                        r.stack.set(@TtFrame {\n                             forest: tts,\n                             idx: Cell::new(0u),\n                             dotdotdoted: true,"}]}