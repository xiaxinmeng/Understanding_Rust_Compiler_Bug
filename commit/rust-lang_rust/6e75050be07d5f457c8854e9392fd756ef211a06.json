{"sha": "6e75050be07d5f457c8854e9392fd756ef211a06", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNzUwNTBiZTA3ZDVmNDU3Yzg4NTRlOTM5MmZkNzU2ZWYyMTFhMDY=", "commit": {"author": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2018-10-19T11:55:06Z"}, "committer": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2018-10-19T11:55:06Z"}, "message": "new_ret_no_self correct linting of tuple return types", "tree": {"sha": "249cb5050505cb7811d52d303c0995b2d0677b77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/249cb5050505cb7811d52d303c0995b2d0677b77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e75050be07d5f457c8854e9392fd756ef211a06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e75050be07d5f457c8854e9392fd756ef211a06", "html_url": "https://github.com/rust-lang/rust/commit/6e75050be07d5f457c8854e9392fd756ef211a06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e75050be07d5f457c8854e9392fd756ef211a06/comments", "author": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1d0343749bdc87e5cbbe7f1aeaa9d2a2c9dbc5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1d0343749bdc87e5cbbe7f1aeaa9d2a2c9dbc5b", "html_url": "https://github.com/rust-lang/rust/commit/b1d0343749bdc87e5cbbe7f1aeaa9d2a2c9dbc5b"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "6e0154875619415b9ced9f558093448b60506282", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6e75050be07d5f457c8854e9392fd756ef211a06/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e75050be07d5f457c8854e9392fd756ef211a06/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=6e75050be07d5f457c8854e9392fd756ef211a06", "patch": "@@ -936,6 +936,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n         if let hir::ImplItemKind::Method(_, _) = implitem.node {\n             let ret_ty = return_ty(cx, implitem.id);\n \n+//            println!(\"ret_ty: {:?}\", ret_ty);\n+//            println!(\"ret_ty.sty {:?}\", ret_ty.sty);\n+\n             // if return type is impl trait\n             if let TyKind::Opaque(def_id, _) = ret_ty.sty {\n \n@@ -955,6 +958,14 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                 }\n             }\n \n+            // if return type is tuple\n+            if let TyKind::Tuple(list) = ret_ty.sty {\n+                // then at least one of the types in the tuple must be Self\n+                for ret_type in list {\n+                    if same_tys(cx, ty, ret_type) { return; }\n+                }\n+            }\n+\n             if name == \"new\" && !same_tys(cx, ret_ty, ty) {\n                 span_lint(cx,\n                           NEW_RET_NO_SELF,"}, {"sha": "7773114967801503d86bc1941e19659a264e790f", "filename": "tests/ui/new_ret_no_self.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6e75050be07d5f457c8854e9392fd756ef211a06/tests%2Fui%2Fnew_ret_no_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e75050be07d5f457c8854e9392fd756ef211a06/tests%2Fui%2Fnew_ret_no_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_ret_no_self.rs?ref=6e75050be07d5f457c8854e9392fd756ef211a06", "patch": "@@ -91,3 +91,31 @@ impl V {\n         unimplemented!();\n     }\n }\n+\n+struct TupleReturnerOk;\n+\n+impl TupleReturnerOk {\n+    // should not trigger lint\n+    pub fn new() -> (Self, u32) { unimplemented!(); }\n+}\n+\n+struct TupleReturnerOk2;\n+\n+impl TupleReturnerOk2 {\n+    // should not trigger lint (it doesn't matter which element in the tuple is Self)\n+    pub fn new() -> (u32, Self) { unimplemented!(); }\n+}\n+\n+struct TupleReturnerOk3;\n+\n+impl TupleReturnerOk3 {\n+    // should not trigger lint (tuple can contain multiple Self)\n+    pub fn new() -> (Self, Self) { unimplemented!(); }\n+}\n+\n+struct TupleReturnerBad;\n+\n+impl TupleReturnerBad {\n+    // should trigger lint\n+    pub fn new() -> (u32, u32) { unimplemented!(); }\n+}"}, {"sha": "6f8e2d136a78622a18b2432db905576d61cdf295", "filename": "tests/ui/new_ret_no_self.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6e75050be07d5f457c8854e9392fd756ef211a06/tests%2Fui%2Fnew_ret_no_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6e75050be07d5f457c8854e9392fd756ef211a06/tests%2Fui%2Fnew_ret_no_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_ret_no_self.stderr?ref=6e75050be07d5f457c8854e9392fd756ef211a06", "patch": "@@ -24,5 +24,11 @@ error: methods called `new` usually return `Self`\n 92 | |     }\n    | |_____^\n \n-error: aborting due to 3 previous errors\n+error: methods called `new` usually return `Self`\n+   --> $DIR/new_ret_no_self.rs:120:5\n+    |\n+120 |     pub fn new() -> (u32, u32) { unimplemented!(); }\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n "}]}