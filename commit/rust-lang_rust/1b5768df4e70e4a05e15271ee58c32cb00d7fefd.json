{"sha": "1b5768df4e70e4a05e15271ee58c32cb00d7fefd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiNTc2OGRmNGU3MGU0YTA1ZTE1MjcxZWU1OGMzMmNiMDBkN2ZlZmQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-03-24T17:36:01Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-03-30T12:18:02Z"}, "message": "document `diverges` more correctly", "tree": {"sha": "0465c18fa49d2eb199af243947e868cb5d17f205", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0465c18fa49d2eb199af243947e868cb5d17f205"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b5768df4e70e4a05e15271ee58c32cb00d7fefd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b5768df4e70e4a05e15271ee58c32cb00d7fefd", "html_url": "https://github.com/rust-lang/rust/commit/1b5768df4e70e4a05e15271ee58c32cb00d7fefd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b5768df4e70e4a05e15271ee58c32cb00d7fefd/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8450add8bede7bc5119457e37bbbcc95a5e8b121", "url": "https://api.github.com/repos/rust-lang/rust/commits/8450add8bede7bc5119457e37bbbcc95a5e8b121", "html_url": "https://github.com/rust-lang/rust/commit/8450add8bede7bc5119457e37bbbcc95a5e8b121"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "aaa3cf0f29e74c389bc2f5a65235b505a348dbd5", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1b5768df4e70e4a05e15271ee58c32cb00d7fefd/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b5768df4e70e4a05e15271ee58c32cb00d7fefd/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=1b5768df4e70e4a05e15271ee58c32cb00d7fefd", "patch": "@@ -454,11 +454,19 @@ pub struct FnCtxt<'a, 'gcx: 'a+'tcx, 'tcx: 'a> {\n     ps: RefCell<UnsafetyState>,\n \n     /// Whether the last checked node generates a divergence (e.g.,\n-    /// `return` will set this to Always). In general, this is\n-    /// typically set to *Maybe* on the way **down** the tree, and\n-    /// then values are propagated **up** the tree. In a block, we\n-    /// combine the results from statements and propagate the\n-    /// end-result up.\n+    /// `return` will set this to Always). In general, when entering\n+    /// an expression or other node in the tree, the initial value\n+    /// indicates whether prior parts of the containing expression may\n+    /// have diverged. It is then typically set to `Maybe` (and the\n+    /// old value remembered) for processing the subparts of the\n+    /// current expression. As each subpart is processed, they may set\n+    /// the flag to `Always` etc.  Finally, at the end, we take the\n+    /// result and \"union\" it with the original value, so that when we\n+    /// return the flag indicates if any subpart of the the parent\n+    /// expression (up to and including this part) has diverged.  So,\n+    /// if you read it after evaluating a subexpression `X`, the value\n+    /// you get indicates whether any subexpression that was\n+    /// evaluating up to and including `X` diverged.\n     ///\n     /// We use this flag for two purposes:\n     ///"}]}