{"sha": "4dc8fe90836c622e57293c1262a9f7728e5edfc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYzhmZTkwODM2YzYyMmU1NzI5M2MxMjYyYTlmNzcyOGU1ZWRmYzg=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-06-27T19:37:24Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-04T13:31:56Z"}, "message": "Store positive instead of negative fail_fast.\n\nThis makes later negation much easier to interpret.", "tree": {"sha": "afd6d958367c310f9ab3d981f6c98a7911a64ec3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afd6d958367c310f9ab3d981f6c98a7911a64ec3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dc8fe90836c622e57293c1262a9f7728e5edfc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dc8fe90836c622e57293c1262a9f7728e5edfc8", "html_url": "https://github.com/rust-lang/rust/commit/4dc8fe90836c622e57293c1262a9f7728e5edfc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dc8fe90836c622e57293c1262a9f7728e5edfc8/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "712bd0d841469f8ed42d555ed714fee06beb14fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/712bd0d841469f8ed42d555ed714fee06beb14fa", "html_url": "https://github.com/rust-lang/rust/commit/712bd0d841469f8ed42d555ed714fee06beb14fa"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "1ee33c1f4657c29c2d4a4f4169bcf7b14ce087b7", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4dc8fe90836c622e57293c1262a9f7728e5edfc8/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dc8fe90836c622e57293c1262a9f7728e5edfc8/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=4dc8fe90836c622e57293c1262a9f7728e5edfc8", "patch": "@@ -59,7 +59,7 @@ impl fmt::Display for TestKind {\n }\n \n fn try_run(build: &Build, cmd: &mut Command) {\n-    if build.flags.cmd.no_fail_fast() {\n+    if !build.fail_fast {\n         if !build.try_run(cmd) {\n             let failures = build.delayed_failures.get();\n             build.delayed_failures.set(failures + 1);\n@@ -70,7 +70,7 @@ fn try_run(build: &Build, cmd: &mut Command) {\n }\n \n fn try_run_quiet(build: &Build, cmd: &mut Command) {\n-    if build.flags.cmd.no_fail_fast() {\n+    if !build.fail_fast {\n         if !build.try_run_quiet(cmd) {\n             let failures = build.delayed_failures.get();\n             build.delayed_failures.set(failures + 1);\n@@ -128,7 +128,7 @@ pub fn cargo(build: &Build, stage: u32, host: &str) {\n \n     let mut cargo = build.cargo(compiler, Mode::Tool, host, \"test\");\n     cargo.arg(\"--manifest-path\").arg(build.src.join(\"src/tools/cargo/Cargo.toml\"));\n-    if build.flags.cmd.no_fail_fast() {\n+    if !build.fail_fast {\n         cargo.arg(\"--no-fail-fast\");\n     }\n \n@@ -448,7 +448,7 @@ pub fn krate(build: &Build,\n     cargo.arg(\"--manifest-path\")\n          .arg(build.src.join(path).join(\"Cargo.toml\"))\n          .arg(\"--features\").arg(features);\n-    if test_kind.subcommand() == \"test\" && build.flags.cmd.no_fail_fast() {\n+    if test_kind.subcommand() == \"test\" && !build.fail_fast {\n         cargo.arg(\"--no-fail-fast\");\n     }\n \n@@ -669,7 +669,7 @@ pub fn bootstrap(build: &Build) {\n        .env(\"CARGO_TARGET_DIR\", build.out.join(\"bootstrap\"))\n        .env(\"RUSTC_BOOTSTRAP\", \"1\")\n        .env(\"RUSTC\", &build.initial_rustc);\n-    if build.flags.cmd.no_fail_fast() {\n+    if !build.fail_fast {\n         cmd.arg(\"--no-fail-fast\");\n     }\n     cmd.arg(\"--\").args(&build.flags.cmd.test_args());"}, {"sha": "593b06517585ab0954abe30d23770ee6adc35bd0", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4dc8fe90836c622e57293c1262a9f7728e5edfc8/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dc8fe90836c622e57293c1262a9f7728e5edfc8/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=4dc8fe90836c622e57293c1262a9f7728e5edfc8", "patch": "@@ -61,7 +61,7 @@ pub enum Subcommand {\n     Test {\n         paths: Vec<PathBuf>,\n         test_args: Vec<String>,\n-        no_fail_fast: bool,\n+        fail_fast: bool,\n     },\n     Bench {\n         paths: Vec<PathBuf>,\n@@ -278,7 +278,7 @@ Arguments:\n                 Subcommand::Test {\n                     paths: paths,\n                     test_args: matches.opt_strs(\"test-args\"),\n-                    no_fail_fast: matches.opt_present(\"no-fail-fast\"),\n+                    fail_fast: !matches.opt_present(\"no-fail-fast\"),\n                 }\n             }\n             \"bench\" => {\n@@ -354,9 +354,9 @@ impl Subcommand {\n         }\n     }\n \n-    pub fn no_fail_fast(&self) -> bool {\n+    pub fn fail_fast(&self) -> bool {\n         match *self {\n-            Subcommand::Test { no_fail_fast, .. } => no_fail_fast,\n+            Subcommand::Test { fail_fast, .. } => fail_fast,\n             _ => false,\n         }\n     }"}, {"sha": "978e1d2be162cac705e18b0dd94c1a20ce2e74a0", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4dc8fe90836c622e57293c1262a9f7728e5edfc8/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dc8fe90836c622e57293c1262a9f7728e5edfc8/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=4dc8fe90836c622e57293c1262a9f7728e5edfc8", "patch": "@@ -167,6 +167,7 @@ pub struct Build {\n     cargo_info: channel::GitInfo,\n     rls_info: channel::GitInfo,\n     local_rebuild: bool,\n+    fail_fast: bool,\n \n     // Stage 0 (downloaded) compiler and cargo or their local rust equivalents.\n     initial_rustc: PathBuf,\n@@ -240,12 +241,12 @@ impl Build {\n         let rust_info = channel::GitInfo::new(&src);\n         let cargo_info = channel::GitInfo::new(&src.join(\"src/tools/cargo\"));\n         let rls_info = channel::GitInfo::new(&src.join(\"src/tools/rls\"));\n-        let src_is_git = src.join(\".git\").exists();\n \n         Build {\n             initial_rustc: config.initial_rustc.clone(),\n             initial_cargo: config.initial_cargo.clone(),\n             local_rebuild: config.local_rebuild,\n+            fail_fast: flags.cmd.fail_fast(),\n \n             flags: flags,\n             config: config,"}]}