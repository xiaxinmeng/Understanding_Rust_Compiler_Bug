{"sha": "28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4ZTllOGQ0Y2ZkZjJhMzM0Y2RlNmRiN2QxMGU3YWNiOGY1ZmU4YjE=", "commit": {"author": {"name": "Aleksei Sidorov", "email": "aleksei.sidorov@xdev.re", "date": "2019-06-24T10:50:34Z"}, "committer": {"name": "Aleksei Sidorov", "email": "aleksei.sidorov@xdev.re", "date": "2019-06-24T10:50:34Z"}, "message": "Fix code after \"apply suggestions\"", "tree": {"sha": "fc7f452477d1483969ea45966d43e4545184a888", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc7f452477d1483969ea45966d43e4545184a888"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1", "html_url": "https://github.com/rust-lang/rust/commit/28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1/comments", "author": null, "committer": null, "parents": [{"sha": "c40ee089f221aa1be74614d7ad875488030e55ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/c40ee089f221aa1be74614d7ad875488030e55ff", "html_url": "https://github.com/rust-lang/rust/commit/c40ee089f221aa1be74614d7ad875488030e55ff"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "ac2ba82e3eff1898595f91f82c85f1e37fefe65c", "filename": "editors/code/package.json", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1", "patch": "@@ -201,15 +201,15 @@\n                     ],\n                     \"description\": \"Whether to run `cargo watch` on startup\"\n                 },\n-                \"rust-analyzer.cargo-watch.command-arguments\": {\n+                \"rust-analyzer.cargo-watch.arguments\": {\n                     \"type\": \"string\",\n                     \"description\": \"`cargo-watch` arguments. (e.g: `--features=\\\"shumway,pdf\\\"` will run as `cargo watch -x \\\"check --features=\\\"shumway,pdf\\\"\\\"` )\",\n                     \"default\": \"\"\n                 },\n                 \"rust-analyzer.cargo-watch.command\": {\n                     \"type\": \"string\",\n                     \"description\": \"`cargo-watch` command. (e.g: `clippy` will run as `cargo watch -x clippy` )\",\n-                    \"default\": \"check\"                    \n+                    \"default\": \"check\"\n                 },\n                 \"rust-analyzer.trace.server\": {\n                     \"type\": \"string\","}, {"sha": "13adf4c10bd76b11ebdb70474772af6787eb5cda", "filename": "editors/code/src/commands/cargo_watch.ts", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts", "raw_url": "https://github.com/rust-lang/rust/raw/28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts?ref=28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1", "patch": "@@ -43,7 +43,9 @@ export class CargoWatchProvider implements vscode.Disposable {\n         this.diagnosticCollection = vscode.languages.createDiagnosticCollection(\n             'rustc'\n         );\n-        this.statusDisplay = new StatusDisplay(Server.config.cargoWatchOptions.checkCommand);\n+        this.statusDisplay = new StatusDisplay(\n+            Server.config.cargoWatchOptions.command\n+        );\n         this.outputChannel = vscode.window.createOutputChannel(\n             'Cargo Watch Trace'\n         );\n@@ -57,10 +59,12 @@ export class CargoWatchProvider implements vscode.Disposable {\n             return;\n         }\n \n-        let args = Server.config.cargoWatchOptions.checkCommand + ' --all-targets --message-format json';\n-        if (Server.config.cargoWatchOptions.checkArguments.length > 0) {\n+        let args =\n+            Server.config.cargoWatchOptions.command +\n+            ' --all-targets --message-format json';\n+        if (Server.config.cargoWatchOptions.command.length > 0) {\n             // Excape the double quote string:\n-            args += ' ' + Server.config.cargoWatchOptions.checkArguments;\n+            args += ' ' + Server.config.cargoWatchOptions.arguments;\n         }\n         // Windows handles arguments differently than the unix-likes, so we need to wrap the args in double quotes\n         if (process.platform === 'win32') {"}, {"sha": "6c1f9041bad336fc642beb76a24e4505b05888f0", "filename": "editors/code/src/commands/watch_status.ts", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1/editors%2Fcode%2Fsrc%2Fcommands%2Fwatch_status.ts", "raw_url": "https://github.com/rust-lang/rust/raw/28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1/editors%2Fcode%2Fsrc%2Fcommands%2Fwatch_status.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fwatch_status.ts?ref=28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1", "patch": "@@ -30,7 +30,9 @@ export class StatusDisplay implements vscode.Disposable {\n                         this.packageName\n                     }] ${this.frame()}`;\n                 } else {\n-                    this.statusBarItem!.text = `cargo ${this.command} ${this.frame()}`;\n+                    this.statusBarItem!.text = `cargo ${\n+                        this.command\n+                    } ${this.frame()}`;\n                 }\n             }, 300);\n "}, {"sha": "10e98d75342bef1eca5dd607bb987e3a24f48ec7", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=28e9e8d4cfdf2a334cde6db7d10e7acb8f5fe8b1", "patch": "@@ -25,8 +25,8 @@ export class Config {\n     public cargoWatchOptions: CargoWatchOptions = {\n         enableOnStartup: 'ask',\n         trace: 'off',\n-        checkArguments: '',\n-        checkCommand: ''\n+        arguments: '',\n+        command: ''\n     };\n \n     private prevEnhancedTyping: null | boolean = null;\n@@ -107,16 +107,16 @@ export class Config {\n             );\n         }\n \n-        if (config.has('cargo-watch.check-arguments')) {\n-            this.cargoWatchOptions.checkArguments = config.get<string>(\n-                'cargo-watch.check-arguments',\n+        if (config.has('cargo-watch.arguments')) {\n+            this.cargoWatchOptions.arguments = config.get<string>(\n+                'cargo-watch.arguments',\n                 ''\n             );\n         }\n \n-        if (config.has('cargo-watch.check-command')) {\n-            this.cargoWatchOptions.checkCommand = config.get<string>(\n-                'cargo-watch.check-command',\n+        if (config.has('cargo-watch.command')) {\n+            this.cargoWatchOptions.command = config.get<string>(\n+                'cargo-watch.command',\n                 ''\n             );\n         }"}]}