{"sha": "bab6911f8a118fc342514bd3223158f10c8a8c32", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYjY5MTFmOGExMThmYzM0MjUxNGJkMzIyMzE1OGYxMGM4YThjMzI=", "commit": {"author": {"name": "Samuel Holland", "email": "samuel@sholland.org", "date": "2017-08-22T21:24:29Z"}, "committer": {"name": "Samuel Holland", "email": "samuel@sholland.org", "date": "2017-08-22T21:24:29Z"}, "message": "Tell the linker when we want to link a static executable\n\nIf the C runtime is linked statically, explicitly tell the linker that\nthe executable should be static.", "tree": {"sha": "cac23be5daccf1d3cc6ee52ea1768431b8ce9bf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cac23be5daccf1d3cc6ee52ea1768431b8ce9bf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bab6911f8a118fc342514bd3223158f10c8a8c32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bab6911f8a118fc342514bd3223158f10c8a8c32", "html_url": "https://github.com/rust-lang/rust/commit/bab6911f8a118fc342514bd3223158f10c8a8c32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bab6911f8a118fc342514bd3223158f10c8a8c32/comments", "author": {"login": "smaeul", "id": 5846453, "node_id": "MDQ6VXNlcjU4NDY0NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5846453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smaeul", "html_url": "https://github.com/smaeul", "followers_url": "https://api.github.com/users/smaeul/followers", "following_url": "https://api.github.com/users/smaeul/following{/other_user}", "gists_url": "https://api.github.com/users/smaeul/gists{/gist_id}", "starred_url": "https://api.github.com/users/smaeul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smaeul/subscriptions", "organizations_url": "https://api.github.com/users/smaeul/orgs", "repos_url": "https://api.github.com/users/smaeul/repos", "events_url": "https://api.github.com/users/smaeul/events{/privacy}", "received_events_url": "https://api.github.com/users/smaeul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smaeul", "id": 5846453, "node_id": "MDQ6VXNlcjU4NDY0NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/5846453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smaeul", "html_url": "https://github.com/smaeul", "followers_url": "https://api.github.com/users/smaeul/followers", "following_url": "https://api.github.com/users/smaeul/following{/other_user}", "gists_url": "https://api.github.com/users/smaeul/gists{/gist_id}", "starred_url": "https://api.github.com/users/smaeul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smaeul/subscriptions", "organizations_url": "https://api.github.com/users/smaeul/orgs", "repos_url": "https://api.github.com/users/smaeul/repos", "events_url": "https://api.github.com/users/smaeul/events{/privacy}", "received_events_url": "https://api.github.com/users/smaeul/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "054f31086814281fc3045bfdcc444344f0faf244", "url": "https://api.github.com/repos/rust-lang/rust/commits/054f31086814281fc3045bfdcc444344f0faf244", "html_url": "https://github.com/rust-lang/rust/commit/054f31086814281fc3045bfdcc444344f0faf244"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "4e211d83cff3e79551168f2aac1d2dce38d30daf", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bab6911f8a118fc342514bd3223158f10c8a8c32/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bab6911f8a118fc342514bd3223158f10c8a8c32/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=bab6911f8a118fc342514bd3223158f10c8a8c32", "patch": "@@ -966,11 +966,13 @@ fn link_args(cmd: &mut Linker,\n     add_upstream_rust_crates(cmd, sess, crate_type, tmpdir);\n     add_upstream_native_libraries(cmd, sess, crate_type);\n \n-    // # Telling the linker what we're doing\n-\n+    // Tell the linker what we're doing.\n     if crate_type != config::CrateTypeExecutable {\n         cmd.build_dylib(out_filename);\n     }\n+    if crate_type == config::CrateTypeExecutable && sess.crt_static() {\n+        cmd.build_static_executable();\n+    }\n \n     // FIXME (#2397): At some point we want to rpath our guesses as to\n     // where extern libraries might live, based on the"}, {"sha": "9b0a5e3f4a5b11603119d84d516d147e5cd843d0", "filename": "src/librustc_trans/back/linker.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bab6911f8a118fc342514bd3223158f10c8a8c32/src%2Flibrustc_trans%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bab6911f8a118fc342514bd3223158f10c8a8c32/src%2Flibrustc_trans%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flinker.rs?ref=bab6911f8a118fc342514bd3223158f10c8a8c32", "patch": "@@ -110,6 +110,7 @@ pub trait Linker {\n     fn debuginfo(&mut self);\n     fn no_default_libraries(&mut self);\n     fn build_dylib(&mut self, out_filename: &Path);\n+    fn build_static_executable(&mut self);\n     fn args(&mut self, args: &[String]);\n     fn export_symbols(&mut self, tmpdir: &Path, crate_type: CrateType);\n     fn subsystem(&mut self, subsystem: &str);\n@@ -179,6 +180,7 @@ impl<'a> Linker for GccLinker<'a> {\n     fn position_independent_executable(&mut self) { self.cmd.arg(\"-pie\"); }\n     fn partial_relro(&mut self) { self.linker_arg(\"-z,relro\"); }\n     fn full_relro(&mut self) { self.linker_arg(\"-z,relro,-z,now\"); }\n+    fn build_static_executable(&mut self) { self.cmd.arg(\"-static\"); }\n     fn args(&mut self, args: &[String]) { self.cmd.args(args); }\n \n     fn link_rust_dylib(&mut self, lib: &str, _path: &Path) {\n@@ -396,6 +398,10 @@ impl<'a> Linker for MsvcLinker<'a> {\n         self.cmd.arg(arg);\n     }\n \n+    fn build_static_executable(&mut self) {\n+        // noop\n+    }\n+\n     fn gc_sections(&mut self, _keep_metadata: bool) {\n         // MSVC's ICF (Identical COMDAT Folding) link optimization is\n         // slow for Rust and thus we disable it by default when not in\n@@ -683,6 +689,10 @@ impl<'a> Linker for EmLinker<'a> {\n         bug!(\"building dynamic library is unsupported on Emscripten\")\n     }\n \n+    fn build_static_executable(&mut self) {\n+        // noop\n+    }\n+\n     fn export_symbols(&mut self, _tmpdir: &Path, crate_type: CrateType) {\n         let symbols = &self.info.exports[&crate_type];\n "}]}