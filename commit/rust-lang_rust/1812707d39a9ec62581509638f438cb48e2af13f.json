{"sha": "1812707d39a9ec62581509638f438cb48e2af13f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MTI3MDdkMzlhOWVjNjI1ODE1MDk2MzhmNDM4Y2I0OGUyYWYxM2Y=", "commit": {"author": {"name": "Dale Wijnand", "email": "dale.wijnand@gmail.com", "date": "2018-08-13T07:23:07Z"}, "committer": {"name": "Dale Wijnand", "email": "dale.wijnand@gmail.com", "date": "2018-08-13T10:49:57Z"}, "message": "Use utils::span_lint_and_sugg in default_hash_types", "tree": {"sha": "3a83bd172101ada871a59806c60c7221a77cbf37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a83bd172101ada871a59806c60c7221a77cbf37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1812707d39a9ec62581509638f438cb48e2af13f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEERGS9JmrgEHKCFADQTyVuPRUd9e8FAltxYlUACgkQTyVuPRUd\n9e/rwxAAydjuFF/addA4jOAGXt9/oUtLEI0/QtZUnQMyLOx7Lw8cEmBzdkDUea3r\nwq8W8VB1XyNrzeblfKyAtQuqErwLjxc08aVWCTnnHb3S+OnJms1BpLSoUL18MkUC\nTQBp7L+JHUklTNUKUv//TZFU6qZRYTjXPL0gEYvZL7KWCDuOVcMOjPLXIJLvyU8Q\nWLQgftSQ6AcgdhlahU914X/Gul4fnLQ0s8UYT4LBttdf9nvgehDAYzGPfMEKhOHm\nXFAJNBhvBgo6VTWdxr2rSpnNw0gWoEpjO+V8wIqgCpibUbVimcBx5N8SCRQayp29\nTKZoniardCH0HiK5aLIaFJlSF8c6n5rmilXmyti4PaynnEp92xgsfD0WTlVsnBcW\nFb+jkk1fUf6LpWRI4orCdPkqyusLq5x3DQgMq5sAMbmhH9Y0OTuen3Y7SONyMFti\nT4jVtyiXVjECtTM/FjPJnh0IMF6Ej7kk5/JOeIhYpIF9Fe6/LHvwKOqyKCVIADaV\nXyfG5PqRCEExBE832VNZNyjKdzuKALWGzsAZTfXTgJsl1ttko/lg9bhr2/bsEAvb\nLF9+XlEnW1mtC0DEGDxvhnpmc5nyWMByU5z4vdYWtoEEb2ygNCa4HnHTrZP7Psst\n1Uh8TBC7cJH+1z8LN11PAEmSw/wN/CGNOR21tw9dtjbsUlkH8D8=\n=zTJi\n-----END PGP SIGNATURE-----", "payload": "tree 3a83bd172101ada871a59806c60c7221a77cbf37\nparent 8fc425b67681e4beaf0c34dc802f56c7b97bf658\nauthor Dale Wijnand <dale.wijnand@gmail.com> 1534144987 +0100\ncommitter Dale Wijnand <dale.wijnand@gmail.com> 1534157397 +0100\n\nUse utils::span_lint_and_sugg in default_hash_types\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1812707d39a9ec62581509638f438cb48e2af13f", "html_url": "https://github.com/rust-lang/rust/commit/1812707d39a9ec62581509638f438cb48e2af13f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1812707d39a9ec62581509638f438cb48e2af13f/comments", "author": {"login": "dwijnand", "id": 344610, "node_id": "MDQ6VXNlcjM0NDYxMA==", "avatar_url": "https://avatars.githubusercontent.com/u/344610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwijnand", "html_url": "https://github.com/dwijnand", "followers_url": "https://api.github.com/users/dwijnand/followers", "following_url": "https://api.github.com/users/dwijnand/following{/other_user}", "gists_url": "https://api.github.com/users/dwijnand/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwijnand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwijnand/subscriptions", "organizations_url": "https://api.github.com/users/dwijnand/orgs", "repos_url": "https://api.github.com/users/dwijnand/repos", "events_url": "https://api.github.com/users/dwijnand/events{/privacy}", "received_events_url": "https://api.github.com/users/dwijnand/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dwijnand", "id": 344610, "node_id": "MDQ6VXNlcjM0NDYxMA==", "avatar_url": "https://avatars.githubusercontent.com/u/344610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwijnand", "html_url": "https://github.com/dwijnand", "followers_url": "https://api.github.com/users/dwijnand/followers", "following_url": "https://api.github.com/users/dwijnand/following{/other_user}", "gists_url": "https://api.github.com/users/dwijnand/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwijnand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwijnand/subscriptions", "organizations_url": "https://api.github.com/users/dwijnand/orgs", "repos_url": "https://api.github.com/users/dwijnand/repos", "events_url": "https://api.github.com/users/dwijnand/events{/privacy}", "received_events_url": "https://api.github.com/users/dwijnand/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fc425b67681e4beaf0c34dc802f56c7b97bf658", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fc425b67681e4beaf0c34dc802f56c7b97bf658", "html_url": "https://github.com/rust-lang/rust/commit/8fc425b67681e4beaf0c34dc802f56c7b97bf658"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "0da3ad83b847bd66634e9ec78264ca3231fc0950", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1812707d39a9ec62581509638f438cb48e2af13f/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1812707d39a9ec62581509638f438cb48e2af13f/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=1812707d39a9ec62581509638f438cb48e2af13f", "patch": "@@ -4,7 +4,7 @@ use rustc::hir::*;\n use rustc::hir;\n use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_data_structures::fx::FxHashMap;\n-use crate::utils::{match_qpath, paths, span_lint};\n+use crate::utils::{match_qpath, paths, span_lint, span_lint_and_sugg};\n use syntax::symbol::LocalInternedString;\n use syntax::ast::{Crate as AstCrate, Ident, ItemKind, Name};\n use syntax::codemap::Span;\n@@ -247,7 +247,7 @@ impl EarlyLintPass for DefaultHashTypes {\n         let ident_string = ident.to_string();\n         if let Some(replace) = self.map.get(&ident_string) {\n             let msg = format!(\"Prefer {} over {}, it has better performance and we don't need any collision prevention in clippy\", replace, ident_string);\n-            cx.span_lint(DEFAULT_HASH_TYPES, ident.span, &msg);\n+            span_lint_and_sugg(cx, DEFAULT_HASH_TYPES, ident.span, &msg, \"use\", replace.to_owned());\n         }\n     }\n }"}, {"sha": "5e90f84f1db0d5ed7b6e8afbdcfe678e99a2aa9a", "filename": "tests/ui/fxhash.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1812707d39a9ec62581509638f438cb48e2af13f/tests%2Fui%2Ffxhash.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1812707d39a9ec62581509638f438cb48e2af13f/tests%2Fui%2Ffxhash.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffxhash.stderr?ref=1812707d39a9ec62581509638f438cb48e2af13f", "patch": "@@ -2,39 +2,39 @@ error: Prefer FxHashMap over HashMap, it has better performance and we don't nee\n  --> $DIR/fxhash.rs:6:24\n   |\n 6 | use std::collections::{HashMap, HashSet};\n-  |                        ^^^^^^^\n+  |                        ^^^^^^^ help: use: `FxHashMap`\n   |\n   = note: `-D default-hash-types` implied by `-D warnings`\n \n error: Prefer FxHashSet over HashSet, it has better performance and we don't need any collision prevention in clippy\n  --> $DIR/fxhash.rs:6:33\n   |\n 6 | use std::collections::{HashMap, HashSet};\n-  |                                 ^^^^^^^\n+  |                                 ^^^^^^^ help: use: `FxHashSet`\n \n error: Prefer FxHashMap over HashMap, it has better performance and we don't need any collision prevention in clippy\n   --> $DIR/fxhash.rs:10:15\n    |\n 10 |     let _map: HashMap<String, String> = HashMap::default();\n-   |               ^^^^^^^\n+   |               ^^^^^^^ help: use: `FxHashMap`\n \n error: Prefer FxHashMap over HashMap, it has better performance and we don't need any collision prevention in clippy\n   --> $DIR/fxhash.rs:10:41\n    |\n 10 |     let _map: HashMap<String, String> = HashMap::default();\n-   |                                         ^^^^^^^\n+   |                                         ^^^^^^^ help: use: `FxHashMap`\n \n error: Prefer FxHashSet over HashSet, it has better performance and we don't need any collision prevention in clippy\n   --> $DIR/fxhash.rs:11:15\n    |\n 11 |     let _set: HashSet<String> = HashSet::default();\n-   |               ^^^^^^^\n+   |               ^^^^^^^ help: use: `FxHashSet`\n \n error: Prefer FxHashSet over HashSet, it has better performance and we don't need any collision prevention in clippy\n   --> $DIR/fxhash.rs:11:33\n    |\n 11 |     let _set: HashSet<String> = HashSet::default();\n-   |                                 ^^^^^^^\n+   |                                 ^^^^^^^ help: use: `FxHashSet`\n \n error: aborting due to 6 previous errors\n "}]}