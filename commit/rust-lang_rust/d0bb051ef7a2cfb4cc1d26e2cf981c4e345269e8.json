{"sha": "d0bb051ef7a2cfb4cc1d26e2cf981c4e345269e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwYmIwNTFlZjdhMmNmYjRjYzFkMjZlMmNmOTgxYzRlMzQ1MjY5ZTg=", "commit": {"author": {"name": "Emil Gardstr\u00f6m", "email": "emil.gardstrom@gmail.com", "date": "2020-10-16T22:35:06Z"}, "committer": {"name": "Emil Gardstr\u00f6m", "email": "emil.gardstrom@gmail.com", "date": "2020-10-17T08:28:12Z"}, "message": "allow xtask install --client-code[=CLIENT] to specify client", "tree": {"sha": "4ecae58271e5680cced937b4716700c6e86505ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ecae58271e5680cced937b4716700c6e86505ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0bb051ef7a2cfb4cc1d26e2cf981c4e345269e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0bb051ef7a2cfb4cc1d26e2cf981c4e345269e8", "html_url": "https://github.com/rust-lang/rust/commit/d0bb051ef7a2cfb4cc1d26e2cf981c4e345269e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0bb051ef7a2cfb4cc1d26e2cf981c4e345269e8/comments", "author": {"login": "Emilgardis", "id": 1502855, "node_id": "MDQ6VXNlcjE1MDI4NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1502855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Emilgardis", "html_url": "https://github.com/Emilgardis", "followers_url": "https://api.github.com/users/Emilgardis/followers", "following_url": "https://api.github.com/users/Emilgardis/following{/other_user}", "gists_url": "https://api.github.com/users/Emilgardis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Emilgardis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Emilgardis/subscriptions", "organizations_url": "https://api.github.com/users/Emilgardis/orgs", "repos_url": "https://api.github.com/users/Emilgardis/repos", "events_url": "https://api.github.com/users/Emilgardis/events{/privacy}", "received_events_url": "https://api.github.com/users/Emilgardis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Emilgardis", "id": 1502855, "node_id": "MDQ6VXNlcjE1MDI4NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1502855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Emilgardis", "html_url": "https://github.com/Emilgardis", "followers_url": "https://api.github.com/users/Emilgardis/followers", "following_url": "https://api.github.com/users/Emilgardis/following{/other_user}", "gists_url": "https://api.github.com/users/Emilgardis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Emilgardis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Emilgardis/subscriptions", "organizations_url": "https://api.github.com/users/Emilgardis/orgs", "repos_url": "https://api.github.com/users/Emilgardis/repos", "events_url": "https://api.github.com/users/Emilgardis/events{/privacy}", "received_events_url": "https://api.github.com/users/Emilgardis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59483c217662fc5d89ef9da1cb93760e14a48418", "url": "https://api.github.com/repos/rust-lang/rust/commits/59483c217662fc5d89ef9da1cb93760e14a48418", "html_url": "https://github.com/rust-lang/rust/commit/59483c217662fc5d89ef9da1cb93760e14a48418"}], "stats": {"total": 64, "additions": 49, "deletions": 15}, "files": [{"sha": "78a8af7974a2d54a10b46bb437b86ad6cc1ed26e", "filename": "xtask/src/install.rs", "status": "modified", "additions": 40, "deletions": 9, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/d0bb051ef7a2cfb4cc1d26e2cf981c4e345269e8/xtask%2Fsrc%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0bb051ef7a2cfb4cc1d26e2cf981c4e345269e8/xtask%2Fsrc%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Finstall.rs?ref=d0bb051ef7a2cfb4cc1d26e2cf981c4e345269e8", "patch": "@@ -13,8 +13,43 @@ pub struct InstallCmd {\n     pub server: Option<ServerOpt>,\n }\n \n+#[derive(Clone, Copy)]\n pub enum ClientOpt {\n     VsCode,\n+    VsCodeInsiders,\n+    VsCodium,\n+    VsCodeOss,\n+    Any,\n+}\n+\n+impl ClientOpt {\n+    pub const fn as_cmds(&self) -> &'static [&'static str] {\n+        match self {\n+            ClientOpt::VsCode => &[\"code\"],\n+            ClientOpt::VsCodeInsiders => &[\"code-insiders\"],\n+            ClientOpt::VsCodium => &[\"codium\"],\n+            ClientOpt::VsCodeOss => &[\"code-oss\"],\n+            ClientOpt::Any => &[\"code\", \"code-insiders\", \"codium\", \"code-oss\"],\n+        }\n+    }\n+}\n+\n+impl Default for ClientOpt {\n+    fn default() -> Self {\n+        ClientOpt::Any\n+    }\n+}\n+\n+impl std::str::FromStr for ClientOpt {\n+    type Err = anyhow::Error;\n+\n+    fn from_str(s: &str) -> Result<Self, Self::Err> {\n+        [ClientOpt::VsCode, ClientOpt::VsCodeInsiders, ClientOpt::VsCodium, ClientOpt::VsCodeOss]\n+            .iter()\n+            .copied()\n+            .find(|c| [s] == c.as_cmds())\n+            .ok_or_else(|| anyhow::format_err!(\"no such client\"))\n+    }\n }\n \n pub struct ServerOpt {\n@@ -74,17 +109,13 @@ fn fix_path_for_mac() -> Result<()> {\n     Ok(())\n }\n \n-fn install_client(ClientOpt::VsCode: ClientOpt) -> Result<()> {\n-    let _dir = pushd(\"./editors/code\")?;\n+fn install_client(client_opt: ClientOpt) -> Result<()> {\n+    let _dir = pushd(\"./editors/code\");\n \n     let find_code = |f: fn(&str) -> bool| -> Result<&'static str> {\n-        [\"code\", \"code-insiders\", \"codium\", \"code-oss\"]\n-            .iter()\n-            .copied()\n-            .find(|bin| f(bin))\n-            .ok_or_else(|| {\n-                format_err!(\"Can't execute `code --version`. Perhaps it is not in $PATH?\")\n-            })\n+        client_opt.as_cmds().iter().copied().find(|bin| f(bin)).ok_or_else(|| {\n+            format_err!(\"Can't execute `code --version`. Perhaps it is not in $PATH?\")\n+        })\n     };\n \n     let installed_extensions = if cfg!(unix) {"}, {"sha": "62124041df4e6d46de9b855f639a496106effe5a", "filename": "xtask/src/main.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d0bb051ef7a2cfb4cc1d26e2cf981c4e345269e8/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0bb051ef7a2cfb4cc1d26e2cf981c4e345269e8/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=d0bb051ef7a2cfb4cc1d26e2cf981c4e345269e8", "patch": "@@ -16,7 +16,7 @@ use xshell::pushd;\n use xtask::{\n     codegen::{self, Mode},\n     dist::DistCmd,\n-    install::{ClientOpt, InstallCmd, Malloc, ServerOpt},\n+    install::{InstallCmd, Malloc, ServerOpt},\n     metrics::MetricsCmd,\n     pre_cache::PreCacheCmd,\n     pre_commit, project_root,\n@@ -46,10 +46,11 @@ USAGE:\n     cargo xtask install [FLAGS]\n \n FLAGS:\n-        --client-code    Install only VS Code plugin\n-        --server         Install only the language server\n-        --mimalloc       Use mimalloc for server\n-    -h, --help           Prints help information\n+        --client-code[=CLIENT]    Install only VS Code plugin.\n+                                  CLIENT is one of 'code', 'code-insiders', 'codium', or 'code-oss'\n+        --server                  Install only the language server\n+        --mimalloc                Use mimalloc for server\n+    -h, --help                    Prints help information\n         \"\n                 );\n                 return Ok(());\n@@ -67,10 +68,12 @@ FLAGS:\n             let malloc =\n                 if args.contains(\"--mimalloc\") { Malloc::Mimalloc } else { Malloc::System };\n \n+            let client_opt = args.opt_value_from_str(\"--client-code\")?;\n+\n             args.finish()?;\n \n             InstallCmd {\n-                client: if server { None } else { Some(ClientOpt::VsCode) },\n+                client: if server { None } else { Some(client_opt.unwrap_or_default()) },\n                 server: if client_code { None } else { Some(ServerOpt { malloc }) },\n             }\n             .run()"}]}