{"sha": "094d67ee37d37caa2ebd755fa39ebcaa7b586b26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5NGQ2N2VlMzdkMzdjYWEyZWJkNzU1ZmEzOWViY2FhN2I1ODZiMjY=", "commit": {"author": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2017-11-16T15:52:04Z"}, "committer": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2017-11-19T19:19:10Z"}, "message": "mir-borrowck: Remove parens in the lvalue description of a deref", "tree": {"sha": "9d2dd59c5c3fe648fb3cc9b838160a17442e8af1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d2dd59c5c3fe648fb3cc9b838160a17442e8af1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/094d67ee37d37caa2ebd755fa39ebcaa7b586b26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/094d67ee37d37caa2ebd755fa39ebcaa7b586b26", "html_url": "https://github.com/rust-lang/rust/commit/094d67ee37d37caa2ebd755fa39ebcaa7b586b26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/094d67ee37d37caa2ebd755fa39ebcaa7b586b26/comments", "author": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8d5b6180f56e4aaddc9492b891f85f9ca4a3c64", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8d5b6180f56e4aaddc9492b891f85f9ca4a3c64", "html_url": "https://github.com/rust-lang/rust/commit/d8d5b6180f56e4aaddc9492b891f85f9ca4a3c64"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "486f95f68ea78e586aa1efa26fb45b1aac9ea6a3", "filename": "src/librustc_mir/borrow_check.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/094d67ee37d37caa2ebd755fa39ebcaa7b586b26/src%2Flibrustc_mir%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/094d67ee37d37caa2ebd755fa39ebcaa7b586b26/src%2Flibrustc_mir%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check.rs?ref=094d67ee37d37caa2ebd755fa39ebcaa7b586b26", "patch": "@@ -1601,9 +1601,8 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                         if autoderef {\n                             self.append_lvalue_to_string(&proj.base, buf, Some(autoderef));\n                         } else {\n-                            buf.push_str(&\"(*\");\n+                            buf.push_str(&\"*\");\n                             self.append_lvalue_to_string(&proj.base, buf, Some(autoderef));\n-                            buf.push_str(&\")\");\n                         }\n                     },\n                     ProjectionElem::Downcast(..) => {"}, {"sha": "c40470a927cd713e632a9a9ddb1a8782d58f663b", "filename": "src/test/compile-fail/borrowck/borrowck-closures-mut-and-imm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/094d67ee37d37caa2ebd755fa39ebcaa7b586b26/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-closures-mut-and-imm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/094d67ee37d37caa2ebd755fa39ebcaa7b586b26/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-closures-mut-and-imm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-closures-mut-and-imm.rs?ref=094d67ee37d37caa2ebd755fa39ebcaa7b586b26", "patch": "@@ -70,7 +70,7 @@ fn f() {\n     let c1 = || get(&*x);\n     *x = 5; //[ast]~ ERROR cannot assign\n             //[mir]~^ ERROR cannot assign to `*x` because it is borrowed (Ast)\n-            //[mir]~| ERROR cannot assign to `(*x)` because it is borrowed (Mir)\n+            //[mir]~| ERROR cannot assign to `*x` because it is borrowed (Mir)\n }\n \n fn g() {\n@@ -82,7 +82,7 @@ fn g() {\n     let c1 = || get(&*x.f);\n     *x.f = 5; //[ast]~ ERROR cannot assign to `*x.f`\n               //[mir]~^ ERROR cannot assign to `*x.f` because it is borrowed (Ast)\n-              //[mir]~| ERROR cannot assign to `(*x.f)` because it is borrowed (Mir)\n+              //[mir]~| ERROR cannot assign to `*x.f` because it is borrowed (Mir)\n }\n \n fn h() {"}, {"sha": "009819f0bb57635e2743d68ddbe3fbec05afac36", "filename": "src/test/compile-fail/borrowck/borrowck-describe-lvalue.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/094d67ee37d37caa2ebd755fa39ebcaa7b586b26/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-describe-lvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/094d67ee37d37caa2ebd755fa39ebcaa7b586b26/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-describe-lvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-describe-lvalue.rs?ref=094d67ee37d37caa2ebd755fa39ebcaa7b586b26", "patch": "@@ -252,7 +252,7 @@ fn main() {\n         fn bump<'a>(mut block: &mut Block<'a>) {\n             let x = &mut block;\n             let p: &'a u8 = &*block.current;\n-            //[mir]~^ ERROR cannot borrow `(*block.current)` as immutable because it is also borrowed as mutable (Mir)\n+            //[mir]~^ ERROR cannot borrow `*block.current` as immutable because it is also borrowed as mutable (Mir)\n             // No errors in AST because of issue rust#38899\n         }\n     }\n@@ -266,7 +266,7 @@ fn main() {\n         unsafe fn bump2(mut block: *mut Block2) {\n             let x = &mut block;\n             let p : *const u8 = &*(*block).current;\n-            //[mir]~^ ERROR cannot borrow `(*block.current)` as immutable because it is also borrowed as mutable (Mir)\n+            //[mir]~^ ERROR cannot borrow `*block.current` as immutable because it is also borrowed as mutable (Mir)\n             // No errors in AST because of issue rust#38899\n         }\n     }\n@@ -279,7 +279,7 @@ fn main() {\n         //[ast]~^ ERROR cannot use `v[..].y` because it was mutably borrowed\n         //[mir]~^^ ERROR cannot use `v[..].y` because it was mutably borrowed (Ast)\n         //[mir]~| ERROR cannot use `v[..].y` because it was mutably borrowed (Mir)\n-        //[mir]~| ERROR cannot use `(*v)` because it was mutably borrowed (Mir)\n+        //[mir]~| ERROR cannot use `*v` because it was mutably borrowed (Mir)\n     }\n     // Field of constant index\n     {\n@@ -300,7 +300,7 @@ fn main() {\n             let y = &mut x;\n             &mut x; //[ast]~ ERROR cannot borrow `**x` as mutable more than once at a time\n                     //[mir]~^ ERROR cannot borrow `**x` as mutable more than once at a time (Ast)\n-                    //[mir]~| ERROR cannot borrow `(*x)` as mutable more than once at a time (Mir)\n+                    //[mir]~| ERROR cannot borrow `*x` as mutable more than once at a time (Mir)\n             *y = 1;\n         };\n     }\n@@ -312,7 +312,7 @@ fn main() {\n                 let y = &mut x;\n                 &mut x; //[ast]~ ERROR cannot borrow `**x` as mutable more than once at a time\n                         //[mir]~^ ERROR cannot borrow `**x` as mutable more than once at a time (Ast)\n-                        //[mir]~| ERROR cannot borrow `(*x)` as mutable more than once at a time (Mir)\n+                        //[mir]~| ERROR cannot borrow `*x` as mutable more than once at a time (Mir)\n                 *y = 1;\n                 }\n            };"}, {"sha": "1060c3f468ce9f84bdd00da9c03e51336e13c3da", "filename": "src/test/compile-fail/coerce-overloaded-autoderef.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/094d67ee37d37caa2ebd755fa39ebcaa7b586b26/src%2Ftest%2Fcompile-fail%2Fcoerce-overloaded-autoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/094d67ee37d37caa2ebd755fa39ebcaa7b586b26/src%2Ftest%2Fcompile-fail%2Fcoerce-overloaded-autoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoerce-overloaded-autoderef.rs?ref=094d67ee37d37caa2ebd755fa39ebcaa7b586b26", "patch": "@@ -22,7 +22,7 @@ fn double_mut_borrow<T>(x: &mut Box<T>) {\n     let z = borrow_mut(x);\n     //[ast]~^ ERROR cannot borrow `*x` as mutable more than once at a time\n     //[mir]~^^ ERROR cannot borrow `*x` as mutable more than once at a time (Ast)\n-    //[mir]~| ERROR cannot borrow `(*x)` as mutable more than once at a time (Mir)\n+    //[mir]~| ERROR cannot borrow `*x` as mutable more than once at a time (Mir)\n }\n \n fn double_imm_borrow(x: &mut Box<i32>) {\n@@ -31,21 +31,21 @@ fn double_imm_borrow(x: &mut Box<i32>) {\n     **x += 1;\n     //[ast]~^ ERROR cannot assign to `**x` because it is borrowed\n     //[mir]~^^ ERROR cannot assign to `**x` because it is borrowed (Ast)\n-    //[mir]~| ERROR cannot assign to `(*(*x))` because it is borrowed (Mir)\n+    //[mir]~| ERROR cannot assign to `**x` because it is borrowed (Mir)\n }\n \n fn double_mut_borrow2<T>(x: &mut Box<T>) {\n     borrow_mut2(x, x);\n     //[ast]~^ ERROR cannot borrow `*x` as mutable more than once at a time\n     //[mir]~^^ ERROR cannot borrow `*x` as mutable more than once at a time (Ast)\n-    //[mir]~| ERROR cannot borrow `(*x)` as mutable more than once at a time (Mir)\n+    //[mir]~| ERROR cannot borrow `*x` as mutable more than once at a time (Mir)\n }\n \n fn double_borrow2<T>(x: &mut Box<T>) {\n     borrow2(x, x);\n     //[ast]~^ ERROR cannot borrow `*x` as immutable because it is also borrowed as mutable\n     //[mir]~^^ ERROR cannot borrow `*x` as immutable because it is also borrowed as mutable (Ast)\n-    //[mir]~| ERROR cannot borrow `(*x)` as immutable because it is also borrowed as mutable (Mir)\n+    //[mir]~| ERROR cannot borrow `*x` as immutable because it is also borrowed as mutable (Mir)\n }\n \n pub fn main() {}"}, {"sha": "a1b7a314f216dacbc24cbf674734163f7d2367ef", "filename": "src/test/compile-fail/mut-pattern-internal-mutability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/094d67ee37d37caa2ebd755fa39ebcaa7b586b26/src%2Ftest%2Fcompile-fail%2Fmut-pattern-internal-mutability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/094d67ee37d37caa2ebd755fa39ebcaa7b586b26/src%2Ftest%2Fcompile-fail%2Fmut-pattern-internal-mutability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmut-pattern-internal-mutability.rs?ref=094d67ee37d37caa2ebd755fa39ebcaa7b586b26", "patch": "@@ -27,5 +27,5 @@ fn main() {\n     let &mut ref x = foo;\n     *foo += 1; //[ast]~ ERROR cannot assign to `*foo` because it is borrowed\n                //[mir]~^ ERROR cannot assign to `*foo` because it is borrowed (Ast)\n-               //[mir]~| ERROR cannot assign to `(*foo)` because it is borrowed (Mir)\n+               //[mir]~| ERROR cannot assign to `*foo` because it is borrowed (Mir)\n }"}, {"sha": "8e1e9faef2f000b4de7b97e6b185451e9bee8ad0", "filename": "src/test/ui/nll/get_default.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/094d67ee37d37caa2ebd755fa39ebcaa7b586b26/src%2Ftest%2Fui%2Fnll%2Fget_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/094d67ee37d37caa2ebd755fa39ebcaa7b586b26/src%2Ftest%2Fui%2Fnll%2Fget_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fget_default.stderr?ref=094d67ee37d37caa2ebd755fa39ebcaa7b586b26", "patch": "@@ -34,7 +34,7 @@ error[E0502]: cannot borrow `*map` as mutable because it is also borrowed as imm\n 51 | }\n    | - immutable borrow ends here\n \n-error[E0502]: cannot borrow `(*map)` as mutable because it is also borrowed as immutable (Mir)\n+error[E0502]: cannot borrow `*map` as mutable because it is also borrowed as immutable (Mir)\n   --> $DIR/get_default.rs:43:17\n    |\n 41 |         match map.get() {"}]}