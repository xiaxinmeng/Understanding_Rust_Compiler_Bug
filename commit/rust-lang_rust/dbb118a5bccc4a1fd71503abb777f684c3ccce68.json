{"sha": "dbb118a5bccc4a1fd71503abb777f684c3ccce68", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiYjExOGE1YmNjYzRhMWZkNzE1MDNhYmI3NzdmNjg0YzNjY2NlNjg=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-31T14:36:29Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-31T14:56:33Z"}, "message": "Fix some warnings", "tree": {"sha": "a6a5b1ca71423d5696aa7beb2ed1b631f2c29fab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6a5b1ca71423d5696aa7beb2ed1b631f2c29fab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbb118a5bccc4a1fd71503abb777f684c3ccce68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbb118a5bccc4a1fd71503abb777f684c3ccce68", "html_url": "https://github.com/rust-lang/rust/commit/dbb118a5bccc4a1fd71503abb777f684c3ccce68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbb118a5bccc4a1fd71503abb777f684c3ccce68/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cb2b6055979c28a7326c7a80c4cf3d51bfad487", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cb2b6055979c28a7326c7a80c4cf3d51bfad487", "html_url": "https://github.com/rust-lang/rust/commit/0cb2b6055979c28a7326c7a80c4cf3d51bfad487"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "2abf865cf3eec9b4c1283950c0fbb5964e9db0c2", "filename": "src/optimize/stack2reg.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dbb118a5bccc4a1fd71503abb777f684c3ccce68/src%2Foptimize%2Fstack2reg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbb118a5bccc4a1fd71503abb777f684c3ccce68/src%2Foptimize%2Fstack2reg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foptimize%2Fstack2reg.rs?ref=dbb118a5bccc4a1fd71503abb777f684c3ccce68", "patch": "@@ -3,7 +3,7 @@ use std::ops::Not;\n \n use cranelift_codegen::cursor::{Cursor, FuncCursor};\n use cranelift_codegen::entity::EntitySet;\n-use cranelift_codegen::ir::{InstructionData, Opcode, ProgramOrder, ValueDef};\n+use cranelift_codegen::ir::{InstructionData, Opcode, ValueDef};\n use cranelift_codegen::ir::immediates::Offset32;\n \n use crate::prelude::*;\n@@ -168,9 +168,6 @@ pub(super) fn optimize_function<T: std::fmt::Debug>(\n         }\n \n         for load in users.stack_load.clone().into_iter() {\n-            let loaded_value = opt_ctx.ctx.func.dfg.inst_results(load)[0];\n-            let loaded_type = opt_ctx.ctx.func.dfg.value_type(loaded_value);\n-\n             let potential_stores = users.potential_stores_for_load(&opt_ctx.ctx, load);\n \n             #[cfg(debug_assertions)]"}]}