{"sha": "35d752f130946d5d65058ca20f8bf7afb297e954", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZDc1MmYxMzA5NDZkNWQ2NTA1OGNhMjBmOGJmN2FmYjI5N2U5NTQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-08-07T08:55:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-07T08:55:38Z"}, "message": "Rollup merge of #53028 - Mark-Simulacrum:split-out-codegen, r=alexcrichton\n\nBuilding librustc_codegen_llvm in a separate directory\n\nThis allows clearing it out and building it separately from the\ncompiler. Since it's essentially a different and separate crate this\nmakes sense to do, each cargo invocation should generally happen in its\nown directory.\n\nr? @alexcrichton", "tree": {"sha": "bd9a6a5cc696f8a951712fb4ba1739f3105d254a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd9a6a5cc696f8a951712fb4ba1739f3105d254a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35d752f130946d5d65058ca20f8bf7afb297e954", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbaV6LCRBK7hj4Ov3rIwAAdHIIAFGS2+Azk4ueRYFE5E4Is7qX\nWXHyT3FBM6KaCCU/h8RgUsw+DrKviRT8binSDAAgkWBRwnIJU5fJykdcR1b+mPDl\nKm9sBxEIpl2U87dcR+2EygP5g+GzhQtN/LOcRWlvqxl8GuYbHfSWDxmuVvLV7/dw\nLwdDfnwCT30LjkwVivAsikl6IM9fGdIBXaxN2isJ161KSfEdWoCCkmS5eP/GF+Sl\nIuuyy3iWtT/K0dpqr+aOz+Rx6aCN7WnZjqOdd9SGO5rpzTyFfFlkRuMPACtut5FZ\nwxVyPnYEutDTqHW4on+vCtEIhScGJehES4+sLPFziVVdD/EuR7Xn8p440ZJio0I=\n=nh5m\n-----END PGP SIGNATURE-----\n", "payload": "tree bd9a6a5cc696f8a951712fb4ba1739f3105d254a\nparent 2c388e0e9f7b6dd6ae70b286b76996683c3a371f\nparent d8e8a50cf279eab794adbdd9bae819d308a6169f\nauthor kennytm <kennytm@gmail.com> 1533632138 +0800\ncommitter GitHub <noreply@github.com> 1533632138 +0800\n\nRollup merge of #53028 - Mark-Simulacrum:split-out-codegen, r=alexcrichton\n\nBuilding librustc_codegen_llvm in a separate directory\n\nThis allows clearing it out and building it separately from the\ncompiler. Since it's essentially a different and separate crate this\nmakes sense to do, each cargo invocation should generally happen in its\nown directory.\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35d752f130946d5d65058ca20f8bf7afb297e954", "html_url": "https://github.com/rust-lang/rust/commit/35d752f130946d5d65058ca20f8bf7afb297e954", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35d752f130946d5d65058ca20f8bf7afb297e954/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c388e0e9f7b6dd6ae70b286b76996683c3a371f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c388e0e9f7b6dd6ae70b286b76996683c3a371f", "html_url": "https://github.com/rust-lang/rust/commit/2c388e0e9f7b6dd6ae70b286b76996683c3a371f"}, {"sha": "d8e8a50cf279eab794adbdd9bae819d308a6169f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8e8a50cf279eab794adbdd9bae819d308a6169f", "html_url": "https://github.com/rust-lang/rust/commit/d8e8a50cf279eab794adbdd9bae819d308a6169f"}], "stats": {"total": 64, "additions": 10, "deletions": 54}, "files": [{"sha": "30d56f7656d7d0a00f1974139e0792522bf0390a", "filename": "src/Cargo.lock", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/35d752f130946d5d65058ca20f8bf7afb297e954/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/35d752f130946d5d65058ca20f8bf7afb297e954/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=35d752f130946d5d65058ca20f8bf7afb297e954", "patch": "@@ -2184,30 +2184,10 @@ dependencies = [\n name = \"rustc_codegen_llvm\"\n version = \"0.0.0\"\n dependencies = [\n- \"bitflags 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cc 1.0.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"env_logger 0.5.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"flate2 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"jobserver 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"log 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc 0.0.0\",\n  \"rustc-demangle 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc_allocator 0.0.0\",\n- \"rustc_apfloat 0.0.0\",\n- \"rustc_codegen_utils 0.0.0\",\n- \"rustc_data_structures 0.0.0\",\n- \"rustc_errors 0.0.0\",\n- \"rustc_incremental 0.0.0\",\n  \"rustc_llvm 0.0.0\",\n- \"rustc_mir 0.0.0\",\n- \"rustc_platform_intrinsics 0.0.0\",\n- \"rustc_target 0.0.0\",\n- \"serialize 0.0.0\",\n- \"syntax 0.0.0\",\n- \"syntax_pos 0.0.0\",\n- \"tempfile 3.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]"}, {"sha": "133e5aa37a7db9715e55b83867e8a9ab0ad3fff2", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35d752f130946d5d65058ca20f8bf7afb297e954/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35d752f130946d5d65058ca20f8bf7afb297e954/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=35d752f130946d5d65058ca20f8bf7afb297e954", "patch": "@@ -137,16 +137,18 @@ impl Step for CodegenBackend {\n         let target = self.target;\n         let backend = self.backend;\n \n+        let out_dir = builder.cargo_out(compiler, Mode::Codegen, target);\n+        builder.clear_if_dirty(&out_dir, &librustc_stamp(builder, compiler, target));\n+\n         let mut cargo = builder.cargo(compiler, Mode::Codegen, target, \"check\");\n-        let features = builder.rustc_features().to_string();\n         cargo.arg(\"--manifest-path\").arg(builder.src.join(\"src/librustc_codegen_llvm/Cargo.toml\"));\n         rustc_cargo_env(builder, &mut cargo);\n \n         // We won't build LLVM if it's not available, as it shouldn't affect `check`.\n \n         let _folder = builder.fold_output(|| format!(\"stage{}-rustc_codegen_llvm\", compiler.stage));\n         run_cargo(builder,\n-                  cargo.arg(\"--features\").arg(features),\n+                  &mut cargo,\n                   &codegen_backend_stamp(builder, compiler, target, backend),\n                   true);\n     }"}, {"sha": "2f8816d111a9d2b4d6f89171d897d8fcca36088b", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/35d752f130946d5d65058ca20f8bf7afb297e954/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35d752f130946d5d65058ca20f8bf7afb297e954/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=35d752f130946d5d65058ca20f8bf7afb297e954", "patch": "@@ -670,16 +670,17 @@ impl Step for CodegenBackend {\n             return;\n         }\n \n+        let out_dir = builder.cargo_out(compiler, Mode::Codegen, target);\n+        builder.clear_if_dirty(&out_dir, &librustc_stamp(builder, compiler, target));\n+\n         let mut cargo = builder.cargo(compiler, Mode::Codegen, target, \"build\");\n-        let mut features = builder.rustc_features().to_string();\n         cargo.arg(\"--manifest-path\")\n             .arg(builder.src.join(\"src/librustc_codegen_llvm/Cargo.toml\"));\n         rustc_cargo_env(builder, &mut cargo);\n \n-        features += &build_codegen_backend(&builder, &mut cargo, &compiler, target, backend);\n+        let features = build_codegen_backend(&builder, &mut cargo, &compiler, target, backend);\n \n-        let tmp_stamp = builder.cargo_out(compiler, Mode::Codegen, target)\n-            .join(\".tmp.stamp\");\n+        let tmp_stamp = out_dir.join(\".tmp.stamp\");\n \n         let _folder = builder.fold_output(|| format!(\"stage{}-rustc_codegen_llvm\", compiler.stage));\n         let files = run_cargo(builder,"}, {"sha": "38965949bf22f6ce594090aa6c25812c4549f32f", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35d752f130946d5d65058ca20f8bf7afb297e954/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35d752f130946d5d65058ca20f8bf7afb297e954/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=35d752f130946d5d65058ca20f8bf7afb297e954", "patch": "@@ -555,8 +555,8 @@ impl Build {\n         let suffix = match mode {\n             Mode::Std => \"-std\",\n             Mode::Test => \"-test\",\n-            Mode::Codegen => \"-rustc\",\n             Mode::Rustc => \"-rustc\",\n+            Mode::Codegen => \"-codegen\",\n             Mode::ToolBootstrap => \"-bootstrap-tools\",\n             Mode::ToolStd => \"-tools\",\n             Mode::ToolRustc => \"-tools\","}, {"sha": "28fa49846b7369de67024aacf0ac81e4121952b4", "filename": "src/librustc_codegen_llvm/Cargo.toml", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/35d752f130946d5d65058ca20f8bf7afb297e954/src%2Flibrustc_codegen_llvm%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/35d752f130946d5d65058ca20f8bf7afb297e954/src%2Flibrustc_codegen_llvm%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2FCargo.toml?ref=35d752f130946d5d65058ca20f8bf7afb297e954", "patch": "@@ -10,39 +10,12 @@ crate-type = [\"dylib\"]\n test = false\n \n [dependencies]\n-bitflags = \"1.0.1\"\n cc = \"1.0.1\"\n-flate2 = \"1.0\"\n-jobserver = \"0.1.5\"\n-libc = \"0.2\"\n-log = \"0.4\"\n num_cpus = \"1.0\"\n-rustc = { path = \"../librustc\" }\n rustc-demangle = \"0.1.4\"\n-rustc_allocator = { path = \"../librustc_allocator\" }\n-rustc_apfloat = { path = \"../librustc_apfloat\" }\n-rustc_target = { path = \"../librustc_target\" }\n-rustc_data_structures = { path = \"../librustc_data_structures\" }\n-rustc_errors = { path = \"../librustc_errors\" }\n-rustc_incremental = { path = \"../librustc_incremental\" }\n rustc_llvm = { path = \"../librustc_llvm\" }\n-rustc_platform_intrinsics = { path = \"../librustc_platform_intrinsics\" }\n-rustc_codegen_utils = { path = \"../librustc_codegen_utils\" }\n-rustc_mir = { path = \"../librustc_mir\" }\n-serialize = { path = \"../libserialize\" }\n-syntax = { path = \"../libsyntax\" }\n-syntax_pos = { path = \"../libsyntax_pos\" }\n-tempfile = \"3.0\"\n-\n-# not actually used but needed to make sure we enable the same feature set as\n-# winapi used in librustc\n-env_logger = { version = \"0.5\", default-features = false }\n \n [features]\n-# Used to communicate the feature to `rustc_target` in the same manner that the\n-# `rustc` driver script communicate this.\n-jemalloc = [\"rustc_target/jemalloc\"]\n-\n # This is used to convince Cargo to separately cache builds of `rustc_codegen_llvm`\n # when this option is enabled or not. That way we can build two, cache two\n # artifacts, and have nice speedy rebuilds."}]}