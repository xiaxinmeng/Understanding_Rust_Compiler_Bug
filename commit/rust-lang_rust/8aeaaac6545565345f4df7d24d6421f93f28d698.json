{"sha": "8aeaaac6545565345f4df7d24d6421f93f28d698", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhZWFhYWM2NTQ1NTY1MzQ1ZjRkZjdkMjRkNjQyMWY5M2YyOGQ2OTg=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-08-17T20:50:24Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-08-17T21:24:16Z"}, "message": "add a fast-path to resolve_type_vars_if_possible\n\nthis avoids needless substituting\n\nbefore:\n577.76user 4.27system 7:36.13elapsed 127%CPU (0avgtext+0avgdata 1141608maxresident)k\n\nafter:\n573.01user 4.04system 7:33.86elapsed 127%CPU (0avgtext+0avgdata 1141656maxresident)k", "tree": {"sha": "4ecddbf85f68f795d8e1d38a64a3ac05e235c65f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ecddbf85f68f795d8e1d38a64a3ac05e235c65f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8aeaaac6545565345f4df7d24d6421f93f28d698", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8aeaaac6545565345f4df7d24d6421f93f28d698", "html_url": "https://github.com/rust-lang/rust/commit/8aeaaac6545565345f4df7d24d6421f93f28d698", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8aeaaac6545565345f4df7d24d6421f93f28d698/comments", "author": null, "committer": null, "parents": [{"sha": "96e6b2fef82c13aa542713e7923d7d0a76bd698b", "url": "https://api.github.com/repos/rust-lang/rust/commits/96e6b2fef82c13aa542713e7923d7d0a76bd698b", "html_url": "https://github.com/rust-lang/rust/commit/96e6b2fef82c13aa542713e7923d7d0a76bd698b"}], "stats": {"total": 54, "additions": 48, "deletions": 6}, "files": [{"sha": "5f2f4df2f16012fc6727680f8122eadc018c7d06", "filename": "src/librustc/middle/infer/higher_ranked/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aeaaac6545565345f4df7d24d6421f93f28d698/src%2Flibrustc%2Fmiddle%2Finfer%2Fhigher_ranked%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aeaaac6545565345f4df7d24d6421f93f28d698/src%2Flibrustc%2Fmiddle%2Finfer%2Fhigher_ranked%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fhigher_ranked%2Fmod.rs?ref=8aeaaac6545565345f4df7d24d6421f93f28d698", "patch": "@@ -614,7 +614,7 @@ pub fn plug_leaks<'a,'tcx,T>(infcx: &InferCtxt<'a,'tcx>,\n                              snapshot: &CombinedSnapshot,\n                              value: &T)\n                              -> T\n-    where T : TypeFoldable<'tcx>\n+    where T : TypeFoldable<'tcx> + ty::HasTypeFlags\n {\n     debug_assert!(leak_check(infcx, &skol_map, snapshot).is_ok());\n "}, {"sha": "d56a73c36570c61bdf41de5c6675a348dc515df8", "filename": "src/librustc/middle/infer/mod.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8aeaaac6545565345f4df7d24d6421f93f28d698/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aeaaac6545565345f4df7d24d6421f93f28d698/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs?ref=8aeaaac6545565345f4df7d24d6421f93f28d698", "patch": "@@ -985,7 +985,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                          snapshot: &CombinedSnapshot,\n                          value: &T)\n                          -> T\n-        where T : TypeFoldable<'tcx>\n+        where T : TypeFoldable<'tcx> + HasTypeFlags\n     {\n         /*! See `higher_ranked::plug_leaks` */\n \n@@ -1256,7 +1256,9 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         }\n     }\n \n-    pub fn resolve_type_vars_if_possible<T:TypeFoldable<'tcx>>(&self, value: &T) -> T {\n+    pub fn resolve_type_vars_if_possible<T>(&self, value: &T) -> T\n+        where T: TypeFoldable<'tcx> + HasTypeFlags\n+    {\n         /*!\n          * Where possible, replaces type/int/float variables in\n          * `value` with their final value. Note that region variables\n@@ -1266,6 +1268,9 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n          * at will.\n          */\n \n+        if !value.needs_infer() {\n+            return value.clone(); // avoid duplicated subst-folding\n+        }\n         let mut r = resolve::OpportunisticTypeResolver::new(self);\n         value.fold_with(&mut r)\n     }"}, {"sha": "3be05c45c4de2f310f42eba0be563379c85d6e66", "filename": "src/librustc/middle/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aeaaac6545565345f4df7d24d6421f93f28d698/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aeaaac6545565345f4df7d24d6421f93f28d698/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs?ref=8aeaaac6545565345f4df7d24d6421f93f28d698", "patch": "@@ -160,7 +160,7 @@ fn report_on_unimplemented<'a, 'tcx>(infcx: &InferCtxt<'a, 'tcx>,\n pub fn report_overflow_error<'a, 'tcx, T>(infcx: &InferCtxt<'a, 'tcx>,\n                                           obligation: &Obligation<'tcx, T>)\n                                           -> !\n-    where T: fmt::Display + TypeFoldable<'tcx>\n+    where T: fmt::Display + TypeFoldable<'tcx> + HasTypeFlags\n {\n     let predicate =\n         infcx.resolve_type_vars_if_possible(&obligation.predicate);"}, {"sha": "cacefbb1a8551885eaad798151934f4c162683cb", "filename": "src/librustc/middle/traits/project.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8aeaaac6545565345f4df7d24d6421f93f28d698/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aeaaac6545565345f4df7d24d6421f93f28d698/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs?ref=8aeaaac6545565345f4df7d24d6421f93f28d698", "patch": "@@ -927,6 +927,13 @@ impl<'tcx, T: TypeFoldable<'tcx>> TypeFoldable<'tcx> for Normalized<'tcx, T> {\n     }\n }\n \n+impl<'tcx, T: HasTypeFlags> HasTypeFlags for Normalized<'tcx, T> {\n+    fn has_type_flags(&self, flags: ty::TypeFlags) -> bool {\n+        self.value.has_type_flags(flags) ||\n+            self.obligations.has_type_flags(flags)\n+    }\n+}\n+\n impl<'tcx, T:fmt::Debug> fmt::Debug for Normalized<'tcx, T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         write!(f, \"Normalized({:?},{:?})\","}, {"sha": "f99760b6210c5b9774e9eada4618374ba22d1862", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/8aeaaac6545565345f4df7d24d6421f93f28d698/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aeaaac6545565345f4df7d24d6421f93f28d698/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=8aeaaac6545565345f4df7d24d6421f93f28d698", "patch": "@@ -7280,6 +7280,24 @@ impl<'tcx,T:HasTypeFlags> HasTypeFlags for VecPerParamSpace<T> {\n     }\n }\n \n+impl HasTypeFlags for abi::Abi {\n+    fn has_type_flags(&self, _flags: TypeFlags) -> bool {\n+        false\n+    }\n+}\n+\n+impl HasTypeFlags for ast::Unsafety {\n+    fn has_type_flags(&self, _flags: TypeFlags) -> bool {\n+        false\n+    }\n+}\n+\n+impl HasTypeFlags for BuiltinBounds {\n+    fn has_type_flags(&self, _flags: TypeFlags) -> bool {\n+        false\n+    }\n+}\n+\n impl<'tcx> HasTypeFlags for ClosureTy<'tcx> {\n     fn has_type_flags(&self, flags: TypeFlags) -> bool {\n         self.sig.has_type_flags(flags)\n@@ -7292,6 +7310,12 @@ impl<'tcx> HasTypeFlags for ClosureUpvar<'tcx> {\n     }\n }\n \n+impl<'tcx> HasTypeFlags for ExistentialBounds<'tcx> {\n+    fn has_type_flags(&self, flags: TypeFlags) -> bool {\n+        self.projection_bounds.has_type_flags(flags)\n+    }\n+}\n+\n impl<'tcx> HasTypeFlags for ty::InstantiatedPredicates<'tcx> {\n     fn has_type_flags(&self, flags: TypeFlags) -> bool {\n         self.predicates.has_type_flags(flags)\n@@ -7367,6 +7391,12 @@ impl<'tcx> HasTypeFlags for Ty<'tcx> {\n     }\n }\n \n+impl<'tcx> HasTypeFlags for TypeAndMut<'tcx> {\n+    fn has_type_flags(&self, flags: TypeFlags) -> bool {\n+        self.ty.has_type_flags(flags)\n+    }\n+}\n+\n impl<'tcx> HasTypeFlags for TraitRef<'tcx> {\n     fn has_type_flags(&self, flags: TypeFlags) -> bool {\n         self.substs.has_type_flags(flags)"}, {"sha": "f307f674732a1b23cdc045247cd9c30276f1975e", "filename": "src/librustc/middle/ty_relate/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8aeaaac6545565345f4df7d24d6421f93f28d698/src%2Flibrustc%2Fmiddle%2Fty_relate%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aeaaac6545565345f4df7d24d6421f93f28d698/src%2Flibrustc%2Fmiddle%2Fty_relate%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty_relate%2Fmod.rs?ref=8aeaaac6545565345f4df7d24d6421f93f28d698", "patch": "@@ -14,7 +14,7 @@\n //! type equality, etc.\n \n use middle::subst::{ErasedRegions, NonerasedRegions, ParamSpace, Substs};\n-use middle::ty::{self, Ty, TypeError};\n+use middle::ty::{self, HasTypeFlags, Ty, TypeError};\n use middle::ty_fold::TypeFoldable;\n use std::rc::Rc;\n use syntax::abi;\n@@ -78,7 +78,7 @@ pub trait TypeRelation<'a,'tcx> : Sized {\n         where T: Relate<'a,'tcx>;\n }\n \n-pub trait Relate<'a,'tcx>: TypeFoldable<'tcx> {\n+pub trait Relate<'a,'tcx>: TypeFoldable<'tcx> + HasTypeFlags {\n     fn relate<R:TypeRelation<'a,'tcx>>(relation: &mut R,\n                                        a: &Self,\n                                        b: &Self)"}]}