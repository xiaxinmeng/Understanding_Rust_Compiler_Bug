{"sha": "b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMDVkNjJlNWI5ZTA4YzZmNDU0MGRlMGEzNDlmYmY2ZGEzZGMwZTQ=", "commit": {"author": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-06-24T23:22:28Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-07-26T03:53:32Z"}, "message": "fix: correct arm leading pipe check (#4880)\n\nIn the event a pattern starts with a leading pipe\r\nthe pattern span will contain, and begin with, the pipe.\r\n\r\nThis updates the process to see if a match arm contains\r\na leading pipe by leveraging this recent(ish) change to\r\nthe patterns in the AST, and avoids an indexing bug that\r\noccurs when a pattern starts with a non-ascii char in the\r\nold implementation.", "tree": {"sha": "91c0b7b4d05f417567592f027bb63ef433d5f5b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91c0b7b4d05f417567592f027bb63ef433d5f5b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4", "html_url": "https://github.com/rust-lang/rust/commit/b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e634a6f9a8ad9435f2d9f6bbfb6a8eb018ee8e3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e634a6f9a8ad9435f2d9f6bbfb6a8eb018ee8e3f", "html_url": "https://github.com/rust-lang/rust/commit/e634a6f9a8ad9435f2d9f6bbfb6a8eb018ee8e3f"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "140ec226c02e5a072929ab318c477af93e2f5bb2", "filename": "src/matches.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4", "patch": "@@ -19,7 +19,7 @@ use crate::source_map::SpanUtils;\n use crate::spanned::Spanned;\n use crate::utils::{\n     contains_skip, extra_offset, first_line_width, inner_attributes, last_line_extendable, mk_sp,\n-    mk_sp_lo_plus_one, semicolon_for_expr, trimmed_last_line_width, unicode_str_width,\n+    semicolon_for_expr, trimmed_last_line_width, unicode_str_width,\n };\n \n /// A simple wrapper type against `ast::Arm`. Used inside `write_list()`.\n@@ -167,8 +167,9 @@ fn collect_beginning_verts(\n     arms.iter()\n         .map(|a| {\n             context\n-                .snippet_provider\n-                .opt_span_before(mk_sp_lo_plus_one(a.pat.span.lo()), \"|\")\n+                .snippet(a.pat.span)\n+                .starts_with(\"|\")\n+                .then(|| a.pat.span().lo())\n         })\n         .collect()\n }"}, {"sha": "5486877bde1906dcdbf3b6cf7450a3ca16e0be47", "filename": "tests/source/configs/match_arm_leading_pipes/preserve.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4/tests%2Fsource%2Fconfigs%2Fmatch_arm_leading_pipes%2Fpreserve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4/tests%2Fsource%2Fconfigs%2Fmatch_arm_leading_pipes%2Fpreserve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fmatch_arm_leading_pipes%2Fpreserve.rs?ref=b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4", "patch": "@@ -26,3 +26,11 @@ fn bar() {\n         _ => {}\n     }\n }\n+\n+fn f(x: NonAscii) -> bool {\n+    match x {\n+      // foo\n+              |   \u00c9fgh => true,\n+        _ => false,\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "4775575842ab99dd1b85248709808ee2d5256d5f", "filename": "tests/target/configs/match_arm_leading_pipes/preserve.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4/tests%2Ftarget%2Fconfigs%2Fmatch_arm_leading_pipes%2Fpreserve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4/tests%2Ftarget%2Fconfigs%2Fmatch_arm_leading_pipes%2Fpreserve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fmatch_arm_leading_pipes%2Fpreserve.rs?ref=b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4", "patch": "@@ -25,3 +25,11 @@ fn bar() {\n         _ => {}\n     }\n }\n+\n+fn f(x: NonAscii) -> bool {\n+    match x {\n+        // foo\n+        | \u00c9fgh => true,\n+        _ => false,\n+    }\n+}"}, {"sha": "763a82c3231f14db2a1f5d0418342e1ef7f157b8", "filename": "tests/target/issue_4868.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4/tests%2Ftarget%2Fissue_4868.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4/tests%2Ftarget%2Fissue_4868.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue_4868.rs?ref=b305d62e5b9e08c6f4540de0a349fbf6da3dc0e4", "patch": "@@ -0,0 +1,17 @@\n+enum NonAscii {\n+    Abcd,\n+    \u00c9fgh,\n+}\n+\n+use NonAscii::*;\n+\n+fn f(x: NonAscii) -> bool {\n+    match x {\n+        \u00c9fgh => true,\n+        _ => false,\n+    }\n+}\n+\n+fn main() {\n+    dbg!(f(Abcd));\n+}"}]}