{"sha": "7a42dd807430f11678e004bbbad9eda3a550dea9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhNDJkZDgwNzQzMGYxMTY3OGUwMDRiYmJhZDllZGEzYTU1MGRlYTk=", "commit": {"author": {"name": "Micah Chalmer", "email": "micah@micahchalmer.net", "date": "2013-08-30T05:48:02Z"}, "committer": {"name": "Micah Chalmer", "email": "micah@micahchalmer.net", "date": "2013-08-30T06:04:08Z"}, "message": "Align field names in struct expressions with fields on same line as the opening curly brace", "tree": {"sha": "81a70dea2fb3dd9d12341fe592de6ffe0e262785", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81a70dea2fb3dd9d12341fe592de6ffe0e262785"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a42dd807430f11678e004bbbad9eda3a550dea9", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a42dd807430f11678e004bbbad9eda3a550dea9", "html_url": "https://github.com/rust-lang/rust/commit/7a42dd807430f11678e004bbbad9eda3a550dea9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a42dd807430f11678e004bbbad9eda3a550dea9/comments", "author": {"login": "MicahChalmer", "id": 698400, "node_id": "MDQ6VXNlcjY5ODQwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/698400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicahChalmer", "html_url": "https://github.com/MicahChalmer", "followers_url": "https://api.github.com/users/MicahChalmer/followers", "following_url": "https://api.github.com/users/MicahChalmer/following{/other_user}", "gists_url": "https://api.github.com/users/MicahChalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicahChalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicahChalmer/subscriptions", "organizations_url": "https://api.github.com/users/MicahChalmer/orgs", "repos_url": "https://api.github.com/users/MicahChalmer/repos", "events_url": "https://api.github.com/users/MicahChalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MicahChalmer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MicahChalmer", "id": 698400, "node_id": "MDQ6VXNlcjY5ODQwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/698400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicahChalmer", "html_url": "https://github.com/MicahChalmer", "followers_url": "https://api.github.com/users/MicahChalmer/followers", "following_url": "https://api.github.com/users/MicahChalmer/following{/other_user}", "gists_url": "https://api.github.com/users/MicahChalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicahChalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicahChalmer/subscriptions", "organizations_url": "https://api.github.com/users/MicahChalmer/orgs", "repos_url": "https://api.github.com/users/MicahChalmer/repos", "events_url": "https://api.github.com/users/MicahChalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MicahChalmer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70bc1637b877f52f824b34bbfbf73936d52a628e", "url": "https://api.github.com/repos/rust-lang/rust/commits/70bc1637b877f52f824b34bbfbf73936d52a628e", "html_url": "https://github.com/rust-lang/rust/commit/70bc1637b877f52f824b34bbfbf73936d52a628e"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "92b85247e4891a670dae04ef92f9497bdc757d53", "filename": "src/etc/emacs/rust-mode.el", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7a42dd807430f11678e004bbbad9eda3a550dea9/src%2Fetc%2Femacs%2Frust-mode.el", "raw_url": "https://github.com/rust-lang/rust/raw/7a42dd807430f11678e004bbbad9eda3a550dea9/src%2Fetc%2Femacs%2Frust-mode.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode.el?ref=7a42dd807430f11678e004bbbad9eda3a550dea9", "patch": "@@ -5,6 +5,7 @@\n ;; Url: https://github.com/mozilla/rust\n \n (eval-when-compile (require 'cl))\n+(eval-when-compile (require 'misc))\n \n ;; Syntax definitions and helpers\n (defvar rust-mode-syntax-table\n@@ -67,20 +68,29 @@\n               ;;    or one further indent from that if either current line\n               ;;    begins with 'else', or previous line didn't end in\n               ;;    semi, comma or brace (other than whitespace and line\n-              ;;    comments) , and wasn't an attribute. PHEW.\n+              ;;    comments) , and wasn't an attribute.  But if we have \n+              ;;    something after the open brace and ending with a comma,\n+              ;;    treat it as fields and align them.  PHEW.\n               ((> level 0)\n                (let ((pt (point)))\n                  (rust-rewind-irrelevant)\n                  (backward-up-list)\n-                 (if (and\n+                 (cond \n+                  ((and\n                       (looking-at \"[[(]\")\n                       ; We don't want to indent out to the open bracket if the\n                       ; open bracket ends the line\n                       (save-excursion \n                         (forward-char)\n                         (not (looking-at \"[[:space:]]*\\\\(?://.*\\\\)?$\"))))\n-                     (+ 1 (current-column))\n+                   (+ 1 (current-column)))\n+                  ;; Check for fields on the same line as the open curly brace:\n+                  ((looking-at \"{[[:blank:]]*[^}\\n]*,[[:space:]]*$\")\n                    (progn\n+                    (forward-char)\n+                    (forward-to-word 1)\n+                    (current-column)))\n+                  (t (progn\n                      (goto-char pt)\n                      (back-to-indentation)\n                      (if (looking-at \"\\\\<else\\\\>\")\n@@ -95,7 +105,7 @@\n                            (back-to-indentation)\n                            (if (looking-at \"#\")\n                                (* rust-indent-offset level)\n-                             (* rust-indent-offset (+ 1 level))))))))))\n+                             (* rust-indent-offset (+ 1 level)))))))))))\n \n               ;; Otherwise we're in a column-zero definition\n               (t 0))))))"}]}