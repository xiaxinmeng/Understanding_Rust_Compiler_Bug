{"sha": "5209b192558e4adf0baa0981c463dcff61ec0636", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMDliMTkyNTU4ZTRhZGYwYmFhMDk4MWM0NjNkY2ZmNjFlYzA2MzY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-20T22:34:47Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-20T22:34:47Z"}, "message": "rt: Rename rand() to isaac_rand() since the former prevents lots of standard headers from being included", "tree": {"sha": "b13ff8c70da7023e4042c37429aeedc490c2a8d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b13ff8c70da7023e4042c37429aeedc490c2a8d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5209b192558e4adf0baa0981c463dcff61ec0636", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5209b192558e4adf0baa0981c463dcff61ec0636", "html_url": "https://github.com/rust-lang/rust/commit/5209b192558e4adf0baa0981c463dcff61ec0636", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5209b192558e4adf0baa0981c463dcff61ec0636/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "307957710c69f41519f5f22997c629fc5e077771", "url": "https://api.github.com/repos/rust-lang/rust/commits/307957710c69f41519f5f22997c629fc5e077771", "html_url": "https://github.com/rust-lang/rust/commit/307957710c69f41519f5f22997c629fc5e077771"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "3da2d71b20b2d8c5b44882b3d0c23f3faa05fcfc", "filename": "src/rt/isaac/rand.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5209b192558e4adf0baa0981c463dcff61ec0636/src%2Frt%2Fisaac%2Frand.h", "raw_url": "https://github.com/rust-lang/rust/raw/5209b192558e4adf0baa0981c463dcff61ec0636/src%2Frt%2Fisaac%2Frand.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fisaac%2Frand.h?ref=5209b192558e4adf0baa0981c463dcff61ec0636", "patch": "@@ -43,10 +43,10 @@ void isaac(randctx *r);\n \n /*\n ------------------------------------------------------------------------------\n- Call rand(/o_ randctx *r _o/) to retrieve a single 32-bit random value\n+ Call isaac_rand(/o_ randctx *r _o/) to retrieve a single 32-bit random value\n ------------------------------------------------------------------------------\n */\n-#define rand(r) \\\n+#define isaac_rand(r) \\\n    (!(r)->randcnt-- ? \\\n      (isaac(r), (r)->randcnt=RANDSIZ-1, (r)->randrsl[(r)->randcnt]) : \\\n      (r)->randrsl[(r)->randcnt])"}, {"sha": "c2fdce1081c4314bbe8ed5329b56c67aacaecc37", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5209b192558e4adf0baa0981c463dcff61ec0636/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5209b192558e4adf0baa0981c463dcff61ec0636/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=5209b192558e4adf0baa0981c463dcff61ec0636", "patch": "@@ -151,7 +151,7 @@ rand_new(rust_task *task)\n extern \"C\" CDECL size_t\n rand_next(rust_task *task, randctx *rctx)\n {\n-    return rand(rctx);\n+    return isaac_rand(rctx);\n }\n \n extern \"C\" CDECL void"}, {"sha": "347b7907b533221a401068ab42fcbd7cd00b31f2", "filename": "src/rt/rust_kernel.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5209b192558e4adf0baa0981c463dcff61ec0636/src%2Frt%2Frust_kernel.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5209b192558e4adf0baa0981c463dcff61ec0636/src%2Frt%2Frust_kernel.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.cpp?ref=5209b192558e4adf0baa0981c463dcff61ec0636", "patch": "@@ -150,7 +150,7 @@ rust_kernel::fail() {\n \n rust_task_id\n rust_kernel::create_task(rust_task *spawner, const char *name) {\n-    rust_scheduler *thread = threads[rand(&rctx) % num_threads];\n+    rust_scheduler *thread = threads[isaac_rand(&rctx) % num_threads];\n     rust_task *t = thread->create_task(spawner, name);\n     {\n         scoped_lock with(_kernel_lock);"}, {"sha": "187cf3ce105e02e3cf67c992e7f84e3559ffde96", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5209b192558e4adf0baa0981c463dcff61ec0636/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5209b192558e4adf0baa0981c463dcff61ec0636/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=5209b192558e4adf0baa0981c463dcff61ec0636", "patch": "@@ -179,7 +179,7 @@ rust_scheduler::schedule_task(int id) {\n     // FIXME: in the face of failing tasks, this is not always right.\n     // I(this, n_live_tasks() > 0);\n     if (running_tasks.length() > 0) {\n-        size_t k = rand(&rctx);\n+        size_t k = isaac_rand(&rctx);\n         // Look around for a runnable task, starting at k.\n         for(size_t j = 0; j < running_tasks.length(); ++j) {\n             size_t  i = (j + k) % running_tasks.length();"}]}