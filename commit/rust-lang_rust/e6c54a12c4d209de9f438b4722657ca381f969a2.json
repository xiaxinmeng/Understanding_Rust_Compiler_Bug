{"sha": "e6c54a12c4d209de9f438b4722657ca381f969a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2YzU0YTEyYzRkMjA5ZGU5ZjQzOGI0NzIyNjU3Y2EzODFmOTY5YTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-03T03:41:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-03T03:41:39Z"}, "message": "auto merge of #15087 : iliekturtles/rust/13810-make-install-mingw32, r=brson\n\nShort-term fix per @brson's comment: https://github.com/rust-lang/rust/issues/13810#issuecomment-43562843. Tested on Win7 x64 and Linux.\r\n\r\nOne possible issue is that `install.sh` doesn't have a `need_cmd` definition like `configure` does. Should this be ported over as well?\r\n\r\nPlatform-detection code from `configure` copied over to `install.sh` in\r\norder to special case the lib dir being `bin` on Windows instead of\r\n`lib`.\r\n\r\nShort-term fix for #13810.", "tree": {"sha": "62cc163497ab43f14319f9050bad6d28eaa7e2f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62cc163497ab43f14319f9050bad6d28eaa7e2f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6c54a12c4d209de9f438b4722657ca381f969a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6c54a12c4d209de9f438b4722657ca381f969a2", "html_url": "https://github.com/rust-lang/rust/commit/e6c54a12c4d209de9f438b4722657ca381f969a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6c54a12c4d209de9f438b4722657ca381f969a2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67776ba3dab24a3e281931da437d30ccfc3b04c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/67776ba3dab24a3e281931da437d30ccfc3b04c1", "html_url": "https://github.com/rust-lang/rust/commit/67776ba3dab24a3e281931da437d30ccfc3b04c1"}, {"sha": "ccd7aaf17a4fa3c4851758ec70ffa755e25455be", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccd7aaf17a4fa3c4851758ec70ffa755e25455be", "html_url": "https://github.com/rust-lang/rust/commit/ccd7aaf17a4fa3c4851758ec70ffa755e25455be"}], "stats": {"total": 69, "additions": 67, "deletions": 2}, "files": [{"sha": "fd4c20d73c5d1df40979ed95a3f691026caed0b3", "filename": "src/etc/install.sh", "status": "modified", "additions": 67, "deletions": 2, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/e6c54a12c4d209de9f438b4722657ca381f969a2/src%2Fetc%2Finstall.sh", "raw_url": "https://github.com/rust-lang/rust/raw/e6c54a12c4d209de9f438b4722657ca381f969a2/src%2Fetc%2Finstall.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstall.sh?ref=e6c54a12c4d209de9f438b4722657ca381f969a2", "patch": "@@ -35,6 +35,13 @@ need_ok() {\n     fi\n }\n \n+need_cmd() {\n+    if command -v $1 >/dev/null 2>&1\n+    then msg \"found $1\"\n+    else err \"need $1\"\n+    fi\n+}\n+\n putvar() {\n     local T\n     eval T=\\$$1\n@@ -198,6 +205,15 @@ absolutify() {\n     ABSOLUTIFIED=\"${FILE_PATH}\"\n }\n \n+msg \"looking for install programs\"\n+need_cmd mkdir\n+need_cmd printf\n+need_cmd cut\n+need_cmd grep\n+need_cmd uname\n+need_cmd tr\n+need_cmd sed\n+\n CFG_SRC_DIR=\"$(cd $(dirname $0) && pwd)/\"\n CFG_SELF=\"$0\"\n CFG_ARGS=\"$@\"\n@@ -216,16 +232,65 @@ else\n     step_msg \"processing $CFG_SELF args\"\n fi\n \n+# Check for mingw or cygwin in order to special case $CFG_LIBDIR_RELATIVE.\n+# This logic is duplicated from configure in order to get the correct libdir\n+# for Windows installs.\n+CFG_OSTYPE=$(uname -s)\n+\n+case $CFG_OSTYPE in\n+\n+    MINGW32*)\n+        CFG_OSTYPE=pc-mingw32\n+        ;;\n+\n+    MINGW64*)\n+        # msys2, MSYSTEM=MINGW64\n+        CFG_OSTYPE=w64-mingw32\n+        ;;\n+\n+# Thad's Cygwin identifers below\n+\n+#   Vista 32 bit\n+    CYGWIN_NT-6.0)\n+        CFG_OSTYPE=pc-mingw32\n+        ;;\n+\n+#   Vista 64 bit\n+    CYGWIN_NT-6.0-WOW64)\n+        CFG_OSTYPE=w64-mingw32\n+        ;;\n+\n+#   Win 7 32 bit\n+    CYGWIN_NT-6.1)\n+        CFG_OSTYPE=pc-mingw32\n+        ;;\n+\n+#   Win 7 64 bit\n+    CYGWIN_NT-6.1-WOW64)\n+        CFG_OSTYPE=w64-mingw32\n+        ;;\n+esac\n+\n OPTIONS=\"\"\n BOOL_OPTIONS=\"\"\n VAL_OPTIONS=\"\"\n \n+# On windows we just store the libraries in the bin directory because\n+# there's no rpath. This is where the build system itself puts libraries;\n+# --libdir is used to configure the installation directory.\n+# FIXME: Thise needs to parameterized over target triples. Do it in platform.mk\n+CFG_LIBDIR_RELATIVE=lib\n+if [ \"$CFG_OSTYPE\" = \"pc-mingw32\" ] || [ \"$CFG_OSTYPE\" = \"w64-mingw32\" ]\n+then\n+    CFG_LIBDIR_RELATIVE=bin\n+fi\n+\n flag uninstall \"only uninstall from the installation prefix\"\n opt verify 1 \"verify that the installed binaries run correctly\"\n valopt prefix \"/usr/local\" \"set installation prefix\"\n # NB This isn't quite the same definition as in `configure`.\n # just using 'lib' instead of CFG_LIBDIR_RELATIVE\n-valopt libdir \"${CFG_PREFIX}/lib\" \"install libraries\"\n+valopt libdir \"${CFG_PREFIX}/${CFG_LIBDIR_RELATIVE}\" \"install libraries\"\n valopt mandir \"${CFG_PREFIX}/share/man\" \"install man pages in PATH\"\n \n if [ $HELP -eq 1 ]\n@@ -384,7 +449,7 @@ while read p; do\n     need_ok \"failed to update manifest\"\n \n # The manifest lists all files to install\n-done < \"${CFG_SRC_DIR}/lib/rustlib/manifest.in\"\n+done < \"${CFG_SRC_DIR}/${CFG_LIBDIR_RELATIVE}/rustlib/manifest.in\"\n \n # Sanity check: can we run the installed binaries?\n if [ -z \"${CFG_DISABLE_VERIFY}\" ]"}]}