{"sha": "e0ffa7c3d2115b9a1d22b6a5de288aa696abf50f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwZmZhN2MzZDIxMTViOWExZDIyYjZhNWRlMjg4YWE2OTZhYmY1MGY=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-05T22:32:04Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-10T11:12:28Z"}, "message": "Inline State::new_from_input in pprust\n\nThis function took too many arguments and are simple on the inside;\ninlining them makes complexity go down.\n\nhir::print's copy is unfortunately used from librustc_driver so inlining\nit is not as straightforward.", "tree": {"sha": "fd5c77bd6b3416bb7ffdc1e43eeb4d20eac1b277", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd5c77bd6b3416bb7ffdc1e43eeb4d20eac1b277"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0ffa7c3d2115b9a1d22b6a5de288aa696abf50f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0ffa7c3d2115b9a1d22b6a5de288aa696abf50f", "html_url": "https://github.com/rust-lang/rust/commit/e0ffa7c3d2115b9a1d22b6a5de288aa696abf50f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0ffa7c3d2115b9a1d22b6a5de288aa696abf50f/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0db2e606cdb242db1466ae51129c9a6b81560fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0db2e606cdb242db1466ae51129c9a6b81560fe", "html_url": "https://github.com/rust-lang/rust/commit/e0db2e606cdb242db1466ae51129c9a6b81560fe"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "43714d3015bed66155c530eb0438a976f3d6e2c8", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e0ffa7c3d2115b9a1d22b6a5de288aa696abf50f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0ffa7c3d2115b9a1d22b6a5de288aa696abf50f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=e0ffa7c3d2115b9a1d22b6a5de288aa696abf50f", "patch": "@@ -105,7 +105,12 @@ pub fn print_crate<'a>(cm: &'a SourceMap,\n                        ann: &'a dyn PpAnn,\n                        is_expanded: bool) -> String {\n     let mut out = String::new();\n-    let mut s = State::new_from_input(cm, sess, filename, input, &mut out, ann, is_expanded);\n+    let mut s = State {\n+        s: pp::mk_printer(&mut out),\n+        comments: Some(Comments::new(cm, sess, filename, input)),\n+        ann,\n+        is_expanded,\n+    };\n \n     if is_expanded && std_inject::injected_crate_name().is_some() {\n         // We need to print `#![no_std]` (and its feature gate) so that\n@@ -132,23 +137,6 @@ pub fn print_crate<'a>(cm: &'a SourceMap,\n     out\n }\n \n-impl<'a> State<'a> {\n-    pub fn new_from_input(cm: &'a SourceMap,\n-                          sess: &ParseSess,\n-                          filename: FileName,\n-                          input: String,\n-                          out: &'a mut String,\n-                          ann: &'a dyn PpAnn,\n-                          is_expanded: bool) -> State<'a> {\n-        State {\n-            s: pp::mk_printer(out),\n-            comments: Some(Comments::new(cm, sess, filename, input)),\n-            ann,\n-            is_expanded,\n-        }\n-    }\n-}\n-\n pub fn to_string<F>(f: F) -> String where\n     F: FnOnce(&mut State<'_>),\n {"}]}