{"sha": "7dbd23626e2df2b129a31bc341d029bbf4439a70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkYmQyMzYyNmUyZGYyYjEyOWEzMWJjMzQxZDAyOWJiZjQ0MzlhNzA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-05T14:03:11Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-05T14:03:11Z"}, "message": "update development instructions in README", "tree": {"sha": "7dbb9b07018c6c1c0a2a665385419962a8db174c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7dbb9b07018c6c1c0a2a665385419962a8db174c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dbd23626e2df2b129a31bc341d029bbf4439a70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dbd23626e2df2b129a31bc341d029bbf4439a70", "html_url": "https://github.com/rust-lang/rust/commit/7dbd23626e2df2b129a31bc341d029bbf4439a70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dbd23626e2df2b129a31bc341d029bbf4439a70/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e501e13fa92ce2963b3d784b184632f528ef5f3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e501e13fa92ce2963b3d784b184632f528ef5f3e", "html_url": "https://github.com/rust-lang/rust/commit/e501e13fa92ce2963b3d784b184632f528ef5f3e"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "c7e7cb8c4a557ca121423a925a413c90f7fd7832", "filename": "README.md", "status": "modified", "additions": 27, "deletions": 9, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/7dbd23626e2df2b129a31bc341d029bbf4439a70/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/7dbd23626e2df2b129a31bc341d029bbf4439a70/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=7dbd23626e2df2b129a31bc341d029bbf4439a70", "patch": "@@ -85,27 +85,45 @@ find useful.\n \n ### Using a nightly rustc\n \n-miri heavily relies on internal rustc interfaces to execute MIR.  Still, some\n+Miri heavily relies on internal rustc interfaces to execute MIR.  Still, some\n things (like adding support for a new intrinsic) can be done by working just on\n-the miri side.\n+the Miri side.\n \n-To prepare, make sure you are using a nightly Rust compiler.  You also need to\n-set up a libstd that enables execution with Miri:\n+To prepare, make sure you are using a nightly Rust compiler.  The most\n+convenient way is to install Miri using cargo, then you can easily run it on\n+other projects:\n \n ```sh\n-rustup override set nightly # or the nightly in `rust-version`\n-cargo run --bin cargo-miri -- miri setup\n+cargo +nightly install --path \"$DIR\" --force # or the nightly in `rust-version`\n+cargo +nightly miri setup\n ```\n \n-The last command should end in printing the directory where the libstd was\n-built.  Set that as your `MIRI_SYSROOT` environment variable:\n+If you want to use a different libstd (not the one that comes with the\n+nightly), you can do that by running\n \n ```sh\n-export MIRI_SYSROOT=~/.cache/miri/HOST # or whatever the previous command said\n+XARGO_RUST_SRC=~/src/rust/rustc/src/ cargo +nightly miri setup\n ```\n \n+Either way, you can now do `cargo +nightly miri run` to run Miri with your\n+local changes on whatever project you are debugging.\n+\n+(We are giving `+nightly` explicitly here all the time because it is important\n+that all of these commands get executed with the same toolchain.)\n+\n ### Testing Miri\n \n+Instead of running an entire project using `cargo miri`, you can also use the\n+Miri \"driver\" directly to run just a single file.  That can be easier during\n+debugging.\n+\n+`cargo miri setup` should end in printing the directory where the libstd was\n+built.  Set that as your `MIRI_SYSROOT` environment variable:\n+\n+```sh\n+export MIRI_SYSROOT=~/.cache/miri/HOST # or whatever the previous command said\n+```\n+\n Now you can run Miri directly, without going through `cargo miri`:\n \n ```sh"}]}