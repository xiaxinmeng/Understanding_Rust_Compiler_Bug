{"sha": "7b693470c4fc61fff08c435cc3a2a646e88678cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiNjkzNDcwYzRmYzYxZmZmMDhjNDM1Y2MzYTJhNjQ2ZTg4Njc4Y2I=", "commit": {"author": {"name": "Yilin Chen", "email": "sticnarf@gmail.com", "date": "2021-03-21T17:54:05Z"}, "committer": {"name": "Yilin Chen", "email": "sticnarf@gmail.com", "date": "2021-03-21T17:54:05Z"}, "message": "check is_include_macro only when attr_path is not specified\n\nSigned-off-by: Yilin Chen <sticnarf@gmail.com>", "tree": {"sha": "c592f177e414c484d9e789aa1c9bfe421aceaba5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c592f177e414c484d9e789aa1c9bfe421aceaba5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b693470c4fc61fff08c435cc3a2a646e88678cb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJHBAABCAAxFiEE7iu9Owi80xH6UGNMNT5+00vzJuAFAmBXiD0THHN0aWNuYXJm\nQGdtYWlsLmNvbQAKCRA1Pn7TS/Mm4NPdEACFmQ9cB9VFKgvYpBO16lbjSUA1AvAx\nh353USs5JdWTByvIpMQbCUmzEzTuBZDbIuJuFOuXvdYaifCmkafry/mttS6pdrnw\n0Bo4diKOGKqXy+xEWjiOeBOh3cidsEZQg7Jnm6OM9x5luDtDvI5a1arMWvlvd0Cd\nx4Bcv6syI27ZbufLUM7K/oNhKo6zHz4Nn/r27Svgh4Pnqqy1mTTK0HuFPnkvUG7d\nFDrDm22Q1v4dCNt/4Mrw5BS4RLPWVT88lNBG2zgHHQY9ohB9PRgGV9QDRSFOXONs\nzZbxBSunlYE7pBc0G/bzc8giYGq/AyLDNDhr0ouybyawSOBaKEOK4HdbILL775WZ\nzAfmweXUjvi0OJ+BFFTewbJGPh6ZBsiWobCqg3Eoi1nlAkdr6TRlbSp/iZOcBvT6\nqQ9lMLiNx69/8L+Q5Ipv1gmoFUq6yhUoBiF98xJ3eXd+vK671Q3voPzFf3+Fw0Sn\nF2AcEwyziyeznJT5UPYclBbG9JywmjmKJf44vOt1fvkbP13ovHkW9hl0hbW1yHh2\nCrxcH6b1Xwn619E+Y4L9srhLb09ZKuyEXik2LpH4yoGv1D+yCyIrgNTG3S9O3A44\n7b9inSG03rZ/T3a3Qeiv57griGCgrdN0Q4r0d8EaA9hqM/IaUzxdMqFol2EqN0Ga\nxv3PIbWJP/XdiA==\n=di/D\n-----END PGP SIGNATURE-----", "payload": "tree c592f177e414c484d9e789aa1c9bfe421aceaba5\nparent 3bb9efb6b70445076858ab72bebbbd7e31347307\nauthor Yilin Chen <sticnarf@gmail.com> 1616349245 +0800\ncommitter Yilin Chen <sticnarf@gmail.com> 1616349245 +0800\n\ncheck is_include_macro only when attr_path is not specified\n\nSigned-off-by: Yilin Chen <sticnarf@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b693470c4fc61fff08c435cc3a2a646e88678cb", "html_url": "https://github.com/rust-lang/rust/commit/7b693470c4fc61fff08c435cc3a2a646e88678cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b693470c4fc61fff08c435cc3a2a646e88678cb/comments", "author": {"login": "sticnarf", "id": 17217495, "node_id": "MDQ6VXNlcjE3MjE3NDk1", "avatar_url": "https://avatars.githubusercontent.com/u/17217495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sticnarf", "html_url": "https://github.com/sticnarf", "followers_url": "https://api.github.com/users/sticnarf/followers", "following_url": "https://api.github.com/users/sticnarf/following{/other_user}", "gists_url": "https://api.github.com/users/sticnarf/gists{/gist_id}", "starred_url": "https://api.github.com/users/sticnarf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sticnarf/subscriptions", "organizations_url": "https://api.github.com/users/sticnarf/orgs", "repos_url": "https://api.github.com/users/sticnarf/repos", "events_url": "https://api.github.com/users/sticnarf/events{/privacy}", "received_events_url": "https://api.github.com/users/sticnarf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sticnarf", "id": 17217495, "node_id": "MDQ6VXNlcjE3MjE3NDk1", "avatar_url": "https://avatars.githubusercontent.com/u/17217495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sticnarf", "html_url": "https://github.com/sticnarf", "followers_url": "https://api.github.com/users/sticnarf/followers", "following_url": "https://api.github.com/users/sticnarf/following{/other_user}", "gists_url": "https://api.github.com/users/sticnarf/gists{/gist_id}", "starred_url": "https://api.github.com/users/sticnarf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sticnarf/subscriptions", "organizations_url": "https://api.github.com/users/sticnarf/orgs", "repos_url": "https://api.github.com/users/sticnarf/repos", "events_url": "https://api.github.com/users/sticnarf/events{/privacy}", "received_events_url": "https://api.github.com/users/sticnarf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bb9efb6b70445076858ab72bebbbd7e31347307", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bb9efb6b70445076858ab72bebbbd7e31347307", "html_url": "https://github.com/rust-lang/rust/commit/3bb9efb6b70445076858ab72bebbbd7e31347307"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "d9cec0e27ac4298a4b78a5500d3114c5df91dba2", "filename": "crates/hir_def/src/nameres/mod_resolution.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7b693470c4fc61fff08c435cc3a2a646e88678cb/crates%2Fhir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b693470c4fc61fff08c435cc3a2a646e88678cb/crates%2Fhir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs?ref=7b693470c4fc61fff08c435cc3a2a646e88678cb", "patch": "@@ -62,16 +62,15 @@ impl ModDir {\n         name: &Name,\n         attr_path: Option<&SmolStr>,\n     ) -> Result<(FileId, bool, ModDir), String> {\n-        let is_include_macro = file_id.is_include_macro(db.upcast());\n-        let file_id = file_id.original_file(db.upcast());\n+        let orig_file_id = file_id.original_file(db.upcast());\n \n         let mut candidate_files = Vec::new();\n         match attr_path {\n             Some(attr_path) => {\n                 candidate_files.push(self.dir_path.join_attr(attr_path, self.root_non_dir_owner))\n             }\n             None => {\n-                if is_include_macro {\n+                if file_id.is_include_macro(db.upcast()) {\n                     candidate_files.push(format!(\"{}.rs\", name));\n                     candidate_files.push(format!(\"{}/mod.rs\", name));\n                 } else {\n@@ -82,7 +81,7 @@ impl ModDir {\n         };\n \n         for candidate in candidate_files.iter() {\n-            let path = AnchoredPath { anchor: file_id, path: candidate.as_str() };\n+            let path = AnchoredPath { anchor: orig_file_id, path: candidate.as_str() };\n             if let Some(file_id) = db.resolve_path(path) {\n                 let is_mod_rs = candidate.ends_with(\"/mod.rs\");\n "}]}