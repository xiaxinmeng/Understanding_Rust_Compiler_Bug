{"sha": "869680736d98cb679c5056e3df3c8bb8b1c4272f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2OTY4MDczNmQ5OGNiNjc5YzUwNTZlM2RmM2M4YmI4YjFjNDI3MmY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-22T23:59:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-22T23:59:15Z"}, "message": "Rollup merge of #62047 - Centril:cfg-attr-empty-lint, r=estebank\n\nTrigger `unused_attribute` lint on `#[cfg_attr($pred,)]`\n\nLint on `#[cfg_attr($pred,)]` as decided in https://github.com/rust-lang/rust/issues/54881#issuecomment-441442173.\n\nCloses https://github.com/rust-lang/rust/issues/54881.\n\nr? @estebank", "tree": {"sha": "d375e09bf80ccdb993dac795e152c81218fe3f7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d375e09bf80ccdb993dac795e152c81218fe3f7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/869680736d98cb679c5056e3df3c8bb8b1c4272f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdDsDTCRBK7hj4Ov3rIwAAdHIIAC1cXVACGrzXzdPog3WllebD\n7ZPIfqLaNb2MnStjqbnnfAl6QPNgH5g2D3f1BiPVP2gJQhbeQbhO9ZT5dccx505Q\nxkgi0FC//CB2ALxULCJdCE1hz2TDlCXCOTZg2b7BFAP4naJgPXJHfVcdJNMPy0sJ\n4IAgqnYOP1MO2DvdVoDSEEFTTuYV3zCP+bzSdy8Zf8nqZPZMX+5evTiiHBS54hm+\n0+EvifVAPIEI3J+EGv4WhhBPhRKt4NdGOBlmfcM3tkP8V5dNsshRHvAtxGjpmZlh\nhJDCzOdH4tAnyW7DadNnI6CHqGgd9Kw8aYNpYXpxPIwbeZ8xiC3L8Vejk9ZPo8Y=\n=h8Lr\n-----END PGP SIGNATURE-----\n", "payload": "tree d375e09bf80ccdb993dac795e152c81218fe3f7f\nparent de02101e6d949c4a9040211e9ce8c488a997497e\nparent af710c9e79345497fdad53873f0acefa0e26fddf\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1561247955 +0200\ncommitter GitHub <noreply@github.com> 1561247955 +0200\n\nRollup merge of #62047 - Centril:cfg-attr-empty-lint, r=estebank\n\nTrigger `unused_attribute` lint on `#[cfg_attr($pred,)]`\n\nLint on `#[cfg_attr($pred,)]` as decided in https://github.com/rust-lang/rust/issues/54881#issuecomment-441442173.\n\nCloses https://github.com/rust-lang/rust/issues/54881.\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/869680736d98cb679c5056e3df3c8bb8b1c4272f", "html_url": "https://github.com/rust-lang/rust/commit/869680736d98cb679c5056e3df3c8bb8b1c4272f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/869680736d98cb679c5056e3df3c8bb8b1c4272f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de02101e6d949c4a9040211e9ce8c488a997497e", "url": "https://api.github.com/repos/rust-lang/rust/commits/de02101e6d949c4a9040211e9ce8c488a997497e", "html_url": "https://github.com/rust-lang/rust/commit/de02101e6d949c4a9040211e9ce8c488a997497e"}, {"sha": "af710c9e79345497fdad53873f0acefa0e26fddf", "url": "https://api.github.com/repos/rust-lang/rust/commits/af710c9e79345497fdad53873f0acefa0e26fddf", "html_url": "https://github.com/rust-lang/rust/commit/af710c9e79345497fdad53873f0acefa0e26fddf"}], "stats": {"total": 55, "additions": 45, "deletions": 10}, "files": [{"sha": "1ab367f73c1b31a1da288c8a293fc999d5ee150a", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/869680736d98cb679c5056e3df3c8bb8b1c4272f/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869680736d98cb679c5056e3df3c8bb8b1c4272f/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=869680736d98cb679c5056e3df3c8bb8b1c4272f", "patch": "@@ -91,10 +91,10 @@ impl<'a> StripUnconfigured<'a> {\n     /// is in the original source file. Gives a compiler error if the syntax of\n     /// the attribute is incorrect.\n     fn process_cfg_attr(&mut self, attr: ast::Attribute) -> Vec<ast::Attribute> {\n-        if !attr.check_name(sym::cfg_attr) {\n+        if attr.path != sym::cfg_attr {\n             return vec![attr];\n         }\n-        if attr.tokens.len() == 0 {\n+        if attr.tokens.is_empty() {\n             self.sess.span_diagnostic\n                 .struct_span_err(\n                     attr.span,\n@@ -108,7 +108,7 @@ impl<'a> StripUnconfigured<'a> {\n                        <https://doc.rust-lang.org/reference/conditional-compilation.html\\\n                        #the-cfg_attr-attribute>\")\n                 .emit();\n-            return Vec::new();\n+            return vec![];\n         }\n \n         let (cfg_predicate, expanded_attrs) = match attr.parse(self.sess, |parser| {\n@@ -133,17 +133,18 @@ impl<'a> StripUnconfigured<'a> {\n             Ok(result) => result,\n             Err(mut e) => {\n                 e.emit();\n-                return Vec::new();\n+                return vec![];\n             }\n         };\n \n-        // Check feature gate and lint on zero attributes in source. Even if the feature is gated,\n-        // we still compute as if it wasn't, since the emitted error will stop compilation further\n-        // along the compilation.\n-        if expanded_attrs.len() == 0 {\n-            // FIXME: Emit unused attribute lint here.\n+        // Lint on zero attributes in source.\n+        if expanded_attrs.is_empty() {\n+            return vec![attr];\n         }\n \n+        // At this point we know the attribute is considered used.\n+        attr::mark_used(&attr);\n+\n         if attr::cfg_matches(&cfg_predicate, self.sess, self.features) {\n             // We call `process_cfg_attr` recursively in case there's a\n             // `cfg_attr` inside of another `cfg_attr`. E.g.\n@@ -159,7 +160,7 @@ impl<'a> StripUnconfigured<'a> {\n             }))\n             .collect()\n         } else {\n-            Vec::new()\n+            vec![]\n         }\n     }\n "}, {"sha": "4c96d6e7ca17d22e13b95a967f20d162491ff90c", "filename": "src/test/ui/conditional-compilation/cfg-attr-empty-is-unused.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/869680736d98cb679c5056e3df3c8bb8b1c4272f/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-empty-is-unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/869680736d98cb679c5056e3df3c8bb8b1c4272f/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-empty-is-unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-empty-is-unused.rs?ref=869680736d98cb679c5056e3df3c8bb8b1c4272f", "patch": "@@ -0,0 +1,13 @@\n+// Check that `#[cfg_attr($PREDICATE,)]` triggers the `unused_attribute` lint.\n+\n+// compile-flags: --cfg TRUE\n+\n+#![deny(unused)]\n+\n+#[cfg_attr(FALSE,)] //~ ERROR unused attribute\n+fn _f() {}\n+\n+#[cfg_attr(TRUE,)] //~ ERROR unused attribute\n+fn _g() {}\n+\n+fn main() {}"}, {"sha": "cd3563e66c720508412673a961a1556e283adb16", "filename": "src/test/ui/conditional-compilation/cfg-attr-empty-is-unused.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/869680736d98cb679c5056e3df3c8bb8b1c4272f/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-empty-is-unused.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/869680736d98cb679c5056e3df3c8bb8b1c4272f/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-empty-is-unused.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-empty-is-unused.stderr?ref=869680736d98cb679c5056e3df3c8bb8b1c4272f", "patch": "@@ -0,0 +1,21 @@\n+error: unused attribute\n+  --> $DIR/cfg-attr-empty-is-unused.rs:7:1\n+   |\n+LL | #[cfg_attr(FALSE,)]\n+   | ^^^^^^^^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/cfg-attr-empty-is-unused.rs:5:9\n+   |\n+LL | #![deny(unused)]\n+   |         ^^^^^^\n+   = note: #[deny(unused_attributes)] implied by #[deny(unused)]\n+\n+error: unused attribute\n+  --> $DIR/cfg-attr-empty-is-unused.rs:10:1\n+   |\n+LL | #[cfg_attr(TRUE,)]\n+   | ^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}