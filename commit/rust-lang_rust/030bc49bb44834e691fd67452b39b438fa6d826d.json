{"sha": "030bc49bb44834e691fd67452b39b438fa6d826d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMGJjNDliYjQ0ODM0ZTY5MWZkNjc0NTJiMzliNDM4ZmE2ZDgyNmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-15T08:48:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-15T08:48:42Z"}, "message": "Auto merge of #37094 - fhartwig:spec-extend-from-slice, r=alexcrichton\n\nSpecialize Vec::extend to Vec::extend_from_slice\n\nI tried using the existing `SpecExtend` as a helper trait for this, but the instances would always conflict with the instances higher up in the file, so I created a new helper trait.\n\nBenchmarking `extend` vs `extend_from_slice` with an slice of 1000 `u64`s gives the following results:\n\n```\nbefore:\n\nrunning 2 tests\ntest tests::bench_extend_from_slice ... bench:         166 ns/iter (+/- 78)\ntest tests::bench_extend_trait      ... bench:       1,187 ns/iter (+/- 697)\n\nafter:\nrunning 2 tests\ntest tests::bench_extend_from_slice ... bench:         149 ns/iter (+/- 87)\ntest tests::bench_extend_trait      ... bench:         138 ns/iter (+/- 70)\n```", "tree": {"sha": "1469eadc56fdd6dc35eb8d05521776ca33cfd788", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1469eadc56fdd6dc35eb8d05521776ca33cfd788"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/030bc49bb44834e691fd67452b39b438fa6d826d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/030bc49bb44834e691fd67452b39b438fa6d826d", "html_url": "https://github.com/rust-lang/rust/commit/030bc49bb44834e691fd67452b39b438fa6d826d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/030bc49bb44834e691fd67452b39b438fa6d826d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1b67776dbb65e4ad256d27d9d215c643a4df57b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b67776dbb65e4ad256d27d9d215c643a4df57b", "html_url": "https://github.com/rust-lang/rust/commit/e1b67776dbb65e4ad256d27d9d215c643a4df57b"}, {"sha": "63ee8d0bbc9911ee121ed4af4f7e81cbd600d8b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/63ee8d0bbc9911ee121ed4af4f7e81cbd600d8b1", "html_url": "https://github.com/rust-lang/rust/commit/63ee8d0bbc9911ee121ed4af4f7e81cbd600d8b1"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "52fc8b9dd7049769ee53f6723acf784c0f5fe900", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/030bc49bb44834e691fd67452b39b438fa6d826d/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/030bc49bb44834e691fd67452b39b438fa6d826d/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=030bc49bb44834e691fd67452b39b438fa6d826d", "patch": "@@ -1614,7 +1614,24 @@ impl<T> Vec<T> {\n #[stable(feature = \"extend_ref\", since = \"1.2.0\")]\n impl<'a, T: 'a + Copy> Extend<&'a T> for Vec<T> {\n     fn extend<I: IntoIterator<Item = &'a T>>(&mut self, iter: I) {\n-        self.extend(iter.into_iter().cloned());\n+        <I as SpecExtendVec<T>>::extend_vec(iter, self);\n+    }\n+}\n+\n+// helper trait for specialization of Vec's Extend impl\n+trait SpecExtendVec<T> {\n+    fn extend_vec(self, vec: &mut Vec<T>);\n+}\n+\n+impl <'a, T: 'a + Copy, I: IntoIterator<Item=&'a T>> SpecExtendVec<T> for I {\n+    default fn extend_vec(self, vec: &mut Vec<T>) {\n+        vec.extend(self.into_iter().cloned());\n+    }\n+}\n+\n+impl<'a, T: Copy> SpecExtendVec<T> for &'a [T] {\n+    fn extend_vec(self, vec: &mut Vec<T>) {\n+        vec.extend_from_slice(self);\n     }\n }\n "}]}