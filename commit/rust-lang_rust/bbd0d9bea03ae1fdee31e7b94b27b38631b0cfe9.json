{"sha": "bbd0d9bea03ae1fdee31e7b94b27b38631b0cfe9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZDBkOWJlYTAzYWUxZmRlZTMxZTdiOTRiMjdiMzg2MzFiMGNmZTk=", "commit": {"author": {"name": "Janusz Marcinkiewicz", "email": "virrages@gmail.com", "date": "2019-11-23T03:01:14Z"}, "committer": {"name": "Janusz Marcinkiewicz", "email": "virrages@gmail.com", "date": "2019-11-23T03:01:14Z"}, "message": "Cleanup code after review fixes", "tree": {"sha": "3ba427e49be8049cf81526431b44ad2865892fb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ba427e49be8049cf81526431b44ad2865892fb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbd0d9bea03ae1fdee31e7b94b27b38631b0cfe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbd0d9bea03ae1fdee31e7b94b27b38631b0cfe9", "html_url": "https://github.com/rust-lang/rust/commit/bbd0d9bea03ae1fdee31e7b94b27b38631b0cfe9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbd0d9bea03ae1fdee31e7b94b27b38631b0cfe9/comments", "author": {"login": "VirrageS", "id": 3855799, "node_id": "MDQ6VXNlcjM4NTU3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3855799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VirrageS", "html_url": "https://github.com/VirrageS", "followers_url": "https://api.github.com/users/VirrageS/followers", "following_url": "https://api.github.com/users/VirrageS/following{/other_user}", "gists_url": "https://api.github.com/users/VirrageS/gists{/gist_id}", "starred_url": "https://api.github.com/users/VirrageS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VirrageS/subscriptions", "organizations_url": "https://api.github.com/users/VirrageS/orgs", "repos_url": "https://api.github.com/users/VirrageS/repos", "events_url": "https://api.github.com/users/VirrageS/events{/privacy}", "received_events_url": "https://api.github.com/users/VirrageS/received_events", "type": "User", "site_admin": false}, "committer": {"login": "VirrageS", "id": 3855799, "node_id": "MDQ6VXNlcjM4NTU3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3855799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VirrageS", "html_url": "https://github.com/VirrageS", "followers_url": "https://api.github.com/users/VirrageS/followers", "following_url": "https://api.github.com/users/VirrageS/following{/other_user}", "gists_url": "https://api.github.com/users/VirrageS/gists{/gist_id}", "starred_url": "https://api.github.com/users/VirrageS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VirrageS/subscriptions", "organizations_url": "https://api.github.com/users/VirrageS/orgs", "repos_url": "https://api.github.com/users/VirrageS/repos", "events_url": "https://api.github.com/users/VirrageS/events{/privacy}", "received_events_url": "https://api.github.com/users/VirrageS/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e660d8a79062ba3c664822a72ae782cb8c38da7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e660d8a79062ba3c664822a72ae782cb8c38da7", "html_url": "https://github.com/rust-lang/rust/commit/0e660d8a79062ba3c664822a72ae782cb8c38da7"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "4b783c6c2bedc372bee3e888f5e67d9610d0cec6", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/bbd0d9bea03ae1fdee31e7b94b27b38631b0cfe9/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbd0d9bea03ae1fdee31e7b94b27b38631b0cfe9/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=bbd0d9bea03ae1fdee31e7b94b27b38631b0cfe9", "patch": "@@ -1752,25 +1752,22 @@ impl<'a> Parser<'a> {\n     fn recover_nested_adt_item(&mut self, keyword: Symbol) -> PResult<'a, bool> {\n         if self.token.is_keyword(kw::Enum) ||\n             self.token.is_keyword(kw::Struct) ||\n-            self.token.is_keyword(kw::Union)  {\n-\n-            let prev_token = self.token.clone();\n+            self.token.is_keyword(kw::Union)\n+        {\n+            let kw_token = self.token.clone();\n+            let kw_str = pprust::token_to_string(&kw_token);\n             let item = self.parse_item()?;\n-            if self.token == token::Comma {\n-                self.bump();\n-            }\n+            self.eat(&token::Comma);\n \n-            let mut err = self.struct_span_err(\n-                prev_token.span,\n-                &format!(\"`{}` definition cannot be nested inside `{}`\", pprust::token_to_string(&prev_token), keyword),\n-            );\n-            err.span_suggestion(\n+            self.struct_span_err(\n+                kw_token.span,\n+                &format!(\"`{}` definition cannot be nested inside `{}`\", kw_str, keyword),\n+            ).span_suggestion(\n                 item.unwrap().span,\n-                &format!(\"consider creating a new `{}` definition instead of nesting\", pprust::token_to_string(&prev_token)),\n+                &format!(\"consider creating a new `{}` definition instead of nesting\", kw_str),\n                 String::new(),\n                 Applicability::MaybeIncorrect,\n-            );\n-            err.emit();\n+            ).emit();\n             // We successfully parsed the item but we must inform the caller about nested problem.\n             return Ok(false)\n         }"}]}