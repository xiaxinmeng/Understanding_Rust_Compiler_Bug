{"sha": "e305bf8bc8cecaf93080f07962a4f763cd66f5ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMDViZjhiYzhjZWNhZjkzMDgwZjA3OTYyYTRmNzYzY2Q2NmY1Y2U=", "commit": {"author": {"name": "Janusz Marcinkiewicz", "email": "virrages@gmail.com", "date": "2019-12-03T07:20:17Z"}, "committer": {"name": "Janusz Marcinkiewicz", "email": "virrages@gmail.com", "date": "2019-12-07T07:55:09Z"}, "message": "Rename tests and add short test description", "tree": {"sha": "de5c674acb13e4eb1cb538837fd53df66c2c3729", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de5c674acb13e4eb1cb538837fd53df66c2c3729"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e305bf8bc8cecaf93080f07962a4f763cd66f5ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e305bf8bc8cecaf93080f07962a4f763cd66f5ce", "html_url": "https://github.com/rust-lang/rust/commit/e305bf8bc8cecaf93080f07962a4f763cd66f5ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e305bf8bc8cecaf93080f07962a4f763cd66f5ce/comments", "author": {"login": "VirrageS", "id": 3855799, "node_id": "MDQ6VXNlcjM4NTU3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3855799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VirrageS", "html_url": "https://github.com/VirrageS", "followers_url": "https://api.github.com/users/VirrageS/followers", "following_url": "https://api.github.com/users/VirrageS/following{/other_user}", "gists_url": "https://api.github.com/users/VirrageS/gists{/gist_id}", "starred_url": "https://api.github.com/users/VirrageS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VirrageS/subscriptions", "organizations_url": "https://api.github.com/users/VirrageS/orgs", "repos_url": "https://api.github.com/users/VirrageS/repos", "events_url": "https://api.github.com/users/VirrageS/events{/privacy}", "received_events_url": "https://api.github.com/users/VirrageS/received_events", "type": "User", "site_admin": false}, "committer": {"login": "VirrageS", "id": 3855799, "node_id": "MDQ6VXNlcjM4NTU3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3855799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VirrageS", "html_url": "https://github.com/VirrageS", "followers_url": "https://api.github.com/users/VirrageS/followers", "following_url": "https://api.github.com/users/VirrageS/following{/other_user}", "gists_url": "https://api.github.com/users/VirrageS/gists{/gist_id}", "starred_url": "https://api.github.com/users/VirrageS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VirrageS/subscriptions", "organizations_url": "https://api.github.com/users/VirrageS/orgs", "repos_url": "https://api.github.com/users/VirrageS/repos", "events_url": "https://api.github.com/users/VirrageS/events{/privacy}", "received_events_url": "https://api.github.com/users/VirrageS/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d419a5fdaebb36dbf3c600f624c964d9ea651661", "url": "https://api.github.com/repos/rust-lang/rust/commits/d419a5fdaebb36dbf3c600f624c964d9ea651661", "html_url": "https://github.com/rust-lang/rust/commit/d419a5fdaebb36dbf3c600f624c964d9ea651661"}], "stats": {"total": 64, "additions": 38, "deletions": 26}, "files": [{"sha": "7fa059583f53986a0cd7d74c9d1334d27308e19f", "filename": "src/test/ui/const-generics/array-impls/core-traits-no-impls-length-33.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e305bf8bc8cecaf93080f07962a4f763cd66f5ce/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Fcore-traits-no-impls-length-33.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e305bf8bc8cecaf93080f07962a4f763cd66f5ce/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Fcore-traits-no-impls-length-33.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Fcore-traits-no-impls-length-33.rs?ref=e305bf8bc8cecaf93080f07962a4f763cd66f5ce", "patch": "@@ -6,6 +6,7 @@ pub fn no_debug() {\n pub fn no_hash() {\n     use std::collections::HashSet;\n     let mut set = HashSet::new();\n+    //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n     set.insert([0_usize; 33]);\n     //~^ ERROR arrays only have std trait implementations for lengths 0..=32\n }"}, {"sha": "d885c98dcb287bdaa8703a705c131faae0ac6458", "filename": "src/test/ui/const-generics/array-impls/core-traits-no-impls-length-33.stderr", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e305bf8bc8cecaf93080f07962a4f763cd66f5ce/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Fcore-traits-no-impls-length-33.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e305bf8bc8cecaf93080f07962a4f763cd66f5ce/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Fcore-traits-no-impls-length-33.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-impls%2Fcore-traits-no-impls-length-33.stderr?ref=e305bf8bc8cecaf93080f07962a4f763cd66f5ce", "patch": "@@ -8,15 +8,24 @@ LL |     println!(\"{:?}\", [0_usize; 33]);\n    = note: required by `std::fmt::Debug::fmt`\n \n error[E0277]: arrays only have std trait implementations for lengths 0..=32\n-  --> $DIR/core-traits-no-impls-length-33.rs:9:16\n+  --> $DIR/core-traits-no-impls-length-33.rs:10:16\n    |\n LL |     set.insert([0_usize; 33]);\n    |                ^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[usize; 33]`\n    |\n    = note: required because of the requirements on the impl of `std::cmp::Eq` for `[usize; 33]`\n \n+error[E0277]: arrays only have std trait implementations for lengths 0..=32\n+  --> $DIR/core-traits-no-impls-length-33.rs:8:19\n+   |\n+LL |     let mut set = HashSet::new();\n+   |                   ^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[usize; 33]`\n+   |\n+   = note: required because of the requirements on the impl of `std::cmp::Eq` for `[usize; 33]`\n+   = note: required by `std::collections::HashSet::<T>::new`\n+\n error[E0369]: binary operation `==` cannot be applied to type `[usize; 33]`\n-  --> $DIR/core-traits-no-impls-length-33.rs:14:19\n+  --> $DIR/core-traits-no-impls-length-33.rs:15:19\n    |\n LL |     [0_usize; 33] == [1_usize; 33]\n    |     ------------- ^^ ------------- [usize; 33]\n@@ -26,7 +35,7 @@ LL |     [0_usize; 33] == [1_usize; 33]\n    = note: an implementation of `std::cmp::PartialEq` might be missing for `[usize; 33]`\n \n error[E0369]: binary operation `<` cannot be applied to type `[usize; 33]`\n-  --> $DIR/core-traits-no-impls-length-33.rs:19:19\n+  --> $DIR/core-traits-no-impls-length-33.rs:20:19\n    |\n LL |     [0_usize; 33] < [1_usize; 33]\n    |     ------------- ^ ------------- [usize; 33]\n@@ -36,7 +45,7 @@ LL |     [0_usize; 33] < [1_usize; 33]\n    = note: an implementation of `std::cmp::PartialOrd` might be missing for `[usize; 33]`\n \n error[E0277]: the trait bound `&[usize; 33]: std::iter::IntoIterator` is not satisfied\n-  --> $DIR/core-traits-no-impls-length-33.rs:24:14\n+  --> $DIR/core-traits-no-impls-length-33.rs:25:14\n    |\n LL |     for _ in &[0_usize; 33] {\n    |              ^^^^^^^^^^^^^^ the trait `std::iter::IntoIterator` is not implemented for `&[usize; 33]`\n@@ -48,7 +57,7 @@ LL |     for _ in &[0_usize; 33] {\n              <&'a mut [T] as std::iter::IntoIterator>\n    = note: required by `std::iter::IntoIterator::into_iter`\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 6 previous errors\n \n Some errors have detailed explanations: E0277, E0369.\n For more information about an error, try `rustc --explain E0277`."}, {"sha": "8332807397247eae743200724c9043fe65ab7284", "filename": "src/test/ui/issues/issue-66923-show-error-for-correct-call.rs", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e305bf8bc8cecaf93080f07962a4f763cd66f5ce/src%2Ftest%2Fui%2Fissues%2Fissue-66923-show-error-for-correct-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e305bf8bc8cecaf93080f07962a4f763cd66f5ce/src%2Ftest%2Fui%2Fissues%2Fissue-66923-show-error-for-correct-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-66923-show-error-for-correct-call.rs?ref=e305bf8bc8cecaf93080f07962a4f763cd66f5ce", "patch": "@@ -1,13 +1,15 @@\n+// This test checks that errors are showed for lines with `collect` rather than `push` method.\n+\n fn main() {\n     let v = vec![1_f64, 2.2_f64];\n     let mut fft: Vec<Vec<f64>> = vec![];\n \n     let x1: &[f64] = &v;\n     let x2: Vec<f64> = x1.into_iter().collect();\n-    //~^ ERROR a collection of type\n+    //~^ ERROR a value of type\n     fft.push(x2);\n \n     let x3 = x1.into_iter().collect::<Vec<f64>>();\n-    //~^ ERROR a collection of type\n+    //~^ ERROR a value of type\n     fft.push(x3);\n }", "previous_filename": "src/test/ui/issues/issue-66923.rs"}, {"sha": "8e7ee97e0b9072d416a7f16c98534f9c839241e9", "filename": "src/test/ui/issues/issue-66923-show-error-for-correct-call.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e305bf8bc8cecaf93080f07962a4f763cd66f5ce/src%2Ftest%2Fui%2Fissues%2Fissue-66923-show-error-for-correct-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e305bf8bc8cecaf93080f07962a4f763cd66f5ce/src%2Ftest%2Fui%2Fissues%2Fissue-66923-show-error-for-correct-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-66923-show-error-for-correct-call.stderr?ref=e305bf8bc8cecaf93080f07962a4f763cd66f5ce", "patch": "@@ -0,0 +1,19 @@\n+error[E0277]: a value of type `std::vec::Vec<f64>` cannot be built from an iterator over elements of type `&f64`\n+  --> $DIR/issue-66923-show-error-for-correct-call.rs:8:39\n+   |\n+LL |     let x2: Vec<f64> = x1.into_iter().collect();\n+   |                                       ^^^^^^^ value of type `std::vec::Vec<f64>` cannot be built from `std::iter::Iterator<Item=&f64>`\n+   |\n+   = help: the trait `std::iter::FromIterator<&f64>` is not implemented for `std::vec::Vec<f64>`\n+\n+error[E0277]: a value of type `std::vec::Vec<f64>` cannot be built from an iterator over elements of type `&f64`\n+  --> $DIR/issue-66923-show-error-for-correct-call.rs:12:29\n+   |\n+LL |     let x3 = x1.into_iter().collect::<Vec<f64>>();\n+   |                             ^^^^^^^ value of type `std::vec::Vec<f64>` cannot be built from `std::iter::Iterator<Item=&f64>`\n+   |\n+   = help: the trait `std::iter::FromIterator<&f64>` is not implemented for `std::vec::Vec<f64>`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "a2eec7caee5079c49cb9b84e6038214ca8bae943", "filename": "src/test/ui/issues/issue-66923.stderr", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d419a5fdaebb36dbf3c600f624c964d9ea651661/src%2Ftest%2Fui%2Fissues%2Fissue-66923.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d419a5fdaebb36dbf3c600f624c964d9ea651661/src%2Ftest%2Fui%2Fissues%2Fissue-66923.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-66923.stderr?ref=d419a5fdaebb36dbf3c600f624c964d9ea651661", "patch": "@@ -1,19 +0,0 @@\n-error[E0277]: a collection of type `std::vec::Vec<f64>` cannot be built from an iterator over elements of type `&f64`\n-  --> $DIR/issue-66923.rs:6:39\n-   |\n-LL |     let x2: Vec<f64> = x1.into_iter().collect();\n-   |                                       ^^^^^^^ a collection of type `std::vec::Vec<f64>` cannot be built from `std::iter::Iterator<Item=&f64>`\n-   |\n-   = help: the trait `std::iter::FromIterator<&f64>` is not implemented for `std::vec::Vec<f64>`\n-\n-error[E0277]: a collection of type `std::vec::Vec<f64>` cannot be built from an iterator over elements of type `&f64`\n-  --> $DIR/issue-66923.rs:10:29\n-   |\n-LL |     let x3 = x1.into_iter().collect::<Vec<f64>>();\n-   |                             ^^^^^^^ a collection of type `std::vec::Vec<f64>` cannot be built from `std::iter::Iterator<Item=&f64>`\n-   |\n-   = help: the trait `std::iter::FromIterator<&f64>` is not implemented for `std::vec::Vec<f64>`\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0277`."}]}