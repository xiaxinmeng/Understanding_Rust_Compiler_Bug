{"sha": "b476344ccc877cd0a2bdb5673928f51fd80b4a79", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0NzYzNDRjY2M4NzdjZDBhMmJkYjU2NzM5MjhmNTFmZDgwYjRhNzk=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-22T20:31:24Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-26T21:50:18Z"}, "message": "Reintroduce the recursion comment", "tree": {"sha": "f96bb778b8352fd783b1c60f9fc0ae22d6c2aa4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f96bb778b8352fd783b1c60f9fc0ae22d6c2aa4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b476344ccc877cd0a2bdb5673928f51fd80b4a79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b476344ccc877cd0a2bdb5673928f51fd80b4a79", "html_url": "https://github.com/rust-lang/rust/commit/b476344ccc877cd0a2bdb5673928f51fd80b4a79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b476344ccc877cd0a2bdb5673928f51fd80b4a79/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1531c3937bb93778dad60c0352891464aa0e00bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/1531c3937bb93778dad60c0352891464aa0e00bd", "html_url": "https://github.com/rust-lang/rust/commit/1531c3937bb93778dad60c0352891464aa0e00bd"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "bc158a767cef5cdc5025c13fb91f47e234f58b34", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b476344ccc877cd0a2bdb5673928f51fd80b4a79/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b476344ccc877cd0a2bdb5673928f51fd80b4a79/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=b476344ccc877cd0a2bdb5673928f51fd80b4a79", "patch": "@@ -769,6 +769,10 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             self.param_env\n         };\n         let val = self.tcx.const_eval(param_env.and(gid))?;\n+        // Even though `ecx.const_eval` is called from `eval_const_to_op` we can never have a\n+        // recursion deeper than one level, because the `tcx.const_eval` above is guaranteed to not\n+        // return `ConstValue::Unevaluated`, which is the only way that `eval_const_to_op` will call\n+        // `ecx.const_eval`.\n         self.eval_const_to_op(val, None)\n     }\n "}]}