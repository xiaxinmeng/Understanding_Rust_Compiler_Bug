{"sha": "05c14bcc3180092ec4c03d59977abf96db7b4b7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YzE0YmNjMzE4MDA5MmVjNGMwM2Q1OTk3N2FiZjk2ZGI3YjRiN2E=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-10-26T06:51:49Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-07T11:05:01Z"}, "message": "Apply docs suggestions from review\n\nCo-Authored-By: Mazdak Farrokhzad <twingoow@gmail.com>", "tree": {"sha": "48c7c332d5a6d8bccf152fccde4923c91d955dbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48c7c332d5a6d8bccf152fccde4923c91d955dbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05c14bcc3180092ec4c03d59977abf96db7b4b7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05c14bcc3180092ec4c03d59977abf96db7b4b7a", "html_url": "https://github.com/rust-lang/rust/commit/05c14bcc3180092ec4c03d59977abf96db7b4b7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05c14bcc3180092ec4c03d59977abf96db7b4b7a/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1906c6f714502b1a0de46b9c217dc02570c3fd3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1906c6f714502b1a0de46b9c217dc02570c3fd3e", "html_url": "https://github.com/rust-lang/rust/commit/1906c6f714502b1a0de46b9c217dc02570c3fd3e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "31f908e91f55e33ec9f6b4daf2b9e696686a78e9", "filename": "src/libcore/mem/maybe_uninit.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/05c14bcc3180092ec4c03d59977abf96db7b4b7a/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05c14bcc3180092ec4c03d59977abf96db7b4b7a/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmaybe_uninit.rs?ref=05c14bcc3180092ec4c03d59977abf96db7b4b7a", "patch": "@@ -721,11 +721,11 @@ impl<T> MaybeUninit<T> {\n         &mut *self.value\n     }\n \n-    /// Get a slice of assume-initialized items.\n+    /// Assuming all the elements are initialized, get a slice to them.\n     ///\n     /// # Safety\n     ///\n-    /// It is up to the caller to guarantee that the `MaybeUninit<T>` items\n+    /// It is up to the caller to guarantee that the `MaybeUninit<T>` elements\n     /// really are in an initialized state.\n     /// Calling this when the content is not yet fully initialized causes undefined behavior.\n     #[unstable(feature = \"maybe_uninit_slice_assume_init\", issue = \"0\")]\n@@ -734,11 +734,11 @@ impl<T> MaybeUninit<T> {\n         &*(slice as *const [Self] as *const [T])\n     }\n \n-    /// Get a mutable slice of assume-initialized items.\n+    /// Assuming all the elements are initialized, get a mutable slice to them.\n     ///\n     /// # Safety\n     ///\n-    /// It is up to the caller to guarantee that the `MaybeUninit<T>` items\n+    /// It is up to the caller to guarantee that the `MaybeUninit<T>` elements\n     /// really are in an initialized state.\n     /// Calling this when the content is not yet fully initialized causes undefined behavior.\n     #[unstable(feature = \"maybe_uninit_slice_assume_init\", issue = \"0\")]"}]}