{"sha": "cc53db8bf9f7583b14ae3a309fb65c3cb676bd66", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjNTNkYjhiZjlmNzU4M2IxNGFlM2EzMDlmYjY1YzNjYjY3NmJkNjY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-29T23:40:11Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-29T23:40:11Z"}, "message": "Correct unused field warning on &struct match", "tree": {"sha": "8d84a983673fe894f7892a58ee0b26a4e41182db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d84a983673fe894f7892a58ee0b26a4e41182db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc53db8bf9f7583b14ae3a309fb65c3cb676bd66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc53db8bf9f7583b14ae3a309fb65c3cb676bd66", "html_url": "https://github.com/rust-lang/rust/commit/cc53db8bf9f7583b14ae3a309fb65c3cb676bd66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc53db8bf9f7583b14ae3a309fb65c3cb676bd66/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9975254ee6510cd1360417d3d145b56fb70b2e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9975254ee6510cd1360417d3d145b56fb70b2e7", "html_url": "https://github.com/rust-lang/rust/commit/a9975254ee6510cd1360417d3d145b56fb70b2e7"}], "stats": {"total": 54, "additions": 41, "deletions": 13}, "files": [{"sha": "bf7fecb884ebfa7e5fe747f768512f6b32fd2cde", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/cc53db8bf9f7583b14ae3a309fb65c3cb676bd66/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc53db8bf9f7583b14ae3a309fb65c3cb676bd66/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=cc53db8bf9f7583b14ae3a309fb65c3cb676bd66", "patch": "@@ -412,18 +412,28 @@ fn visit_local<'a, 'tcx>(ir: &mut IrMaps<'a, 'tcx>, local: &'tcx hir::Local) {\n }\n \n fn visit_arm<'a, 'tcx>(ir: &mut IrMaps<'a, 'tcx>, arm: &'tcx hir::Arm) {\n-    for pat in &arm.pats {\n-        // for struct patterns, take note of which fields used shorthand (`x` rather than `x: x`)\n+    for mut pat in &arm.pats {\n+        // For struct patterns, take note of which fields used shorthand\n+        // (`x` rather than `x: x`).\n         //\n-        // FIXME: according to the rust-lang-nursery/rustc-guide book, `NodeId`s are to be phased\n-        // out in favor of `HirId`s; however, we need to match the signature of `each_binding`,\n-        // which uses `NodeIds`.\n+        // FIXME: according to the rust-lang-nursery/rustc-guide book, `NodeId`s are to be\n+        // phased out in favor of `HirId`s; however, we need to match the signature of\n+        // `each_binding`, which uses `NodeIds`.\n         let mut shorthand_field_ids = NodeSet();\n-        if let hir::PatKind::Struct(_, ref fields, _) = pat.node {\n-            for field in fields {\n-                if field.node.is_shorthand {\n-                    shorthand_field_ids.insert(field.node.pat.id);\n+        loop {\n+            match pat.node {\n+                hir::PatKind::Struct(_, ref fields, _) => {\n+                    for field in fields {\n+                        if field.node.is_shorthand {\n+                            shorthand_field_ids.insert(field.node.pat.id);\n+                        }\n+                    }\n+                    break;\n+                }\n+                hir::PatKind::Ref(ref deref_pat, _) => {\n+                    pat = deref_pat;\n                 }\n+                _ => break\n             }\n         }\n "}, {"sha": "498e7e5e6c4c641470bee3c8674539c8fa753781", "filename": "src/test/ui/lint/issue-47390-unused-variable-in-struct-pattern.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cc53db8bf9f7583b14ae3a309fb65c3cb676bd66/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc53db8bf9f7583b14ae3a309fb65c3cb676bd66/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.rs?ref=cc53db8bf9f7583b14ae3a309fb65c3cb676bd66", "patch": "@@ -18,6 +18,10 @@ struct SoulHistory {\n     endless_and_singing: bool\n }\n \n+enum Large {\n+    Suit { case: () }\n+}\n+\n fn main() {\n     let i_think_continually = 2;\n     let who_from_the_womb_remembered = SoulHistory {\n@@ -31,4 +35,12 @@ fn main() {\n                          endless_and_singing: true } = who_from_the_womb_remembered {\n         hours_are_suns = false;\n     }\n+\n+    let bag = &Large::Suit {\n+        case: ()\n+    };\n+\n+    match bag {\n+        &Large::Suit { case } => {}\n+    };\n }"}, {"sha": "cecda22280c0539905321503ab98e4444fbdcc63", "filename": "src/test/ui/lint/issue-47390-unused-variable-in-struct-pattern.stderr", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cc53db8bf9f7583b14ae3a309fb65c3cb676bd66/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc53db8bf9f7583b14ae3a309fb65c3cb676bd66/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.stderr?ref=cc53db8bf9f7583b14ae3a309fb65c3cb676bd66", "patch": "@@ -1,5 +1,5 @@\n warning: unused variable: `i_think_continually`\n-  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:22:9\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:26:9\n    |\n LL |     let i_think_continually = 2;\n    |         ^^^^^^^^^^^^^^^^^^^ help: consider using `_i_think_continually` instead\n@@ -12,21 +12,21 @@ LL | #![warn(unused)] // UI tests pass `-A unused` (#43896)\n    = note: #[warn(unused_variables)] implied by #[warn(unused)]\n \n warning: unused variable: `corridors_of_light`\n-  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:29:26\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:33:26\n    |\n LL |     if let SoulHistory { corridors_of_light,\n    |                          ^^^^^^^^^^^^^^^^^^ help: try ignoring the field: `corridors_of_light: _`\n \n warning: variable `hours_are_suns` is assigned to, but never used\n-  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:30:26\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:34:26\n    |\n LL |                          mut hours_are_suns,\n    |                          ^^^^^^^^^^^^^^^^^^\n    |\n    = note: consider using `_hours_are_suns` instead\n \n warning: value assigned to `hours_are_suns` is never read\n-  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:32:9\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:36:9\n    |\n LL |         hours_are_suns = false;\n    |         ^^^^^^^^^^^^^^\n@@ -38,3 +38,9 @@ LL | #![warn(unused)] // UI tests pass `-A unused` (#43896)\n    |         ^^^^^^\n    = note: #[warn(unused_assignments)] implied by #[warn(unused)]\n \n+warning: unused variable: `case`\n+  --> $DIR/issue-47390-unused-variable-in-struct-pattern.rs:44:24\n+   |\n+LL |         &Large::Suit { case } => {}\n+   |                        ^^^^ help: try ignoring the field: `case: _`\n+"}]}