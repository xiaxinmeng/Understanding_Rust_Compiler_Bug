{"sha": "1cf1359c5511bb2ee569bf5985d97a513136b253", "node_id": "C_kwDOAAsO6NoAKDFjZjEzNTljNTUxMWJiMmVlNTY5YmY1OTg1ZDk3YTUxMzEzNmIyNTM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-12-05T11:02:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-05T11:02:55Z"}, "message": "Merge #10937\n\n10937: fix: Add highlighting hack back for unresolved attributes r=Veykril a=Veykril\n\ncc https://github.com/rust-analyzer/rust-analyzer/issues/10935\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "66c326d6927b1df4b554edc5c3374975971e150c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66c326d6927b1df4b554edc5c3374975971e150c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cf1359c5511bb2ee569bf5985d97a513136b253", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhrJxfCRBK7hj4Ov3rIwAAWbcIAHAdHrhWmWykuPvyYf4qm2Y9\nGsSN+17MVWJrK+Ljc4rKjMQgQnEYzpN1J9eOsEpPHvaMpYomlvUMoAPuJRbj4T+g\nxb6SNrn1/2H3t6ZGtibN6Y8RdH7uBVEyZX7cE1pKzjJaf74MvyL3Ed0OmjSTafsS\njkX1X/Gacmg7b2RwqE9F8wRx66gs7iYdVfxabFDubtPOFM7ae9Y7wLVBMjxIQNQW\njnqEhCnrn24LIepIdkxlzr0DTtKQHVR82C/KT1CGR6YIf1oOF/F79W1TyLCTomLU\nCZgeI+m8CtX+j+KfBSxc/nL9+lUM356SGwjryuO1ptxojCFeCQDtEYYjVEjEtGE=\n=ey0B\n-----END PGP SIGNATURE-----\n", "payload": "tree 66c326d6927b1df4b554edc5c3374975971e150c\nparent 8a084e6aca05337a88a152593bf04bae28090df1\nparent 9b4ca77572c4cfa71f51fef052ef0aa3cc8d6d19\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1638702175 +0000\ncommitter GitHub <noreply@github.com> 1638702175 +0000\n\nMerge #10937\n\n10937: fix: Add highlighting hack back for unresolved attributes r=Veykril a=Veykril\n\ncc https://github.com/rust-analyzer/rust-analyzer/issues/10935\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cf1359c5511bb2ee569bf5985d97a513136b253", "html_url": "https://github.com/rust-lang/rust/commit/1cf1359c5511bb2ee569bf5985d97a513136b253", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cf1359c5511bb2ee569bf5985d97a513136b253/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a084e6aca05337a88a152593bf04bae28090df1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a084e6aca05337a88a152593bf04bae28090df1", "html_url": "https://github.com/rust-lang/rust/commit/8a084e6aca05337a88a152593bf04bae28090df1"}, {"sha": "9b4ca77572c4cfa71f51fef052ef0aa3cc8d6d19", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b4ca77572c4cfa71f51fef052ef0aa3cc8d6d19", "html_url": "https://github.com/rust-lang/rust/commit/9b4ca77572c4cfa71f51fef052ef0aa3cc8d6d19"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "a52b2247c5abae7040063b6d61f2c2bcb107389d", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1cf1359c5511bb2ee569bf5985d97a513136b253/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cf1359c5511bb2ee569bf5985d97a513136b253/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=1cf1359c5511bb2ee569bf5985d97a513136b253", "patch": "@@ -262,6 +262,13 @@ fn highlight_name_ref(\n         None if name_ref.self_token().is_some() && is_in_fn_with_self_param(&name_ref) => {\n             return SymbolKind::SelfParam.into()\n         }\n+        // FIXME: This is required for helper attributes used by proc-macros, as those do not map down\n+        // to anything when used.\n+        // We can fix this for derive attributes since derive helpers are recorded, but not for\n+        // general attributes.\n+        None if name_ref.syntax().ancestors().any(|it| it.kind() == ATTR) => {\n+            return HlTag::Symbol(SymbolKind::Attribute).into();\n+        }\n         None => return HlTag::UnresolvedReference.into(),\n     };\n     let mut h = match name_class {"}]}