{"sha": "7c372cda3ad366d1e6fe78815d3dbe99e85670c9", "node_id": "C_kwDOAAsO6NoAKDdjMzcyY2RhM2FkMzY2ZDFlNmZlNzg4MTVkM2RiZTk5ZTg1NjcwYzk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-07T20:50:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-07T20:50:51Z"}, "message": "Auto merge of #102091 - RalfJung:const_err, r=oli-obk\n\nmake const_err a hard error\n\nThis lint has been deny-by-default with future incompat wording since [Rust 1.51](https://github.com/rust-lang/rust/pull/80394) and the stable release of this week starts showing it in cargo's future compat reports. I can't wait to finally get rid of at least some of the mess in our const-err-reporting-code. ;)\n\nr? `@oli-obk`\nFixes https://github.com/rust-lang/rust/issues/71800\nFixes https://github.com/rust-lang/rust/issues/100114", "tree": {"sha": "3c45a8d80e02aca933d7891a8af4a63bbd9cd62a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c45a8d80e02aca933d7891a8af4a63bbd9cd62a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c372cda3ad366d1e6fe78815d3dbe99e85670c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c372cda3ad366d1e6fe78815d3dbe99e85670c9", "html_url": "https://github.com/rust-lang/rust/commit/7c372cda3ad366d1e6fe78815d3dbe99e85670c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6819e85501348c6fab3c5d40d0e31d5c7d00bb6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6819e85501348c6fab3c5d40d0e31d5c7d00bb6a", "html_url": "https://github.com/rust-lang/rust/commit/6819e85501348c6fab3c5d40d0e31d5c7d00bb6a"}, {"sha": "e91746ed8271850de512fb765a21aa5ddb18a25c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e91746ed8271850de512fb765a21aa5ddb18a25c", "html_url": "https://github.com/rust-lang/rust/commit/e91746ed8271850de512fb765a21aa5ddb18a25c"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "af40a5a8187ee5dfa4adae5bbc9d7d28d981eb1d", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=7c372cda3ad366d1e6fe78815d3dbe99e85670c9", "patch": "@@ -19,7 +19,6 @@ declare_clippy_lint! {\n     ///\n     /// ### Example\n     /// ```rust,no_run\n-    /// # #![allow(const_err)]\n     /// let x = [1, 2, 3, 4];\n     ///\n     /// x[9];"}, {"sha": "9564e77c24b1cf64ad83b21c5a66165c6bd26097", "filename": "tests/ui/crashes/ice-9463.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/tests%2Fui%2Fcrashes%2Fice-9463.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/tests%2Fui%2Fcrashes%2Fice-9463.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-9463.rs?ref=7c372cda3ad366d1e6fe78815d3dbe99e85670c9", "patch": "@@ -1,4 +1,4 @@\n-#![deny(arithmetic_overflow, const_err)]\n+#![deny(arithmetic_overflow)]\n fn main() {\n     let _x = -1_i32 >> -1;\n     let _y = 1u32 >> 10000000000000u32;"}, {"sha": "2b425e85a27b5df0a087ea4b4a011fda909c3a18", "filename": "tests/ui/crashes/ice-9463.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/tests%2Fui%2Fcrashes%2Fice-9463.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/tests%2Fui%2Fcrashes%2Fice-9463.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-9463.stderr?ref=7c372cda3ad366d1e6fe78815d3dbe99e85670c9", "patch": "@@ -7,7 +7,7 @@ LL |     let _x = -1_i32 >> -1;\n note: the lint level is defined here\n   --> $DIR/ice-9463.rs:1:9\n    |\n-LL | #![deny(arithmetic_overflow, const_err)]\n+LL | #![deny(arithmetic_overflow)]\n    |         ^^^^^^^^^^^^^^^^^^^\n \n error: this arithmetic operation will overflow"}, {"sha": "4476e0eb9220a636eb6c813ec414e661584c8c79", "filename": "tests/ui/indexing_slicing_index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/tests%2Fui%2Findexing_slicing_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/tests%2Fui%2Findexing_slicing_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findexing_slicing_index.rs?ref=7c372cda3ad366d1e6fe78815d3dbe99e85670c9", "patch": "@@ -3,7 +3,7 @@\n // We also check the out_of_bounds_indexing lint here, because it lints similar things and\n // we want to avoid false positives.\n #![warn(clippy::out_of_bounds_indexing)]\n-#![allow(const_err, unconditional_panic, clippy::no_effect, clippy::unnecessary_operation)]\n+#![allow(unconditional_panic, clippy::no_effect, clippy::unnecessary_operation)]\n \n const ARR: [i32; 2] = [1, 2];\n const REF: &i32 = &ARR[idx()]; // Ok, should not produce stderr."}, {"sha": "da5bc38b3b66c1514cd2d1e3eb1744ac78de7dee", "filename": "tests/ui/indexing_slicing_index.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/tests%2Fui%2Findexing_slicing_index.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/tests%2Fui%2Findexing_slicing_index.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findexing_slicing_index.stderr?ref=7c372cda3ad366d1e6fe78815d3dbe99e85670c9", "patch": "@@ -59,6 +59,12 @@ LL |     v[M];\n    |\n    = help: consider using `.get(n)` or `.get_mut(n)` instead\n \n-error: aborting due to 8 previous errors\n+error[E0080]: evaluation of constant value failed\n+  --> $DIR/indexing_slicing_index.rs:10:24\n+   |\n+LL | const REF_ERR: &i32 = &ARR[idx4()]; // Ok, let rustc handle const contexts.\n+   |                        ^^^^^^^^^^^ index out of bounds: the length is 2 but the index is 4\n+\n+error: aborting due to 9 previous errors\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "edd2123d48a557fbdf4339e120acdb89b051e6ee", "filename": "tests/ui/out_of_bounds_indexing/issue-3102.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/tests%2Fui%2Fout_of_bounds_indexing%2Fissue-3102.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/tests%2Fui%2Fout_of_bounds_indexing%2Fissue-3102.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fout_of_bounds_indexing%2Fissue-3102.rs?ref=7c372cda3ad366d1e6fe78815d3dbe99e85670c9", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::out_of_bounds_indexing)]\n-#![allow(clippy::no_effect, const_err)]\n+#![allow(clippy::no_effect)]\n \n fn main() {\n     let x = [1, 2, 3, 4];"}, {"sha": "4c541c23f5f472608eba394c39f180ee3ea7892f", "filename": "tests/ui/out_of_bounds_indexing/simple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/tests%2Fui%2Fout_of_bounds_indexing%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c372cda3ad366d1e6fe78815d3dbe99e85670c9/tests%2Fui%2Fout_of_bounds_indexing%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fout_of_bounds_indexing%2Fsimple.rs?ref=7c372cda3ad366d1e6fe78815d3dbe99e85670c9", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::out_of_bounds_indexing)]\n-#![allow(clippy::no_effect, clippy::unnecessary_operation, const_err)]\n+#![allow(clippy::no_effect, clippy::unnecessary_operation)]\n \n fn main() {\n     let x = [1, 2, 3, 4];"}]}