{"sha": "4fba7d33d614a78d1d641dc9b65d4a04e0d36e8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmYmE3ZDMzZDYxNGE3OGQxZDY0MWRjOWI2NWQ0YTA0ZTBkMzZlOGE=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-22T10:17:35Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-23T07:51:30Z"}, "message": "Mark an unreachable case as a bug instead of attempting to show an error to the user", "tree": {"sha": "44d7125b02f671b64d33c9d5c2b212b84ec59c1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44d7125b02f671b64d33c9d5c2b212b84ec59c1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fba7d33d614a78d1d641dc9b65d4a04e0d36e8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fba7d33d614a78d1d641dc9b65d4a04e0d36e8a", "html_url": "https://github.com/rust-lang/rust/commit/4fba7d33d614a78d1d641dc9b65d4a04e0d36e8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fba7d33d614a78d1d641dc9b65d4a04e0d36e8a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2aab6af0fafdd248036a3ee25c03813c2b6d7ac6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2aab6af0fafdd248036a3ee25c03813c2b6d7ac6", "html_url": "https://github.com/rust-lang/rust/commit/2aab6af0fafdd248036a3ee25c03813c2b6d7ac6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "89bbc42df04991af5aee380384eef4383d0ef60e", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fba7d33d614a78d1d641dc9b65d4a04e0d36e8a/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fba7d33d614a78d1d641dc9b65d4a04e0d36e8a/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=4fba7d33d614a78d1d641dc9b65d4a04e0d36e8a", "patch": "@@ -1853,7 +1853,7 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                 }\n             }\n             // promoteds may never be mutated\n-            Place::Promoted(_) => Err(place),\n+            Place::Promoted(_) => bug!(\"encountered mutable promoted\"),\n             Place::Static(ref static_) => {\n                 if self.tcx.is_static(static_.def_id) != Some(hir::Mutability::MutMutable) {\n                     Err(place)"}]}