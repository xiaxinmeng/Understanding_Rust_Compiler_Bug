{"sha": "27a3f7340a9e7b40bcb6df349a2377c2a160718b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3YTNmNzM0MGE5ZTdiNDBiY2I2ZGYzNDlhMjM3N2MyYTE2MDcxOGI=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-06-18T16:34:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-18T16:34:12Z"}, "message": "Rollup merge of #42730 - VBChunguk:boxed-wild-pattern, r=eddyb\n\nUse T as the subpattern type of Box<T>\n\nThe subpattern type of boxes being nil does not make sense because of box patterns. They should have their inner type as the subpattern type.\n\nFixes #42679, which describes ICE caused by the bug.", "tree": {"sha": "ab7708ed64ed95df40390e3963e70cb2194cb62c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab7708ed64ed95df40390e3963e70cb2194cb62c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27a3f7340a9e7b40bcb6df349a2377c2a160718b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27a3f7340a9e7b40bcb6df349a2377c2a160718b", "html_url": "https://github.com/rust-lang/rust/commit/27a3f7340a9e7b40bcb6df349a2377c2a160718b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27a3f7340a9e7b40bcb6df349a2377c2a160718b/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2068596a54072d91f8c17c3f92f2c4a3c5732873", "url": "https://api.github.com/repos/rust-lang/rust/commits/2068596a54072d91f8c17c3f92f2c4a3c5732873", "html_url": "https://github.com/rust-lang/rust/commit/2068596a54072d91f8c17c3f92f2c4a3c5732873"}, {"sha": "abebe8afde343a3eed5a62eaa8162b76d291f526", "url": "https://api.github.com/repos/rust-lang/rust/commits/abebe8afde343a3eed5a62eaa8162b76d291f526", "html_url": "https://github.com/rust-lang/rust/commit/abebe8afde343a3eed5a62eaa8162b76d291f526"}], "stats": {"total": 66, "additions": 51, "deletions": 15}, "files": [{"sha": "98d90188312df752de79898db0671cc40db568e6", "filename": "src/librustc_const_eval/_match.rs", "status": "modified", "additions": 20, "deletions": 15, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/27a3f7340a9e7b40bcb6df349a2377c2a160718b/src%2Flibrustc_const_eval%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27a3f7340a9e7b40bcb6df349a2377c2a160718b/src%2Flibrustc_const_eval%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2F_match.rs?ref=27a3f7340a9e7b40bcb6df349a2377c2a160718b", "patch": "@@ -774,21 +774,26 @@ fn constructor_sub_pattern_tys<'a, 'tcx: 'a>(cx: &MatchCheckCtxt<'a, 'tcx>,\n         },\n         ty::TyRef(_, ref ty_and_mut) => vec![ty_and_mut.ty],\n         ty::TyAdt(adt, substs) => {\n-            adt.variants[ctor.variant_index_for_adt(adt)].fields.iter().map(|field| {\n-                let is_visible = adt.is_enum()\n-                    || field.vis.is_accessible_from(cx.module, cx.tcx);\n-                if is_visible {\n-                    field.ty(cx.tcx, substs)\n-                } else {\n-                    // Treat all non-visible fields as nil. They\n-                    // can't appear in any other pattern from\n-                    // this match (because they are private),\n-                    // so their type does not matter - but\n-                    // we don't want to know they are\n-                    // uninhabited.\n-                    cx.tcx.mk_nil()\n-                }\n-            }).collect()\n+            if adt.is_box() {\n+                // Use T as the sub pattern type of Box<T>.\n+                vec![substs[0].as_type().unwrap()]\n+            } else {\n+                adt.variants[ctor.variant_index_for_adt(adt)].fields.iter().map(|field| {\n+                    let is_visible = adt.is_enum()\n+                        || field.vis.is_accessible_from(cx.module, cx.tcx);\n+                    if is_visible {\n+                        field.ty(cx.tcx, substs)\n+                    } else {\n+                        // Treat all non-visible fields as nil. They\n+                        // can't appear in any other pattern from\n+                        // this match (because they are private),\n+                        // so their type does not matter - but\n+                        // we don't want to know they are\n+                        // uninhabited.\n+                        cx.tcx.mk_nil()\n+                    }\n+                }).collect()\n+            }\n         }\n         _ => vec![],\n     }"}, {"sha": "312835225edf5a51b8e4c406b473836b153f676b", "filename": "src/test/run-pass/issue-42679.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/27a3f7340a9e7b40bcb6df349a2377c2a160718b/src%2Ftest%2Frun-pass%2Fissue-42679.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27a3f7340a9e7b40bcb6df349a2377c2a160718b/src%2Ftest%2Frun-pass%2Fissue-42679.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-42679.rs?ref=27a3f7340a9e7b40bcb6df349a2377c2a160718b", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(box_syntax)]\n+#![feature(box_patterns)]\n+\n+#[derive(Debug, PartialEq)]\n+enum Test {\n+    Foo(usize),\n+    Bar(isize),\n+}\n+\n+fn main() {\n+    let a = box Test::Foo(10);\n+    let b = box Test::Bar(-20);\n+    match (a, b) {\n+        (_, box Test::Foo(_)) => unreachable!(),\n+        (box Test::Foo(x), b) => {\n+            assert_eq!(x, 10);\n+            assert_eq!(b, box Test::Bar(-20));\n+        },\n+        _ => unreachable!(),\n+    }\n+}"}]}