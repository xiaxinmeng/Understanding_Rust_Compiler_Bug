{"sha": "94817e38e14b89747c6d6d5af0d45267fcbf765e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ODE3ZTM4ZTE0Yjg5NzQ3YzZkNmQ1YWYwZDQ1MjY3ZmNiZjc2NWU=", "commit": {"author": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-06-12T18:17:44Z"}, "committer": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-06-20T10:03:58Z"}, "message": "Pre-compute `hir_id_to_def_id` mapping", "tree": {"sha": "f515423ddb9709e0f720ab6829a1773ee1c67aa7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f515423ddb9709e0f720ab6829a1773ee1c67aa7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94817e38e14b89747c6d6d5af0d45267fcbf765e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94817e38e14b89747c6d6d5af0d45267fcbf765e", "html_url": "https://github.com/rust-lang/rust/commit/94817e38e14b89747c6d6d5af0d45267fcbf765e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94817e38e14b89747c6d6d5af0d45267fcbf765e/comments", "author": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a0f1af19d504635ea36efdf4ea68b1df935fc1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a0f1af19d504635ea36efdf4ea68b1df935fc1b", "html_url": "https://github.com/rust-lang/rust/commit/6a0f1af19d504635ea36efdf4ea68b1df935fc1b"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "5e03395c6933ea092c0c84ee67bd32e14e14b86a", "filename": "src/librustc_hir/definitions.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/94817e38e14b89747c6d6d5af0d45267fcbf765e/src%2Flibrustc_hir%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94817e38e14b89747c6d6d5af0d45267fcbf765e/src%2Flibrustc_hir%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fdefinitions.rs?ref=94817e38e14b89747c6d6d5af0d45267fcbf765e", "patch": "@@ -87,8 +87,8 @@ pub struct Definitions {\n     def_id_to_node_id: IndexVec<LocalDefId, ast::NodeId>,\n \n     pub(super) node_id_to_hir_id: IndexVec<ast::NodeId, Option<hir::HirId>>,\n-    /// The reverse mapping of `node_id_to_hir_id`.\n-    pub(super) hir_id_to_node_id: FxHashMap<hir::HirId, ast::NodeId>,\n+    /// The pre-computed mapping of `hir_id_to_node_id` -> `node_id_to_def_id`.\n+    pub(super) hir_id_to_def_id: FxHashMap<hir::HirId, LocalDefId>,\n \n     /// If `ExpnId` is an ID of some macro expansion,\n     /// then `DefId` is the normal module (`mod`) in which the expanded macro was defined.\n@@ -351,8 +351,7 @@ impl Definitions {\n \n     #[inline]\n     pub fn opt_hir_id_to_local_def_id(&self, hir_id: hir::HirId) -> Option<LocalDefId> {\n-        let node_id = self.hir_id_to_node_id[&hir_id];\n-        self.opt_local_def_id(node_id)\n+        self.hir_id_to_def_id.get(&hir_id).copied()\n     }\n \n     /// Retrieves the span of the given `DefId` if `DefId` is in the local crate.\n@@ -467,11 +466,15 @@ impl Definitions {\n         );\n         self.node_id_to_hir_id = mapping;\n \n-        // Build the reverse mapping of `node_id_to_hir_id`.\n-        self.hir_id_to_node_id = self\n+        // Build the pre-computed mapping of `hir_id_to_node_id` -> `node_id_to_def_id`.\n+        self.hir_id_to_def_id = self\n             .node_id_to_hir_id\n             .iter_enumerated()\n-            .filter_map(|(node_id, &hir_id)| hir_id.map(|hir_id| (hir_id, node_id)))\n+            .filter_map(|(node_id, &hir_id)| {\n+                hir_id.and_then(|hir_id| {\n+                    self.node_id_to_def_id.get(&node_id).map(|&def_id| (hir_id, def_id))\n+                })\n+            })\n             .collect();\n     }\n "}]}