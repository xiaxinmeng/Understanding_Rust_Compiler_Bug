{"sha": "5de8e040d2ed8f3d9da79a4f12b9ece51c352f2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZThlMDQwZDJlZDhmM2Q5ZGE3OWE0ZjEyYjllY2U1MWMzNTJmMmU=", "commit": {"author": {"name": "Ryan Cumming", "email": "etaoins@gmail.com", "date": "2018-01-23T08:42:46Z"}, "committer": {"name": "Ryan Cumming", "email": "etaoins@gmail.com", "date": "2018-01-23T09:25:48Z"}, "message": "Remove broken redundant backtrace hint\n\nWhen the compiler driver panics it attempts to show a hint about using\n`RUST_BACKTRACE`. However, the logic is currently reversed to the hint\nis only shown if `RUST_BACKTRACE` is *already* set:\n\n```shell\n> RUST_BACKTRACE=1 rustc /dev/null --crate-type proc-macro\nerror: internal compiler error: unexpected panic\n...\nnote: run with `RUST_BACKTRACE=1` for a backtrace\n\nthread 'rustc' panicked at 'attempt to subtract with overflow', librustc_errors/emitter.rs:287:49\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n\n> RUST_BACKTRACE=0 rustc /dev/null --crate-type proc-macro\nerror: internal compiler error: unexpected panic\n...\nthread 'rustc' panicked at 'attempt to subtract with overflow', librustc_errors/emitter.rs:287:49\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n```\n\nAs the `panic` itself already has a working `RUST_BACKTRACE` hint just\nremove the broken duplicate hint entirely.", "tree": {"sha": "a71be2b50ed09dbaee363e598ed38658c687714b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a71be2b50ed09dbaee363e598ed38658c687714b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5de8e040d2ed8f3d9da79a4f12b9ece51c352f2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5de8e040d2ed8f3d9da79a4f12b9ece51c352f2e", "html_url": "https://github.com/rust-lang/rust/commit/5de8e040d2ed8f3d9da79a4f12b9ece51c352f2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5de8e040d2ed8f3d9da79a4f12b9ece51c352f2e/comments", "author": {"login": "etaoins", "id": 687534, "node_id": "MDQ6VXNlcjY4NzUzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/687534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etaoins", "html_url": "https://github.com/etaoins", "followers_url": "https://api.github.com/users/etaoins/followers", "following_url": "https://api.github.com/users/etaoins/following{/other_user}", "gists_url": "https://api.github.com/users/etaoins/gists{/gist_id}", "starred_url": "https://api.github.com/users/etaoins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etaoins/subscriptions", "organizations_url": "https://api.github.com/users/etaoins/orgs", "repos_url": "https://api.github.com/users/etaoins/repos", "events_url": "https://api.github.com/users/etaoins/events{/privacy}", "received_events_url": "https://api.github.com/users/etaoins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "etaoins", "id": 687534, "node_id": "MDQ6VXNlcjY4NzUzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/687534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etaoins", "html_url": "https://github.com/etaoins", "followers_url": "https://api.github.com/users/etaoins/followers", "following_url": "https://api.github.com/users/etaoins/following{/other_user}", "gists_url": "https://api.github.com/users/etaoins/gists{/gist_id}", "starred_url": "https://api.github.com/users/etaoins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etaoins/subscriptions", "organizations_url": "https://api.github.com/users/etaoins/orgs", "repos_url": "https://api.github.com/users/etaoins/repos", "events_url": "https://api.github.com/users/etaoins/events{/privacy}", "received_events_url": "https://api.github.com/users/etaoins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47a8eb7c4e24b61a8a9ab4eaff60ef65291aaa56", "url": "https://api.github.com/repos/rust-lang/rust/commits/47a8eb7c4e24b61a8a9ab4eaff60ef65291aaa56", "html_url": "https://github.com/rust-lang/rust/commit/47a8eb7c4e24b61a8a9ab4eaff60ef65291aaa56"}], "stats": {"total": 8, "additions": 0, "deletions": 8}, "files": [{"sha": "53586c47ae0a882d95cfa9d68690317475284ac8", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5de8e040d2ed8f3d9da79a4f12b9ece51c352f2e/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5de8e040d2ed8f3d9da79a4f12b9ece51c352f2e/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=5de8e040d2ed8f3d9da79a4f12b9ece51c352f2e", "patch": "@@ -1276,14 +1276,6 @@ pub fn monitor<F: FnOnce() + Send + 'static>(f: F) {\n                              &note,\n                              errors::Level::Note);\n             }\n-            if match env::var_os(\"RUST_BACKTRACE\") {\n-                Some(val) => &val != \"0\",\n-                None => false,\n-            } {\n-                handler.emit(&MultiSpan::new(),\n-                             \"run with `RUST_BACKTRACE=1` for a backtrace\",\n-                             errors::Level::Note);\n-            }\n \n             eprintln!(\"{}\", str::from_utf8(&data.lock().unwrap()).unwrap());\n         }"}]}