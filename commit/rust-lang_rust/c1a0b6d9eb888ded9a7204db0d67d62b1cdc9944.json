{"sha": "c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxYTBiNmQ5ZWI4ODhkZWQ5YTcyMDRkYjBkNjdkNjJiMWNkYzk5NDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-28T03:02:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-28T03:02:17Z"}, "message": "Auto merge of #45503 - thombles:tk/i44339-v5, r=petrochenkov\n\nImprove diagnostics when list of tokens has incorrect separators\n\nMake `parse_seq_to_before_tokens` more resilient to error conditions. Where possible it is better if it can consume up to the final bracket before returning. This change improves the diagnostics in a couple of situations:\n\n```\nstruct S(pub () ()); // omitted separator\nuse std::{foo. bar}; // used a similar but wrong separator\n```\n\nFixes #44339\nr? @petrochenkov", "tree": {"sha": "0e5481df011f16a6a64164344cdd089227f6dab6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e5481df011f16a6a64164344cdd089227f6dab6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944", "html_url": "https://github.com/rust-lang/rust/commit/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9f124965551e8fb9403def6a715e13dfd5e9c95", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9f124965551e8fb9403def6a715e13dfd5e9c95", "html_url": "https://github.com/rust-lang/rust/commit/d9f124965551e8fb9403def6a715e13dfd5e9c95"}, {"sha": "ae6a9e6fd2a7138d04c03e2a30458d7ebcc68627", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae6a9e6fd2a7138d04c03e2a30458d7ebcc68627", "html_url": "https://github.com/rust-lang/rust/commit/ae6a9e6fd2a7138d04c03e2a30458d7ebcc68627"}], "stats": {"total": 59, "additions": 55, "deletions": 4}, "files": [{"sha": "e96a5417aff5f6f279d89893e1362ab887caa4f4", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944", "patch": "@@ -1033,7 +1033,23 @@ impl<'a> Parser<'a> {\n                 } else {\n                     if let Err(e) = self.expect(t) {\n                         fe(e);\n-                        break;\n+                        // Attempt to keep parsing if it was a similar separator\n+                        if let Some(ref tokens) = t.similar_tokens() {\n+                            if tokens.contains(&self.token) {\n+                                self.bump();\n+                            }\n+                        }\n+                        // Attempt to keep parsing if it was an omitted separator\n+                        match f(self) {\n+                            Ok(t) => {\n+                                v.push(t);\n+                                continue;\n+                            },\n+                            Err(mut e) => {\n+                                e.cancel();\n+                                break;\n+                            }\n+                        }\n                     }\n                 }\n             }"}, {"sha": "09dc05a4167e61c558ab6884d422f2c5e7625960", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944", "patch": "@@ -433,6 +433,16 @@ impl Token {\n         })\n     }\n \n+    /// Returns tokens that are likely to be typed accidentally instead of the current token.\n+    /// Enables better error recovery when the wrong token is found.\n+    pub fn similar_tokens(&self) -> Option<Vec<Token>> {\n+        match *self {\n+            Comma => Some(vec![Dot, Lt]),\n+            Semi => Some(vec![Colon]),\n+            _ => None\n+        }\n+    }\n+\n     /// Returns `true` if the token is either a special identifier or a keyword.\n     pub fn is_reserved_ident(&self) -> bool {\n         self.is_special_ident() || self.is_used_keyword() || self.is_unused_keyword()"}, {"sha": "d4ea76d6c2655388a3f27be710a02f602f2368cb", "filename": "src/test/compile-fail/privacy/restricted/tuple-struct-fields/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest.rs?ref=c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944", "patch": "@@ -13,5 +13,5 @@ mod foo {\n     struct S1(pub(in foo) (), pub(T), pub(crate) (), pub(((), T)));\n     struct S2(pub((foo)) ());\n     //~^ ERROR expected `,`, found `(`\n-    //~| ERROR expected one of `;` or `where`, found `(`\n+    //~| ERROR cannot find type `foo` in this scope\n }"}, {"sha": "fed9432c6a0e9e4c4ca325eb8f07711f3e749402", "filename": "src/test/compile-fail/privacy/restricted/tuple-struct-fields/test2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest2.rs?ref=c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944", "patch": "@@ -14,7 +14,6 @@ macro_rules! define_struct {\n         struct S2(pub (in foo) ());\n         struct S3(pub $t ());\n         //~^ ERROR expected `,`, found `(`\n-        //~| ERROR expected one of `;` or `where`, found `(`\n     }\n }\n "}, {"sha": "dd2cb0e21842215866fc691a2ae8e447016719fa", "filename": "src/test/compile-fail/privacy/restricted/tuple-struct-fields/test3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Ftuple-struct-fields%2Ftest3.rs?ref=c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944", "patch": "@@ -14,7 +14,6 @@ macro_rules! define_struct {\n         struct S2(pub (in foo) ());\n         struct S3(pub($t) ());\n         //~^ ERROR expected `,`, found `(`\n-        //~| ERROR expected one of `;` or `where`, found `(`\n     }\n }\n "}, {"sha": "986382bc8ee8592a0e05eadbdef73fc17fd4b171", "filename": "src/test/ui/similar-tokens.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/src%2Ftest%2Fui%2Fsimilar-tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/src%2Ftest%2Fui%2Fsimilar-tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimilar-tokens.rs?ref=c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod x {\n+    pub struct A;\n+    pub struct B;\n+}\n+\n+// `.` is similar to `,` so list parsing should continue to closing `}`\n+use x::{A. B};\n+\n+fn main() {}"}, {"sha": "cf0ed646db7084cbfcb59ccd5500768846a775de", "filename": "src/test/ui/similar-tokens.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/src%2Ftest%2Fui%2Fsimilar-tokens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944/src%2Ftest%2Fui%2Fsimilar-tokens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimilar-tokens.stderr?ref=c1a0b6d9eb888ded9a7204db0d67d62b1cdc9944", "patch": "@@ -0,0 +1,8 @@\n+error: expected one of `,` or `as`, found `.`\n+  --> $DIR/similar-tokens.rs:17:10\n+   |\n+17 | use x::{A. B};\n+   |          ^ expected one of `,` or `as` here\n+\n+error: aborting due to previous error\n+"}]}