{"sha": "40349b23ea1730f9a5ef4056edf4854908073a48", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMzQ5YjIzZWExNzMwZjlhNWVmNDA1NmVkZjQ4NTQ5MDgwNzNhNDg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-08-02T20:00:14Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-08-02T20:00:14Z"}, "message": "Fix breakage from rust-lang/rust#52949", "tree": {"sha": "c42aed9ff326ba410488a4150a9dd90602caf90e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c42aed9ff326ba410488a4150a9dd90602caf90e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40349b23ea1730f9a5ef4056edf4854908073a48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40349b23ea1730f9a5ef4056edf4854908073a48", "html_url": "https://github.com/rust-lang/rust/commit/40349b23ea1730f9a5ef4056edf4854908073a48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40349b23ea1730f9a5ef4056edf4854908073a48/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f43d0e53b2f572b5509424d267556d185c2d80e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f43d0e53b2f572b5509424d267556d185c2d80e2", "html_url": "https://github.com/rust-lang/rust/commit/f43d0e53b2f572b5509424d267556d185c2d80e2"}], "stats": {"total": 24, "additions": 4, "deletions": 20}, "files": [{"sha": "27f890ccd90fc5e6db0e035d43631ee9d10fe514", "filename": "clippy_lints/src/redundant_field_names.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/40349b23ea1730f9a5ef4056edf4854908073a48/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40349b23ea1730f9a5ef4056edf4854908073a48/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_field_names.rs?ref=40349b23ea1730f9a5ef4056edf4854908073a48", "patch": "@@ -1,7 +1,7 @@\n use rustc::lint::*;\n use rustc::{declare_lint, lint_array};\n use rustc::hir::*;\n-use crate::utils::{in_macro, is_range_expression, match_var, span_lint_and_sugg};\n+use crate::utils::{in_macro, match_var, span_lint_and_sugg};\n \n /// **What it does:** Checks for fields in struct literals where shorthands\n /// could be used.\n@@ -40,7 +40,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for RedundantFieldNames {\n         // Ignore all macros including range expressions.\n         // They can have redundant field names when expanded.\n         // e.g. range expression `start..end` is desugared to `Range { start: start, end: end }`\n-        if in_macro(expr.span) || is_range_expression(expr.span) {\n+        if in_macro(expr.span) {\n             return;\n         }\n "}, {"sha": "a8c20ef4fa37de3e469b4150bab6cfa8c270153d", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/40349b23ea1730f9a5ef4056edf4854908073a48/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40349b23ea1730f9a5ef4056edf4854908073a48/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=40349b23ea1730f9a5ef4056edf4854908073a48", "patch": "@@ -19,7 +19,7 @@ use std::str::FromStr;\n use std::rc::Rc;\n use syntax::ast::{self, LitKind};\n use syntax::attr;\n-use syntax::codemap::{CompilerDesugaringKind, ExpnFormat, Span, DUMMY_SP};\n+use syntax::codemap::{Span, DUMMY_SP};\n use syntax::errors::DiagnosticBuilder;\n use syntax::ptr::P;\n use syntax::symbol::keywords;\n@@ -58,23 +58,7 @@ pub fn in_constant(cx: &LateContext<'_, '_>, id: NodeId) -> bool {\n \n /// Returns true if this `expn_info` was expanded by any macro.\n pub fn in_macro(span: Span) -> bool {\n-    span.ctxt().outer().expn_info().map_or(false, |info| {\n-        match info.format {\n-            // don't treat range expressions desugared to structs as \"in_macro\"\n-            ExpnFormat::CompilerDesugaring(kind) => kind != CompilerDesugaringKind::DotFill,\n-            _ => true,\n-        }\n-    })\n-}\n-\n-/// Returns true if `expn_info` was expanded by range expressions.\n-pub fn is_range_expression(span: Span) -> bool {\n-    span.ctxt().outer().expn_info().map_or(false, |info| {\n-        match info.format {\n-            ExpnFormat::CompilerDesugaring(CompilerDesugaringKind::DotFill) => true,\n-            _ => false,\n-        }\n-    })\n+    span.ctxt().outer().expn_info().is_some()\n }\n \n /// Check if a `DefId`'s path matches the given absolute type path usage."}]}