{"sha": "67423821aa0dd705720c9e183d04d4b7a55b723f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NDIzODIxYWEwZGQ3MDU3MjBjOWUxODNkMDRkNGI3YTU1YjcyM2Y=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-06-26T12:24:45Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-06-26T12:24:45Z"}, "message": "Fix debug messages", "tree": {"sha": "4cdcaaa471bad945728bc928be5ffaef122d0313", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cdcaaa471bad945728bc928be5ffaef122d0313"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67423821aa0dd705720c9e183d04d4b7a55b723f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67423821aa0dd705720c9e183d04d4b7a55b723f", "html_url": "https://github.com/rust-lang/rust/commit/67423821aa0dd705720c9e183d04d4b7a55b723f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67423821aa0dd705720c9e183d04d4b7a55b723f/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20552c811a99a561f23b5918de9ffd95a06f815c", "url": "https://api.github.com/repos/rust-lang/rust/commits/20552c811a99a561f23b5918de9ffd95a06f815c", "html_url": "https://github.com/rust-lang/rust/commit/20552c811a99a561f23b5918de9ffd95a06f815c"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "8da74f375d9ceb1916e17c5da9e584e545a84268", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/67423821aa0dd705720c9e183d04d4b7a55b723f/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67423821aa0dd705720c9e183d04d4b7a55b723f/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=67423821aa0dd705720c9e183d04d4b7a55b723f", "patch": "@@ -178,7 +178,7 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n             let result = cx.enter_resolver(|resolver| {\n                 resolver.resolve_str_path_error(DUMMY_SP, &path_str, ns, module_id)\n             });\n-            debug!(\"{} resolved to {:?} in namespace {:?}\", path_str, ns, result);\n+            debug!(\"{} resolved to {:?} in namespace {:?}\", path_str, result, ns);\n             let result = match result {\n                 Ok((_, Res::Err)) => Err(ErrorKind::ResolutionFailure),\n                 _ => result.map_err(|_| ErrorKind::ResolutionFailure),\n@@ -208,7 +208,6 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n                             \"failed to resolve {} in namespace {:?} (got {:?})\",\n                             path_str, ns, other\n                         );\n-                        debug!(\"extra_fragment is {:?}\", extra_fragment);\n                         return Ok((res, extra_fragment.clone()));\n                     }\n                 };\n@@ -768,7 +767,7 @@ impl<'a, 'tcx> DocFolder for LinkCollector<'a, 'tcx> {\n             if let Res::PrimTy(_) = res {\n                 item.attrs.links.push((ori_link, None, fragment));\n             } else {\n-                debug!(\"linked item {} resolved to {:?}\", path_str, res);\n+                debug!(\"intra-doc link to {} resolved to {:?}\", path_str, res);\n                 if let Some(local) = res.opt_def_id().and_then(|def_id| def_id.as_local()) {\n                     use rustc_hir::def_id::LOCAL_CRATE;\n "}]}