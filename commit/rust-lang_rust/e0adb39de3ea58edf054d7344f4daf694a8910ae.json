{"sha": "e0adb39de3ea58edf054d7344f4daf694a8910ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwYWRiMzlkZTNlYTU4ZWRmMDU0ZDczNDRmNGRhZjY5NGE4OTEwYWU=", "commit": {"author": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-10T12:43:20Z"}, "committer": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-10T12:43:20Z"}, "message": "gen clone for record enums", "tree": {"sha": "568f9b4444dc856e4abc3527992b710f7584cb94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/568f9b4444dc856e4abc3527992b710f7584cb94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0adb39de3ea58edf054d7344f4daf694a8910ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0adb39de3ea58edf054d7344f4daf694a8910ae", "html_url": "https://github.com/rust-lang/rust/commit/e0adb39de3ea58edf054d7344f4daf694a8910ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0adb39de3ea58edf054d7344f4daf694a8910ae/comments", "author": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ddc26aea1b2f73bf6bd3cfa3ecce8ce05068cf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ddc26aea1b2f73bf6bd3cfa3ecce8ce05068cf1", "html_url": "https://github.com/rust-lang/rust/commit/7ddc26aea1b2f73bf6bd3cfa3ecce8ce05068cf1"}], "stats": {"total": 71, "additions": 68, "deletions": 3}, "files": [{"sha": "65495e3b8f657acb8614499fd56c3eaf708dde93", "filename": "crates/ide_assists/src/handlers/replace_derive_with_manual_impl.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e0adb39de3ea58edf054d7344f4daf694a8910ae/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0adb39de3ea58edf054d7344f4daf694a8910ae/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs?ref=e0adb39de3ea58edf054d7344f4daf694a8910ae", "patch": "@@ -572,6 +572,40 @@ impl Clone for Foo {\n         }\n     }\n }\n+\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn add_custom_impl_clone_record_enum() {\n+        check_assist(\n+            replace_derive_with_manual_impl,\n+            r#\"\n+//- minicore: clone\n+#[derive(Clo$0ne)]\n+enum Foo {\n+    Bar {\n+        bin: String,\n+    },\n+    Baz,\n+}\n+\"#,\n+            r#\"\n+enum Foo {\n+    Bar {\n+        bin: String,\n+    },\n+    Baz,\n+}\n+\n+impl Clone for Foo {\n+    $0fn clone(&self) -> Self {\n+        match self {\n+            Self::Bar { bin } => Self::Bar { bin: bin.clone() },\n+            Self::Baz => Self::Baz,\n+        }\n+    }\n+}\n \"#,\n         )\n     }"}, {"sha": "2f4eb6ca55c358a2a1b18017c5ba7ea05f9367bd", "filename": "crates/ide_assists/src/utils/gen_trait_fn_body.rs", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/e0adb39de3ea58edf054d7344f4daf694a8910ae/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0adb39de3ea58edf054d7344f4daf694a8910ae/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs?ref=e0adb39de3ea58edf054d7344f4daf694a8910ae", "patch": "@@ -42,9 +42,40 @@ fn gen_clone_impl(adt: &ast::Adt, func: &ast::Fn) -> Option<()> {\n                 let right = make::ext::ident_path(&format!(\"{}\", name));\n                 let variant_name = make::path_concat(left, right);\n \n-                let pattern = make::path_pat(variant_name.clone());\n-                let variant_expr = make::expr_path(variant_name);\n-                arms.push(make::match_arm(Some(pattern.into()), None, variant_expr));\n+                match variant.field_list() {\n+                    // => match self { Self::Name { x } => Self::Name { x: x.clone() } }\n+                    Some(ast::FieldList::RecordFieldList(list)) => {\n+                        let mut pats = vec![];\n+                        let mut fields = vec![];\n+                        for field in list.fields() {\n+                            let field_name = field.name()?;\n+                            let pat = make::ident_pat(false, false, field_name.clone());\n+                            pats.push(pat.into());\n+\n+                            let path = make::ext::ident_path(&field_name.to_string());\n+                            let method_call = gen_clone_call(make::expr_path(path));\n+                            let name_ref = make::name_ref(&field_name.to_string());\n+                            let field = make::record_expr_field(name_ref, Some(method_call));\n+                            fields.push(field);\n+                        }\n+                        let pattern = make::record_pat(variant_name.clone(), pats.into_iter());\n+\n+                        let fields = make::record_expr_field_list(fields);\n+                        let record_expr = make::record_expr(variant_name, fields).into();\n+\n+                        arms.push(make::match_arm(Some(pattern.into()), None, record_expr));\n+                    }\n+\n+                    // => match self { Self::Name(arg1) => Self::Name(arg1.clone()) }\n+                    Some(ast::FieldList::TupleFieldList(list)) => todo!(),\n+\n+                    // => match self { Self::Name => Self::Name }\n+                    None => {\n+                        let pattern = make::path_pat(variant_name.clone());\n+                        let variant_expr = make::expr_path(variant_name);\n+                        arms.push(make::match_arm(Some(pattern.into()), None, variant_expr));\n+                    }\n+                }\n             }\n \n             let match_target = make::expr_path(make::ext::ident_path(\"self\"));"}]}