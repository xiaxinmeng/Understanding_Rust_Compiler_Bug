{"sha": "9b7ab1d38b13ad8af555793cdf7ce08c12c22595", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliN2FiMWQzOGIxM2FkOGFmNTU1NzkzY2RmN2NlMDhjMTJjMjI1OTU=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-07-23T14:58:20Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-08-10T21:48:57Z"}, "message": "checked-conversions: make lint adhere to lint message convention", "tree": {"sha": "d40cc3a40857364b7b0fa80b0845fd564ef21d22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d40cc3a40857364b7b0fa80b0845fd564ef21d22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b7ab1d38b13ad8af555793cdf7ce08c12c22595", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b7ab1d38b13ad8af555793cdf7ce08c12c22595", "html_url": "https://github.com/rust-lang/rust/commit/9b7ab1d38b13ad8af555793cdf7ce08c12c22595", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b7ab1d38b13ad8af555793cdf7ce08c12c22595/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40416c0fa8409da63fb27f065e82cabb51ec17d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/40416c0fa8409da63fb27f065e82cabb51ec17d3", "html_url": "https://github.com/rust-lang/rust/commit/40416c0fa8409da63fb27f065e82cabb51ec17d3"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "28c1a54d2c5a6a1c1ecc2749737c668b5da8f182", "filename": "clippy_lints/src/checked_conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b7ab1d38b13ad8af555793cdf7ce08c12c22595/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b7ab1d38b13ad8af555793cdf7ce08c12c22595/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fchecked_conversions.rs?ref=9b7ab1d38b13ad8af555793cdf7ce08c12c22595", "patch": "@@ -66,7 +66,7 @@ impl<'tcx> LateLintPass<'tcx> for CheckedConversions {\n                     cx,\n                     CHECKED_CONVERSIONS,\n                     item.span,\n-                    \"Checked cast can be simplified.\",\n+                    \"checked cast can be simplified\",\n                     \"try\",\n                     format!(\"{}::try_from({}).is_ok()\", to_type, snippet),\n                     applicability,"}, {"sha": "18518def0acbe42e596234de18964803d6059a18", "filename": "tests/ui/checked_conversions.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/9b7ab1d38b13ad8af555793cdf7ce08c12c22595/tests%2Fui%2Fchecked_conversions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b7ab1d38b13ad8af555793cdf7ce08c12c22595/tests%2Fui%2Fchecked_conversions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_conversions.stderr?ref=9b7ab1d38b13ad8af555793cdf7ce08c12c22595", "patch": "@@ -1,96 +1,96 @@\n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:17:13\n    |\n LL |     let _ = value <= (u32::max_value() as i64) && value >= 0;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u32::try_from(value).is_ok()`\n    |\n    = note: `-D clippy::checked-conversions` implied by `-D warnings`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:18:13\n    |\n LL |     let _ = value <= (u32::MAX as i64) && value >= 0;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u32::try_from(value).is_ok()`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:22:13\n    |\n LL |     let _ = value <= i64::from(u16::max_value()) && value >= 0;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u16::try_from(value).is_ok()`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:23:13\n    |\n LL |     let _ = value <= i64::from(u16::MAX) && value >= 0;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u16::try_from(value).is_ok()`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:27:13\n    |\n LL |     let _ = value <= (u8::max_value() as isize) && value >= 0;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u8::try_from(value).is_ok()`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:28:13\n    |\n LL |     let _ = value <= (u8::MAX as isize) && value >= 0;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u8::try_from(value).is_ok()`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:34:13\n    |\n LL |     let _ = value <= (i32::max_value() as i64) && value >= (i32::min_value() as i64);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::try_from(value).is_ok()`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:35:13\n    |\n LL |     let _ = value <= (i32::MAX as i64) && value >= (i32::MIN as i64);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::try_from(value).is_ok()`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:39:13\n    |\n LL |     let _ = value <= i64::from(i16::max_value()) && value >= i64::from(i16::min_value());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i16::try_from(value).is_ok()`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:40:13\n    |\n LL |     let _ = value <= i64::from(i16::MAX) && value >= i64::from(i16::MIN);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i16::try_from(value).is_ok()`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:46:13\n    |\n LL |     let _ = value <= i32::max_value() as u32;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::try_from(value).is_ok()`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:47:13\n    |\n LL |     let _ = value <= i32::MAX as u32;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::try_from(value).is_ok()`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:51:13\n    |\n LL |     let _ = value <= isize::max_value() as usize && value as i32 == 5;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `isize::try_from(value).is_ok()`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:52:13\n    |\n LL |     let _ = value <= isize::MAX as usize && value as i32 == 5;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `isize::try_from(value).is_ok()`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:56:13\n    |\n LL |     let _ = value <= u16::max_value() as u32 && value as i32 == 5;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u16::try_from(value).is_ok()`\n \n-error: Checked cast can be simplified.\n+error: checked cast can be simplified\n   --> $DIR/checked_conversions.rs:57:13\n    |\n LL |     let _ = value <= u16::MAX as u32 && value as i32 == 5;"}]}