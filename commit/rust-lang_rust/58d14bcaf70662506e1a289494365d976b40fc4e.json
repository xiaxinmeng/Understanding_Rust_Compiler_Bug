{"sha": "58d14bcaf70662506e1a289494365d976b40fc4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZDE0YmNhZjcwNjYyNTA2ZTFhMjg5NDk0MzY1ZDk3NmI0MGZjNGU=", "commit": {"author": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-17T20:19:21Z"}, "committer": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-17T21:32:10Z"}, "message": "Enable parsing attributes for generic lifetimes and type parameters", "tree": {"sha": "c67fd94ddc80df9dce459f4cdc526d89e4284e99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c67fd94ddc80df9dce459f4cdc526d89e4284e99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58d14bcaf70662506e1a289494365d976b40fc4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58d14bcaf70662506e1a289494365d976b40fc4e", "html_url": "https://github.com/rust-lang/rust/commit/58d14bcaf70662506e1a289494365d976b40fc4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58d14bcaf70662506e1a289494365d976b40fc4e/comments", "author": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a725dd4f7ac2b88541189f0f726ce86876c36add", "url": "https://api.github.com/repos/rust-lang/rust/commits/a725dd4f7ac2b88541189f0f726ce86876c36add", "html_url": "https://github.com/rust-lang/rust/commit/a725dd4f7ac2b88541189f0f726ce86876c36add"}], "stats": {"total": 94, "additions": 85, "deletions": 9}, "files": [{"sha": "47107a58bc8f9fede261728ff51593fb0d0f8366", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58d14bcaf70662506e1a289494365d976b40fc4e/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58d14bcaf70662506e1a289494365d976b40fc4e/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=58d14bcaf70662506e1a289494365d976b40fc4e", "patch": "@@ -1716,6 +1716,7 @@ impl ToOwned for LifetimeParam {\n }\n \n \n+impl ast::AttrsOwner for LifetimeParam {}\n impl LifetimeParam {\n     pub fn lifetime(&self) -> Option<&Lifetime> {\n         super::child_opt(self)\n@@ -4076,6 +4077,7 @@ impl ToOwned for TypeParam {\n \n \n impl ast::NameOwner for TypeParam {}\n+impl ast::AttrsOwner for TypeParam {}\n impl TypeParam {}\n \n // TypeParamList"}, {"sha": "b1775d0f86efb8185c79bae86cae904199fd46c9", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/58d14bcaf70662506e1a289494365d976b40fc4e/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/58d14bcaf70662506e1a289494365d976b40fc4e/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=58d14bcaf70662506e1a289494365d976b40fc4e", "patch": "@@ -559,8 +559,11 @@ Grammar(\n                 [\"lifetime_params\", \"LifetimeParam\" ],\n             ]\n         ),\n-        \"TypeParam\": ( traits: [\"NameOwner\"] ),\n-        \"LifetimeParam\": ( options: [ \"Lifetime\" ] ),\n+        \"TypeParam\": ( traits: [\"NameOwner\", \"AttrsOwner\"] ),\n+        \"LifetimeParam\": (\n+            options: [ \"Lifetime\"],\n+            traits: [\"AttrsOwner\"],\n+        ),\n         \"Lifetime\": ( traits: [\"AstToken\"] ),\n         \"WhereClause\": (),\n         \"ExprStmt\": ("}, {"sha": "40f99868206e84bb6b6f5d982aabb71b2e4b4ccf", "filename": "crates/ra_syntax/src/grammar/type_params.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/58d14bcaf70662506e1a289494365d976b40fc4e/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58d14bcaf70662506e1a289494365d976b40fc4e/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftype_params.rs?ref=58d14bcaf70662506e1a289494365d976b40fc4e", "patch": "@@ -13,10 +13,20 @@ fn type_param_list(p: &mut Parser) {\n     p.bump();\n \n     while !p.at(EOF) && !p.at(R_ANGLE) {\n+        let m = p.start();\n+\n+        // test generic_lifetime_type_attribute\n+        // fn foo<#[derive(Lifetime)] 'a, #[derive(Type)] T>(_: &'a T) {\n+        // }\n+        attributes::outer_attributes(p);\n+\n         match p.current() {\n-            LIFETIME => lifetime_param(p),\n-            IDENT => type_param(p),\n-            _ => p.err_and_bump(\"expected type parameter\"),\n+            LIFETIME => lifetime_param(p, m),\n+            IDENT => type_param(p, m),\n+            _ => {\n+                m.abandon(p);\n+                p.err_and_bump(\"expected type parameter\")\n+            }\n         }\n         if !p.at(R_ANGLE) && !p.expect(COMMA) {\n             break;\n@@ -26,19 +36,17 @@ fn type_param_list(p: &mut Parser) {\n     m.complete(p, TYPE_PARAM_LIST);\n }\n \n-fn lifetime_param(p: &mut Parser) {\n+fn lifetime_param(p: &mut Parser, m: Marker) {\n     assert!(p.at(LIFETIME));\n-    let m = p.start();\n     p.bump();\n     if p.at(COLON) {\n         lifetime_bounds(p);\n     }\n     m.complete(p, LIFETIME_PARAM);\n }\n \n-fn type_param(p: &mut Parser) {\n+fn type_param(p: &mut Parser, m: Marker) {\n     assert!(p.at(IDENT));\n-    let m = p.start();\n     name(p);\n     if p.at(COLON) {\n         bounds(p);"}, {"sha": "e8fdf741fb9133a15735183680b289c3c1e61997", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0122_generic_lifetime_type_attribute.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58d14bcaf70662506e1a289494365d976b40fc4e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58d14bcaf70662506e1a289494365d976b40fc4e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rs?ref=58d14bcaf70662506e1a289494365d976b40fc4e", "patch": "@@ -0,0 +1,2 @@\n+fn foo<#[derive(Lifetime)] 'a, #[derive(Type)] T>(_: &'a T) {\n+}"}, {"sha": "6a6aa89e8c6da092867f416d174c5e3ad5240e63", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0122_generic_lifetime_type_attribute.txt", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/58d14bcaf70662506e1a289494365d976b40fc4e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.txt", "raw_url": "https://github.com/rust-lang/rust/raw/58d14bcaf70662506e1a289494365d976b40fc4e/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.txt?ref=58d14bcaf70662506e1a289494365d976b40fc4e", "patch": "@@ -0,0 +1,61 @@\n+SOURCE_FILE@[0; 64)\n+  FN_DEF@[0; 63)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    TYPE_PARAM_LIST@[6; 49)\n+      L_ANGLE@[6; 7)\n+      LIFETIME_PARAM@[7; 29)\n+        ATTR@[7; 26)\n+          POUND@[7; 8)\n+          TOKEN_TREE@[8; 26)\n+            L_BRACK@[8; 9)\n+            IDENT@[9; 15) \"derive\"\n+            TOKEN_TREE@[15; 25)\n+              L_PAREN@[15; 16)\n+              IDENT@[16; 24) \"Lifetime\"\n+              R_PAREN@[24; 25)\n+            R_BRACK@[25; 26)\n+        WHITESPACE@[26; 27)\n+        LIFETIME@[27; 29) \"'a\"\n+      COMMA@[29; 30)\n+      WHITESPACE@[30; 31)\n+      TYPE_PARAM@[31; 48)\n+        ATTR@[31; 46)\n+          POUND@[31; 32)\n+          TOKEN_TREE@[32; 46)\n+            L_BRACK@[32; 33)\n+            IDENT@[33; 39) \"derive\"\n+            TOKEN_TREE@[39; 45)\n+              L_PAREN@[39; 40)\n+              IDENT@[40; 44) \"Type\"\n+              R_PAREN@[44; 45)\n+            R_BRACK@[45; 46)\n+        WHITESPACE@[46; 47)\n+        NAME@[47; 48)\n+          IDENT@[47; 48) \"T\"\n+      R_ANGLE@[48; 49)\n+    PARAM_LIST@[49; 59)\n+      L_PAREN@[49; 50)\n+      PARAM@[50; 58)\n+        PLACEHOLDER_PAT@[50; 51)\n+          UNDERSCORE@[50; 51)\n+        COLON@[51; 52)\n+        WHITESPACE@[52; 53)\n+        REFERENCE_TYPE@[53; 58)\n+          AMP@[53; 54)\n+          LIFETIME@[54; 56) \"'a\"\n+          WHITESPACE@[56; 57)\n+          PATH_TYPE@[57; 58)\n+            PATH@[57; 58)\n+              PATH_SEGMENT@[57; 58)\n+                NAME_REF@[57; 58)\n+                  IDENT@[57; 58) \"T\"\n+      R_PAREN@[58; 59)\n+    WHITESPACE@[59; 60)\n+    BLOCK@[60; 63)\n+      L_CURLY@[60; 61)\n+      WHITESPACE@[61; 62)\n+      R_CURLY@[62; 63)\n+  WHITESPACE@[63; 64)"}]}