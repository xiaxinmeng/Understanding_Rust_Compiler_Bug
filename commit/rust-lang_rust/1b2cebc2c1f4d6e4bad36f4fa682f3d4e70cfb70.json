{"sha": "1b2cebc2c1f4d6e4bad36f4fa682f3d4e70cfb70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiMmNlYmMyYzFmNGQ2ZTRiYWQzNmY0ZmE2ODJmM2Q0ZTcwY2ZiNzA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-28T17:21:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-28T17:21:51Z"}, "message": "auto merge of #11170 : alexcrichton/rust/fix-llvm-race, r=pcwalton\n\nThis also appears to fix a race in LLVM that was causing a deadlock on the bots\r\nduring the doc-test tests (where we use rustc in parallel).", "tree": {"sha": "33d889f5d524dfcf2f6d16eb488249b7c6f1da7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33d889f5d524dfcf2f6d16eb488249b7c6f1da7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b2cebc2c1f4d6e4bad36f4fa682f3d4e70cfb70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b2cebc2c1f4d6e4bad36f4fa682f3d4e70cfb70", "html_url": "https://github.com/rust-lang/rust/commit/1b2cebc2c1f4d6e4bad36f4fa682f3d4e70cfb70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b2cebc2c1f4d6e4bad36f4fa682f3d4e70cfb70/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2a4a107aea7f078ca0c6f0ef81dde5f02f8e0e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2a4a107aea7f078ca0c6f0ef81dde5f02f8e0e1", "html_url": "https://github.com/rust-lang/rust/commit/d2a4a107aea7f078ca0c6f0ef81dde5f02f8e0e1"}, {"sha": "b6a746352646965f71fa6c4fd9b37fd94918db8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6a746352646965f71fa6c4fd9b37fd94918db8a", "html_url": "https://github.com/rust-lang/rust/commit/b6a746352646965f71fa6c4fd9b37fd94918db8a"}], "stats": {"total": 50, "additions": 25, "deletions": 25}, "files": [{"sha": "e761a14a3acec1c22dab38799957ee57aab32ecd", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/1b2cebc2c1f4d6e4bad36f4fa682f3d4e70cfb70/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b2cebc2c1f4d6e4bad36f4fa682f3d4e70cfb70/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=1b2cebc2c1f4d6e4bad36f4fa682f3d4e70cfb70", "patch": "@@ -111,38 +111,14 @@ pub mod write {\n         let llmod = trans.module;\n         let llcx = trans.context;\n         unsafe {\n-            llvm::LLVMInitializePasses();\n-\n-            // Only initialize the platforms supported by Rust here, because\n-            // using --llvm-root will have multiple platforms that rustllvm\n-            // doesn't actually link to and it's pointless to put target info\n-            // into the registry that Rust can not generate machine code for.\n-            llvm::LLVMInitializeX86TargetInfo();\n-            llvm::LLVMInitializeX86Target();\n-            llvm::LLVMInitializeX86TargetMC();\n-            llvm::LLVMInitializeX86AsmPrinter();\n-            llvm::LLVMInitializeX86AsmParser();\n-\n-            llvm::LLVMInitializeARMTargetInfo();\n-            llvm::LLVMInitializeARMTarget();\n-            llvm::LLVMInitializeARMTargetMC();\n-            llvm::LLVMInitializeARMAsmPrinter();\n-            llvm::LLVMInitializeARMAsmParser();\n-\n-            llvm::LLVMInitializeMipsTargetInfo();\n-            llvm::LLVMInitializeMipsTarget();\n-            llvm::LLVMInitializeMipsTargetMC();\n-            llvm::LLVMInitializeMipsAsmPrinter();\n-            llvm::LLVMInitializeMipsAsmParser();\n+            configure_llvm(sess);\n \n             if sess.opts.save_temps {\n                 output.with_extension(\"no-opt.bc\").with_c_str(|buf| {\n                     llvm::LLVMWriteBitcodeToFile(llmod, buf);\n                 })\n             }\n \n-            configure_llvm(sess);\n-\n             let OptLevel = match sess.opts.optimize {\n               session::No => lib::llvm::CodeGenLevelNone,\n               session::Less => lib::llvm::CodeGenLevelLess,\n@@ -367,6 +343,30 @@ pub mod write {\n \n         LOCK.lock();\n         if !CONFIGURED {\n+            llvm::LLVMInitializePasses();\n+\n+            // Only initialize the platforms supported by Rust here, because\n+            // using --llvm-root will have multiple platforms that rustllvm\n+            // doesn't actually link to and it's pointless to put target info\n+            // into the registry that Rust can not generate machine code for.\n+            llvm::LLVMInitializeX86TargetInfo();\n+            llvm::LLVMInitializeX86Target();\n+            llvm::LLVMInitializeX86TargetMC();\n+            llvm::LLVMInitializeX86AsmPrinter();\n+            llvm::LLVMInitializeX86AsmParser();\n+\n+            llvm::LLVMInitializeARMTargetInfo();\n+            llvm::LLVMInitializeARMTarget();\n+            llvm::LLVMInitializeARMTargetMC();\n+            llvm::LLVMInitializeARMAsmPrinter();\n+            llvm::LLVMInitializeARMAsmParser();\n+\n+            llvm::LLVMInitializeMipsTargetInfo();\n+            llvm::LLVMInitializeMipsTarget();\n+            llvm::LLVMInitializeMipsTargetMC();\n+            llvm::LLVMInitializeMipsAsmPrinter();\n+            llvm::LLVMInitializeMipsAsmParser();\n+\n             llvm::LLVMRustSetLLVMOptions(llvm_args.len() as c_int,\n                                          llvm_args.as_ptr());\n             CONFIGURED = true;"}]}