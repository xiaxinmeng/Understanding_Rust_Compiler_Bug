{"sha": "d9789b6903482459ae97114a649b1a53e9b6101a", "node_id": "C_kwDOAAsO6NoAKGQ5Nzg5YjY5MDM0ODI0NTlhZTk3MTE0YTY0OWIxYTUzZTliNjEwMWE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-20T17:45:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-20T17:45:09Z"}, "message": "Rollup merge of #97963 - devnexen:net_listener_neg, r=the8472\n\nnet listen backlog set to negative on Linux.\n\nit will be 4076 (from 5.4) or 128.", "tree": {"sha": "98bcd8a51002554f71f181543290660bf65fb158", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98bcd8a51002554f71f181543290660bf65fb158"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9789b6903482459ae97114a649b1a53e9b6101a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjAR2lCRBK7hj4Ov3rIwAASZ4IABxR+MjDSHUbV/o2+Cm1ObqI\nRjFGUGIaD2Rca4vsX94ScHJzdbU0nJGVWtEe5O6tYHutvPVCl+189tRWsffwuCvO\nJDyzh7n2tspefwOrfVcg4UkmHElTYImAVaMJkrszSqO3kfM1hoMuerYLVyRVaH2z\nhPUCv3bYxSn3zBHrryMZjWHWb4221/OV6m+7DmoJXyooSq+S1lVaaPHxpnEmvXrb\n1sIGB+ZRc2S56IIy1ORk0uZV7eZv0+IjIbNKQNr/RSy20fcvb4ySeBcrbMR+rGFI\n8L42ayITA9oVUKxcQ5SuMnOgiUQbPluscc6KyZfaVBHEHoA7RmKhIMlqdDqkZPM=\n=g5nX\n-----END PGP SIGNATURE-----\n", "payload": "tree 98bcd8a51002554f71f181543290660bf65fb158\nparent dd01122b5c62a04e64b4109c5576eeea9ae4145b\nparent 5454bca1b4b14706529e496ae6df8069682d24ae\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1661017509 +0200\ncommitter GitHub <noreply@github.com> 1661017509 +0200\n\nRollup merge of #97963 - devnexen:net_listener_neg, r=the8472\n\nnet listen backlog set to negative on Linux.\n\nit will be 4076 (from 5.4) or 128.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9789b6903482459ae97114a649b1a53e9b6101a", "html_url": "https://github.com/rust-lang/rust/commit/d9789b6903482459ae97114a649b1a53e9b6101a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9789b6903482459ae97114a649b1a53e9b6101a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd01122b5c62a04e64b4109c5576eeea9ae4145b", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd01122b5c62a04e64b4109c5576eeea9ae4145b", "html_url": "https://github.com/rust-lang/rust/commit/dd01122b5c62a04e64b4109c5576eeea9ae4145b"}, {"sha": "5454bca1b4b14706529e496ae6df8069682d24ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/5454bca1b4b14706529e496ae6df8069682d24ae", "html_url": "https://github.com/rust-lang/rust/commit/5454bca1b4b14706529e496ae6df8069682d24ae"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "3b2601e755a9706f478362b17a2bd4c6e453f772", "filename": "library/std/src/os/unix/net/listener.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d9789b6903482459ae97114a649b1a53e9b6101a/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9789b6903482459ae97114a649b1a53e9b6101a/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs?ref=d9789b6903482459ae97114a649b1a53e9b6101a", "patch": "@@ -73,9 +73,13 @@ impl UnixListener {\n         unsafe {\n             let inner = Socket::new_raw(libc::AF_UNIX, libc::SOCK_STREAM)?;\n             let (addr, len) = sockaddr_un(path.as_ref())?;\n+            #[cfg(target_os = \"linux\")]\n+            const backlog: libc::c_int = -1;\n+            #[cfg(not(target_os = \"linux\"))]\n+            const backlog: libc::c_int = 128;\n \n             cvt(libc::bind(inner.as_inner().as_raw_fd(), &addr as *const _ as *const _, len as _))?;\n-            cvt(libc::listen(inner.as_inner().as_raw_fd(), 128))?;\n+            cvt(libc::listen(inner.as_inner().as_raw_fd(), backlog))?;\n \n             Ok(UnixListener(inner))\n         }\n@@ -109,12 +113,16 @@ impl UnixListener {\n     pub fn bind_addr(socket_addr: &SocketAddr) -> io::Result<UnixListener> {\n         unsafe {\n             let inner = Socket::new_raw(libc::AF_UNIX, libc::SOCK_STREAM)?;\n+            #[cfg(target_os = \"linux\")]\n+            const backlog: libc::c_int = -1;\n+            #[cfg(not(target_os = \"linux\"))]\n+            const backlog: libc::c_int = 128;\n             cvt(libc::bind(\n                 inner.as_raw_fd(),\n                 &socket_addr.addr as *const _ as *const _,\n                 socket_addr.len as _,\n             ))?;\n-            cvt(libc::listen(inner.as_raw_fd(), 128))?;\n+            cvt(libc::listen(inner.as_raw_fd(), backlog))?;\n             Ok(UnixListener(inner))\n         }\n     }"}]}