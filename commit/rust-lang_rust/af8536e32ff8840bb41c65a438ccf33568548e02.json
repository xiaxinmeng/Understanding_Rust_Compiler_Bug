{"sha": "af8536e32ff8840bb41c65a438ccf33568548e02", "node_id": "C_kwDOAAsO6NoAKGFmODUzNmUzMmZmODg0MGJiNDFjNjVhNDM4Y2NmMzM1Njg1NDhlMDI", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-11T10:30:50Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-11T10:30:50Z"}, "message": "Simplify assertion macro", "tree": {"sha": "d3df5548d9e7fc6fad0d190715755846e5dfd776", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3df5548d9e7fc6fad0d190715755846e5dfd776"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af8536e32ff8840bb41c65a438ccf33568548e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af8536e32ff8840bb41c65a438ccf33568548e02", "html_url": "https://github.com/rust-lang/rust/commit/af8536e32ff8840bb41c65a438ccf33568548e02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af8536e32ff8840bb41c65a438ccf33568548e02/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f4cf59323304a2e785aba564a6eb3bd473d5499", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f4cf59323304a2e785aba564a6eb3bd473d5499", "html_url": "https://github.com/rust-lang/rust/commit/3f4cf59323304a2e785aba564a6eb3bd473d5499"}], "stats": {"total": 57, "additions": 28, "deletions": 29}, "files": [{"sha": "f5c1fe1320c56d2183ea45a17239098ea31adbdc", "filename": "src/test/ui/layout/unsafe-cell-hides-niche.rs", "status": "modified", "additions": 28, "deletions": 29, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/af8536e32ff8840bb41c65a438ccf33568548e02/src%2Ftest%2Fui%2Flayout%2Funsafe-cell-hides-niche.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af8536e32ff8840bb41c65a438ccf33568548e02/src%2Ftest%2Fui%2Flayout%2Funsafe-cell-hides-niche.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flayout%2Funsafe-cell-hides-niche.rs?ref=af8536e32ff8840bb41c65a438ccf33568548e02", "patch": "@@ -8,7 +8,6 @@\n #![feature(repr_simd)]\n \n use std::cell::{UnsafeCell, RefCell, Cell};\n-use std::mem::size_of;\n use std::num::NonZeroU32 as N32;\n use std::sync::{Mutex, RwLock};\n \n@@ -21,45 +20,45 @@ struct NoNiche<T>(UnsafeCell<T>);\n \n // Overwriting the runtime assertion and making it a compile-time assertion\n macro_rules! assert_eq {\n-    ($a:expr, $b:literal) => {{\n-        const _: () = assert!($a == $b);\n+    ($a:ty, $b:literal) => {{\n+        const _: () = assert!(std::mem::size_of::<$a>() == $b);\n     }};\n }\n \n fn main() {\n-    assert_eq!(size_of::<Option<Wrapper<u32>>>(),     8);\n-    assert_eq!(size_of::<Option<Wrapper<N32>>>(),     4); // (\u2713 niche opt)\n-    assert_eq!(size_of::<Option<Transparent<u32>>>(), 8);\n-    assert_eq!(size_of::<Option<Transparent<N32>>>(), 4); // (\u2713 niche opt)\n-    assert_eq!(size_of::<Option<NoNiche<u32>>>(),     8);\n-    assert_eq!(size_of::<Option<NoNiche<N32>>>(),     8); // (\u2717 niche opt)\n+    assert_eq!(Option<Wrapper<u32>>,     8);\n+    assert_eq!(Option<Wrapper<N32>>,     4); // (\u2713 niche opt)\n+    assert_eq!(Option<Transparent<u32>>, 8);\n+    assert_eq!(Option<Transparent<N32>>, 4); // (\u2713 niche opt)\n+    assert_eq!(Option<NoNiche<u32>>,     8);\n+    assert_eq!(Option<NoNiche<N32>>,     8); // (\u2717 niche opt)\n \n-    assert_eq!(size_of::<Option<UnsafeCell<u32>>>(),  8);\n-    assert_eq!(size_of::<Option<UnsafeCell<N32>>>(),  8); // (\u2717 niche opt)\n+    assert_eq!(Option<UnsafeCell<u32>>,  8);\n+    assert_eq!(Option<UnsafeCell<N32>>,  8); // (\u2717 niche opt)\n \n-    assert_eq!(size_of::<       UnsafeCell<&()> >(), 8);\n-    assert_eq!(size_of::<Option<UnsafeCell<&()>>>(), 16); // (\u2717 niche opt)\n-    assert_eq!(size_of::<             Cell<&()> >(), 8);\n-    assert_eq!(size_of::<Option<      Cell<&()>>>(), 16); // (\u2717 niche opt)\n-    assert_eq!(size_of::<          RefCell<&()> >(), 16);\n-    assert_eq!(size_of::<Option<   RefCell<&()>>>(), 24); // (\u2717 niche opt)\n-    assert_eq!(size_of::<           RwLock<&()> >(), 24);\n-    assert_eq!(size_of::<Option<    RwLock<&()>>>(), 32); // (\u2717 niche opt)\n-    assert_eq!(size_of::<            Mutex<&()> >(), 16);\n-    assert_eq!(size_of::<Option<     Mutex<&()>>>(), 24); // (\u2717 niche opt)\n+    assert_eq!(       UnsafeCell<&()> , 8);\n+    assert_eq!(Option<UnsafeCell<&()>>, 16); // (\u2717 niche opt)\n+    assert_eq!(             Cell<&()> , 8);\n+    assert_eq!(Option<      Cell<&()>>, 16); // (\u2717 niche opt)\n+    assert_eq!(          RefCell<&()> , 16);\n+    assert_eq!(Option<   RefCell<&()>>, 24); // (\u2717 niche opt)\n+    assert_eq!(           RwLock<&()> , 24);\n+    assert_eq!(Option<    RwLock<&()>>, 32); // (\u2717 niche opt)\n+    assert_eq!(            Mutex<&()> , 16);\n+    assert_eq!(Option<     Mutex<&()>>, 24); // (\u2717 niche opt)\n \n-    assert_eq!(size_of::<       UnsafeCell<&[i32]> >(), 16);\n-    assert_eq!(size_of::<Option<UnsafeCell<&[i32]>>>(), 24); // (\u2717 niche opt)\n-    assert_eq!(size_of::<       UnsafeCell<(&(), &())> >(), 16);\n-    assert_eq!(size_of::<Option<UnsafeCell<(&(), &())>>>(), 24); // (\u2717 niche opt)\n+    assert_eq!(       UnsafeCell<&[i32]> , 16);\n+    assert_eq!(Option<UnsafeCell<&[i32]>>, 24); // (\u2717 niche opt)\n+    assert_eq!(       UnsafeCell<(&(), &())> , 16);\n+    assert_eq!(Option<UnsafeCell<(&(), &())>>, 24); // (\u2717 niche opt)\n \n     trait Trait {}\n-    assert_eq!(size_of::<       UnsafeCell<&dyn Trait> >(), 16);\n-    assert_eq!(size_of::<Option<UnsafeCell<&dyn Trait>>>(), 24); // (\u2717 niche opt)\n+    assert_eq!(       UnsafeCell<&dyn Trait> , 16);\n+    assert_eq!(Option<UnsafeCell<&dyn Trait>>, 24); // (\u2717 niche opt)\n \n     #[repr(simd)]\n     pub struct Vec4<T>([T; 4]);\n \n-    assert_eq!(size_of::<       UnsafeCell<Vec4<N32>> >(), 16);\n-    assert_eq!(size_of::<Option<UnsafeCell<Vec4<N32>>>>(), 32); // (\u2717 niche opt)\n+    assert_eq!(       UnsafeCell<Vec4<N32>> , 16);\n+    assert_eq!(Option<UnsafeCell<Vec4<N32>>>, 32); // (\u2717 niche opt)\n }"}]}