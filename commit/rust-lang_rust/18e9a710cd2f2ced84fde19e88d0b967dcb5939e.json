{"sha": "18e9a710cd2f2ced84fde19e88d0b967dcb5939e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ZTlhNzEwY2QyZjJjZWQ4NGZkZTE5ZTg4ZDBiOTY3ZGNiNTkzOWU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-15T16:04:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-15T16:04:49Z"}, "message": "remove Cancelable from fn_scopes", "tree": {"sha": "8cca098650d989ea58e6bd4aafd44e5ff85fcee5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cca098650d989ea58e6bd4aafd44e5ff85fcee5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18e9a710cd2f2ced84fde19e88d0b967dcb5939e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18e9a710cd2f2ced84fde19e88d0b967dcb5939e", "html_url": "https://github.com/rust-lang/rust/commit/18e9a710cd2f2ced84fde19e88d0b967dcb5939e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "040a622c5277511b4835fa35b72c314bf080b8cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/040a622c5277511b4835fa35b72c314bf080b8cc", "html_url": "https://github.com/rust-lang/rust/commit/040a622c5277511b4835fa35b72c314bf080b8cc"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "4d7925ac47bb0f4875fc56c4ad97b527c3aa327f", "filename": "crates/ra_hir/src/code_model_api.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs?ref=18e9a710cd2f2ced84fde19e88d0b967dcb5939e", "patch": "@@ -305,13 +305,13 @@ impl Function {\n         db.body_syntax_mapping(self.def_id)\n     }\n \n-    pub fn scopes(&self, db: &impl HirDatabase) -> Cancelable<ScopesWithSyntaxMapping> {\n-        let scopes = db.fn_scopes(self.def_id)?;\n+    pub fn scopes(&self, db: &impl HirDatabase) -> ScopesWithSyntaxMapping {\n+        let scopes = db.fn_scopes(self.def_id);\n         let syntax_mapping = db.body_syntax_mapping(self.def_id);\n-        Ok(ScopesWithSyntaxMapping {\n+        ScopesWithSyntaxMapping {\n             scopes,\n             syntax_mapping,\n-        })\n+        }\n     }\n \n     pub fn signature(&self, db: &impl HirDatabase) -> Arc<FnSignature> {"}, {"sha": "d20c03f4347da8c819be26bd989f4cf3dee4ca23", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=18e9a710cd2f2ced84fde19e88d0b967dcb5939e", "patch": "@@ -32,7 +32,7 @@ pub trait HirDatabase: SyntaxDatabase\n         use fn crate::macros::expand_macro_invocation;\n     }\n \n-    fn fn_scopes(def_id: DefId) -> Cancelable<Arc<FnScopes>> {\n+    fn fn_scopes(def_id: DefId) -> Arc<FnScopes> {\n         type FnScopesQuery;\n         use fn query_definitions::fn_scopes;\n     }"}, {"sha": "8f33ec7073419571d1206f9c5e61c6ebe83e0b57", "filename": "crates/ra_hir/src/query_definitions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fquery_definitions.rs?ref=18e9a710cd2f2ced84fde19e88d0b967dcb5939e", "patch": "@@ -18,10 +18,10 @@ use crate::{\n     nameres::{InputModuleItems, ItemMap, Resolver},\n };\n \n-pub(super) fn fn_scopes(db: &impl HirDatabase, def_id: DefId) -> Cancelable<Arc<FnScopes>> {\n+pub(super) fn fn_scopes(db: &impl HirDatabase, def_id: DefId) -> Arc<FnScopes> {\n     let body = db.body_hir(def_id);\n     let res = FnScopes::new(body);\n-    Ok(Arc::new(res))\n+    Arc::new(res)\n }\n \n pub(super) fn file_items(db: &impl HirDatabase, file_id: HirFileId) -> Arc<SourceFileItems> {"}, {"sha": "54eece16519883fa197327f176f514f1e4cc7e89", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=18e9a710cd2f2ced84fde19e88d0b967dcb5939e", "patch": "@@ -1206,7 +1206,7 @@ pub fn infer(db: &impl HirDatabase, def_id: DefId) -> Cancelable<Arc<InferenceRe\n     db.check_canceled();\n     let function = Function::new(def_id); // TODO: consts also need inference\n     let body = function.body(db);\n-    let scopes = db.fn_scopes(def_id)?;\n+    let scopes = db.fn_scopes(def_id);\n     let module = function.module(db)?;\n     let impl_block = function.impl_block(db)?;\n     let mut ctx = InferenceContext::new(db, body, scopes, module, impl_block);"}, {"sha": "b44ac998769857fea97af8490d33086ce96f011e", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=18e9a710cd2f2ced84fde19e88d0b967dcb5939e", "patch": "@@ -322,7 +322,7 @@ fn infer(content: &str) -> String {\n     {\n         let func = source_binder::function_from_source(&db, file_id, fn_def).unwrap();\n         let inference_result = func.infer(&db).unwrap();\n-        let body_syntax_mapping = func.body_syntax_mapping(&db).unwrap();\n+        let body_syntax_mapping = func.body_syntax_mapping(&db);\n         let mut types = Vec::new();\n         for (pat, ty) in inference_result.type_of_pat.iter() {\n             let syntax_ptr = match body_syntax_mapping.pat_syntax(pat) {"}, {"sha": "fdb64895e61172f283b2b9bfdc6728b87b4adc6f", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=18e9a710cd2f2ced84fde19e88d0b967dcb5939e", "patch": "@@ -15,7 +15,7 @@ pub(super) fn complete_scope(acc: &mut Completions, ctx: &CompletionContext) ->\n         None => return Ok(()),\n     };\n     if let Some(function) = &ctx.function {\n-        let scopes = function.scopes(ctx.db)?;\n+        let scopes = function.scopes(ctx.db);\n         complete_fn(acc, &scopes, ctx.offset);\n     }\n "}, {"sha": "5d522181b35153e66e9943e0fd13891f87fff245", "filename": "crates/ra_ide_api/src/goto_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs?ref=18e9a710cd2f2ced84fde19e88d0b967dcb5939e", "patch": "@@ -50,7 +50,7 @@ pub(crate) fn reference_definition(\n     if let Some(function) =\n         hir::source_binder::function_from_child_node(db, file_id, name_ref.syntax())\n     {\n-        let scope = function.scopes(db)?;\n+        let scope = function.scopes(db);\n         // First try to resolve the symbol locally\n         if let Some(entry) = scope.resolve_local_name(name_ref) {\n             let nav = NavigationTarget::from_scope_entry(file_id, &entry);"}, {"sha": "8b2cd6e27990bda1e06636c6ac35bf6feaee8878", "filename": "crates/ra_ide_api/src/imp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_ide_api%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18e9a710cd2f2ced84fde19e88d0b967dcb5939e/crates%2Fra_ide_api%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fimp.rs?ref=18e9a710cd2f2ced84fde19e88d0b967dcb5939e", "patch": "@@ -128,7 +128,7 @@ impl db::RootDatabase {\n             .collect::<Vec<_>>();\n         ret.extend(\n             descr\n-                .scopes(self)?\n+                .scopes(self)\n                 .find_all_refs(binding)\n                 .into_iter()\n                 .map(|ref_desc| (position.file_id, ref_desc.range)),\n@@ -156,7 +156,7 @@ impl db::RootDatabase {\n                 position.file_id,\n                 name_ref.syntax(),\n             ));\n-            let scope = descr.scopes(db)?;\n+            let scope = descr.scopes(db);\n             let resolved = ctry!(scope.resolve_local_name(name_ref));\n             let resolved = resolved.ptr().resolve(source_file);\n             let binding = ctry!(find_node_at_offset::<ast::BindPat>("}]}