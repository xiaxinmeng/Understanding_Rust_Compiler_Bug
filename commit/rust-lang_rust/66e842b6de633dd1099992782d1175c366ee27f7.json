{"sha": "66e842b6de633dd1099992782d1175c366ee27f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZTg0MmI2ZGU2MzNkZDEwOTk5OTI3ODJkMTE3NWMzNjZlZTI3Zjc=", "commit": {"author": {"name": "Nathan", "email": "nathanrsizemore@gmail.com", "date": "2015-11-10T01:13:10Z"}, "committer": {"name": "Nathan", "email": "nathanrsizemore@gmail.com", "date": "2016-01-02T05:25:42Z"}, "message": "Links and punctionaction fixes.", "tree": {"sha": "1be1a82e28392536c153ba579a682ad319d24e23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1be1a82e28392536c153ba579a682ad319d24e23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66e842b6de633dd1099992782d1175c366ee27f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66e842b6de633dd1099992782d1175c366ee27f7", "html_url": "https://github.com/rust-lang/rust/commit/66e842b6de633dd1099992782d1175c366ee27f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66e842b6de633dd1099992782d1175c366ee27f7/comments", "author": {"login": "nathansizemore", "id": 3423825, "node_id": "MDQ6VXNlcjM0MjM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/3423825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathansizemore", "html_url": "https://github.com/nathansizemore", "followers_url": "https://api.github.com/users/nathansizemore/followers", "following_url": "https://api.github.com/users/nathansizemore/following{/other_user}", "gists_url": "https://api.github.com/users/nathansizemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathansizemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathansizemore/subscriptions", "organizations_url": "https://api.github.com/users/nathansizemore/orgs", "repos_url": "https://api.github.com/users/nathansizemore/repos", "events_url": "https://api.github.com/users/nathansizemore/events{/privacy}", "received_events_url": "https://api.github.com/users/nathansizemore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nathansizemore", "id": 3423825, "node_id": "MDQ6VXNlcjM0MjM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/3423825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathansizemore", "html_url": "https://github.com/nathansizemore", "followers_url": "https://api.github.com/users/nathansizemore/followers", "following_url": "https://api.github.com/users/nathansizemore/following{/other_user}", "gists_url": "https://api.github.com/users/nathansizemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathansizemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathansizemore/subscriptions", "organizations_url": "https://api.github.com/users/nathansizemore/orgs", "repos_url": "https://api.github.com/users/nathansizemore/repos", "events_url": "https://api.github.com/users/nathansizemore/events{/privacy}", "received_events_url": "https://api.github.com/users/nathansizemore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f36a18df8481de61021593a4fd5d3188b09d6bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f36a18df8481de61021593a4fd5d3188b09d6bb", "html_url": "https://github.com/rust-lang/rust/commit/7f36a18df8481de61021593a4fd5d3188b09d6bb"}], "stats": {"total": 100, "additions": 57, "deletions": 43}, "files": [{"sha": "1819a308b3cbdfd0e316615310b676c8fea3917c", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 57, "deletions": 43, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/66e842b6de633dd1099992782d1175c366ee27f7/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66e842b6de633dd1099992782d1175c366ee27f7/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=66e842b6de633dd1099992782d1175c366ee27f7", "patch": "@@ -761,16 +761,17 @@ impl AsInner<fs_imp::DirEntry> for DirEntry {\n /// # Platform behavior\n ///\n /// This function currently corresponds to the `unlink` function on Unix\n-/// and the `DeleteFile` function on Windows. Note that, this\n-/// [may change in the future.][https://github.com/rust-lang/rust/pull/28613]\n+/// and the `DeleteFile` function on Windows.\n+/// Note that, this [may change in the future][changes].\n+/// [changes]: https://github.com/rust-lang/rust/pull/28613\n ///\n /// # Errors\n ///\n /// This function will return an error in the following situations, but is not\n /// limited to just these cases:\n ///\n-/// * `path` points to a directory\n-/// * The user lacks permissions to remove the file\n+/// * `path` points to a directory.\n+/// * The user lacks permissions to remove the file.\n ///\n /// # Examples\n ///\n@@ -796,16 +797,17 @@ pub fn remove_file<P: AsRef<Path>>(path: P) -> io::Result<()> {\n /// # Platform behavior\n ///\n /// This function currently corresponds to the `stat` function on Unix\n-/// and the `GetFileAttributesEx` function on Windows. Note that, this\n-/// [may change in the future.][https://github.com/rust-lang/rust/pull/28613]\n+/// and the `GetFileAttributesEx` function on Windows.\n+/// Note that, this [may change in the future][changes].\n+/// [changes]: https://github.com/rust-lang/rust/pull/28613\n ///\n /// # Errors\n ///\n /// This function will return an error in the following situations, but is not\n /// limited to just these cases:\n ///\n-/// * The user lacks permissions to perform `metadata` call on `path`\n-/// * `path` does not exist\n+/// * The user lacks permissions to perform `metadata` call on `path`.\n+/// * `path` does not exist.\n ///\n /// # Examples\n ///\n@@ -828,16 +830,17 @@ pub fn metadata<P: AsRef<Path>>(path: P) -> io::Result<Metadata> {\n /// # Platform behavior\n ///\n /// This function currently corresponds to the `lstat` function on Unix\n-/// and the `GetFileAttributesEx` function on Windows. Note that, this\n-/// [may change in the future.][https://github.com/rust-lang/rust/pull/28613]\n+/// and the `GetFileAttributesEx` function on Windows.\n+/// Note that, this [may change in the future][changes].\n+/// [changes]: https://github.com/rust-lang/rust/pull/28613\n ///\n /// # Errors\n ///\n /// This function will return an error in the following situations, but is not\n /// limited to just these cases:\n ///\n-/// * The user lacks permissions to perform `metadata` call on `path`\n-/// * `path` does not exist\n+/// * The user lacks permissions to perform `metadata` call on `path`.\n+/// * `path` does not exist.\n ///\n /// # Examples\n ///\n@@ -863,16 +866,17 @@ pub fn symlink_metadata<P: AsRef<Path>>(path: P) -> io::Result<Metadata> {\n ///\n /// This function currently corresponds to the `rename` function on Unix\n /// and the `MoveFileEx` function with the `MOVEFILE_REPLACE_EXISTING` flag on Windows.\n-/// Note that, this [may change in the future.][https://github.com/rust-lang/rust/pull/28613]\n+/// Note that, this [may change in the future][changes].\n+/// [changes]: https://github.com/rust-lang/rust/pull/28613\n ///\n /// # Errors\n ///\n /// This function will return an error in the following situations, but is not\n /// limited to just these cases:\n ///\n-/// * `from` does not exist\n-/// * The user lacks permissions to view contents\n-/// * `from` and `to` are on separate filesystems\n+/// * `from` does not exist.\n+/// * The user lacks permissions to view contents.\n+/// * `from` and `to` are on separate filesystems.\n ///\n /// # Examples\n ///\n@@ -905,17 +909,18 @@ pub fn rename<P: AsRef<Path>, Q: AsRef<Path>>(from: P, to: Q) -> io::Result<()>\n /// with `O_RDONLY` for `from` and `O_WRONLY`, `O_CREAT`, and `O_TRUNC` for `to`.\n /// `O_CLOEXEC` is set for returned file descriptors.\n /// On Windows, this function currently corresponds to `CopyFileEx`.\n-/// Note that, this [may change in the future.][https://github.com/rust-lang/rust/pull/28613]\n+/// Note that, this [may change in the future][changes].\n+/// [changes]: https://github.com/rust-lang/rust/pull/28613\n ///\n /// # Errors\n ///\n /// This function will return an error in the following situations, but is not\n /// limited to just these cases:\n ///\n-/// * The `from` path is not a file\n-/// * The `from` file does not exist\n+/// * The `from` path is not a file.\n+/// * The `from` file does not exist.\n /// * The current process does not have the permission rights to access\n-///   `from` or write `to`\n+///   `from` or write `to`.\n ///\n /// # Examples\n ///\n@@ -940,14 +945,15 @@ pub fn copy<P: AsRef<Path>, Q: AsRef<Path>>(from: P, to: Q) -> io::Result<u64> {\n ///\n /// This function currently corresponds to the `link` function on Unix\n /// and the `CreateHardLink` function on Windows.\n-/// Note that, this [may change in the future.][https://github.com/rust-lang/rust/pull/28613]\n+/// Note that, this [may change in the future][changes].\n+/// [changes]: https://github.com/rust-lang/rust/pull/28613\n ///\n /// # Errors\n ///\n /// This function will return an error in the following situations, but is not\n /// limited to just these cases:\n ///\n-/// * The `src` path is not a file or doesn't exist\n+/// * The `src` path is not a file or doesn't exist.\n ///\n /// # Examples\n ///\n@@ -997,15 +1003,16 @@ pub fn soft_link<P: AsRef<Path>, Q: AsRef<Path>>(src: P, dst: Q) -> io::Result<(\n /// This function currently corresponds to the `readlink` function on Unix\n /// and the `CreateFile` function with `FILE_FLAG_OPEN_REPARSE_POINT` and\n /// `FILE_FLAG_BACKUP_SEMANTICS` flags on Windows.\n-/// Note that, this [may change in the future.][https://github.com/rust-lang/rust/pull/28613]\n+/// Note that, this [may change in the future][changes].\n+/// [changes]: https://github.com/rust-lang/rust/pull/28613\n ///\n /// # Errors\n ///\n /// This function will return an error in the following situations, but is not\n /// limited to just these cases:\n ///\n-/// * `path` is not a symbolic link\n-/// * `path` does not exist\n+/// * `path` is not a symbolic link.\n+/// * `path` does not exist.\n ///\n /// # Examples\n ///\n@@ -1029,15 +1036,16 @@ pub fn read_link<P: AsRef<Path>>(path: P) -> io::Result<PathBuf> {\n ///\n /// This function currently corresponds to the `realpath` function on Unix\n /// and the `CreateFile` and `GetFinalPathNameByHandle` functions on Windows.\n-/// Note that, this [may change in the future.][https://github.com/rust-lang/rust/pull/28613]\n+/// Note that, this [may change in the future][changes].\n+/// [changes]: https://github.com/rust-lang/rust/pull/28613\n ///\n /// # Errors\n ///\n /// This function will return an error in the following situations, but is not\n /// limited to just these cases:\n ///\n-/// * `path` does not exist\n-/// * A component in path is not a directory\n+/// * `path` does not exist.\n+/// * A component in path is not a directory.\n ///\n /// # Examples\n ///\n@@ -1060,15 +1068,16 @@ pub fn canonicalize<P: AsRef<Path>>(path: P) -> io::Result<PathBuf> {\n ///\n /// This function currently corresponds to the `mkdir` function on Unix\n /// and the `CreateDirectory` function on Windows.\n-/// Note that, this [may change in the future.][https://github.com/rust-lang/rust/pull/28613]\n+/// Note that, this [may change in the future][changes].\n+/// [changes]: https://github.com/rust-lang/rust/pull/28613\n ///\n /// # Errors\n ///\n /// This function will return an error in the following situations, but is not\n /// limited to just these cases:\n ///\n-/// * User lacks permissions to create directory at `path`\n-/// * `path` already exists\n+/// * User lacks permissions to create directory at `path`.\n+/// * `path` already exists.\n ///\n /// # Examples\n ///\n@@ -1092,7 +1101,8 @@ pub fn create_dir<P: AsRef<Path>>(path: P) -> io::Result<()> {\n ///\n /// This function currently corresponds to the `mkdir` function on Unix\n /// and the `CreateDirectory` function on Windows.\n-/// Note that, this [may change in the future.][https://github.com/rust-lang/rust/pull/28613]\n+/// Note that, this [may change in the future][changes].\n+/// [changes]: https://github.com/rust-lang/rust/pull/28613\n ///\n /// # Errors\n ///\n@@ -1125,15 +1135,16 @@ pub fn create_dir_all<P: AsRef<Path>>(path: P) -> io::Result<()> {\n ///\n /// This function currently corresponds to the `rmdir` function on Unix\n /// and the `RemoveDirectory` function on Windows.\n-/// Note that, this [may change in the future.][https://github.com/rust-lang/rust/pull/28613]\n+/// Note that, this [may change in the future][changes].\n+/// [changes]: https://github.com/rust-lang/rust/pull/28613\n ///\n /// # Errors\n ///\n /// This function will return an error in the following situations, but is not\n /// limited to just these cases:\n ///\n-/// * The user lacks permissions to remove the directory at the provided `path`\n-/// * The directory isn't empty\n+/// * The user lacks permissions to remove the directory at the provided `path`.\n+/// * The directory isn't empty.\n ///\n /// # Examples\n ///\n@@ -1161,7 +1172,8 @@ pub fn remove_dir<P: AsRef<Path>>(path: P) -> io::Result<()> {\n /// This function currently corresponds to `opendir`, `lstat`, `rm` and `rmdir` functions on Unix\n /// and the `FindFirstFile`, `GetFileAttributesEx`, `DeleteFile`, and `RemoveDirectory` functions\n /// on Windows.\n-/// Note that, this [may change in the future.][https://github.com/rust-lang/rust/pull/28613]\n+/// Note that, this [may change in the future][changes].\n+/// [changes]: https://github.com/rust-lang/rust/pull/28613\n ///\n /// # Errors\n ///\n@@ -1204,16 +1216,17 @@ fn _remove_dir_all(path: &Path) -> io::Result<()> {\n ///\n /// This function currently corresponds to the `opendir` function on Unix\n /// and the `FindFirstFile` function on Windows.\n-/// Note that, this [may change in the future.][https://github.com/rust-lang/rust/pull/28613]\n+/// Note that, this [may change in the future][changes].\n+/// [changes]: https://github.com/rust-lang/rust/pull/28613\n ///\n /// # Errors\n ///\n /// This function will return an error in the following situations, but is not\n /// limited to just these cases:\n ///\n-/// * The provided `path` doesn't exist\n-/// * The process lacks permissions to view the contents\n-/// * The `path` points at a non-directory file\n+/// * The provided `path` doesn't exist.\n+/// * The process lacks permissions to view the contents.\n+/// * The `path` points at a non-directory file.\n ///\n /// # Examples\n ///\n@@ -1306,15 +1319,16 @@ impl Iterator for WalkDir {\n ///\n /// This function currently corresponds to the `chmod` function on Unix\n /// and the `SetFileAttributes` function on Windows.\n-/// Note that, this [may change in the future.][https://github.com/rust-lang/rust/pull/28613]\n+/// Note that, this [may change in the future][changes].\n+/// [changes]: https://github.com/rust-lang/rust/pull/28613\n ///\n /// # Errors\n ///\n /// This function will return an error in the following situations, but is not\n /// limited to just these cases:\n ///\n-/// * `path` does not exist\n-/// * The user lacks the permission to change attributes of the file\n+/// * `path` does not exist.\n+/// * The user lacks the permission to change attributes of the file.\n ///\n /// # Examples\n ///"}]}