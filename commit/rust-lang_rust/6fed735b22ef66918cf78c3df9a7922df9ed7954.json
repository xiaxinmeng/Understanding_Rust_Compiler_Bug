{"sha": "6fed735b22ef66918cf78c3df9a7922df9ed7954", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmZWQ3MzViMjJlZjY2OTE4Y2Y3OGMzZGY5YTc5MjJkZjllZDc5NTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-23T20:30:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-23T20:30:56Z"}, "message": "Auto merge of #26061 - Gankro:inherit-dep, r=brson\n\nUncertain if this is the desired effect/strategy/testing.\r\n\r\nr? @aturon", "tree": {"sha": "a915622146c74c65f4e1e5d640f654967dfb68ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a915622146c74c65f4e1e5d640f654967dfb68ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fed735b22ef66918cf78c3df9a7922df9ed7954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fed735b22ef66918cf78c3df9a7922df9ed7954", "html_url": "https://github.com/rust-lang/rust/commit/6fed735b22ef66918cf78c3df9a7922df9ed7954", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fed735b22ef66918cf78c3df9a7922df9ed7954/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ad26e850ed5dfedda8c96d7315aee50145ceedd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ad26e850ed5dfedda8c96d7315aee50145ceedd", "html_url": "https://github.com/rust-lang/rust/commit/2ad26e850ed5dfedda8c96d7315aee50145ceedd"}, {"sha": "2962b2681fd9dd4c91f27c4b061d9a2dc15ced02", "url": "https://api.github.com/repos/rust-lang/rust/commits/2962b2681fd9dd4c91f27c4b061d9a2dc15ced02", "html_url": "https://github.com/rust-lang/rust/commit/2962b2681fd9dd4c91f27c4b061d9a2dc15ced02"}], "stats": {"total": 105, "additions": 93, "deletions": 12}, "files": [{"sha": "dad41bdd3a394390f772098ec19fd99265c994c0", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 50, "deletions": 1, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/6fed735b22ef66918cf78c3df9a7922df9ed7954/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fed735b22ef66918cf78c3df9a7922df9ed7954/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=6fed735b22ef66918cf78c3df9a7922df9ed7954", "patch": "@@ -30,6 +30,7 @@ use syntax::feature_gate::emit_feature_err;\n use util::nodemap::{DefIdMap, FnvHashSet, FnvHashMap};\n \n use std::mem::replace;\n+use std::cmp::Ordering;\n \n /// A stability index, giving the stability level for items and methods.\n pub struct Index<'tcx> {\n@@ -59,9 +60,57 @@ impl<'a, 'tcx: 'a> Annotator<'a, 'tcx> {\n         if self.index.staged_api[&ast::LOCAL_CRATE] {\n             debug!(\"annotate(id = {:?}, attrs = {:?})\", id, attrs);\n             match attr::find_stability(self.tcx.sess.diagnostic(), attrs, item_sp) {\n-                Some(stab) => {\n+                Some(mut stab) => {\n                     debug!(\"annotate: found {:?}\", stab);\n+                    // if parent is deprecated and we're not, inherit this by merging\n+                    // deprecated_since and its reason.\n+                    if let Some(parent_stab) = self.parent {\n+                        if parent_stab.deprecated_since.is_some()\n+                        && stab.deprecated_since.is_none() {\n+                            stab.deprecated_since = parent_stab.deprecated_since.clone();\n+                            stab.reason = parent_stab.reason.clone();\n+                        }\n+                    }\n+\n                     let stab = self.tcx.intern_stability(stab);\n+\n+                    // Check if deprecated_since < stable_since. If it is,\n+                    // this is *almost surely* an accident.\n+                    let deprecated_predates_stable = match (stab.deprecated_since.as_ref(),\n+                                                            stab.since.as_ref()) {\n+                        (Some(dep_since), Some(stab_since)) => {\n+                            // explicit version of iter::order::lt to handle parse errors properly\n+                            let mut is_less = false;\n+                            for (dep_v, stab_v) in dep_since.split(\".\").zip(stab_since.split(\".\")) {\n+                                match (dep_v.parse::<u64>(), stab_v.parse::<u64>()) {\n+                                    (Ok(dep_v), Ok(stab_v)) => match dep_v.cmp(&stab_v) {\n+                                        Ordering::Less => {\n+                                            is_less = true;\n+                                            break;\n+                                        }\n+                                        Ordering::Equal => { continue; }\n+                                        Ordering::Greater => { break; }\n+                                    },\n+                                    _ => {\n+                                        self.tcx.sess.span_err(item_sp,\n+                                            \"Invalid stability or deprecation version found\");\n+                                        // act like it isn't less because the question is now\n+                                        // nonsensical, and this makes us not do anything else\n+                                        // interesting.\n+                                        break;\n+                                    }\n+                                }\n+                            }\n+                            is_less\n+                        },\n+                        _ => false,\n+                    };\n+\n+                    if deprecated_predates_stable {\n+                        self.tcx.sess.span_err(item_sp,\n+                            \"An API can't be stabilized after it is deprecated\");\n+                    }\n+\n                     self.index.map.insert(local_def(id), Some(stab));\n \n                     // Don't inherit #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "3ee8ffe3636a772c2e4c89d36540bbda7cc3ef19", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6fed735b22ef66918cf78c3df9a7922df9ed7954/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fed735b22ef66918cf78c3df9a7922df9ed7954/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=6fed735b22ef66918cf78c3df9a7922df9ed7954", "patch": "@@ -397,7 +397,7 @@ fn find_stability_generic<'a,\n                              -> (Option<Stability>, Vec<&'a AM>) {\n \n     let mut stab: Option<Stability> = None;\n-    let mut deprecated: Option<(InternedString, Option<InternedString>)> = None;\n+    let mut deprecated: Option<(Option<InternedString>, Option<InternedString>)> = None;\n     let mut used_attrs: Vec<&'a AM> = vec![];\n \n     'outer: for attr in attrs {\n@@ -484,7 +484,7 @@ fn find_stability_generic<'a,\n                 diagnostic.span_err(item_sp, \"multiple deprecated attributes\");\n             }\n \n-            deprecated = Some((since.unwrap_or(intern_and_get_ident(\"bogus\")), reason));\n+            deprecated = Some((since, reason));\n         }\n     }\n \n@@ -493,7 +493,7 @@ fn find_stability_generic<'a,\n         match stab {\n             Some(ref mut s) => {\n                 let (since, reason) = deprecated.unwrap();\n-                s.deprecated_since = Some(since);\n+                s.deprecated_since = since;\n                 s.reason = reason;\n             }\n             None => {"}, {"sha": "db58f930a02b05be629192a7232ebe177af127e0", "filename": "src/test/compile-fail/lint-stability-fields.rs", "status": "modified", "additions": 30, "deletions": 5, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/6fed735b22ef66918cf78c3df9a7922df9ed7954/src%2Ftest%2Fcompile-fail%2Flint-stability-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fed735b22ef66918cf78c3df9a7922df9ed7954/src%2Ftest%2Fcompile-fail%2Flint-stability-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability-fields.rs?ref=6fed735b22ef66918cf78c3df9a7922df9ed7954", "patch": "@@ -116,14 +116,20 @@ mod cross_crate {\n             //~^ ERROR use of deprecated item\n             //~^^ ERROR use of unstable\n             override1: 2,\n-            override2: 3, //~ ERROR use of unstable\n+            //~^ ERROR use of deprecated item\n+            override2: 3,\n+            //~^ ERROR use of deprecated item\n+            //~^^ ERROR use of unstable\n         };\n \n         let _ = x.inherit;\n         //~^ ERROR use of deprecated item\n         //~^^ ERROR use of unstable\n         let _ = x.override1;\n-        let _ = x.override2; //~ ERROR use of unstable\n+        //~^ ERROR use of deprecated item\n+        let _ = x.override2;\n+        //~^ ERROR use of deprecated item\n+        //~^^ ERROR use of unstable\n \n         let Deprecated {\n             //~^ ERROR use of deprecated item\n@@ -132,7 +138,10 @@ mod cross_crate {\n             //~^ ERROR use of deprecated item\n             //~^^ ERROR use of unstable\n             override1: _,\n-            override2: _ //~ ERROR use of unstable\n+            //~^ ERROR use of deprecated item\n+            override2: _\n+            //~^ ERROR use of unstable\n+            //~^^ ERROR use of deprecated item\n         } = x;\n \n         let Deprecated\n@@ -149,7 +158,10 @@ mod cross_crate {\n         //~^ ERROR use of deprecated item\n         //~^^ ERROR use of unstable\n         let _ = x.1;\n-        let _ = x.2; //~ ERROR use of unstable\n+        //~^ ERROR use of deprecated item\n+        let _ = x.2;\n+        //~^ ERROR use of deprecated item\n+        //~^^ ERROR use of unstable\n \n         let Deprecated2\n         //~^ ERROR use of deprecated item\n@@ -158,7 +170,10 @@ mod cross_crate {\n              //~^ ERROR use of deprecated item\n              //~^^ ERROR use of unstable\n              _,\n-             _) //~ ERROR use of unstable\n+             //~^ ERROR use of deprecated item\n+             _)\n+             //~^ ERROR use of deprecated item\n+             //~^^ ERROR use of unstable\n             = x;\n         let Deprecated2\n         //~^ ERROR use of deprecated item\n@@ -300,20 +315,26 @@ mod this_crate {\n             inherit: 1,\n             //~^ ERROR use of deprecated item\n             override1: 2,\n+            //~^ ERROR use of deprecated item\n             override2: 3,\n+            //~^ ERROR use of deprecated item\n         };\n \n         let _ = x.inherit;\n         //~^ ERROR use of deprecated item\n         let _ = x.override1;\n+        //~^ ERROR use of deprecated item\n         let _ = x.override2;\n+        //~^ ERROR use of deprecated item\n \n         let Deprecated {\n             //~^ ERROR use of deprecated item\n             inherit: _,\n             //~^ ERROR use of deprecated item\n             override1: _,\n+            //~^ ERROR use of deprecated item\n             override2: _\n+            //~^ ERROR use of deprecated item\n         } = x;\n \n         let Deprecated\n@@ -327,14 +348,18 @@ mod this_crate {\n         let _ = x.0;\n         //~^ ERROR use of deprecated item\n         let _ = x.1;\n+        //~^ ERROR use of deprecated item\n         let _ = x.2;\n+        //~^ ERROR use of deprecated item\n \n         let Deprecated2\n         //~^ ERROR use of deprecated item\n             (_,\n              //~^ ERROR use of deprecated item\n              _,\n+             //~^ ERROR use of deprecated item\n              _)\n+            //~^ ERROR use of deprecated item\n             = x;\n         let Deprecated2\n         //~^ ERROR use of deprecated item"}, {"sha": "4cba12d7b352cc078658392f1753c5f74032e722", "filename": "src/test/compile-fail/lint-stability.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6fed735b22ef66918cf78c3df9a7922df9ed7954/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fed735b22ef66918cf78c3df9a7922df9ed7954/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability.rs?ref=6fed735b22ef66918cf78c3df9a7922df9ed7954", "patch": "@@ -128,8 +128,11 @@ mod cross_crate {\n         <Foo as Trait>::trait_stable_text(&foo);\n \n         let _ = DeprecatedStruct { i: 0 }; //~ ERROR use of deprecated item\n-        let _ = DeprecatedUnstableStruct { i: 0 }; //~ ERROR use of deprecated item\n-        //~^ ERROR use of unstable library feature\n+        let _ = DeprecatedUnstableStruct {\n+            //~^ ERROR use of deprecated item\n+            //~^^ ERROR use of unstable library feature\n+            i: 0 //~ ERROR use of deprecated item\n+        };\n         let _ = UnstableStruct { i: 0 }; //~ ERROR use of unstable library feature\n         let _ = StableStruct { i: 0 };\n \n@@ -417,7 +420,10 @@ mod this_crate {\n         <Foo>::trait_stable_text(&foo);\n         <Foo as Trait>::trait_stable_text(&foo);\n \n-        let _ = DeprecatedStruct { i: 0 }; //~ ERROR use of deprecated item\n+        let _ = DeprecatedStruct {\n+            //~^ ERROR use of deprecated item\n+            i: 0 //~ ERROR use of deprecated item\n+        };\n         let _ = UnstableStruct { i: 0 };\n         let _ = StableStruct { i: 0 };\n "}, {"sha": "f0597d57b797363b039a0020bc60a645c113f2c7", "filename": "src/test/compile-fail/stability-attribute-sanity.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6fed735b22ef66918cf78c3df9a7922df9ed7954/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fed735b22ef66918cf78c3df9a7922df9ed7954/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstability-attribute-sanity.rs?ref=6fed735b22ef66918cf78c3df9a7922df9ed7954", "patch": "@@ -88,6 +88,7 @@ fn multiple3() { } //~ ERROR multiple stability levels\n #[deprecated(since = \"b\")]\n #[deprecated(since = \"b\")]\n fn multiple4() { } //~ ERROR multiple deprecated attributes\n+//~^ ERROR Invalid stability or deprecation version found\n \n #[deprecated(since = \"a\")]\n fn deprecated_without_unstable_or_stable() { } //~ ERROR deprecated attribute must be paired"}]}