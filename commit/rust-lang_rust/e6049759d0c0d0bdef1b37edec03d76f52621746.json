{"sha": "e6049759d0c0d0bdef1b37edec03d76f52621746", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MDQ5NzU5ZDBjMGQwYmRlZjFiMzdlZGVjMDNkNzZmNTI2MjE3NDY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-08-30T13:06:56Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-09-02T10:29:12Z"}, "message": "Use in_incr_comp_dir_sess in cg_clif", "tree": {"sha": "8f665306d2c38d519fc1a2af1cc902739744306b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f665306d2c38d519fc1a2af1cc902739744306b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6049759d0c0d0bdef1b37edec03d76f52621746", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6049759d0c0d0bdef1b37edec03d76f52621746", "html_url": "https://github.com/rust-lang/rust/commit/e6049759d0c0d0bdef1b37edec03d76f52621746", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6049759d0c0d0bdef1b37edec03d76f52621746/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39e16da52916f3c22a7c08f165154ad3c7ca9be1", "url": "https://api.github.com/repos/rust-lang/rust/commits/39e16da52916f3c22a7c08f165154ad3c7ca9be1", "html_url": "https://github.com/rust-lang/rust/commit/39e16da52916f3c22a7c08f165154ad3c7ca9be1"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "3de706ed6d7afdb547d7171819dbc0a2a711b453", "filename": "src/driver/aot.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e6049759d0c0d0bdef1b37edec03d76f52621746/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6049759d0c0d0bdef1b37edec03d76f52621746/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=e6049759d0c0d0bdef1b37edec03d76f52621746", "patch": "@@ -68,14 +68,13 @@ fn reuse_workproduct_for_cgu(\n     cgu: &CodegenUnit<'_>,\n     work_products: &mut FxHashMap<WorkProductId, WorkProduct>,\n ) -> CompiledModule {\n-    let incr_comp_session_dir = tcx.sess.incr_comp_session_dir();\n     let mut object = None;\n     let work_product = cgu.work_product(tcx);\n     if let Some(saved_file) = &work_product.saved_file {\n         let obj_out =\n             tcx.output_filenames(()).temp_path(OutputType::Object, Some(&cgu.name().as_str()));\n         object = Some(obj_out.clone());\n-        let source_file = rustc_incremental::in_incr_comp_dir(&incr_comp_session_dir, &saved_file);\n+        let source_file = rustc_incremental::in_incr_comp_dir_sess(&tcx.sess, &saved_file);\n         if let Err(err) = rustc_fs_util::link_or_copy(&source_file, &obj_out) {\n             tcx.sess.err(&format!(\n                 \"unable to copy {} to {}: {}\","}]}