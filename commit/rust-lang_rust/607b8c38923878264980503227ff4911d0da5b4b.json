{"sha": "607b8c38923878264980503227ff4911d0da5b4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwN2I4YzM4OTIzODc4MjY0OTgwNTAzMjI3ZmY0OTExZDBkYTViNGI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-10-13T13:18:33Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-10-13T13:18:33Z"}, "message": "Comment on the purpose(s) of NodeId in VariantData", "tree": {"sha": "5b1fe005ca6d71c22530c2f5aa9be228d19bfcac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b1fe005ca6d71c22530c2f5aa9be228d19bfcac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/607b8c38923878264980503227ff4911d0da5b4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/607b8c38923878264980503227ff4911d0da5b4b", "html_url": "https://github.com/rust-lang/rust/commit/607b8c38923878264980503227ff4911d0da5b4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/607b8c38923878264980503227ff4911d0da5b4b/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46750d0409a9c3ba5214aa20ccb0c9bdbf09ea7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/46750d0409a9c3ba5214aa20ccb0c9bdbf09ea7e", "html_url": "https://github.com/rust-lang/rust/commit/46750d0409a9c3ba5214aa20ccb0c9bdbf09ea7e"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "e62eadaa4387dd962418d043c4ecbae4a58d3e73", "filename": "src/librustc_front/hir.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/607b8c38923878264980503227ff4911d0da5b4b/src%2Flibrustc_front%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/607b8c38923878264980503227ff4911d0da5b4b/src%2Flibrustc_front%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Fhir.rs?ref=607b8c38923878264980503227ff4911d0da5b4b", "patch": "@@ -1161,6 +1161,17 @@ impl StructFieldKind {\n     }\n }\n \n+/// Fields and Ids of enum variants and structs\n+///\n+/// For enum variants: `NodeId` represents both an Id of the variant itself (relevant for all\n+/// variant kinds) and an Id of the variant's constructor (not relevant for `Struct`-variants).\n+/// One shared Id can be successfully used for these two purposes.\n+/// Id of the whole enum lives in `Item`.\n+///\n+/// For structs: `NodeId` represents an Id of the structure's constructor, so it is not actually\n+/// used for `Struct`-structs (but still presents). Structures don't have an analogue of \"Id of\n+/// the variant itself\" from enum variants.\n+/// Id of the whole struct lives in `Item`.\n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\n pub enum VariantData {\n     Struct(Vec<StructField>, NodeId),"}, {"sha": "720c2ffc6d4830545fe5cbf59bc5e1dbcbe148f9", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/607b8c38923878264980503227ff4911d0da5b4b/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/607b8c38923878264980503227ff4911d0da5b4b/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=607b8c38923878264980503227ff4911d0da5b4b", "patch": "@@ -1741,6 +1741,17 @@ impl StructFieldKind {\n     }\n }\n \n+/// Fields and Ids of enum variants and structs\n+///\n+/// For enum variants: `NodeId` represents both an Id of the variant itself (relevant for all\n+/// variant kinds) and an Id of the variant's constructor (not relevant for `Struct`-variants).\n+/// One shared Id can be successfully used for these two purposes.\n+/// Id of the whole enum lives in `Item`.\n+///\n+/// For structs: `NodeId` represents an Id of the structure's constructor, so it is not actually\n+/// used for `Struct`-structs (but still presents). Structures don't have an analogue of \"Id of\n+/// the variant itself\" from enum variants.\n+/// Id of the whole struct lives in `Item`.\n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\n pub enum VariantData {\n     Struct(Vec<StructField>, NodeId),"}]}