{"sha": "e0e0c3787ca64d8c2540d703ca1e2f26607c5717", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwZTBjMzc4N2NhNjRkOGMyNTQwZDcwM2NhMWUyZjI2NjA3YzU3MTc=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-09-13T13:26:11Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-09-13T23:44:44Z"}, "message": "Replace SlashChecker with ensure_trailing_slash", "tree": {"sha": "1b20b56d7f317943cfb7531da4f0dfe4a77635cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b20b56d7f317943cfb7531da4f0dfe4a77635cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0e0c3787ca64d8c2540d703ca1e2f26607c5717", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0e0c3787ca64d8c2540d703ca1e2f26607c5717", "html_url": "https://github.com/rust-lang/rust/commit/e0e0c3787ca64d8c2540d703ca1e2f26607c5717", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0e0c3787ca64d8c2540d703ca1e2f26607c5717/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa4055cd6c92095c1996dd6eb31b08cced604e88", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa4055cd6c92095c1996dd6eb31b08cced604e88", "html_url": "https://github.com/rust-lang/rust/commit/aa4055cd6c92095c1996dd6eb31b08cced604e88"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "6414241727a722b2a577b9bb02a9a6fc8b08dede", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e0e0c3787ca64d8c2540d703ca1e2f26607c5717/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0e0c3787ca64d8c2540d703ca1e2f26607c5717/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=e0e0c3787ca64d8c2540d703ca1e2f26607c5717", "patch": "@@ -1,7 +1,7 @@\n use std::path::PathBuf;\n \n use crate::externalfiles::ExternalHtml;\n-use crate::html::render::SlashChecker;\n+use crate::html::render::ensure_trailing_slash;\n use crate::html::format::{Buffer, Print};\n \n #[derive(Clone)]\n@@ -180,7 +180,7 @@ pub fn render<T: Print, S: Print>(\n     css_class = page.css_class,\n     logo      = {\n         let p = format!(\"{}{}\", page.root_path, layout.krate);\n-        let p = SlashChecker(&p);\n+        let p = ensure_trailing_slash(&p);\n         if layout.logo.is_empty() {\n             format!(\"<a href='{path}index.html'>\\\n                      <div class='logo-container'>\\"}, {"sha": "9064dc8b44db4286d183cd61622d2e89f7dccb98", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e0e0c3787ca64d8c2540d703ca1e2f26607c5717/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0e0c3787ca64d8c2540d703ca1e2f26607c5717/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=e0e0c3787ca64d8c2540d703ca1e2f26607c5717", "patch": "@@ -33,7 +33,7 @@ use std::cmp::Ordering;\n use std::collections::{BTreeMap, VecDeque};\n use std::default::Default;\n use std::error;\n-use std::fmt::{self, Display, Formatter, Write as FmtWrite};\n+use std::fmt::{self, Formatter, Write as FmtWrite};\n use std::ffi::OsStr;\n use std::fs::{self, File};\n use std::io::prelude::*;\n@@ -82,16 +82,14 @@ mod tests;\n /// A pair of name and its optional document.\n pub type NameDoc = (String, Option<String>);\n \n-pub struct SlashChecker<'a>(pub &'a str);\n-\n-impl<'a> Display for SlashChecker<'a> {\n-    fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {\n-        if !self.0.ends_with(\"/\") && !self.0.is_empty() {\n-            write!(f, \"{}/\", self.0)\n+crate fn ensure_trailing_slash(v: &str) -> impl fmt::Display + '_ {\n+    crate::html::format::display_fn(move |f| {\n+        if !v.ends_with(\"/\") && !v.is_empty() {\n+            write!(f, \"{}/\", v)\n         } else {\n-            write!(f, \"{}\", self.0)\n+            write!(f, \"{}\", v)\n         }\n-    }\n+    })\n }\n \n #[derive(Debug)]\n@@ -106,7 +104,7 @@ impl error::Error for Error {\n     }\n }\n \n-impl Display for Error {\n+impl std::fmt::Display for Error {\n     fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {\n         let file = self.file.display().to_string();\n         if file.is_empty() {\n@@ -1162,7 +1160,7 @@ themePicker.onblur = handleThemeButtonsBlur;\n                                     .iter()\n                                     .map(|s| {\n                                         format!(\"<li><a href=\\\"{}index.html\\\">{}</li>\",\n-                                                SlashChecker(s), s)\n+                                                ensure_trailing_slash(s), s)\n                                     })\n                                     .collect::<String>());\n             let v = layout::render(&cx.shared.layout,\n@@ -2286,7 +2284,7 @@ fn print_item(cx: &Context, item: &clean::Item, buf: &mut Buffer) {\n \n fn item_path(ty: ItemType, name: &str) -> String {\n     match ty {\n-        ItemType::Module => format!(\"{}index.html\", SlashChecker(name)),\n+        ItemType::Module => format!(\"{}index.html\", ensure_trailing_slash(name)),\n         _ => format!(\"{}.{}.html\", ty, name),\n     }\n }"}]}