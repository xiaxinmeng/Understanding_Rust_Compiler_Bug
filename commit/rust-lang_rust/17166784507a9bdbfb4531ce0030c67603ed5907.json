{"sha": "17166784507a9bdbfb4531ce0030c67603ed5907", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3MTY2Nzg0NTA3YTliZGJmYjQ1MzFjZTAwMzBjNjc2MDNlZDU5MDc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-08T20:34:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-08T20:34:24Z"}, "message": "Rollup merge of #64280 - V1shvesh:master, r=Centril\n\nFactor out pluralisation into syntax::errors\n\nFixes #64238.", "tree": {"sha": "a7fa60e653a055a006cc047fcf4f044e16026481", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7fa60e653a055a006cc047fcf4f044e16026481"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17166784507a9bdbfb4531ce0030c67603ed5907", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJddWXQCRBK7hj4Ov3rIwAAdHIIAJpFXi6BUWbGKDUTE/mROlJu\nzQ0row0tUy33Vd6knfzCEpxrBAY8JUBe4hZKIJfdlqy21lasybOt9N49Jv1bO22J\nj/+VhhfUFJO+ykaxHd+6pRGvW/8ZJiO4dzSSQDyY7hng47vIYfsd0/INXIVnOtJc\nCH6B+KwXHMYqjCOiIJ/A50xCwF2KF8DUKqQv7uEMz6hhYDX3oFiON8kTqS+epprG\n7U3ksez+oZ/WUxn1jJ+Fbn/AcUE3cYxfa46flw87+Vg4BCd0ZnMlrpk8/FYIhMpX\n/8BvwK+3Sg5py22bN0YkojqZVTSWnJ6OPK7EO396WYT2e4OOO2kzgp7hyb/d/B4=\n=oPLa\n-----END PGP SIGNATURE-----\n", "payload": "tree a7fa60e653a055a006cc047fcf4f044e16026481\nparent 7cfad41e5f29a835b24aaf93da45c9ed83267a54\nparent 7457ef858026d1858e9a36c7fad7a95773d0632d\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1567974864 +0200\ncommitter GitHub <noreply@github.com> 1567974864 +0200\n\nRollup merge of #64280 - V1shvesh:master, r=Centril\n\nFactor out pluralisation into syntax::errors\n\nFixes #64238.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17166784507a9bdbfb4531ce0030c67603ed5907", "html_url": "https://github.com/rust-lang/rust/commit/17166784507a9bdbfb4531ce0030c67603ed5907", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17166784507a9bdbfb4531ce0030c67603ed5907/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cfad41e5f29a835b24aaf93da45c9ed83267a54", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cfad41e5f29a835b24aaf93da45c9ed83267a54", "html_url": "https://github.com/rust-lang/rust/commit/7cfad41e5f29a835b24aaf93da45c9ed83267a54"}, {"sha": "7457ef858026d1858e9a36c7fad7a95773d0632d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7457ef858026d1858e9a36c7fad7a95773d0632d", "html_url": "https://github.com/rust-lang/rust/commit/7457ef858026d1858e9a36c7fad7a95773d0632d"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "62910ec320494fd3053edb09211d9ea284ea3e37", "filename": "src/librustc/ty/error.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/17166784507a9bdbfb4531ce0030c67603ed5907/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17166784507a9bdbfb4531ce0030c67603ed5907/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=17166784507a9bdbfb4531ce0030c67603ed5907", "patch": "@@ -4,6 +4,7 @@ use std::borrow::Cow;\n use std::fmt;\n use rustc_target::spec::abi;\n use syntax::ast;\n+use syntax::errors::pluralise;\n use errors::{Applicability, DiagnosticBuilder};\n use syntax_pos::Span;\n \n@@ -82,12 +83,6 @@ impl<'tcx> fmt::Display for TypeError<'tcx> {\n             }\n         };\n \n-        macro_rules! pluralise {\n-            ($x:expr) => {\n-                if $x != 1 { \"s\" } else { \"\" }\n-            };\n-        }\n-\n         match *self {\n             CyclicTy(_) => write!(f, \"cyclic type of infinite size\"),\n             Mismatch => write!(f, \"types differ\"),"}, {"sha": "c1fba416d64334653cf2c59783fd7d9df7115761", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/17166784507a9bdbfb4531ce0030c67603ed5907/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17166784507a9bdbfb4531ce0030c67603ed5907/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=17166784507a9bdbfb4531ce0030c67603ed5907", "patch": "@@ -845,3 +845,10 @@ impl Level {\n         }\n     }\n }\n+\n+#[macro_export]\n+macro_rules! pluralise {\n+    ($x:expr) => {\n+        if $x != 1 { \"s\" } else { \"\" }\n+    };\n+}"}, {"sha": "e9ca0f3d978ca5675fadb33f00bd6d71ef250382", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/17166784507a9bdbfb4531ce0030c67603ed5907/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17166784507a9bdbfb4531ce0030c67603ed5907/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=17166784507a9bdbfb4531ce0030c67603ed5907", "patch": "@@ -23,6 +23,7 @@ use rustc_target::spec::abi;\n use crate::require_c_abi_if_c_variadic;\n use smallvec::SmallVec;\n use syntax::ast;\n+use syntax::errors::pluralise;\n use syntax::feature_gate::{GateIssue, emit_feature_err};\n use syntax::util::lev_distance::find_best_match_for_name;\n use syntax::symbol::sym;\n@@ -377,7 +378,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     quantifier,\n                     bound,\n                     kind,\n-                    if bound != 1 { \"s\" } else { \"\" },\n+                    pluralise!(bound),\n                 ))\n             };\n "}, {"sha": "f22499f547272291913ac6e7a27077861069b0d2", "filename": "src/librustc_typeck/check/compare_method.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/17166784507a9bdbfb4531ce0030c67603ed5907/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17166784507a9bdbfb4531ce0030c67603ed5907/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs?ref=17166784507a9bdbfb4531ce0030c67603ed5907", "patch": "@@ -10,6 +10,7 @@ use rustc::util::common::ErrorReported;\n use errors::{Applicability, DiagnosticId};\n \n use syntax_pos::Span;\n+use syntax::errors::pluralise;\n \n use super::{Inherited, FnCtxt, potentially_plural_count};\n \n@@ -648,9 +649,9 @@ fn compare_number_of_generics<'tcx>(\n                      declaration has {} {kind} parameter{}\",\n                     trait_.ident,\n                     impl_count,\n-                    if impl_count != 1 { \"s\" } else { \"\" },\n+                    pluralise!(impl_count),\n                     trait_count,\n-                    if trait_count != 1 { \"s\" } else { \"\" },\n+                    pluralise!(trait_count),\n                     kind = kind,\n                 ),\n                 DiagnosticId::Error(\"E0049\".into()),\n@@ -665,7 +666,7 @@ fn compare_number_of_generics<'tcx>(\n                         \"expected {} {} parameter{}\",\n                         trait_count,\n                         kind,\n-                        if trait_count != 1 { \"s\" } else { \"\" },\n+                        pluralise!(trait_count),\n                     ));\n                 }\n                 for span in spans {\n@@ -680,7 +681,7 @@ fn compare_number_of_generics<'tcx>(\n                     \"found {} {} parameter{}{}\",\n                     impl_count,\n                     kind,\n-                    if impl_count != 1 { \"s\" } else { \"\" },\n+                    pluralise!(impl_count),\n                     suffix.unwrap_or_else(|| String::new()),\n                 ));\n             }"}]}