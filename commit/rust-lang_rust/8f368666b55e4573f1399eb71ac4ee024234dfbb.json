{"sha": "8f368666b55e4573f1399eb71ac4ee024234dfbb", "node_id": "C_kwDOAAsO6NoAKDhmMzY4NjY2YjU1ZTQ1NzNmMTM5OWViNzFhYzRlZTAyNDIzNGRmYmI", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev+love@gmail.com", "date": "2022-12-03T03:51:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-03T03:51:29Z"}, "message": "Rollup merge of #105181 - bhbs:skip-note, r=estebank\n\nDon't add a note for implementing a trait if its inner type is erroneous\n\nFix #105138", "tree": {"sha": "499a0a3cfec1e157af85ec1c473903cc341dbf9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/499a0a3cfec1e157af85ec1c473903cc341dbf9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f368666b55e4573f1399eb71ac4ee024234dfbb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjisfBCRBK7hj4Ov3rIwAA3ksIABk2rgE0VMwHlVh9r8Hvcj+E\nemR/6pLip6PjcfyX/TepVQNiU5pN3TILZ2BfSiydga7/vSBmAT8dukpFIJtnc55D\nwd3dgs8OMwnia0boPp4fruVG2u9s7zIdk5/VjAxV+Mtn+q4mZHoIQ3R2advUfecU\nDujkY04u0HqdlHajEEbbAEMmu/WkHKz71dtNBEZch398RFnGoqXtad5dLc+ziMsX\nixjeTawQlNyHBr0ftwmTLEODOensAdkAR3cJUyPKBRA52VRtL1QVwVZbRXHTkMnq\nW9Uu0oz5MVkRkeHMC3gmkYRaiYIFpb5b1rHhHuMaUsask0/MS2pHvaHTk14Kxug=\n=23xO\n-----END PGP SIGNATURE-----\n", "payload": "tree 499a0a3cfec1e157af85ec1c473903cc341dbf9e\nparent 019795b162901ea50af357b04a2a5eab325f4bfb\nparent 715d4a89499f9788f88baf2ec399a62698cd10e6\nauthor Yuki Okushi <huyuumi.dev+love@gmail.com> 1670039489 +0900\ncommitter GitHub <noreply@github.com> 1670039489 +0900\n\nRollup merge of #105181 - bhbs:skip-note, r=estebank\n\nDon't add a note for implementing a trait if its inner type is erroneous\n\nFix #105138\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f368666b55e4573f1399eb71ac4ee024234dfbb", "html_url": "https://github.com/rust-lang/rust/commit/8f368666b55e4573f1399eb71ac4ee024234dfbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f368666b55e4573f1399eb71ac4ee024234dfbb/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "019795b162901ea50af357b04a2a5eab325f4bfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/019795b162901ea50af357b04a2a5eab325f4bfb", "html_url": "https://github.com/rust-lang/rust/commit/019795b162901ea50af357b04a2a5eab325f4bfb"}, {"sha": "715d4a89499f9788f88baf2ec399a62698cd10e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/715d4a89499f9788f88baf2ec399a62698cd10e6", "html_url": "https://github.com/rust-lang/rust/commit/715d4a89499f9788f88baf2ec399a62698cd10e6"}], "stats": {"total": 79, "additions": 64, "deletions": 15}, "files": [{"sha": "8835f2cc1b97a7737879b252f62a2dfaf7be2d91", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 20, "deletions": 15, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/8f368666b55e4573f1399eb71ac4ee024234dfbb/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f368666b55e4573f1399eb71ac4ee024234dfbb/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=8f368666b55e4573f1399eb71ac4ee024234dfbb", "patch": "@@ -371,23 +371,28 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n \n                     if !candidate_set.ambiguous && no_candidates_apply {\n                         let trait_ref = stack.obligation.predicate.skip_binder().trait_ref;\n-                        let self_ty = trait_ref.self_ty();\n-                        let (trait_desc, self_desc) = with_no_trimmed_paths!({\n-                            let trait_desc = trait_ref.print_only_trait_path().to_string();\n-                            let self_desc = if self_ty.has_concrete_skeleton() {\n-                                Some(self_ty.to_string())\n+                        if !trait_ref.references_error() {\n+                            let self_ty = trait_ref.self_ty();\n+                            let (trait_desc, self_desc) = with_no_trimmed_paths!({\n+                                let trait_desc = trait_ref.print_only_trait_path().to_string();\n+                                let self_desc = if self_ty.has_concrete_skeleton() {\n+                                    Some(self_ty.to_string())\n+                                } else {\n+                                    None\n+                                };\n+                                (trait_desc, self_desc)\n+                            });\n+                            let cause = if let Conflict::Upstream = conflict {\n+                                IntercrateAmbiguityCause::UpstreamCrateUpdate {\n+                                    trait_desc,\n+                                    self_desc,\n+                                }\n                             } else {\n-                                None\n+                                IntercrateAmbiguityCause::DownstreamCrate { trait_desc, self_desc }\n                             };\n-                            (trait_desc, self_desc)\n-                        });\n-                        let cause = if let Conflict::Upstream = conflict {\n-                            IntercrateAmbiguityCause::UpstreamCrateUpdate { trait_desc, self_desc }\n-                        } else {\n-                            IntercrateAmbiguityCause::DownstreamCrate { trait_desc, self_desc }\n-                        };\n-                        debug!(?cause, \"evaluate_stack: pushing cause\");\n-                        self.intercrate_ambiguity_causes.as_mut().unwrap().insert(cause);\n+                            debug!(?cause, \"evaluate_stack: pushing cause\");\n+                            self.intercrate_ambiguity_causes.as_mut().unwrap().insert(cause);\n+                        }\n                     }\n                 }\n             }"}, {"sha": "e5d0a1aaed049f442b39a6b186fe9ccf3e54db35", "filename": "src/test/ui/trait-bounds/impl-bound-with-references-error.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8f368666b55e4573f1399eb71ac4ee024234dfbb/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-bound-with-references-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f368666b55e4573f1399eb71ac4ee024234dfbb/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-bound-with-references-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-bound-with-references-error.rs?ref=8f368666b55e4573f1399eb71ac4ee024234dfbb", "patch": "@@ -0,0 +1,20 @@\n+// Regression test for #105138.\n+// This test ensures that the compiler does not add note\n+// for implementation of trait whose inner type is erroneous.\n+\n+pub enum LabelText {\n+    Plain,\n+}\n+\n+impl<T> From<T> for LabelText\n+//~^ ERROR conflicting implementations of trait `From<LabelText>` for type `LabelText` [E0119]\n+where\n+    T: Into<Cow<'static, str>>,\n+    //~^ ERROR cannot find type `Cow` in this scope [E0412]\n+{\n+    fn from(text: T) -> Self {\n+        LabelText::Plain(text.into())\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "95fd6bd504cdd1ab61109bc79a48ba1c23d20d58", "filename": "src/test/ui/trait-bounds/impl-bound-with-references-error.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8f368666b55e4573f1399eb71ac4ee024234dfbb/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-bound-with-references-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8f368666b55e4573f1399eb71ac4ee024234dfbb/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-bound-with-references-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-bounds%2Fimpl-bound-with-references-error.stderr?ref=8f368666b55e4573f1399eb71ac4ee024234dfbb", "patch": "@@ -0,0 +1,24 @@\n+error[E0412]: cannot find type `Cow` in this scope\n+  --> $DIR/impl-bound-with-references-error.rs:12:13\n+   |\n+LL |     T: Into<Cow<'static, str>>,\n+   |             ^^^ not found in this scope\n+   |\n+help: consider importing this enum\n+   |\n+LL | use std::borrow::Cow;\n+   |\n+\n+error[E0119]: conflicting implementations of trait `From<LabelText>` for type `LabelText`\n+  --> $DIR/impl-bound-with-references-error.rs:9:1\n+   |\n+LL | impl<T> From<T> for LabelText\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: conflicting implementation in crate `core`:\n+           - impl<T> From<T> for T;\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0119, E0412.\n+For more information about an error, try `rustc --explain E0119`."}]}