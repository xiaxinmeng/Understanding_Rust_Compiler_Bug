{"sha": "257dbb826d0000f7d56c71fb7d93b5de288a157e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1N2RiYjgyNmQwMDAwZjdkNTZjNzFmYjdkOTNiNWRlMjg4YTE1N2U=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-12T10:18:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-12T10:18:05Z"}, "message": "Rollup merge of #59880 - solson:transmute-float, r=alexcrichton\n\nRemove note about transmute for float bitpatterns.\n\nThis particular usecase has been safely abstracted in these `std` functions: [f32::to_bits](https://doc.rust-lang.org/std/primitive.f32.html#method.to_bits), [f32::from_bits](https://doc.rust-lang.org/std/primitive.f32.html#method.from_bits), [f64::to_bits](https://doc.rust-lang.org/std/primitive.f64.html#method.to_bits), [f64::from_bits](https://doc.rust-lang.org/std/primitive.f64.html#method.from_bits). So, I think we shouldn't recommend an unnecessary use of `unsafe` here anymore.", "tree": {"sha": "d4c591fdb739d03c8267cf52991a7978f67bf3d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4c591fdb739d03c8267cf52991a7978f67bf3d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/257dbb826d0000f7d56c71fb7d93b5de288a157e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcsGXeCRBK7hj4Ov3rIwAAdHIIAIn8w9jpgZGWYXGVa0jWYxtN\nhm8k7h6oVTuri7OZZ/Ph04Lall0MKQ7gduc4NE+jT7G+j6qXJMOkH1xT6uFMNAnr\nFjVac6CJ7iqSuWna6t1DG6h0msaX0rxQjWfLHpKtfwVr11pprYv5R5XlRYP2oGUy\nJQuxoLsUa2j1EJ9QVzqqK75T4Fg2tq8Sseu3wMb8sZeTeT49LlOd3RGmvDUZafMJ\nmlnWj8S9WxbqKw0gtOhS6TWYL/xbGQFg6IAqE12gWgrZZgLwhh29mT79lAB+pPVy\nY6Dfa4ItT6Jz9BxTdqptTv+6lgP//bKuuXqlQA2nCX77fJ4/7e0km2DHoE8Tddg=\n=VJwR\n-----END PGP SIGNATURE-----\n", "payload": "tree d4c591fdb739d03c8267cf52991a7978f67bf3d2\nparent ef90d940dc6169c1d505ec5d30d5ad0cab189ccc\nparent f54df449072895f258876adf9545fe3a0840492f\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1555064285 +0200\ncommitter GitHub <noreply@github.com> 1555064285 +0200\n\nRollup merge of #59880 - solson:transmute-float, r=alexcrichton\n\nRemove note about transmute for float bitpatterns.\n\nThis particular usecase has been safely abstracted in these `std` functions: [f32::to_bits](https://doc.rust-lang.org/std/primitive.f32.html#method.to_bits), [f32::from_bits](https://doc.rust-lang.org/std/primitive.f32.html#method.from_bits), [f64::to_bits](https://doc.rust-lang.org/std/primitive.f64.html#method.to_bits), [f64::from_bits](https://doc.rust-lang.org/std/primitive.f64.html#method.from_bits). So, I think we shouldn't recommend an unnecessary use of `unsafe` here anymore.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/257dbb826d0000f7d56c71fb7d93b5de288a157e", "html_url": "https://github.com/rust-lang/rust/commit/257dbb826d0000f7d56c71fb7d93b5de288a157e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/257dbb826d0000f7d56c71fb7d93b5de288a157e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef90d940dc6169c1d505ec5d30d5ad0cab189ccc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef90d940dc6169c1d505ec5d30d5ad0cab189ccc", "html_url": "https://github.com/rust-lang/rust/commit/ef90d940dc6169c1d505ec5d30d5ad0cab189ccc"}, {"sha": "f54df449072895f258876adf9545fe3a0840492f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f54df449072895f258876adf9545fe3a0840492f", "html_url": "https://github.com/rust-lang/rust/commit/f54df449072895f258876adf9545fe3a0840492f"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "05acd7bd011874d270ebfc8574a2dbb77178255f", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/257dbb826d0000f7d56c71fb7d93b5de288a157e/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/257dbb826d0000f7d56c71fb7d93b5de288a157e/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=257dbb826d0000f7d56c71fb7d93b5de288a157e", "patch": "@@ -737,16 +737,6 @@ extern \"rust-intrinsic\" {\n     ///\n     /// There are a few things that `transmute` is really useful for.\n     ///\n-    /// Getting the bitpattern of a floating point type (or, more generally,\n-    /// type punning, when `T` and `U` aren't pointers):\n-    ///\n-    /// ```\n-    /// let bitpattern = unsafe {\n-    ///     std::mem::transmute::<f32, u32>(1.0)\n-    /// };\n-    /// assert_eq!(bitpattern, 0x3F800000);\n-    /// ```\n-    ///\n     /// Turning a pointer into a function pointer. This is *not* portable to\n     /// machines where function pointers and data pointers have different sizes.\n     ///"}]}