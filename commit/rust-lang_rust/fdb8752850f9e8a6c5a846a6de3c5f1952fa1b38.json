{"sha": "fdb8752850f9e8a6c5a846a6de3c5f1952fa1b38", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYjg3NTI4NTBmOWU4YTZjNWE4NDZhNmRlM2M1ZjE5NTJmYTFiMzg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-04T07:55:30Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-04T10:31:53Z"}, "message": "cleanup shebang handling in the lexer", "tree": {"sha": "442db6f1b5958178c124d1ef12e444e3cbce8868", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/442db6f1b5958178c124d1ef12e444e3cbce8868"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdb8752850f9e8a6c5a846a6de3c5f1952fa1b38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdb8752850f9e8a6c5a846a6de3c5f1952fa1b38", "html_url": "https://github.com/rust-lang/rust/commit/fdb8752850f9e8a6c5a846a6de3c5f1952fa1b38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdb8752850f9e8a6c5a846a6de3c5f1952fa1b38/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "546cb21f580ae3d4e0bf42ccecfad4a34defebe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/546cb21f580ae3d4e0bf42ccecfad4a34defebe7", "html_url": "https://github.com/rust-lang/rust/commit/546cb21f580ae3d4e0bf42ccecfad4a34defebe7"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "02451e01b1d87d0b953df12532f0c0c95c32fe95", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fdb8752850f9e8a6c5a846a6de3c5f1952fa1b38/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdb8752850f9e8a6c5a846a6de3c5f1952fa1b38/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=fdb8752850f9e8a6c5a846a6de3c5f1952fa1b38", "patch": "@@ -1,10 +1,9 @@\n use crate::ast::{self, Ident};\n-use crate::source_map::{SourceMap, FilePathMapping};\n use crate::parse::{token, ParseSess};\n use crate::symbol::Symbol;\n \n use errors::{Applicability, FatalError, Diagnostic, DiagnosticBuilder};\n-use syntax_pos::{BytePos, CharPos, Pos, Span, NO_EXPANSION};\n+use syntax_pos::{BytePos, Pos, Span, NO_EXPANSION};\n use core::unicode::property::Pattern_White_Space;\n \n use std::borrow::Cow;\n@@ -667,14 +666,9 @@ impl<'a> StringReader<'a> {\n                     return None;\n                 }\n \n-                // I guess this is the only way to figure out if\n-                // we're at the beginning of the file...\n-                let smap = SourceMap::new(FilePathMapping::empty());\n-                smap.files.borrow_mut().source_files.push(self.source_file.clone());\n-                let loc = smap.lookup_char_pos_adj(self.pos);\n-                debug!(\"Skipping a shebang\");\n-                if loc.line == 1 && loc.col == CharPos(0) {\n-                    // FIXME: Add shebang \"token\", return it\n+                let is_beginning_of_file = self.pos == self.source_file.start_pos;\n+                if is_beginning_of_file {\n+                    debug!(\"Skipping a shebang\");\n                     let start = self.pos;\n                     while !self.ch_is('\\n') && !self.is_eof() {\n                         self.bump();\n@@ -1911,7 +1905,7 @@ mod tests {\n \n     use crate::ast::{Ident, CrateConfig};\n     use crate::symbol::Symbol;\n-    use crate::source_map::SourceMap;\n+    use crate::source_map::{SourceMap, FilePathMapping};\n     use crate::feature_gate::UnstableFeatures;\n     use crate::parse::token;\n     use crate::diagnostics::plugin::ErrorMap;"}]}