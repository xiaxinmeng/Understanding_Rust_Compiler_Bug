{"sha": "8433e2a66fad920e1312c02dc4395ceed98a2705", "node_id": "C_kwDOAAsO6NoAKDg0MzNlMmE2NmZhZDkyMGUxMzEyYzAyZGM0Mzk1Y2VlZDk4YTI3MDU", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2022-07-08T15:09:32Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2022-08-12T08:53:08Z"}, "message": "[debuginfo] Remove the notion of a 'fallback variant' from the CPP-like enum debuginfo encoding.", "tree": {"sha": "fb4464b442675098c90b5196faef3b965ab941a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb4464b442675098c90b5196faef3b965ab941a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8433e2a66fad920e1312c02dc4395ceed98a2705", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8433e2a66fad920e1312c02dc4395ceed98a2705", "html_url": "https://github.com/rust-lang/rust/commit/8433e2a66fad920e1312c02dc4395ceed98a2705", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8433e2a66fad920e1312c02dc4395ceed98a2705/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfb2c89e5e409f7979131dd73ea7ec3518f2b5d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfb2c89e5e409f7979131dd73ea7ec3518f2b5d9", "html_url": "https://github.com/rust-lang/rust/commit/dfb2c89e5e409f7979131dd73ea7ec3518f2b5d9"}], "stats": {"total": 164, "additions": 135, "deletions": 29}, "files": [{"sha": "c88dfed7e47efdb4b5c0819002eebda6cc295e30", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/metadata/enums/cpp_like.rs", "status": "modified", "additions": 69, "deletions": 19, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/8433e2a66fad920e1312c02dc4395ceed98a2705/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata%2Fenums%2Fcpp_like.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8433e2a66fad920e1312c02dc4395ceed98a2705/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata%2Fenums%2Fcpp_like.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata%2Fenums%2Fcpp_like.rs?ref=8433e2a66fad920e1312c02dc4395ceed98a2705", "patch": "@@ -105,14 +105,6 @@ const SINGLE_VARIANT_VIRTUAL_DISR: u64 = 0;\n /// that case. Both `DISCR_BEGIN` and `DISCR_END` are inclusive bounds.\n /// Note that these ranges can wrap around, so that `DISCR_END < DISCR_BEGIN`.\n ///\n-/// The field in the top-level union that corresponds to the dataful variant\n-/// is called `variant_fallback` instead of `variant<index>`. This is mainly\n-/// an optimization that enables a shorter NatVis definition. That way we\n-/// only need to specify a `tag == variantX.DISCR_EXACT` entry for the indexed\n-/// variants. Otherwise we'd need to have that and then an additional entry\n-/// checking `in_range(variantX.DISCR_BEGIN, variantX.DISCR_END)` for each\n-/// index.\n-///\n /// Single-variant enums don't actually have a tag field. In this case we\n /// emit a static tag field (that always has the value 0) so we can use the\n /// same representation (and NatVis).\n@@ -123,6 +115,72 @@ const SINGLE_VARIANT_VIRTUAL_DISR: u64 = 0;\n /// Instead of the `tag` field, we generate two fields `tag128_lo` and `tag128_hi`,\n /// Instead of `DISCR_EXACT`, we generate `DISCR128_EXACT_LO` and `DISCR128_EXACT_HI`,\n /// and so on.\n+///\n+///\n+/// The following pseudocode shows how to decode an enum value in a debugger:\n+///\n+/// ```ignore\n+///\n+/// fn find_active_variant(enum_value) -> (VariantName, VariantValue) {\n+///     let is_128_bit = enum_value.has_field(\"tag128_lo\");\n+///\n+///     if !is_128_bit {\n+///         // Note: `tag` can be a static field for enums with only one\n+///         //       inhabited variant.\n+///         let tag = enum_value.field(\"tag\").value;\n+///\n+///         // For each variant, check if it is a match. Only one of them will match,\n+///         // so if we find it we can return it immediately.\n+///         for variant_field in enum_value.fields().filter(|f| f.name.starts_with(\"variant\")) {\n+///             if variant_field.has_field(\"DISCR_EXACT\") {\n+///                 // This variant corresponds to a single tag value\n+///                 if variant_field.field(\"DISCR_EXACT\").value == tag {\n+///                     return (variant_field.field(\"NAME\"), variant_field.value);\n+///                 }\n+///             } else {\n+///                 // This is a range variant\n+///                 let begin = variant_field.field(\"DISCR_BEGIN\");\n+///                 let end = variant_field.field(\"DISCR_END\");\n+///\n+///                 if tag >= begin && tag <= end {\n+///                     return (variant_field.field(\"NAME\"), variant_field.value);\n+///                 }\n+///             }\n+///         }\n+///     } else {\n+///         // Basically the same as with smaller tags, we just have to\n+///         // stitch the values together.\n+///         let tag: u128 = (enum_value.field(\"tag128_lo\").value as u128) |\n+///                         (enum_value.field(\"tag128_hi\").value as u128 << 64);\n+///\n+///         for variant_field in enum_value.fields().filter(|f| f.name.starts_with(\"variant\")) {\n+///             if variant_field.has_field(\"DISCR128_EXACT_LO\") {\n+///                 let discr_exact = (variant_field.field(\"DISCR128_EXACT_LO\" as u128) |\n+///                                   (variant_field.field(\"DISCR128_EXACT_HI\") as u128 << 64);\n+///\n+///                 // This variant corresponds to a single tag value\n+///                 if discr_exact.value == tag {\n+///                     return (variant_field.field(\"NAME\"), variant_field.value);\n+///                 }\n+///             } else {\n+///                 // This is a range variant\n+///                 let begin = (variant_field.field(\"DISCR128_BEGIN_LO\").value as u128) |\n+///                             (variant_field.field(\"DISCR128_BEGIN_HI\").value as u128 << 64);\n+///                 let end = (variant_field.field(\"DISCR128_END_LO\").value as u128) |\n+///                           (variant_field.field(\"DISCR128_END_HI\").value as u128 << 64);\n+///\n+///                 if tag >= begin && tag <= end {\n+///                     return (variant_field.field(\"NAME\"), variant_field.value);\n+///                 }\n+///             }\n+///         }\n+///     }\n+///\n+///     // We should have found an active variant at this point.\n+///     unreachable!();\n+/// }\n+///\n+/// ```\n pub(super) fn build_enum_type_di_node<'ll, 'tcx>(\n     cx: &CodegenCx<'ll, 'tcx>,\n     unique_type_id: UniqueTypeId<'tcx>,\n@@ -290,7 +348,7 @@ fn build_single_variant_union_fields<'ll, 'tcx>(\n         build_field_di_node(\n             cx,\n             enum_type_di_node,\n-            &variant_union_field_name(variant_index, None),\n+            &variant_union_field_name(variant_index),\n             // NOTE: We use the size and align of the entire type, not from variant_layout\n             //       since the later is sometimes smaller (if it has fewer fields).\n             size_and_align_of(enum_type_and_layout),\n@@ -691,8 +749,7 @@ fn build_union_fields_for_direct_tag_enum_or_generator<'ll, 'tcx>(\n             .source_info\n             .unwrap_or_else(|| (unknown_file_metadata(cx), UNKNOWN_LINE_NUMBER));\n \n-        let field_name =\n-            variant_union_field_name(variant_member_info.variant_index, dataful_variant_index);\n+        let field_name = variant_union_field_name(variant_member_info.variant_index);\n         let (size, align) = size_and_align_of(enum_type_and_layout);\n \n         let variant_struct_type_wrapper = build_variant_struct_wrapper_type_di_node(\n@@ -795,10 +852,7 @@ struct VariantFieldInfo<'ll> {\n     discr: DiscrResult,\n }\n \n-fn variant_union_field_name(\n-    variant_index: VariantIdx,\n-    dataful_variant_index: Option<VariantIdx>,\n-) -> Cow<'static, str> {\n+fn variant_union_field_name(variant_index: VariantIdx) -> Cow<'static, str> {\n     const PRE_ALLOCATED: [&str; 16] = [\n         \"variant0\",\n         \"variant1\",\n@@ -818,10 +872,6 @@ fn variant_union_field_name(\n         \"variant15\",\n     ];\n \n-    if Some(variant_index) == dataful_variant_index {\n-        return Cow::from(\"variant_fallback\");\n-    }\n-\n     PRE_ALLOCATED\n         .get(variant_index.as_usize())\n         .map(|&s| Cow::from(s))"}, {"sha": "277e57aaf6fc5ea4cd93efe9e1cdddf8a37f19f4", "filename": "src/etc/natvis/intrinsic.natvis", "status": "modified", "additions": 66, "deletions": 10, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/8433e2a66fad920e1312c02dc4395ceed98a2705/src%2Fetc%2Fnatvis%2Fintrinsic.natvis", "raw_url": "https://github.com/rust-lang/rust/raw/8433e2a66fad920e1312c02dc4395ceed98a2705/src%2Fetc%2Fnatvis%2Fintrinsic.natvis", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fnatvis%2Fintrinsic.natvis?ref=8433e2a66fad920e1312c02dc4395ceed98a2705", "patch": "@@ -157,7 +157,7 @@\n   <Type Name=\"enum2$&lt;*&gt;\">\n     <!-- NOTE: That tag ranges can wrap around, in which case `end` is less than `begin` and we\n                have to do a different check -->\n-    <Intrinsic Name=\"in_range\" Expression=\"(begin &lt; end) ? ((x &gt;= begin) &amp;&amp; (x &lt;= end)) : ((x &gt;= begin) || (x &lt;= end))\">\n+    <Intrinsic Name=\"in_range\" Expression=\"(begin &lt;= end) ? ((x &gt;= begin) &amp;&amp; (x &lt;= end)) : ((x &gt;= begin) || (x &lt;= end))\">\n       <Parameter Name=\"x\" Type=\"unsigned __int64\" />\n       <Parameter Name=\"begin\" Type=\"unsigned __int64\" />\n       <Parameter Name=\"end\" Type=\"unsigned __int64\" />\n@@ -186,7 +186,7 @@\n \n     <!-- NOTE: That tag ranges can wrap around, in which case `end` is less than `begin` and we\n                have to do a different check -->\n-    <Intrinsic Name=\"in_range128\" Expression=\"(lt128(begin_hi, begin_lo, end_hi, end_lo)) ?\n+    <Intrinsic Name=\"in_range128\" Expression=\"(lt_or_eq128(begin_hi, begin_lo, end_hi, end_lo)) ?\n                                               (lt_or_eq128(begin_hi, begin_lo, x_hi, x_lo) &amp;&amp; lt_or_eq128(x_hi, x_lo, end_hi, end_lo)) :\n                                               (lt_or_eq128(begin_hi, begin_lo, x_hi, x_lo) || lt_or_eq128(x_hi, x_lo, end_hi, end_lo))\">\n       <Parameter Name=\"x_hi\" Type=\"unsigned __int64\" />\n@@ -214,7 +214,22 @@\n     <DisplayString Condition=\"tag == variant14.DISCR_EXACT\" Optional=\"true\">{variant14.NAME,en}</DisplayString>\n     <DisplayString Condition=\"tag == variant15.DISCR_EXACT\" Optional=\"true\">{variant15.NAME,en}</DisplayString>\n \n-    <DisplayString Condition=\"in_range(tag, variant_fallback.DISCR_BEGIN, variant_fallback.DISCR_END)\" Optional=\"true\">{variant_fallback.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant0.DISCR_BEGIN, variant0.DISCR_END)\" Optional=\"true\">{variant0.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant1.DISCR_BEGIN, variant1.DISCR_END)\" Optional=\"true\">{variant1.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant2.DISCR_BEGIN, variant2.DISCR_END)\" Optional=\"true\">{variant2.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant3.DISCR_BEGIN, variant3.DISCR_END)\" Optional=\"true\">{variant3.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant4.DISCR_BEGIN, variant4.DISCR_END)\" Optional=\"true\">{variant4.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant5.DISCR_BEGIN, variant5.DISCR_END)\" Optional=\"true\">{variant5.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant6.DISCR_BEGIN, variant6.DISCR_END)\" Optional=\"true\">{variant6.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant7.DISCR_BEGIN, variant7.DISCR_END)\" Optional=\"true\">{variant7.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant8.DISCR_BEGIN, variant8.DISCR_END)\" Optional=\"true\">{variant8.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant9.DISCR_BEGIN, variant9.DISCR_END)\" Optional=\"true\">{variant9.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant10.DISCR_BEGIN, variant10.DISCR_END)\" Optional=\"true\">{variant10.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant11.DISCR_BEGIN, variant11.DISCR_END)\" Optional=\"true\">{variant11.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant12.DISCR_BEGIN, variant12.DISCR_END)\" Optional=\"true\">{variant12.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant13.DISCR_BEGIN, variant13.DISCR_END)\" Optional=\"true\">{variant13.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant14.DISCR_BEGIN, variant14.DISCR_END)\" Optional=\"true\">{variant14.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range(tag, variant15.DISCR_BEGIN, variant15.DISCR_END)\" Optional=\"true\">{variant15.NAME,en}</DisplayString>\n \n     <DisplayString Condition=\"eq128(tag128_hi, tag128_lo, variant0.DISCR128_EXACT_HI, variant0.DISCR128_EXACT_LO)\" Optional=\"true\">{variant0.NAME,en}</DisplayString>\n     <DisplayString Condition=\"eq128(tag128_hi, tag128_lo, variant1.DISCR128_EXACT_HI, variant1.DISCR128_EXACT_LO)\" Optional=\"true\">{variant1.NAME,en}</DisplayString>\n@@ -233,9 +248,22 @@\n     <DisplayString Condition=\"eq128(tag128_hi, tag128_lo, variant14.DISCR128_EXACT_HI, variant14.DISCR128_EXACT_LO)\" Optional=\"true\">{variant14.NAME,en}</DisplayString>\n     <DisplayString Condition=\"eq128(tag128_hi, tag128_lo, variant15.DISCR128_EXACT_HI, variant15.DISCR128_EXACT_LO)\" Optional=\"true\">{variant15.NAME,en}</DisplayString>\n \n-    <DisplayString\n-      Condition=\"in_range128(tag128_hi, tag128_lo, variant_fallback.DISCR128_BEGIN_HI, variant_fallback.DISCR128_BEGIN_LO, variant_fallback.DISCR128_END_HI, variant_fallback.DISCR128_END_LO)\"\n-      Optional=\"true\">{variant_fallback.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant0.DISCR128_BEGIN_HI, variant0.DISCR128_BEGIN_LO, variant0.DISCR128_END_HI, variant0.DISCR128_END_LO)\" Optional=\"true\">{variant0.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant1.DISCR128_BEGIN_HI, variant1.DISCR128_BEGIN_LO, variant1.DISCR128_END_HI, variant1.DISCR128_END_LO)\" Optional=\"true\">{variant1.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant2.DISCR128_BEGIN_HI, variant2.DISCR128_BEGIN_LO, variant2.DISCR128_END_HI, variant2.DISCR128_END_LO)\" Optional=\"true\">{variant2.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant3.DISCR128_BEGIN_HI, variant3.DISCR128_BEGIN_LO, variant3.DISCR128_END_HI, variant3.DISCR128_END_LO)\" Optional=\"true\">{variant3.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant4.DISCR128_BEGIN_HI, variant4.DISCR128_BEGIN_LO, variant4.DISCR128_END_HI, variant4.DISCR128_END_LO)\" Optional=\"true\">{variant4.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant5.DISCR128_BEGIN_HI, variant5.DISCR128_BEGIN_LO, variant5.DISCR128_END_HI, variant5.DISCR128_END_LO)\" Optional=\"true\">{variant5.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant6.DISCR128_BEGIN_HI, variant6.DISCR128_BEGIN_LO, variant6.DISCR128_END_HI, variant6.DISCR128_END_LO)\" Optional=\"true\">{variant6.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant7.DISCR128_BEGIN_HI, variant7.DISCR128_BEGIN_LO, variant7.DISCR128_END_HI, variant7.DISCR128_END_LO)\" Optional=\"true\">{variant7.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant8.DISCR128_BEGIN_HI, variant8.DISCR128_BEGIN_LO, variant8.DISCR128_END_HI, variant8.DISCR128_END_LO)\" Optional=\"true\">{variant8.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant9.DISCR128_BEGIN_HI, variant9.DISCR128_BEGIN_LO, variant9.DISCR128_END_HI, variant9.DISCR128_END_LO)\" Optional=\"true\">{variant9.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant10.DISCR128_BEGIN_HI, variant10.DISCR128_BEGIN_LO, variant10.DISCR128_END_HI, variant10.DISCR128_END_LO)\" Optional=\"true\">{variant10.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant11.DISCR128_BEGIN_HI, variant11.DISCR128_BEGIN_LO, variant11.DISCR128_END_HI, variant11.DISCR128_END_LO)\" Optional=\"true\">{variant11.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant12.DISCR128_BEGIN_HI, variant12.DISCR128_BEGIN_LO, variant12.DISCR128_END_HI, variant12.DISCR128_END_LO)\" Optional=\"true\">{variant12.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant13.DISCR128_BEGIN_HI, variant13.DISCR128_BEGIN_LO, variant13.DISCR128_END_HI, variant13.DISCR128_END_LO)\" Optional=\"true\">{variant13.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant14.DISCR128_BEGIN_HI, variant14.DISCR128_BEGIN_LO, variant14.DISCR128_END_HI, variant14.DISCR128_END_LO)\" Optional=\"true\">{variant14.NAME,en}</DisplayString>\n+    <DisplayString Condition=\"in_range128(tag128_hi, tag128_lo, variant15.DISCR128_BEGIN_HI, variant15.DISCR128_BEGIN_LO, variant15.DISCR128_END_HI, variant15.DISCR128_END_LO)\" Optional=\"true\">{variant15.NAME,en}</DisplayString>\n \n     <Expand HideRawView=\"true\">\n       <ExpandedItem Condition=\"tag == variant0.DISCR_EXACT\" Optional=\"true\">variant0.value</ExpandedItem>\n@@ -255,7 +283,22 @@\n       <ExpandedItem Condition=\"tag == variant14.DISCR_EXACT\" Optional=\"true\">variant14.value</ExpandedItem>\n       <ExpandedItem Condition=\"tag == variant15.DISCR_EXACT\" Optional=\"true\">variant15.value</ExpandedItem>\n \n-      <ExpandedItem Condition=\"in_range(tag, variant_fallback.DISCR_BEGIN, variant_fallback.DISCR_END)\" Optional=\"true\">variant_fallback.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant0.DISCR_BEGIN, variant0.DISCR_END)\" Optional=\"true\">variant0.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant1.DISCR_BEGIN, variant1.DISCR_END)\" Optional=\"true\">variant1.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant2.DISCR_BEGIN, variant2.DISCR_END)\" Optional=\"true\">variant2.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant3.DISCR_BEGIN, variant3.DISCR_END)\" Optional=\"true\">variant3.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant4.DISCR_BEGIN, variant4.DISCR_END)\" Optional=\"true\">variant4.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant5.DISCR_BEGIN, variant5.DISCR_END)\" Optional=\"true\">variant5.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant6.DISCR_BEGIN, variant6.DISCR_END)\" Optional=\"true\">variant6.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant7.DISCR_BEGIN, variant7.DISCR_END)\" Optional=\"true\">variant7.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant8.DISCR_BEGIN, variant8.DISCR_END)\" Optional=\"true\">variant8.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant9.DISCR_BEGIN, variant9.DISCR_END)\" Optional=\"true\">variant9.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant10.DISCR_BEGIN, variant10.DISCR_END)\" Optional=\"true\">variant10.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant11.DISCR_BEGIN, variant11.DISCR_END)\" Optional=\"true\">variant11.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant12.DISCR_BEGIN, variant12.DISCR_END)\" Optional=\"true\">variant12.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant13.DISCR_BEGIN, variant13.DISCR_END)\" Optional=\"true\">variant13.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant14.DISCR_BEGIN, variant14.DISCR_END)\" Optional=\"true\">variant14.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range(tag, variant15.DISCR_BEGIN, variant15.DISCR_END)\" Optional=\"true\">variant15.value</ExpandedItem>\n \n       <ExpandedItem Condition=\"eq128(tag128_hi, tag128_lo, variant0.DISCR128_EXACT_HI, variant0.DISCR128_EXACT_LO)\" Optional=\"true\">variant0.value</ExpandedItem>\n       <ExpandedItem Condition=\"eq128(tag128_hi, tag128_lo, variant1.DISCR128_EXACT_HI, variant1.DISCR128_EXACT_LO)\" Optional=\"true\">variant1.value</ExpandedItem>\n@@ -274,9 +317,22 @@\n       <ExpandedItem Condition=\"eq128(tag128_hi, tag128_lo, variant14.DISCR128_EXACT_HI, variant14.DISCR128_EXACT_LO)\" Optional=\"true\">variant14.value</ExpandedItem>\n       <ExpandedItem Condition=\"eq128(tag128_hi, tag128_lo, variant15.DISCR128_EXACT_HI, variant15.DISCR128_EXACT_LO)\" Optional=\"true\">variant15.value</ExpandedItem>\n \n-      <ExpandedItem\n-        Condition=\"in_range128(tag128_hi, tag128_lo, variant_fallback.DISCR128_BEGIN_HI, variant_fallback.DISCR128_BEGIN_LO, variant_fallback.DISCR128_END_HI, variant_fallback.DISCR128_END_LO)\"\n-        Optional=\"true\">variant_fallback.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant0.DISCR128_BEGIN_HI, variant0.DISCR128_BEGIN_LO, variant0.DISCR128_END_HI, variant0.DISCR128_END_LO)\" Optional=\"true\">variant0.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant1.DISCR128_BEGIN_HI, variant1.DISCR128_BEGIN_LO, variant1.DISCR128_END_HI, variant1.DISCR128_END_LO)\" Optional=\"true\">variant1.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant2.DISCR128_BEGIN_HI, variant2.DISCR128_BEGIN_LO, variant2.DISCR128_END_HI, variant2.DISCR128_END_LO)\" Optional=\"true\">variant2.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant3.DISCR128_BEGIN_HI, variant3.DISCR128_BEGIN_LO, variant3.DISCR128_END_HI, variant3.DISCR128_END_LO)\" Optional=\"true\">variant3.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant4.DISCR128_BEGIN_HI, variant4.DISCR128_BEGIN_LO, variant4.DISCR128_END_HI, variant4.DISCR128_END_LO)\" Optional=\"true\">variant4.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant5.DISCR128_BEGIN_HI, variant5.DISCR128_BEGIN_LO, variant5.DISCR128_END_HI, variant5.DISCR128_END_LO)\" Optional=\"true\">variant5.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant6.DISCR128_BEGIN_HI, variant6.DISCR128_BEGIN_LO, variant6.DISCR128_END_HI, variant6.DISCR128_END_LO)\" Optional=\"true\">variant6.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant7.DISCR128_BEGIN_HI, variant7.DISCR128_BEGIN_LO, variant7.DISCR128_END_HI, variant7.DISCR128_END_LO)\" Optional=\"true\">variant7.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant8.DISCR128_BEGIN_HI, variant8.DISCR128_BEGIN_LO, variant8.DISCR128_END_HI, variant8.DISCR128_END_LO)\" Optional=\"true\">variant8.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant9.DISCR128_BEGIN_HI, variant9.DISCR128_BEGIN_LO, variant9.DISCR128_END_HI, variant9.DISCR128_END_LO)\" Optional=\"true\">variant9.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant10.DISCR128_BEGIN_HI, variant10.DISCR128_BEGIN_LO, variant10.DISCR128_END_HI, variant10.DISCR128_END_LO)\" Optional=\"true\">variant10.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant11.DISCR128_BEGIN_HI, variant11.DISCR128_BEGIN_LO, variant11.DISCR128_END_HI, variant11.DISCR128_END_LO)\" Optional=\"true\">variant11.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant12.DISCR128_BEGIN_HI, variant12.DISCR128_BEGIN_LO, variant12.DISCR128_END_HI, variant12.DISCR128_END_LO)\" Optional=\"true\">variant12.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant13.DISCR128_BEGIN_HI, variant13.DISCR128_BEGIN_LO, variant13.DISCR128_END_HI, variant13.DISCR128_END_LO)\" Optional=\"true\">variant13.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant14.DISCR128_BEGIN_HI, variant14.DISCR128_BEGIN_LO, variant14.DISCR128_END_HI, variant14.DISCR128_END_LO)\" Optional=\"true\">variant14.value</ExpandedItem>\n+      <ExpandedItem Condition=\"in_range128(tag128_hi, tag128_lo, variant15.DISCR128_BEGIN_HI, variant15.DISCR128_BEGIN_LO, variant15.DISCR128_END_HI, variant15.DISCR128_END_LO)\" Optional=\"true\">variant15.value</ExpandedItem>\n     </Expand>\n   </Type>\n </AutoVisualizer>"}]}