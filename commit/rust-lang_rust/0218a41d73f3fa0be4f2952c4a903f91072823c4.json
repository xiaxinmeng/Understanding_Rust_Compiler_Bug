{"sha": "0218a41d73f3fa0be4f2952c4a903f91072823c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMThhNDFkNzNmM2ZhMGJlNGYyOTUyYzRhOTAzZjkxMDcyODIzYzQ=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-01-16T04:58:51Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-01-16T21:17:48Z"}, "message": "Add a more lightweight method for rewriting comments when we are not normalising\n\nFixes #652", "tree": {"sha": "b26c67f6dab54c255896271304c2c68bc48590d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b26c67f6dab54c255896271304c2c68bc48590d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0218a41d73f3fa0be4f2952c4a903f91072823c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0218a41d73f3fa0be4f2952c4a903f91072823c4", "html_url": "https://github.com/rust-lang/rust/commit/0218a41d73f3fa0be4f2952c4a903f91072823c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0218a41d73f3fa0be4f2952c4a903f91072823c4/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9484853711132c56528afb91221fe04af529e35", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9484853711132c56528afb91221fe04af529e35", "html_url": "https://github.com/rust-lang/rust/commit/d9484853711132c56528afb91221fe04af529e35"}], "stats": {"total": 75, "additions": 56, "deletions": 19}, "files": [{"sha": "8eaf2b2fb4fd9a83766746913283a230e412d7f8", "filename": "src/comment.rs", "status": "modified", "additions": 45, "deletions": 19, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/0218a41d73f3fa0be4f2952c4a903f91072823c4/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0218a41d73f3fa0be4f2952c4a903f91072823c4/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=0218a41d73f3fa0be4f2952c4a903f91072823c4", "patch": "@@ -38,9 +38,21 @@ pub fn rewrite_comment(orig: &str,\n                        offset: Indent,\n                        config: &Config)\n                        -> Option<String> {\n-    let s = orig.trim();\n+    // If there are lines without a starting sigil, we won't format them correctly\n+    // so in that case we won't even re-align (if !config.normalize_comments) and\n+    // we should stop now.\n+    let num_bare_lines = orig.lines()\n+        .map(|line| line.trim())\n+        .filter(|l| !(l.starts_with('*') || l.starts_with(\"//\") || l.starts_with(\"/*\")))\n+        .count();\n+    if num_bare_lines > 0 && !config.normalize_comments {\n+        return Some(orig.to_owned());\n+    }\n+\n+    if !config.normalize_comments && !config.wrap_comments {\n+        return light_rewrite_comment(orig, offset, config);\n+    }\n \n-    // Edge case: block comments. Let's not trim their lines (for now).\n     let (opener, closer, line_start) =\n         if block_style {\n             (\"/* \", \" */\", \" * \")\n@@ -74,7 +86,7 @@ pub fn rewrite_comment(orig: &str,\n         };\n \n     let max_chars = width.checked_sub(closer.len() + opener.len()).unwrap_or(1);\n-\n+    let indent_str = offset.to_string(config);\n     let fmt = StringFormat {\n         opener: \"\",\n         closer: \"\",\n@@ -86,29 +98,17 @@ pub fn rewrite_comment(orig: &str,\n         config: config,\n     };\n \n-    let indent_str = offset.to_string(config);\n-    let line_breaks = s.chars().filter(|&c| c == '\\n').count();\n-\n-    let num_bare_lines = s.lines()\n-        .enumerate()\n-        .map(|(_, line)| line.trim())\n-        .filter(|l| !(l.starts_with('*') || l.starts_with(\"//\") || l.starts_with(\"/*\")))\n-        .count();\n-\n-    if num_bare_lines > 0 && !config.normalize_comments {\n-        return Some(orig.to_owned());\n-    }\n-\n-    let lines = s.lines()\n+    let line_breaks = orig.trim_right().chars().filter(|&c| c == '\\n').count();\n+    let lines = orig.lines()\n         .enumerate()\n         .map(|(i, mut line)| {\n             line = line.trim();\n             // Drop old closer.\n             if i == line_breaks && line.ends_with(\"*/\") && !line.starts_with(\"//\") {\n-                line = &line[..(line.len() - 2)];\n+                line = &line[..(line.len() - 2)].trim_right();\n             }\n \n-            line.trim_right()\n+            line\n         })\n         .map(left_trim_comment_line)\n         .map(|line| if orig.starts_with(\"/*\") && line_breaks == 0 {\n@@ -150,6 +150,31 @@ pub fn rewrite_comment(orig: &str,\n     Some(result)\n }\n \n+/// Trims whitespace and aligns to indent, but otherwise does not change comments.\n+fn light_rewrite_comment(orig: &str, offset: Indent, config: &Config) -> Option<String> {\n+    let lines: Vec<&str> = orig.lines()\n+        .map(|l| {\n+            // This is basically just l.trim(), but in the case that a line starts\n+            // with `*` we want to leave one space before it, so it aligns with the\n+            // `*` in `/*`.\n+            let first_non_whitespace = l.find(|c| !char::is_whitespace(c));\n+            if let Some(fnw) = first_non_whitespace {\n+                    if l.as_bytes()[fnw] == '*' as u8 && fnw > 0 {\n+                        &l[fnw - 1..]\n+                    } else {\n+                        &l[fnw..]\n+                    }\n+                } else {\n+                    \"\"\n+                }\n+                .trim_right()\n+        })\n+        .collect();\n+    Some(lines.join(&format!(\"\\n{}\", offset.to_string(config))))\n+}\n+\n+/// Trims comment characters and possibly a single space from the left of a string.\n+/// Does not trim all whitespace.\n fn left_trim_comment_line(line: &str) -> &str {\n     if line.starts_with(\"//! \") || line.starts_with(\"/// \") || line.starts_with(\"/*! \") ||\n        line.starts_with(\"/** \") {\n@@ -708,6 +733,7 @@ mod test {\n     fn format_comments() {\n         let mut config: ::config::Config = Default::default();\n         config.wrap_comments = true;\n+        config.normalize_comments = true;\n \n         let comment = rewrite_comment(\" //test\", true, 100, Indent::new(0, 100), &config).unwrap();\n         assert_eq!(\"/* test */\", comment);"}, {"sha": "ca31820723542465dd434eb8388767c606991735", "filename": "tests/config/issue-1124.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Fconfig%2Fissue-1124.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Fconfig%2Fissue-1124.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconfig%2Fissue-1124.toml?ref=0218a41d73f3fa0be4f2952c4a903f91072823c4", "patch": "@@ -1 +1,2 @@\n reorder_imports = true\n+normalize_comments = true"}, {"sha": "e03933e4516109a1553fe6abce81b431f64367ef", "filename": "tests/source/doc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Fsource%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Fsource%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fdoc.rs?ref=0218a41d73f3fa0be4f2952c4a903f91072823c4", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-normalize_comments: true\n \n // sadfsdfa\n //sdffsdfasdf"}, {"sha": "200cad2d13cae967790b2ef2fb3a19681440c307", "filename": "tests/source/imports-reorder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Fsource%2Fimports-reorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Fsource%2Fimports-reorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimports-reorder.rs?ref=0218a41d73f3fa0be4f2952c4a903f91072823c4", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-normalize_comments: true\n // rustfmt-reorder_imported_names: true\n \n use path::{C,/*A*/ A, B /* B */, self /* self */};"}, {"sha": "3ac423c5aef9b8c6b9e0e6ebe077a162ff12b01e", "filename": "tests/source/issue-1177.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Fsource%2Fissue-1177.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Fsource%2Fissue-1177.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-1177.rs?ref=0218a41d73f3fa0be4f2952c4a903f91072823c4", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-normalize_comments: true\n fn main() {\n     // Line Comment\n     /* Block Comment */"}, {"sha": "ebc26f146e4ab84739ad40c4acc8f37b61c675fe", "filename": "tests/source/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Fsource%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Fsource%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fpaths.rs?ref=0218a41d73f3fa0be4f2952c4a903f91072823c4", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-normalize_comments: true\n \n fn main() {\n    let constellation_chan = Constellation::<layout::layout_task::LayoutTask,  script::script_task::ScriptTask> ::start("}, {"sha": "a6c25225db2e7d86d6a726caa3a21d7fd108e3e5", "filename": "tests/source/pattern.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Fsource%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Fsource%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fpattern.rs?ref=0218a41d73f3fa0be4f2952c4a903f91072823c4", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-normalize_comments: true\n fn main() {\n     let z = match x {\n         \"pat1\" => 1,"}, {"sha": "99d2ae7873f4fbe16723e8aab55e34bb4a26d687", "filename": "tests/target/doc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Ftarget%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Ftarget%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fdoc.rs?ref=0218a41d73f3fa0be4f2952c4a903f91072823c4", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-normalize_comments: true\n \n // sadfsdfa\n // sdffsdfasdf"}, {"sha": "fbdef3630e8b2426b0d3d893a724d1c5a75f30fa", "filename": "tests/target/imports-reorder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Ftarget%2Fimports-reorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Ftarget%2Fimports-reorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports-reorder.rs?ref=0218a41d73f3fa0be4f2952c4a903f91072823c4", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-normalize_comments: true\n // rustfmt-reorder_imported_names: true\n \n use path::{self /* self */, /* A */ A, B /* B */, C};"}, {"sha": "dcda397281439fbab52ec2d3041a0a84649ec227", "filename": "tests/target/issue-1177.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Ftarget%2Fissue-1177.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Ftarget%2Fissue-1177.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1177.rs?ref=0218a41d73f3fa0be4f2952c4a903f91072823c4", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-normalize_comments: true\n fn main() {\n     // Line Comment\n     // Block Comment"}, {"sha": "6535463ebe3dd1fa4f152769d79eb9f34acc668e", "filename": "tests/target/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Ftarget%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Ftarget%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fpaths.rs?ref=0218a41d73f3fa0be4f2952c4a903f91072823c4", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-normalize_comments: true\n \n fn main() {\n     let constellation_chan ="}, {"sha": "b809253aa855518a1ca395b6c84560e77d6b5501", "filename": "tests/target/pattern.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Ftarget%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0218a41d73f3fa0be4f2952c4a903f91072823c4/tests%2Ftarget%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fpattern.rs?ref=0218a41d73f3fa0be4f2952c4a903f91072823c4", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-normalize_comments: true\n fn main() {\n     let z = match x {\n         \"pat1\" => 1,"}]}