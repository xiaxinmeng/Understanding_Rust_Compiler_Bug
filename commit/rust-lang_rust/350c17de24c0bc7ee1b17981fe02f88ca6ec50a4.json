{"sha": "350c17de24c0bc7ee1b17981fe02f88ca6ec50a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MGMxN2RlMjRjMGJjN2VlMWIxNzk4MWZlMDJmODhjYTZlYzUwYTQ=", "commit": {"author": {"name": "ebroto", "email": "ebroto@tutanota.com", "date": "2020-05-01T21:00:16Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-05-01T21:04:58Z"}, "message": "Use the only variant left instead of a wildcard\n\nCo-authored-by: Philipp Krones <hello@philkrones.com>", "tree": {"sha": "1890acee54f6789be1e3ec5d702e48e7ef29a4f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1890acee54f6789be1e3ec5d702e48e7ef29a4f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/350c17de24c0bc7ee1b17981fe02f88ca6ec50a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/350c17de24c0bc7ee1b17981fe02f88ca6ec50a4", "html_url": "https://github.com/rust-lang/rust/commit/350c17de24c0bc7ee1b17981fe02f88ca6ec50a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/350c17de24c0bc7ee1b17981fe02f88ca6ec50a4/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42b0b4754c881101cefb0307c489d6159c19b2f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/42b0b4754c881101cefb0307c489d6159c19b2f3", "html_url": "https://github.com/rust-lang/rust/commit/42b0b4754c881101cefb0307c489d6159c19b2f3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f3b8902e26f672f4df92b63f07da040c67734b44", "filename": "clippy_lints/src/manual_non_exhaustive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/350c17de24c0bc7ee1b17981fe02f88ca6ec50a4/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/350c17de24c0bc7ee1b17981fe02f88ca6ec50a4/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs?ref=350c17de24c0bc7ee1b17981fe02f88ca6ec50a4", "patch": "@@ -133,7 +133,7 @@ fn check_manual_non_exhaustive_struct(cx: &EarlyContext<'_>, item: &Item, data:\n         let delimiter = match data {\n             VariantData::Struct(..) => '{',\n             VariantData::Tuple(..) => '(',\n-            _ => unreachable!(\"`VariantData::Unit` is already handled above\"),\n+            VariantData::Unit(_) => unreachable!(\"`VariantData::Unit` is already handled above\"),\n         };\n \n         cx.sess.source_map().span_until_char(item.span, delimiter)"}]}