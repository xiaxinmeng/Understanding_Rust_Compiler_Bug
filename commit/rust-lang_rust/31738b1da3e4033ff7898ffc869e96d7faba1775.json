{"sha": "31738b1da3e4033ff7898ffc869e96d7faba1775", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxNzM4YjFkYTNlNDAzM2ZmNzg5OGZmYzg2OWU5NmQ3ZmFiYTE3NzU=", "commit": {"author": {"name": "Devin Ragotzy", "email": "devin.ragotzy@gmail.com", "date": "2021-07-30T21:28:44Z"}, "committer": {"name": "Devin Ragotzy", "email": "devin.ragotzy@gmail.com", "date": "2021-08-24T19:53:58Z"}, "message": "Add module_style lint to restriction\n\nAdd tests for disallowed_mod in ui-cargo test section\n\nUse correct algorithm to determine if mod.rs is missing\n\nMove to two lints and remove config option\n\nSwitch lint names so they read \"warn on ...\"\n\nEmit the same help info for self_named_mod_file warnings\n\nBail when both lints are Allow\n\nReword help message for both module_style lints", "tree": {"sha": "9a23dc17f9415d3c646e5e928f3f6cf7fd0448b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a23dc17f9415d3c646e5e928f3f6cf7fd0448b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31738b1da3e4033ff7898ffc869e96d7faba1775", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31738b1da3e4033ff7898ffc869e96d7faba1775", "html_url": "https://github.com/rust-lang/rust/commit/31738b1da3e4033ff7898ffc869e96d7faba1775", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31738b1da3e4033ff7898ffc869e96d7faba1775/comments", "author": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fc1aee7be6e7e71f12eacd60b9b1040e7640fe4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fc1aee7be6e7e71f12eacd60b9b1040e7640fe4", "html_url": "https://github.com/rust-lang/rust/commit/1fc1aee7be6e7e71f12eacd60b9b1040e7640fe4"}], "stats": {"total": 296, "additions": 296, "deletions": 0}, "files": [{"sha": "4bbc1233902123473ba51d4f7e2f94463014283b", "filename": "CHANGELOG.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -2796,6 +2796,7 @@ Released 2018-09-13\n [`missing_safety_doc`]: https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n [`mistyped_literal_suffixes`]: https://rust-lang.github.io/rust-clippy/master/index.html#mistyped_literal_suffixes\n [`mixed_case_hex_literals`]: https://rust-lang.github.io/rust-clippy/master/index.html#mixed_case_hex_literals\n+[`mod_module_files`]: https://rust-lang.github.io/rust-clippy/master/index.html#mod_module_files\n [`module_inception`]: https://rust-lang.github.io/rust-clippy/master/index.html#module_inception\n [`module_name_repetitions`]: https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions\n [`modulo_arithmetic`]: https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic\n@@ -2904,6 +2905,7 @@ Released 2018-09-13\n [`search_is_some`]: https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n [`self_assignment`]: https://rust-lang.github.io/rust-clippy/master/index.html#self_assignment\n [`self_named_constructors`]: https://rust-lang.github.io/rust-clippy/master/index.html#self_named_constructors\n+[`self_named_module_files`]: https://rust-lang.github.io/rust-clippy/master/index.html#self_named_module_files\n [`semicolon_if_nothing_returned`]: https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned\n [`serde_api_misuse`]: https://rust-lang.github.io/rust-clippy/master/index.html#serde_api_misuse\n [`shadow_reuse`]: https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse"}, {"sha": "8217870117610d52ee8003f68f3a3fab9cfac9de", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -274,6 +274,7 @@ mod missing_const_for_fn;\n mod missing_doc;\n mod missing_enforced_import_rename;\n mod missing_inline;\n+mod module_style;\n mod modulo_arithmetic;\n mod multiple_crate_versions;\n mod mut_key;\n@@ -826,6 +827,8 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         missing_doc::MISSING_DOCS_IN_PRIVATE_ITEMS,\n         missing_enforced_import_rename::MISSING_ENFORCED_IMPORT_RENAMES,\n         missing_inline::MISSING_INLINE_IN_PUBLIC_ITEMS,\n+        module_style::MOD_MODULE_FILES,\n+        module_style::SELF_NAMED_MODULE_FILES,\n         modulo_arithmetic::MODULO_ARITHMETIC,\n         multiple_crate_versions::MULTIPLE_CRATE_VERSIONS,\n         mut_key::MUTABLE_KEY_TYPE,\n@@ -1035,6 +1038,8 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(missing_doc::MISSING_DOCS_IN_PRIVATE_ITEMS),\n         LintId::of(missing_enforced_import_rename::MISSING_ENFORCED_IMPORT_RENAMES),\n         LintId::of(missing_inline::MISSING_INLINE_IN_PUBLIC_ITEMS),\n+        LintId::of(module_style::MOD_MODULE_FILES),\n+        LintId::of(module_style::SELF_NAMED_MODULE_FILES),\n         LintId::of(modulo_arithmetic::MODULO_ARITHMETIC),\n         LintId::of(panic_in_result_fn::PANIC_IN_RESULT_FN),\n         LintId::of(panic_unimplemented::PANIC),\n@@ -2107,6 +2112,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| box manual_map::ManualMap);\n     store.register_late_pass(move || box if_then_some_else_none::IfThenSomeElseNone::new(msrv));\n     store.register_early_pass(|| box bool_assert_comparison::BoolAssertComparison);\n+    store.register_early_pass(move || box module_style::ModStyle);\n     store.register_late_pass(|| box unused_async::UnusedAsync);\n     let disallowed_types = conf.disallowed_types.iter().cloned().collect::<FxHashSet<_>>();\n     store.register_late_pass(move || box disallowed_type::DisallowedType::new(&disallowed_types));"}, {"sha": "73e93cf5a3ec5c47fb84def1c68329b0bde51e8e", "filename": "clippy_lints/src/module_style.rs", "status": "added", "additions": 178, "deletions": 0, "changes": 178, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/clippy_lints%2Fsrc%2Fmodule_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/clippy_lints%2Fsrc%2Fmodule_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmodule_style.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1,178 @@\n+use std::{\n+    ffi::OsString,\n+    path::{Component, Path},\n+};\n+\n+use rustc_ast::ast;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_lint::{EarlyContext, EarlyLintPass, Level, LintContext};\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n+use rustc_span::{FileName, RealFileName, SourceFile, Span, SyntaxContext};\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks that module layout uses only self named module files, bans mod.rs files.\n+    ///\n+    /// ### Why is this bad?\n+    /// Having multiple module layout styles in a project can be confusing.\n+    ///\n+    /// ### Example\n+    /// ```text\n+    /// src/\n+    ///   stuff/\n+    ///     stuff_files.rs\n+    ///     mod.rs\n+    ///   lib.rs\n+    /// ```\n+    /// Use instead:\n+    /// ```text\n+    /// src/\n+    ///   stuff/\n+    ///     stuff_files.rs\n+    ///   stuff.rs\n+    ///   lib.rs\n+    /// ```\n+    pub MOD_MODULE_FILES,\n+    restriction,\n+    \"checks that module layout is consistent\"\n+}\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks that module layout uses only mod.rs files.\n+    ///\n+    /// ### Why is this bad?\n+    /// Having multiple module layout styles in a project can be confusing.\n+    ///\n+    /// ### Example\n+    /// ```text\n+    /// src/\n+    ///   stuff/\n+    ///     stuff_files.rs\n+    ///   stuff.rs\n+    ///   lib.rs\n+    /// ```\n+    /// Use instead:\n+    /// ```text\n+    /// src/\n+    ///   stuff/\n+    ///     stuff_files.rs\n+    ///     mod.rs\n+    ///   lib.rs\n+    /// ```\n+\n+    pub SELF_NAMED_MODULE_FILES,\n+    restriction,\n+    \"checks that module layout is consistent\"\n+}\n+\n+pub struct ModStyle;\n+\n+impl_lint_pass!(ModStyle => [MOD_MODULE_FILES, SELF_NAMED_MODULE_FILES]);\n+\n+impl EarlyLintPass for ModStyle {\n+    fn check_crate(&mut self, cx: &EarlyContext<'_>, _: &ast::Crate) {\n+        if cx.builder.lint_level(MOD_MODULE_FILES).0 == Level::Allow\n+            && cx.builder.lint_level(SELF_NAMED_MODULE_FILES).0 == Level::Allow\n+        {\n+            return;\n+        }\n+\n+        let files = cx.sess.source_map().files();\n+\n+        let trim_to_src = if let RealFileName::LocalPath(p) = &cx.sess.working_dir {\n+            p.to_string_lossy()\n+        } else {\n+            return;\n+        };\n+\n+        // `folder_segments` is all unique folder path segments `path/to/foo.rs` gives\n+        // `[path, to]` but not foo\n+        let mut folder_segments = FxHashSet::default();\n+        // `mod_folders` is all the unique folder names that contain a mod.rs file\n+        let mut mod_folders = FxHashSet::default();\n+        // `file_map` maps file names to the full path including the file name\n+        // `{ foo => path/to/foo.rs, .. }\n+        let mut file_map = FxHashMap::default();\n+        for file in files.iter() {\n+            match &file.name {\n+                FileName::Real(RealFileName::LocalPath(lp))\n+                    if lp.to_string_lossy().starts_with(trim_to_src.as_ref()) =>\n+                {\n+                    let p = lp.to_string_lossy();\n+                    let path = Path::new(p.trim_start_matches(trim_to_src.as_ref()));\n+                    if let Some(stem) = path.file_stem() {\n+                        file_map.insert(stem.to_os_string(), (file, path.to_owned()));\n+                    }\n+                    process_paths_for_mod_files(path, &mut folder_segments, &mut mod_folders);\n+                    check_self_named_mod_exists(cx, path, file);\n+                }\n+                _ => {},\n+            }\n+        }\n+\n+        for folder in &folder_segments {\n+            if !mod_folders.contains(folder) {\n+                if let Some((file, path)) = file_map.get(folder) {\n+                    let mut correct = path.clone();\n+                    correct.pop();\n+                    correct.push(folder);\n+                    correct.push(\"mod.rs\");\n+                    cx.struct_span_lint(\n+                        SELF_NAMED_MODULE_FILES,\n+                        Span::new(file.start_pos, file.start_pos, SyntaxContext::root()),\n+                        |build| {\n+                            let mut lint =\n+                                build.build(&format!(\"`mod.rs` files are required, found `{}`\", path.display()));\n+                            lint.help(&format!(\"move `{}` to `{}`\", path.display(), correct.display(),));\n+                            lint.emit();\n+                        },\n+                    );\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+/// For each `path` we add each folder component to `folder_segments` and if the file name\n+/// is `mod.rs` we add it's parent folder to `mod_folders`.\n+fn process_paths_for_mod_files(\n+    path: &Path,\n+    folder_segments: &mut FxHashSet<OsString>,\n+    mod_folders: &mut FxHashSet<OsString>,\n+) {\n+    let mut comp = path.components().rev().peekable();\n+    let _ = comp.next();\n+    if path.ends_with(\"mod.rs\") {\n+        mod_folders.insert(comp.peek().map(|c| c.as_os_str().to_owned()).unwrap_or_default());\n+    }\n+    let folders = comp\n+        .filter_map(|c| {\n+            if let Component::Normal(s) = c {\n+                Some(s.to_os_string())\n+            } else {\n+                None\n+            }\n+        })\n+        .collect::<Vec<_>>();\n+    folder_segments.extend(folders);\n+}\n+\n+/// Checks every path for the presence of `mod.rs` files and emits the lint if found.\n+fn check_self_named_mod_exists(cx: &EarlyContext<'_>, path: &Path, file: &SourceFile) {\n+    if path.ends_with(\"mod.rs\") {\n+        let mut mod_file = path.to_path_buf();\n+        mod_file.pop();\n+        mod_file.set_extension(\"rs\");\n+\n+        cx.struct_span_lint(\n+            MOD_MODULE_FILES,\n+            Span::new(file.start_pos, file.start_pos, SyntaxContext::root()),\n+            |build| {\n+                let mut lint = build.build(&format!(\"`mod.rs` files are not allowed, found `{}`\", path.display()));\n+                lint.help(&format!(\"move `{}` to `{}`\", path.display(), mod_file.display(),));\n+                lint.emit();\n+            },\n+        );\n+    }\n+}"}, {"sha": "27b61c09fb48b597ee0f28be1fa6e19a48578613", "filename": "tests/ui-cargo/module_style/fail_mod/Cargo.toml", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2FCargo.toml?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1,8 @@\n+[package]\n+name = \"fail\"\n+version = \"0.1.0\"\n+edition = \"2018\"\n+\n+# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n+\n+[dependencies]"}, {"sha": "91cd540a28fddc60cc7427a55ad9713bae39c034", "filename": "tests/ui-cargo/module_style/fail_mod/src/bad/inner.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fbad%2Finner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fbad%2Finner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fbad%2Finner.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1 @@\n+pub mod stuff;"}, {"sha": "7713fa9d35c4a357a2ac0696d72e9989c320e194", "filename": "tests/ui-cargo/module_style/fail_mod/src/bad/inner/stuff.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fbad%2Finner%2Fstuff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fbad%2Finner%2Fstuff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fbad%2Finner%2Fstuff.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1,3 @@\n+pub mod most;\n+\n+pub struct Inner;"}, {"sha": "5a5eaf9670f9012a40b67a6599ac5b0665cee131", "filename": "tests/ui-cargo/module_style/fail_mod/src/bad/inner/stuff/most.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fbad%2Finner%2Fstuff%2Fmost.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fbad%2Finner%2Fstuff%2Fmost.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fbad%2Finner%2Fstuff%2Fmost.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1 @@\n+pub struct Snarks;"}, {"sha": "a12734db7cb5f3175c32bfb2c518ee5f78a7b27f", "filename": "tests/ui-cargo/module_style/fail_mod/src/bad/mod.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fbad%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fbad%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fbad%2Fmod.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1,3 @@\n+pub mod inner;\n+\n+pub struct Thing;"}, {"sha": "3e985d4e904c16984bb29ea97697979027380a79", "filename": "tests/ui-cargo/module_style/fail_mod/src/main.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fmain.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1,9 @@\n+#![warn(clippy::self_named_module_files)]\n+\n+mod bad;\n+\n+fn main() {\n+    let _ = bad::Thing;\n+    let _ = bad::inner::stuff::Inner;\n+    let _ = bad::inner::stuff::most::Snarks;\n+}"}, {"sha": "af4c298b310852bf997a072838f58a71efcfe3fb", "filename": "tests/ui-cargo/module_style/fail_mod/src/main.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Ffail_mod%2Fsrc%2Fmain.stderr?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1,19 @@\n+error: `mod.rs` files are required, found `/bad/inner.rs`\n+  --> $DIR/bad/inner.rs:1:1\n+   |\n+LL | pub mod stuff;\n+   | ^\n+   |\n+   = note: `-D clippy::self-named-module-files` implied by `-D warnings`\n+   = help: move `/bad/inner.rs` to `/bad/inner/mod.rs`\n+\n+error: `mod.rs` files are required, found `/bad/inner/stuff.rs`\n+  --> $DIR/bad/inner/stuff.rs:1:1\n+   |\n+LL | pub mod most;\n+   | ^\n+   |\n+   = help: move `/bad/inner/stuff.rs` to `/bad/inner/stuff/mod.rs`\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "27b61c09fb48b597ee0f28be1fa6e19a48578613", "filename": "tests/ui-cargo/module_style/fail_no_mod/Cargo.toml", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_no_mod%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_no_mod%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Ffail_no_mod%2FCargo.toml?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1,8 @@\n+[package]\n+name = \"fail\"\n+version = \"0.1.0\"\n+edition = \"2018\"\n+\n+# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n+\n+[dependencies]"}, {"sha": "f19ab10d5fb06c14bd8138abdfe9d782e61dc85d", "filename": "tests/ui-cargo/module_style/fail_no_mod/src/bad/mod.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_no_mod%2Fsrc%2Fbad%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_no_mod%2Fsrc%2Fbad%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Ffail_no_mod%2Fsrc%2Fbad%2Fmod.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1 @@\n+pub struct Thing;"}, {"sha": "c6e9045b8dc47c6c0d0911a6e26eacbb23d4c0ea", "filename": "tests/ui-cargo/module_style/fail_no_mod/src/main.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_no_mod%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_no_mod%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Ffail_no_mod%2Fsrc%2Fmain.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1,7 @@\n+#![warn(clippy::mod_module_files)]\n+\n+mod bad;\n+\n+fn main() {\n+    let _ = bad::Thing;\n+}"}, {"sha": "11e15db7fb96b47829251b95126dae9af8791466", "filename": "tests/ui-cargo/module_style/fail_no_mod/src/main.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_no_mod%2Fsrc%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Ffail_no_mod%2Fsrc%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Ffail_no_mod%2Fsrc%2Fmain.stderr?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1,11 @@\n+error: `mod.rs` files are not allowed, found `/bad/mod.rs`\n+  --> $DIR/bad/mod.rs:1:1\n+   |\n+LL | pub struct Thing;\n+   | ^\n+   |\n+   = note: `-D clippy::mod-module-files` implied by `-D warnings`\n+   = help: move `/bad/mod.rs` to `/bad.rs`\n+\n+error: aborting due to previous error\n+"}, {"sha": "27b61c09fb48b597ee0f28be1fa6e19a48578613", "filename": "tests/ui-cargo/module_style/pass_mod/Cargo.toml", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2FCargo.toml?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1,8 @@\n+[package]\n+name = \"fail\"\n+version = \"0.1.0\"\n+edition = \"2018\"\n+\n+# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n+\n+[dependencies]"}, {"sha": "f19ab10d5fb06c14bd8138abdfe9d782e61dc85d", "filename": "tests/ui-cargo/module_style/pass_mod/src/bad/mod.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fbad%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fbad%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fbad%2Fmod.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1 @@\n+pub struct Thing;"}, {"sha": "9e08715fc0522b411db17af915e310cd7557671e", "filename": "tests/ui-cargo/module_style/pass_mod/src/main.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fmain.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1,10 @@\n+#![warn(clippy::self_named_module_files)]\n+\n+mod bad;\n+mod more;\n+\n+fn main() {\n+    let _ = bad::Thing;\n+    let _ = more::foo::Foo;\n+    let _ = more::inner::Inner;\n+}"}, {"sha": "4a835673a596bcd05404f43d34082bf2785f2a9d", "filename": "tests/ui-cargo/module_style/pass_mod/src/more/foo.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fmore%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fmore%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fmore%2Ffoo.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1 @@\n+pub struct Foo;"}, {"sha": "aa84f78cc2ca19a90feb696d2daecdbce92793d7", "filename": "tests/ui-cargo/module_style/pass_mod/src/more/inner/mod.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fmore%2Finner%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fmore%2Finner%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fmore%2Finner%2Fmod.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1 @@\n+pub struct Inner;"}, {"sha": "d79569f78ffbe60eea689a3c7afe69aaa9b1ff85", "filename": "tests/ui-cargo/module_style/pass_mod/src/more/mod.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fmore%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fmore%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Fpass_mod%2Fsrc%2Fmore%2Fmod.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1,2 @@\n+pub mod foo;\n+pub mod inner;"}, {"sha": "3c0896dd2cda7d921dceca29a1ca11f6b94df6f8", "filename": "tests/ui-cargo/module_style/pass_no_mod/Cargo.toml", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_no_mod%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_no_mod%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Fpass_no_mod%2FCargo.toml?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1,8 @@\n+[package]\n+name = \"pass\"\n+version = \"0.1.0\"\n+edition = \"2018\"\n+\n+# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n+\n+[dependencies]"}, {"sha": "f19ab10d5fb06c14bd8138abdfe9d782e61dc85d", "filename": "tests/ui-cargo/module_style/pass_no_mod/src/good.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_no_mod%2Fsrc%2Fgood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_no_mod%2Fsrc%2Fgood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Fpass_no_mod%2Fsrc%2Fgood.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1 @@\n+pub struct Thing;"}, {"sha": "50211a340b91b38e8d5a1f27daca27c84ad7e839", "filename": "tests/ui-cargo/module_style/pass_no_mod/src/main.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_no_mod%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31738b1da3e4033ff7898ffc869e96d7faba1775/tests%2Fui-cargo%2Fmodule_style%2Fpass_no_mod%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmodule_style%2Fpass_no_mod%2Fsrc%2Fmain.rs?ref=31738b1da3e4033ff7898ffc869e96d7faba1775", "patch": "@@ -0,0 +1,7 @@\n+#![warn(clippy::mod_module_files)]\n+\n+mod good;\n+\n+fn main() {\n+    let _ = good::Thing;\n+}"}]}