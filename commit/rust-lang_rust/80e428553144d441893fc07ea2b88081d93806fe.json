{"sha": "80e428553144d441893fc07ea2b88081d93806fe", "node_id": "C_kwDOAAsO6NoAKDgwZTQyODU1MzE0NGQ0NDE4OTNmYzA3ZWEyYjg4MDgxZDkzODA2ZmU", "commit": {"author": {"name": "Mu42", "email": "mu001999@outlook.com", "date": "2023-04-02T03:41:50Z"}, "committer": {"name": "Mu42", "email": "mu001999@outlook.com", "date": "2023-04-02T03:41:50Z"}, "message": "Make each idx is used once", "tree": {"sha": "092bbbdd52cadd060057cb1f03da1a82ece57325", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/092bbbdd52cadd060057cb1f03da1a82ece57325"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80e428553144d441893fc07ea2b88081d93806fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80e428553144d441893fc07ea2b88081d93806fe", "html_url": "https://github.com/rust-lang/rust/commit/80e428553144d441893fc07ea2b88081d93806fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80e428553144d441893fc07ea2b88081d93806fe/comments", "author": {"login": "MU001999", "id": 21022101, "node_id": "MDQ6VXNlcjIxMDIyMTAx", "avatar_url": "https://avatars.githubusercontent.com/u/21022101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MU001999", "html_url": "https://github.com/MU001999", "followers_url": "https://api.github.com/users/MU001999/followers", "following_url": "https://api.github.com/users/MU001999/following{/other_user}", "gists_url": "https://api.github.com/users/MU001999/gists{/gist_id}", "starred_url": "https://api.github.com/users/MU001999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MU001999/subscriptions", "organizations_url": "https://api.github.com/users/MU001999/orgs", "repos_url": "https://api.github.com/users/MU001999/repos", "events_url": "https://api.github.com/users/MU001999/events{/privacy}", "received_events_url": "https://api.github.com/users/MU001999/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MU001999", "id": 21022101, "node_id": "MDQ6VXNlcjIxMDIyMTAx", "avatar_url": "https://avatars.githubusercontent.com/u/21022101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MU001999", "html_url": "https://github.com/MU001999", "followers_url": "https://api.github.com/users/MU001999/followers", "following_url": "https://api.github.com/users/MU001999/following{/other_user}", "gists_url": "https://api.github.com/users/MU001999/gists{/gist_id}", "starred_url": "https://api.github.com/users/MU001999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MU001999/subscriptions", "organizations_url": "https://api.github.com/users/MU001999/orgs", "repos_url": "https://api.github.com/users/MU001999/repos", "events_url": "https://api.github.com/users/MU001999/events{/privacy}", "received_events_url": "https://api.github.com/users/MU001999/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbfbecd59ff99b51d1ccf7764641ef32209b9dad", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbfbecd59ff99b51d1ccf7764641ef32209b9dad", "html_url": "https://github.com/rust-lang/rust/commit/bbfbecd59ff99b51d1ccf7764641ef32209b9dad"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "6bcc2bae98a79f2d5799bbca6d4ebbfa579539d8", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/80e428553144d441893fc07ea2b88081d93806fe/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80e428553144d441893fc07ea2b88081d93806fe/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs?ref=80e428553144d441893fc07ea2b88081d93806fe", "patch": "@@ -1156,18 +1156,17 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         // ```\n         // which includes the replacement of the first two `()` for the correct type, and the\n         // removal of the last `()`.\n-        let mut idx = -1;\n+        let mut prev = -1;\n         for (expected_idx, provided_idx) in matched_inputs.iter_enumerated() {\n             // We want to point not at the *current* argument expression index, but rather at the\n             // index position where it *should have been*, which is *after* the previous one.\n-            idx = match provided_idx {\n-                Some(provided_idx) => provided_idx.index() as i64 + 1,\n-                None => idx + 1,\n-            };\n-            let idx = ProvidedIdx::from_usize(idx as usize);\n-            if let None = provided_idx\n-                && let Some((_, arg_span)) = provided_arg_tys.get(idx)\n-            {\n+            if let Some(provided_idx) = provided_idx {\n+                prev = provided_idx.index() as i64;\n+                continue;\n+            }\n+            let idx = ProvidedIdx::from_usize((prev + 1) as usize);\n+            if let Some((_, arg_span)) = provided_arg_tys.get(idx) {\n+                prev += 1;\n                 // There is a type that was *not* found anywhere, so it isn't a move, but a\n                 // replacement and we look at what type it should have been. This will allow us\n                 // To suggest a multipart suggestion when encountering `foo(1, \"\")` where the def"}, {"sha": "2e8ae40f63059452cd88e13fcb35334eb3d9fbf3", "filename": "tests/ui/argument-suggestions/issue-109831.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/80e428553144d441893fc07ea2b88081d93806fe/tests%2Fui%2Fargument-suggestions%2Fissue-109831.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80e428553144d441893fc07ea2b88081d93806fe/tests%2Fui%2Fargument-suggestions%2Fissue-109831.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fargument-suggestions%2Fissue-109831.rs?ref=80e428553144d441893fc07ea2b88081d93806fe", "previous_filename": "tests/ui/argument-suggestions/109831.rs"}, {"sha": "7b9a3c9ef2c6c2cbf0cb3e3df3650e6ce997435e", "filename": "tests/ui/argument-suggestions/issue-109831.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/80e428553144d441893fc07ea2b88081d93806fe/tests%2Fui%2Fargument-suggestions%2Fissue-109831.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/80e428553144d441893fc07ea2b88081d93806fe/tests%2Fui%2Fargument-suggestions%2Fissue-109831.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fargument-suggestions%2Fissue-109831.stderr?ref=80e428553144d441893fc07ea2b88081d93806fe", "patch": "@@ -1,5 +1,5 @@\n error[E0412]: cannot find type `C` in this scope\n-  --> $DIR/109831.rs:4:24\n+  --> $DIR/issue-109831.rs:4:24\n    |\n LL | struct A;\n    | --------- similarly named struct `A` defined here\n@@ -17,7 +17,7 @@ LL | fn f<C>(b1: B, b2: B, a2: C) {}\n    |     +++\n \n error[E0425]: cannot find value `C` in this scope\n-  --> $DIR/109831.rs:7:16\n+  --> $DIR/issue-109831.rs:7:16\n    |\n LL | struct A;\n    | --------- similarly named unit struct `A` defined here\n@@ -26,7 +26,7 @@ LL |     f(A, A, B, C);\n    |                ^ help: a unit struct with a similar name exists: `A`\n \n error[E0061]: this function takes 3 arguments but 4 arguments were supplied\n-  --> $DIR/109831.rs:7:5\n+  --> $DIR/issue-109831.rs:7:5\n    |\n LL |     f(A, A, B, C);\n    |     ^ -  -     - unexpected argument\n@@ -35,7 +35,7 @@ LL |     f(A, A, B, C);\n    |       expected `B`, found `A`\n    |\n note: function defined here\n-  --> $DIR/109831.rs:4:4\n+  --> $DIR/issue-109831.rs:4:4\n    |\n LL | fn f(b1: B, b2: B, a2: C) {}\n    |    ^ -----  -----  -----", "previous_filename": "tests/ui/argument-suggestions/109831.stderr"}]}