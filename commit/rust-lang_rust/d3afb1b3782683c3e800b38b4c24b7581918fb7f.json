{"sha": "d3afb1b3782683c3e800b38b4c24b7581918fb7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYWZiMWIzNzgyNjgzYzNlODAwYjM4YjRjMjRiNzU4MTkxOGZiN2Y=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-04-17T05:51:12Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-04-17T05:51:12Z"}, "message": "Merge #1153\n\n1153: \"Restart server\" command r=jrvidal a=jrvidal\n\nThe only tricky aspect is that fact that once the `exit` command has been received, we no longer need to join on the reader thread. \r\n\r\nAlso, I think `terminateProcesses.sh` was not working properly. In fact, the very same script from the vscode language server implementation is not working either! It's because of that I noticed the reader thread issue :open_mouth: \n\nCo-authored-by: Roberto Vidal <vidal.roberto.j@gmail.com>", "tree": {"sha": "d9a37343c1227c94eaefc54671ddb562faeaf20c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9a37343c1227c94eaefc54671ddb562faeaf20c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3afb1b3782683c3e800b38b4c24b7581918fb7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3afb1b3782683c3e800b38b4c24b7581918fb7f", "html_url": "https://github.com/rust-lang/rust/commit/d3afb1b3782683c3e800b38b4c24b7581918fb7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3afb1b3782683c3e800b38b4c24b7581918fb7f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "0e35603069b4f3cee97641204b09d91fd723d01d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e35603069b4f3cee97641204b09d91fd723d01d", "html_url": "https://github.com/rust-lang/rust/commit/0e35603069b4f3cee97641204b09d91fd723d01d"}, {"sha": "8d569d49d2508cd7b50dd3d00d5509d4128bf645", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d569d49d2508cd7b50dd3d00d5509d4128bf645", "html_url": "https://github.com/rust-lang/rust/commit/8d569d49d2508cd7b50dd3d00d5509d4128bf645"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "5edfbc39cb4dbfc027e802cf15d6ff2102c3d11f", "filename": "crates/gen_lsp_server/src/stdio.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d3afb1b3782683c3e800b38b4c24b7581918fb7f/crates%2Fgen_lsp_server%2Fsrc%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3afb1b3782683c3e800b38b4c24b7581918fb7f/crates%2Fgen_lsp_server%2Fsrc%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fgen_lsp_server%2Fsrc%2Fstdio.rs?ref=d3afb1b3782683c3e800b38b4c24b7581918fb7f", "patch": "@@ -5,6 +5,7 @@ use std::{\n \n use crossbeam_channel::{bounded, Receiver, Sender};\n use failure::bail;\n+use lsp_types::notification::Exit;\n \n use crate::{RawMessage, Result};\n \n@@ -21,9 +22,18 @@ pub fn stdio_transport() -> (Receiver<RawMessage>, Sender<RawMessage>, Threads)\n         let stdin = stdin();\n         let mut stdin = stdin.lock();\n         while let Some(msg) = RawMessage::read(&mut stdin)? {\n+            let is_exit = match &msg {\n+                RawMessage::Notification(n) => n.is::<Exit>(),\n+                _ => false,\n+            };\n+\n             if let Err(_) = reader_sender.send(msg) {\n                 break;\n             }\n+\n+            if is_exit {\n+                break;\n+            }\n         }\n         Ok(())\n     });"}, {"sha": "a0454191a15cb0197583cb95603856347dcc130c", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d3afb1b3782683c3e800b38b4c24b7581918fb7f/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/d3afb1b3782683c3e800b38b4c24b7581918fb7f/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=d3afb1b3782683c3e800b38b4c24b7581918fb7f", "patch": "@@ -114,6 +114,11 @@\n                 \"command\": \"rust-analyzer.collectGarbage\",\n                 \"title\": \"Run garbage collection\",\n                 \"category\": \"Rust Analyzer\"\n+            },\n+            {\n+                \"command\": \"rust-analyzer.reload\",\n+                \"title\": \"Restart server\",\n+                \"category\": \"Rust Analyzer\"\n             }\n         ],\n         \"keybindings\": ["}, {"sha": "1073a36a03e78a98be4025c9255ce30ff8b1ae4f", "filename": "editors/code/src/extension.ts", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d3afb1b3782683c3e800b38b4c24b7581918fb7f/editors%2Fcode%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/d3afb1b3782683c3e800b38b4c24b7581918fb7f/editors%2Fcode%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fextension.ts?ref=d3afb1b3782683c3e800b38b4c24b7581918fb7f", "patch": "@@ -120,11 +120,16 @@ export function activate(context: vscode.ExtensionContext) {\n         context.subscriptions\n     );\n \n+    const startServer = () => Server.start(allNotifications);\n+    const reloadCommand = () => reloadServer(startServer);\n+\n+    vscode.commands.registerCommand('rust-analyzer.reload', reloadCommand);\n+\n     // Executing `cargo watch` provides us with inline diagnostics on save\n     interactivelyStartCargoWatch(context);\n \n     // Start the language server, finally!\n-    Server.start(allNotifications);\n+    startServer();\n }\n \n export function deactivate(): Thenable<void> {\n@@ -133,3 +138,11 @@ export function deactivate(): Thenable<void> {\n     }\n     return Server.client.stop();\n }\n+\n+async function reloadServer(startServer: () => void) {\n+    if (Server.client != null) {\n+        vscode.window.showInformationMessage('Reloading rust-analyzer...');\n+        await Server.client.stop();\n+        startServer();\n+    }\n+}"}, {"sha": null, "filename": "editors/code/src/utils/terminateProcess.sh", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/d3afb1b3782683c3e800b38b4c24b7581918fb7f/editors%2Fcode%2Fsrc%2Futils%2FterminateProcess.sh", "raw_url": "https://github.com/rust-lang/rust/raw/d3afb1b3782683c3e800b38b4c24b7581918fb7f/editors%2Fcode%2Fsrc%2Futils%2FterminateProcess.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Futils%2FterminateProcess.sh?ref=d3afb1b3782683c3e800b38b4c24b7581918fb7f"}]}