{"sha": "1c454736a4f593eebac2c43de9dfb50f9200c250", "node_id": "C_kwDOAAsO6NoAKDFjNDU0NzM2YTRmNTkzZWViYWMyYzQzZGU5ZGZiNTBmOTIwMGMyNTA", "commit": {"author": {"name": "DropDemBits", "email": "r3usrlnd@gmail.com", "date": "2023-01-17T20:29:52Z"}, "committer": {"name": "DropDemBits", "email": "r3usrlnd@gmail.com", "date": "2023-01-17T20:29:52Z"}, "message": "Suppress extra indent after the end of dot chains", "tree": {"sha": "df826d7580c420201bbabdd0439cb6e7a1739172", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df826d7580c420201bbabdd0439cb6e7a1739172"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c454736a4f593eebac2c43de9dfb50f9200c250", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE6GdU+O/nz/hLhxxS1VD437s5JTMFAmPHBUAACgkQ1VD437s5\nJTMFggv7B2qNNIs5ECizrtr1FWfuplEAv1nBOGZllhKaNGXQQ2eHcPmTcql/EezI\niRD/PxesoxXfOpTXdl9hUo772CH0ZbCN/xecMfdQZ7rdJs2aM7OTEFpj4tgboByX\n8cxiMIVB6VCdnzGg8QZjYJ5+4zsDu8pjDj5HGkfvymA37+yspkGLNEucLAumBI2+\ngioziFI8lBwG/c9Z9xXlS/9S+PJyODdFWYeU43mQAZbQCG8k3r8HKVvH4dc1sn+O\ndI2ispHwH/rT2NOFd5InF5tlL7XwEcdAczWfaa0mVdPFAeF5b7H+KD/owuM3zELw\njpCxqwzNvljUlImlgWLmAOZUgnN/Hm6G/C1fShZYY2oJKsBb3dn2wpnjjbLjLcOm\nSznHrSf92FU70KLLWQsYpYVXF0WVVRgxEm/sUVblmlBZUfiAybFRUivm477VddSm\npcJvxNX9bRpXbJlEq8BP6NgxNWUIVVtOCRTT3ooToVWYySvehUnvk6aabNwpTHFB\nQNsH4+Pi\n=NgP9\n-----END PGP SIGNATURE-----", "payload": "tree df826d7580c420201bbabdd0439cb6e7a1739172\nparent 492b3deba7527ca4e0b5fbed2551891b905507b8\nauthor DropDemBits <r3usrlnd@gmail.com> 1673987392 -0500\ncommitter DropDemBits <r3usrlnd@gmail.com> 1673987392 -0500\n\nSuppress extra indent after the end of dot chains\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c454736a4f593eebac2c43de9dfb50f9200c250", "html_url": "https://github.com/rust-lang/rust/commit/1c454736a4f593eebac2c43de9dfb50f9200c250", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c454736a4f593eebac2c43de9dfb50f9200c250/comments", "author": {"login": "DropDemBits", "id": 13354275, "node_id": "MDQ6VXNlcjEzMzU0Mjc1", "avatar_url": "https://avatars.githubusercontent.com/u/13354275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DropDemBits", "html_url": "https://github.com/DropDemBits", "followers_url": "https://api.github.com/users/DropDemBits/followers", "following_url": "https://api.github.com/users/DropDemBits/following{/other_user}", "gists_url": "https://api.github.com/users/DropDemBits/gists{/gist_id}", "starred_url": "https://api.github.com/users/DropDemBits/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DropDemBits/subscriptions", "organizations_url": "https://api.github.com/users/DropDemBits/orgs", "repos_url": "https://api.github.com/users/DropDemBits/repos", "events_url": "https://api.github.com/users/DropDemBits/events{/privacy}", "received_events_url": "https://api.github.com/users/DropDemBits/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DropDemBits", "id": 13354275, "node_id": "MDQ6VXNlcjEzMzU0Mjc1", "avatar_url": "https://avatars.githubusercontent.com/u/13354275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DropDemBits", "html_url": "https://github.com/DropDemBits", "followers_url": "https://api.github.com/users/DropDemBits/followers", "following_url": "https://api.github.com/users/DropDemBits/following{/other_user}", "gists_url": "https://api.github.com/users/DropDemBits/gists{/gist_id}", "starred_url": "https://api.github.com/users/DropDemBits/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DropDemBits/subscriptions", "organizations_url": "https://api.github.com/users/DropDemBits/orgs", "repos_url": "https://api.github.com/users/DropDemBits/repos", "events_url": "https://api.github.com/users/DropDemBits/events{/privacy}", "received_events_url": "https://api.github.com/users/DropDemBits/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "492b3deba7527ca4e0b5fbed2551891b905507b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/492b3deba7527ca4e0b5fbed2551891b905507b8", "html_url": "https://github.com/rust-lang/rust/commit/492b3deba7527ca4e0b5fbed2551891b905507b8"}], "stats": {"total": 118, "additions": 70, "deletions": 48}, "files": [{"sha": "029dc3afd553dfe6a6dd1c522fe696c41b77ba79", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 70, "deletions": 48, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/1c454736a4f593eebac2c43de9dfb50f9200c250/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1c454736a4f593eebac2c43de9dfb50f9200c250/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=1c454736a4f593eebac2c43de9dfb50f9200c250", "patch": "@@ -86,58 +86,80 @@ export class Config {\n      * [1]: https://github.com/Microsoft/vscode/issues/11514#issuecomment-244707076\n      */\n     private configureLanguage() {\n-        if (this.typingContinueCommentsOnNewline && !this.configureLang) {\n+        if (this.configureLang) return;\n+\n+        let onEnterRules: vscode.OnEnterRule[] = [\n+            {\n+                // Carry indentation from the previous line\n+                beforeText: /^\\s*$/,\n+                action: { indentAction: vscode.IndentAction.None },\n+            },\n+            {\n+                // After the end of a function/field chain,\n+                // with the semicolon on the same line\n+                beforeText: /^\\s+\\..*;/,\n+                action: { indentAction: vscode.IndentAction.Outdent },\n+            },\n+            {\n+                // After the end of a function/field chain,\n+                // with semicolon detached from the rest\n+                beforeText: /^\\s+;/,\n+                previousLineText: /^\\s+\\..*/,\n+                action: { indentAction: vscode.IndentAction.Outdent },\n+            },\n+        ];\n+\n+        if (this.typingContinueCommentsOnNewline) {\n             const indentAction = vscode.IndentAction.None;\n \n-            this.configureLang = vscode.languages.setLanguageConfiguration(\"rust\", {\n-                onEnterRules: [\n-                    {\n-                        // Doc single-line comment\n-                        // e.g. ///|\n-                        beforeText: /^\\s*\\/{3}.*$/,\n-                        action: { indentAction, appendText: \"/// \" },\n+            onEnterRules = [\n+                ...onEnterRules,\n+                {\n+                    // Doc single-line comment\n+                    // e.g. ///|\n+                    beforeText: /^\\s*\\/{3}.*$/,\n+                    action: { indentAction, appendText: \"/// \" },\n+                },\n+                {\n+                    // Parent doc single-line comment\n+                    // e.g. //!|\n+                    beforeText: /^\\s*\\/{2}\\!.*$/,\n+                    action: { indentAction, appendText: \"//! \" },\n+                },\n+                {\n+                    // Begins an auto-closed multi-line comment (standard or parent doc)\n+                    // e.g. /** | */ or /*! | */\n+                    beforeText: /^\\s*\\/\\*(\\*|\\!)(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n+                    afterText: /^\\s*\\*\\/$/,\n+                    action: {\n+                        indentAction: vscode.IndentAction.IndentOutdent,\n+                        appendText: \" * \",\n                     },\n-                    {\n-                        // Parent doc single-line comment\n-                        // e.g. //!|\n-                        beforeText: /^\\s*\\/{2}\\!.*$/,\n-                        action: { indentAction, appendText: \"//! \" },\n-                    },\n-                    {\n-                        // Begins an auto-closed multi-line comment (standard or parent doc)\n-                        // e.g. /** | */ or /*! | */\n-                        beforeText: /^\\s*\\/\\*(\\*|\\!)(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n-                        afterText: /^\\s*\\*\\/$/,\n-                        action: {\n-                            indentAction: vscode.IndentAction.IndentOutdent,\n-                            appendText: \" * \",\n-                        },\n-                    },\n-                    {\n-                        // Begins a multi-line comment (standard or parent doc)\n-                        // e.g. /** ...| or /*! ...|\n-                        beforeText: /^\\s*\\/\\*(\\*|\\!)(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n-                        action: { indentAction, appendText: \" * \" },\n-                    },\n-                    {\n-                        // Continues a multi-line comment\n-                        // e.g.  * ...|\n-                        beforeText: /^(\\ \\ )*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\n-                        action: { indentAction, appendText: \"* \" },\n-                    },\n-                    {\n-                        // Dedents after closing a multi-line comment\n-                        // e.g.  */|\n-                        beforeText: /^(\\ \\ )*\\ \\*\\/\\s*$/,\n-                        action: { indentAction, removeText: 1 },\n-                    },\n-                ],\n-            });\n-        }\n-        if (!this.typingContinueCommentsOnNewline && this.configureLang) {\n-            this.configureLang.dispose();\n-            this.configureLang = undefined;\n+                },\n+                {\n+                    // Begins a multi-line comment (standard or parent doc)\n+                    // e.g. /** ...| or /*! ...|\n+                    beforeText: /^\\s*\\/\\*(\\*|\\!)(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n+                    action: { indentAction, appendText: \" * \" },\n+                },\n+                {\n+                    // Continues a multi-line comment\n+                    // e.g.  * ...|\n+                    beforeText: /^(\\ \\ )*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\n+                    action: { indentAction, appendText: \"* \" },\n+                },\n+                {\n+                    // Dedents after closing a multi-line comment\n+                    // e.g.  */|\n+                    beforeText: /^(\\ \\ )*\\ \\*\\/\\s*$/,\n+                    action: { indentAction, removeText: 1 },\n+                },\n+            ];\n         }\n+\n+        this.configureLang = vscode.languages.setLanguageConfiguration(\"rust\", {\n+            onEnterRules,\n+        });\n     }\n \n     // We don't do runtime config validation here for simplicity. More on stackoverflow:"}]}