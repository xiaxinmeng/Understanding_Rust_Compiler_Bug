{"sha": "124b63acf333a6e938be5086d592657e312ea57d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyNGI2M2FjZjMzM2E2ZTkzOGJlNTA4NmQ1OTI2NTdlMzEyZWE1N2Q=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-10-26T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-10-26T00:00:00Z"}, "message": "simplify-locals: Add yet to be optimized test cases", "tree": {"sha": "7585714ef47e06c6323d10f65fad129123649f8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7585714ef47e06c6323d10f65fad129123649f8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/124b63acf333a6e938be5086d592657e312ea57d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/124b63acf333a6e938be5086d592657e312ea57d", "html_url": "https://github.com/rust-lang/rust/commit/124b63acf333a6e938be5086d592657e312ea57d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/124b63acf333a6e938be5086d592657e312ea57d/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cd97cad6e5f85bed455f505f330ead1d5cd8432", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cd97cad6e5f85bed455f505f330ead1d5cd8432", "html_url": "https://github.com/rust-lang/rust/commit/1cd97cad6e5f85bed455f505f330ead1d5cd8432"}], "stats": {"total": 294, "additions": 294, "deletions": 0}, "files": [{"sha": "dca8f30c89494774fedf3762e9646818569fe43b", "filename": "src/test/mir-opt/simplify-locals.rs", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify-locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify-locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-locals.rs?ref=124b63acf333a6e938be5086d592657e312ea57d", "patch": "@@ -0,0 +1,74 @@\n+// compile-flags: -C overflow-checks=off\n+\n+#![feature(box_syntax)]\n+#![feature(thread_local)]\n+\n+#[derive(Copy, Clone)]\n+enum E {\n+     A,\n+     B,\n+}\n+\n+// EMIT_MIR simplify_locals.c.SimplifyLocals.diff\n+fn c() {\n+    let bytes = [0u8; 10];\n+    // Unused cast\n+    let _: &[u8] = &bytes;\n+}\n+\n+// EMIT_MIR simplify_locals.d1.SimplifyLocals.diff\n+fn d1() {\n+    // Unused set discriminant\n+    let _ = E::A;\n+}\n+\n+// EMIT_MIR simplify_locals.d2.SimplifyLocals.diff\n+fn d2() {\n+    // Unused set discriminant\n+    {(10, E::A)}.1 = E::B;\n+}\n+\n+// EMIT_MIR simplify_locals.r.SimplifyLocals.diff\n+fn r() {\n+    let mut a = 1;\n+    // Unused references\n+    let _ = &a;\n+    let _ = &mut a;\n+}\n+\n+#[thread_local] static mut X: u32 = 0;\n+\n+// EMIT_MIR simplify_locals.t1.SimplifyLocals.diff\n+fn t1() {\n+    // Unused thread local\n+    unsafe { X };\n+}\n+\n+// EMIT_MIR simplify_locals.t2.SimplifyLocals.diff\n+fn t2() {\n+    // Unused thread local\n+    unsafe { &mut X };\n+}\n+\n+// EMIT_MIR simplify_locals.t3.SimplifyLocals.diff\n+fn t3() {\n+    // Unused thread local\n+    unsafe { *&mut X };\n+}\n+\n+// EMIT_MIR simplify_locals.t4.SimplifyLocals.diff\n+fn t4() -> u32 {\n+    // Used thread local\n+    unsafe { X + 1 }\n+}\n+\n+fn main() {\n+    c();\n+    d1();\n+    d2();\n+    r();\n+    t1();\n+    t2();\n+    t3();\n+    t4();\n+}"}, {"sha": "dbf6e89469749617c72fd3e09376a24b4f6ffb79", "filename": "src/test/mir-opt/simplify_locals.c.SimplifyLocals.diff", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.c.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.c.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.c.SimplifyLocals.diff?ref=124b63acf333a6e938be5086d592657e312ea57d", "patch": "@@ -0,0 +1,28 @@\n+- // MIR for `c` before SimplifyLocals\n++ // MIR for `c` after SimplifyLocals\n+  \n+  fn c() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/simplify-locals.rs:13:8: 13:8\n+      let _1: [u8; 10];                    // in scope 0 at $DIR/simplify-locals.rs:14:9: 14:14\n+      let mut _2: &[u8];                   // in scope 0 at $DIR/simplify-locals.rs:16:20: 16:26\n+      let mut _3: &[u8; 10];               // in scope 0 at $DIR/simplify-locals.rs:16:20: 16:26\n+-     let _4: &[u8; 10];                   // in scope 0 at $DIR/simplify-locals.rs:16:20: 16:26\n+      scope 1 {\n+          debug bytes => _1;               // in scope 1 at $DIR/simplify-locals.rs:14:9: 14:14\n+          scope 2 {\n+          }\n+      }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:14:9: 14:14\n+          _1 = [const 0_u8; 10];           // scope 0 at $DIR/simplify-locals.rs:14:17: 14:26\n+          StorageLive(_2);                 // scope 1 at $DIR/simplify-locals.rs:16:20: 16:26\n+          _3 = &_1;                        // scope 1 at $DIR/simplify-locals.rs:16:20: 16:26\n+          _2 = move _3 as &[u8] (Pointer(Unsize)); // scope 1 at $DIR/simplify-locals.rs:16:20: 16:26\n+          StorageDead(_2);                 // scope 1 at $DIR/simplify-locals.rs:16:26: 16:27\n+          _0 = const ();                   // scope 0 at $DIR/simplify-locals.rs:13:8: 17:2\n+          StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:17:1: 17:2\n+          return;                          // scope 0 at $DIR/simplify-locals.rs:17:2: 17:2\n+      }\n+  }\n+  "}, {"sha": "19811070e2a570bc692ab5472eed148cd0da4b7e", "filename": "src/test/mir-opt/simplify_locals.d1.SimplifyLocals.diff", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.d1.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.d1.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.d1.SimplifyLocals.diff?ref=124b63acf333a6e938be5086d592657e312ea57d", "patch": "@@ -0,0 +1,18 @@\n+- // MIR for `d1` before SimplifyLocals\n++ // MIR for `d1` after SimplifyLocals\n+  \n+  fn d1() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/simplify-locals.rs:20:9: 20:9\n+      let mut _1: E;                       // in scope 0 at $DIR/simplify-locals.rs:22:13: 22:17\n+      scope 1 {\n+      }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:22:13: 22:17\n+          discriminant(_1) = 0;            // scope 0 at $DIR/simplify-locals.rs:22:13: 22:17\n+          StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:22:17: 22:18\n+          _0 = const ();                   // scope 0 at $DIR/simplify-locals.rs:20:9: 23:2\n+          return;                          // scope 0 at $DIR/simplify-locals.rs:23:2: 23:2\n+      }\n+  }\n+  "}, {"sha": "91621a102e15c54af3eb757ef41c1bd5f769767e", "filename": "src/test/mir-opt/simplify_locals.d2.SimplifyLocals.diff", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.d2.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.d2.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.d2.SimplifyLocals.diff?ref=124b63acf333a6e938be5086d592657e312ea57d", "patch": "@@ -0,0 +1,42 @@\n+- // MIR for `d2` before SimplifyLocals\n++ // MIR for `d2` after SimplifyLocals\n+  \n+  fn d2() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/simplify-locals.rs:26:9: 26:9\n+      let mut _1: E;                       // in scope 0 at $DIR/simplify-locals.rs:28:22: 28:26\n+-     let mut _2: (i32, E);                // in scope 0 at $DIR/simplify-locals.rs:28:5: 28:17\n+-     let mut _3: E;                       // in scope 0 at $DIR/simplify-locals.rs:28:11: 28:15\n++     let mut _2: E;                       // in scope 0 at $DIR/simplify-locals.rs:28:11: 28:15\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:28:22: 28:26\n+          discriminant(_1) = 1;            // scope 0 at $DIR/simplify-locals.rs:28:22: 28:26\n+-         StorageLive(_2);                 // scope 0 at $DIR/simplify-locals.rs:28:5: 28:17\n+-         StorageLive(_3);                 // scope 0 at $DIR/simplify-locals.rs:28:11: 28:15\n+-         discriminant(_3) = 0;            // scope 0 at $DIR/simplify-locals.rs:28:11: 28:15\n+-         (_2.0: i32) = const 10_i32;      // scope 0 at $DIR/simplify-locals.rs:28:6: 28:16\n+-         (_2.1: E) = const E::A;          // scope 0 at $DIR/simplify-locals.rs:28:6: 28:16\n+-                                          // ty::Const\n+-                                          // + ty: E\n+-                                          // + val: Value(Scalar(0x00))\n+-                                          // mir::Constant\n+-                                          // + span: $DIR/simplify-locals.rs:28:6: 28:16\n+-                                          // + literal: Const { ty: E, val: Value(Scalar(0x00)) }\n+-         StorageDead(_3);                 // scope 0 at $DIR/simplify-locals.rs:28:15: 28:16\n+-         (_2.1: E) = const E::B;          // scope 0 at $DIR/simplify-locals.rs:28:5: 28:26\n+-                                          // ty::Const\n+-                                          // + ty: E\n+-                                          // + val: Value(Scalar(0x01))\n+-                                          // mir::Constant\n+-                                          // + span: $DIR/simplify-locals.rs:28:5: 28:26\n+-                                          // + literal: Const { ty: E, val: Value(Scalar(0x01)) }\n++         StorageLive(_2);                 // scope 0 at $DIR/simplify-locals.rs:28:11: 28:15\n++         discriminant(_2) = 0;            // scope 0 at $DIR/simplify-locals.rs:28:11: 28:15\n++         StorageDead(_2);                 // scope 0 at $DIR/simplify-locals.rs:28:15: 28:16\n+          StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:28:25: 28:26\n+-         StorageDead(_2);                 // scope 0 at $DIR/simplify-locals.rs:28:26: 28:27\n+          _0 = const ();                   // scope 0 at $DIR/simplify-locals.rs:26:9: 29:2\n+          return;                          // scope 0 at $DIR/simplify-locals.rs:29:2: 29:2\n+      }\n+  }\n+  "}, {"sha": "a5970585c831f98fc145cf23d83144f484ddb670", "filename": "src/test/mir-opt/simplify_locals.r.SimplifyLocals.diff", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.r.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.r.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.r.SimplifyLocals.diff?ref=124b63acf333a6e938be5086d592657e312ea57d", "patch": "@@ -0,0 +1,31 @@\n+- // MIR for `r` before SimplifyLocals\n++ // MIR for `r` after SimplifyLocals\n+  \n+  fn r() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/simplify-locals.rs:32:8: 32:8\n+      let mut _1: i32;                     // in scope 0 at $DIR/simplify-locals.rs:33:9: 33:14\n+      let mut _2: &i32;                    // in scope 0 at $DIR/simplify-locals.rs:35:13: 35:15\n+      let mut _3: &mut i32;                // in scope 0 at $DIR/simplify-locals.rs:36:13: 36:19\n+      scope 1 {\n+          debug a => _1;                   // in scope 1 at $DIR/simplify-locals.rs:33:9: 33:14\n+          scope 2 {\n+              scope 3 {\n+              }\n+          }\n+      }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:33:9: 33:14\n+          _1 = const 1_i32;                // scope 0 at $DIR/simplify-locals.rs:33:17: 33:18\n+          StorageLive(_2);                 // scope 1 at $DIR/simplify-locals.rs:35:13: 35:15\n+          _2 = &_1;                        // scope 1 at $DIR/simplify-locals.rs:35:13: 35:15\n+          StorageDead(_2);                 // scope 1 at $DIR/simplify-locals.rs:35:15: 35:16\n+          StorageLive(_3);                 // scope 2 at $DIR/simplify-locals.rs:36:13: 36:19\n+          _3 = &mut _1;                    // scope 2 at $DIR/simplify-locals.rs:36:13: 36:19\n+          StorageDead(_3);                 // scope 2 at $DIR/simplify-locals.rs:36:19: 36:20\n+          _0 = const ();                   // scope 0 at $DIR/simplify-locals.rs:32:8: 37:2\n+          StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:37:1: 37:2\n+          return;                          // scope 0 at $DIR/simplify-locals.rs:37:2: 37:2\n+      }\n+  }\n+  "}, {"sha": "a2dc7fd68938f03bcae1d56d836f1e1bc20e4ccd", "filename": "src/test/mir-opt/simplify_locals.t1.SimplifyLocals.diff", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t1.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t1.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t1.SimplifyLocals.diff?ref=124b63acf333a6e938be5086d592657e312ea57d", "patch": "@@ -0,0 +1,25 @@\n+- // MIR for `t1` before SimplifyLocals\n++ // MIR for `t1` after SimplifyLocals\n+  \n+  fn t1() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/simplify-locals.rs:42:9: 42:9\n+-     let _1: u32;                         // in scope 0 at $DIR/simplify-locals.rs:44:14: 44:15\n+-     let mut _2: *mut u32;                // in scope 0 at $DIR/simplify-locals.rs:44:14: 44:15\n++     let mut _1: *mut u32;                // in scope 0 at $DIR/simplify-locals.rs:44:14: 44:15\n+      scope 1 {\n+      }\n+  \n+      bb0: {\n+-         StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:44:5: 44:17\n+-         StorageLive(_2);                 // scope 1 at $DIR/simplify-locals.rs:44:14: 44:15\n+-         _2 = &/*tls*/ mut X;             // scope 1 at $DIR/simplify-locals.rs:44:14: 44:15\n+-         _1 = (*_2);                      // scope 1 at $DIR/simplify-locals.rs:44:14: 44:15\n+-         StorageDead(_2);                 // scope 0 at $DIR/simplify-locals.rs:44:17: 44:18\n++         StorageLive(_1);                 // scope 1 at $DIR/simplify-locals.rs:44:14: 44:15\n++         _1 = &/*tls*/ mut X;             // scope 1 at $DIR/simplify-locals.rs:44:14: 44:15\n+          StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:44:17: 44:18\n+          _0 = const ();                   // scope 0 at $DIR/simplify-locals.rs:42:9: 45:2\n+          return;                          // scope 0 at $DIR/simplify-locals.rs:45:2: 45:2\n+      }\n+  }\n+  "}, {"sha": "c119952c569abec3044bd3cc006b8be86ffd8f79", "filename": "src/test/mir-opt/simplify_locals.t2.SimplifyLocals.diff", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t2.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t2.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t2.SimplifyLocals.diff?ref=124b63acf333a6e938be5086d592657e312ea57d", "patch": "@@ -0,0 +1,22 @@\n+- // MIR for `t2` before SimplifyLocals\n++ // MIR for `t2` after SimplifyLocals\n+  \n+  fn t2() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/simplify-locals.rs:48:9: 48:9\n+      let _1: &mut u32;                    // in scope 0 at $DIR/simplify-locals.rs:50:14: 50:20\n+      let mut _2: *mut u32;                // in scope 0 at $DIR/simplify-locals.rs:50:19: 50:20\n+      scope 1 {\n+      }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:50:5: 50:22\n+          StorageLive(_2);                 // scope 1 at $DIR/simplify-locals.rs:50:19: 50:20\n+          _2 = &/*tls*/ mut X;             // scope 1 at $DIR/simplify-locals.rs:50:19: 50:20\n+          _1 = &mut (*_2);                 // scope 1 at $DIR/simplify-locals.rs:50:14: 50:20\n+          StorageDead(_2);                 // scope 0 at $DIR/simplify-locals.rs:50:22: 50:23\n+          StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:50:22: 50:23\n+          _0 = const ();                   // scope 0 at $DIR/simplify-locals.rs:48:9: 51:2\n+          return;                          // scope 0 at $DIR/simplify-locals.rs:51:2: 51:2\n+      }\n+  }\n+  "}, {"sha": "357b3fc9d3a97dfd0cdaa632bd93ba2201a27f9e", "filename": "src/test/mir-opt/simplify_locals.t3.SimplifyLocals.diff", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t3.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t3.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t3.SimplifyLocals.diff?ref=124b63acf333a6e938be5086d592657e312ea57d", "patch": "@@ -0,0 +1,32 @@\n+- // MIR for `t3` before SimplifyLocals\n++ // MIR for `t3` after SimplifyLocals\n+  \n+  fn t3() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/simplify-locals.rs:54:9: 54:9\n+-     let _1: u32;                         // in scope 0 at $DIR/simplify-locals.rs:56:14: 56:21\n+-     let mut _2: &mut u32;                // in scope 0 at $DIR/simplify-locals.rs:56:15: 56:21\n+-     let mut _3: *mut u32;                // in scope 0 at $DIR/simplify-locals.rs:56:20: 56:21\n++     let mut _1: &mut u32;                // in scope 0 at $DIR/simplify-locals.rs:56:15: 56:21\n++     let mut _2: *mut u32;                // in scope 0 at $DIR/simplify-locals.rs:56:20: 56:21\n+      scope 1 {\n+      }\n+  \n+      bb0: {\n+-         StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:56:5: 56:23\n+-         StorageLive(_2);                 // scope 1 at $DIR/simplify-locals.rs:56:15: 56:21\n+-         StorageLive(_3);                 // scope 1 at $DIR/simplify-locals.rs:56:20: 56:21\n+-         _3 = &/*tls*/ mut X;             // scope 1 at $DIR/simplify-locals.rs:56:20: 56:21\n+-         _2 = &mut (*_3);                 // scope 1 at $DIR/simplify-locals.rs:56:15: 56:21\n+-         _1 = (*_2);                      // scope 1 at $DIR/simplify-locals.rs:56:14: 56:21\n+-         StorageDead(_3);                 // scope 0 at $DIR/simplify-locals.rs:56:23: 56:24\n++         StorageLive(_1);                 // scope 1 at $DIR/simplify-locals.rs:56:15: 56:21\n++         StorageLive(_2);                 // scope 1 at $DIR/simplify-locals.rs:56:20: 56:21\n++         _2 = &/*tls*/ mut X;             // scope 1 at $DIR/simplify-locals.rs:56:20: 56:21\n++         _1 = &mut (*_2);                 // scope 1 at $DIR/simplify-locals.rs:56:15: 56:21\n+          StorageDead(_2);                 // scope 0 at $DIR/simplify-locals.rs:56:23: 56:24\n+          StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:56:23: 56:24\n+          _0 = const ();                   // scope 0 at $DIR/simplify-locals.rs:54:9: 57:2\n+          return;                          // scope 0 at $DIR/simplify-locals.rs:57:2: 57:2\n+      }\n+  }\n+  "}, {"sha": "e0e9b3ef4062a68bca106a1e8a857111b4a47e23", "filename": "src/test/mir-opt/simplify_locals.t4.SimplifyLocals.diff", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t4.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/124b63acf333a6e938be5086d592657e312ea57d/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t4.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t4.SimplifyLocals.diff?ref=124b63acf333a6e938be5086d592657e312ea57d", "patch": "@@ -0,0 +1,22 @@\n+- // MIR for `t4` before SimplifyLocals\n++ // MIR for `t4` after SimplifyLocals\n+  \n+  fn t4() -> u32 {\n+      let mut _0: u32;                     // return place in scope 0 at $DIR/simplify-locals.rs:60:12: 60:15\n+      let mut _1: u32;                     // in scope 0 at $DIR/simplify-locals.rs:62:14: 62:15\n+      let mut _2: *mut u32;                // in scope 0 at $DIR/simplify-locals.rs:62:14: 62:15\n+      scope 1 {\n+      }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 1 at $DIR/simplify-locals.rs:62:14: 62:15\n+          StorageLive(_2);                 // scope 1 at $DIR/simplify-locals.rs:62:14: 62:15\n+          _2 = &/*tls*/ mut X;             // scope 1 at $DIR/simplify-locals.rs:62:14: 62:15\n+          _1 = (*_2);                      // scope 1 at $DIR/simplify-locals.rs:62:14: 62:15\n+          _0 = Add(move _1, const 1_u32);  // scope 1 at $DIR/simplify-locals.rs:62:14: 62:19\n+          StorageDead(_1);                 // scope 1 at $DIR/simplify-locals.rs:62:18: 62:19\n+          StorageDead(_2);                 // scope 0 at $DIR/simplify-locals.rs:63:1: 63:2\n+          return;                          // scope 0 at $DIR/simplify-locals.rs:63:2: 63:2\n+      }\n+  }\n+  "}]}