{"sha": "809b14acf10fa717716c054a3d1dd4d400784d19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwOWIxNGFjZjEwZmE3MTc3MTZjMDU0YTNkMWRkNGQ0MDA3ODRkMTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-03T19:52:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-03T19:52:11Z"}, "message": "Auto merge of #31797 - apasel422:issue-28950, r=alexcrichton\n\nCloses #28950.\n\nr? @eddyb", "tree": {"sha": "e6adc7846e4a9f806391d3c7ce50066712938f75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6adc7846e4a9f806391d3c7ce50066712938f75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/809b14acf10fa717716c054a3d1dd4d400784d19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/809b14acf10fa717716c054a3d1dd4d400784d19", "html_url": "https://github.com/rust-lang/rust/commit/809b14acf10fa717716c054a3d1dd4d400784d19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/809b14acf10fa717716c054a3d1dd4d400784d19/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "493d999ffa44be6610441dabab80e18dda90015a", "url": "https://api.github.com/repos/rust-lang/rust/commits/493d999ffa44be6610441dabab80e18dda90015a", "html_url": "https://github.com/rust-lang/rust/commit/493d999ffa44be6610441dabab80e18dda90015a"}, {"sha": "34aed8f06237a5f53961de1e4bfc590d63deaa19", "url": "https://api.github.com/repos/rust-lang/rust/commits/34aed8f06237a5f53961de1e4bfc590d63deaa19", "html_url": "https://github.com/rust-lang/rust/commit/34aed8f06237a5f53961de1e4bfc590d63deaa19"}], "stats": {"total": 55, "additions": 27, "deletions": 28}, "files": [{"sha": "e6cf5aa6683578af1748139f8edc18208b26a523", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -31,6 +31,7 @@\n #![cfg_attr(not(stage0), deny(warnings))]\n \n #![feature(alloc)]\n+#![feature(allow_internal_unstable)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(core_intrinsics)]"}, {"sha": "d6a8362d58182597527fe1b14449f46c9ef8e86a", "filename": "src/libcollections/macros.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Flibcollections%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Flibcollections%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fmacros.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -41,12 +41,13 @@\n #[cfg(not(test))]\n #[macro_export]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[allow_internal_unstable]\n macro_rules! vec {\n     ($elem:expr; $n:expr) => (\n         $crate::vec::from_elem($elem, $n)\n     );\n     ($($x:expr),*) => (\n-        <[_]>::into_vec($crate::boxed::Box::new([$($x),*]))\n+        <[_]>::into_vec(box [$($x),*])\n     );\n     ($($x:expr,)*) => (vec![$($x),*])\n }\n@@ -61,7 +62,7 @@ macro_rules! vec {\n         $crate::vec::from_elem($elem, $n)\n     );\n     ($($x:expr),*) => (\n-        $crate::slice::into_vec($crate::boxed::Box::new([$($x),*]))\n+        $crate::slice::into_vec(box [$($x),*])\n     );\n     ($($x:expr,)*) => (vec![$($x),*])\n }"}, {"sha": "052b60539314549ae126fa47964dcc179d222150", "filename": "src/test/run-pass/borrow-by-val-method-receiver.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fborrow-by-val-method-receiver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fborrow-by-val-method-receiver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrow-by-val-method-receiver.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-// pretty-expanded FIXME #23616\n-\n trait Foo {\n     fn foo(self);\n }"}, {"sha": "187063968f7f994e33432661423cc522d69819e7", "filename": "src/test/run-pass/borrowck/borrowck-binding-mutbl.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fborrowck%2Fborrowck-binding-mutbl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fborrowck%2Fborrowck-binding-mutbl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck%2Fborrowck-binding-mutbl.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-// pretty-expanded FIXME #23616\n-\n struct F { f: Vec<isize> }\n \n fn impure(_v: &[isize]) {"}, {"sha": "eb0546063f7154396245fd1a5735c19732f1e3d2", "filename": "src/test/run-pass/generic-ivec-leak.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fgeneric-ivec-leak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fgeneric-ivec-leak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-ivec-leak.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// pretty-expanded FIXME #23616\n-\n enum wrapper<T> { wrapped(T), }\n \n pub fn main() { let _w = wrapper::wrapped(vec!(1, 2, 3, 4, 5)); }"}, {"sha": "8e3cb414566c7577279db2ba4f0fc60d45c7af7b", "filename": "src/test/run-pass/issue-17816.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fissue-17816.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fissue-17816.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17816.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// pretty-expanded FIXME #23616\n-\n #![feature(unboxed_closures)]\n \n use std::marker::PhantomData;"}, {"sha": "88bf95f036b86275729e3d4d246792d7b72d3851", "filename": "src/test/run-pass/issue-18514.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fissue-18514.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fissue-18514.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18514.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -15,7 +15,6 @@\n // impl.\n \n // aux-build:issue-18514.rs\n-// pretty-expanded FIXME #23616\n \n extern crate issue_18514 as ice;\n use ice::{Tr, St};"}, {"sha": "365b594c99e36fb13f101bd266d2ddab68b8d110", "filename": "src/test/run-pass/issue-2631-b.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2631-b.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -11,8 +11,6 @@\n \n // aux-build:issue-2631-a.rs\n \n-// pretty-expanded FIXME #23616\n-\n extern crate req;\n \n use req::request;"}, {"sha": "bab7b0d24db70f2af04493989d13c80425d29f81", "filename": "src/test/run-pass/issue-2723-b.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fissue-2723-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fissue-2723-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2723-b.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -10,8 +10,6 @@\n \n // aux-build:issue_2723_a.rs\n \n-// pretty-expanded FIXME #23616\n-\n extern crate issue_2723_a;\n use issue_2723_a::f;\n "}, {"sha": "f01ce46a891d9f6ce220a64e64bb804ba8c6bd02", "filename": "src/test/run-pass/issue-28950.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fissue-28950.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fissue-28950.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-28950.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2012-2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Tests that the `vec!` macro does not overflow the stack when it is\n+// given data larger than the stack.\n+\n+const LEN: usize = 1 << 15;\n+\n+use std::thread::Builder;\n+\n+fn main() {\n+    assert!(Builder::new().stack_size(LEN / 2).spawn(|| {\n+        let vec = vec![[0; LEN]];\n+        assert_eq!(vec.len(), 1);\n+    }).unwrap().join().is_ok());\n+}"}, {"sha": "5b40105a9791637620dcdc954af8ac8fd832d042", "filename": "src/test/run-pass/ivec-pass-by-value.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fivec-pass-by-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fivec-pass-by-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fivec-pass-by-value.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -8,8 +8,5 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-// pretty-expanded FIXME #23616\n-\n fn f(_a: Vec<isize> ) { }\n pub fn main() { f(vec!(1, 2, 3, 4, 5)); }"}, {"sha": "b8238774bc1e00771b3e632ac0456cb49f6840f6", "filename": "src/test/run-pass/ivec-tag.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fivec-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fivec-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fivec-tag.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// pretty-expanded FIXME #23616\n // ignore-emscripten no threads support\n \n #![feature(std_misc)]"}, {"sha": "a2ae3fbf83b0f6e82e0fd582f073f087cc1c38f3", "filename": "src/test/run-pass/macro-delimiter-significance.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fmacro-delimiter-significance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fmacro-delimiter-significance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-delimiter-significance.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// pretty-expanded FIXME #23616\n-\n fn main() {\n     vec![1_usize, 2, 3].len();\n }"}, {"sha": "7183937fe8035f7ae6ec1106a068f6944bb0c4fa", "filename": "src/test/run-pass/regions-dependent-autoslice.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fregions-dependent-autoslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fregions-dependent-autoslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-dependent-autoslice.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -11,9 +11,6 @@\n // Test lifetimes are linked properly when we autoslice a vector.\n // Issue #3148.\n \n-\n-// pretty-expanded FIXME #23616\n-\n fn subslice1<'r>(v: &'r [usize]) -> &'r [usize] { v }\n \n fn both<'r>(v: &'r [usize]) -> &'r [usize] {"}, {"sha": "33f01c5bd41c8b3bf37bd3645c3b5bcfa78c97b5", "filename": "src/test/run-pass/vec-push.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fvec-push.rs", "raw_url": "https://github.com/rust-lang/rust/raw/809b14acf10fa717716c054a3d1dd4d400784d19/src%2Ftest%2Frun-pass%2Fvec-push.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-push.rs?ref=809b14acf10fa717716c054a3d1dd4d400784d19", "patch": "@@ -8,6 +8,4 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// pretty-expanded FIXME #23616\n-\n pub fn main() { let mut v = vec!(1, 2, 3); v.push(1); }"}]}