{"sha": "3d9b3a8575ef3cb557fd847b941000df3b2db670", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkOWIzYTg1NzVlZjNjYjU1N2ZkODQ3Yjk0MTAwMGRmM2IyZGI2NzA=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-03-21T11:05:08Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-03-21T11:10:39Z"}, "message": "remove more redundant clones (clippy::redundant_clone())", "tree": {"sha": "a942c8942b0c15417d78b88dde2d05c0976d7a42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a942c8942b0c15417d78b88dde2d05c0976d7a42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d9b3a8575ef3cb557fd847b941000df3b2db670", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d9b3a8575ef3cb557fd847b941000df3b2db670", "html_url": "https://github.com/rust-lang/rust/commit/3d9b3a8575ef3cb557fd847b941000df3b2db670", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d9b3a8575ef3cb557fd847b941000df3b2db670/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d40ff5e623b3670ce3e0e324ecbab3e5197aaeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d40ff5e623b3670ce3e0e324ecbab3e5197aaeb", "html_url": "https://github.com/rust-lang/rust/commit/0d40ff5e623b3670ce3e0e324ecbab3e5197aaeb"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "04ea9c5d7f9635ff396c749c0920faefcecdaa41", "filename": "crates/hir_def/src/resolver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d9b3a8575ef3cb557fd847b941000df3b2db670/crates%2Fhir_def%2Fsrc%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d9b3a8575ef3cb557fd847b941000df3b2db670/crates%2Fhir_def%2Fsrc%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fresolver.rs?ref=3d9b3a8575ef3cb557fd847b941000df3b2db670", "patch": "@@ -472,7 +472,7 @@ impl Scope {\n             }\n             Scope::ExprScope(scope) => {\n                 if let Some((label, name)) = scope.expr_scopes.label(scope.scope_id) {\n-                    f(name.clone(), ScopeDef::Label(label))\n+                    f(name, ScopeDef::Label(label))\n                 }\n                 scope.expr_scopes.entries(scope.scope_id).iter().for_each(|e| {\n                     f(e.name().clone(), ScopeDef::Local(e.pat()));"}, {"sha": "fc73e435bfbfdcbcf8d00ca927e0b1c057c53f11", "filename": "crates/hir_expand/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d9b3a8575ef3cb557fd847b941000df3b2db670/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d9b3a8575ef3cb557fd847b941000df3b2db670/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdb.rs?ref=3d9b3a8575ef3cb557fd847b941000df3b2db670", "patch": "@@ -173,7 +173,7 @@ fn macro_arg_text(db: &dyn AstDatabase, id: MacroCallId) -> Option<GreenNode> {\n     };\n     let loc = db.lookup_intern_macro(id);\n     let arg = loc.kind.arg(db)?;\n-    Some(arg.green().to_owned())\n+    Some(arg.green())\n }\n \n fn macro_arg(db: &dyn AstDatabase, id: MacroCallId) -> Option<Arc<(tt::Subtree, mbe::TokenMap)>> {"}, {"sha": "c914a3b8e04e5d242d9fe614cf810654f37588ab", "filename": "crates/hir_ty/src/lower.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3d9b3a8575ef3cb557fd847b941000df3b2db670/crates%2Fhir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d9b3a8575ef3cb557fd847b941000df3b2db670/crates%2Fhir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flower.rs?ref=3d9b3a8575ef3cb557fd847b941000df3b2db670", "patch": "@@ -946,8 +946,7 @@ pub(crate) fn trait_environment_query(\n         let substs = Substitution::type_params(db, trait_id);\n         let trait_ref = TraitRef { trait_id: to_chalk_trait_id(trait_id), substitution: substs };\n         let pred = WhereClause::Implemented(trait_ref);\n-        let program_clause: chalk_ir::ProgramClause<Interner> =\n-            pred.clone().to_chalk(db).cast(&Interner);\n+        let program_clause: chalk_ir::ProgramClause<Interner> = pred.to_chalk(db).cast(&Interner);\n         clauses.push(program_clause.into_from_env_clause(&Interner));\n     }\n "}, {"sha": "a153a9e1c38b79d0f66c6b4e1e3590385758d74a", "filename": "crates/syntax/src/algo.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3d9b3a8575ef3cb557fd847b941000df3b2db670/crates%2Fsyntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d9b3a8575ef3cb557fd847b941000df3b2db670/crates%2Fsyntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Falgo.rs?ref=3d9b3a8575ef3cb557fd847b941000df3b2db670", "patch": "@@ -567,7 +567,7 @@ impl<'a> SyntaxRewriter<'a> {\n \n fn element_to_green(element: SyntaxElement) -> NodeOrToken<rowan::GreenNode, rowan::GreenToken> {\n     match element {\n-        NodeOrToken::Node(it) => NodeOrToken::Node(it.green().to_owned()),\n+        NodeOrToken::Node(it) => NodeOrToken::Node(it.green()),\n         NodeOrToken::Token(it) => NodeOrToken::Token(it.green().to_owned()),\n     }\n }\n@@ -625,7 +625,7 @@ fn position_of_child(parent: &SyntaxNode, child: SyntaxElement) -> usize {\n \n fn to_green_element(element: SyntaxElement) -> NodeOrToken<rowan::GreenNode, rowan::GreenToken> {\n     match element {\n-        NodeOrToken::Node(it) => it.green().to_owned().into(),\n+        NodeOrToken::Node(it) => it.green().into(),\n         NodeOrToken::Token(it) => it.green().to_owned().into(),\n     }\n }"}, {"sha": "7049affd95fd2b4dbf4186e39f5469bcfd41fdd7", "filename": "crates/syntax/src/ast/make.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d9b3a8575ef3cb557fd847b941000df3b2db670/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d9b3a8575ef3cb557fd847b941000df3b2db670/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs?ref=3d9b3a8575ef3cb557fd847b941000df3b2db670", "patch": "@@ -532,7 +532,7 @@ fn ast_from_text<N: AstNode>(text: &str) -> N {\n }\n \n fn unroot(n: SyntaxNode) -> SyntaxNode {\n-    SyntaxNode::new_root(n.green().to_owned())\n+    SyntaxNode::new_root(n.green())\n }\n \n pub mod tokens {"}]}