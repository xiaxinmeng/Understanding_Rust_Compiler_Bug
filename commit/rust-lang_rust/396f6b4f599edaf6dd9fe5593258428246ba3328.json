{"sha": "396f6b4f599edaf6dd9fe5593258428246ba3328", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5NmY2YjRmNTk5ZWRhZjZkZDlmZTU1OTMyNTg0MjgyNDZiYTMzMjg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-19T01:48:32Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-19T01:48:32Z"}, "message": "rustc: Stub GC routines", "tree": {"sha": "076a386e36907f4a701b6975079ad5fcefe693a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/076a386e36907f4a701b6975079ad5fcefe693a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/396f6b4f599edaf6dd9fe5593258428246ba3328", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/396f6b4f599edaf6dd9fe5593258428246ba3328", "html_url": "https://github.com/rust-lang/rust/commit/396f6b4f599edaf6dd9fe5593258428246ba3328", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/396f6b4f599edaf6dd9fe5593258428246ba3328/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fedea39cecb61c46aa7ca93374ce39e98acbb6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fedea39cecb61c46aa7ca93374ce39e98acbb6e", "html_url": "https://github.com/rust-lang/rust/commit/0fedea39cecb61c46aa7ca93374ce39e98acbb6e"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "7b50e579eefa1b1bf7c5082439c58020f2ed5d8f", "filename": "mk/rt.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/396f6b4f599edaf6dd9fe5593258428246ba3328/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/396f6b4f599edaf6dd9fe5593258428246ba3328/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=396f6b4f599edaf6dd9fe5593258428246ba3328", "patch": "@@ -25,6 +25,7 @@ RUNTIME_CS := rt/sync/timer.cpp \\\n               rt/rust_kernel.cpp \\\n               rt/rust_shape.cpp \\\n               rt/rust_obstack.cpp \\\n+              rt/rust_gc.cpp \\\n               rt/memory_region.cpp \\\n               rt/test/rust_test_harness.cpp \\\n               rt/test/rust_test_runtime.cpp \\"}, {"sha": "fee2d8b9834db0844d396a51787c665257e5b1b9", "filename": "src/rt/rust_gc.cpp", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/396f6b4f599edaf6dd9fe5593258428246ba3328/src%2Frt%2Frust_gc.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/396f6b4f599edaf6dd9fe5593258428246ba3328/src%2Frt%2Frust_gc.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_gc.cpp?ref=396f6b4f599edaf6dd9fe5593258428246ba3328", "patch": "@@ -0,0 +1,70 @@\n+// Rust garbage collection.\n+\n+// TODO: Windows\n+#include <utility>\n+#include <stdint.h>\n+\n+#include \"rust_internal.h\"\n+\n+#ifdef __WIN32__\n+#include <windows.h>\n+#else\n+#include <dlfcn.h>\n+#endif\n+\n+namespace gc {\n+\n+struct root {\n+    intptr_t frame_offset;\n+    uintptr_t dynamic;  // 0 = static, 1 = dynamic\n+    type_desc *tydesc;\n+};\n+\n+struct safe_point {\n+    uintptr_t n_roots;\n+    root roots[0];\n+};\n+\n+class safe_point_map {\n+    uintptr_t n_safe_points;\n+    const std::pair<void *,const safe_point *> *index;\n+    const safe_point *safe_points;\n+\n+public:\n+    safe_point_map() {\n+        const uintptr_t *data;\n+#ifdef __WIN32__\n+        data = (const uintptr_t *)GetProcAddress(GetModuleHandle(NULL),\n+                                                 \"rust_gc_safe_points\");\n+#else\n+        data = (const uintptr_t *)dlsym(RTLD_DEFAULT, \"rust_gc_safe_points\");\n+#endif\n+        n_safe_points = *data++;\n+        index = (const std::pair<void *,const safe_point *> *)data;\n+        data += n_safe_points;\n+        safe_points = (const safe_point *)data;\n+    }\n+};\n+\n+void\n+gc() {\n+    safe_point_map map;\n+\n+    // TODO\n+}\n+\n+void\n+maybe_gc() {\n+    // FIXME: We ought to lock this.\n+    static int zeal = -1;\n+    if (zeal == -1) {\n+        char *ev = getenv(\"RUST_GC_ZEAL\");\n+        zeal = ev[0] != '\\0' && ev[0] != '0';\n+    }\n+\n+    if (zeal)\n+        gc();\n+}\n+\n+}\n+"}]}