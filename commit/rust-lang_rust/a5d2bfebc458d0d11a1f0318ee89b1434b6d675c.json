{"sha": "a5d2bfebc458d0d11a1f0318ee89b1434b6d675c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZDJiZmViYzQ1OGQwZDExYTFmMDMxOGVlODliMTQzNGI2ZDY3NWM=", "commit": {"author": {"name": "Yury Krivopalov", "email": "ykrivopalov@yandex.ru", "date": "2017-10-15T07:21:56Z"}, "committer": {"name": "Yury Krivopalov", "email": "ykrivopalov@yandex.ru", "date": "2017-10-15T07:21:56Z"}, "message": "Simplify checking for all ones in int", "tree": {"sha": "e01d16ab6d7d573baf576a52566e720dd9536e46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e01d16ab6d7d573baf576a52566e720dd9536e46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5d2bfebc458d0d11a1f0318ee89b1434b6d675c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5d2bfebc458d0d11a1f0318ee89b1434b6d675c", "html_url": "https://github.com/rust-lang/rust/commit/a5d2bfebc458d0d11a1f0318ee89b1434b6d675c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5d2bfebc458d0d11a1f0318ee89b1434b6d675c/comments", "author": null, "committer": null, "parents": [{"sha": "033c99b1baaa87587132debafaa8d2d0ccb7dde8", "url": "https://api.github.com/repos/rust-lang/rust/commits/033c99b1baaa87587132debafaa8d2d0ccb7dde8", "html_url": "https://github.com/rust-lang/rust/commit/033c99b1baaa87587132debafaa8d2d0ccb7dde8"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "85dfb6b4ad092e578c582e30a2fb03e6f9b40ed5", "filename": "clippy_lints/src/identity_op.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a5d2bfebc458d0d11a1f0318ee89b1434b6d675c/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5d2bfebc458d0d11a1f0318ee89b1434b6d675c/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=a5d2bfebc458d0d11a1f0318ee89b1434b6d675c", "patch": "@@ -58,18 +58,18 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IdentityOp {\n     }\n }\n \n-fn no_zeros(v: &ConstInt) -> bool {\n+fn all_ones(v: &ConstInt) -> bool {\n     match *v {\n-        ConstInt::I8(i) => i.count_zeros() == 0,\n-        ConstInt::I16(i) => i.count_zeros() == 0,\n-        ConstInt::I32(i) => i.count_zeros() == 0,\n-        ConstInt::I64(i) => i.count_zeros() == 0,\n-        ConstInt::I128(i) => i.count_zeros() == 0,\n-        ConstInt::U8(i) => i.count_zeros() == 0,\n-        ConstInt::U16(i) => i.count_zeros() == 0,\n-        ConstInt::U32(i) => i.count_zeros() == 0,\n-        ConstInt::U64(i) => i.count_zeros() == 0,\n-        ConstInt::U128(i) => i.count_zeros() == 0,\n+        ConstInt::I8(i) => i == !0,\n+        ConstInt::I16(i) => i == !0,\n+        ConstInt::I32(i) => i == !0,\n+        ConstInt::I64(i) => i == !0,\n+        ConstInt::I128(i) => i == !0,\n+        ConstInt::U8(i) => i == !0,\n+        ConstInt::U16(i) => i == !0,\n+        ConstInt::U32(i) => i == !0,\n+        ConstInt::U64(i) => i == !0,\n+        ConstInt::U128(i) => i == !0,\n         _ => false\n     }\n }\n@@ -79,7 +79,7 @@ fn check(cx: &LateContext, e: &Expr, m: i8, span: Span, arg: Span) {\n     if let Some(Constant::Int(v)) = constant_simple(cx, e) {\n         if match m {\n             0 => v.to_u128_unchecked() == 0,\n-            -1 => no_zeros(&v),\n+            -1 => all_ones(&v),\n             1 => v.to_u128_unchecked() == 1,\n             _ => unreachable!(),\n         } {"}]}