{"sha": "f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YzI1OThkZmM0NWY5MjllYzg1ZTlkMWM1NDJmMWRiYjZhOTk4MmM=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2018-05-12T08:18:21Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2018-05-16T11:56:25Z"}, "message": "Add E0696 for continue pointing to a labeled block", "tree": {"sha": "ef1088064a8761e49b850fddb6264abaf162fb74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef1088064a8761e49b850fddb6264abaf162fb74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c", "html_url": "https://github.com/rust-lang/rust/commit/f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50f063c75b4d05976a1c132afd213c75913c7605", "url": "https://api.github.com/repos/rust-lang/rust/commits/50f063c75b4d05976a1c132afd213c75913c7605", "html_url": "https://github.com/rust-lang/rust/commit/50f063c75b4d05976a1c132afd213c75913c7605"}], "stats": {"total": 83, "additions": 81, "deletions": 2}, "files": [{"sha": "5dd11617b8bfb92e0c3c3b245287218105afe973", "filename": "src/librustc_passes/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c/src%2Flibrustc_passes%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c/src%2Flibrustc_passes%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdiagnostics.rs?ref=f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c", "patch": "@@ -308,4 +308,5 @@ register_diagnostics! {\n     E0642, // patterns aren't allowed in methods without bodies\n     E0666, // nested `impl Trait` is illegal\n     E0667, // `impl Trait` in projections\n+    E0696, // `continue` pointing to a labeled block\n }"}, {"sha": "eb8d416a8dde093aa29ca0c0699ec14c1b699050", "filename": "src/librustc_passes/loops.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c/src%2Flibrustc_passes%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c/src%2Flibrustc_passes%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Floops.rs?ref=f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c", "patch": "@@ -152,8 +152,22 @@ impl<'a, 'hir> Visitor<'hir> for CheckLoopVisitor<'a, 'hir> {\n             hir::ExprAgain(label) => {\n                 self.require_label_in_labeled_block(e.span, &label, \"continue\");\n \n-                if let Err(hir::LoopIdError::UnlabeledCfInWhileCondition) = label.target_id {\n-                    self.emit_unlabled_cf_in_while_condition(e.span, \"continue\");\n+                match label.target_id {\n+                    Ok(loop_id) => {\n+                        if let hir::map::NodeBlock(block) = self.hir_map.find(loop_id).unwrap() {\n+                            struct_span_err!(self.sess, e.span, E0696,\n+                                            \"`continue` pointing to a labeled block\")\n+                                .span_label(e.span,\n+                                            \"labeled blocks cannot be `continue`'d\")\n+                                .span_note(block.span,\n+                                            \"labeled block the continue points to\")\n+                                .emit();\n+                        }\n+                    }\n+                    Err(hir::LoopIdError::UnlabeledCfInWhileCondition) => {\n+                        self.emit_unlabled_cf_in_while_condition(e.span, \"continue\");\n+                    }\n+                    _ => {}\n                 }\n                 self.require_break_cx(\"continue\", e.span)\n             },"}, {"sha": "10557d4bcd61f3912b00fce7eefaef39c0713dd6", "filename": "src/test/ui/label_break_value_continue.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c/src%2Ftest%2Fui%2Flabel_break_value_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c/src%2Ftest%2Fui%2Flabel_break_value_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel_break_value_continue.rs?ref=f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Simple continue pointing to an unlabeled break should yield in an error\n+fn continue_simple() {\n+    'b: {\n+        continue; //~ ERROR unlabeled `continue` inside of a labeled block\n+    }\n+}\n+\n+// Labeled continue pointing to an unlabeled break should yield in an error\n+fn continue_labeled() {\n+    'b: {\n+        continue 'b; //~ ERROR `continue` pointing to a labeled block\n+    }\n+}\n+\n+// Simple continue that would cross a labeled block should yield in an error\n+fn continue_crossing() {\n+    loop {\n+        'b: {\n+            continue; //~ ERROR unlabeled `continue` inside of a labeled block\n+        }\n+    }\n+}\n+\n+pub fn main() {}"}, {"sha": "cf707f1b96029eb6720b8e1d6f6a93c864173ac4", "filename": "src/test/ui/label_break_value_continue.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c/src%2Ftest%2Fui%2Flabel_break_value_continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c/src%2Ftest%2Fui%2Flabel_break_value_continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel_break_value_continue.stderr?ref=f8c2598dfc45f929ec85e9d1c542f1dbb6a9982c", "patch": "@@ -0,0 +1,30 @@\n+error[E0695]: unlabeled `continue` inside of a labeled block\n+  --> $DIR/label_break_value_continue.rs:14:9\n+   |\n+LL |         continue; //~ ERROR unlabeled `continue` inside of a labeled block\n+   |         ^^^^^^^^ `continue` statements that would diverge to or through a labeled block need to bear a label\n+\n+error[E0696]: `continue` pointing to a labeled block\n+  --> $DIR/label_break_value_continue.rs:21:9\n+   |\n+LL |         continue 'b; //~ ERROR `continue` pointing to a labeled block\n+   |         ^^^^^^^^^^^ labeled blocks cannot be `continue`'d\n+   |\n+note: labeled block the continue points to\n+  --> $DIR/label_break_value_continue.rs:20:5\n+   |\n+LL | /     'b: {\n+LL | |         continue 'b; //~ ERROR `continue` pointing to a labeled block\n+LL | |     }\n+   | |_____^\n+\n+error[E0695]: unlabeled `continue` inside of a labeled block\n+  --> $DIR/label_break_value_continue.rs:29:13\n+   |\n+LL |             continue; //~ ERROR unlabeled `continue` inside of a labeled block\n+   |             ^^^^^^^^ `continue` statements that would diverge to or through a labeled block need to bear a label\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors occurred: E0695, E0696.\n+For more information about an error, try `rustc --explain E0695`."}]}