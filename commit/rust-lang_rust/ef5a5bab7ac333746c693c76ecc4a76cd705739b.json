{"sha": "ef5a5bab7ac333746c693c76ecc4a76cd705739b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNWE1YmFiN2FjMzMzNzQ2YzY5M2M3NmVjYzRhNzZjZDcwNTczOWI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-25T15:59:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-25T15:59:25Z"}, "message": "Rollup merge of #56233 - kenta7777:kenta7777#49937, r=oli-obk\n\nMiri and miri-related code contains repetitions of `(n << amt) >> amt`\n\nI reduced some code repetitions contains `(n << amt) >> amt`.\nThis pull request is related to #49937.", "tree": {"sha": "eef3c48259b2de7db6671885e49480db6691d8a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eef3c48259b2de7db6671885e49480db6691d8a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef5a5bab7ac333746c693c76ecc4a76cd705739b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcSzJdCRBK7hj4Ov3rIwAAdHIIABuyHiKwXc6mA7ZLfRVJFSMX\nejUS9QeRWPgQT62fO0zc/4pLXmShawc6RBup0vK/UVdts2InkEyIiBigYdEXUB26\nqRQ+YX1zjdQSmesBT0CVR8s1Fj3Leb/PtANTZJ/qzqFPuY55UUXZO9dbvFWspGxs\nAN0Giuz1Qbj3rYGZZnwUzoLzmTtT+DkIydpgQavSfKR4AYmScX2GdQ/4dpBiqZvn\n8FIuv2Q9/gFLiA7O7scqqAfbq2EjUvPK4+3vZAxBrQErk9hI4kQwsDjuIJnmUNIL\nEzKK/GXv3nNdGCNoIv6WJeqt/VSFy4vjCWqzUowyNwt8T8yCHTdOTat4MjwL6VY=\n=jJS1\n-----END PGP SIGNATURE-----\n", "payload": "tree eef3c48259b2de7db6671885e49480db6691d8a4\nparent 7187db619c134697647f96e82111cbcbae337d4f\nparent b80332ed4c142496096ff2bf9aa378cc6b3bf806\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1548431965 +0100\ncommitter GitHub <noreply@github.com> 1548431965 +0100\n\nRollup merge of #56233 - kenta7777:kenta7777#49937, r=oli-obk\n\nMiri and miri-related code contains repetitions of `(n << amt) >> amt`\n\nI reduced some code repetitions contains `(n << amt) >> amt`.\nThis pull request is related to #49937.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef5a5bab7ac333746c693c76ecc4a76cd705739b", "html_url": "https://github.com/rust-lang/rust/commit/ef5a5bab7ac333746c693c76ecc4a76cd705739b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef5a5bab7ac333746c693c76ecc4a76cd705739b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7187db619c134697647f96e82111cbcbae337d4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7187db619c134697647f96e82111cbcbae337d4f", "html_url": "https://github.com/rust-lang/rust/commit/7187db619c134697647f96e82111cbcbae337d4f"}, {"sha": "b80332ed4c142496096ff2bf9aa378cc6b3bf806", "url": "https://api.github.com/repos/rust-lang/rust/commits/b80332ed4c142496096ff2bf9aa378cc6b3bf806", "html_url": "https://github.com/rust-lang/rust/commit/b80332ed4c142496096ff2bf9aa378cc6b3bf806"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "9d3275ffde2c0a3f6000bcf760bdce386f5bbaae", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ef5a5bab7ac333746c693c76ecc4a76cd705739b/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef5a5bab7ac333746c693c76ecc4a76cd705739b/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=ef5a5bab7ac333746c693c76ecc4a76cd705739b", "patch": "@@ -21,6 +21,8 @@ use syntax::source_map;\n \n use rustc::hir;\n \n+use rustc::mir::interpret::{sign_extend, truncate};\n+\n declare_lint! {\n     UNUSED_COMPARISONS,\n     Warn,\n@@ -368,14 +370,14 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TypeLimits {\n             let (t, actually) = match ty {\n                 ty::Int(t) => {\n                     let ity = attr::IntType::SignedInt(t);\n-                    let bits = layout::Integer::from_attr(&cx.tcx, ity).size().bits();\n-                    let actually = (val << (128 - bits)) as i128 >> (128 - bits);\n+                    let size = layout::Integer::from_attr(&cx.tcx, ity).size();\n+                    let actually = sign_extend(val, size) as i128;\n                     (format!(\"{:?}\", t), actually.to_string())\n                 }\n                 ty::Uint(t) => {\n                     let ity = attr::IntType::UnsignedInt(t);\n-                    let bits = layout::Integer::from_attr(&cx.tcx, ity).size().bits();\n-                    let actually = (val << (128 - bits)) >> (128 - bits);\n+                    let size = layout::Integer::from_attr(&cx.tcx, ity).size();\n+                    let actually = truncate(val, size);\n                     (format!(\"{:?}\", t), actually.to_string())\n                 }\n                 _ => bug!(),"}]}