{"sha": "189d879659f4e44c3343023d6455bed7cdf0e7c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4OWQ4Nzk2NTlmNGU0NGMzMzQzMDIzZDY0NTViZWQ3Y2RmMGU3Yzk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-17T15:05:20Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-17T15:05:20Z"}, "message": "implement initial type inference for index expressions", "tree": {"sha": "eba980071d5c8941fdd3adc11fc5525d243ba2b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eba980071d5c8941fdd3adc11fc5525d243ba2b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/189d879659f4e44c3343023d6455bed7cdf0e7c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/189d879659f4e44c3343023d6455bed7cdf0e7c9", "html_url": "https://github.com/rust-lang/rust/commit/189d879659f4e44c3343023d6455bed7cdf0e7c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/189d879659f4e44c3343023d6455bed7cdf0e7c9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b082cd679ad1ae7646d03261bcccda435443365c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b082cd679ad1ae7646d03261bcccda435443365c", "html_url": "https://github.com/rust-lang/rust/commit/b082cd679ad1ae7646d03261bcccda435443365c"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "a16561d1143467a12147680a0478477390e760ed", "filename": "crates/ra_hir/src/expr.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/189d879659f4e44c3343023d6455bed7cdf0e7c9/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/189d879659f4e44c3343023d6455bed7cdf0e7c9/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr.rs?ref=189d879659f4e44c3343023d6455bed7cdf0e7c9", "patch": "@@ -245,6 +245,10 @@ pub enum Expr {\n         rhs: ExprId,\n         op: Option<BinaryOp>,\n     },\n+    Index {\n+        base: ExprId,\n+        index: ExprId,\n+    },\n     Lambda {\n         args: Vec<PatId>,\n         arg_types: Vec<Option<TypeRef>>,\n@@ -399,6 +403,10 @@ impl Expr {\n                 f(*lhs);\n                 f(*rhs);\n             }\n+            Expr::Index { base, index } => {\n+                f(*base);\n+                f(*index);\n+            }\n             Expr::Field { expr, .. }\n             | Expr::Await { expr }\n             | Expr::Try { expr }\n@@ -887,10 +895,14 @@ where\n                 };\n                 self.alloc_expr(Expr::Literal(lit), syntax_ptr)\n             }\n+            ast::ExprKind::IndexExpr(e) => {\n+                let base = self.collect_expr_opt(e.base());\n+                let index = self.collect_expr_opt(e.index());\n+                self.alloc_expr(Expr::Index { base, index }, syntax_ptr)\n+            }\n \n             // FIXME implement HIR for these:\n             ast::ExprKind::Label(_e) => self.alloc_expr(Expr::Missing, syntax_ptr),\n-            ast::ExprKind::IndexExpr(_e) => self.alloc_expr(Expr::Missing, syntax_ptr),\n             ast::ExprKind::RangeExpr(_e) => self.alloc_expr(Expr::Missing, syntax_ptr),\n             ast::ExprKind::MacroCall(e) => {\n                 let ast_id = self"}, {"sha": "cca59538ac626fc459530ffa3055f6235458dd3d", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/189d879659f4e44c3343023d6455bed7cdf0e7c9/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/189d879659f4e44c3343023d6455bed7cdf0e7c9/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=189d879659f4e44c3343023d6455bed7cdf0e7c9", "patch": "@@ -1279,6 +1279,12 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                 }\n                 _ => Ty::Unknown,\n             },\n+            Expr::Index { base, index } => {\n+                let _base_ty = self.infer_expr(*base, &Expectation::none());\n+                let _index_ty = self.infer_expr(*index, &Expectation::none());\n+                // FIXME: use `std::ops::Index::Output` to figure out the real return type\n+                Ty::Unknown\n+            }\n             Expr::Tuple { exprs } => {\n                 let mut ty_vec = Vec::with_capacity(exprs.len());\n                 for arg in exprs.iter() {"}, {"sha": "6c2d857bca171b57713a5f6bef4b1d5cc453a577", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/189d879659f4e44c3343023d6455bed7cdf0e7c9/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/189d879659f4e44c3343023d6455bed7cdf0e7c9/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=189d879659f4e44c3343023d6455bed7cdf0e7c9", "patch": "@@ -2655,6 +2655,20 @@ fn test() -> u64 {\n     );\n }\n \n+#[test]\n+fn indexing_arrays() {\n+    assert_snapshot_matches!(\n+        infer(\"fn main() { &mut [9][2]; }\"),\n+        @r###\"\n+[10; 26) '{ &mut...[2]; }': ()\n+[12; 23) '&mut [9][2]': &mut {unknown}\n+[17; 20) '[9]': [i32;_]\n+[17; 23) '[9][2]': {unknown}\n+[18; 19) '9': i32\n+[21; 22) '2': i32\"###\n+    )\n+}\n+\n #[test]\n fn infer_macros_expanded() {\n     assert_snapshot_matches!("}]}