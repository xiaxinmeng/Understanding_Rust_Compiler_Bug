{"sha": "8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiYmI2MmY4NDljNmI5NzkwMDc1MWFjMGYwY2ZmMGQ0YzliMTMyOGE=", "commit": {"author": {"name": "Tom Tromey", "email": "tom@tromey.com", "date": "2018-09-26T18:58:10Z"}, "committer": {"name": "Tom Tromey", "email": "tom@tromey.com", "date": "2018-10-30T18:09:04Z"}, "message": "Update enum debuginfo tests\n\nBug #52452 notes some debuginfo test regressions when moving to gdb\n8.1.  This series will also cause versions of gdb before 8.2 to fail\nwhen a recent LLVM is used -- DW_TAG_variant_part support was not\nadded until 8.2.\n\nThis patch updates one of the builders to a later version of Ubuntu,\nwhich comes with gdb 8.2.  It updates the relevant tests to require\nboth a new-enough LLVM and a new-enough gdb; the subsequent patch\narranges to continue testing the fallback mode.\n\nThe \"gdbg\" results are removed from these tests because the tests now\nrequire a rust-enabled gdb.\n\nIf you read closely, you'll see that some of the lldb results in this\npatch still look a bit strange.  This will be addressed in a\nsubsequent patch; I believe the fix is to disable the Python\npretty-printers when lldb is rust-enabled.", "tree": {"sha": "b0d8e2fa1527aa39329f076985ca0c2c6f726871", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0d8e2fa1527aa39329f076985ca0c2c6f726871"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "html_url": "https://github.com/rust-lang/rust/commit/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/comments", "author": {"login": "tromey", "id": 1557670, "node_id": "MDQ6VXNlcjE1NTc2NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tromey", "html_url": "https://github.com/tromey", "followers_url": "https://api.github.com/users/tromey/followers", "following_url": "https://api.github.com/users/tromey/following{/other_user}", "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tromey/subscriptions", "organizations_url": "https://api.github.com/users/tromey/orgs", "repos_url": "https://api.github.com/users/tromey/repos", "events_url": "https://api.github.com/users/tromey/events{/privacy}", "received_events_url": "https://api.github.com/users/tromey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tromey", "id": 1557670, "node_id": "MDQ6VXNlcjE1NTc2NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tromey", "html_url": "https://github.com/tromey", "followers_url": "https://api.github.com/users/tromey/followers", "following_url": "https://api.github.com/users/tromey/following{/other_user}", "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tromey/subscriptions", "organizations_url": "https://api.github.com/users/tromey/orgs", "repos_url": "https://api.github.com/users/tromey/repos", "events_url": "https://api.github.com/users/tromey/events{/privacy}", "received_events_url": "https://api.github.com/users/tromey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da7b6b4b4dcdf9adf25eca12293be029ce9ce24c", "url": "https://api.github.com/repos/rust-lang/rust/commits/da7b6b4b4dcdf9adf25eca12293be029ce9ce24c", "html_url": "https://github.com/rust-lang/rust/commit/da7b6b4b4dcdf9adf25eca12293be029ce9ce24c"}], "stats": {"total": 208, "additions": 96, "deletions": 112}, "files": [{"sha": "dd94f2652b4c9a86a9145cec5114dacdaec428d9", "filename": "src/ci/docker/x86_64-gnu/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Fci%2Fdocker%2Fx86_64-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Fci%2Fdocker%2Fx86_64-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu%2FDockerfile?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -1,4 +1,4 @@\n-FROM ubuntu:16.04\n+FROM ubuntu:18.10\n \n RUN apt-get update && apt-get install -y --no-install-recommends \\\n   g++ \\"}, {"sha": "dcd4588af76c7710b063a0dd63d1da6ec12b5b9b", "filename": "src/test/debuginfo/basic-types.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fbasic-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fbasic-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types.rs?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -16,6 +16,10 @@\n \n // min-lldb-version: 310\n \n+// This fails on lldb 6.0.1 on x86-64 Fedora 28; so mark it macOS-only\n+// for now.\n+// only-macos\n+\n // compile-flags:-g\n \n // === GDB TESTS ==================================================================================="}, {"sha": "8362934166cf56a7abeab87cc76e00929e2906fa", "filename": "src/test/debuginfo/borrowed-enum.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -9,8 +9,11 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// min-lldb-version: 310\n-// ignore-gdb-version: 7.11.90 - 7.12.9\n+\n+// Require LLVM with DW_TAG_variant_part and a gdb or lldb that can read it.\n+// min-system-llvm-version: 7.0\n+// min-gdb-version: 8.2\n+// rust-lldb\n \n // compile-flags:-g\n \n@@ -19,15 +22,12 @@\n // gdb-command:run\n \n // gdb-command:print *the_a_ref\n-// gdbg-check:$1 = {{RUST$ENUM$DISR = TheA, x = 0, y = 8970181431921507452}, {RUST$ENUM$DISR = TheA, [...]}}\n // gdbr-check:$1 = borrowed_enum::ABC::TheA{x: 0, y: 8970181431921507452}\n \n // gdb-command:print *the_b_ref\n-// gdbg-check:$2 = {{RUST$ENUM$DISR = TheB, [...]}, {RUST$ENUM$DISR = TheB, __0 = 0, __1 = 286331153, __2 = 286331153}}\n // gdbr-check:$2 = borrowed_enum::ABC::TheB(0, 286331153, 286331153)\n \n // gdb-command:print *univariant_ref\n-// gdbg-check:$3 = {{__0 = 4820353753753434}}\n // gdbr-check:$3 = borrowed_enum::Univariant::TheOnlyCase(4820353753753434)\n \n \n@@ -36,14 +36,11 @@\n // lldb-command:run\n \n // lldb-command:print *the_a_ref\n-// lldbg-check:[...]$0 = TheA { x: 0, y: 8970181431921507452 }\n-// lldbr-check:(borrowed_enum::ABC::TheA) *the_a_ref = TheA { borrowed_enum::ABC::TheA: 0, borrowed_enum::ABC::TheB: 8970181431921507452 }\n+// lldbr-check:(borrowed_enum::ABC::TheA) *the_a_ref = TheA { TheA: 0, TheB: 8970181431921507452 }\n // lldb-command:print *the_b_ref\n-// lldbg-check:[...]$1 = TheB(0, 286331153, 286331153)\n // lldbr-check:(borrowed_enum::ABC::TheB) *the_b_ref = { = 0 = 286331153 = 286331153 }\n // lldb-command:print *univariant_ref\n-// lldbg-check:[...]$2 = TheOnlyCase(4820353753753434)\n-// lldbr-check:(borrowed_enum::Univariant) *univariant_ref = { borrowed_enum::TheOnlyCase = { = 4820353753753434 } }\n+// lldbr-check:(borrowed_enum::Univariant) *univariant_ref = { TheOnlyCase = { = 4820353753753434 } }\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "715024a2ef9130ba800a9d5a35a167bfe37ce8fd", "filename": "src/test/debuginfo/cross-crate-spans.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fcross-crate-spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fcross-crate-spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fcross-crate-spans.rs?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -13,6 +13,10 @@\n \n // min-lldb-version: 310\n \n+// This fails on lldb 6.0.1 on x86-64 Fedora 28; so mark it macOS-only\n+// for now.\n+// only-macos\n+\n // aux-build:cross_crate_spans.rs\n extern crate cross_crate_spans;\n "}, {"sha": "77583ab10377919c75f57508134b781248a0d5fb", "filename": "src/test/debuginfo/destructured-for-loop-variable.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -12,6 +12,10 @@\n \n // min-lldb-version: 310\n \n+// This fails on lldb 6.0.1 on x86-64 Fedora 28; so mark it macOS-only\n+// for now.\n+// only-macos\n+\n // compile-flags:-g\n \n // === GDB TESTS ==================================================================================="}, {"sha": "988ec4a65f1e2a8e041d82f3727bd92daafd1885", "filename": "src/test/debuginfo/generic-enum-with-different-disr-sizes.rs", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fgeneric-enum-with-different-disr-sizes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fgeneric-enum-with-different-disr-sizes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-enum-with-different-disr-sizes.rs?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -12,43 +12,39 @@\n // ignore-lldb: FIXME(#27089)\n // min-lldb-version: 310\n \n+// Require LLVM with DW_TAG_variant_part and a gdb that can read it.\n+// min-system-llvm-version: 7.0\n+// min-gdb-version: 8.2\n+\n // compile-flags:-g\n \n // === GDB TESTS ===================================================================================\n // gdb-command:run\n \n // gdb-command:print eight_bytes1\n-// gdbg-check:$1 = {{RUST$ENUM$DISR = Variant1, __0 = 100}, {RUST$ENUM$DISR = Variant1, __0 = 100}}\n-// gdbr-check:$1 = generic_enum_with_different_disr_sizes::Enum::Variant1(100)\n+// gdbr-check:$1 = generic_enum_with_different_disr_sizes::Enum<f64>::Variant1(100)\n \n // gdb-command:print four_bytes1\n-// gdbg-check:$2 = {{RUST$ENUM$DISR = Variant1, __0 = 101}, {RUST$ENUM$DISR = Variant1, __0 = 101}}\n-// gdbr-check:$2 = generic_enum_with_different_disr_sizes::Enum::Variant1(101)\n+// gdbr-check:$2 = generic_enum_with_different_disr_sizes::Enum<i32>::Variant1(101)\n \n // gdb-command:print two_bytes1\n-// gdbg-check:$3 = {{RUST$ENUM$DISR = Variant1, __0 = 102}, {RUST$ENUM$DISR = Variant1, __0 = 102}}\n-// gdbr-check:$3 = generic_enum_with_different_disr_sizes::Enum::Variant1(102)\n+// gdbr-check:$3 = generic_enum_with_different_disr_sizes::Enum<i16>::Variant1(102)\n \n // gdb-command:print one_byte1\n-// gdbg-check:$4 = {{RUST$ENUM$DISR = Variant1, __0 = 65 'A'}, {RUST$ENUM$DISR = Variant1, __0 = 65 'A'}}\n-// gdbr-check:$4 = generic_enum_with_different_disr_sizes::Enum::Variant1(65)\n+// gdbr-check:$4 = generic_enum_with_different_disr_sizes::Enum<u8>::Variant1(65)\n \n \n // gdb-command:print eight_bytes2\n-// gdbg-check:$5 = {{RUST$ENUM$DISR = Variant2, __0 = 100}, {RUST$ENUM$DISR = Variant2, __0 = 100}}\n-// gdbr-check:$5 = generic_enum_with_different_disr_sizes::Enum::Variant2(100)\n+// gdbr-check:$5 = generic_enum_with_different_disr_sizes::Enum<f64>::Variant2(100)\n \n // gdb-command:print four_bytes2\n-// gdbg-check:$6 = {{RUST$ENUM$DISR = Variant2, __0 = 101}, {RUST$ENUM$DISR = Variant2, __0 = 101}}\n-// gdbr-check:$6 = generic_enum_with_different_disr_sizes::Enum::Variant2(101)\n+// gdbr-check:$6 = generic_enum_with_different_disr_sizes::Enum<i32>::Variant2(101)\n \n // gdb-command:print two_bytes2\n-// gdbg-check:$7 = {{RUST$ENUM$DISR = Variant2, __0 = 102}, {RUST$ENUM$DISR = Variant2, __0 = 102}}\n-// gdbr-check:$7 = generic_enum_with_different_disr_sizes::Enum::Variant2(102)\n+// gdbr-check:$7 = generic_enum_with_different_disr_sizes::Enum<i16>::Variant2(102)\n \n // gdb-command:print one_byte2\n-// gdbg-check:$8 = {{RUST$ENUM$DISR = Variant2, __0 = 65 'A'}, {RUST$ENUM$DISR = Variant2, __0 = 65 'A'}}\n-// gdbr-check:$8 = generic_enum_with_different_disr_sizes::Enum::Variant2(65)\n+// gdbr-check:$8 = generic_enum_with_different_disr_sizes::Enum<u8>::Variant2(65)\n \n // gdb-command:continue\n "}, {"sha": "e08cde03c477b92aa3a91e6dcfeef993d79fc0a5", "filename": "src/test/debuginfo/generic-struct-style-enum.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fgeneric-struct-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fgeneric-struct-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-struct-style-enum.rs?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -10,27 +10,26 @@\n \n // ignore-tidy-linelength\n // min-lldb-version: 310\n-// ignore-gdb-version: 7.11.90 - 7.12.9\n+\n+// Require LLVM with DW_TAG_variant_part and a gdb that can read it.\n+// min-system-llvm-version: 7.0\n+// min-gdb-version: 8.2\n \n // compile-flags:-g\n \n // gdb-command:set print union on\n // gdb-command:run\n \n // gdb-command:print case1\n-// gdbg-check:$1 = {{RUST$ENUM$DISR = Case1, a = 0, b = 31868, c = 31868, d = 31868, e = 31868}, {RUST$ENUM$DISR = Case1, [...]}, {RUST$ENUM$DISR = Case1, [...]}}\n-// gdbr-check:$1 = generic_struct_style_enum::Regular::Case1{a: 0, b: 31868, c: 31868, d: 31868, e: 31868}\n+// gdbr-check:$1 = generic_struct_style_enum::Regular<u16, u32, i64>::Case1{a: 0, b: 31868, c: 31868, d: 31868, e: 31868}\n \n // gdb-command:print case2\n-// gdbg-check:$2 = {{RUST$ENUM$DISR = Case2, [...]}, {RUST$ENUM$DISR = Case2, a = 0, b = 286331153, c = 286331153}, {RUST$ENUM$DISR = Case2, [...]}}\n-// gdbr-check:$2 = generic_struct_style_enum::Regular::Case2{a: 0, b: 286331153, c: 286331153}\n+// gdbr-check:$2 = generic_struct_style_enum::Regular<i16, u32, i64>::Case2{a: 0, b: 286331153, c: 286331153}\n \n // gdb-command:print case3\n-// gdbg-check:$3 = {{RUST$ENUM$DISR = Case3, [...]}, {RUST$ENUM$DISR = Case3, [...]}, {RUST$ENUM$DISR = Case3, a = 0, b = 6438275382588823897}}\n-// gdbr-check:$3 = generic_struct_style_enum::Regular::Case3{a: 0, b: 6438275382588823897}\n+// gdbr-check:$3 = generic_struct_style_enum::Regular<u16, i32, u64>::Case3{a: 0, b: 6438275382588823897}\n \n // gdb-command:print univariant\n-// gdbg-check:$4 = {{a = -1}}\n // gdbr-check:$4 = generic_struct_style_enum::Univariant<i32>::TheOnlyCase{a: -1}\n \n "}, {"sha": "ebd43daf46479f7ecf363d3ef2a0bc245bd99b77", "filename": "src/test/debuginfo/generic-tuple-style-enum.rs", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -9,8 +9,12 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// min-lldb-version: 310\n-// ignore-gdb-version: 7.11.90 - 7.12.9\n+\n+// Require LLVM with DW_TAG_variant_part and a gdb and lldb that can\n+// read it.\n+// min-system-llvm-version: 7.0\n+// min-gdb-version: 8.2\n+// rust-lldb\n \n // compile-flags:-g\n \n@@ -20,19 +24,15 @@\n // gdb-command:run\n \n // gdb-command:print case1\n-// gdbg-check:$1 = {{RUST$ENUM$DISR = Case1, __0 = 0, __1 = 31868, __2 = 31868, __3 = 31868, __4 = 31868}, {RUST$ENUM$DISR = Case1, [...]}, {RUST$ENUM$DISR = Case1, [...]}}\n-// gdbr-check:$1 = generic_tuple_style_enum::Regular::Case1(0, 31868, 31868, 31868, 31868)\n+// gdbr-check:$1 = generic_tuple_style_enum::Regular<u16, u32, u64>::Case1(0, 31868, 31868, 31868, 31868)\n \n // gdb-command:print case2\n-// gdbg-check:$2 = {{RUST$ENUM$DISR = Case2, [...]}, {RUST$ENUM$DISR = Case2, __0 = 0, __1 = 286331153, __2 = 286331153}, {RUST$ENUM$DISR = Case2, [...]}}\n-// gdbr-check:$2 = generic_tuple_style_enum::Regular::Case2(0, 286331153, 286331153)\n+// gdbr-check:$2 = generic_tuple_style_enum::Regular<i16, i32, i64>::Case2(0, 286331153, 286331153)\n \n // gdb-command:print case3\n-// gdbg-check:$3 = {{RUST$ENUM$DISR = Case3, [...]}, {RUST$ENUM$DISR = Case3, [...]}, {RUST$ENUM$DISR = Case3, __0 = 0, __1 = 6438275382588823897}}\n-// gdbr-check:$3 = generic_tuple_style_enum::Regular::Case3(0, 6438275382588823897)\n+// gdbr-check:$3 = generic_tuple_style_enum::Regular<i16, i32, i64>::Case3(0, 6438275382588823897)\n \n // gdb-command:print univariant\n-// gdbg-check:$4 = {{__0 = -1}}\n // gdbr-check:$4 = generic_tuple_style_enum::Univariant<i64>::TheOnlyCase(-1)\n \n \n@@ -41,20 +41,16 @@\n // lldb-command:run\n \n // lldb-command:print case1\n-// lldbg-check:[...]$0 = Case1(0, 31868, 31868, 31868, 31868)\n // lldbr-check:(generic_tuple_style_enum::Regular<u16, u32, u64>::Case1) case1 = { = 0 = 31868 = 31868 = 31868 = 31868 }\n \n // lldb-command:print case2\n-// lldbg-check:[...]$1 = Case2(0, 286331153, 286331153)\n-// lldbr-check:(generic_tuple_style_enum::Regular<i16, i32, i64>::Case2) case2 = Regular<i16, i32, i64>::Case2 { generic_tuple_style_enum::Regular<i16, i32, i64>::Case1: 0, generic_tuple_style_enum::Regular<i16, i32, i64>::Case2: 286331153, generic_tuple_style_enum::Regular<i16, i32, i64>::Case3: 286331153 }\n+// lldbr-check:(generic_tuple_style_enum::Regular<i16, i32, i64>::Case2) case2 = Regular<i16, i32, i64>::Case2 { Case1: 0, Case2: 286331153, Case3: 286331153 }\n \n // lldb-command:print case3\n-// lldbg-check:[...]$2 = Case3(0, 6438275382588823897)\n-// lldbr-check:(generic_tuple_style_enum::Regular<i16, i32, i64>::Case3) case3 = Regular<i16, i32, i64>::Case3 { generic_tuple_style_enum::Regular<i16, i32, i64>::Case1: 0, generic_tuple_style_enum::Regular<i16, i32, i64>::Case2: 6438275382588823897 }\n+// lldbr-check:(generic_tuple_style_enum::Regular<i16, i32, i64>::Case3) case3 = Regular<i16, i32, i64>::Case3 { Case1: 0, Case2: 6438275382588823897 }\n \n // lldb-command:print univariant\n-// lldbg-check:[...]$3 = TheOnlyCase(-1)\n-// lldbr-check:(generic_tuple_style_enum::Univariant<i64>) univariant = { generic_tuple_style_enum::TheOnlyCase = { = -1 } }\n+// lldbr-check:(generic_tuple_style_enum::Univariant<i64>) univariant = { TheOnlyCase = { = -1 } }\n \n #![feature(omit_gdb_pretty_printer_section)]\n #![omit_gdb_pretty_printer_section]"}, {"sha": "ffd402ec9361043f476b206a9e7208f883a1c4e0", "filename": "src/test/debuginfo/method-on-tuple-struct.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -74,7 +74,7 @@\n // STACK BY REF\n // lldb-command:print *self\n // lldbg-check:[...]$0 = TupleStruct(100, -100.5)\n-// lldbr-check:(method_on_tuple_struct::TupleStruct) *self = { = 100 = -100.5 }\n+// lldbr-check:(method_on_tuple_struct::TupleStruct) *self = TupleStruct(100, -100.5)\n // lldb-command:print arg1\n // lldbg-check:[...]$1 = -1\n // lldbr-check:(isize) arg1 = -1\n@@ -86,7 +86,7 @@\n // STACK BY VAL\n // lldb-command:print self\n // lldbg-check:[...]$3 = TupleStruct(100, -100.5)\n-// lldbr-check:(method_on_tuple_struct::TupleStruct) self = { = 100 = -100.5 }\n+// lldbr-check:(method_on_tuple_struct::TupleStruct) self = TupleStruct(100, -100.5)\n // lldb-command:print arg1\n // lldbg-check:[...]$4 = -3\n // lldbr-check:(isize) arg1 = -3\n@@ -98,7 +98,7 @@\n // OWNED BY REF\n // lldb-command:print *self\n // lldbg-check:[...]$6 = TupleStruct(200, -200.5)\n-// lldbr-check:(method_on_tuple_struct::TupleStruct) *self = { = 200 = -200.5 }\n+// lldbr-check:(method_on_tuple_struct::TupleStruct) *self = TupleStruct(200, -200.5)\n // lldb-command:print arg1\n // lldbg-check:[...]$7 = -5\n // lldbr-check:(isize) arg1 = -5\n@@ -110,7 +110,7 @@\n // OWNED BY VAL\n // lldb-command:print self\n // lldbg-check:[...]$9 = TupleStruct(200, -200.5)\n-// lldbr-check:(method_on_tuple_struct::TupleStruct) self = { = 200 = -200.5 }\n+// lldbr-check:(method_on_tuple_struct::TupleStruct) self = TupleStruct(200, -200.5)\n // lldb-command:print arg1\n // lldbg-check:[...]$10 = -7\n // lldbr-check:(isize) arg1 = -7\n@@ -122,7 +122,7 @@\n // OWNED MOVED\n // lldb-command:print *self\n // lldbg-check:[...]$12 = TupleStruct(200, -200.5)\n-// lldbr-check:(method_on_tuple_struct::TupleStruct) *self = { = 200 = -200.5 }\n+// lldbr-check:(method_on_tuple_struct::TupleStruct) *self = TupleStruct(200, -200.5)\n // lldb-command:print arg1\n // lldbg-check:[...]$13 = -9\n // lldbr-check:(isize) arg1 = -9"}, {"sha": "ab42b2eff99f858bffac19b006b2e23c015fa4ee", "filename": "src/test/debuginfo/nil-enum.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fnil-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fnil-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fnil-enum.rs?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -14,16 +14,21 @@\n // ignore-lldb\n \n \n+// Require LLVM with DW_TAG_variant_part and a gdb that can read it.\n+// gdb 8.2.0 crashes on this test case, see\n+// https://sourceware.org/bugzilla/show_bug.cgi?id=23626\n+// This will be fixed in the next release, which will be >= 8.2.1.\n+// min-system-llvm-version: 7.0\n+// min-gdb-version: 8.2.1\n+\n // compile-flags:-g\n // gdb-command:run\n \n // gdb-command:print first\n-// gdbg-check:$1 = {<No data fields>}\n-// gdbr-check:$1 = <error reading variable>\n+// gdbr-check:$1 = nil_enum::ANilEnum {<No data fields>}\n \n // gdb-command:print second\n-// gdbg-check:$2 = {<No data fields>}\n-// gdbr-check:$2 = <error reading variable>\n+// gdbr-check:$2 = nil_enum::AnotherNilEnum {<No data fields>}\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "647f95197894e52546814dc5c961e383feccea70", "filename": "src/test/debuginfo/recursive-struct.rs", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Frecursive-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Frecursive-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Frecursive-struct.rs?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -10,74 +10,63 @@\n \n // ignore-tidy-linelength\n // ignore-lldb\n-// ignore-gdb-version: 7.11.90 - 7.12.9\n+\n+// Require LLVM with DW_TAG_variant_part and a gdb that can read it.\n+// min-system-llvm-version: 7.0\n+// min-gdb-version: 8.2\n \n // compile-flags:-g\n \n // gdb-command:run\n \n // gdb-command:print stack_unique.value\n // gdb-check:$1 = 0\n-// gdbg-command:print stack_unique.next.RUST$ENCODED$ENUM$0$Empty.val->value\n // gdbr-command:print stack_unique.next.val.value\n // gdb-check:$2 = 1\n \n-// gdbg-command:print unique_unique->value\n // gdbr-command:print unique_unique.value\n // gdb-check:$3 = 2\n-// gdbg-command:print unique_unique->next.RUST$ENCODED$ENUM$0$Empty.val->value\n // gdbr-command:print unique_unique.next.val.value\n // gdb-check:$4 = 3\n \n // gdb-command:print vec_unique[0].value\n // gdb-check:$5 = 6.5\n-// gdbg-command:print vec_unique[0].next.RUST$ENCODED$ENUM$0$Empty.val->value\n // gdbr-command:print vec_unique[0].next.val.value\n // gdb-check:$6 = 7.5\n \n-// gdbg-command:print borrowed_unique->value\n // gdbr-command:print borrowed_unique.value\n // gdb-check:$7 = 8.5\n-// gdbg-command:print borrowed_unique->next.RUST$ENCODED$ENUM$0$Empty.val->value\n // gdbr-command:print borrowed_unique.next.val.value\n // gdb-check:$8 = 9.5\n \n // LONG CYCLE\n // gdb-command:print long_cycle1.value\n // gdb-check:$9 = 20\n-// gdbg-command:print long_cycle1.next->value\n // gdbr-command:print long_cycle1.next.value\n // gdb-check:$10 = 21\n-// gdbg-command:print long_cycle1.next->next->value\n // gdbr-command:print long_cycle1.next.next.value\n // gdb-check:$11 = 22\n-// gdbg-command:print long_cycle1.next->next->next->value\n // gdbr-command:print long_cycle1.next.next.next.value\n // gdb-check:$12 = 23\n \n // gdb-command:print long_cycle2.value\n // gdb-check:$13 = 24\n-// gdbg-command:print long_cycle2.next->value\n // gdbr-command:print long_cycle2.next.value\n // gdb-check:$14 = 25\n-// gdbg-command:print long_cycle2.next->next->value\n // gdbr-command:print long_cycle2.next.next.value\n // gdb-check:$15 = 26\n \n // gdb-command:print long_cycle3.value\n // gdb-check:$16 = 27\n-// gdbg-command:print long_cycle3.next->value\n // gdbr-command:print long_cycle3.next.value\n // gdb-check:$17 = 28\n \n // gdb-command:print long_cycle4.value\n // gdb-check:$18 = 29.5\n \n-// gdbg-command:print (*****long_cycle_w_anonymous_types).value\n // gdbr-command:print long_cycle_w_anonymous_types.value\n // gdb-check:$19 = 30\n \n-// gdbg-command:print (*****((*****long_cycle_w_anonymous_types).next.RUST$ENCODED$ENUM$0$Empty.val)).value\n // gdbr-command:print long_cycle_w_anonymous_types.next.val.value\n // gdb-check:$20 = 31\n "}, {"sha": "722ca00e0488908a64c70e6bdeb8c0f2b6d18f6f", "filename": "src/test/debuginfo/struct-style-enum.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -9,8 +9,12 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// min-lldb-version: 310\n-// ignore-gdb-version: 7.11.90 - 7.12.9\n+\n+// Require LLVM with DW_TAG_variant_part and a gdb and lldb that can\n+// read it.\n+// min-system-llvm-version: 7.0\n+// min-gdb-version: 8.2\n+// rust-lldb\n \n // compile-flags:-g\n \n@@ -20,19 +24,15 @@\n // gdb-command:run\n \n // gdb-command:print case1\n-// gdbg-check:$1 = {{RUST$ENUM$DISR = Case1, a = 0, b = 31868, c = 31868, d = 31868, e = 31868}, {RUST$ENUM$DISR = Case1, [...]}, {RUST$ENUM$DISR = Case1, [...]}}\n // gdbr-check:$1 = struct_style_enum::Regular::Case1{a: 0, b: 31868, c: 31868, d: 31868, e: 31868}\n \n // gdb-command:print case2\n-// gdbg-check:$2 = {{RUST$ENUM$DISR = Case2, [...]}, {RUST$ENUM$DISR = Case2, a = 0, b = 286331153, c = 286331153}, {RUST$ENUM$DISR = Case2, [...]}}\n // gdbr-check:$2 = struct_style_enum::Regular::Case2{a: 0, b: 286331153, c: 286331153}\n \n // gdb-command:print case3\n-// gdbg-check:$3 = {{RUST$ENUM$DISR = Case3, [...]}, {RUST$ENUM$DISR = Case3, [...]}, {RUST$ENUM$DISR = Case3, a = 0, b = 6438275382588823897}}\n // gdbr-check:$3 = struct_style_enum::Regular::Case3{a: 0, b: 6438275382588823897}\n \n // gdb-command:print univariant\n-// gdbg-check:$4 = {{a = -1}}\n // gdbr-check:$4 = struct_style_enum::Univariant::TheOnlyCase{a: -1}\n \n \n@@ -41,20 +41,16 @@\n // lldb-command:run\n \n // lldb-command:print case1\n-// lldbg-check:[...]$0 = Case1 { a: 0, b: 31868, c: 31868, d: 31868, e: 31868 }\n // lldbr-check:(struct_style_enum::Regular::Case1) case1 = { a = 0 b = 31868 c = 31868 d = 31868 e = 31868 }\n \n // lldb-command:print case2\n-// lldbg-check:[...]$1 = Case2 { a: 0, b: 286331153, c: 286331153 }\n-// lldbr-check:(struct_style_enum::Regular::Case2) case2 = Case2 { struct_style_enum::Regular::Case1: 0, struct_style_enum::Regular::Case2: 286331153, struct_style_enum::Regular::Case3: 286331153 }\n+// lldbr-check:(struct_style_enum::Regular::Case2) case2 = Case2 { Case1: 0, Case2: 286331153, Case3: 286331153 }\n \n // lldb-command:print case3\n-// lldbg-check:[...]$2 = Case3 { a: 0, b: 6438275382588823897 }\n-// lldbr-check:(struct_style_enum::Regular::Case3) case3 = Case3 { struct_style_enum::Regular::Case1: 0, struct_style_enum::Regular::Case2: 6438275382588823897 }\n+// lldbr-check:(struct_style_enum::Regular::Case3) case3 = Case3 { Case1: 0, Case2: 6438275382588823897 }\n \n // lldb-command:print univariant\n-// lldbg-check:[...]$3 = TheOnlyCase { a: -1 }\n-// lldbr-check:(struct_style_enum::Univariant) univariant = Univariant { struct_style_enum::TheOnlyCase: TheOnlyCase { a: -1 } }\n+// lldbr-check:(struct_style_enum::Univariant) univariant = Univariant { TheOnlyCase: TheOnlyCase { a: -1 } }\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "d976839f08c1135ae740d977c34f18a1787d5ea6", "filename": "src/test/debuginfo/tuple-style-enum.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -9,8 +9,12 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// min-lldb-version: 310\n-// ignore-gdb-version: 7.11.90 - 7.12.9\n+\n+// Require LLVM with DW_TAG_variant_part and a gdb and lldb that can\n+// read it.\n+// min-system-llvm-version: 7.0\n+// min-gdb-version: 8.2\n+// rust-lldb\n \n // compile-flags:-g\n \n@@ -20,19 +24,15 @@\n // gdb-command:run\n \n // gdb-command:print case1\n-// gdbg-check:$1 = {{RUST$ENUM$DISR = Case1, __0 = 0, __1 = 31868, __2 = 31868, __3 = 31868, __4 = 31868}, {RUST$ENUM$DISR = Case1, [...]}, {RUST$ENUM$DISR = Case1, [...]}}\n // gdbr-check:$1 = tuple_style_enum::Regular::Case1(0, 31868, 31868, 31868, 31868)\n \n // gdb-command:print case2\n-// gdbg-check:$2 = {{RUST$ENUM$DISR = Case2, [...]}, {RUST$ENUM$DISR = Case2, __0 = 0, __1 = 286331153, __2 = 286331153}, {RUST$ENUM$DISR = Case2, [...]}}\n // gdbr-check:$2 = tuple_style_enum::Regular::Case2(0, 286331153, 286331153)\n \n // gdb-command:print case3\n-// gdbg-check:$3 = {{RUST$ENUM$DISR = Case3, [...]}, {RUST$ENUM$DISR = Case3, [...]}, {RUST$ENUM$DISR = Case3, __0 = 0, __1 = 6438275382588823897}}\n // gdbr-check:$3 = tuple_style_enum::Regular::Case3(0, 6438275382588823897)\n \n // gdb-command:print univariant\n-// gdbg-check:$4 = {{__0 = -1}}\n // gdbr-check:$4 = tuple_style_enum::Univariant::TheOnlyCase(-1)\n \n \n@@ -41,20 +41,16 @@\n // lldb-command:run\n \n // lldb-command:print case1\n-// lldbg-check:[...]$0 = Case1(0, 31868, 31868, 31868, 31868)\n // lldbr-check:(tuple_style_enum::Regular::Case1) case1 = { = 0 = 31868 = 31868 = 31868 = 31868 }\n \n // lldb-command:print case2\n-// lldbg-check:[...]$1 = Case2(0, 286331153, 286331153)\n-// lldbr-check:(tuple_style_enum::Regular::Case2) case2 = Case2 { tuple_style_enum::Regular::Case1: 0, tuple_style_enum::Regular::Case2: 286331153, tuple_style_enum::Regular::Case3: 286331153 }\n+// lldbr-check:(tuple_style_enum::Regular::Case2) case2 = Case2 { Case1: 0, Case2: 286331153, Case3: 286331153 }\n \n // lldb-command:print case3\n-// lldbg-check:[...]$2 = Case3(0, 6438275382588823897)\n-// lldbr-check:(tuple_style_enum::Regular::Case3) case3 = Case3 { tuple_style_enum::Regular::Case1: 0, tuple_style_enum::Regular::Case2: 6438275382588823897 }\n+// lldbr-check:(tuple_style_enum::Regular::Case3) case3 = Case3 { Case1: 0, Case2: 6438275382588823897 }\n \n // lldb-command:print univariant\n-// lldbg-check:[...]$3 = TheOnlyCase(-1)\n-// lldbr-check:(tuple_style_enum::Univariant) univariant = { tuple_style_enum::TheOnlyCase = { = -1 } }\n+// lldbr-check:(tuple_style_enum::Univariant) univariant = { TheOnlyCase = { = -1 } }\n \n #![allow(unused_variables)]\n #![feature(omit_gdb_pretty_printer_section)]"}, {"sha": "aab8edc55f74c108c2c07db5f4745165e5df27d2", "filename": "src/test/debuginfo/unique-enum.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Funique-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Funique-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Funique-enum.rs?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -9,8 +9,12 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// min-lldb-version: 310\n-// ignore-gdb-version: 7.11.90 - 7.12.9\n+\n+// Require LLVM with DW_TAG_variant_part and a gdb and lldb that can\n+// read it.\n+// min-system-llvm-version: 7.0\n+// min-gdb-version: 8.2\n+// rust-lldb\n \n // compile-flags:-g\n \n@@ -19,15 +23,12 @@\n // gdb-command:run\n \n // gdb-command:print *the_a\n-// gdbg-check:$1 = {{RUST$ENUM$DISR = TheA, x = 0, y = 8970181431921507452}, {RUST$ENUM$DISR = TheA, [...]}}\n // gdbr-check:$1 = unique_enum::ABC::TheA{x: 0, y: 8970181431921507452}\n \n // gdb-command:print *the_b\n-// gdbg-check:$2 = {{RUST$ENUM$DISR = TheB, [...]}, {RUST$ENUM$DISR = TheB, __0 = 0, __1 = 286331153, __2 = 286331153}}\n // gdbr-check:$2 = unique_enum::ABC::TheB(0, 286331153, 286331153)\n \n // gdb-command:print *univariant\n-// gdbg-check:$3 = {{__0 = 123234}}\n // gdbr-check:$3 = unique_enum::Univariant::TheOnlyCase(123234)\n \n \n@@ -36,16 +37,13 @@\n // lldb-command:run\n \n // lldb-command:print *the_a\n-// lldbg-check:[...]$0 = TheA { x: 0, y: 8970181431921507452 }\n-// lldbr-check:(unique_enum::ABC::TheA) *the_a = TheA { unique_enum::ABC::TheA: 0, unique_enum::ABC::TheB: 8970181431921507452 }\n+// lldbr-check:(unique_enum::ABC::TheA) *the_a = TheA { TheA: 0, TheB: 8970181431921507452 }\n \n // lldb-command:print *the_b\n-// lldbg-check:[...]$1 = TheB(0, 286331153, 286331153)\n // lldbr-check:(unique_enum::ABC::TheB) *the_b = { = 0 = 286331153 = 286331153 }\n \n // lldb-command:print *univariant\n-// lldbg-check:[...]$2 = TheOnlyCase(123234)\n-// lldbr-check:(unique_enum::Univariant) *univariant = { unique_enum::TheOnlyCase = { = 123234 } }\n+// lldbr-check:(unique_enum::Univariant) *univariant = { TheOnlyCase = { = 123234 } }\n \n #![allow(unused_variables)]\n #![feature(box_syntax)]"}, {"sha": "39267edaac04566b535657a5ec1920928b7a881f", "filename": "src/test/debuginfo/vec-slices.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bbb62f849c6b97900751ac0f0cff0d4c9b1328a/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs?ref=8bbb62f849c6b97900751ac0f0cff0d4c9b1328a", "patch": "@@ -99,7 +99,7 @@\n \n // lldb-command:print padded_tuple\n // lldbg-check:[...]$4 = &[(6, 7), (8, 9)]\n-// lldbr-check:(&[(i32, i16)]) padded_tuple = { data_ptr = *0x555555554ff0 length = 2 }\n+// lldbr-check:(&[(i32, i16)]) padded_tuple = { data_ptr = *0x555555555030 length = 2 }\n \n // lldb-command:print padded_struct\n // lldbg-check:[...]$5 = &[AStruct { x: 10, y: 11, z: 12 }, AStruct { x: 13, y: 14, z: 15 }]"}]}