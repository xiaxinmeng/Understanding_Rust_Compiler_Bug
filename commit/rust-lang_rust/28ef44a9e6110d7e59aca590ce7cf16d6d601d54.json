{"sha": "28ef44a9e6110d7e59aca590ce7cf16d6d601d54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4ZWY0NGE5ZTYxMTBkN2U1OWFjYTU5MGNlN2NmMTZkNmQ2MDFkNTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-25T09:04:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-25T09:04:30Z"}, "message": "Auto merge of #27974 - Diggsey:issue-27952, r=alexcrichton\n\nFixes #27952", "tree": {"sha": "9308d017db516e1daff767fd865bd198cb63cc26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9308d017db516e1daff767fd865bd198cb63cc26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28ef44a9e6110d7e59aca590ce7cf16d6d601d54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28ef44a9e6110d7e59aca590ce7cf16d6d601d54", "html_url": "https://github.com/rust-lang/rust/commit/28ef44a9e6110d7e59aca590ce7cf16d6d601d54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28ef44a9e6110d7e59aca590ce7cf16d6d601d54/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e195aa84b482e01b6eadf14211e4d880063a6794", "url": "https://api.github.com/repos/rust-lang/rust/commits/e195aa84b482e01b6eadf14211e4d880063a6794", "html_url": "https://github.com/rust-lang/rust/commit/e195aa84b482e01b6eadf14211e4d880063a6794"}, {"sha": "19dc4d0a306852a132b8be3614c6cb49658f0c57", "url": "https://api.github.com/repos/rust-lang/rust/commits/19dc4d0a306852a132b8be3614c6cb49658f0c57", "html_url": "https://github.com/rust-lang/rust/commit/19dc4d0a306852a132b8be3614c6cb49658f0c57"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "b7249cd8d0f3d77bbc3294853e85702039d85a41", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/28ef44a9e6110d7e59aca590ce7cf16d6d601d54/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28ef44a9e6110d7e59aca590ce7cf16d6d601d54/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=28ef44a9e6110d7e59aca590ce7cf16d6d601d54", "patch": "@@ -19,6 +19,7 @@\n #![feature(str_char)]\n #![feature(test)]\n #![feature(vec_push_all)]\n+#![feature(path_components_peek)]\n \n #![deny(warnings)]\n "}, {"sha": "96e903d3544ecffa9f6866a24daa0df487a7b7fe", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28ef44a9e6110d7e59aca590ce7cf16d6d601d54/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28ef44a9e6110d7e59aca590ce7cf16d6d601d54/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=28ef44a9e6110d7e59aca590ce7cf16d6d601d54", "patch": "@@ -25,7 +25,7 @@ use std::fs::{self, File};\n use std::io::BufReader;\n use std::io::prelude::*;\n use std::net::TcpStream;\n-use std::path::{Path, PathBuf};\n+use std::path::{Path, PathBuf, Component};\n use std::process::{Command, Output, ExitStatus};\n \n pub fn run(config: Config, testfile: &Path) {\n@@ -952,6 +952,9 @@ fn check_expected_errors(expected_errors: Vec<errors::ExpectedError>,\n     //    filename:line1:col1: line2:col2: *warning:* msg\n     // where line1:col1: is the starting point, line2:col2:\n     // is the ending point, and * represents ANSI color codes.\n+    //\n+    // This pattern is ambiguous on windows, because filename may contain\n+    // a colon, so any path prefix must be detected and removed first.\n     for line in proc_res.stderr.lines() {\n         let mut was_expected = false;\n         let mut prev = 0;\n@@ -1006,7 +1009,16 @@ fn check_expected_errors(expected_errors: Vec<errors::ExpectedError>,\n     }\n }\n \n-fn is_compiler_error_or_warning(line: &str) -> bool {\n+fn is_compiler_error_or_warning(mut line: &str) -> bool {\n+    // Remove initial prefix which may contain a colon\n+    let mut components = Path::new(line).components();\n+    if let Some(Component::Prefix(_)) = components.peek() {\n+        components.next();\n+    }\n+\n+    // Safe as path was originally constructed from a &str ^\n+    line = components.as_path().to_str().unwrap();\n+\n     let mut i = 0;\n     return\n         scan_until_char(line, ':', &mut i) &&"}]}