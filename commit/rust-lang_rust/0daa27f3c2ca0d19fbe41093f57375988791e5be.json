{"sha": "0daa27f3c2ca0d19fbe41093f57375988791e5be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkYWEyN2YzYzJjYTBkMTlmYmU0MTA5M2Y1NzM3NTk4ODc5MWU1YmU=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-05-31T16:52:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-31T16:52:47Z"}, "message": "Rollup merge of #42277 - citizen428:remove-crate-type-metadata, r=nikomatsakis\n\nRemove --crate-type=metadata deprecation warning\n\nFixes #38640", "tree": {"sha": "797aa8c25d80ab542bf3027008eed1feaba8dbde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/797aa8c25d80ab542bf3027008eed1feaba8dbde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0daa27f3c2ca0d19fbe41093f57375988791e5be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0daa27f3c2ca0d19fbe41093f57375988791e5be", "html_url": "https://github.com/rust-lang/rust/commit/0daa27f3c2ca0d19fbe41093f57375988791e5be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0daa27f3c2ca0d19fbe41093f57375988791e5be/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0df1d4e805c8f521b541592818bca0379434637", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0df1d4e805c8f521b541592818bca0379434637", "html_url": "https://github.com/rust-lang/rust/commit/c0df1d4e805c8f521b541592818bca0379434637"}, {"sha": "9873acc54b03e2caff16bde83962adeee8d0387b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9873acc54b03e2caff16bde83962adeee8d0387b", "html_url": "https://github.com/rust-lang/rust/commit/9873acc54b03e2caff16bde83962adeee8d0387b"}], "stats": {"total": 18, "additions": 4, "deletions": 14}, "files": [{"sha": "589489b49b4fd1a629e51a8875df09f66fbf4742", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0daa27f3c2ca0d19fbe41093f57375988791e5be/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0daa27f3c2ca0d19fbe41093f57375988791e5be/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=0daa27f3c2ca0d19fbe41093f57375988791e5be", "patch": "@@ -1354,7 +1354,7 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n     };\n \n     let unparsed_crate_types = matches.opt_strs(\"crate-type\");\n-    let (crate_types, emit_metadata) = parse_crate_types_from_list(unparsed_crate_types)\n+    let crate_types = parse_crate_types_from_list(unparsed_crate_types)\n         .unwrap_or_else(|e| early_error(error_format, &e[..]));\n \n     let mut lint_opts = vec![];\n@@ -1402,9 +1402,7 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n             }\n         }\n     };\n-    if emit_metadata {\n-        output_types.insert(OutputType::Metadata, None);\n-    } else if output_types.is_empty() {\n+    if output_types.is_empty() {\n         output_types.insert(OutputType::Exe, None);\n     }\n \n@@ -1629,9 +1627,8 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n }\n \n pub fn parse_crate_types_from_list(list_list: Vec<String>)\n-                                   -> Result<(Vec<CrateType>, bool), String> {\n+                                   -> Result<Vec<CrateType>, String> {\n     let mut crate_types: Vec<CrateType> = Vec::new();\n-    let mut emit_metadata = false;\n     for unparsed_crate_type in &list_list {\n         for part in unparsed_crate_type.split(',') {\n             let new_part = match part {\n@@ -1642,13 +1639,6 @@ pub fn parse_crate_types_from_list(list_list: Vec<String>)\n                 \"cdylib\"    => CrateTypeCdylib,\n                 \"bin\"       => CrateTypeExecutable,\n                 \"proc-macro\" => CrateTypeProcMacro,\n-                // FIXME(#38640) remove this when Cargo is fixed.\n-                \"metadata\"  => {\n-                    early_warn(ErrorOutputType::default(), \"--crate-type=metadata is deprecated, \\\n-                                                            prefer --emit=metadata\");\n-                    emit_metadata = true;\n-                    CrateTypeRlib\n-                }\n                 _ => {\n                     return Err(format!(\"unknown crate type: `{}`\",\n                                        part));\n@@ -1660,7 +1650,7 @@ pub fn parse_crate_types_from_list(list_list: Vec<String>)\n         }\n     }\n \n-    return Ok((crate_types, emit_metadata));\n+    Ok(crate_types)\n }\n \n pub mod nightly_options {"}]}