{"sha": "96b86ea1a8989352798e6145fbb7c150470bc5c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2Yjg2ZWExYTg5ODkzNTI3OThlNjE0NWZiYjdjMTUwNDcwYmM1YzA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-20T14:39:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-20T14:39:57Z"}, "message": "Rollup merge of #73471 - raoulstrackx:raoul/fpu_tag_word, r=jethrogb\n\nPrevent attacker from manipulating FPU tag word used in SGX enclave\n\nInsufficient sanitization of the x87 FPU tag word in the trusted enclave runtime allowed unprivileged adversaries in the containing host application to induce incoherent or unexpected results for ABI-compliant compiled enclave application code that uses the x87 FPU.\n\nVulnerability was disclosed to us by Fritz Alder, Jo Van Bulck, David Oswald and Frank Piessens\n\ncc: @jethrogb", "tree": {"sha": "dcb813067116788e4bfed678e0ab72fdc421b76e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcb813067116788e4bfed678e0ab72fdc421b76e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96b86ea1a8989352798e6145fbb7c150470bc5c0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe7h++CRBK7hj4Ov3rIwAAdHIIACDhbKiW03XcwLnuKhiwWQlU\nbkaGaYjvVw5dNr3Ww0lw2cXZEO45U71kb3teK0zzGJMrN95KgLezg6H+uaH6I51y\nC4nUhqRARisyk+NW1ix8Z8Ja6U2OBRtMstJzHCbsySaCMgUlJFfwVzWk8PNqPXXt\nKGJPT3LElG+7X0s7zSw8aa8+sL4wO+sJLRRshoo3ao3Q+XolbqxLo9XzWDWhAVKP\nkNTMaaUekKar6uda51snwLV/1d8HIturEgAoRvs0szcCfVCH4bOgTEZIoEM1OdrY\nTk6HIwBQJwXlygp3LTec0gaVVoCA+Fa8ZmlPhps2YZDHcbJcZ1lkZQfztJXOeiI=\n=/Mbu\n-----END PGP SIGNATURE-----\n", "payload": "tree dcb813067116788e4bfed678e0ab72fdc421b76e\nparent 7930ee68746249238ecaa846ebfa2bcdc97b1da7\nparent 33b304c5e0a620350e0eba0ceda2aab23f3b4e6f\nauthor Ralf Jung <post@ralfj.de> 1592663997 +0200\ncommitter GitHub <noreply@github.com> 1592663997 +0200\n\nRollup merge of #73471 - raoulstrackx:raoul/fpu_tag_word, r=jethrogb\n\nPrevent attacker from manipulating FPU tag word used in SGX enclave\n\nInsufficient sanitization of the x87 FPU tag word in the trusted enclave runtime allowed unprivileged adversaries in the containing host application to induce incoherent or unexpected results for ABI-compliant compiled enclave application code that uses the x87 FPU.\n\nVulnerability was disclosed to us by Fritz Alder, Jo Van Bulck, David Oswald and Frank Piessens\n\ncc: @jethrogb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96b86ea1a8989352798e6145fbb7c150470bc5c0", "html_url": "https://github.com/rust-lang/rust/commit/96b86ea1a8989352798e6145fbb7c150470bc5c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96b86ea1a8989352798e6145fbb7c150470bc5c0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7930ee68746249238ecaa846ebfa2bcdc97b1da7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7930ee68746249238ecaa846ebfa2bcdc97b1da7", "html_url": "https://github.com/rust-lang/rust/commit/7930ee68746249238ecaa846ebfa2bcdc97b1da7"}, {"sha": "33b304c5e0a620350e0eba0ceda2aab23f3b4e6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/33b304c5e0a620350e0eba0ceda2aab23f3b4e6f", "html_url": "https://github.com/rust-lang/rust/commit/33b304c5e0a620350e0eba0ceda2aab23f3b4e6f"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "fc6ce5770338e6453ac0c64732dfed4f8a3c52f4", "filename": "src/libstd/sys/sgx/abi/entry.S", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/96b86ea1a8989352798e6145fbb7c150470bc5c0/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S", "raw_url": "https://github.com/rust-lang/rust/raw/96b86ea1a8989352798e6145fbb7c150470bc5c0/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fentry.S?ref=96b86ea1a8989352798e6145fbb7c150470bc5c0", "patch": "@@ -26,18 +26,10 @@ IMAGE_BASE:\n .Lxsave_clear:\n .org .+24\n .Lxsave_mxcsr:\n-    .int 0\n+    .short 0x1f80\n \n /*  We can store a bunch of data in the gap between MXCSR and the XSAVE header */\n \n-/* MXCSR initialization value for ABI */\n-.Lmxcsr_init:\n-    .int 0x1f80\n-\n-/* x87 FPU control word initialization value for ABI */\n-.Lfpucw_init:\n-    .int 0x037f\n-\n /*  The following symbols point at read-only data that will be filled in by the */\n /*  post-linker. */\n \n@@ -177,13 +169,17 @@ sgx_entry:\n     jz .Lskip_debug_init\n     mov %r10,%gs:tcsls_debug_panic_buf_ptr\n .Lskip_debug_init:\n+/*  reset cpu state */\n+    mov %rdx, %r10\n+    mov $-1, %rax\n+    mov $-1, %rdx\n+    xrstor .Lxsave_clear(%rip)\n+    mov %r10, %rdx\n+\n /*  check if returning from usercall */\n     mov %gs:tcsls_last_rsp,%r11\n     test %r11,%r11\n     jnz .Lusercall_ret\n-/*  reset user state */\n-    ldmxcsr .Lmxcsr_init(%rip)\n-    fldcw .Lfpucw_init(%rip)\n /*  setup stack */\n     mov %gs:tcsls_tos,%rsp /*  initially, RSP is not set to the correct value */\n                            /*  here. This is fixed below under \"adjust stack\". */"}]}