{"sha": "a1a04e08428f2e2e26fd88c40141f7465f708c4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExYTA0ZTA4NDI4ZjJlMmUyNmZkODhjNDAxNDFmNzQ2NWY3MDhjNGU=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-12-02T21:15:53Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-03-21T19:54:05Z"}, "message": "add transmute-via-iterators bench", "tree": {"sha": "dc0a07b206a637fdafed35e2c2aca8afdfb25cb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc0a07b206a637fdafed35e2c2aca8afdfb25cb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1a04e08428f2e2e26fd88c40141f7465f708c4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1a04e08428f2e2e26fd88c40141f7465f708c4e", "html_url": "https://github.com/rust-lang/rust/commit/a1a04e08428f2e2e26fd88c40141f7465f708c4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1a04e08428f2e2e26fd88c40141f7465f708c4e/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f82664191d0e8764b7435b9d72eb0e366b8b1464", "url": "https://api.github.com/repos/rust-lang/rust/commits/f82664191d0e8764b7435b9d72eb0e366b8b1464", "html_url": "https://github.com/rust-lang/rust/commit/f82664191d0e8764b7435b9d72eb0e366b8b1464"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "7a098219ce4a75759f4a3436f3dfc93a6b605be8", "filename": "library/alloc/benches/vec.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a1a04e08428f2e2e26fd88c40141f7465f708c4e/library%2Falloc%2Fbenches%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1a04e08428f2e2e26fd88c40141f7465f708c4e/library%2Falloc%2Fbenches%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fbenches%2Fvec.rs?ref=a1a04e08428f2e2e26fd88c40141f7465f708c4e", "patch": "@@ -548,6 +548,22 @@ fn bench_in_place_zip_iter_mut(b: &mut Bencher) {\n     black_box(data);\n }\n \n+pub fn vec_cast<T, U>(input: Vec<T>) -> Vec<U> {\n+    input.into_iter().map(|e| unsafe { std::mem::transmute_copy(&e) }).collect()\n+}\n+\n+#[bench]\n+fn bench_transmute(b: &mut Bencher) {\n+    let mut vec = vec![10u32; 100];\n+    b.bytes = 800; // 2 casts x 4 bytes x 100\n+    b.iter(|| {\n+        let v = std::mem::take(&mut vec);\n+        let v = black_box(vec_cast::<u32, i32>(v));\n+        let v = black_box(vec_cast::<i32, u32>(v));\n+        vec = v;\n+    });\n+}\n+\n #[derive(Clone)]\n struct Droppable(usize);\n "}]}