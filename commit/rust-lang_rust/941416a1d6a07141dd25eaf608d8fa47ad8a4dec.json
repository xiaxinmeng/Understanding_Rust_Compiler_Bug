{"sha": "941416a1d6a07141dd25eaf608d8fa47ad8a4dec", "node_id": "C_kwDOAAsO6NoAKDk0MTQxNmExZDZhMDcxNDFkZDI1ZWFmNjA4ZDhmYTQ3YWQ4YTRkZWM", "commit": {"author": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-21T16:48:19Z"}, "committer": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-21T16:48:19Z"}, "message": "Add test for idents incl. raw idents", "tree": {"sha": "8f759922f9789c0729a0e2311090dece72c12b89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f759922f9789c0729a0e2311090dece72c12b89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/941416a1d6a07141dd25eaf608d8fa47ad8a4dec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/941416a1d6a07141dd25eaf608d8fa47ad8a4dec", "html_url": "https://github.com/rust-lang/rust/commit/941416a1d6a07141dd25eaf608d8fa47ad8a4dec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/941416a1d6a07141dd25eaf608d8fa47ad8a4dec/comments", "author": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cf99a9c71348c1ed53b6dda7da89d5ad0774b08", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cf99a9c71348c1ed53b6dda7da89d5ad0774b08", "html_url": "https://github.com/rust-lang/rust/commit/9cf99a9c71348c1ed53b6dda7da89d5ad0774b08"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "1277106d71d9b3331eea77043749279924d69daf", "filename": "crates/proc-macro-srv/src/tests/mod.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/941416a1d6a07141dd25eaf608d8fa47ad8a4dec/crates%2Fproc-macro-srv%2Fsrc%2Ftests%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941416a1d6a07141dd25eaf608d8fa47ad8a4dec/crates%2Fproc-macro-srv%2Fsrc%2Ftests%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Ftests%2Fmod.rs?ref=941416a1d6a07141dd25eaf608d8fa47ad8a4dec", "patch": "@@ -84,6 +84,20 @@ fn test_fn_like_mk_literals() {\n     );\n }\n \n+#[test]\n+fn test_fn_like_mk_idents() {\n+    // FIXME: this test is wrong: raw should be 'r#raw' but ABIs 1.64 and below\n+    // simply ignore `is_raw` when implementing the `Ident` interface.\n+    assert_expand(\n+        \"fn_like_mk_idents\",\n+        r#\"\"#,\n+        expect![[r#\"\n+            SUBTREE $\n+              IDENT   standard 4294967295\n+              IDENT   raw 4294967295\"#]],\n+    );\n+}\n+\n #[test]\n fn test_fn_like_macro_clone_literals() {\n     assert_expand(\n@@ -134,6 +148,7 @@ fn list_test_macros() {\n         fn_like_error [FuncLike]\n         fn_like_clone_tokens [FuncLike]\n         fn_like_mk_literals [FuncLike]\n+        fn_like_mk_idents [FuncLike]\n         attr_noop [Attr]\n         attr_panic [Attr]\n         attr_error [Attr]"}, {"sha": "7760774a3fc3a6f1e95419d9560dd1774e7ad7c5", "filename": "crates/proc-macro-test/imp/src/lib.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/941416a1d6a07141dd25eaf608d8fa47ad8a4dec/crates%2Fproc-macro-test%2Fimp%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941416a1d6a07141dd25eaf608d8fa47ad8a4dec/crates%2Fproc-macro-test%2Fimp%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-test%2Fimp%2Fsrc%2Flib.rs?ref=941416a1d6a07141dd25eaf608d8fa47ad8a4dec", "patch": "@@ -2,7 +2,7 @@\n \n #![warn(rust_2018_idioms, unused_lifetimes, semicolon_in_expressions_from_macros)]\n \n-use proc_macro::{Group, Ident, Literal, Punct, TokenStream, TokenTree};\n+use proc_macro::{Group, Ident, Literal, Punct, Span, TokenStream, TokenTree};\n \n #[proc_macro]\n pub fn fn_like_noop(args: TokenStream) -> TokenStream {\n@@ -40,6 +40,15 @@ pub fn fn_like_mk_literals(_args: TokenStream) -> TokenStream {\n     TokenStream::from_iter(trees)\n }\n \n+#[proc_macro]\n+pub fn fn_like_mk_idents(_args: TokenStream) -> TokenStream {\n+    let trees: Vec<TokenTree> = vec![\n+        TokenTree::from(Ident::new(\"standard\", Span::call_site())),\n+        TokenTree::from(Ident::new_raw(\"raw\", Span::call_site())),\n+    ];\n+    TokenStream::from_iter(trees)\n+}\n+\n #[proc_macro_attribute]\n pub fn attr_noop(_args: TokenStream, item: TokenStream) -> TokenStream {\n     item"}]}