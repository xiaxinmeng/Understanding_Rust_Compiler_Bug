{"sha": "2101a1fec0e53677e32d1389b44f70a987a97c8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMDFhMWZlYzBlNTM2NzdlMzJkMTM4OWI0NGY3MGE5ODdhOTdjOGQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-01-25T01:29:09Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-02-02T12:20:57Z"}, "message": "Adjust tests to type inference changes\n\nThis makes some error messages ungreat, but those seem to be preexisting\nbugs that also apply to closures / return position `impl Trait` in\ngeneral.", "tree": {"sha": "d66a8daf1554459db79aed07acb4f834cd6fbd55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d66a8daf1554459db79aed07acb4f834cd6fbd55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2101a1fec0e53677e32d1389b44f70a987a97c8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2101a1fec0e53677e32d1389b44f70a987a97c8d", "html_url": "https://github.com/rust-lang/rust/commit/2101a1fec0e53677e32d1389b44f70a987a97c8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2101a1fec0e53677e32d1389b44f70a987a97c8d/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32005fe1957fc163036fbe0da8b12d39a9fb54cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/32005fe1957fc163036fbe0da8b12d39a9fb54cb", "html_url": "https://github.com/rust-lang/rust/commit/32005fe1957fc163036fbe0da8b12d39a9fb54cb"}], "stats": {"total": 90, "additions": 60, "deletions": 30}, "files": [{"sha": "30788e3c1864bb1935c4ae4a1ee029b74c6e56a6", "filename": "src/test/ui/generator-yielding-or-returning-itself.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2101a1fec0e53677e32d1389b44f70a987a97c8d/src%2Ftest%2Fui%2Fgenerator-yielding-or-returning-itself.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2101a1fec0e53677e32d1389b44f70a987a97c8d/src%2Ftest%2Fui%2Fgenerator-yielding-or-returning-itself.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator-yielding-or-returning-itself.rs?ref=2101a1fec0e53677e32d1389b44f70a987a97c8d", "patch": "@@ -13,7 +13,7 @@ pub fn want_cyclic_generator_return<T>(_: T)\n \n fn supply_cyclic_generator_return() {\n     want_cyclic_generator_return(|| {\n-        //~^ ERROR closure/generator type that references itself\n+        //~^ ERROR type mismatch\n         if false { yield None.unwrap(); }\n         None.unwrap()\n     })"}, {"sha": "1572219cf4ac8d655c6ec95efa622fc41e72f2c3", "filename": "src/test/ui/generator-yielding-or-returning-itself.stderr", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2101a1fec0e53677e32d1389b44f70a987a97c8d/src%2Ftest%2Fui%2Fgenerator-yielding-or-returning-itself.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2101a1fec0e53677e32d1389b44f70a987a97c8d/src%2Ftest%2Fui%2Fgenerator-yielding-or-returning-itself.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator-yielding-or-returning-itself.stderr?ref=2101a1fec0e53677e32d1389b44f70a987a97c8d", "patch": "@@ -1,13 +1,13 @@\n-error[E0644]: closure/generator type that references itself\n-  --> $DIR/generator-yielding-or-returning-itself.rs:15:34\n+error[E0271]: type mismatch resolving `<[generator@$DIR/generator-yielding-or-returning-itself.rs:15:34: 19:6 _] as std::ops::Generator>::Return == [generator@$DIR/generator-yielding-or-returning-itself.rs:15:34: 19:6 _]`\n+  --> $DIR/generator-yielding-or-returning-itself.rs:15:5\n    |\n-LL |       want_cyclic_generator_return(|| {\n-   |  __________________________________^\n-LL | |\n-LL | |         if false { yield None.unwrap(); }\n-LL | |         None.unwrap()\n-LL | |     })\n-   | |_____^ cyclic type of infinite size\n+LL | pub fn want_cyclic_generator_return<T>(_: T)\n+   |        ----------------------------\n+LL |     where T: Generator<Yield = (), Return = T>\n+   |                                    ---------- required by this bound in `want_cyclic_generator_return`\n+...\n+LL |     want_cyclic_generator_return(|| {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cyclic type of infinite size\n    |\n    = note: closures cannot capture themselves or take themselves as argument;\n            this error may be the result of a recent compiler bug-fix,\n@@ -30,5 +30,4 @@ LL |     want_cyclic_generator_yield(|| {\n \n error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0271, E0644.\n-For more information about an error, try `rustc --explain E0271`.\n+For more information about this error, try `rustc --explain E0271`."}, {"sha": "cad004895349f7a95de07c881145db6c83a6cf57", "filename": "src/test/ui/generator/no-parameters-on-generators.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2101a1fec0e53677e32d1389b44f70a987a97c8d/src%2Ftest%2Fui%2Fgenerator%2Fno-parameters-on-generators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2101a1fec0e53677e32d1389b44f70a987a97c8d/src%2Ftest%2Fui%2Fgenerator%2Fno-parameters-on-generators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fno-parameters-on-generators.rs?ref=2101a1fec0e53677e32d1389b44f70a987a97c8d", "patch": "@@ -1,8 +1,10 @@\n #![feature(generators)]\n \n fn main() {\n-    let gen = |start| { //~ ERROR generators cannot have explicit parameters\n+    let gen = |start| {\n         //~^ ERROR type inside generator must be known in this context\n         yield;\n+        //~^ ERROR type inside generator must be known in this context\n+        //~| ERROR type inside generator must be known in this context\n     };\n }"}, {"sha": "f5f83b0476905766e2b1023bddeb39ec990ec1a4", "filename": "src/test/ui/generator/no-parameters-on-generators.stderr", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/2101a1fec0e53677e32d1389b44f70a987a97c8d/src%2Ftest%2Fui%2Fgenerator%2Fno-parameters-on-generators.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2101a1fec0e53677e32d1389b44f70a987a97c8d/src%2Ftest%2Fui%2Fgenerator%2Fno-parameters-on-generators.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fno-parameters-on-generators.stderr?ref=2101a1fec0e53677e32d1389b44f70a987a97c8d", "patch": "@@ -1,9 +1,3 @@\n-error[E0628]: generators cannot have explicit parameters\n-  --> $DIR/no-parameters-on-generators.rs:4:15\n-   |\n-LL |     let gen = |start| {\n-   |               ^^^^^^^\n-\n error[E0698]: type inside generator must be known in this context\n   --> $DIR/no-parameters-on-generators.rs:4:16\n    |\n@@ -16,6 +10,30 @@ note: the type is part of the generator because of this `yield`\n LL |         yield;\n    |         ^^^^^\n \n-error: aborting due to 2 previous errors\n+error[E0698]: type inside generator must be known in this context\n+  --> $DIR/no-parameters-on-generators.rs:6:9\n+   |\n+LL |         yield;\n+   |         ^^^^^ cannot infer type\n+   |\n+note: the type is part of the generator because of this `yield`\n+  --> $DIR/no-parameters-on-generators.rs:6:9\n+   |\n+LL |         yield;\n+   |         ^^^^^\n+\n+error[E0698]: type inside generator must be known in this context\n+  --> $DIR/no-parameters-on-generators.rs:6:9\n+   |\n+LL |         yield;\n+   |         ^^^^^ cannot infer type\n+   |\n+note: the type is part of the generator because of this `yield`\n+  --> $DIR/no-parameters-on-generators.rs:6:9\n+   |\n+LL |         yield;\n+   |         ^^^^^\n+\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0698`."}, {"sha": "7774ff48f56b730b7bdc028dccf03771e07cee1e", "filename": "src/test/ui/generator/type-mismatch-signature-deduction.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2101a1fec0e53677e32d1389b44f70a987a97c8d/src%2Ftest%2Fui%2Fgenerator%2Ftype-mismatch-signature-deduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2101a1fec0e53677e32d1389b44f70a987a97c8d/src%2Ftest%2Fui%2Fgenerator%2Ftype-mismatch-signature-deduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Ftype-mismatch-signature-deduction.rs?ref=2101a1fec0e53677e32d1389b44f70a987a97c8d", "patch": "@@ -2,15 +2,15 @@\n \n use std::ops::Generator;\n \n-fn foo() -> impl Generator<Return = i32> {\n+fn foo() -> impl Generator<Return = i32> { //~ ERROR type mismatch\n     || {\n         if false {\n-            return Ok(6); //~ ERROR mismatched types [E0308]\n+            return Ok(6);\n         }\n \n         yield ();\n \n-        5\n+        5 //~ ERROR mismatched types [E0308]\n     }\n }\n "}, {"sha": "8de77798ff48e632f3926ad9ba0879b3baf0aa7b", "filename": "src/test/ui/generator/type-mismatch-signature-deduction.stderr", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2101a1fec0e53677e32d1389b44f70a987a97c8d/src%2Ftest%2Fui%2Fgenerator%2Ftype-mismatch-signature-deduction.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2101a1fec0e53677e32d1389b44f70a987a97c8d/src%2Ftest%2Fui%2Fgenerator%2Ftype-mismatch-signature-deduction.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Ftype-mismatch-signature-deduction.stderr?ref=2101a1fec0e53677e32d1389b44f70a987a97c8d", "patch": "@@ -1,12 +1,23 @@\n error[E0308]: mismatched types\n-  --> $DIR/type-mismatch-signature-deduction.rs:8:20\n+  --> $DIR/type-mismatch-signature-deduction.rs:13:9\n    |\n-LL |             return Ok(6);\n-   |                    ^^^^^ expected `i32`, found enum `std::result::Result`\n+LL |         5\n+   |         ^ expected enum `std::result::Result`, found integer\n    |\n-   = note: expected type `i32`\n-              found enum `std::result::Result<{integer}, _>`\n+   = note: expected type `std::result::Result<{integer}, _>`\n+              found type `{integer}`\n \n-error: aborting due to previous error\n+error[E0271]: type mismatch resolving `<[generator@$DIR/type-mismatch-signature-deduction.rs:6:5: 14:6 _] as std::ops::Generator>::Return == i32`\n+  --> $DIR/type-mismatch-signature-deduction.rs:5:13\n+   |\n+LL | fn foo() -> impl Generator<Return = i32> {\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::result::Result`, found `i32`\n+   |\n+   = note: expected enum `std::result::Result<{integer}, _>`\n+              found type `i32`\n+   = note: the return type of a function must have a statically known size\n+\n+error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0308`.\n+Some errors have detailed explanations: E0271, E0308.\n+For more information about an error, try `rustc --explain E0271`."}]}