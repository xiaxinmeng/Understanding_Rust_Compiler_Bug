{"sha": "e99cdcfba847ade51791afbc95478306c6c3e7c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5OWNkY2ZiYTg0N2FkZTUxNzkxYWZiYzk1NDc4MzA2YzZjM2U3YzE=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-29T04:47:17Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-29T14:05:54Z"}, "message": "std: remove Encoder::emit_tup{,_elt} and Decoder::read_tup{,_elt}", "tree": {"sha": "0ec0e5eafe2b02b2b9ba3213f32211c23618c61b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ec0e5eafe2b02b2b9ba3213f32211c23618c61b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e99cdcfba847ade51791afbc95478306c6c3e7c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e99cdcfba847ade51791afbc95478306c6c3e7c1", "html_url": "https://github.com/rust-lang/rust/commit/e99cdcfba847ade51791afbc95478306c6c3e7c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e99cdcfba847ade51791afbc95478306c6c3e7c1/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "590bbcebe9401293e642c89a6a623f5461b96dde", "url": "https://api.github.com/repos/rust-lang/rust/commits/590bbcebe9401293e642c89a6a623f5461b96dde", "html_url": "https://github.com/rust-lang/rust/commit/590bbcebe9401293e642c89a6a623f5461b96dde"}], "stats": {"total": 57, "additions": 0, "deletions": 57}, "files": [{"sha": "12a4ea149093a97fb5bee6c48423d06cd1adf9b3", "filename": "src/libstd/ebml.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e99cdcfba847ade51791afbc95478306c6c3e7c1/src%2Flibstd%2Febml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e99cdcfba847ade51791afbc95478306c6c3e7c1/src%2Flibstd%2Febml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Febml.rs?ref=e99cdcfba847ade51791afbc95478306c6c3e7c1", "patch": "@@ -378,16 +378,6 @@ pub mod reader {\n             f()\n         }\n \n-        fn read_tup<T>(&self, len: uint, f: &fn() -> T) -> T {\n-            debug!(\"read_tup(len=%u)\", len);\n-            f()\n-        }\n-\n-        fn read_tup_elt<T>(&self, idx: uint, f: &fn() -> T) -> T {\n-            debug!(\"read_tup_elt(idx=%u)\", idx);\n-            f()\n-        }\n-\n         #[cfg(stage0)]\n         fn read_option<T>(&self, f: &fn(bool) -> T) -> T {\n             debug!(\"read_option()\");\n@@ -661,9 +651,6 @@ pub mod writer {\n             f()\n         }\n \n-        fn emit_tup(&self, _len: uint, f: &fn()) { f() }\n-        fn emit_tup_elt(&self, _idx: uint, f: &fn()) { f() }\n-\n         fn emit_option(&self, f: &fn()) {\n             self.emit_enum(\"Option\", f);\n         }"}, {"sha": "fe5b0cf88e674445e1da11f4b39fb95c19a51151", "filename": "src/libstd/json.rs", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/e99cdcfba847ade51791afbc95478306c6c3e7c1/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e99cdcfba847ade51791afbc95478306c6c3e7c1/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=e99cdcfba847ade51791afbc95478306c6c3e7c1", "patch": "@@ -158,13 +158,6 @@ impl serialize::Encoder for Encoder {\n         f();\n     }\n \n-    fn emit_tup(&self, len: uint, f: &fn()) {\n-        self.emit_seq(len, f);\n-    }\n-    fn emit_tup_elt(&self, idx: uint, f: &fn()) {\n-        self.emit_seq_elt(idx, f)\n-    }\n-\n     fn emit_option(&self, f: &fn()) { f(); }\n     fn emit_option_none(&self) { self.emit_nil(); }\n     fn emit_option_some(&self, f: &fn()) { f(); }\n@@ -287,12 +280,6 @@ impl serialize::Encoder for PrettyEncoder {\n         self.wr.write_str(\": \");\n         f();\n     }\n-    fn emit_tup(&self, sz: uint, f: &fn()) {\n-        self.emit_seq(sz, f);\n-    }\n-    fn emit_tup_elt(&self, idx: uint, f: &fn()) {\n-        self.emit_seq_elt(idx, f)\n-    }\n \n     fn emit_option(&self, f: &fn()) { f(); }\n     fn emit_option_none(&self) { self.emit_nil(); }\n@@ -905,24 +892,6 @@ impl<'self> serialize::Decoder for Decoder<'self> {\n         }\n     }\n \n-    fn read_tup<T>(&self, len: uint, f: &fn() -> T) -> T {\n-        debug!(\"read_tup(len=%u)\", len);\n-        let value = f();\n-        self.pop();\n-        value\n-    }\n-\n-    fn read_tup_elt<T>(&self, idx: uint, f: &fn() -> T) -> T {\n-        debug!(\"read_tup_elt(idx=%u)\", idx);\n-        match *self.peek() {\n-            List(ref list) => {\n-                self.stack.push(&list[idx]);\n-                f()\n-            }\n-            _ => fail!(~\"not a list\")\n-        }\n-    }\n-\n     fn read_option<T>(&self, f: &fn(bool) -> T) -> T {\n         match *self.peek() {\n             Null => { self.pop(); f(false) }"}, {"sha": "d0127bb09991528bbf140575cb7c2eb4033fb3cd", "filename": "src/libstd/serialize.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e99cdcfba847ade51791afbc95478306c6c3e7c1/src%2Flibstd%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e99cdcfba847ade51791afbc95478306c6c3e7c1/src%2Flibstd%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fserialize.rs?ref=e99cdcfba847ade51791afbc95478306c6c3e7c1", "patch": "@@ -53,9 +53,6 @@ pub trait Encoder {\n     fn emit_struct(&self, name: &str, _len: uint, f: &fn());\n     fn emit_field(&self, f_name: &str, f_idx: uint, f: &fn());\n \n-    fn emit_tup(&self, len: uint, f: &fn());\n-    fn emit_tup_elt(&self, idx: uint, f: &fn());\n-\n     // Specialized types:\n     fn emit_option(&self, f: &fn());\n     fn emit_option_none(&self);\n@@ -99,9 +96,6 @@ pub trait Decoder {\n     fn read_struct<T>(&self, name: &str, _len: uint, f: &fn() -> T) -> T;\n     fn read_field<T>(&self, name: &str, idx: uint, f: &fn() -> T) -> T;\n \n-    fn read_tup<T>(&self, sz: uint, f: &fn() -> T) -> T;\n-    fn read_tup_elt<T>(&self, idx: uint, f: &fn() -> T) -> T;\n-\n     // Specialized types:\n     fn read_option<T>(&self, f: &fn(bool) -> T) -> T;\n }"}, {"sha": "d4e1fa3abf737242f67d1eafa4f3b9669aad2411", "filename": "src/libsyntax/ext/auto_encode.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e99cdcfba847ade51791afbc95478306c6c3e7c1/src%2Flibsyntax%2Fext%2Fauto_encode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e99cdcfba847ade51791afbc95478306c6c3e7c1/src%2Flibsyntax%2Fext%2Fauto_encode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fauto_encode.rs?ref=e99cdcfba847ade51791afbc95478306c6c3e7c1", "patch": "@@ -1272,13 +1272,6 @@ mod test {\n             self.add_to_log(CallToEmitField (name.to_str(),idx)); f();\n         }\n \n-        fn emit_tup(&self, +_len: uint, f: &fn()) {\n-            self.add_unknown_to_log(); f();\n-        }\n-        fn emit_tup_elt(&self, +_idx: uint, f: &fn()) {\n-            self.add_unknown_to_log(); f();\n-        }\n-\n         fn emit_option(&self, f: &fn()) {\n             self.add_to_log(CallToEmitOption);\n             f();"}]}