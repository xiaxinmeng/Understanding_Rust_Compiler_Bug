{"sha": "23303cd0f8298c2d7b082fcb04919454c1c306ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzMzAzY2QwZjgyOThjMmQ3YjA4MmZjYjA0OTE5NDU0YzFjMzA2YWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-02T22:51:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-02T22:51:46Z"}, "message": "match scope", "tree": {"sha": "12c22fd573fb86f7718a68ec1d74eb62e401b2f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12c22fd573fb86f7718a68ec1d74eb62e401b2f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23303cd0f8298c2d7b082fcb04919454c1c306ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23303cd0f8298c2d7b082fcb04919454c1c306ab", "html_url": "https://github.com/rust-lang/rust/commit/23303cd0f8298c2d7b082fcb04919454c1c306ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23303cd0f8298c2d7b082fcb04919454c1c306ab/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83e2ab434cf20313c9248fbbe7e90f65f27d31ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/83e2ab434cf20313c9248fbbe7e90f65f27d31ce", "html_url": "https://github.com/rust-lang/rust/commit/83e2ab434cf20313c9248fbbe7e90f65f27d31ce"}], "stats": {"total": 83, "additions": 63, "deletions": 20}, "files": [{"sha": "42cd71eb56277dadaad04ec46a5dcd3084412ba3", "filename": "crates/libeditor/src/scope/fn_scope.rs", "status": "modified", "additions": 27, "deletions": 14, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/23303cd0f8298c2d7b082fcb04919454c1c306ab/crates%2Flibeditor%2Fsrc%2Fscope%2Ffn_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23303cd0f8298c2d7b082fcb04919454c1c306ab/crates%2Flibeditor%2Fsrc%2Fscope%2Ffn_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fscope%2Ffn_scope.rs?ref=23303cd0f8298c2d7b082fcb04919454c1c306ab", "patch": "@@ -189,7 +189,20 @@ fn compute_expr_scopes(expr: ast::Expr, scopes: &mut FnScopes, scope: ScopeId) {\n                 .chain(e.expr())\n                 .for_each(|expr| compute_expr_scopes(expr, scopes, scope));\n         }\n-\n+        ast::Expr::MatchExpr(e) => {\n+            if let Some(expr) = e.expr() {\n+                compute_expr_scopes(expr, scopes, scope);\n+            }\n+            for arm in e.match_arm_list().into_iter().flat_map(|it| it.arms()) {\n+                let scope = scopes.new_scope(scope);\n+                for pat in arm.pats() {\n+                    scopes.add_bindings(scope, pat);\n+                }\n+                if let Some(expr) = arm.expr() {\n+                    compute_expr_scopes(expr, scopes, scope);\n+                }\n+            }\n+        }\n         _ => {\n             expr.syntax().children()\n                 .filter_map(ast::Expr::cast)\n@@ -279,17 +292,17 @@ mod tests {\n         );\n     }\n \n-    // #[test]\n-    // fn test_match() {\n-    //     do_check(r\"\n-    //         fn quux() {\n-    //             match () {\n-    //                 Some(x) => {\n-    //                     <|>\n-    //                 }\n-    //             };\n-    //         }\",\n-    //         &[\"x\"],\n-    //     );\n-    // }\n+    #[test]\n+    fn test_match() {\n+        do_check(r\"\n+            fn quux() {\n+                match () {\n+                    Some(x) => {\n+                        <|>\n+                    }\n+                };\n+            }\",\n+            &[\"x\"],\n+        );\n+    }\n }"}, {"sha": "bdee635ae5d430a0b073b412a8e9c239dcbf8cc1", "filename": "crates/libsyntax2/src/ast/generated.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/23303cd0f8298c2d7b082fcb04919454c1c306ab/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23303cd0f8298c2d7b082fcb04919454c1c306ab/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs?ref=23303cd0f8298c2d7b082fcb04919454c1c306ab", "patch": "@@ -842,7 +842,17 @@ impl<'a> AstNode<'a> for MatchArm<'a> {\n     fn syntax(self) -> SyntaxNodeRef<'a> { self.syntax }\n }\n \n-impl<'a> MatchArm<'a> {}\n+impl<'a> MatchArm<'a> {\n+    pub fn pats(self) -> impl Iterator<Item = Pat<'a>> + 'a {\n+        super::children(self)\n+    }\n+pub fn guard(self) -> Option<MatchGuard<'a>> {\n+        super::child_opt(self)\n+    }\n+pub fn expr(self) -> Option<Expr<'a>> {\n+        super::child_opt(self)\n+    }\n+}\n \n // MatchArmList\n #[derive(Debug, Clone, Copy)]\n@@ -860,7 +870,11 @@ impl<'a> AstNode<'a> for MatchArmList<'a> {\n     fn syntax(self) -> SyntaxNodeRef<'a> { self.syntax }\n }\n \n-impl<'a> MatchArmList<'a> {}\n+impl<'a> MatchArmList<'a> {\n+    pub fn arms(self) -> impl Iterator<Item = MatchArm<'a>> + 'a {\n+        super::children(self)\n+    }\n+}\n \n // MatchExpr\n #[derive(Debug, Clone, Copy)]\n@@ -878,7 +892,13 @@ impl<'a> AstNode<'a> for MatchExpr<'a> {\n     fn syntax(self) -> SyntaxNodeRef<'a> { self.syntax }\n }\n \n-impl<'a> MatchExpr<'a> {}\n+impl<'a> MatchExpr<'a> {pub fn expr(self) -> Option<Expr<'a>> {\n+        super::child_opt(self)\n+    }\n+pub fn match_arm_list(self) -> Option<MatchArmList<'a>> {\n+        super::child_opt(self)\n+    }\n+}\n \n // MatchGuard\n #[derive(Debug, Clone, Copy)]"}, {"sha": "798725f7e483591760b4f027bb6de7d2a118ffbf", "filename": "crates/libsyntax2/src/grammar.ron", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/23303cd0f8298c2d7b082fcb04919454c1c306ab/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/23303cd0f8298c2d7b082fcb04919454c1c306ab/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron?ref=23303cd0f8298c2d7b082fcb04919454c1c306ab", "patch": "@@ -370,9 +370,19 @@ Grammar(\n             options: [ \"Block\" ]\n         ),\n         \"ReturnExpr\": (),\n-        \"MatchExpr\": (),\n-        \"MatchArmList\": (),\n-        \"MatchArm\": (),\n+        \"MatchExpr\": (\n+            options: [ \"Expr\", \"MatchArmList\" ],\n+        ),\n+        \"MatchArmList\": (\n+            collections: [ [\"arms\", \"MatchArm\"] ],\n+        ),\n+        \"MatchArm\": (\n+            options: [\n+                [ \"guard\", \"MatchGuard\" ],\n+                \"Expr\",\n+            ],\n+            collections: [ [ \"pats\", \"Pat\" ] ]\n+        ),\n         \"MatchGuard\": (),\n         \"StructLit\": (),\n         \"NamedFieldList\": (),"}]}