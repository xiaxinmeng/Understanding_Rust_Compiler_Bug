{"sha": "3036b001276a6e43409b08b7f2334ce72aeeb036", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMzZiMDAxMjc2YTZlNDM0MDliMDhiN2YyMzM0Y2U3MmFlZWIwMzY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-11-03T07:02:53Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-11-03T23:08:20Z"}, "message": "rustc: Default to static linking dylibs\n\nIf a dylib is being produced, the compiler will now first check to see if it can\nbe created entirely statically before falling back to dynamic dependencies. This\nbehavior can be overridden with `-C prefer-dynamic`.\n\nDue to the alteration in behavior, this is a breaking change. Any previous users\nrelying on dylibs implicitly maximizing dynamic dependencies should start\npassing `-C prefer-dynamic` to compilations.\n\nCloses #18499\n[breaking-change]", "tree": {"sha": "800c46187678153f93a3e4cdfc27a310464a8474", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/800c46187678153f93a3e4cdfc27a310464a8474"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3036b001276a6e43409b08b7f2334ce72aeeb036", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3036b001276a6e43409b08b7f2334ce72aeeb036", "html_url": "https://github.com/rust-lang/rust/commit/3036b001276a6e43409b08b7f2334ce72aeeb036", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3036b001276a6e43409b08b7f2334ce72aeeb036/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff50f24feb512075f3fcf9fc2801e4c853ff9316", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff50f24feb512075f3fcf9fc2801e4c853ff9316", "html_url": "https://github.com/rust-lang/rust/commit/ff50f24feb512075f3fcf9fc2801e4c853ff9316"}], "stats": {"total": 146, "additions": 105, "deletions": 41}, "files": [{"sha": "adc39c39f32b90199fd54a0c381a57898da9f57b", "filename": "mk/main.mk", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -148,12 +148,13 @@ endif\n # libraries, so in the interest of space, prefer dynamic linking throughout the\n # compilation process.\n #\n-# Note though that these flags are omitted for stage2+. This means that the\n-# snapshot will be generated with a statically linked rustc so we only have to\n-# worry about the distribution of one file (with its native dynamic\n+# Note though that these flags are omitted for the *bins* in stage2+. This means\n+# that the snapshot will be generated with a statically linked rustc so we only\n+# have to worry about the distribution of one file (with its native dynamic\n # dependencies)\n RUSTFLAGS_STAGE0 += -C prefer-dynamic\n RUSTFLAGS_STAGE1 += -C prefer-dynamic\n+RUST_LIB_FLAGS_ST2 += -C prefer-dynamic\n \n # Landing pads require a lot of codegen. We can get through bootstrapping faster\n # by not emitting them."}, {"sha": "ed7d8bb497d2818f573d749c2da833fb856de4be", "filename": "mk/target.mk", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -17,9 +17,9 @@ export CFG_COMPILER_HOST_TRIPLE\n # code, make sure that these common warnings are denied by default. These can\n # be overridden during development temporarily. For stage0, we allow warnings\n # which may be bugs in stage0 (should be fixed in stage1+)\n-WFLAGS_ST0 = -W warnings\n-WFLAGS_ST1 = -D warnings\n-WFLAGS_ST2 = -D warnings\n+RUST_LIB_FLAGS_ST0 += -W warnings\n+RUST_LIB_FLAGS_ST1 += -D warnings\n+RUST_LIB_FLAGS_ST2 += -D warnings\n \n # Macro that generates the full list of dependencies for a crate at a particular\n # stage/target/host tuple.\n@@ -80,7 +80,7 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$(4): \\\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES, \\\n \t    $$(dir $$@)$$(call CFG_RLIB_GLOB,$(4)))\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) \\\n-\t\t$$(WFLAGS_ST$(1)) \\\n+\t\t$$(RUST_LIB_FLAGS_ST$(1)) \\\n \t\t-L \"$$(RT_OUTPUT_DIR_$(2))\" \\\n \t\t-L \"$$(LLVM_LIBDIR_$(2))\" \\\n \t\t-L \"$$(dir $$(LLVM_STDCPP_LOCATION_$(2)))\" \\"}, {"sha": "0930347b20cbfdec5dd67e37685d3a132c68885d", "filename": "src/librustc/middle/dependency_format.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -123,6 +123,16 @@ fn calculate_type(sess: &session::Session,\n             return Vec::new();\n         }\n \n+        // Generating a dylib without `-C prefer-dynamic` means that we're going\n+        // to try to eagerly statically link all dependencies. This is normally\n+        // done for end-product dylibs, not intermediate products.\n+        config::CrateTypeDylib if !sess.opts.cg.prefer_dynamic => {\n+            match attempt_static(sess) {\n+                Some(v) => return v,\n+                None => {}\n+            }\n+        }\n+\n         // Everything else falls through below\n         config::CrateTypeExecutable | config::CrateTypeDylib => {},\n     }"}, {"sha": "ea22258f67d6b7e577200d283cd4847ee753f477", "filename": "src/test/auxiliary/issue-12133-dylib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Fauxiliary%2Fissue-12133-dylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Fauxiliary%2Fissue-12133-dylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-12133-dylib.rs?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -8,6 +8,4 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// no-prefer-dynamic\n-\n #![crate_type = \"dylib\"]"}, {"sha": "338e04fbb074646cb9d46c06654ea662c68490a6", "filename": "src/test/auxiliary/syntax-extension-with-dll-deps-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Fauxiliary%2Fsyntax-extension-with-dll-deps-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Fauxiliary%2Fsyntax-extension-with-dll-deps-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsyntax-extension-with-dll-deps-1.rs?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// no-prefer-dynamic\n // force-host\n \n #![crate_type = \"dylib\"]"}, {"sha": "88548bb5410e6d36420c246718ea80ddee2611a9", "filename": "src/test/auxiliary/syntax-extension-with-dll-deps-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Fauxiliary%2Fsyntax-extension-with-dll-deps-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Fauxiliary%2Fsyntax-extension-with-dll-deps-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsyntax-extension-with-dll-deps-2.rs?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // force-host\n-// no-prefer-dynamic\n \n #![crate_type = \"dylib\"]\n #![feature(plugin_registrar, quote, globs)]"}, {"sha": "83bddd4c73c3f481d2f0084292cdffbeecb751dc", "filename": "src/test/run-make/c-dynamic-dylib/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fc-dynamic-dylib%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fc-dynamic-dylib%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-dynamic-dylib%2FMakefile?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -6,7 +6,7 @@ all:\n \techo ignored\n else\n all: $(call DYLIB,cfoo)\n-\t$(RUSTC) foo.rs\n+\t$(RUSTC) foo.rs -C prefer-dynamic\n \t$(RUSTC) bar.rs\n \t$(call RUN,bar)\n \t$(call REMOVE_DYLIBS,cfoo)"}, {"sha": "9914e12d5696e6561c108ef3794562bfaa589ff1", "filename": "src/test/run-make/c-static-dylib/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fc-static-dylib%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fc-static-dylib%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-static-dylib%2FMakefile?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -1,7 +1,7 @@\n -include ../tools.mk\n \n all: $(call STATICLIB,cfoo)\n-\t$(RUSTC) foo.rs\n+\t$(RUSTC) foo.rs -C prefer-dynamic\n \t$(RUSTC) bar.rs\n \trm $(TMPDIR)/$(call STATICLIB_GLOB,cfoo)\n \t$(call RUN,bar)"}, {"sha": "a33177197b119c4c6d5fcebe68045150297cec9d", "filename": "src/test/run-make/dylib-chain/Makefile", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fdylib-chain%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fdylib-chain%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdylib-chain%2FMakefile?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -1,9 +1,9 @@\n -include ../tools.mk\n \n all:\n-\t$(RUSTC) m1.rs\n-\t$(RUSTC) m2.rs\n-\t$(RUSTC) m3.rs\n+\t$(RUSTC) m1.rs -C prefer-dynamic\n+\t$(RUSTC) m2.rs -C prefer-dynamic\n+\t$(RUSTC) m3.rs -C prefer-dynamic\n \t$(RUSTC) m4.rs\n \t$(call RUN,m4)\n \t$(call REMOVE_DYLIBS,m1)"}, {"sha": "bc5e9b728694f27225af3f353dd192d6d7fa5068", "filename": "src/test/run-make/issue-15460/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fissue-15460%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fissue-15460%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-15460%2FMakefile?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -1,6 +1,6 @@\n -include ../tools.mk\n \n all: $(TMPDIR)/libfoo.a\n-\t$(RUSTC) foo.rs -C extra-filename=-383hf8\n+\t$(RUSTC) foo.rs -C extra-filename=-383hf8 -C prefer-dynamic\n \t$(RUSTC) bar.rs\n \t$(call RUN,bar)"}, {"sha": "0e52d4a8befba96c81760185b208baae2093a191", "filename": "src/test/run-make/mixing-deps/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fmixing-deps%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fmixing-deps%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmixing-deps%2FMakefile?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -1,7 +1,7 @@\n -include ../tools.mk\n \n all:\n-\t$(RUSTC) both.rs\n+\t$(RUSTC) both.rs -C prefer-dynamic\n \t$(RUSTC) dylib.rs -C prefer-dynamic\n \t$(RUSTC) prog.rs\n \t$(call RUN,prog)"}, {"sha": "48257669baf94a3401dcada3fc84ebf70d63a98b", "filename": "src/test/run-make/mixing-formats/Makefile", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fmixing-formats%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fmixing-formats%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmixing-formats%2FMakefile?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -15,60 +15,60 @@\n all:\n \t# Building just baz\n \t$(RUSTC) --crate-type=rlib  foo.rs\n-\t$(RUSTC) --crate-type=dylib bar1.rs\n-\t$(RUSTC) --crate-type=dylib,rlib baz.rs\n+\t$(RUSTC) --crate-type=dylib bar1.rs -C prefer-dynamic\n+\t$(RUSTC) --crate-type=dylib,rlib baz.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type=bin baz.rs\n \trm $(TMPDIR)/*\n-\t$(RUSTC) --crate-type=dylib foo.rs\n+\t$(RUSTC) --crate-type=dylib foo.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type=rlib  bar1.rs\n-\t$(RUSTC) --crate-type=dylib,rlib baz.rs\n+\t$(RUSTC) --crate-type=dylib,rlib baz.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type=bin baz.rs\n \trm $(TMPDIR)/*\n \t# Building baz2\n \t$(RUSTC) --crate-type=rlib  foo.rs\n-\t$(RUSTC) --crate-type=dylib bar1.rs\n-\t$(RUSTC) --crate-type=dylib bar2.rs\n+\t$(RUSTC) --crate-type=dylib bar1.rs -C prefer-dynamic\n+\t$(RUSTC) --crate-type=dylib bar2.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type=dylib baz2.rs && exit 1 || exit 0\n \t$(RUSTC) --crate-type=bin baz2.rs && exit 1 || exit 0\n \trm $(TMPDIR)/*\n \t$(RUSTC) --crate-type=rlib  foo.rs\n \t$(RUSTC) --crate-type=rlib  bar1.rs\n-\t$(RUSTC) --crate-type=dylib bar2.rs\n+\t$(RUSTC) --crate-type=dylib bar2.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type=dylib,rlib baz2.rs\n \t$(RUSTC) --crate-type=bin baz2.rs\n \trm $(TMPDIR)/*\n \t$(RUSTC) --crate-type=rlib  foo.rs\n-\t$(RUSTC) --crate-type=dylib bar1.rs\n+\t$(RUSTC) --crate-type=dylib bar1.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type=rlib  bar2.rs\n-\t$(RUSTC) --crate-type=dylib,rlib baz2.rs\n+\t$(RUSTC) --crate-type=dylib,rlib baz2.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type=bin baz2.rs\n \trm $(TMPDIR)/*\n \t$(RUSTC) --crate-type=rlib  foo.rs\n \t$(RUSTC) --crate-type=rlib  bar1.rs\n \t$(RUSTC) --crate-type=rlib  bar2.rs\n-\t$(RUSTC) --crate-type=dylib,rlib baz2.rs\n+\t$(RUSTC) --crate-type=dylib,rlib baz2.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type=bin baz2.rs\n \trm $(TMPDIR)/*\n-\t$(RUSTC) --crate-type=dylib foo.rs\n+\t$(RUSTC) --crate-type=dylib foo.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type=rlib  bar1.rs\n \t$(RUSTC) --crate-type=rlib  bar2.rs\n-\t$(RUSTC) --crate-type=dylib,rlib baz2.rs\n+\t$(RUSTC) --crate-type=dylib,rlib baz2.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type=bin baz2.rs\n \trm $(TMPDIR)/*\n-\t$(RUSTC) --crate-type=dylib foo.rs\n-\t$(RUSTC) --crate-type=dylib bar1.rs\n+\t$(RUSTC) --crate-type=dylib foo.rs -C prefer-dynamic\n+\t$(RUSTC) --crate-type=dylib bar1.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type=rlib  bar2.rs\n \t$(RUSTC) --crate-type=dylib,rlib baz2.rs\n \t$(RUSTC) --crate-type=bin baz2.rs\n \trm $(TMPDIR)/*\n-\t$(RUSTC) --crate-type=dylib foo.rs\n+\t$(RUSTC) --crate-type=dylib foo.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type=rlib  bar1.rs\n-\t$(RUSTC) --crate-type=dylib bar2.rs\n+\t$(RUSTC) --crate-type=dylib bar2.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type=dylib,rlib baz2.rs\n \t$(RUSTC) --crate-type=bin baz2.rs\n \trm $(TMPDIR)/*\n-\t$(RUSTC) --crate-type=dylib foo.rs\n-\t$(RUSTC) --crate-type=dylib bar1.rs\n-\t$(RUSTC) --crate-type=dylib bar2.rs\n+\t$(RUSTC) --crate-type=dylib foo.rs -C prefer-dynamic\n+\t$(RUSTC) --crate-type=dylib bar1.rs -C prefer-dynamic\n+\t$(RUSTC) --crate-type=dylib bar2.rs -C prefer-dynamic\n \t$(RUSTC) --crate-type=dylib,rlib baz2.rs\n \t$(RUSTC) --crate-type=bin baz2.rs"}, {"sha": "bd44feecf2a5d7659691346b63e974fd21cf23d7", "filename": "src/test/run-make/prefer-dylib/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fprefer-dylib%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fprefer-dylib%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fprefer-dylib%2FMakefile?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -1,7 +1,7 @@\n -include ../tools.mk\n \n all:\n-\t$(RUSTC) bar.rs --crate-type=dylib --crate-type=rlib\n+\t$(RUSTC) bar.rs --crate-type=dylib --crate-type=rlib -C prefer-dynamic\n \t$(RUSTC) foo.rs -C prefer-dynamic\n \t$(call RUN,foo)\n \trm $(TMPDIR)/*bar*"}, {"sha": "26730820fea2bd9a8ba8a534ff8ec96fd2b004b6", "filename": "src/test/run-make/simple-dylib/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fsimple-dylib%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fsimple-dylib%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsimple-dylib%2FMakefile?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -1,5 +1,5 @@\n -include ../tools.mk\n all:\n-\t$(RUSTC) bar.rs --crate-type=dylib\n+\t$(RUSTC) bar.rs --crate-type=dylib -C prefer-dynamic\n \t$(RUSTC) foo.rs\n \t$(call RUN,foo)"}, {"sha": "20bed0abbfd3725c6e5043ba8f1071759db90c00", "filename": "src/test/run-make/static-dylib-by-default/Makefile", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2FMakefile?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -0,0 +1,9 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) foo.rs\n+\t$(RUSTC) bar.rs\n+\t$(CC) main.c -o $(call RUN_BINFILE,main) -lbar\n+\trm $(TMPDIR)/*.rlib\n+\trm $(call DYLIB,foo)\n+\t$(call RUN,main)"}, {"sha": "63da277dece4771e1ffbd1092ad5339245c95a31", "filename": "src/test/run-make/static-dylib-by-default/bar.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2Fbar.rs?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"dylib\"]\n+\n+extern crate foo;\n+\n+#[no_mangle]\n+pub extern fn bar() {\n+    foo::foo();\n+}"}, {"sha": "341040e653c5cd6d2460f036684b132a0b93c82a", "filename": "src/test/run-make/static-dylib-by-default/foo.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2Ffoo.rs?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+#![crate_type = \"dylib\"]\n+\n+pub fn foo() {}"}, {"sha": "30bb0783edfb1f27d9340b6e0e91b16100955ec7", "filename": "src/test/run-make/static-dylib-by-default/main.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2Fmain.c", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2Fmain.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fstatic-dylib-by-default%2Fmain.c?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern void bar();\n+\n+int main() {\n+    bar();\n+    return 0;\n+}"}, {"sha": "12f437075fbd4520415ef710c77d2e922d2e417f", "filename": "src/test/run-make/suspicious-library/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fsuspicious-library%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fsuspicious-library%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsuspicious-library%2FMakefile?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -1,7 +1,7 @@\n -include ../tools.mk\n \n all:\n-\t$(RUSTC) foo.rs\n+\t$(RUSTC) foo.rs -C prefer-dynamic\n \ttouch $(call DYLIB,foo-something-special)\n \ttouch $(call DYLIB,foo-something-special2)\n \t$(RUSTC) bar.rs"}, {"sha": "ac595546aa7c71f06b8345655479603521ed9cd4", "filename": "src/test/run-make/symlinked-libraries/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fsymlinked-libraries%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3036b001276a6e43409b08b7f2334ce72aeeb036/src%2Ftest%2Frun-make%2Fsymlinked-libraries%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsymlinked-libraries%2FMakefile?ref=3036b001276a6e43409b08b7f2334ce72aeeb036", "patch": "@@ -4,7 +4,7 @@\n ifndef IS_WINDOWS\n \n all:\n-\t$(RUSTC) foo.rs\n+\t$(RUSTC) foo.rs -C prefer-dynamic\n \tmkdir -p $(TMPDIR)/other\n \tln -nsf $(TMPDIR)/$(call DYLIB_GLOB,foo) $(TMPDIR)/other\n \t$(RUSTC) bar.rs -L $(TMPDIR)/other"}]}