{"sha": "dcf343689973ef81d674c1df0f21fc9332c73f3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZjM0MzY4OTk3M2VmODFkNjc0YzFkZjBmMjFmYzkzMzJjNzNmM2Y=", "commit": {"author": {"name": "Lukas Kalbertodt", "email": "lukas.kalbertodt@gmail.com", "date": "2019-10-25T08:50:21Z"}, "committer": {"name": "Lukas Kalbertodt", "email": "lukas.kalbertodt@gmail.com", "date": "2019-10-25T09:37:30Z"}, "message": "Fill tracking issue number for `array_value_iter` and fix Rust version", "tree": {"sha": "52c4c05692d8f74ec76c646d48e32e08e2d0027c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52c4c05692d8f74ec76c646d48e32e08e2d0027c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcf343689973ef81d674c1df0f21fc9332c73f3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcf343689973ef81d674c1df0f21fc9332c73f3f", "html_url": "https://github.com/rust-lang/rust/commit/dcf343689973ef81d674c1df0f21fc9332c73f3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcf343689973ef81d674c1df0f21fc9332c73f3f/comments", "author": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd2df8f97db8319e0eea433bfbc68244150d7bea", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd2df8f97db8319e0eea433bfbc68244150d7bea", "html_url": "https://github.com/rust-lang/rust/commit/dd2df8f97db8319e0eea433bfbc68244150d7bea"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "11803238407c8d5522fc0739300cd197c2d38d67", "filename": "src/libcore/array/iter.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dcf343689973ef81d674c1df0f21fc9332c73f3f/src%2Flibcore%2Farray%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcf343689973ef81d674c1df0f21fc9332c73f3f/src%2Flibcore%2Farray%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray%2Fiter.rs?ref=dcf343689973ef81d674c1df0f21fc9332c73f3f", "patch": "@@ -13,7 +13,7 @@ use super::LengthAtMost32;\n /// A by-value [array] iterator.\n ///\n /// [array]: ../../std/primitive.array.html\n-#[unstable(feature = \"array_value_iter\", issue = \"0\")]\n+#[unstable(feature = \"array_value_iter\", issue = \"65798\")]\n pub struct IntoIter<T, const N: usize>\n where\n     [T; N]: LengthAtMost32,\n@@ -49,7 +49,7 @@ where\n     /// *Note*: this method might never get stabilized and/or removed in the\n     /// future as there will likely be another, preferred way of obtaining this\n     /// iterator (either via `IntoIterator` for arrays or via another way).\n-    #[unstable(feature = \"array_value_iter\", issue = \"0\")]\n+    #[unstable(feature = \"array_value_iter\", issue = \"65798\")]\n     pub fn new(array: [T; N]) -> Self {\n         // The transmute here is actually safe. The docs of `MaybeUninit`\n         // promise:\n@@ -95,7 +95,7 @@ where\n }\n \n \n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n impl<T, const N: usize> Iterator for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,\n@@ -141,7 +141,7 @@ where\n     }\n }\n \n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n impl<T, const N: usize> DoubleEndedIterator for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,\n@@ -176,7 +176,7 @@ where\n     }\n }\n \n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n impl<T, const N: usize> Drop for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,\n@@ -189,7 +189,7 @@ where\n     }\n }\n \n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n impl<T, const N: usize> ExactSizeIterator for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,\n@@ -204,7 +204,7 @@ where\n     }\n }\n \n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n impl<T, const N: usize> FusedIterator for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,\n@@ -214,13 +214,13 @@ where\n // elements (that will still be yielded) is the length of the range `alive`.\n // This range is decremented in length in either `next` or `next_back`. It is\n // always decremented by 1 in those methods, but only if `Some(_)` is returned.\n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n unsafe impl<T, const N: usize> TrustedLen for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,\n {}\n \n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n impl<T: Clone, const N: usize> Clone for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,\n@@ -251,7 +251,7 @@ where\n     }\n }\n \n-#[stable(feature = \"array_value_iter_impls\", since = \"1.38.0\")]\n+#[stable(feature = \"array_value_iter_impls\", since = \"1.40.0\")]\n impl<T: fmt::Debug, const N: usize> fmt::Debug for IntoIter<T, {N}>\n where\n     [T; N]: LengthAtMost32,"}, {"sha": "e1ec8b795d04c6bfa467efba3549851c35919355", "filename": "src/libcore/array/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcf343689973ef81d674c1df0f21fc9332c73f3f/src%2Flibcore%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcf343689973ef81d674c1df0f21fc9332c73f3f/src%2Flibcore%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray%2Fmod.rs?ref=dcf343689973ef81d674c1df0f21fc9332c73f3f", "patch": "@@ -18,7 +18,7 @@ use crate::slice::{Iter, IterMut};\n mod iter;\n \n #[cfg(not(bootstrap))]\n-#[unstable(feature = \"array_value_iter\", issue = \"0\")]\n+#[unstable(feature = \"array_value_iter\", issue = \"65798\")]\n pub use iter::IntoIter;\n \n /// Utility trait implemented only on arrays of fixed size"}]}