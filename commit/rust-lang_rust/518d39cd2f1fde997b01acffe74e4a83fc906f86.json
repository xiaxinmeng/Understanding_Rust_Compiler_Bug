{"sha": "518d39cd2f1fde997b01acffe74e4a83fc906f86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxOGQzOWNkMmYxZmRlOTk3YjAxYWNmZmU3NGU0YTgzZmM5MDZmODY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-05-24T16:31:43Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-05-24T16:31:43Z"}, "message": "Duplicate dependencies that have multiple DepKinds", "tree": {"sha": "d1e98737ea167d80b64a04931d2e952b0a5b4e59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1e98737ea167d80b64a04931d2e952b0a5b4e59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/518d39cd2f1fde997b01acffe74e4a83fc906f86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/518d39cd2f1fde997b01acffe74e4a83fc906f86", "html_url": "https://github.com/rust-lang/rust/commit/518d39cd2f1fde997b01acffe74e4a83fc906f86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/518d39cd2f1fde997b01acffe74e4a83fc906f86/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01f8d40c5cb28854091d2081b7aa607ad9902930", "url": "https://api.github.com/repos/rust-lang/rust/commits/01f8d40c5cb28854091d2081b7aa607ad9902930", "html_url": "https://github.com/rust-lang/rust/commit/01f8d40c5cb28854091d2081b7aa607ad9902930"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "a8fee4f08da5011750c84b31eeb9d5140f5b83c8", "filename": "crates/project_model/src/cargo_workspace.rs", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/518d39cd2f1fde997b01acffe74e4a83fc906f86/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/518d39cd2f1fde997b01acffe74e4a83fc906f86/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs?ref=518d39cd2f1fde997b01acffe74e4a83fc906f86", "patch": "@@ -121,7 +121,7 @@ pub struct PackageDependency {\n     pub kind: DepKind,\n }\n \n-#[derive(Debug, Clone, Eq, PartialEq)]\n+#[derive(Debug, Clone, Eq, PartialEq, PartialOrd, Ord)]\n pub enum DepKind {\n     /// Available to the library, binary, and dev targets in the package (but not the build script).\n     Normal,\n@@ -132,17 +132,23 @@ pub enum DepKind {\n }\n \n impl DepKind {\n-    fn new(list: &[cargo_metadata::DepKindInfo]) -> Self {\n+    fn iter(list: &[cargo_metadata::DepKindInfo]) -> impl Iterator<Item = Self> + '_ {\n+        let mut dep_kinds = Vec::new();\n+        if list.is_empty() {\n+            dep_kinds.push(Self::Normal);\n+        }\n         for info in list {\n-            match info.kind {\n-                cargo_metadata::DependencyKind::Normal => return Self::Normal,\n-                cargo_metadata::DependencyKind::Development => return Self::Dev,\n-                cargo_metadata::DependencyKind::Build => return Self::Build,\n+            let kind = match info.kind {\n+                cargo_metadata::DependencyKind::Normal => Self::Normal,\n+                cargo_metadata::DependencyKind::Development => Self::Dev,\n+                cargo_metadata::DependencyKind::Build => Self::Build,\n                 cargo_metadata::DependencyKind::Unknown => continue,\n-            }\n+            };\n+            dep_kinds.push(kind);\n         }\n-\n-        Self::Normal\n+        dep_kinds.sort_unstable();\n+        dep_kinds.dedup();\n+        dep_kinds.into_iter()\n     }\n }\n \n@@ -317,7 +323,11 @@ impl CargoWorkspace {\n                 }\n             };\n             node.deps.sort_by(|a, b| a.pkg.cmp(&b.pkg));\n-            for dep_node in node.deps {\n+            for (dep_node, kind) in node\n+                .deps\n+                .iter()\n+                .flat_map(|dep| DepKind::iter(&dep.dep_kinds).map(move |kind| (dep, kind)))\n+            {\n                 let pkg = match pkg_by_id.get(&dep_node.pkg) {\n                     Some(&pkg) => pkg,\n                     None => {\n@@ -328,11 +338,7 @@ impl CargoWorkspace {\n                         continue;\n                     }\n                 };\n-                let dep = PackageDependency {\n-                    name: dep_node.name,\n-                    pkg,\n-                    kind: DepKind::new(&dep_node.dep_kinds),\n-                };\n+                let dep = PackageDependency { name: dep_node.name.clone(), pkg, kind };\n                 packages[source].dependencies.push(dep);\n             }\n             packages[source].active_features.extend(node.features);"}]}