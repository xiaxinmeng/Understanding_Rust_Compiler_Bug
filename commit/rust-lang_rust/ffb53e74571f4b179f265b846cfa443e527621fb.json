{"sha": "ffb53e74571f4b179f265b846cfa443e527621fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmYjUzZTc0NTcxZjRiMTc5ZjI2NWI4NDZjZmE0NDNlNTI3NjIxZmI=", "commit": {"author": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2019-10-17T16:41:45Z"}, "committer": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2019-10-17T16:41:45Z"}, "message": "Add `run-rustfix` to `inefficient_to_string`", "tree": {"sha": "82f644bd58eb078eb6cfc6ba35f0009c007e400d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82f644bd58eb078eb6cfc6ba35f0009c007e400d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffb53e74571f4b179f265b846cfa443e527621fb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFIBAABCAAyFiEE30PRORiHa0gkBHJnH7R33dJ4Ic4FAl2omcsUHGhtcGVyc29u\nMUBnbWFpbC5jb20ACgkQH7R33dJ4Ic7IPwgAh0mMQEwVynRSQswSlFUVHxk/UuDw\nXWY6fZg92l6nf6KtIyWjC21MG3htL9hy0Lm0cVsoUWHATKOFpq6zDWP2bNgtiFls\nf07A+vSs5vCnn/bRGax0uRffp/eD5+0Q/Of0IUFYAHwkl2/zRNIbmoc8GX/KLfqu\nQYN2yCBO/WDK0zCIfQO8h0r0qoUNMu6zyosJVnVfy8Mlz1TELzMRJWFStgMU3IB6\n8LNQ4OCmEt4P7nYcHHUQETBkcP3AAqxv1rnmjUEPINI/WKChV58GIX31vLi/VWm/\n5LINRtojXFwYYzbRl0a3jjHuKRzPBZxvTtq+yLGtWoLBDcDCqNNyzTuQhw==\n=5B/S\n-----END PGP SIGNATURE-----", "payload": "tree 82f644bd58eb078eb6cfc6ba35f0009c007e400d\nparent 106a72592c024f0e03500cb17fd1fd28566866b0\nauthor HMPerson1 <hmperson1@gmail.com> 1571330505 -0400\ncommitter HMPerson1 <hmperson1@gmail.com> 1571330505 -0400\n\nAdd `run-rustfix` to `inefficient_to_string`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffb53e74571f4b179f265b846cfa443e527621fb", "html_url": "https://github.com/rust-lang/rust/commit/ffb53e74571f4b179f265b846cfa443e527621fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffb53e74571f4b179f265b846cfa443e527621fb/comments", "author": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "106a72592c024f0e03500cb17fd1fd28566866b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/106a72592c024f0e03500cb17fd1fd28566866b0", "html_url": "https://github.com/rust-lang/rust/commit/106a72592c024f0e03500cb17fd1fd28566866b0"}], "stats": {"total": 47, "additions": 40, "deletions": 7}, "files": [{"sha": "32bc7574a52ea2056a3d67f7e21b7bc6b7d907a8", "filename": "tests/ui/inefficient_to_string.fixed", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ffb53e74571f4b179f265b846cfa443e527621fb/tests%2Fui%2Finefficient_to_string.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ffb53e74571f4b179f265b846cfa443e527621fb/tests%2Fui%2Finefficient_to_string.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finefficient_to_string.fixed?ref=ffb53e74571f4b179f265b846cfa443e527621fb", "patch": "@@ -0,0 +1,32 @@\n+// run-rustfix\n+#![deny(clippy::inefficient_to_string)]\n+\n+use std::borrow::Cow;\n+use std::string::ToString;\n+\n+fn main() {\n+    let rstr: &str = \"hello\";\n+    let rrstr: &&str = &rstr;\n+    let rrrstr: &&&str = &rrstr;\n+    let _: String = rstr.to_string();\n+    let _: String = (*rrstr).to_string();\n+    let _: String = (**rrrstr).to_string();\n+\n+    let string: String = String::from(\"hello\");\n+    let rstring: &String = &string;\n+    let rrstring: &&String = &rstring;\n+    let rrrstring: &&&String = &rrstring;\n+    let _: String = string.to_string();\n+    let _: String = rstring.to_string();\n+    let _: String = (*rrstring).to_string();\n+    let _: String = (**rrrstring).to_string();\n+\n+    let cow: Cow<'_, str> = Cow::Borrowed(\"hello\");\n+    let rcow: &Cow<'_, str> = &cow;\n+    let rrcow: &&Cow<'_, str> = &rcow;\n+    let rrrcow: &&&Cow<'_, str> = &rrcow;\n+    let _: String = cow.to_string();\n+    let _: String = rcow.to_string();\n+    let _: String = (*rrcow).to_string();\n+    let _: String = (**rrrcow).to_string();\n+}"}, {"sha": "2741565e50d67a58523a1f339bba1f3654a0b111", "filename": "tests/ui/inefficient_to_string.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ffb53e74571f4b179f265b846cfa443e527621fb/tests%2Fui%2Finefficient_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffb53e74571f4b179f265b846cfa443e527621fb/tests%2Fui%2Finefficient_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finefficient_to_string.rs?ref=ffb53e74571f4b179f265b846cfa443e527621fb", "patch": "@@ -1,3 +1,4 @@\n+// run-rustfix\n #![deny(clippy::inefficient_to_string)]\n \n use std::borrow::Cow;"}, {"sha": "3c2f64c805f27245e87f8156717e53736975c176", "filename": "tests/ui/inefficient_to_string.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ffb53e74571f4b179f265b846cfa443e527621fb/tests%2Fui%2Finefficient_to_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ffb53e74571f4b179f265b846cfa443e527621fb/tests%2Fui%2Finefficient_to_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finefficient_to_string.stderr?ref=ffb53e74571f4b179f265b846cfa443e527621fb", "patch": "@@ -1,50 +1,50 @@\n error: calling `to_string` on `&&str`\n-  --> $DIR/inefficient_to_string.rs:11:21\n+  --> $DIR/inefficient_to_string.rs:12:21\n    |\n LL |     let _: String = rrstr.to_string();\n    |                     ^^^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*rrstr).to_string()`\n    |\n note: lint level defined here\n-  --> $DIR/inefficient_to_string.rs:1:9\n+  --> $DIR/inefficient_to_string.rs:2:9\n    |\n LL | #![deny(clippy::inefficient_to_string)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: `&str` implements `ToString` through the blanket impl, but `str` specializes `ToString` directly\n \n error: calling `to_string` on `&&&str`\n-  --> $DIR/inefficient_to_string.rs:12:21\n+  --> $DIR/inefficient_to_string.rs:13:21\n    |\n LL |     let _: String = rrrstr.to_string();\n    |                     ^^^^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(**rrrstr).to_string()`\n    |\n    = help: `&&str` implements `ToString` through the blanket impl, but `str` specializes `ToString` directly\n \n error: calling `to_string` on `&&std::string::String`\n-  --> $DIR/inefficient_to_string.rs:20:21\n+  --> $DIR/inefficient_to_string.rs:21:21\n    |\n LL |     let _: String = rrstring.to_string();\n    |                     ^^^^^^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*rrstring).to_string()`\n    |\n    = help: `&std::string::String` implements `ToString` through the blanket impl, but `std::string::String` specializes `ToString` directly\n \n error: calling `to_string` on `&&&std::string::String`\n-  --> $DIR/inefficient_to_string.rs:21:21\n+  --> $DIR/inefficient_to_string.rs:22:21\n    |\n LL |     let _: String = rrrstring.to_string();\n    |                     ^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(**rrrstring).to_string()`\n    |\n    = help: `&&std::string::String` implements `ToString` through the blanket impl, but `std::string::String` specializes `ToString` directly\n \n error: calling `to_string` on `&&std::borrow::Cow<'_, str>`\n-  --> $DIR/inefficient_to_string.rs:29:21\n+  --> $DIR/inefficient_to_string.rs:30:21\n    |\n LL |     let _: String = rrcow.to_string();\n    |                     ^^^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*rrcow).to_string()`\n    |\n    = help: `&std::borrow::Cow<'_, str>` implements `ToString` through the blanket impl, but `std::borrow::Cow<'_, str>` specializes `ToString` directly\n \n error: calling `to_string` on `&&&std::borrow::Cow<'_, str>`\n-  --> $DIR/inefficient_to_string.rs:30:21\n+  --> $DIR/inefficient_to_string.rs:31:21\n    |\n LL |     let _: String = rrrcow.to_string();\n    |                     ^^^^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(**rrrcow).to_string()`"}]}