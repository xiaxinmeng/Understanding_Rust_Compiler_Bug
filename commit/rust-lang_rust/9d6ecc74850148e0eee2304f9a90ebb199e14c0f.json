{"sha": "9d6ecc74850148e0eee2304f9a90ebb199e14c0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNmVjYzc0ODUwMTQ4ZTBlZWUyMzA0ZjlhOTBlYmIxOTllMTRjMGY=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-02-21T04:59:10Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-02-21T04:59:10Z"}, "message": "Fix `boxed_local` suggestion\n\nDon't warn about an argument that is moved into a closure.\n\nExprUseVisitor doesn't walk into nested bodies so use a new\nvisitor that collects the variables that are moved into closures.\n\nFixes #3739", "tree": {"sha": "883e64f0b6b25a8b7ca07682b3d20af2e2dab4bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/883e64f0b6b25a8b7ca07682b3d20af2e2dab4bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d6ecc74850148e0eee2304f9a90ebb199e14c0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d6ecc74850148e0eee2304f9a90ebb199e14c0f", "html_url": "https://github.com/rust-lang/rust/commit/9d6ecc74850148e0eee2304f9a90ebb199e14c0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d6ecc74850148e0eee2304f9a90ebb199e14c0f/comments", "author": null, "committer": null, "parents": [{"sha": "027dde92e22b9058c2bd6efa4b3e47b78d991dc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/027dde92e22b9058c2bd6efa4b3e47b78d991dc7", "html_url": "https://github.com/rust-lang/rust/commit/027dde92e22b9058c2bd6efa4b3e47b78d991dc7"}], "stats": {"total": 70, "additions": 66, "deletions": 4}, "files": [{"sha": "090d7a2eb9376a4a243b15b55051d6b799dac1b3", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/9d6ecc74850148e0eee2304f9a90ebb199e14c0f/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6ecc74850148e0eee2304f9a90ebb199e14c0f/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=9d6ecc74850148e0eee2304f9a90ebb199e14c0f", "patch": "@@ -1,11 +1,12 @@\n use crate::utils::span_lint;\n use rustc::hir::intravisit as visit;\n+use rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::middle::expr_use_visitor::*;\n use rustc::middle::mem_categorization::{cmt_, Categorization};\n use rustc::ty::layout::LayoutOf;\n-use rustc::ty::{self, Ty};\n+use rustc::ty::{self, Ty, UpvarCapture};\n use rustc::util::nodemap::NodeSet;\n use rustc::{declare_tool_lint, lint_array};\n use syntax::ast::NodeId;\n@@ -88,11 +89,17 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n         let region_scope_tree = &cx.tcx.region_scope_tree(fn_def_id);\n         ExprUseVisitor::new(&mut v, cx.tcx, cx.param_env, region_scope_tree, cx.tables, None).consume_body(body);\n \n-        for node in v.set {\n+        let mut capture_visitor = CaptureVisitor {\n+            cx,\n+            moved: NodeSet::default(),\n+        };\n+        capture_visitor.visit_body(body);\n+\n+        for node in v.set.difference(&capture_visitor.moved) {\n             span_lint(\n                 cx,\n                 BOXED_LOCAL,\n-                cx.tcx.hir().span(node),\n+                cx.tcx.hir().span(*node),\n                 \"local variable doesn't need to be boxed here\",\n             );\n         }\n@@ -192,3 +199,32 @@ impl<'a, 'tcx> EscapeDelegate<'a, 'tcx> {\n         }\n     }\n }\n+\n+struct CaptureVisitor<'a, 'tcx: 'a> {\n+    cx: &'a LateContext<'a, 'tcx>,\n+    moved: NodeSet,\n+}\n+\n+impl<'a, 'tcx> Visitor<'tcx> for CaptureVisitor<'a, 'tcx> {\n+    fn visit_expr(&mut self, expr: &'tcx Expr) {\n+        if let ExprKind::Closure(..) = expr.node {\n+            if let ty::Closure(def_id, _) = &self.cx.tables.expr_ty(expr).sty {\n+                if let Some(upvar_list) = &self.cx.tables.upvar_list.get(&def_id) {\n+                    for upvar_id in upvar_list.iter() {\n+                        if let UpvarCapture::ByValue = self.cx.tables.upvar_capture(*upvar_id) {\n+                            let hir_id = upvar_id.var_path.hir_id;\n+                            let id = &self.cx.tcx.hir().hir_to_node_id(hir_id);\n+                            self.moved.insert(*id);\n+                        }\n+                    }\n+                }\n+            }\n+        } else {\n+            walk_expr(self, expr);\n+        }\n+    }\n+\n+    fn nested_visit_map<'this>(&'this mut self) -> NestedVisitorMap<'this, 'tcx> {\n+        NestedVisitorMap::None\n+    }\n+}"}, {"sha": "e3f78182fd13edb48a8fce3b7786c42cf20d594c", "filename": "tests/ui/escape_analysis.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9d6ecc74850148e0eee2304f9a90ebb199e14c0f/tests%2Fui%2Fescape_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6ecc74850148e0eee2304f9a90ebb199e14c0f/tests%2Fui%2Fescape_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fescape_analysis.rs?ref=9d6ecc74850148e0eee2304f9a90ebb199e14c0f", "patch": "@@ -148,3 +148,23 @@ trait MyTrait {\n impl<T> MyTrait for Box<T> {\n     fn do_sth(self) {}\n }\n+\n+// Issue #3739 - capture in closures\n+mod issue_3739 {\n+    use super::A;\n+\n+    fn consume<T>(_: T) {}\n+    fn borrow<T>(_: &T) {}\n+\n+    fn closure_consume(x: Box<A>) {\n+        let _ = move || {\n+            consume(x);\n+        };\n+    }\n+\n+    fn closure_borrow(x: Box<A>) {\n+        let _ = || {\n+            borrow(&x);\n+        };\n+    }\n+}"}, {"sha": "3944acd87f2878fe7507b7e3eb32beeefa92ca12", "filename": "tests/ui/escape_analysis.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9d6ecc74850148e0eee2304f9a90ebb199e14c0f/tests%2Fui%2Fescape_analysis.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9d6ecc74850148e0eee2304f9a90ebb199e14c0f/tests%2Fui%2Fescape_analysis.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fescape_analysis.stderr?ref=9d6ecc74850148e0eee2304f9a90ebb199e14c0f", "patch": "@@ -12,5 +12,11 @@ error: local variable doesn't need to be boxed here\n LL | pub fn new(_needs_name: Box<PeekableSeekable<&()>>) -> () {}\n    |            ^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: local variable doesn't need to be boxed here\n+  --> $DIR/escape_analysis.rs:165:23\n+   |\n+LL |     fn closure_borrow(x: Box<A>) {\n+   |                       ^\n+\n+error: aborting due to 3 previous errors\n "}]}