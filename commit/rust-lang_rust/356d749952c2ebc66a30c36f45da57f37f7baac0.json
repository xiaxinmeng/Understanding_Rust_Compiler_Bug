{"sha": "356d749952c2ebc66a30c36f45da57f37f7baac0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1NmQ3NDk5NTJjMmViYzY2YTMwYzM2ZjQ1ZGE1N2YzN2Y3YmFhYzA=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-30T18:38:57Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-30T18:38:57Z"}, "message": "Update Readme.md for the fixed abi compatibility", "tree": {"sha": "8e88b423b81b471db2e65b9d77f91f476c64fffb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e88b423b81b471db2e65b9d77f91f476c64fffb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/356d749952c2ebc66a30c36f45da57f37f7baac0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/356d749952c2ebc66a30c36f45da57f37f7baac0", "html_url": "https://github.com/rust-lang/rust/commit/356d749952c2ebc66a30c36f45da57f37f7baac0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/356d749952c2ebc66a30c36f45da57f37f7baac0/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d34b5e2885c9bd3cc4327bca7be6af8d48a0f3d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d34b5e2885c9bd3cc4327bca7be6af8d48a0f3d3", "html_url": "https://github.com/rust-lang/rust/commit/d34b5e2885c9bd3cc4327bca7be6af8d48a0f3d3"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "00b9dc2267d206cfcda044541f23f1fb55be060e", "filename": "Readme.md", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/356d749952c2ebc66a30c36f45da57f37f7baac0/Readme.md", "raw_url": "https://github.com/rust-lang/rust/raw/356d749952c2ebc66a30c36f45da57f37f7baac0/Readme.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Readme.md?ref=356d749952c2ebc66a30c36f45da57f37f7baac0", "patch": "@@ -1,6 +1,4 @@\n-# WIP Cranelift codegen backend for rust\n-\n-> \u26a0\u26a0\u26a0 Certain kinds of FFI don't work yet. \u26a0\u26a0\u26a0\n+# Cranelift codegen backend for rust\n \n The goal of this project is to create an alternative codegen backend for the rust compiler based on [Cranelift](https://github.com/bytecodealliance/wasmtime/blob/main/cranelift).\n This has the potential to improve compilation times in debug mode.\n@@ -103,7 +101,6 @@ function jit_calc() {\n \n ## Not yet supported\n \n-* Good non-rust abi support ([several problems](https://github.com/bjorn3/rustc_codegen_cranelift/issues/10))\n * Inline assembly ([no cranelift support](https://github.com/bytecodealliance/wasmtime/issues/1041)\n     * On Linux there is support for invoking an external assembler for `global_asm!` and `asm!`.\n       `llvm_asm!` will remain unimplemented forever. `asm!` doesn't yet support reg classes. You"}]}