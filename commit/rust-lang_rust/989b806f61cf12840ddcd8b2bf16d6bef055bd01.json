{"sha": "989b806f61cf12840ddcd8b2bf16d6bef055bd01", "node_id": "C_kwDOAAsO6NoAKDk4OWI4MDZmNjFjZjEyODQwZGRjZDhiMmJmMTZkNmJlZjA1NWJkMDE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-31T04:28:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-31T04:28:29Z"}, "message": "Auto merge of #96881 - est31:join_osstr, r=dtolnay\n\nImplement [OsStr]::join\n\nImplements join for `OsStr` and `OsString` slices:\n\n```Rust\n    let strings = [OsStr::new(\"hello\"), OsStr::new(\"dear\"), OsStr::new(\"world\")];\n    assert_eq!(\"hello dear world\", strings.join(OsStr::new(\" \")));\n````\n\nThis saves one from converting to strings and back, or from implementing it manually.\n\nThis PR has been re-filed after #96744 was first accidentally merged and then reverted.\n\nThe change is instantly stable and thus:\n\nr? rust-lang/libs-api `@rustbot` label +T-libs-api -T-libs\n\ncc `@thomcc` `@m-ou-se` `@faptc`", "tree": {"sha": "27f4e3fa284a927575046a9ef6e6b268977e654a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27f4e3fa284a927575046a9ef6e6b268977e654a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/989b806f61cf12840ddcd8b2bf16d6bef055bd01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/989b806f61cf12840ddcd8b2bf16d6bef055bd01", "html_url": "https://github.com/rust-lang/rust/commit/989b806f61cf12840ddcd8b2bf16d6bef055bd01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/989b806f61cf12840ddcd8b2bf16d6bef055bd01/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47365c0d656e2e55d1b6b9dad92842540e3ed1af", "url": "https://api.github.com/repos/rust-lang/rust/commits/47365c0d656e2e55d1b6b9dad92842540e3ed1af", "html_url": "https://github.com/rust-lang/rust/commit/47365c0d656e2e55d1b6b9dad92842540e3ed1af"}, {"sha": "cb60e70dc4a066247b0081782db56807386eaf58", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb60e70dc4a066247b0081782db56807386eaf58", "html_url": "https://github.com/rust-lang/rust/commit/cb60e70dc4a066247b0081782db56807386eaf58"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "247bdd954589c1625bad8f509db909580eeeaa1a", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/989b806f61cf12840ddcd8b2bf16d6bef055bd01/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/989b806f61cf12840ddcd8b2bf16d6bef055bd01/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=989b806f61cf12840ddcd8b2bf16d6bef055bd01", "patch": "@@ -1222,6 +1222,23 @@ impl OsStr {\n     }\n }\n \n+#[unstable(feature = \"slice_concat_ext\", issue = \"27747\")]\n+impl<S: Borrow<OsStr>> alloc::slice::Join<&OsStr> for [S] {\n+    type Output = OsString;\n+\n+    fn join(slice: &Self, sep: &OsStr) -> OsString {\n+        let Some((first, suffix)) = slice.split_first() else {\n+            return OsString::new();\n+        };\n+        let first_owned = first.borrow().to_owned();\n+        suffix.iter().fold(first_owned, |mut a, b| {\n+            a.push(sep);\n+            a.push(b.borrow());\n+            a\n+        })\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Borrow<OsStr> for OsString {\n     #[inline]"}, {"sha": "d7926749aae2090416729d0aec53db4bf0a6b276", "filename": "library/std/src/ffi/os_str/tests.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/989b806f61cf12840ddcd8b2bf16d6bef055bd01/library%2Fstd%2Fsrc%2Fffi%2Fos_str%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/989b806f61cf12840ddcd8b2bf16d6bef055bd01/library%2Fstd%2Fsrc%2Fffi%2Fos_str%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str%2Ftests.rs?ref=989b806f61cf12840ddcd8b2bf16d6bef055bd01", "patch": "@@ -84,6 +84,20 @@ fn test_os_string_reserve_exact() {\n     assert!(os_string.capacity() >= 33)\n }\n \n+#[test]\n+fn test_os_string_join() {\n+    let strings = [OsStr::new(\"hello\"), OsStr::new(\"dear\"), OsStr::new(\"world\")];\n+    assert_eq!(\"hello\", strings[..1].join(OsStr::new(\" \")));\n+    assert_eq!(\"hello dear world\", strings.join(OsStr::new(\" \")));\n+    assert_eq!(\"hellodearworld\", strings.join(OsStr::new(\"\")));\n+    assert_eq!(\"hello.\\n dear.\\n world\", strings.join(OsStr::new(\".\\n \")));\n+\n+    assert_eq!(\"dear world\", strings[1..].join(&OsString::from(\" \")));\n+\n+    let strings_abc = [OsString::from(\"a\"), OsString::from(\"b\"), OsString::from(\"c\")];\n+    assert_eq!(\"a b c\", strings_abc.join(OsStr::new(\" \")));\n+}\n+\n #[test]\n fn test_os_string_default() {\n     let os_string: OsString = Default::default();"}, {"sha": "519f050d2fcbeda9e77d6226d94cab30eeb9cacf", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/989b806f61cf12840ddcd8b2bf16d6bef055bd01/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/989b806f61cf12840ddcd8b2bf16d6bef055bd01/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=989b806f61cf12840ddcd8b2bf16d6bef055bd01", "patch": "@@ -241,6 +241,7 @@\n #![feature(intra_doc_pointers)]\n #![feature(lang_items)]\n #![feature(let_chains)]\n+#![feature(let_else)]\n #![feature(linkage)]\n #![feature(min_specialization)]\n #![feature(must_not_suspend)]\n@@ -301,6 +302,7 @@\n #![feature(toowned_clone_into)]\n #![feature(try_reserve_kind)]\n #![feature(vec_into_raw_parts)]\n+#![feature(slice_concat_trait)]\n //\n // Library features (unwind):\n #![feature(panic_unwind)]"}]}