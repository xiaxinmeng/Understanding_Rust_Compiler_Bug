{"sha": "a8f04712d6a36c5ce870135767d92203a1b2c8ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZjA0NzEyZDZhMzZjNWNlODcwMTM1NzY3ZDkyMjAzYTFiMmM4YWQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-02T12:34:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-02T12:34:19Z"}, "message": "Merge #6679\n\n6679: Extract tests module to file in vfs crate r=matklad a=sasurau4\n\nHelps with #6522 \r\n\r\n- [x] passed `cargo test`\n\nCo-authored-by: Daiki Ihara <sasurau4@gmail.com>", "tree": {"sha": "2561704ac02e601addd577e39fa5d724ab380c54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2561704ac02e601addd577e39fa5d724ab380c54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8f04712d6a36c5ce870135767d92203a1b2c8ad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfx4nLCRBK7hj4Ov3rIwAAdHIIAAmpnZ+bD4bTvgyyFMZu+0hY\nMhRVUj8yKN1n7H6p5112JCwqyo8kfSQgaV/h3Rkh6ls0Xy4uVpfCAAZUlmDbh1zq\nefb9kz/0Dbko100u1MU9TCncB9Rz5D38DByZDvcCuxjXhS5p3mdx0rSOJJERvrY7\nYl/bhD5VjddWeBk3BfMGFnjIMVTZX2oWPUEO5hfPl3682sVXfyVdqLP6I20/fU5b\nJ0O2BiZzfoJACaGqAWcCGh1PJaThUvXZ0Es3ahd7d5NUCxvXKazwQSNdY6hlcBhI\nUeh1A82lf8sQz45iRDGvhG9k92IcSQ/LMO+5P8TA/cAbSk5JEW+HKIRU3EHKvPQ=\n=dUme\n-----END PGP SIGNATURE-----\n", "payload": "tree 2561704ac02e601addd577e39fa5d724ab380c54\nparent 14086e311853d2c40f50102821ff6355c828d0e3\nparent 59bd6e2eea151f097a65f2634dc5488b3c272d92\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1606912459 +0000\ncommitter GitHub <noreply@github.com> 1606912459 +0000\n\nMerge #6679\n\n6679: Extract tests module to file in vfs crate r=matklad a=sasurau4\n\nHelps with #6522 \r\n\r\n- [x] passed `cargo test`\n\nCo-authored-by: Daiki Ihara <sasurau4@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8f04712d6a36c5ce870135767d92203a1b2c8ad", "html_url": "https://github.com/rust-lang/rust/commit/a8f04712d6a36c5ce870135767d92203a1b2c8ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8f04712d6a36c5ce870135767d92203a1b2c8ad/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14086e311853d2c40f50102821ff6355c828d0e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/14086e311853d2c40f50102821ff6355c828d0e3", "html_url": "https://github.com/rust-lang/rust/commit/14086e311853d2c40f50102821ff6355c828d0e3"}, {"sha": "59bd6e2eea151f097a65f2634dc5488b3c272d92", "url": "https://api.github.com/repos/rust-lang/rust/commits/59bd6e2eea151f097a65f2634dc5488b3c272d92", "html_url": "https://github.com/rust-lang/rust/commit/59bd6e2eea151f097a65f2634dc5488b3c272d92"}], "stats": {"total": 156, "additions": 74, "deletions": 82}, "files": [{"sha": "9093fbd979813fd854bc6ad4cb29da6783834fdc", "filename": "crates/vfs/src/file_set.rs", "status": "modified", "additions": 1, "deletions": 50, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/a8f04712d6a36c5ce870135767d92203a1b2c8ad/crates%2Fvfs%2Fsrc%2Ffile_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8f04712d6a36c5ce870135767d92203a1b2c8ad/crates%2Fvfs%2Fsrc%2Ffile_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Ffile_set.rs?ref=a8f04712d6a36c5ce870135767d92203a1b2c8ad", "patch": "@@ -158,53 +158,4 @@ impl fst::Automaton for PrefixOf<'_> {\n }\n \n #[cfg(test)]\n-mod tests {\n-    use super::*;\n-\n-    #[test]\n-    fn path_prefix() {\n-        let mut file_set = FileSetConfig::builder();\n-        file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo\".into())]);\n-        file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo/bar/baz\".into())]);\n-        let file_set = file_set.build();\n-\n-        let mut vfs = Vfs::default();\n-        vfs.set_file_contents(\n-            VfsPath::new_virtual_path(\"/foo/src/lib.rs\".into()),\n-            Some(Vec::new()),\n-        );\n-        vfs.set_file_contents(\n-            VfsPath::new_virtual_path(\"/foo/src/bar/baz/lib.rs\".into()),\n-            Some(Vec::new()),\n-        );\n-        vfs.set_file_contents(\n-            VfsPath::new_virtual_path(\"/foo/bar/baz/lib.rs\".into()),\n-            Some(Vec::new()),\n-        );\n-        vfs.set_file_contents(VfsPath::new_virtual_path(\"/quux/lib.rs\".into()), Some(Vec::new()));\n-\n-        let partition = file_set.partition(&vfs).into_iter().map(|it| it.len()).collect::<Vec<_>>();\n-        assert_eq!(partition, vec![2, 1, 1]);\n-    }\n-\n-    #[test]\n-    fn name_prefix() {\n-        let mut file_set = FileSetConfig::builder();\n-        file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo\".into())]);\n-        file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo-things\".into())]);\n-        let file_set = file_set.build();\n-\n-        let mut vfs = Vfs::default();\n-        vfs.set_file_contents(\n-            VfsPath::new_virtual_path(\"/foo/src/lib.rs\".into()),\n-            Some(Vec::new()),\n-        );\n-        vfs.set_file_contents(\n-            VfsPath::new_virtual_path(\"/foo-things/src/lib.rs\".into()),\n-            Some(Vec::new()),\n-        );\n-\n-        let partition = file_set.partition(&vfs).into_iter().map(|it| it.len()).collect::<Vec<_>>();\n-        assert_eq!(partition, vec![1, 1, 0]);\n-    }\n-}\n+mod tests;"}, {"sha": "2146df185d3a7815fe13c4467b6516004b868eac", "filename": "crates/vfs/src/file_set/tests.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/a8f04712d6a36c5ce870135767d92203a1b2c8ad/crates%2Fvfs%2Fsrc%2Ffile_set%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8f04712d6a36c5ce870135767d92203a1b2c8ad/crates%2Fvfs%2Fsrc%2Ffile_set%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Ffile_set%2Ftests.rs?ref=a8f04712d6a36c5ce870135767d92203a1b2c8ad", "patch": "@@ -0,0 +1,42 @@\n+use super::*;\n+\n+#[test]\n+fn path_prefix() {\n+    let mut file_set = FileSetConfig::builder();\n+    file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo\".into())]);\n+    file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo/bar/baz\".into())]);\n+    let file_set = file_set.build();\n+\n+    let mut vfs = Vfs::default();\n+    vfs.set_file_contents(VfsPath::new_virtual_path(\"/foo/src/lib.rs\".into()), Some(Vec::new()));\n+    vfs.set_file_contents(\n+        VfsPath::new_virtual_path(\"/foo/src/bar/baz/lib.rs\".into()),\n+        Some(Vec::new()),\n+    );\n+    vfs.set_file_contents(\n+        VfsPath::new_virtual_path(\"/foo/bar/baz/lib.rs\".into()),\n+        Some(Vec::new()),\n+    );\n+    vfs.set_file_contents(VfsPath::new_virtual_path(\"/quux/lib.rs\".into()), Some(Vec::new()));\n+\n+    let partition = file_set.partition(&vfs).into_iter().map(|it| it.len()).collect::<Vec<_>>();\n+    assert_eq!(partition, vec![2, 1, 1]);\n+}\n+\n+#[test]\n+fn name_prefix() {\n+    let mut file_set = FileSetConfig::builder();\n+    file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo\".into())]);\n+    file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo-things\".into())]);\n+    let file_set = file_set.build();\n+\n+    let mut vfs = Vfs::default();\n+    vfs.set_file_contents(VfsPath::new_virtual_path(\"/foo/src/lib.rs\".into()), Some(Vec::new()));\n+    vfs.set_file_contents(\n+        VfsPath::new_virtual_path(\"/foo-things/src/lib.rs\".into()),\n+        Some(Vec::new()),\n+    );\n+\n+    let partition = file_set.partition(&vfs).into_iter().map(|it| it.len()).collect::<Vec<_>>();\n+    assert_eq!(partition, vec![1, 1, 0]);\n+}"}, {"sha": "bd14911c96f9e723128b0d075b2ca31416dbe31d", "filename": "crates/vfs/src/vfs_path.rs", "status": "modified", "additions": 1, "deletions": 32, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a8f04712d6a36c5ce870135767d92203a1b2c8ad/crates%2Fvfs%2Fsrc%2Fvfs_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8f04712d6a36c5ce870135767d92203a1b2c8ad/crates%2Fvfs%2Fsrc%2Fvfs_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Fvfs_path.rs?ref=a8f04712d6a36c5ce870135767d92203a1b2c8ad", "patch": "@@ -311,35 +311,4 @@ impl VirtualPath {\n }\n \n #[cfg(test)]\n-mod tests {\n-    use super::*;\n-\n-    #[test]\n-    fn virtual_path_extensions() {\n-        assert_eq!(VirtualPath(\"/\".to_string()).name_and_extension(), None);\n-        assert_eq!(\n-            VirtualPath(\"/directory\".to_string()).name_and_extension(),\n-            Some((\"directory\", None))\n-        );\n-        assert_eq!(\n-            VirtualPath(\"/directory/\".to_string()).name_and_extension(),\n-            Some((\"directory\", None))\n-        );\n-        assert_eq!(\n-            VirtualPath(\"/directory/file\".to_string()).name_and_extension(),\n-            Some((\"file\", None))\n-        );\n-        assert_eq!(\n-            VirtualPath(\"/directory/.file\".to_string()).name_and_extension(),\n-            Some((\".file\", None))\n-        );\n-        assert_eq!(\n-            VirtualPath(\"/directory/.file.rs\".to_string()).name_and_extension(),\n-            Some((\".file\", Some(\"rs\")))\n-        );\n-        assert_eq!(\n-            VirtualPath(\"/directory/file.rs\".to_string()).name_and_extension(),\n-            Some((\"file\", Some(\"rs\")))\n-        );\n-    }\n-}\n+mod tests;"}, {"sha": "510e021e89035ca6f510a06a18855d398f5149d1", "filename": "crates/vfs/src/vfs_path/tests.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a8f04712d6a36c5ce870135767d92203a1b2c8ad/crates%2Fvfs%2Fsrc%2Fvfs_path%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8f04712d6a36c5ce870135767d92203a1b2c8ad/crates%2Fvfs%2Fsrc%2Fvfs_path%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Fvfs_path%2Ftests.rs?ref=a8f04712d6a36c5ce870135767d92203a1b2c8ad", "patch": "@@ -0,0 +1,30 @@\n+use super::*;\n+\n+#[test]\n+fn virtual_path_extensions() {\n+    assert_eq!(VirtualPath(\"/\".to_string()).name_and_extension(), None);\n+    assert_eq!(\n+        VirtualPath(\"/directory\".to_string()).name_and_extension(),\n+        Some((\"directory\", None))\n+    );\n+    assert_eq!(\n+        VirtualPath(\"/directory/\".to_string()).name_and_extension(),\n+        Some((\"directory\", None))\n+    );\n+    assert_eq!(\n+        VirtualPath(\"/directory/file\".to_string()).name_and_extension(),\n+        Some((\"file\", None))\n+    );\n+    assert_eq!(\n+        VirtualPath(\"/directory/.file\".to_string()).name_and_extension(),\n+        Some((\".file\", None))\n+    );\n+    assert_eq!(\n+        VirtualPath(\"/directory/.file.rs\".to_string()).name_and_extension(),\n+        Some((\".file\", Some(\"rs\")))\n+    );\n+    assert_eq!(\n+        VirtualPath(\"/directory/file.rs\".to_string()).name_and_extension(),\n+        Some((\"file\", Some(\"rs\")))\n+    );\n+}"}]}