{"sha": "65a5b082bc8c44c2281914381c07bd4dd9d11a2b", "node_id": "C_kwDOAAsO6NoAKDY1YTViMDgyYmM4YzQ0YzIyODE5MTQzODFjMDdiZDRkZDlkMTFhMmI", "commit": {"author": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2022-06-08T14:09:26Z"}, "committer": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2022-06-08T14:09:26Z"}, "message": "fix the impl error in `insert_all`", "tree": {"sha": "481d42e345fc9a38ff1f329d3b6e029b82aca9f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/481d42e345fc9a38ff1f329d3b6e029b82aca9f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65a5b082bc8c44c2281914381c07bd4dd9d11a2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65a5b082bc8c44c2281914381c07bd4dd9d11a2b", "html_url": "https://github.com/rust-lang/rust/commit/65a5b082bc8c44c2281914381c07bd4dd9d11a2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65a5b082bc8c44c2281914381c07bd4dd9d11a2b/comments", "author": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e1901537c1bccf323a2e33644b56b6a589ab388", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e1901537c1bccf323a2e33644b56b6a589ab388", "html_url": "https://github.com/rust-lang/rust/commit/7e1901537c1bccf323a2e33644b56b6a589ab388"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "3592fb33077d92ed33e392c75bbc88ec117f419b", "filename": "compiler/rustc_index/src/interval.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65a5b082bc8c44c2281914381c07bd4dd9d11a2b/compiler%2Frustc_index%2Fsrc%2Finterval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65a5b082bc8c44c2281914381c07bd4dd9d11a2b/compiler%2Frustc_index%2Fsrc%2Finterval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Finterval.rs?ref=65a5b082bc8c44c2281914381c07bd4dd9d11a2b", "patch": "@@ -203,7 +203,9 @@ impl<I: Idx> IntervalSet<I> {\n \n     pub fn insert_all(&mut self) {\n         self.clear();\n-        self.map.push((0, self.domain.try_into().unwrap()));\n+        if let Some(end) = self.domain.checked_sub(1) {\n+            self.map.push((0, end.try_into().unwrap()));\n+        }\n         debug_assert!(self.check_invariants());\n     }\n "}]}