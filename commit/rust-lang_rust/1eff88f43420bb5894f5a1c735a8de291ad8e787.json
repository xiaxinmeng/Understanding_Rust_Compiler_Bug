{"sha": "1eff88f43420bb5894f5a1c735a8de291ad8e787", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZmY4OGY0MzQyMGJiNTg5NGY1YTFjNzM1YThkZTI5MWFkOGU3ODc=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-03-27T21:28:05Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-06T22:35:48Z"}, "message": "win32 tweaks", "tree": {"sha": "13590b8632cb787be6ad882c7af0c20b1cabc4b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13590b8632cb787be6ad882c7af0c20b1cabc4b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1eff88f43420bb5894f5a1c735a8de291ad8e787", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1eff88f43420bb5894f5a1c735a8de291ad8e787", "html_url": "https://github.com/rust-lang/rust/commit/1eff88f43420bb5894f5a1c735a8de291ad8e787", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1eff88f43420bb5894f5a1c735a8de291ad8e787/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ad67e8c1454f65331d28f9a371f7742ec675093", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ad67e8c1454f65331d28f9a371f7742ec675093", "html_url": "https://github.com/rust-lang/rust/commit/9ad67e8c1454f65331d28f9a371f7742ec675093"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "32d292bd14266b3efc638d2a2ac2f226a4a37d35", "filename": "src/libstd/uv.rs", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/1eff88f43420bb5894f5a1c735a8de291ad8e787/src%2Flibstd%2Fuv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eff88f43420bb5894f5a1c735a8de291ad8e787/src%2Flibstd%2Fuv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv.rs?ref=1eff88f43420bb5894f5a1c735a8de291ad8e787", "patch": "@@ -99,6 +99,7 @@ type uv_err_t = {\n #[cfg(target_os = \"linux\")]\n #[cfg(target_os = \"macos\")]\n #[cfg(target_os = \"freebsd\")]\n+#[cfg(target_os = \"win32\")]\n type uv_stream_t = {\n     fields: uv_handle_fields\n };\n@@ -107,6 +108,7 @@ type uv_stream_t = {\n #[cfg(target_os = \"linux\")]\n #[cfg(target_os = \"macos\")]\n #[cfg(target_os = \"freebsd\")]\n+#[cfg(target_os = \"win32\")]\n type uv_tcp_t = {\n     fields: uv_handle_fields,\n     a00: *u8, a01: *u8, a02: *u8, a03: *u8,\n@@ -121,6 +123,7 @@ type uv_tcp_t = {\n #[cfg(target_os = \"linux\")]\n #[cfg(target_os = \"macos\")]\n #[cfg(target_os = \"freebsd\")]\n+#[cfg(target_os = \"win32\")]\n fn gen_stub_uv_tcp_t() -> uv_tcp_t {\n     ret { fields: { loop_handle: ptr::null(), type_: 0u32,\n                     close_cb: ptr::null(),\n@@ -136,6 +139,7 @@ fn gen_stub_uv_tcp_t() -> uv_tcp_t {\n     };\n }\n \n+/*\n #[cfg(target_os = \"win32\")]\n type uv_tcp_t = {\n     loop_handle: *libc::c_void\n@@ -144,18 +148,21 @@ type uv_tcp_t = {\n fn gen_stub_uv_tcp_t() -> uv_tcp_t {\n     ret { loop_handle: ptr::null() };\n }\n+*/\n \n // unix size: 48\n #[cfg(target_os = \"linux\")]\n #[cfg(target_os = \"macos\")]\n #[cfg(target_os = \"freebsd\")]\n+#[cfg(target_os = \"win32\")]\n type uv_connect_t = {\n     a00: *u8, a01: *u8, a02: *u8, a03: *u8,\n     a04: *u8, a05: *u8\n };\n #[cfg(target_os = \"linux\")]\n #[cfg(target_os = \"macos\")]\n #[cfg(target_os = \"freebsd\")]\n+#[cfg(target_os = \"win32\")]\n fn gen_stub_uv_connect_t() -> uv_connect_t {\n     ret {\n         a00: 0 as *u8, a01: 0 as *u8, a02: 0 as *u8, a03: 0 as *u8,\n@@ -168,26 +175,19 @@ fn gen_stub_uv_connect_t() -> uv_connect_t {\n #[cfg(target_os = \"linux\")]\n #[cfg(target_os = \"macos\")]\n #[cfg(target_os = \"freebsd\")]\n+#[cfg(target_os = \"win32\")]\n type uv_buf_t = {\n     base: *u8,\n     len: libc::size_t\n };\n // no gen stub method.. should create\n // it via uv::direct::buf_init()\n \n-#[cfg(target_os = \"win32\")]\n-type uv_connect_t = {\n-    loop_handle: *libc::c_void\n-};\n-#[cfg(target_os = \"win32\")]\n-fn gen_stub_uv_connect_t() -> uv_connect_t {\n-    ret { loop_handle: ptr::null() };\n-}\n-\n // unix size: 144\n #[cfg(target_os = \"linux\")]\n #[cfg(target_os = \"macos\")]\n #[cfg(target_os = \"freebsd\")]\n+#[cfg(target_os = \"win32\")]\n type uv_write_t = {\n     fields: uv_handle_fields,\n     a00: *u8, a01: *u8, a02: *u8, a03: *u8,\n@@ -198,6 +198,7 @@ type uv_write_t = {\n #[cfg(target_os = \"linux\")]\n #[cfg(target_os = \"macos\")]\n #[cfg(target_os = \"freebsd\")]\n+#[cfg(target_os = \"win32\")]\n fn gen_stub_uv_write_t() -> uv_write_t {\n     ret { fields: { loop_handle: ptr::null(), type_: 0u32,\n                     close_cb: ptr::null(),\n@@ -208,19 +209,12 @@ fn gen_stub_uv_write_t() -> uv_write_t {\n         a12: 0 as *u8, a13: 0 as *u8\n     };\n }\n-#[cfg(target_os = \"win32\")]\n-type uv_write_t = {\n-    loop_handle: *libc::c_void\n-};\n-#[cfg(target_os = \"win32\")]\n-fn gen_stub_uv_write_t() -> uv_write_t {\n-    ret { loop_handle: ptr::null() };\n-}\n \n // unix size: 16\n #[cfg(target_os = \"linux\")]\n #[cfg(target_os = \"macos\")]\n #[cfg(target_os = \"freebsd\")]\n+#[cfg(target_os = \"win32\")]\n type sockaddr_in = {\n     mut sin_family: u16,\n     mut sin_port: u16,\n@@ -229,6 +223,10 @@ type sockaddr_in = {\n };\n \n // unix size: 28 .. make due w/ 32\n+#[cfg(target_os = \"linux\")]\n+#[cfg(target_os = \"macos\")]\n+#[cfg(target_os = \"freebsd\")]\n+#[cfg(target_os = \"win32\")]\n type sockaddr_in6 = {\n     a0: *u8, a1: *u8,\n     a2: *u8, a3: *u8"}]}