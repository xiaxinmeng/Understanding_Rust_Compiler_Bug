{"sha": "25641351159cdc6198fe28434956d2a3871360df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NjQxMzUxMTU5Y2RjNjE5OGZlMjg0MzQ5NTZkMmEzODcxMzYwZGY=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-08-14T21:47:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-14T21:47:01Z"}, "message": "Rollup merge of #75519 - ssomers:btree_splitpoint_cleanup, r=Mark-Simulacrum\n\nBTreeMap: refactor splitpoint and move testing over to unit test\n\nr? @Mark-Simulacrum", "tree": {"sha": "100afa66e37cf384db4be112f810dd493fea741e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/100afa66e37cf384db4be112f810dd493fea741e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25641351159cdc6198fe28434956d2a3871360df", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfNwZVCRBK7hj4Ov3rIwAAdHIIAB7BdyYumn1B0QSQHyviXzba\ncWzDePLUWkqgULIutopkmNhGmsD8/gn+nd3FwD7AzVzDXLWgpYJMm/oMCwQc5QZH\n4zCcOAq1AHaDIgSXfjk5wQDjCFrcPqdG0dMsjOyW1N/8FKKodu1MCrbzPlbx1a5X\n2PpaQ1LgdharVHB1j+P85krpqrMuRN9DXI8TPb7Pv+XXkSCLnIgAQiI87+sZdwMz\nsnqCs7RLP14RPJmZ3XLvthIXqnSLjv4qeCT9H7YJHerIeXLQdXNmW2uCQlGiedeO\nGnQS5xC2My58N5N+mrZuepyJ+YYNipdY2iKNKjgyA1Is+lbQahhmHe0KQdiD14o=\n=lBrS\n-----END PGP SIGNATURE-----\n", "payload": "tree 100afa66e37cf384db4be112f810dd493fea741e\nparent 00e2dcbcda89dc3066388bbd9910ecfcc724c48e\nparent 421e0ff3d9aab9f0a1d262d9b4e0f34b49eb2465\nauthor Tyler Mandry <tmandry@gmail.com> 1597441621 -0700\ncommitter GitHub <noreply@github.com> 1597441621 -0700\n\nRollup merge of #75519 - ssomers:btree_splitpoint_cleanup, r=Mark-Simulacrum\n\nBTreeMap: refactor splitpoint and move testing over to unit test\n\nr? @Mark-Simulacrum\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25641351159cdc6198fe28434956d2a3871360df", "html_url": "https://github.com/rust-lang/rust/commit/25641351159cdc6198fe28434956d2a3871360df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25641351159cdc6198fe28434956d2a3871360df/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00e2dcbcda89dc3066388bbd9910ecfcc724c48e", "url": "https://api.github.com/repos/rust-lang/rust/commits/00e2dcbcda89dc3066388bbd9910ecfcc724c48e", "html_url": "https://github.com/rust-lang/rust/commit/00e2dcbcda89dc3066388bbd9910ecfcc724c48e"}, {"sha": "421e0ff3d9aab9f0a1d262d9b4e0f34b49eb2465", "url": "https://api.github.com/repos/rust-lang/rust/commits/421e0ff3d9aab9f0a1d262d9b4e0f34b49eb2465", "html_url": "https://github.com/rust-lang/rust/commit/421e0ff3d9aab9f0a1d262d9b4e0f34b49eb2465"}], "stats": {"total": 68, "additions": 37, "deletions": 31}, "files": [{"sha": "acc2ae73572ba757aa801bafde1ae2e376efc2b5", "filename": "library/alloc/src/collections/btree/node.rs", "status": "modified", "additions": 11, "deletions": 31, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/25641351159cdc6198fe28434956d2a3871360df/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25641351159cdc6198fe28434956d2a3871360df/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs?ref=25641351159cdc6198fe28434956d2a3871360df", "patch": "@@ -43,6 +43,9 @@ use crate::boxed::Box;\n const B: usize = 6;\n pub const MIN_LEN: usize = B - 1;\n pub const CAPACITY: usize = 2 * B - 1;\n+const KV_IDX_CENTER: usize = B - 1;\n+const EDGE_IDX_LEFT_OF_CENTER: usize = B - 1;\n+const EDGE_IDX_RIGHT_OF_CENTER: usize = B;\n \n /// The underlying representation of leaf nodes.\n #[repr(C)]\n@@ -834,38 +837,12 @@ enum InsertionPlace {\n fn splitpoint(edge_idx: usize) -> (usize, InsertionPlace) {\n     debug_assert!(edge_idx <= CAPACITY);\n     // Rust issue #74834 tries to explain these symmetric rules.\n-    let middle_kv_idx;\n-    let insertion;\n-    if edge_idx <= B - 2 {\n-        middle_kv_idx = B - 2;\n-        insertion = InsertionPlace::Left(edge_idx);\n-    } else if edge_idx == B - 1 {\n-        middle_kv_idx = B - 1;\n-        insertion = InsertionPlace::Left(edge_idx);\n-    } else if edge_idx == B {\n-        middle_kv_idx = B - 1;\n-        insertion = InsertionPlace::Right(0);\n-    } else {\n-        middle_kv_idx = B;\n-        let new_edge_idx = edge_idx - (B + 1);\n-        insertion = InsertionPlace::Right(new_edge_idx);\n-    }\n-    let mut left_len = middle_kv_idx;\n-    let mut right_len = CAPACITY - middle_kv_idx - 1;\n-    match insertion {\n-        InsertionPlace::Left(edge_idx) => {\n-            debug_assert!(edge_idx <= left_len);\n-            left_len += 1;\n-        }\n-        InsertionPlace::Right(edge_idx) => {\n-            debug_assert!(edge_idx <= right_len);\n-            right_len += 1;\n-        }\n+    match edge_idx {\n+        0..EDGE_IDX_LEFT_OF_CENTER => (KV_IDX_CENTER - 1, InsertionPlace::Left(edge_idx)),\n+        EDGE_IDX_LEFT_OF_CENTER => (KV_IDX_CENTER, InsertionPlace::Left(edge_idx)),\n+        EDGE_IDX_RIGHT_OF_CENTER => (KV_IDX_CENTER, InsertionPlace::Right(0)),\n+        _ => (KV_IDX_CENTER + 1, InsertionPlace::Right(edge_idx - (KV_IDX_CENTER + 1 + 1))),\n     }\n-    debug_assert!(left_len >= MIN_LEN);\n-    debug_assert!(right_len >= MIN_LEN);\n-    debug_assert!(left_len + right_len == CAPACITY);\n-    (middle_kv_idx, insertion)\n }\n \n impl<'a, K, V, NodeType> Handle<NodeRef<marker::Mut<'a>, K, V, NodeType>, marker::Edge> {\n@@ -1600,3 +1577,6 @@ unsafe fn slice_remove<T>(slice: &mut [T], idx: usize) -> T {\n         ret\n     }\n }\n+\n+#[cfg(test)]\n+mod tests;"}, {"sha": "e2416974ddca39c1e9410bec7f1d398930a7f51a", "filename": "library/alloc/src/collections/btree/node/tests.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/25641351159cdc6198fe28434956d2a3871360df/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25641351159cdc6198fe28434956d2a3871360df/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode%2Ftests.rs?ref=25641351159cdc6198fe28434956d2a3871360df", "patch": "@@ -0,0 +1,25 @@\n+use super::*;\n+\n+#[test]\n+fn test_splitpoint() {\n+    for idx in 0..=CAPACITY {\n+        let (middle_kv_idx, insertion) = splitpoint(idx);\n+\n+        // Simulate performing the split:\n+        let mut left_len = middle_kv_idx;\n+        let mut right_len = CAPACITY - middle_kv_idx - 1;\n+        match insertion {\n+            InsertionPlace::Left(edge_idx) => {\n+                assert!(edge_idx <= left_len);\n+                left_len += 1;\n+            }\n+            InsertionPlace::Right(edge_idx) => {\n+                assert!(edge_idx <= right_len);\n+                right_len += 1;\n+            }\n+        }\n+        assert!(left_len >= MIN_LEN);\n+        assert!(right_len >= MIN_LEN);\n+        assert!(left_len + right_len == CAPACITY);\n+    }\n+}"}, {"sha": "75a2c6be41c56484189bb3f0a93a967481b0eef4", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/25641351159cdc6198fe28434956d2a3871360df/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25641351159cdc6198fe28434956d2a3871360df/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=25641351159cdc6198fe28434956d2a3871360df", "patch": "@@ -93,6 +93,7 @@\n #![feature(container_error_extra)]\n #![feature(dropck_eyepatch)]\n #![feature(exact_size_is_empty)]\n+#![feature(exclusive_range_pattern)]\n #![feature(extend_one)]\n #![feature(fmt_internals)]\n #![feature(fn_traits)]"}]}