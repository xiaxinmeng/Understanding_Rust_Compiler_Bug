{"sha": "a92b2274ce064cce18b7c68d66ba7c019dde487c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MmIyMjc0Y2UwNjRjY2UxOGI3YzY4ZDY2YmE3YzAxOWRkZTQ4N2M=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-14T11:05:25Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-14T11:05:25Z"}, "message": "fix typo and deduplicate comment", "tree": {"sha": "1a075547c4495c5a2e0a1a77d31cb429267fa154", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a075547c4495c5a2e0a1a77d31cb429267fa154"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a92b2274ce064cce18b7c68d66ba7c019dde487c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a92b2274ce064cce18b7c68d66ba7c019dde487c", "html_url": "https://github.com/rust-lang/rust/commit/a92b2274ce064cce18b7c68d66ba7c019dde487c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a92b2274ce064cce18b7c68d66ba7c019dde487c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a056a7a3bb1358051874723cff179797ce00261", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a056a7a3bb1358051874723cff179797ce00261", "html_url": "https://github.com/rust-lang/rust/commit/2a056a7a3bb1358051874723cff179797ce00261"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "3815ed5164446175d2f5b3ca0ead8e004a62c1de", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a92b2274ce064cce18b7c68d66ba7c019dde487c/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a92b2274ce064cce18b7c68d66ba7c019dde487c/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=a92b2274ce064cce18b7c68d66ba7c019dde487c", "patch": "@@ -443,16 +443,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             \"assert_uninit_valid\" => {\n                 let ty = substs.type_at(0);\n                 let layout = this.layout_of(ty)?;\n+                // Return here because we panicked instead of returning normally from the intrinsic.\n                 if layout.abi.is_uninhabited() {\n-                    // Return here because we paniced instead of returning normally from the intrinsic.\n                     return this.start_panic(&format!(\"attempted to instantiate uninhabited type `{}`\", ty), unwind);\n                 }\n                 if intrinsic_name == \"assert_zero_valid\" && !layout.might_permit_raw_init(this, /*zero:*/ true).unwrap() {\n-                    // Return here because we paniced instead of returning normally from the intrinsic.\n                     return this.start_panic(&format!(\"attempted to zero-initialize type `{}`, which is invalid\", ty), unwind);\n                 }\n                 if intrinsic_name == \"assert_uninit_valid\" && !layout.might_permit_raw_init(this, /*zero:*/ false).unwrap() {\n-                    // Return here because we paniced instead of returning normally from the intrinsic.\n                     return this.start_panic(&format!(\"attempted to leave type `{}` uninitialized, which is invalid\", ty), unwind);\n                 }\n             }"}]}