{"sha": "a129a85144efb67bfd8f380a758ed6be41d3e29b", "node_id": "C_kwDOAAsO6NoAKGExMjlhODUxNDRlZmI2N2JmZDhmMzgwYTc1OGVkNmJlNDFkM2UyOWI", "commit": {"author": {"name": "Rob Pilling", "email": "robpilling@gmail.com", "date": "2022-01-16T21:47:44Z"}, "committer": {"name": "Rob Pilling", "email": "robpilling@gmail.com", "date": "2022-01-25T22:51:19Z"}, "message": "Handle generics with ParamEnv", "tree": {"sha": "1ab44d42eb2166fd4adef0aba45cf85b3e6a8eea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ab44d42eb2166fd4adef0aba45cf85b3e6a8eea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a129a85144efb67bfd8f380a758ed6be41d3e29b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a129a85144efb67bfd8f380a758ed6be41d3e29b", "html_url": "https://github.com/rust-lang/rust/commit/a129a85144efb67bfd8f380a758ed6be41d3e29b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a129a85144efb67bfd8f380a758ed6be41d3e29b/comments", "author": {"login": "bobrippling", "id": 205673, "node_id": "MDQ6VXNlcjIwNTY3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/205673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobrippling", "html_url": "https://github.com/bobrippling", "followers_url": "https://api.github.com/users/bobrippling/followers", "following_url": "https://api.github.com/users/bobrippling/following{/other_user}", "gists_url": "https://api.github.com/users/bobrippling/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobrippling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobrippling/subscriptions", "organizations_url": "https://api.github.com/users/bobrippling/orgs", "repos_url": "https://api.github.com/users/bobrippling/repos", "events_url": "https://api.github.com/users/bobrippling/events{/privacy}", "received_events_url": "https://api.github.com/users/bobrippling/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bobrippling", "id": 205673, "node_id": "MDQ6VXNlcjIwNTY3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/205673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobrippling", "html_url": "https://github.com/bobrippling", "followers_url": "https://api.github.com/users/bobrippling/followers", "following_url": "https://api.github.com/users/bobrippling/following{/other_user}", "gists_url": "https://api.github.com/users/bobrippling/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobrippling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobrippling/subscriptions", "organizations_url": "https://api.github.com/users/bobrippling/orgs", "repos_url": "https://api.github.com/users/bobrippling/repos", "events_url": "https://api.github.com/users/bobrippling/events{/privacy}", "received_events_url": "https://api.github.com/users/bobrippling/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54d2d30662c2832554bb127f017f7a311bb62b4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/54d2d30662c2832554bb127f017f7a311bb62b4e", "html_url": "https://github.com/rust-lang/rust/commit/54d2d30662c2832554bb127f017f7a311bb62b4e"}], "stats": {"total": 58, "additions": 54, "deletions": 4}, "files": [{"sha": "af0c9e5e5090e3b5bf239c8a4438f7f5599e687f", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/checks.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a129a85144efb67bfd8f380a758ed6be41d3e29b/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a129a85144efb67bfd8f380a758ed6be41d3e29b/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs?ref=a129a85144efb67bfd8f380a758ed6be41d3e29b", "patch": "@@ -18,7 +18,7 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::{ExprKind, Node, QPath};\n use rustc_middle::ty::adjustment::AllowTwoPhase;\n use rustc_middle::ty::fold::TypeFoldable;\n-use rustc_middle::ty::{self, ParamEnv, Ty};\n+use rustc_middle::ty::{self, Ty};\n use rustc_session::Session;\n use rustc_span::symbol::Ident;\n use rustc_span::{self, MultiSpan, Span};\n@@ -514,7 +514,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let supplied_types: Vec<_> = provided_args.iter().map(|arg| self.check_expr(arg)).collect();\n \n         let all_match = iter::zip(expected_types, supplied_types)\n-            .all(|(expected, supplied)| self.can_eq(ParamEnv::empty(), expected, supplied).is_ok());\n+            .all(|(expected, supplied)| self.can_eq(self.param_env, expected, supplied).is_ok());\n \n         if all_match {\n             match provided_args {"}, {"sha": "c9b8a41d469b99ba384d62cd7622978eb8f41f28", "filename": "src/test/ui/suggestions/args-instead-of-tuple.fixed", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a129a85144efb67bfd8f380a758ed6be41d3e29b/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a129a85144efb67bfd8f380a758ed6be41d3e29b/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple.fixed?ref=a129a85144efb67bfd8f380a758ed6be41d3e29b", "patch": "@@ -12,7 +12,16 @@ fn main() {\n     //~^ ERROR this enum variant takes 1 argument but 0 arguments were supplied\n \n     two_ints((1, 2)); //~ ERROR this function takes 1 argument\n+\n+    with_generic((3, 4)); //~ ERROR this function takes 1 argument\n }\n \n fn two_ints(_: (i32, i32)) {\n }\n+\n+fn with_generic<T: Copy + Send>((a, b): (i32, T)) {\n+    if false {\n+        // test generics/bound handling\n+        with_generic((a, b)); //~ ERROR this function takes 1 argument\n+    }\n+}"}, {"sha": "d4cc3024dd0d228d20f879fb60f7ebbfeb46822d", "filename": "src/test/ui/suggestions/args-instead-of-tuple.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a129a85144efb67bfd8f380a758ed6be41d3e29b/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a129a85144efb67bfd8f380a758ed6be41d3e29b/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple.rs?ref=a129a85144efb67bfd8f380a758ed6be41d3e29b", "patch": "@@ -12,7 +12,16 @@ fn main() {\n     //~^ ERROR this enum variant takes 1 argument but 0 arguments were supplied\n \n     two_ints(1, 2); //~ ERROR this function takes 1 argument\n+\n+    with_generic(3, 4); //~ ERROR this function takes 1 argument\n }\n \n fn two_ints(_: (i32, i32)) {\n }\n+\n+fn with_generic<T: Copy + Send>((a, b): (i32, T)) {\n+    if false {\n+        // test generics/bound handling\n+        with_generic(a, b); //~ ERROR this function takes 1 argument\n+    }\n+}"}, {"sha": "172db7ee3df38973b3ae976458a0c24d0005124e", "filename": "src/test/ui/suggestions/args-instead-of-tuple.stderr", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/a129a85144efb67bfd8f380a758ed6be41d3e29b/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a129a85144efb67bfd8f380a758ed6be41d3e29b/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple.stderr?ref=a129a85144efb67bfd8f380a758ed6be41d3e29b", "patch": "@@ -38,7 +38,7 @@ LL |     two_ints(1, 2);\n    |     ^^^^^^^^ -  - supplied 2 arguments\n    |\n note: function defined here\n-  --> $DIR/args-instead-of-tuple.rs:17:4\n+  --> $DIR/args-instead-of-tuple.rs:19:4\n    |\n LL | fn two_ints(_: (i32, i32)) {\n    |    ^^^^^^^^ -------------\n@@ -47,6 +47,38 @@ help: use parentheses to construct a tuple\n LL |     two_ints((1, 2));\n    |              +    +\n \n-error: aborting due to 4 previous errors\n+error[E0061]: this function takes 1 argument but 2 arguments were supplied\n+  --> $DIR/args-instead-of-tuple.rs:16:5\n+   |\n+LL |     with_generic(3, 4);\n+   |     ^^^^^^^^^^^^ -  - supplied 2 arguments\n+   |\n+note: function defined here\n+  --> $DIR/args-instead-of-tuple.rs:22:4\n+   |\n+LL | fn with_generic<T: Copy + Send>((a, b): (i32, T)) {\n+   |    ^^^^^^^^^^^^                 ----------------\n+help: use parentheses to construct a tuple\n+   |\n+LL |     with_generic((3, 4));\n+   |                  +    +\n+\n+error[E0061]: this function takes 1 argument but 2 arguments were supplied\n+  --> $DIR/args-instead-of-tuple.rs:25:9\n+   |\n+LL |         with_generic(a, b);\n+   |         ^^^^^^^^^^^^ -  - supplied 2 arguments\n+   |\n+note: function defined here\n+  --> $DIR/args-instead-of-tuple.rs:22:4\n+   |\n+LL | fn with_generic<T: Copy + Send>((a, b): (i32, T)) {\n+   |    ^^^^^^^^^^^^                 ----------------\n+help: use parentheses to construct a tuple\n+   |\n+LL |         with_generic((a, b));\n+   |                      +    +\n+\n+error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0061`."}]}