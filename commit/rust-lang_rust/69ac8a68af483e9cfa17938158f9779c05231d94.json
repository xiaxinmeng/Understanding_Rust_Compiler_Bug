{"sha": "69ac8a68af483e9cfa17938158f9779c05231d94", "node_id": "C_kwDOAAsO6NoAKDY5YWM4YTY4YWY0ODNlOWNmYTE3OTM4MTU4Zjk3NzljMDUyMzFkOTQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-08T04:36:30Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-08T04:36:30Z"}, "message": "Collapse some weirdly-wrapping derives", "tree": {"sha": "65e37f42ef9d188190658b9e2e07689869549499", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65e37f42ef9d188190658b9e2e07689869549499"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69ac8a68af483e9cfa17938158f9779c05231d94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69ac8a68af483e9cfa17938158f9779c05231d94", "html_url": "https://github.com/rust-lang/rust/commit/69ac8a68af483e9cfa17938158f9779c05231d94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69ac8a68af483e9cfa17938158f9779c05231d94/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b21131278cc38ab8d79444de340015faadd061c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b21131278cc38ab8d79444de340015faadd061c", "html_url": "https://github.com/rust-lang/rust/commit/9b21131278cc38ab8d79444de340015faadd061c"}], "stats": {"total": 84, "additions": 12, "deletions": 72}, "files": [{"sha": "e6155beda854e96b65bdc3ede41101f312cd8e20", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/69ac8a68af483e9cfa17938158f9779c05231d94/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69ac8a68af483e9cfa17938158f9779c05231d94/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=69ac8a68af483e9cfa17938158f9779c05231d94", "patch": "@@ -1438,18 +1438,8 @@ impl<'hir> Body<'hir> {\n }\n \n /// The type of source expression that caused this generator to be created.\n-#[derive(\n-    Clone,\n-    PartialEq,\n-    PartialOrd,\n-    Eq,\n-    Hash,\n-    HashStable_Generic,\n-    Encodable,\n-    Decodable,\n-    Debug,\n-    Copy\n-)]\n+#[derive(Clone, PartialEq, PartialOrd, Eq, Hash, Debug, Copy)]\n+#[derive(HashStable_Generic, Encodable, Decodable)]\n pub enum GeneratorKind {\n     /// An explicit `async` block or the body of an async function.\n     Async(AsyncGeneratorKind),\n@@ -1481,18 +1471,8 @@ impl GeneratorKind {\n ///\n /// This helps error messages but is also used to drive coercions in\n /// type-checking (see #60424).\n-#[derive(\n-    Clone,\n-    PartialEq,\n-    PartialOrd,\n-    Eq,\n-    Hash,\n-    HashStable_Generic,\n-    Encodable,\n-    Decodable,\n-    Debug,\n-    Copy\n-)]\n+#[derive(Clone, PartialEq, PartialOrd, Eq, Hash, Debug, Copy)]\n+#[derive(HashStable_Generic, Encodable, Decodable)]\n pub enum AsyncGeneratorKind {\n     /// An explicit `async` block written by the user.\n     Block,"}, {"sha": "65d2cd64bf69319c9b2e1e06924c1d0cfc697c5e", "filename": "compiler/rustc_target/src/asm/mod.rs", "status": "modified", "additions": 8, "deletions": 48, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/69ac8a68af483e9cfa17938158f9779c05231d94/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69ac8a68af483e9cfa17938158f9779c05231d94/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmod.rs?ref=69ac8a68af483e9cfa17938158f9779c05231d94", "patch": "@@ -244,18 +244,8 @@ impl FromStr for InlineAsmArch {\n     }\n }\n \n-#[derive(\n-    Copy,\n-    Clone,\n-    Encodable,\n-    Decodable,\n-    Debug,\n-    Eq,\n-    PartialEq,\n-    PartialOrd,\n-    Hash,\n-    HashStable_Generic\n-)]\n+#[derive(Copy, Clone, Debug, Eq, PartialEq, PartialOrd, Hash)]\n+#[derive(HashStable_Generic, Encodable, Decodable)]\n pub enum InlineAsmReg {\n     X86(X86InlineAsmReg),\n     Arm(ArmInlineAsmReg),\n@@ -406,18 +396,8 @@ impl InlineAsmReg {\n     }\n }\n \n-#[derive(\n-    Copy,\n-    Clone,\n-    Encodable,\n-    Decodable,\n-    Debug,\n-    Eq,\n-    PartialEq,\n-    PartialOrd,\n-    Hash,\n-    HashStable_Generic\n-)]\n+#[derive(Copy, Clone, Debug, Eq, PartialEq, PartialOrd, Hash)]\n+#[derive(HashStable_Generic, Encodable, Decodable)]\n pub enum InlineAsmRegClass {\n     X86(X86InlineAsmRegClass),\n     Arm(ArmInlineAsmRegClass),\n@@ -620,18 +600,8 @@ impl InlineAsmRegClass {\n     }\n }\n \n-#[derive(\n-    Copy,\n-    Clone,\n-    Encodable,\n-    Decodable,\n-    Debug,\n-    Eq,\n-    PartialEq,\n-    PartialOrd,\n-    Hash,\n-    HashStable_Generic\n-)]\n+#[derive(Copy, Clone, Debug, Eq, PartialEq, PartialOrd, Hash)]\n+#[derive(HashStable_Generic, Encodable, Decodable)]\n pub enum InlineAsmRegOrRegClass {\n     Reg(InlineAsmReg),\n     RegClass(InlineAsmRegClass),\n@@ -808,18 +778,8 @@ pub fn allocatable_registers(\n     }\n }\n \n-#[derive(\n-    Copy,\n-    Clone,\n-    Encodable,\n-    Decodable,\n-    Debug,\n-    Eq,\n-    PartialEq,\n-    PartialOrd,\n-    Hash,\n-    HashStable_Generic\n-)]\n+#[derive(Copy, Clone, Debug, Eq, PartialEq, PartialOrd, Hash)]\n+#[derive(HashStable_Generic, Encodable, Decodable)]\n pub enum InlineAsmClobberAbi {\n     X86,\n     X86_64Win,"}]}