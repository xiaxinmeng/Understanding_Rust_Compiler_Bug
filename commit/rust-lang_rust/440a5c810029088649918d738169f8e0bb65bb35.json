{"sha": "440a5c810029088649918d738169f8e0bb65bb35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MGE1YzgxMDAyOTA4ODY0OTkxOGQ3MzgxNjlmOGUwYmI2NWJiMzU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-10T14:37:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-10T14:37:40Z"}, "message": "rename RUST_CTFE_BACKTRACE to RUSTC_CTFE_BACKTRACE", "tree": {"sha": "e98e9b79253c396177dffb877460554c69e6fa29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e98e9b79253c396177dffb877460554c69e6fa29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/440a5c810029088649918d738169f8e0bb65bb35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/440a5c810029088649918d738169f8e0bb65bb35", "html_url": "https://github.com/rust-lang/rust/commit/440a5c810029088649918d738169f8e0bb65bb35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/440a5c810029088649918d738169f8e0bb65bb35/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f70adcb18e5dc8df0672898a8404fd05a9c32cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f70adcb18e5dc8df0672898a8404fd05a9c32cb", "html_url": "https://github.com/rust-lang/rust/commit/6f70adcb18e5dc8df0672898a8404fd05a9c32cb"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ef0e205184871403d36f00f849674b201f2ca6a4", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/440a5c810029088649918d738169f8e0bb65bb35/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/440a5c810029088649918d738169f8e0bb65bb35/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=440a5c810029088649918d738169f8e0bb65bb35", "patch": "@@ -217,7 +217,7 @@ fn print_backtrace(backtrace: &mut Backtrace) {\n \n impl<'tcx> From<InterpError<'tcx>> for InterpErrorInfo<'tcx> {\n     fn from(kind: InterpError<'tcx>) -> Self {\n-        let backtrace = match env::var(\"RUST_CTFE_BACKTRACE\") {\n+        let backtrace = match env::var(\"RUSTC_CTFE_BACKTRACE\") {\n             // Matching `RUST_BACKTRACE` -- we treat \"0\" the same as \"not present\".\n             Ok(ref val) if val != \"0\" => {\n                 let mut backtrace = Backtrace::new_unresolved();"}]}