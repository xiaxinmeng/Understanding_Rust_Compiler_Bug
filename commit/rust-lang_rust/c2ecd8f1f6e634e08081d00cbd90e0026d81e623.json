{"sha": "c2ecd8f1f6e634e08081d00cbd90e0026d81e623", "node_id": "C_kwDOAAsO6NoAKGMyZWNkOGYxZjZlNjM0ZTA4MDgxZDAwY2JkOTBlMDAyNmQ4MWU2MjM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-21T15:59:15Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-21T20:41:17Z"}, "message": "merge self type and substs in `trait_method`", "tree": {"sha": "f41bb65f8631a0867beb43cbb21f70519125337f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f41bb65f8631a0867beb43cbb21f70519125337f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2ecd8f1f6e634e08081d00cbd90e0026d81e623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2ecd8f1f6e634e08081d00cbd90e0026d81e623", "html_url": "https://github.com/rust-lang/rust/commit/c2ecd8f1f6e634e08081d00cbd90e0026d81e623", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2ecd8f1f6e634e08081d00cbd90e0026d81e623/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6c5212f1357345d7bd90ca799b74869f3406b19", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6c5212f1357345d7bd90ca799b74869f3406b19", "html_url": "https://github.com/rust-lang/rust/commit/a6c5212f1357345d7bd90ca799b74869f3406b19"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "a62cfecf78b7854710a2700c85b9ccc7b562408e", "filename": "compiler/rustc_mir_build/src/build/matches/test.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c2ecd8f1f6e634e08081d00cbd90e0026d81e623/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ecd8f1f6e634e08081d00cbd90e0026d81e623/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs?ref=c2ecd8f1f6e634e08081d00cbd90e0026d81e623", "patch": "@@ -250,7 +250,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                     let ref_str_ty = tcx.mk_imm_ref(re_erased, tcx.types.str_);\n                     let ref_str = self.temp(ref_str_ty, test.span);\n                     let deref = tcx.require_lang_item(LangItem::Deref, None);\n-                    let method = trait_method(tcx, deref, sym::deref, ty, []);\n+                    let method = trait_method(tcx, deref, sym::deref, [ty]);\n                     let eq_block = self.cfg.start_new_block();\n                     self.cfg.push_assign(block, source_info, ref_string, Rvalue::Ref(re_erased, BorrowKind::Shared, place));\n                     self.cfg.terminate(\n@@ -445,7 +445,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         };\n \n         let eq_def_id = self.tcx.require_lang_item(LangItem::PartialEq, Some(source_info.span));\n-        let method = trait_method(self.tcx, eq_def_id, sym::eq, deref_ty, [deref_ty.into()]);\n+        let method = trait_method(self.tcx, eq_def_id, sym::eq, [deref_ty, deref_ty]);\n \n         let bool_ty = self.tcx.types.bool;\n         let eq_result = self.temp(bool_ty, source_info.span);\n@@ -837,10 +837,9 @@ fn trait_method<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     trait_def_id: DefId,\n     method_name: Symbol,\n-    self_ty: Ty<'tcx>,\n-    params: impl IntoIterator<Item = GenericArg<'tcx>, IntoIter: ExactSizeIterator>,\n+    substs: impl IntoIterator<Item = impl Into<GenericArg<'tcx>>>,\n ) -> ConstantKind<'tcx> {\n-    let substs = tcx.mk_substs_trait(self_ty, params);\n+    let substs = tcx.mk_substs(substs.into_iter().map(Into::into));\n \n     // The unhygienic comparison here is acceptable because this is only\n     // used on known traits."}]}