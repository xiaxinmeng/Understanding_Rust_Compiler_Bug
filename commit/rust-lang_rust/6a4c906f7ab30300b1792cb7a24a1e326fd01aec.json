{"sha": "6a4c906f7ab30300b1792cb7a24a1e326fd01aec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNGM5MDZmN2FiMzAzMDBiMTc5MmNiN2EyNGExZTMyNmZkMDFhZWM=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-02-05T14:14:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-05T14:14:36Z"}, "message": "Rollup merge of #38921 - chris-morgan:windows-unprivileged-symlink-creation, r=alexcrichton\n\nSupport unprivileged symlink creation in Windows\n\nSymlink creation on Windows has in the past basically required admin; it\u2019s being opened up a bit in the Creators Update, so that at least people who have put their computers into Developer Mode will be able to create symlinks without special privileges. (It\u2019s unclear from what Microsoft has said whether Developer Mode will be required in the final Creators Update release, but sadly I expect it still will be, so this *still* won\u2019t be as helpful as I\u2019d like.)\n\nBecause of compatibility concerns, they\u2019ve hidden this new functionality behind a new flag in the CreateSymbolicLink dwFlags: `SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE`. So we add this flag in order to join the party.\n\nSources:\n\n- https://blogs.windows.com/buildingapps/2016/12/02/symlinks-windows-10/ is the official announcement (search for CreateSymbolicLink)\n\n- https://news.ycombinator.com/item?id=13096354 on why the new flag.", "tree": {"sha": "3c5a63acbdc0ba896c9b8a371b850272862080f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c5a63acbdc0ba896c9b8a371b850272862080f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a4c906f7ab30300b1792cb7a24a1e326fd01aec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a4c906f7ab30300b1792cb7a24a1e326fd01aec", "html_url": "https://github.com/rust-lang/rust/commit/6a4c906f7ab30300b1792cb7a24a1e326fd01aec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a4c906f7ab30300b1792cb7a24a1e326fd01aec/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "001bfb9e566b92b9336eb210b270c9404626d89f", "url": "https://api.github.com/repos/rust-lang/rust/commits/001bfb9e566b92b9336eb210b270c9404626d89f", "html_url": "https://github.com/rust-lang/rust/commit/001bfb9e566b92b9336eb210b270c9404626d89f"}, {"sha": "02ae1e10605dccf29c77f94dbbf916b28d2b7c54", "url": "https://api.github.com/repos/rust-lang/rust/commits/02ae1e10605dccf29c77f94dbbf916b28d2b7c54", "html_url": "https://github.com/rust-lang/rust/commit/02ae1e10605dccf29c77f94dbbf916b28d2b7c54"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "b8679aaa0c5456347187b918876de94876ad8236", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6a4c906f7ab30300b1792cb7a24a1e326fd01aec/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a4c906f7ab30300b1792cb7a24a1e326fd01aec/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=6a4c906f7ab30300b1792cb7a24a1e326fd01aec", "patch": "@@ -167,6 +167,7 @@ pub const SYMLINK_FLAG_RELATIVE: DWORD = 0x00000001;\n pub const FSCTL_SET_REPARSE_POINT: DWORD = 0x900a4;\n \n pub const SYMBOLIC_LINK_FLAG_DIRECTORY: DWORD = 0x1;\n+pub const SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE: DWORD = 0x2;\n \n // Note that these are not actually HANDLEs, just values to pass to GetStdHandle\n pub const STD_INPUT_HANDLE: DWORD = -10i32 as DWORD;"}, {"sha": "4efc68afdc4c74f6387f359c788f30eb42b20fbe", "filename": "src/libstd/sys/windows/fs.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6a4c906f7ab30300b1792cb7a24a1e326fd01aec/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a4c906f7ab30300b1792cb7a24a1e326fd01aec/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs?ref=6a4c906f7ab30300b1792cb7a24a1e326fd01aec", "patch": "@@ -646,9 +646,25 @@ pub fn symlink_inner(src: &Path, dst: &Path, dir: bool) -> io::Result<()> {\n     let src = to_u16s(src)?;\n     let dst = to_u16s(dst)?;\n     let flags = if dir { c::SYMBOLIC_LINK_FLAG_DIRECTORY } else { 0 };\n-    cvt(unsafe {\n-        c::CreateSymbolicLinkW(dst.as_ptr(), src.as_ptr(), flags) as c::BOOL\n-    })?;\n+    // Formerly, symlink creation required the SeCreateSymbolicLink privilege. For the Windows 10\n+    // Creators Update, Microsoft loosened this to allow unprivileged symlink creation if the\n+    // computer is in Developer Mode, but SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE must be\n+    // added to dwFlags to opt into this behaviour.\n+    let result = cvt(unsafe {\n+        c::CreateSymbolicLinkW(dst.as_ptr(), src.as_ptr(),\n+                               flags | c::SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE) as c::BOOL\n+    });\n+    if let Err(err) = result {\n+        if err.raw_os_error() == Some(c::ERROR_INVALID_PARAMETER as i32) {\n+            // Older Windows objects to SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE,\n+            // so if we encounter ERROR_INVALID_PARAMETER, retry without that flag.\n+            cvt(unsafe {\n+                c::CreateSymbolicLinkW(dst.as_ptr(), src.as_ptr(), flags) as c::BOOL\n+            })?;\n+        } else {\n+            return Err(err);\n+        }\n+    }\n     Ok(())\n }\n "}]}