{"sha": "acbe297fbd10250e0d99d1e3e98751dd6ef77adc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYmUyOTdmYmQxMDI1MGUwZDk5ZDFlM2U5ODc1MWRkNmVmNzdhZGM=", "commit": {"author": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2021-03-12T14:08:07Z"}, "committer": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2021-03-12T14:16:04Z"}, "message": "update relevance score u8 -> u32", "tree": {"sha": "5ff7a667e2d10a69333af496b75a85a637f0488c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ff7a667e2d10a69333af496b75a85a637f0488c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acbe297fbd10250e0d99d1e3e98751dd6ef77adc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acbe297fbd10250e0d99d1e3e98751dd6ef77adc", "html_url": "https://github.com/rust-lang/rust/commit/acbe297fbd10250e0d99d1e3e98751dd6ef77adc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acbe297fbd10250e0d99d1e3e98751dd6ef77adc/comments", "author": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10fb065b146d7d03a65bbc73cdb34d32523dafa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/10fb065b146d7d03a65bbc73cdb34d32523dafa1", "html_url": "https://github.com/rust-lang/rust/commit/10fb065b146d7d03a65bbc73cdb34d32523dafa1"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "3febab32b589093a662d59cefb026cb9a8ea5ef5", "filename": "crates/ide_completion/src/item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acbe297fbd10250e0d99d1e3e98751dd6ef77adc/crates%2Fide_completion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acbe297fbd10250e0d99d1e3e98751dd6ef77adc/crates%2Fide_completion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fitem.rs?ref=acbe297fbd10250e0d99d1e3e98751dd6ef77adc", "patch": "@@ -156,7 +156,7 @@ impl CompletionRelevance {\n     ///\n     /// See is_relevant if you need to make some judgement about score\n     /// in an absolute sense.\n-    pub fn score(&self) -> u8 {\n+    pub fn score(&self) -> u32 {\n         let mut score = 0;\n \n         if self.exact_name_match {\n@@ -525,7 +525,7 @@ mod tests {\n             .map(|r| (r.score(), r))\n             .sorted_by_key(|(score, _r)| *score)\n             .fold(\n-                (u8::MIN, vec![vec![]]),\n+                (u32::MIN, vec![vec![]]),\n                 |(mut currently_collecting_score, mut out), (score, r)| {\n                     if currently_collecting_score == score {\n                         out.last_mut().unwrap().push(r);"}, {"sha": "1a8cdadad0084d6c91ca2c9401a888dd4b300a72", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/acbe297fbd10250e0d99d1e3e98751dd6ef77adc/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acbe297fbd10250e0d99d1e3e98751dd6ef77adc/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=acbe297fbd10250e0d99d1e3e98751dd6ef77adc", "patch": "@@ -220,12 +220,12 @@ pub(crate) fn completion_item(\n         }\n         // The relevance needs to be inverted to come up with a sort score\n         // because the client will sort ascending.\n-        let sort_score = relevance.score() ^ 0xFF;\n-        // Zero pad the string to ensure values are sorted numerically\n-        // even though the client is sorting alphabetically. Three\n-        // characters is enough to fit the largest u8, which is the\n-        // type of the relevance score.\n-        res.sort_text = Some(format!(\"{:03}\", sort_score));\n+        let sort_score = relevance.score() ^ 0xFF_FF_FF_FF;\n+        // Zero pad the string to ensure values can be properly sorted\n+        // by the client. Hex format is used because it is easier to\n+        // visually compare very large values, which the sort text\n+        // tends to be since it is the opposite of the score.\n+        res.sort_text = Some(format!(\"{:08x}\", sort_score));\n     }\n \n     set_score(&mut lsp_item, item.relevance());\n@@ -1117,13 +1117,13 @@ mod tests {\n                 (\n                     \"&arg\",\n                     Some(\n-                        \"253\",\n+                        \"fffffffd\",\n                     ),\n                 ),\n                 (\n                     \"arg\",\n                     Some(\n-                        \"254\",\n+                        \"fffffffe\",\n                     ),\n                 ),\n             ]"}]}