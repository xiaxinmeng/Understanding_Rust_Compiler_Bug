{"sha": "c3241d0ba03ff1e90ffdb4cd434660f81194b438", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMjQxZDBiYTAzZmYxZTkwZmZkYjRjZDQzNDY2MGY4MTE5NGI0Mzg=", "commit": {"author": {"name": "tyler", "email": "tyler@brainiumstudios.com", "date": "2019-05-11T17:14:40Z"}, "committer": {"name": "tyler", "email": "tyler@brainiumstudios.com", "date": "2019-05-15T14:30:34Z"}, "message": "cold was necessary on try_initialize_nodrop to get more straight line asm", "tree": {"sha": "42a04342c948ffef5d9f821e9645c48998fcebda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42a04342c948ffef5d9f821e9645c48998fcebda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3241d0ba03ff1e90ffdb4cd434660f81194b438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3241d0ba03ff1e90ffdb4cd434660f81194b438", "html_url": "https://github.com/rust-lang/rust/commit/c3241d0ba03ff1e90ffdb4cd434660f81194b438", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3241d0ba03ff1e90ffdb4cd434660f81194b438/comments", "author": {"login": "mtak-", "id": 6643140, "node_id": "MDQ6VXNlcjY2NDMxNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6643140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtak-", "html_url": "https://github.com/mtak-", "followers_url": "https://api.github.com/users/mtak-/followers", "following_url": "https://api.github.com/users/mtak-/following{/other_user}", "gists_url": "https://api.github.com/users/mtak-/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtak-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtak-/subscriptions", "organizations_url": "https://api.github.com/users/mtak-/orgs", "repos_url": "https://api.github.com/users/mtak-/repos", "events_url": "https://api.github.com/users/mtak-/events{/privacy}", "received_events_url": "https://api.github.com/users/mtak-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mtak-", "id": 6643140, "node_id": "MDQ6VXNlcjY2NDMxNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6643140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtak-", "html_url": "https://github.com/mtak-", "followers_url": "https://api.github.com/users/mtak-/followers", "following_url": "https://api.github.com/users/mtak-/following{/other_user}", "gists_url": "https://api.github.com/users/mtak-/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtak-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtak-/subscriptions", "organizations_url": "https://api.github.com/users/mtak-/orgs", "repos_url": "https://api.github.com/users/mtak-/repos", "events_url": "https://api.github.com/users/mtak-/events{/privacy}", "received_events_url": "https://api.github.com/users/mtak-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a7f774914d8d3c2a16e40332ad43270c461ec71", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a7f774914d8d3c2a16e40332ad43270c461ec71", "html_url": "https://github.com/rust-lang/rust/commit/1a7f774914d8d3c2a16e40332ad43270c461ec71"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "998d9dcc68333cd0201a584fd912b65e9021e735", "filename": "src/libstd/thread/local.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3241d0ba03ff1e90ffdb4cd434660f81194b438/src%2Flibstd%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3241d0ba03ff1e90ffdb4cd434660f81194b438/src%2Flibstd%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Flocal.rs?ref=c3241d0ba03ff1e90ffdb4cd434660f81194b438", "patch": "@@ -432,6 +432,7 @@ pub mod fast {\n         // performed for every call to `Key::get`.\n         // LLVM issue: https://bugs.llvm.org/show_bug.cgi?id=41722\n         #[inline(never)]\n+        #[cold]\n         unsafe fn try_initialize_drop<F: FnOnce() -> T>(&self, init: F) -> Option<&'static T> {\n             // We don't put a `needs_drop` check around this and call it a day\n             // because this function is not inlined. Unwrapping code gets"}]}