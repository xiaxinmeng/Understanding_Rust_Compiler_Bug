{"sha": "ecc8ff9199118b88e98c903c9117fa2f0cddf8ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYzhmZjkxOTkxMThiODhlOThjOTAzYzkxMTdmYTJmMGNkZGY4YWI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-04-28T13:40:48Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-02T18:01:35Z"}, "message": "rework macro to prepare for more modifiers than just `[pub]`", "tree": {"sha": "31a0bebadd0e657b2ca931ab34228800dbca1e16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31a0bebadd0e657b2ca931ab34228800dbca1e16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecc8ff9199118b88e98c903c9117fa2f0cddf8ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecc8ff9199118b88e98c903c9117fa2f0cddf8ab", "html_url": "https://github.com/rust-lang/rust/commit/ecc8ff9199118b88e98c903c9117fa2f0cddf8ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecc8ff9199118b88e98c903c9117fa2f0cddf8ab/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29263fdb541fe5d59ef116ebf3666cd573d077ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/29263fdb541fe5d59ef116ebf3666cd573d077ab", "html_url": "https://github.com/rust-lang/rust/commit/29263fdb541fe5d59ef116ebf3666cd573d077ab"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "e653392e3fb522282a877e71f07c41d727ac6dd5", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 40, "deletions": 5, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/ecc8ff9199118b88e98c903c9117fa2f0cddf8ab/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc8ff9199118b88e98c903c9117fa2f0cddf8ab/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=ecc8ff9199118b88e98c903c9117fa2f0cddf8ab", "patch": "@@ -353,11 +353,11 @@ impl<'tcx> QueryDescription for queries::mir_pass<'tcx> {\n macro_rules! define_maps {\n     (<$tcx:tt>\n      $($(#[$attr:meta])*\n-       [$($pub:tt)*] $name:ident: $node:ident($K:ty) -> $V:ty,)*) => {\n-        pub struct Maps<$tcx> {\n-            providers: IndexVec<CrateNum, Providers<$tcx>>,\n-            query_stack: RefCell<Vec<(Span, Query<$tcx>)>>,\n-            $($(#[$attr])* $($pub)* $name: RefCell<DepTrackingMap<queries::$name<$tcx>>>),*\n+       [$($modifiers:tt)*] $name:ident: $node:ident($K:ty) -> $V:ty,)*) => {\n+        define_map_struct! {\n+            tcx: $tcx,\n+            input: ($(([$($attr)*] [$($modifiers)*] $name))*),\n+            output: ()\n         }\n \n         impl<$tcx> Maps<$tcx> {\n@@ -519,6 +519,41 @@ macro_rules! define_maps {\n     }\n }\n \n+macro_rules! define_map_struct {\n+    (tcx: $tcx:tt,\n+     input: (),\n+     output: ($($output:tt)*)) => {\n+        pub struct Maps<$tcx> {\n+            providers: IndexVec<CrateNum, Providers<$tcx>>,\n+            query_stack: RefCell<Vec<(Span, Query<$tcx>)>>,\n+            $($output)*\n+        }\n+    };\n+\n+    // Detect things with the `pub` modifier\n+    (tcx: $tcx:tt,\n+     input: (([$($attr:meta)*] [pub] $name:ident) $($input:tt)*),\n+     output: ($($output:tt)*)) => {\n+        define_map_struct! {\n+            tcx: $tcx,\n+            input: ($($input)*),\n+            output: ($($output)*\n+                     $(#[$attr])* pub $name: RefCell<DepTrackingMap<queries::$name<$tcx>>>,)\n+        }\n+    };\n+\n+    (tcx: $tcx:tt,\n+     input: (([$($attr:meta)*] [$($modifiers:tt)*] $name:ident) $($input:tt)*),\n+     output: ($($output:tt)*)) => {\n+        define_map_struct! {\n+            tcx: $tcx,\n+            input: ($($input)*),\n+            output: ($($output)*\n+                     $(#[$attr])* $name: RefCell<DepTrackingMap<queries::$name<$tcx>>>,)\n+        }\n+    };\n+}\n+\n // Each of these maps also corresponds to a method on a\n // `Provider` trait for requesting a value of that type,\n // and a method on `Maps` itself for doing that in a"}]}