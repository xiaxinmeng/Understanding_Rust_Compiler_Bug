{"sha": "78a19d9b88d499449e53ebfb89301b36810e3c34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4YTE5ZDliODhkNDk5NDQ5ZTUzZWJmYjg5MzAxYjM2ODEwZTNjMzQ=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-04-27T08:32:54Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-06-10T01:37:38Z"}, "message": "Include parens to type parameter", "tree": {"sha": "0147216779f839be1159acc544bee6cdd47acb35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0147216779f839be1159acc544bee6cdd47acb35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78a19d9b88d499449e53ebfb89301b36810e3c34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78a19d9b88d499449e53ebfb89301b36810e3c34", "html_url": "https://github.com/rust-lang/rust/commit/78a19d9b88d499449e53ebfb89301b36810e3c34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78a19d9b88d499449e53ebfb89301b36810e3c34/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a0062974a5225847fc43d5522c4dc3718173fe5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a0062974a5225847fc43d5522c4dc3718173fe5", "html_url": "https://github.com/rust-lang/rust/commit/2a0062974a5225847fc43d5522c4dc3718173fe5"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "5428842c7f71315ff0ada7da9e8c02636478ba08", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/78a19d9b88d499449e53ebfb89301b36810e3c34/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78a19d9b88d499449e53ebfb89301b36810e3c34/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=78a19d9b88d499449e53ebfb89301b36810e3c34", "patch": "@@ -4875,6 +4875,7 @@ impl<'a> Parser<'a> {\n                                  self.check_keyword(keywords::For) ||\n                                  self.check(&token::OpenDelim(token::Paren));\n             if is_bound_start {\n+                let lo = self.span;\n                 let has_parens = self.eat(&token::OpenDelim(token::Paren));\n                 let question = if self.eat(&token::Question) { Some(self.prev_span) } else { None };\n                 if self.token.is_lifetime() {\n@@ -4883,10 +4884,15 @@ impl<'a> Parser<'a> {\n                                       \"`?` may only modify trait bounds, not lifetime bounds\");\n                     }\n                     bounds.push(RegionTyParamBound(self.expect_lifetime()));\n+                    if has_parens {\n+                        self.expect(&token::CloseDelim(token::Paren))?;\n+                    }\n                 } else {\n-                    let lo = self.span;\n                     let lifetime_defs = self.parse_late_bound_lifetime_defs()?;\n                     let path = self.parse_path(PathStyle::Type)?;\n+                    if has_parens {\n+                        self.expect(&token::CloseDelim(token::Paren))?;\n+                    }\n                     let poly_trait = PolyTraitRef::new(lifetime_defs, path, lo.to(self.prev_span));\n                     let modifier = if question.is_some() {\n                         TraitBoundModifier::Maybe\n@@ -4896,7 +4902,6 @@ impl<'a> Parser<'a> {\n                     bounds.push(TraitTyParamBound(poly_trait, modifier));\n                 }\n                 if has_parens {\n-                    self.expect(&token::CloseDelim(token::Paren))?;\n                     if let Some(&RegionTyParamBound(..)) = bounds.last() {\n                         self.span_err(self.prev_span,\n                                       \"parenthesized lifetime bounds are not supported\");"}, {"sha": "763fec77be3f60cc701645389b8e0e87a2fd5f7a", "filename": "src/test/ui/maybe-bounds.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/78a19d9b88d499449e53ebfb89301b36810e3c34/src%2Ftest%2Fui%2Fmaybe-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/78a19d9b88d499449e53ebfb89301b36810e3c34/src%2Ftest%2Fui%2Fmaybe-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmaybe-bounds.stderr?ref=78a19d9b88d499449e53ebfb89301b36810e3c34", "patch": "@@ -1,22 +1,22 @@\n error: `?Trait` is not permitted in supertraits\n-  --> $DIR/maybe-bounds.rs:11:12\n+  --> $DIR/maybe-bounds.rs:11:11\n    |\n LL | trait Tr: ?Sized {} //~ ERROR `?Trait` is not permitted in supertraits\n-   |            ^^^^^\n+   |           ^^^^^^\n    |\n    = note: traits are `?Sized` by default\n \n error: `?Trait` is not permitted in trait object types\n-  --> $DIR/maybe-bounds.rs:13:17\n+  --> $DIR/maybe-bounds.rs:13:16\n    |\n LL | type A1 = Tr + ?Sized; //~ ERROR `?Trait` is not permitted in trait object types\n-   |                 ^^^^^\n+   |                ^^^^^^\n \n error: `?Trait` is not permitted in trait object types\n-  --> $DIR/maybe-bounds.rs:14:25\n+  --> $DIR/maybe-bounds.rs:14:24\n    |\n LL | type A2 = for<'a> Tr + ?Sized; //~ ERROR `?Trait` is not permitted in trait object types\n-   |                         ^^^^^\n+   |                        ^^^^^^\n \n error: aborting due to 3 previous errors\n "}]}