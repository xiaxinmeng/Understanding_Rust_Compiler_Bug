{"sha": "d74229b97dfca686ebd56522340d501496d2d3f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NDIyOWI5N2RmY2E2ODZlYmQ1NjUyMjM0MGQ1MDE0OTZkMmQzZjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-03T13:38:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-03T13:38:42Z"}, "message": "Auto merge of #5256 - JohnTitor:try-eval-usize, r=phansch\n\nUse `try_eval_usize` over `eval_usize`\n\nFixes #5223\n\nchangelog: Fix ICE in evaluating usizes", "tree": {"sha": "bd66b38f1813f1831e9766c8847069de0575e4bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd66b38f1813f1831e9766c8847069de0575e4bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d74229b97dfca686ebd56522340d501496d2d3f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d74229b97dfca686ebd56522340d501496d2d3f2", "html_url": "https://github.com/rust-lang/rust/commit/d74229b97dfca686ebd56522340d501496d2d3f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d74229b97dfca686ebd56522340d501496d2d3f2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b96c3ca811eae28e790c1b200be06a7d35862c6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b96c3ca811eae28e790c1b200be06a7d35862c6a", "html_url": "https://github.com/rust-lang/rust/commit/b96c3ca811eae28e790c1b200be06a7d35862c6a"}, {"sha": "46ee6b1840b3ab3c06c9f8ba3bb097f25b5c174a", "url": "https://api.github.com/repos/rust-lang/rust/commits/46ee6b1840b3ab3c06c9f8ba3bb097f25b5c174a", "html_url": "https://github.com/rust-lang/rust/commit/46ee6b1840b3ab3c06c9f8ba3bb097f25b5c174a"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "ceda5d1a7c379b9244ad9d511cb3c545d2ae1ab1", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d74229b97dfca686ebd56522340d501496d2d3f2/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d74229b97dfca686ebd56522340d501496d2d3f2/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=d74229b97dfca686ebd56522340d501496d2d3f2", "patch": "@@ -231,7 +231,13 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n             ExprKind::Tup(ref tup) => self.multi(tup).map(Constant::Tuple),\n             ExprKind::Repeat(ref value, _) => {\n                 let n = match self.tables.expr_ty(e).kind {\n-                    ty::Array(_, n) => n.eval_usize(self.lcx.tcx, self.lcx.param_env),\n+                    ty::Array(_, n) => {\n+                        if let Some(n) = n.try_eval_usize(self.lcx.tcx, self.lcx.param_env) {\n+                            n\n+                        } else {\n+                            return None;\n+                        }\n+                    },\n                     _ => span_bug!(e.span, \"typeck error\"),\n                 };\n                 self.expr(value).map(|v| Constant::Repeat(Box::new(v), n))"}, {"sha": "65d2dd581068a4bb718afdd2393edb2966d954cf", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d74229b97dfca686ebd56522340d501496d2d3f2/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d74229b97dfca686ebd56522340d501496d2d3f2/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=d74229b97dfca686ebd56522340d501496d2d3f2", "patch": "@@ -92,7 +92,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IndexingSlicing {\n             if let Some(range) = higher::range(cx, index) {\n                 // Ranged indexes, i.e., &x[n..m], &x[n..], &x[..n] and &x[..]\n                 if let ty::Array(_, s) = ty.kind {\n-                    let size: u128 = s.eval_usize(cx.tcx, cx.param_env).into();\n+                    let size: u128 = if let Some(size) = s.try_eval_usize(cx.tcx, cx.param_env) {\n+                        size.into()\n+                    } else {\n+                        return;\n+                    };\n \n                     let const_range = to_const_range(cx, range, size);\n "}, {"sha": "eef5105409018ddb7a2e6c7ab93dee7dac790ef5", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d74229b97dfca686ebd56522340d501496d2d3f2/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d74229b97dfca686ebd56522340d501496d2d3f2/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=d74229b97dfca686ebd56522340d501496d2d3f2", "patch": "@@ -2324,7 +2324,13 @@ fn derefs_to_slice<'a, 'tcx>(\n             ty::Slice(_) => true,\n             ty::Adt(def, _) if def.is_box() => may_slice(cx, ty.boxed_ty()),\n             ty::Adt(..) => is_type_diagnostic_item(cx, ty, Symbol::intern(\"vec_type\")),\n-            ty::Array(_, size) => size.eval_usize(cx.tcx, cx.param_env) < 32,\n+            ty::Array(_, size) => {\n+                if let Some(size) = size.try_eval_usize(cx.tcx, cx.param_env) {\n+                    size < 32\n+                } else {\n+                    false\n+                }\n+            },\n             ty::Ref(_, inner, _) => may_slice(cx, inner),\n             _ => false,\n         }"}, {"sha": "9bb2e227fc12e6ccbad119ac349f1f5af721fbcd", "filename": "tests/ui/crashes/ice-5223.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d74229b97dfca686ebd56522340d501496d2d3f2/tests%2Fui%2Fcrashes%2Fice-5223.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d74229b97dfca686ebd56522340d501496d2d3f2/tests%2Fui%2Fcrashes%2Fice-5223.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-5223.rs?ref=d74229b97dfca686ebd56522340d501496d2d3f2", "patch": "@@ -0,0 +1,18 @@\n+// Regression test for #5233\n+\n+#![feature(const_generics)]\n+#![allow(incomplete_features)]\n+#![warn(clippy::indexing_slicing, clippy::iter_cloned_collect)]\n+\n+pub struct KotomineArray<T, const N: usize> {\n+    arr: [T; N],\n+}\n+\n+impl<T: std::clone::Clone, const N: usize> KotomineArray<T, N> {\n+    pub fn ice(self) {\n+        let _ = self.arr[..];\n+        let _ = self.arr.iter().cloned().collect::<Vec<_>>();\n+    }\n+}\n+\n+fn main() {}"}]}