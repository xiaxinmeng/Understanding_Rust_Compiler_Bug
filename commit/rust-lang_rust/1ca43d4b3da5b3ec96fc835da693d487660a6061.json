{"sha": "1ca43d4b3da5b3ec96fc835da693d487660a6061", "node_id": "C_kwDOAAsO6NoAKDFjYTQzZDRiM2RhNWIzZWM5NmZjODM1ZGE2OTNkNDg3NjYwYTYwNjE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-18T22:03:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-18T22:03:04Z"}, "message": "Rollup merge of #105419 - YC:issue-41731, r=petrochenkov\n\nAdd tests for #41731\n\nCloses #41731", "tree": {"sha": "fc41f73f98017ab5748db484eb2decd31800a6eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc41f73f98017ab5748db484eb2decd31800a6eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ca43d4b3da5b3ec96fc835da693d487660a6061", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjn44YCRBK7hj4Ov3rIwAAAVMIAKO9nGVxa1nU93n4lnNWq3zT\nCuuSjOmnNPC/IIB19XH9I8EN7++FeDf1LUaWt/haKBhomOsaMRD7j5tPh+9Cli99\nobfeegNfFBao4HJwysF6ZARUdsmDogzAYhCn24KuLHvSgkFa8/zroLWN/SmJnr/+\nD+u5P8V/mT3EDfyaJIFcP0Vd7ihmzjVZoNZlWfnu2Ct02x9ll94EOIdC5HQZLLPU\nPc8wN8wDjmonKna2aL4/rqHrzgfRnsBlVxKQZtrTAsdu/ZSijSHLkauwqj3ttqx6\nMl8cPmKmhGg8GLo5reI6aDJ23Sqm0pUd9qMAulJKYX5wM7VyLsNcBj8XtDbrGr4=\n=6MNW\n-----END PGP SIGNATURE-----\n", "payload": "tree fc41f73f98017ab5748db484eb2decd31800a6eb\nparent d0dc9efff14ac0a1eeceffd1e605e37eeb8362a0\nparent cf312ae1f26e815dc1a898d634b001b8f315448e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671400984 +0100\ncommitter GitHub <noreply@github.com> 1671400984 +0100\n\nRollup merge of #105419 - YC:issue-41731, r=petrochenkov\n\nAdd tests for #41731\n\nCloses #41731\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ca43d4b3da5b3ec96fc835da693d487660a6061", "html_url": "https://github.com/rust-lang/rust/commit/1ca43d4b3da5b3ec96fc835da693d487660a6061", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ca43d4b3da5b3ec96fc835da693d487660a6061/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0dc9efff14ac0a1eeceffd1e605e37eeb8362a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0dc9efff14ac0a1eeceffd1e605e37eeb8362a0", "html_url": "https://github.com/rust-lang/rust/commit/d0dc9efff14ac0a1eeceffd1e605e37eeb8362a0"}, {"sha": "cf312ae1f26e815dc1a898d634b001b8f315448e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf312ae1f26e815dc1a898d634b001b8f315448e", "html_url": "https://github.com/rust-lang/rust/commit/cf312ae1f26e815dc1a898d634b001b8f315448e"}], "stats": {"total": 106, "additions": 106, "deletions": 0}, "files": [{"sha": "d52e6e7e9eb8250d08f05ee544d9efa72c8fd8a1", "filename": "src/test/ui/infinite/issue-41731-infinite-macro-print.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1ca43d4b3da5b3ec96fc835da693d487660a6061/src%2Ftest%2Fui%2Finfinite%2Fissue-41731-infinite-macro-print.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ca43d4b3da5b3ec96fc835da693d487660a6061/src%2Ftest%2Fui%2Finfinite%2Fissue-41731-infinite-macro-print.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finfinite%2Fissue-41731-infinite-macro-print.rs?ref=1ca43d4b3da5b3ec96fc835da693d487660a6061", "patch": "@@ -0,0 +1,15 @@\n+// compile-flags: -Z trace-macros\n+\n+#![recursion_limit = \"5\"]\n+\n+fn main() {\n+    macro_rules! stack {\n+        ($overflow:expr) => {\n+            print!(stack!($overflow));\n+            //~^ ERROR recursion limit reached while expanding\n+            //~| ERROR format argument must be a string literal\n+        };\n+    }\n+\n+    stack!(\"overflow\");\n+}"}, {"sha": "e30b2039d69c946cb724ff35afdea59c02a179e1", "filename": "src/test/ui/infinite/issue-41731-infinite-macro-print.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/1ca43d4b3da5b3ec96fc835da693d487660a6061/src%2Ftest%2Fui%2Finfinite%2Fissue-41731-infinite-macro-print.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ca43d4b3da5b3ec96fc835da693d487660a6061/src%2Ftest%2Fui%2Finfinite%2Fissue-41731-infinite-macro-print.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finfinite%2Fissue-41731-infinite-macro-print.stderr?ref=1ca43d4b3da5b3ec96fc835da693d487660a6061", "patch": "@@ -0,0 +1,38 @@\n+error: recursion limit reached while expanding `$crate::format_args!`\n+  --> $DIR/issue-41731-infinite-macro-print.rs:14:5\n+   |\n+LL |     stack!(\"overflow\");\n+   |     ^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"10\"]` attribute to your crate (`issue_41731_infinite_macro_print`)\n+   = note: this error originates in the macro `print` which comes from the expansion of the macro `stack` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+note: trace_macro\n+  --> $DIR/issue-41731-infinite-macro-print.rs:14:5\n+   |\n+LL |     stack!(\"overflow\");\n+   |     ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: expanding `stack! { \"overflow\" }`\n+   = note: to `print! (stack! (\"overflow\")) ;`\n+   = note: expanding `print! { stack! (\"overflow\") }`\n+   = note: to `{ $crate :: io :: _print($crate :: format_args! (stack! (\"overflow\"))) ; }`\n+   = note: expanding `stack! { \"overflow\" }`\n+   = note: to `print! (stack! (\"overflow\")) ;`\n+   = note: expanding `print! { stack! (\"overflow\") }`\n+   = note: to `{ $crate :: io :: _print($crate :: format_args! (stack! (\"overflow\"))) ; }`\n+\n+error: format argument must be a string literal\n+  --> $DIR/issue-41731-infinite-macro-print.rs:14:5\n+   |\n+LL |     stack!(\"overflow\");\n+   |     ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: this error originates in the macro `print` which comes from the expansion of the macro `stack` (in Nightly builds, run with -Z macro-backtrace for more info)\n+help: you might be missing a string literal to format with\n+   |\n+LL |             print!(\"{}\", stack!($overflow));\n+   |                    +++++\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "3c2b7ee023b5ca62ed34f67537fbd80c0d63b181", "filename": "src/test/ui/infinite/issue-41731-infinite-macro-println.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1ca43d4b3da5b3ec96fc835da693d487660a6061/src%2Ftest%2Fui%2Finfinite%2Fissue-41731-infinite-macro-println.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ca43d4b3da5b3ec96fc835da693d487660a6061/src%2Ftest%2Fui%2Finfinite%2Fissue-41731-infinite-macro-println.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finfinite%2Fissue-41731-infinite-macro-println.rs?ref=1ca43d4b3da5b3ec96fc835da693d487660a6061", "patch": "@@ -0,0 +1,15 @@\n+// compile-flags: -Z trace-macros\n+\n+#![recursion_limit = \"5\"]\n+\n+fn main() {\n+    macro_rules! stack {\n+        ($overflow:expr) => {\n+            println!(stack!($overflow));\n+            //~^ ERROR recursion limit reached while expanding\n+            //~| ERROR format argument must be a string literal\n+        };\n+    }\n+\n+    stack!(\"overflow\");\n+}"}, {"sha": "66b466dafa0dac832998f239e619ff8964ca95b4", "filename": "src/test/ui/infinite/issue-41731-infinite-macro-println.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/1ca43d4b3da5b3ec96fc835da693d487660a6061/src%2Ftest%2Fui%2Finfinite%2Fissue-41731-infinite-macro-println.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1ca43d4b3da5b3ec96fc835da693d487660a6061/src%2Ftest%2Fui%2Finfinite%2Fissue-41731-infinite-macro-println.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finfinite%2Fissue-41731-infinite-macro-println.stderr?ref=1ca43d4b3da5b3ec96fc835da693d487660a6061", "patch": "@@ -0,0 +1,38 @@\n+error: recursion limit reached while expanding `$crate::format_args_nl!`\n+  --> $DIR/issue-41731-infinite-macro-println.rs:14:5\n+   |\n+LL |     stack!(\"overflow\");\n+   |     ^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"10\"]` attribute to your crate (`issue_41731_infinite_macro_println`)\n+   = note: this error originates in the macro `println` which comes from the expansion of the macro `stack` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+note: trace_macro\n+  --> $DIR/issue-41731-infinite-macro-println.rs:14:5\n+   |\n+LL |     stack!(\"overflow\");\n+   |     ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: expanding `stack! { \"overflow\" }`\n+   = note: to `println! (stack! (\"overflow\")) ;`\n+   = note: expanding `println! { stack! (\"overflow\") }`\n+   = note: to `{ $crate :: io :: _print($crate :: format_args_nl! (stack! (\"overflow\"))) ; }`\n+   = note: expanding `stack! { \"overflow\" }`\n+   = note: to `println! (stack! (\"overflow\")) ;`\n+   = note: expanding `println! { stack! (\"overflow\") }`\n+   = note: to `{ $crate :: io :: _print($crate :: format_args_nl! (stack! (\"overflow\"))) ; }`\n+\n+error: format argument must be a string literal\n+  --> $DIR/issue-41731-infinite-macro-println.rs:14:5\n+   |\n+LL |     stack!(\"overflow\");\n+   |     ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: this error originates in the macro `println` which comes from the expansion of the macro `stack` (in Nightly builds, run with -Z macro-backtrace for more info)\n+help: you might be missing a string literal to format with\n+   |\n+LL |             println!(\"{}\", stack!($overflow));\n+   |                      +++++\n+\n+error: aborting due to 2 previous errors\n+"}]}