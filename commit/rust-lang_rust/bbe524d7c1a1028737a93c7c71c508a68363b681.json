{"sha": "bbe524d7c1a1028737a93c7c71c508a68363b681", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZTUyNGQ3YzFhMTAyODczN2E5M2M3YzcxYzUwOGE2ODM2M2I2ODE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-02-08T09:21:21Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-02-11T14:09:05Z"}, "message": "Parallel rustc needs synchronizing smart pointer cloning", "tree": {"sha": "d041388e8e3d909aff50b6a36db99eb683231066", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d041388e8e3d909aff50b6a36db99eb683231066"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbe524d7c1a1028737a93c7c71c508a68363b681", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbe524d7c1a1028737a93c7c71c508a68363b681", "html_url": "https://github.com/rust-lang/rust/commit/bbe524d7c1a1028737a93c7c71c508a68363b681", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbe524d7c1a1028737a93c7c71c508a68363b681/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0cf52f6a52699be9ae6d2d01c3c172d55ad549e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0cf52f6a52699be9ae6d2d01c3c172d55ad549e", "html_url": "https://github.com/rust-lang/rust/commit/b0cf52f6a52699be9ae6d2d01c3c172d55ad549e"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "43c756def88be5f492d2a087918557ae6d628060", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bbe524d7c1a1028737a93c7c71c508a68363b681/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbe524d7c1a1028737a93c7c71c508a68363b681/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=bbe524d7c1a1028737a93c7c71c508a68363b681", "patch": "@@ -44,6 +44,7 @@ use crate::middle::cstore::CrateStore;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::indexed_vec::IndexVec;\n use rustc_data_structures::thin_vec::ThinVec;\n+use rustc_data_structures::sync::Lrc;\n use crate::session::Session;\n use crate::session::config::nightly_options;\n use crate::util::common::FN_OUTPUT_NAME;\n@@ -52,7 +53,6 @@ use crate::util::nodemap::{DefIdMap, NodeMap};\n use std::collections::{BTreeSet, BTreeMap};\n use std::fmt::Debug;\n use std::mem;\n-use std::rc::Rc;\n use smallvec::SmallVec;\n use syntax::attr;\n use syntax::ast;\n@@ -688,7 +688,7 @@ impl<'a> LoweringContext<'a> {\n         &self,\n         reason: CompilerDesugaringKind,\n         span: Span,\n-        allow_internal_unstable: Option<Rc<[Symbol]>>,\n+        allow_internal_unstable: Option<Lrc<[Symbol]>>,\n     ) -> Span {\n         let mark = Mark::fresh(Mark::root());\n         mark.set_expn_info(source_map::ExpnInfo {"}, {"sha": "f7225810aca7450de9cf4c85d005d838c61e011d", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bbe524d7c1a1028737a93c7c71c508a68363b681/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbe524d7c1a1028737a93c7c71c508a68363b681/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=bbe524d7c1a1028737a93c7c71c508a68363b681", "patch": "@@ -622,7 +622,7 @@ pub enum SyntaxExtension {\n     ProcMacro {\n         expander: Box<dyn ProcMacro + sync::Sync + sync::Send>,\n         /// Whitelist of unstable features that are treated as stable inside this macro\n-        allow_internal_unstable: Option<Rc<[Symbol]>>,\n+        allow_internal_unstable: Option<Lrc<[Symbol]>>,\n         edition: Edition,\n     },\n \n@@ -642,7 +642,7 @@ pub enum SyntaxExtension {\n         /// directly use `#[unstable]` things.\n         ///\n         /// Only allows things that require a feature gate in the given whitelist\n-        allow_internal_unstable: Option<Rc<[Symbol]>>,\n+        allow_internal_unstable: Option<Lrc<[Symbol]>>,\n         /// Whether the contents of the macro can use `unsafe`\n         /// without triggering the `unsafe_code` lint.\n         allow_internal_unsafe: bool,\n@@ -660,7 +660,7 @@ pub enum SyntaxExtension {\n     IdentTT {\n         expander: Box<dyn IdentMacroExpander + sync::Sync + sync::Send>,\n         span: Option<Span>,\n-        allow_internal_unstable: Option<Rc<[Symbol]>>,\n+        allow_internal_unstable: Option<Lrc<[Symbol]>>,\n     },\n \n     /// An attribute-like procedural macro. TokenStream -> TokenStream."}, {"sha": "d5c0a2ca85f641fdbe1182809845e770833af7bb", "filename": "src/libsyntax_pos/hygiene.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bbe524d7c1a1028737a93c7c71c508a68363b681/src%2Flibsyntax_pos%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbe524d7c1a1028737a93c7c71c508a68363b681/src%2Flibsyntax_pos%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fhygiene.rs?ref=bbe524d7c1a1028737a93c7c71c508a68363b681", "patch": "@@ -12,8 +12,8 @@ use crate::symbol::{keywords, Symbol};\n \n use serialize::{Encodable, Decodable, Encoder, Decoder};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_data_structures::sync::Lrc;\n use std::{fmt, mem};\n-use std::rc::Rc;\n \n /// A SyntaxContext represents a chain of macro expansions (represented by marks).\n #[derive(Clone, Copy, PartialEq, Eq, Default, PartialOrd, Ord, Hash)]\n@@ -554,7 +554,7 @@ pub struct ExpnInfo {\n     /// List of #[unstable]/feature-gated features that the macro is allowed to use\n     /// internally without forcing the whole crate to opt-in\n     /// to them.\n-    pub allow_internal_unstable: Option<Rc<[Symbol]>>,\n+    pub allow_internal_unstable: Option<Lrc<[Symbol]>>,\n     /// Whether the macro is allowed to use `unsafe` internally\n     /// even if the user crate has `#![forbid(unsafe_code)]`.\n     pub allow_internal_unsafe: bool,"}]}