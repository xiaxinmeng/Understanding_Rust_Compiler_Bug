{"sha": "43b219dbec5a3fa0ded5c02c95149d8517343087", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYjIxOWRiZWM1YTNmYTBkZWQ1YzAyYzk1MTQ5ZDg1MTczNDMwODc=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-16T19:28:47Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-16T19:31:36Z"}, "message": "Work around an apparent compiler bug to make my patch run\n\nWithout this, it would fail when optimization is turned on. The result of\nthe Load(bcx, llclosure) call would end up in llenv in a corrupted form.", "tree": {"sha": "cf1939eb948c0977e1f29fedf179c109651ba1d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf1939eb948c0977e1f29fedf179c109651ba1d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43b219dbec5a3fa0ded5c02c95149d8517343087", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43b219dbec5a3fa0ded5c02c95149d8517343087", "html_url": "https://github.com/rust-lang/rust/commit/43b219dbec5a3fa0ded5c02c95149d8517343087", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43b219dbec5a3fa0ded5c02c95149d8517343087/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "575aae407bc5da4ab092c6877ddb574a7bf5b83b", "url": "https://api.github.com/repos/rust-lang/rust/commits/575aae407bc5da4ab092c6877ddb574a7bf5b83b", "html_url": "https://github.com/rust-lang/rust/commit/575aae407bc5da4ab092c6877ddb574a7bf5b83b"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "fd658d6e91f6e3c07c6e4139e606f734d1ebb2ad", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/43b219dbec5a3fa0ded5c02c95149d8517343087/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43b219dbec5a3fa0ded5c02c95149d8517343087/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=43b219dbec5a3fa0ded5c02c95149d8517343087", "patch": "@@ -3709,19 +3709,20 @@ fn trans_call(in_cx: @block_ctxt, f: @ast::expr,\n     let bcx = f_res.bcx;\n \n     let faddr = f_res.val;\n-    let llenv = alt f_res.env {\n-      null_env. { C_null(T_opaque_closure_ptr(*bcx_ccx(cx))) }\n-      some_env(e) { e }\n+    let llenv;\n+    alt f_res.env {\n+      null_env. { llenv = C_null(T_opaque_closure_ptr(*bcx_ccx(cx))); }\n+      some_env(e) { llenv = e; }\n       is_closure. {\n         // It's a closure. Have to fetch the elements\n         if f_res.is_mem { faddr = load_if_immediate(bcx, faddr, fn_expr_ty); }\n         let pair = faddr;\n         faddr = GEP(bcx, pair, [C_int(0), C_int(abi::fn_field_code)]);\n         faddr = Load(bcx, faddr);\n         let llclosure = GEP(bcx, pair, [C_int(0), C_int(abi::fn_field_box)]);\n-        Load(bcx, llclosure)\n+        llenv = Load(bcx, llclosure);\n       }\n-    };\n+    }\n \n     let ret_ty = ty::node_id_to_type(bcx_tcx(cx), id);\n     let args_res ="}]}