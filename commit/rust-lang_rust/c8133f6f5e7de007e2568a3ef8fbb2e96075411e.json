{"sha": "c8133f6f5e7de007e2568a3ef8fbb2e96075411e", "node_id": "C_kwDOAAsO6NoAKGM4MTMzZjZmNWU3ZGUwMDdlMjU2OGEzZWY4ZmJiMmU5NjA3NTQxMWU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-17T21:54:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-17T21:54:59Z"}, "message": "Rollup merge of #91133 - terrarier2111:unsafe-diagnostic, r=jackh726\n\nImprove `unsafe` diagnostic\n\nThis fixes: https://github.com/rust-lang/rust/issues/90880\nI didn't use the exact proposed messages though.", "tree": {"sha": "60bf59343424150cdb0503cee64bf9afaaee0ab0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60bf59343424150cdb0503cee64bf9afaaee0ab0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8133f6f5e7de007e2568a3ef8fbb2e96075411e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiM64zCRBK7hj4Ov3rIwAAnUQIAC44P8YUUd/vSDmzNXwJOvpC\nR4dIMaf/QR9YrP+XX+jXCwnV8ZsqFibd1VkB3kbQUNh5GOds/bUZuQcAStM2C7/y\nw6uh4iQ0B0lXcH8h1tC1gG1EaL/ak5UgVpd3iSRYZFycSG6BXuugYLEQh8q/A/aW\nEBB+TjPq/1ewraZlLhRaDzaIkTmsJDEAhqAiiPcRWMTaujkAsan6hbcpnLnDz/Ar\nn3yo+qYhudt/6amblaXZRcGxN/Aa1dDr2/1ALyqPQmEO7XPRdn4Ncy7Msv3Y9aG+\ng/h31a0iElJGluZGPH6FP3AMwGjfqTddrkJ0gxa2PnZMBBkEwjKOHVekB3k04Kk=\n=n281\n-----END PGP SIGNATURE-----\n", "payload": "tree 60bf59343424150cdb0503cee64bf9afaaee0ab0\nparent 58f11791af4f97572e7afd83f11cffe04bbbd12f\nparent 3a13a721418b53ee6ca4c24fdbd17cc136ebcebb\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1647554099 +0100\ncommitter GitHub <noreply@github.com> 1647554099 +0100\n\nRollup merge of #91133 - terrarier2111:unsafe-diagnostic, r=jackh726\n\nImprove `unsafe` diagnostic\n\nThis fixes: https://github.com/rust-lang/rust/issues/90880\nI didn't use the exact proposed messages though.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8133f6f5e7de007e2568a3ef8fbb2e96075411e", "html_url": "https://github.com/rust-lang/rust/commit/c8133f6f5e7de007e2568a3ef8fbb2e96075411e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8133f6f5e7de007e2568a3ef8fbb2e96075411e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58f11791af4f97572e7afd83f11cffe04bbbd12f", "url": "https://api.github.com/repos/rust-lang/rust/commits/58f11791af4f97572e7afd83f11cffe04bbbd12f", "html_url": "https://github.com/rust-lang/rust/commit/58f11791af4f97572e7afd83f11cffe04bbbd12f"}, {"sha": "3a13a721418b53ee6ca4c24fdbd17cc136ebcebb", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a13a721418b53ee6ca4c24fdbd17cc136ebcebb", "html_url": "https://github.com/rust-lang/rust/commit/3a13a721418b53ee6ca4c24fdbd17cc136ebcebb"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "a485d12b0c02de8aa0b29ed054c1768339d66e4a", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c8133f6f5e7de007e2568a3ef8fbb2e96075411e/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8133f6f5e7de007e2568a3ef8fbb2e96075411e/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=c8133f6f5e7de007e2568a3ef8fbb2e96075411e", "patch": "@@ -999,10 +999,32 @@ impl<'a> Parser<'a> {\n         attrs: &mut Vec<Attribute>,\n         unsafety: Unsafe,\n     ) -> PResult<'a, ItemInfo> {\n+        let sp_start = self.prev_token.span;\n         let abi = self.parse_abi(); // ABI?\n-        let items = self.parse_item_list(attrs, |p| p.parse_foreign_item(ForceCollect::No))?;\n-        let module = ast::ForeignMod { unsafety, abi, items };\n-        Ok((Ident::empty(), ItemKind::ForeignMod(module)))\n+        match self.parse_item_list(attrs, |p| p.parse_foreign_item(ForceCollect::No)) {\n+            Ok(items) => {\n+                let module = ast::ForeignMod { unsafety, abi, items };\n+                Ok((Ident::empty(), ItemKind::ForeignMod(module)))\n+            }\n+            Err(mut err) => {\n+                let current_qual_sp = self.prev_token.span;\n+                let current_qual_sp = current_qual_sp.to(sp_start);\n+                if let Ok(current_qual) = self.span_to_snippet(current_qual_sp) {\n+                    if err.message() == \"expected `{`, found keyword `unsafe`\" {\n+                        let invalid_qual_sp = self.token.uninterpolated_span();\n+                        let invalid_qual = self.span_to_snippet(invalid_qual_sp).unwrap();\n+\n+                        err.span_suggestion(\n+                                current_qual_sp.to(invalid_qual_sp),\n+                                &format!(\"`{}` must come before `{}`\", invalid_qual, current_qual),\n+                                format!(\"{} {}\", invalid_qual, current_qual),\n+                                Applicability::MachineApplicable,\n+                            ).note(\"keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`\");\n+                    }\n+                }\n+                Err(err)\n+            }\n+        }\n     }\n \n     /// Parses a foreign item (one in an `extern { ... }` block)."}, {"sha": "f9c3ca763f26ea5728103dad29d7f723d551b3fd", "filename": "src/test/ui/parser/issues/issue-19398.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c8133f6f5e7de007e2568a3ef8fbb2e96075411e/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-19398.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c8133f6f5e7de007e2568a3ef8fbb2e96075411e/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-19398.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-19398.stderr?ref=c8133f6f5e7de007e2568a3ef8fbb2e96075411e", "patch": "@@ -4,10 +4,15 @@ error: expected `{`, found keyword `unsafe`\n LL | trait T {\n    |         - while parsing this item list starting here\n LL |     extern \"Rust\" unsafe fn foo();\n-   |                   ^^^^^^ expected `{`\n+   |     --------------^^^^^^\n+   |     |             |\n+   |     |             expected `{`\n+   |     help: `unsafe` must come before `extern \"Rust\"`: `unsafe extern \"Rust\"`\n LL |\n LL | }\n    | - the item list ends here\n+   |\n+   = note: keyword order for functions declaration is `default`, `pub`, `const`, `async`, `unsafe`, `extern`\n \n error: aborting due to previous error\n "}]}