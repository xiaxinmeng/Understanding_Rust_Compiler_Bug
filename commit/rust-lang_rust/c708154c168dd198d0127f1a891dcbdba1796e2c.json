{"sha": "c708154c168dd198d0127f1a891dcbdba1796e2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3MDgxNTRjMTY4ZGQxOThkMDEyN2YxYTg5MWRjYmRiYTE3OTZlMmM=", "commit": {"author": {"name": "bootandy", "email": "bootandy@gmail.com", "date": "2018-02-20T17:38:20Z"}, "committer": {"name": "bootandy", "email": "bootandy@gmail.com", "date": "2018-02-20T17:38:20Z"}, "message": "Simplify creation of span_replace_word\n\nPart of unwrap_or test", "tree": {"sha": "96be331fc8ea8532a0d5434a7133ccd4b8c1824b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96be331fc8ea8532a0d5434a7133ccd4b8c1824b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c708154c168dd198d0127f1a891dcbdba1796e2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c708154c168dd198d0127f1a891dcbdba1796e2c", "html_url": "https://github.com/rust-lang/rust/commit/c708154c168dd198d0127f1a891dcbdba1796e2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c708154c168dd198d0127f1a891dcbdba1796e2c/comments", "author": {"login": "bootandy", "id": 311785, "node_id": "MDQ6VXNlcjMxMTc4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/311785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bootandy", "html_url": "https://github.com/bootandy", "followers_url": "https://api.github.com/users/bootandy/followers", "following_url": "https://api.github.com/users/bootandy/following{/other_user}", "gists_url": "https://api.github.com/users/bootandy/gists{/gist_id}", "starred_url": "https://api.github.com/users/bootandy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bootandy/subscriptions", "organizations_url": "https://api.github.com/users/bootandy/orgs", "repos_url": "https://api.github.com/users/bootandy/repos", "events_url": "https://api.github.com/users/bootandy/events{/privacy}", "received_events_url": "https://api.github.com/users/bootandy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bootandy", "id": 311785, "node_id": "MDQ6VXNlcjMxMTc4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/311785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bootandy", "html_url": "https://github.com/bootandy", "followers_url": "https://api.github.com/users/bootandy/followers", "following_url": "https://api.github.com/users/bootandy/following{/other_user}", "gists_url": "https://api.github.com/users/bootandy/gists{/gist_id}", "starred_url": "https://api.github.com/users/bootandy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bootandy/subscriptions", "organizations_url": "https://api.github.com/users/bootandy/orgs", "repos_url": "https://api.github.com/users/bootandy/repos", "events_url": "https://api.github.com/users/bootandy/events{/privacy}", "received_events_url": "https://api.github.com/users/bootandy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3d1a0cec2222b6cad88ddaa3159235950c4dc7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3d1a0cec2222b6cad88ddaa3159235950c4dc7d", "html_url": "https://github.com/rust-lang/rust/commit/f3d1a0cec2222b6cad88ddaa3159235950c4dc7d"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "9d829007bcaafa8a0381ba7571cf9d0fd1fd1c98", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c708154c168dd198d0127f1a891dcbdba1796e2c/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c708154c168dd198d0127f1a891dcbdba1796e2c/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=c708154c168dd198d0127f1a891dcbdba1796e2c", "patch": "@@ -913,9 +913,7 @@ fn lint_or_fun_call(cx: &LateContext, expr: &hir::Expr, name: &str, args: &[hir:\n             return;\n         }\n \n-        let start_point = self_expr.span.hi();\n-        let end_point = span.hi();\n-        let span_replace_word = Span::new(start_point, end_point, span.ctxt());\n+        let span_replace_word = self_expr.span.with_lo(span.hi());\n \n         // don't lint for constant values\n         let owner_def = cx.tcx.hir.get_parent_did(arg.id);\n@@ -946,7 +944,7 @@ fn lint_or_fun_call(cx: &LateContext, expr: &hir::Expr, name: &str, args: &[hir:\n         span_lint_and_sugg(\n             cx,\n             OR_FUN_CALL,\n-            span_replace_word ,\n+            span_replace_word,\n             &format!(\"use of `{}` followed by a function call\", name),\n             \"try this\",\n             format!(\".{}_{}({})\", name, suffix, sugg),"}]}