{"sha": "36d68f5fb30a1bd7d3604401c03e4cf81c029a06", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2ZDY4ZjVmYjMwYTFiZDdkMzYwNDQwMWMwM2U0Y2Y4MWMwMjlhMDY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-14T10:31:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-14T10:31:50Z"}, "message": "Rollup merge of #57418 - lqd:collector_query, r=michaelwoerister\n\nMetadataOnlyCodegenBackend: run the collector only once\n\nUse the `collect_and_partition_mono_items` query to avoid calling the collector directly twice.\n\nFixes #57406.", "tree": {"sha": "b6cc3bf925a62d5fd552b013668dc162878c6234", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6cc3bf925a62d5fd552b013668dc162878c6234"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36d68f5fb30a1bd7d3604401c03e4cf81c029a06", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcPGUXCRBK7hj4Ov3rIwAAdHIIAHnL2UsGzThAMQaAmWaXkD12\nCr4iR9YHIUcqfFocc/0rZVosdqQ+hVBRUOjatMk24qckYQAMppynKVdI1DVn5djE\n7crOsYbUSDpvSKFUTxtKnSIF4ObxWNui4n2qVjA7vaqmixc1czPunG9uDNg+4rZZ\nNH+PRcPn6FPS2YvtT07PTjN/pNVXM77A+IHsx6BJV7Q0Vsflr4K++UMjjVBGMLEn\n9qXyMdUVR8uRPmQUtXptNcTSg9yE6W415fkczb9jsvTEvwz5ZL6ayUm055dAZ7Gl\ncY7AMNZaKBTukIjP4DsLIpVx+GDfbChKGu+UFoG5gIHtUc+jP8JUmbKzA3WCvJs=\n=18/B\n-----END PGP SIGNATURE-----\n", "payload": "tree b6cc3bf925a62d5fd552b013668dc162878c6234\nparent 0d883cb8f82ec5d99f63d03bd43c6fc87d96aeef\nparent e5318f3f9b9797af903a57addbe37ca117da8d96\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1547461910 +0100\ncommitter GitHub <noreply@github.com> 1547461910 +0100\n\nRollup merge of #57418 - lqd:collector_query, r=michaelwoerister\n\nMetadataOnlyCodegenBackend: run the collector only once\n\nUse the `collect_and_partition_mono_items` query to avoid calling the collector directly twice.\n\nFixes #57406.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36d68f5fb30a1bd7d3604401c03e4cf81c029a06", "html_url": "https://github.com/rust-lang/rust/commit/36d68f5fb30a1bd7d3604401c03e4cf81c029a06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36d68f5fb30a1bd7d3604401c03e4cf81c029a06/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d883cb8f82ec5d99f63d03bd43c6fc87d96aeef", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d883cb8f82ec5d99f63d03bd43c6fc87d96aeef", "html_url": "https://github.com/rust-lang/rust/commit/0d883cb8f82ec5d99f63d03bd43c6fc87d96aeef"}, {"sha": "e5318f3f9b9797af903a57addbe37ca117da8d96", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5318f3f9b9797af903a57addbe37ca117da8d96", "html_url": "https://github.com/rust-lang/rust/commit/e5318f3f9b9797af903a57addbe37ca117da8d96"}], "stats": {"total": 17, "additions": 3, "deletions": 14}, "files": [{"sha": "8981c542961e273b5b970dca8dffe33184e05f4e", "filename": "src/librustc_codegen_utils/codegen_backend.rs", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/36d68f5fb30a1bd7d3604401c03e4cf81c029a06/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36d68f5fb30a1bd7d3604401c03e4cf81c029a06/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs?ref=36d68f5fb30a1bd7d3604401c03e4cf81c029a06", "patch": "@@ -31,7 +31,6 @@ use rustc::middle::cstore::EncodedMetadata;\n use rustc::middle::cstore::MetadataLoader;\n use rustc::dep_graph::DepGraph;\n use rustc_target::spec::Target;\n-use rustc_mir::monomorphize::collector;\n use link::out_filename;\n \n pub use rustc_data_structures::sync::MetadataRef;\n@@ -136,25 +135,15 @@ impl CodegenBackend for MetadataOnlyCodegenBackend {\n         ::symbol_names_test::report_symbol_names(tcx);\n         ::rustc_incremental::assert_dep_graph(tcx);\n         ::rustc_incremental::assert_module_sources::assert_module_sources(tcx);\n-        ::rustc_mir::monomorphize::assert_symbols_are_distinct(tcx,\n-            collector::collect_crate_mono_items(\n-                tcx,\n-                collector::MonoItemCollectionMode::Eager\n-            ).0.iter()\n-        );\n         // FIXME: Fix this\n         // ::rustc::middle::dependency_format::calculate(tcx);\n         let _ = tcx.link_args(LOCAL_CRATE);\n         let _ = tcx.native_libraries(LOCAL_CRATE);\n-        for mono_item in\n-            collector::collect_crate_mono_items(\n-                tcx,\n-                collector::MonoItemCollectionMode::Eager\n-            ).0 {\n+        let (_, cgus) = tcx.collect_and_partition_mono_items(LOCAL_CRATE);\n+        for (mono_item, _) in cgus.iter().flat_map(|cgu| cgu.items().iter()) {\n             if let MonoItem::Fn(inst) = mono_item {\n                 let def_id = inst.def_id();\n-                if def_id.is_local()  {\n-                    let _ = inst.def.is_inline(tcx);\n+                if def_id.is_local() {\n                     let _ = tcx.codegen_fn_attrs(def_id);\n                 }\n             }"}]}