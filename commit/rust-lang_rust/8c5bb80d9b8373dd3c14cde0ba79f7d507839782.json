{"sha": "8c5bb80d9b8373dd3c14cde0ba79f7d507839782", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNWJiODBkOWI4MzczZGQzYzE0Y2RlMGJhNzlmN2Q1MDc4Mzk3ODI=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-04T03:42:37Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-04T03:42:37Z"}, "message": "sed -i -s 's/\\bmod}/self}/g' **/*.rs", "tree": {"sha": "8dfc79e30cc5e42278a9ec2830ae87fd3004f5da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dfc79e30cc5e42278a9ec2830ae87fd3004f5da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c5bb80d9b8373dd3c14cde0ba79f7d507839782", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c5bb80d9b8373dd3c14cde0ba79f7d507839782", "html_url": "https://github.com/rust-lang/rust/commit/8c5bb80d9b8373dd3c14cde0ba79f7d507839782", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/comments", "author": null, "committer": null, "parents": [{"sha": "56dcbd17fdad5d39b7b02e22a7490d2468718d08", "url": "https://api.github.com/repos/rust-lang/rust/commits/56dcbd17fdad5d39b7b02e22a7490d2468718d08", "html_url": "https://github.com/rust-lang/rust/commit/56dcbd17fdad5d39b7b02e22a7490d2468718d08"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "95b528b5773b62dbc127fc8f041115663eed102b", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=8c5bb80d9b8373dd3c14cde0ba79f7d507839782", "patch": "@@ -43,7 +43,7 @@ use default::Default;\n use iter::*;\n use kinds::Copy;\n use num::Int;\n-use ops::{FnMut, mod};\n+use ops::{FnMut, self};\n use option::Option;\n use option::Option::{None, Some};\n use result::Result;"}, {"sha": "e392026e0bc9937bcef76ec9df7c2b4d692001a2", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=8c5bb80d9b8373dd3c14cde0ba79f7d507839782", "patch": "@@ -17,7 +17,7 @@ pub use self::constness::*;\n use metadata::csearch;\n use middle::{astencode, def};\n use middle::pat_util::def_to_path;\n-use middle::ty::{mod};\n+use middle::ty::{self};\n use middle::astconv_util::{ast_ty_to_prim_ty};\n use util::nodemap::DefIdMap;\n "}, {"sha": "827e8ef9fb9534b4376814f7f86b5eaa6f1f38b4", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=8c5bb80d9b8373dd3c14cde0ba79f7d507839782", "patch": "@@ -23,7 +23,7 @@ use self::OverloadedCallType::*;\n use middle::{def, region, pat_util};\n use middle::mem_categorization as mc;\n use middle::mem_categorization::Typer;\n-use middle::ty::{mod};\n+use middle::ty::{self};\n use middle::ty::{MethodCall, MethodObject, MethodTraitObject};\n use middle::ty::{MethodOrigin, MethodParam, MethodTypeParam};\n use middle::ty::{MethodStatic, MethodStaticUnboxedClosure};"}, {"sha": "54d2378256d3a7fef70a78cdcc7456fe4e0f6eec", "filename": "src/librustc_typeck/check/method/confirm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs?ref=8c5bb80d9b8373dd3c14cde0ba79f7d507839782", "patch": "@@ -12,7 +12,7 @@ use super::probe;\n \n use check::{self, FnCtxt, NoPreference, PreferMutLvalue, callee, demand};\n use middle::mem_categorization::Typer;\n-use middle::subst::{mod};\n+use middle::subst::{self};\n use middle::traits;\n use middle::ty::{self, Ty};\n use middle::ty::{MethodCall, MethodCallee, MethodObject, MethodOrigin,"}, {"sha": "1fdb68854c01fd4a7b76ba3284e61ff6f8d277b6", "filename": "src/librustc_typeck/check/upvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs?ref=8c5bb80d9b8373dd3c14cde0ba79f7d507839782", "patch": "@@ -44,7 +44,7 @@ use super::FnCtxt;\n \n use middle::expr_use_visitor as euv;\n use middle::mem_categorization as mc;\n-use middle::ty::{mod};\n+use middle::ty::{self};\n use middle::infer::{InferCtxt, UpvarRegion};\n use syntax::ast;\n use syntax::codemap::Span;"}, {"sha": "0a45a51f034db5a95ffee48cd012833da432979f", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=8c5bb80d9b8373dd3c14cde0ba79f7d507839782", "patch": "@@ -20,7 +20,7 @@ use fmt;\n use hash::{Hash, Hasher, RandomSipHasher};\n use iter::{Iterator, IteratorExt, IteratorCloneExt, FromIterator, Map, Chain, Extend};\n use ops::{BitOr, BitAnd, BitXor, Sub};\n-use option::Option::{Some, None, mod};\n+use option::Option::{Some, None, self};\n use result::Result::{Ok, Err};\n \n use super::map::{self, HashMap, Keys, INITIAL_CAPACITY};"}, {"sha": "7a67fab820de518b8e88e96bc9fe8d5e1e57ed7b", "filename": "src/libsyntax/ext/deriving/cmp/eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs?ref=8c5bb80d9b8373dd3c14cde0ba79f7d507839782", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use ast::{MetaItem, Item, Expr, mod};\n+use ast::{MetaItem, Item, Expr, self};\n use codemap::Span;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;"}, {"sha": "eb6a3111cc15ba3ad5ce397610c1b35d6735d86a", "filename": "src/test/run-pass/associated-types-impl-redirect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Ftest%2Frun-pass%2Fassociated-types-impl-redirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Ftest%2Frun-pass%2Fassociated-types-impl-redirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-types-impl-redirect.rs?ref=8c5bb80d9b8373dd3c14cde0ba79f7d507839782", "patch": "@@ -20,7 +20,7 @@\n #![no_implicit_prelude]\n \n use std::kinds::Sized;\n-use std::option::Option::{None, Some, mod};\n+use std::option::Option::{None, Some, self};\n \n trait Iterator {\n     type Item;"}, {"sha": "8a1a090e919cc407eab577591cf041cf8357148d", "filename": "src/test/run-pass/associated-types-where-clause-impl-ambiguity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Ftest%2Frun-pass%2Fassociated-types-where-clause-impl-ambiguity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Ftest%2Frun-pass%2Fassociated-types-where-clause-impl-ambiguity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-types-where-clause-impl-ambiguity.rs?ref=8c5bb80d9b8373dd3c14cde0ba79f7d507839782", "patch": "@@ -20,7 +20,7 @@\n #![no_implicit_prelude]\n \n use std::kinds::Sized;\n-use std::option::Option::{None, Some, mod};\n+use std::option::Option::{None, Some, self};\n \n trait Iterator {\n     type Item;"}, {"sha": "cca9c8f2df422cbb6b78f76eb2b01793a7491517", "filename": "src/test/run-pass/use-mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Ftest%2Frun-pass%2Fuse-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c5bb80d9b8373dd3c14cde0ba79f7d507839782/src%2Ftest%2Frun-pass%2Fuse-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse-mod.rs?ref=8c5bb80d9b8373dd3c14cde0ba79f7d507839782", "patch": "@@ -26,7 +26,7 @@ mod foo {\n }\n \n mod baz {\n-    use super::foo::{bar, mod};\n+    use super::foo::{bar, self};\n     pub use foo::Third;\n }\n "}]}