{"sha": "22fa1aaadec721775661064653125fadbba9b908", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyZmExYWFhZGVjNzIxNzc1NjYxMDY0NjUzMTI1ZmFkYmJhOWI5MDg=", "commit": {"author": {"name": "Ms2ger", "email": "Ms2ger@gmail.com", "date": "2015-09-21T14:12:53Z"}, "committer": {"name": "Ms2ger", "email": "Ms2ger@gmail.com", "date": "2015-09-21T14:12:53Z"}, "message": "Remove hir::AsmDialect in favour of ast::AsmDialect.", "tree": {"sha": "c862efab05bd0de70703e70fd0776b074632bf75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c862efab05bd0de70703e70fd0776b074632bf75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22fa1aaadec721775661064653125fadbba9b908", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22fa1aaadec721775661064653125fadbba9b908", "html_url": "https://github.com/rust-lang/rust/commit/22fa1aaadec721775661064653125fadbba9b908", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22fa1aaadec721775661064653125fadbba9b908/comments", "author": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6217b002ba779aae93f340838d9166253c5407bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/6217b002ba779aae93f340838d9166253c5407bf", "html_url": "https://github.com/rust-lang/rust/commit/6217b002ba779aae93f340838d9166253c5407bf"}], "stats": {"total": 25, "additions": 6, "deletions": 19}, "files": [{"sha": "8d40a34ef08a879cf0f8dc35760732acd132f680", "filename": "src/librustc_front/hir.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/22fa1aaadec721775661064653125fadbba9b908/src%2Flibrustc_front%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22fa1aaadec721775661064653125fadbba9b908/src%2Flibrustc_front%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Fhir.rs?ref=22fa1aaadec721775661064653125fadbba9b908", "patch": "@@ -10,7 +10,6 @@\n \n // The Rust HIR.\n \n-pub use self::AsmDialect::*;\n pub use self::BindingMode::*;\n pub use self::BinOp_::*;\n pub use self::BlockCheckMode::*;\n@@ -41,7 +40,7 @@ pub use self::PathParameters::*;\n \n use syntax::codemap::{self, Span, Spanned, DUMMY_SP, ExpnId};\n use syntax::abi::Abi;\n-use syntax::ast::{Name, Ident, NodeId, DUMMY_NODE_ID, TokenTree};\n+use syntax::ast::{Name, Ident, NodeId, DUMMY_NODE_ID, TokenTree, AsmDialect};\n use syntax::ast::{Attribute, Lit, StrStyle, FloatTy, IntTy, UintTy, CrateConfig};\n use syntax::owned_slice::OwnedSlice;\n use syntax::parse::token::InternedString;\n@@ -876,12 +875,6 @@ pub enum Ty_ {\n     TyInfer,\n }\n \n-#[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\n-pub enum AsmDialect {\n-    AsmAtt,\n-    AsmIntel\n-}\n-\n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\n pub struct InlineAsm {\n     pub asm: InternedString,"}, {"sha": "36d375a3a1a2b05c6bedd891e5332c41e6444941", "filename": "src/librustc_front/lowering.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/22fa1aaadec721775661064653125fadbba9b908/src%2Flibrustc_front%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22fa1aaadec721775661064653125fadbba9b908/src%2Flibrustc_front%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Flowering.rs?ref=22fa1aaadec721775661064653125fadbba9b908", "patch": "@@ -801,7 +801,7 @@ pub fn lower_expr(e: &Expr) -> P<hir::Expr> {\n                     clobbers: clobbers.clone(),\n                     volatile: volatile,\n                     alignstack: alignstack,\n-                    dialect: lower_asm_dialect(dialect),\n+                    dialect: dialect,\n                     expn_id: expn_id,\n                 }),\n                 ExprStruct(ref path, ref fields, ref maybe_expr) => {\n@@ -863,13 +863,6 @@ pub fn lower_capture_clause(c: CaptureClause) -> hir::CaptureClause {\n     }\n }\n \n-pub fn lower_asm_dialect(a: AsmDialect) -> hir::AsmDialect {\n-    match a {\n-        AsmAtt => hir::AsmAtt,\n-        AsmIntel => hir::AsmIntel,\n-    }\n-}\n-\n pub fn lower_visibility(v: Visibility) -> hir::Visibility {\n     match v {\n         Public => hir::Public,"}, {"sha": "7a5c59e2a4c99cf33da2b7539b9adef3fcfab526", "filename": "src/librustc_front/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22fa1aaadec721775661064653125fadbba9b908/src%2Flibrustc_front%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22fa1aaadec721775661064653125fadbba9b908/src%2Flibrustc_front%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Fprint%2Fpprust.rs?ref=22fa1aaadec721775661064653125fadbba9b908", "patch": "@@ -1539,7 +1539,7 @@ impl<'a> State<'a> {\n                 if a.alignstack {\n                     options.push(\"alignstack\");\n                 }\n-                if a.dialect == hir::AsmDialect::AsmIntel {\n+                if a.dialect == ast::AsmDialect::AsmIntel {\n                     options.push(\"intel\");\n                 }\n "}, {"sha": "07846515c641740789452f711d056121e0ca1c90", "filename": "src/librustc_trans/trans/asm.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/22fa1aaadec721775661064653125fadbba9b908/src%2Flibrustc_trans%2Ftrans%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22fa1aaadec721775661064653125fadbba9b908/src%2Flibrustc_trans%2Ftrans%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fasm.rs?ref=22fa1aaadec721775661064653125fadbba9b908", "patch": "@@ -22,6 +22,7 @@ use trans::type_::Type;\n \n use rustc_front::hir as ast;\n use std::ffi::CString;\n+use syntax::ast::AsmDialect;\n use libc::{c_uint, c_char};\n \n // Take an inline assembly expression and splat it out via LLVM\n@@ -105,8 +106,8 @@ pub fn trans_inline_asm<'blk, 'tcx>(bcx: Block<'blk, 'tcx>, ia: &ast::InlineAsm)\n     };\n \n     let dialect = match ia.dialect {\n-        ast::AsmAtt   => llvm::AD_ATT,\n-        ast::AsmIntel => llvm::AD_Intel\n+        AsmDialect::AsmAtt   => llvm::AD_ATT,\n+        AsmDialect::AsmIntel => llvm::AD_Intel\n     };\n \n     let asm = CString::new(ia.asm.as_bytes()).unwrap();"}]}