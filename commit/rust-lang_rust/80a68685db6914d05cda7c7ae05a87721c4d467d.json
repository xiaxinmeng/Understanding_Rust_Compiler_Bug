{"sha": "80a68685db6914d05cda7c7ae05a87721c4d467d", "node_id": "C_kwDOAAsO6NoAKDgwYTY4Njg1ZGI2OTE0ZDA1Y2RhN2M3YWUwNWE4NzcyMWM0ZDQ2N2Q", "commit": {"author": {"name": "C\u00f4me ALLART", "email": "come.allart@etu.emse.fr", "date": "2021-12-11T19:41:23Z"}, "committer": {"name": "C\u00f4me ALLART", "email": "come.allart@etu.emse.fr", "date": "2021-12-11T19:41:23Z"}, "message": "refactor: use Itertools::intersperse", "tree": {"sha": "277238b565799dd37a0436487cf6513443ca3b0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/277238b565799dd37a0436487cf6513443ca3b0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80a68685db6914d05cda7c7ae05a87721c4d467d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80a68685db6914d05cda7c7ae05a87721c4d467d", "html_url": "https://github.com/rust-lang/rust/commit/80a68685db6914d05cda7c7ae05a87721c4d467d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80a68685db6914d05cda7c7ae05a87721c4d467d/comments", "author": null, "committer": null, "parents": [{"sha": "7266fdb5a400170563622da48ec1b2d1b524c7c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7266fdb5a400170563622da48ec1b2d1b524c7c3", "html_url": "https://github.com/rust-lang/rust/commit/7266fdb5a400170563622da48ec1b2d1b524c7c3"}], "stats": {"total": 16, "additions": 2, "deletions": 14}, "files": [{"sha": "a2fe3463b6faf5042f44a46358fe5819f87d2780", "filename": "crates/ide_assists/src/handlers/generate_documentation_template.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/80a68685db6914d05cda7c7ae05a87721c4d467d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_documentation_template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80a68685db6914d05cda7c7ae05a87721c4d467d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_documentation_template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_documentation_template.rs?ref=80a68685db6914d05cda7c7ae05a87721c4d467d", "patch": "@@ -1,5 +1,6 @@\n use hir::{AsAssocItem, HasVisibility, ModuleDef, Visibility};\n use ide_db::assists::{AssistId, AssistKind};\n+use itertools::Itertools;\n use stdx::to_lower_snake_case;\n use syntax::{\n     ast::{self, edit::IndentLevel, HasDocComments, HasName},\n@@ -354,7 +355,7 @@ fn arguments_from_params(param_list: &ast::ParamList) -> String {\n         },\n         _ => \"_\".to_string(),\n     });\n-    intersperse_string(args_iter, \", \")\n+    Itertools::intersperse(args_iter, \", \".to_string()).collect()\n }\n \n /// Helper function to build a function call. `None` if expected `self_name` was not provided\n@@ -430,19 +431,6 @@ fn returns_a_value(ast_func: &ast::Fn) -> bool {\n     }\n }\n \n-/// Helper function to concatenate string with a separator between them\n-fn intersperse_string(mut iter: impl Iterator<Item = String>, separator: &str) -> String {\n-    let mut result = String::new();\n-    if let Some(first) = iter.next() {\n-        result.push_str(&first);\n-    }\n-    for string in iter {\n-        result.push_str(separator);\n-        result.push_str(&string);\n-    }\n-    result\n-}\n-\n #[cfg(test)]\n mod tests {\n     use crate::tests::{check_assist, check_assist_not_applicable};"}]}