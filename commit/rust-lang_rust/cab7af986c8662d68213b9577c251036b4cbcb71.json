{"sha": "cab7af986c8662d68213b9577c251036b4cbcb71", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhYjdhZjk4NmM4NjYyZDY4MjEzYjk1NzdjMjUxMDM2YjRjYmNiNzE=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-11-22T22:08:03Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-09T20:43:24Z"}, "message": "Check for `ConstantIndex` move paths correctly in borrowck", "tree": {"sha": "ff92f676bbea451b07cfeb68eade86437b6a5079", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff92f676bbea451b07cfeb68eade86437b6a5079"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cab7af986c8662d68213b9577c251036b4cbcb71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cab7af986c8662d68213b9577c251036b4cbcb71", "html_url": "https://github.com/rust-lang/rust/commit/cab7af986c8662d68213b9577c251036b4cbcb71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cab7af986c8662d68213b9577c251036b4cbcb71/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96dc03bad73cd18e7f58d90c2fc0198e618851e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/96dc03bad73cd18e7f58d90c2fc0198e618851e5", "html_url": "https://github.com/rust-lang/rust/commit/96dc03bad73cd18e7f58d90c2fc0198e618851e5"}], "stats": {"total": 21, "additions": 6, "deletions": 15}, "files": [{"sha": "b4f2e2377ac7dc95c4ff28a734921ea574a794ff", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/cab7af986c8662d68213b9577c251036b4cbcb71/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cab7af986c8662d68213b9577c251036b4cbcb71/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=cab7af986c8662d68213b9577c251036b4cbcb71", "patch": "@@ -1738,25 +1738,16 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n     /// static variable, as we do not track those in the MoveData.\n     fn move_path_closest_to(\n         &mut self,\n-        place: PlaceRef<'cx, 'tcx>,\n+        place: PlaceRef<'_, 'tcx>,\n     ) -> Result<(PlaceRef<'cx, 'tcx>, MovePathIndex), NoMovePathFound> {\n-        let mut last_prefix = place.base;\n-\n-        for prefix in self.prefixes(place, PrefixSet::All) {\n-            if let Some(mpi) = self.move_path_for_place(prefix) {\n-                return Ok((prefix, mpi));\n-            }\n-\n-            last_prefix = prefix.base;\n-        }\n-\n-        match last_prefix {\n-            PlaceBase::Local(_) => panic!(\"should have move path for every Local\"),\n-            PlaceBase::Static(_) => Err(NoMovePathFound::ReachedStatic),\n+        match self.move_data.rev_lookup.find(place) {\n+            LookupResult::Parent(Some(mpi))\n+            | LookupResult::Exact(mpi) => Ok((self.move_data.move_paths[mpi].place.as_ref(), mpi)),\n+            LookupResult::Parent(None) => Err(NoMovePathFound::ReachedStatic),\n         }\n     }\n \n-    fn move_path_for_place(&mut self, place: PlaceRef<'cx, 'tcx>) -> Option<MovePathIndex> {\n+    fn move_path_for_place(&mut self, place: PlaceRef<'_, 'tcx>) -> Option<MovePathIndex> {\n         // If returns None, then there is no move path corresponding\n         // to a direct owner of `place` (which means there is nothing\n         // that borrowck tracks for its analysis)."}]}