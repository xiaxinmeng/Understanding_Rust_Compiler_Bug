{"sha": "662f1f20e4497cdd1459d15686706fe27d56d335", "node_id": "C_kwDOAAsO6NoAKDY2MmYxZjIwZTQ0OTdjZGQxNDU5ZDE1Njg2NzA2ZmUyN2Q1NmQzMzU", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-07T11:58:58Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-07T11:58:58Z"}, "message": "Lift `T: Sized` bounds from some `strict_provenance` `NonNull` methods", "tree": {"sha": "b8a3d85f7c5123b26f747f4465dd30d6245efe5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8a3d85f7c5123b26f747f4465dd30d6245efe5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/662f1f20e4497cdd1459d15686706fe27d56d335", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/662f1f20e4497cdd1459d15686706fe27d56d335", "html_url": "https://github.com/rust-lang/rust/commit/662f1f20e4497cdd1459d15686706fe27d56d335", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/662f1f20e4497cdd1459d15686706fe27d56d335/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f34e11d1b7708700e696e9950ac503be594c264", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f34e11d1b7708700e696e9950ac503be594c264", "html_url": "https://github.com/rust-lang/rust/commit/1f34e11d1b7708700e696e9950ac503be594c264"}], "stats": {"total": 15, "additions": 3, "deletions": 12}, "files": [{"sha": "f728c0e223392f2a106792a9bce7e6df806a7e7a", "filename": "library/core/src/ptr/non_null.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/662f1f20e4497cdd1459d15686706fe27d56d335/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/662f1f20e4497cdd1459d15686706fe27d56d335/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs?ref=662f1f20e4497cdd1459d15686706fe27d56d335", "patch": "@@ -268,10 +268,7 @@ impl<T: ?Sized> NonNull<T> {\n     #[must_use]\n     #[inline]\n     #[unstable(feature = \"strict_provenance\", issue = \"95228\")]\n-    pub fn addr(self) -> NonZeroUsize\n-    where\n-        T: Sized,\n-    {\n+    pub fn addr(self) -> NonZeroUsize {\n         // SAFETY: The pointer is guaranteed by the type to be non-null,\n         // meaning that the address will be non-zero.\n         unsafe { NonZeroUsize::new_unchecked(self.pointer.addr()) }\n@@ -286,10 +283,7 @@ impl<T: ?Sized> NonNull<T> {\n     #[must_use]\n     #[inline]\n     #[unstable(feature = \"strict_provenance\", issue = \"95228\")]\n-    pub fn with_addr(self, addr: NonZeroUsize) -> Self\n-    where\n-        T: Sized,\n-    {\n+    pub fn with_addr(self, addr: NonZeroUsize) -> Self {\n         // SAFETY: The result of `ptr::from::with_addr` is non-null because `addr` is guaranteed to be non-zero.\n         unsafe { NonNull::new_unchecked(self.pointer.with_addr(addr.get()) as *mut _) }\n     }\n@@ -303,10 +297,7 @@ impl<T: ?Sized> NonNull<T> {\n     #[must_use]\n     #[inline]\n     #[unstable(feature = \"strict_provenance\", issue = \"95228\")]\n-    pub fn map_addr(self, f: impl FnOnce(NonZeroUsize) -> NonZeroUsize) -> Self\n-    where\n-        T: Sized,\n-    {\n+    pub fn map_addr(self, f: impl FnOnce(NonZeroUsize) -> NonZeroUsize) -> Self {\n         self.with_addr(f(self.addr()))\n     }\n "}]}