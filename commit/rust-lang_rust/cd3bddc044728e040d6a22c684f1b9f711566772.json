{"sha": "cd3bddc044728e040d6a22c684f1b9f711566772", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkM2JkZGMwNDQ3MjhlMDQwZDZhMjJjNjg0ZjFiOWY3MTE1NjY3NzI=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-06T20:47:58Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-11-13T18:45:38Z"}, "message": "prioritize sendfile over splice since it results in fewer context switches when sending to pipes\n\nsplice returns to userspace when the pipe is full, sendfile\njust blocks until it's done, this can achieve much higher throughput", "tree": {"sha": "a1ffbebe7d793b0244432ee6fb36bf8395c994a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1ffbebe7d793b0244432ee6fb36bf8395c994a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd3bddc044728e040d6a22c684f1b9f711566772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd3bddc044728e040d6a22c684f1b9f711566772", "html_url": "https://github.com/rust-lang/rust/commit/cd3bddc044728e040d6a22c684f1b9f711566772", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd3bddc044728e040d6a22c684f1b9f711566772/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67a6059aa5dab924a09194d5490d43da518a40a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/67a6059aa5dab924a09194d5490d43da518a40a5", "html_url": "https://github.com/rust-lang/rust/commit/67a6059aa5dab924a09194d5490d43da518a40a5"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "f54a9b8b7649b5338ab1944f573ffbd4746c4d7e", "filename": "library/std/src/io/copy.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/cd3bddc044728e040d6a22c684f1b9f711566772/library%2Fstd%2Fsrc%2Fio%2Fcopy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd3bddc044728e040d6a22c684f1b9f711566772/library%2Fstd%2Fsrc%2Fio%2Fcopy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fcopy.rs?ref=cd3bddc044728e040d6a22c684f1b9f711566772", "patch": "@@ -173,22 +173,6 @@ mod kernel_copy {\n                     )\n                     .map(|bytes_copied| bytes_copied + bytes_flushed)\n                 }\n-                (CopyParams(reader_meta, Some(readfd)), CopyParams(writer_meta, Some(writefd)))\n-                    if reader_meta.is_fifo() || writer_meta.is_fifo() =>\n-                {\n-                    // splice\n-                    let bytes_flushed = flush()?;\n-                    let max_write = reader.min_limit();\n-                    let (mut reader, mut writer) =\n-                        unsafe { (fd_as_file(readfd), fd_as_file(writefd)) };\n-                    crate::sys::fs::sendfile_splice(\n-                        crate::sys::fs::SpliceMode::Splice,\n-                        &mut reader,\n-                        &mut writer,\n-                        max_write,\n-                    )\n-                    .map(|bytes_sent| bytes_sent + bytes_flushed)\n-                }\n                 (\n                     CopyParams(FdMeta::Metadata(reader_meta), Some(readfd)),\n                     CopyParams(_, Some(writefd)),\n@@ -205,6 +189,22 @@ mod kernel_copy {\n                         &mut reader,\n                         &mut writer,\n                         min(len, max_write),\n+                    )\n+                        .map(|bytes_sent| bytes_sent + bytes_flushed)\n+                }\n+                (CopyParams(reader_meta, Some(readfd)), CopyParams(writer_meta, Some(writefd)))\n+                    if reader_meta.is_fifo() || writer_meta.is_fifo() =>\n+                {\n+                    // splice\n+                    let bytes_flushed = flush()?;\n+                    let max_write = reader.min_limit();\n+                    let (mut reader, mut writer) =\n+                        unsafe { (fd_as_file(readfd), fd_as_file(writefd)) };\n+                    crate::sys::fs::sendfile_splice(\n+                        crate::sys::fs::SpliceMode::Splice,\n+                        &mut reader,\n+                        &mut writer,\n+                        max_write,\n                     )\n                     .map(|bytes_sent| bytes_sent + bytes_flushed)\n                 }"}]}