{"sha": "11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "node_id": "C_kwDOAAsO6NoAKDExYmI4MGE5MmI0ZjQ2ZmE3ZGZhOTE0OGQwYmRmYzE4NWE3NjIxYmQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-19T10:35:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-19T10:35:09Z"}, "message": "Auto merge of #101901 - lcnr:early-binder-type-foldable, r=compiler-errors\n\n`EarlyBinder` prevent misuse\n\nfolding a type before substituting is pretty much always wrong and could happen by accident, e.g. see https://github.com/rust-lang/rust/pull/99798#discussion_r968666538\n\nthis PR removes the `TypeFoldable` and `TypeVisitable` impl from `EarlyBinder`.\n\nr? types cc `@jackh726`", "tree": {"sha": "f254a1fd7034bb78a6f4c4814abd78a0721bbc56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f254a1fd7034bb78a6f4c4814abd78a0721bbc56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "html_url": "https://github.com/rust-lang/rust/commit/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "503e19d01e941b88bf6d5b28e9108d046abcfa2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/503e19d01e941b88bf6d5b28e9108d046abcfa2d", "html_url": "https://github.com/rust-lang/rust/commit/503e19d01e941b88bf6d5b28e9108d046abcfa2d"}, {"sha": "0c3e01d8f6d0d860fb00e344d9012a45afa16e03", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c3e01d8f6d0d860fb00e344d9012a45afa16e03", "html_url": "https://github.com/rust-lang/rust/commit/0c3e01d8f6d0d860fb00e344d9012a45afa16e03"}], "stats": {"total": 320, "additions": 138, "deletions": 182}, "files": [{"sha": "69ad7f662750061a13a873fff31b8f44658d6368", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -16,7 +16,7 @@ use rustc_middle::mir::{\n     FakeReadCause, LocalDecl, LocalInfo, LocalKind, Location, Operand, Place, PlaceRef,\n     ProjectionElem, Rvalue, Statement, StatementKind, Terminator, TerminatorKind, VarBindingForm,\n };\n-use rustc_middle::ty::{self, subst::Subst, suggest_constraining_type_params, PredicateKind, Ty};\n+use rustc_middle::ty::{self, suggest_constraining_type_params, PredicateKind, Ty};\n use rustc_mir_dataflow::move_paths::{InitKind, MoveOutIndex, MovePathIndex};\n use rustc_span::def_id::LocalDefId;\n use rustc_span::hygiene::DesugaringKind;"}, {"sha": "41fba8deb10e7bc832092d70310623e90104bd4e", "filename": "compiler/rustc_borrowck/src/universal_regions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_borrowck%2Fsrc%2Funiversal_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_borrowck%2Fsrc%2Funiversal_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Funiversal_regions.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -22,8 +22,8 @@ use rustc_hir::{BodyOwnerKind, HirId};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_infer::infer::{InferCtxt, NllRegionVariableOrigin};\n use rustc_middle::ty::fold::TypeFoldable;\n-use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use rustc_middle::ty::{self, InlineConstSubsts, InlineConstSubstsParts, RegionVid, Ty, TyCtxt};\n+use rustc_middle::ty::{InternalSubsts, SubstsRef};\n use std::iter;\n \n use crate::nll::ToRegionVid;"}, {"sha": "b52cc873f2e69745074dc5c3758ed8b79edd2938", "filename": "compiler/rustc_const_eval/src/const_eval/eval_queries.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Feval_queries.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -13,7 +13,7 @@ use rustc_middle::mir::pretty::display_allocation;\n use rustc_middle::traits::Reveal;\n use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n-use rustc_middle::ty::{self, subst::Subst, TyCtxt};\n+use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::source_map::Span;\n use rustc_target::abi::{self, Abi};\n use std::borrow::Cow;"}, {"sha": "0e3867557ada3c6694eee61948dabf5200830d68", "filename": "compiler/rustc_const_eval/src/interpret/intrinsics/caller_location.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics%2Fcaller_location.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics%2Fcaller_location.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics%2Fcaller_location.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -4,7 +4,6 @@ use rustc_ast::Mutability;\n use rustc_hir::lang_items::LangItem;\n use rustc_middle::mir::TerminatorKind;\n use rustc_middle::ty::layout::LayoutOf;\n-use rustc_middle::ty::subst::Subst;\n use rustc_span::{Span, Symbol};\n \n use crate::interpret::{"}, {"sha": "9c95ffca19bc035c8ce5e39d009927ac80e5df6f", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -13,7 +13,6 @@ use rustc_middle::mir::{\n     TerminatorKind, UnOp, START_BLOCK,\n };\n use rustc_middle::ty::fold::BottomUpFolder;\n-use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, InstanceDef, ParamEnv, Ty, TyCtxt, TypeFoldable, TypeVisitable};\n use rustc_mir_dataflow::impls::MaybeStorageLive;\n use rustc_mir_dataflow::storage::always_storage_live_locals;"}, {"sha": "546ab82bc238a75ca4f3f88361da2486014bcc45", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -69,8 +69,8 @@ use rustc_middle::dep_graph::DepContext;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::relate::{self, RelateResult, TypeRelation};\n use rustc_middle::ty::{\n-    self, error::TypeError, Binder, List, Region, Subst, Ty, TyCtxt, TypeFoldable,\n-    TypeSuperVisitable, TypeVisitable,\n+    self, error::TypeError, Binder, List, Region, Ty, TyCtxt, TypeFoldable, TypeSuperVisitable,\n+    TypeVisitable,\n };\n use rustc_span::{sym, symbol::kw, BytePos, DesugaringKind, Pos, Span};\n use rustc_target::spec::abi;"}, {"sha": "89a448edc9b2939574b0d3aa838f96b5dbe3c8a9", "filename": "compiler/rustc_infer/src/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -15,8 +15,8 @@ use rustc_middle::hir::nested_filter;\n use rustc_middle::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow, AutoBorrowMutability};\n use rustc_middle::ty::print::{FmtPrinter, PrettyPrinter, Print, Printer};\n-use rustc_middle::ty::subst::{GenericArg, GenericArgKind, Subst, SubstsRef};\n use rustc_middle::ty::{self, DefIdTree, InferConst};\n+use rustc_middle::ty::{GenericArg, GenericArgKind, SubstsRef};\n use rustc_middle::ty::{IsSuggestable, Ty, TyCtxt, TypeckResults};\n use rustc_session::SessionDiagnostic;\n use rustc_span::symbol::{kw, Ident};"}, {"sha": "561279e3c8e6449e2b3a59592d8a082f9828152c", "filename": "compiler/rustc_infer/src/infer/opaque_types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -8,7 +8,7 @@ use rustc_data_structures::vec_map::VecMap;\n use rustc_hir as hir;\n use rustc_middle::traits::ObligationCause;\n use rustc_middle::ty::fold::BottomUpFolder;\n-use rustc_middle::ty::subst::{GenericArgKind, Subst};\n+use rustc_middle::ty::GenericArgKind;\n use rustc_middle::ty::{\n     self, OpaqueHiddenType, OpaqueTypeKey, Ty, TyCtxt, TypeFoldable, TypeSuperVisitable,\n     TypeVisitable, TypeVisitor,"}, {"sha": "e344e192a768e1bcc712d4e3b8b818da1d89c556", "filename": "compiler/rustc_infer/src/infer/outlives/verify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fverify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fverify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fverify.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -5,7 +5,7 @@ use crate::infer::{GenericKind, VerifyBound};\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::sso::SsoHashSet;\n use rustc_hir::def_id::DefId;\n-use rustc_middle::ty::subst::{GenericArg, Subst};\n+use rustc_middle::ty::GenericArg;\n use rustc_middle::ty::{self, EarlyBinder, OutlivesPredicate, Ty, TyCtxt};\n \n use smallvec::smallvec;"}, {"sha": "458bf4ef381bde6102d3bc9f64ef6f94c434a445", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -9,10 +9,10 @@ use crate::mir::visit::MirVisitable;\n use crate::ty::codec::{TyDecoder, TyEncoder};\n use crate::ty::fold::{FallibleTypeFolder, TypeFoldable, TypeSuperFoldable};\n use crate::ty::print::{FmtPrinter, Printer};\n-use crate::ty::subst::{GenericArg, InternalSubsts, Subst, SubstsRef};\n use crate::ty::visit::{TypeSuperVisitable, TypeVisitable, TypeVisitor};\n use crate::ty::{self, List, Ty, TyCtxt};\n use crate::ty::{AdtDef, InstanceDef, ScalarInt, UserTypeAnnotationIndex};\n+use crate::ty::{GenericArg, InternalSubsts, SubstsRef};\n \n use rustc_data_structures::captures::Captures;\n use rustc_errors::ErrorGuaranteed;"}, {"sha": "b4e36076aff21441b67cc814ea62add703d7259a", "filename": "compiler/rustc_middle/src/mir/tcx.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftcx.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -4,7 +4,6 @@\n  */\n \n use crate::mir::*;\n-use crate::ty::subst::Subst;\n use crate::ty::{self, Ty, TyCtxt};\n use rustc_hir as hir;\n use rustc_target::abi::VariantIdx;"}, {"sha": "8e0a1f1f9acf05bc4dee67a89a4b2eb2394d5f6e", "filename": "compiler/rustc_middle/src/ty/abstract_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fabstract_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fabstract_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fabstract_const.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -1,7 +1,7 @@\n //! A subset of a mir body used for const evaluatability checking.\n use crate::mir;\n use crate::ty::visit::TypeVisitable;\n-use crate::ty::{self, subst::Subst, DelaySpanBugEmitted, EarlyBinder, SubstsRef, Ty, TyCtxt};\n+use crate::ty::{self, DelaySpanBugEmitted, EarlyBinder, SubstsRef, Ty, TyCtxt};\n use rustc_errors::ErrorGuaranteed;\n use rustc_hir::def_id::DefId;\n use std::cmp;"}, {"sha": "10c5933574ffa4eb4cb3d377e7f866fc5e94d8a9", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -15,7 +15,6 @@ use crate::mir::{\n use crate::thir::Thir;\n use crate::traits;\n use crate::ty::query::{self, TyCtxtAt};\n-use crate::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, Subst, SubstsRef, UserSubsts};\n use crate::ty::{\n     self, AdtDef, AdtDefData, AdtKind, Binder, BindingMode, BoundVar, CanonicalPolyFnSig,\n     ClosureSizeProfileData, Const, ConstS, ConstVid, DefIdTree, ExistentialPredicate, FloatTy,\n@@ -24,6 +23,7 @@ use crate::ty::{\n     RegionKind, ReprOptions, TraitObjectVisitor, Ty, TyKind, TyS, TyVar, TyVid, TypeAndMut, UintTy,\n     Visibility,\n };\n+use crate::ty::{GenericArg, GenericArgKind, InternalSubsts, SubstsRef, UserSubsts};\n use rustc_ast as ast;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};"}, {"sha": "19754d1453f89b7404e01f8262235a8e7c5bf8ec", "filename": "compiler/rustc_middle/src/ty/generics.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -1,6 +1,5 @@\n use crate::ty;\n-use crate::ty::subst::{Subst, SubstsRef};\n-use crate::ty::EarlyBinder;\n+use crate::ty::{EarlyBinder, SubstsRef};\n use rustc_ast as ast;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def_id::DefId;"}, {"sha": "6c1414f7b8ac88456d744d0541911c4b569d10b0", "filename": "compiler/rustc_middle/src/ty/instance.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -1,9 +1,7 @@\n use crate::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use crate::ty::print::{FmtPrinter, Printer};\n-use crate::ty::subst::{InternalSubsts, Subst};\n-use crate::ty::{\n-    self, EarlyBinder, SubstsRef, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable, TypeVisitable,\n-};\n+use crate::ty::{self, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable, TypeVisitable};\n+use crate::ty::{EarlyBinder, InternalSubsts, SubstsRef};\n use rustc_errors::ErrorGuaranteed;\n use rustc_hir::def::Namespace;\n use rustc_hir::def_id::{CrateNum, DefId};"}, {"sha": "cc820d9eb2d9e1c366132ddc5689523ee83b2c49", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -1,7 +1,6 @@\n use crate::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use crate::mir::{GeneratorLayout, GeneratorSavedLocal};\n use crate::ty::normalize_erasing_regions::NormalizationError;\n-use crate::ty::subst::Subst;\n use crate::ty::{\n     self, layout_sanity_check::sanity_check_layout, subst::SubstsRef, EarlyBinder, ReprOptions, Ty,\n     TyCtxt, TypeVisitable,\n@@ -2768,9 +2767,14 @@ impl<'tcx> ty::Instance<'tcx> {\n                 // (i.e. due to being inside a projection that got normalized, see\n                 // `src/test/ui/polymorphization/normalized_sig_types.rs`), and codegen not keeping\n                 // track of a polymorphization `ParamEnv` to allow normalizing later.\n+                //\n+                // We normalize the `fn_sig` again after substituting at a later point.\n                 let mut sig = match *ty.kind() {\n                     ty::FnDef(def_id, substs) => tcx\n-                        .normalize_erasing_regions(tcx.param_env(def_id), tcx.bound_fn_sig(def_id))\n+                        .bound_fn_sig(def_id)\n+                        .map_bound(|fn_sig| {\n+                            tcx.normalize_erasing_regions(tcx.param_env(def_id), fn_sig)\n+                        })\n                         .subst(tcx, substs),\n                     _ => unreachable!(),\n                 };"}, {"sha": "ac4cad8e5d22d9eda9233ec761d5d3cd6a132fcc", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -89,9 +89,9 @@ pub use self::sty::BoundRegionKind::*;\n pub use self::sty::{\n     Article, Binder, BoundRegion, BoundRegionKind, BoundTy, BoundTyKind, BoundVar,\n     BoundVariableKind, CanonicalPolyFnSig, ClosureSubsts, ClosureSubstsParts, ConstVid,\n-    EarlyBinder, EarlyBoundRegion, ExistentialPredicate, ExistentialProjection,\n-    ExistentialTraitRef, FnSig, FreeRegion, GenSig, GeneratorSubsts, GeneratorSubstsParts,\n-    InlineConstSubsts, InlineConstSubstsParts, ParamConst, ParamTy, PolyExistentialProjection,\n+    EarlyBoundRegion, ExistentialPredicate, ExistentialProjection, ExistentialTraitRef, FnSig,\n+    FreeRegion, GenSig, GeneratorSubsts, GeneratorSubstsParts, InlineConstSubsts,\n+    InlineConstSubstsParts, ParamConst, ParamTy, PolyExistentialProjection,\n     PolyExistentialTraitRef, PolyFnSig, PolyGenSig, PolyTraitRef, ProjectionTy, Region, RegionKind,\n     RegionVid, TraitRef, TyKind, TypeAndMut, UpvarSubsts, VarianceDiagInfo,\n };"}, {"sha": "fe303e21b658d9e89a219ef3e0d70a36f1a30ecc", "filename": "compiler/rustc_middle/src/ty/normalize_erasing_regions.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fnormalize_erasing_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fnormalize_erasing_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fnormalize_erasing_regions.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -10,8 +10,7 @@\n use crate::mir;\n use crate::traits::query::NoSolution;\n use crate::ty::fold::{FallibleTypeFolder, TypeFoldable, TypeFolder};\n-use crate::ty::subst::{Subst, SubstsRef};\n-use crate::ty::{self, EarlyBinder, Ty, TyCtxt};\n+use crate::ty::{self, EarlyBinder, SubstsRef, Ty, TyCtxt};\n \n #[derive(Debug, Copy, Clone, HashStable, TyEncodable, TyDecodable)]\n pub enum NormalizationError<'tcx> {"}, {"sha": "e0a8d58f8a7f62a36aa49bb2988b0320c0f81e21", "filename": "compiler/rustc_middle/src/ty/print/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fmod.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -1,4 +1,4 @@\n-use crate::ty::subst::{GenericArg, Subst};\n+use crate::ty::GenericArg;\n use crate::ty::{self, DefIdTree, Ty, TyCtxt};\n \n use rustc_data_structures::fx::FxHashSet;"}, {"sha": "b6cd5396b1d2396389d2071367706626c7d51f16", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -1,9 +1,9 @@\n use crate::mir::interpret::{AllocRange, GlobalAlloc, Pointer, Provenance, Scalar};\n-use crate::ty::subst::{GenericArg, GenericArgKind, Subst};\n use crate::ty::{\n     self, ConstInt, DefIdTree, ParamConst, ScalarInt, Term, TermKind, Ty, TyCtxt, TypeFoldable,\n     TypeSuperFoldable, TypeSuperVisitable, TypeVisitable,\n };\n+use crate::ty::{GenericArg, GenericArgKind};\n use rustc_apfloat::ieee::{Double, Single};\n use rustc_data_structures::fx::{FxHashMap, FxIndexMap};\n use rustc_data_structures::sso::SsoHashSet;"}, {"sha": "0d97d4acdfc78f5e2607022139a0b81e95578da6", "filename": "compiler/rustc_middle/src/ty/relate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -5,8 +5,8 @@\n //! subtyping, type equality, etc.\n \n use crate::ty::error::{ExpectedFound, TypeError};\n-use crate::ty::subst::{GenericArg, GenericArgKind, Subst, SubstsRef};\n use crate::ty::{self, ImplSubject, Term, TermKind, Ty, TyCtxt, TypeFoldable};\n+use crate::ty::{GenericArg, GenericArgKind, SubstsRef};\n use rustc_hir as ast;\n use rustc_hir::def_id::DefId;\n use rustc_span::DUMMY_SP;"}, {"sha": "004fcffdc4074152cb8d1ae29f00fb9be00fe9f4", "filename": "compiler/rustc_middle/src/ty/structural_impls.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -557,18 +557,6 @@ impl<'tcx, T: TypeVisitable<'tcx>> TypeVisitable<'tcx> for Box<[T]> {\n     }\n }\n \n-impl<'tcx, T: TypeFoldable<'tcx>> TypeFoldable<'tcx> for ty::EarlyBinder<T> {\n-    fn try_fold_with<F: FallibleTypeFolder<'tcx>>(self, folder: &mut F) -> Result<Self, F::Error> {\n-        self.try_map_bound(|ty| ty.try_fold_with(folder))\n-    }\n-}\n-\n-impl<'tcx, T: TypeVisitable<'tcx>> TypeVisitable<'tcx> for ty::EarlyBinder<T> {\n-    fn visit_with<V: TypeVisitor<'tcx>>(&self, visitor: &mut V) -> ControlFlow<V::BreakTy> {\n-        self.as_ref().0.visit_with(visitor)\n-    }\n-}\n-\n impl<'tcx, T: TypeFoldable<'tcx>> TypeFoldable<'tcx> for ty::Binder<'tcx, T> {\n     fn try_fold_with<F: FallibleTypeFolder<'tcx>>(self, folder: &mut F) -> Result<Self, F::Error> {\n         folder.try_fold_binder(self)"}, {"sha": "d2f73f274f8d91d31d4eb355ac878266747885f8", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 2, "deletions": 69, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -3,7 +3,7 @@\n #![allow(rustc::usage_of_ty_tykind)]\n \n use crate::infer::canonical::Canonical;\n-use crate::ty::subst::{GenericArg, InternalSubsts, Subst, SubstsRef};\n+use crate::ty::subst::{GenericArg, InternalSubsts, SubstsRef};\n use crate::ty::visit::ValidateBoundVars;\n use crate::ty::InferTy::*;\n use crate::ty::{\n@@ -551,7 +551,7 @@ impl<'tcx> GeneratorSubsts<'tcx> {\n         layout.variant_fields.iter().map(move |variant| {\n             variant\n                 .iter()\n-                .map(move |field| EarlyBinder(layout.field_tys[*field]).subst(tcx, self.substs))\n+                .map(move |field| ty::EarlyBinder(layout.field_tys[*field]).subst(tcx, self.substs))\n         })\n     }\n \n@@ -915,73 +915,6 @@ impl<'tcx> PolyExistentialTraitRef<'tcx> {\n     }\n }\n \n-#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Debug)]\n-#[derive(Encodable, Decodable, HashStable)]\n-pub struct EarlyBinder<T>(pub T);\n-\n-impl<T> EarlyBinder<T> {\n-    pub fn as_ref(&self) -> EarlyBinder<&T> {\n-        EarlyBinder(&self.0)\n-    }\n-\n-    pub fn map_bound_ref<F, U>(&self, f: F) -> EarlyBinder<U>\n-    where\n-        F: FnOnce(&T) -> U,\n-    {\n-        self.as_ref().map_bound(f)\n-    }\n-\n-    pub fn map_bound<F, U>(self, f: F) -> EarlyBinder<U>\n-    where\n-        F: FnOnce(T) -> U,\n-    {\n-        let value = f(self.0);\n-        EarlyBinder(value)\n-    }\n-\n-    pub fn try_map_bound<F, U, E>(self, f: F) -> Result<EarlyBinder<U>, E>\n-    where\n-        F: FnOnce(T) -> Result<U, E>,\n-    {\n-        let value = f(self.0)?;\n-        Ok(EarlyBinder(value))\n-    }\n-\n-    pub fn rebind<U>(&self, value: U) -> EarlyBinder<U> {\n-        EarlyBinder(value)\n-    }\n-}\n-\n-impl<T> EarlyBinder<Option<T>> {\n-    pub fn transpose(self) -> Option<EarlyBinder<T>> {\n-        self.0.map(|v| EarlyBinder(v))\n-    }\n-}\n-\n-impl<T, U> EarlyBinder<(T, U)> {\n-    pub fn transpose_tuple2(self) -> (EarlyBinder<T>, EarlyBinder<U>) {\n-        (EarlyBinder(self.0.0), EarlyBinder(self.0.1))\n-    }\n-}\n-\n-pub struct EarlyBinderIter<T> {\n-    t: T,\n-}\n-\n-impl<T: IntoIterator> EarlyBinder<T> {\n-    pub fn transpose_iter(self) -> EarlyBinderIter<T::IntoIter> {\n-        EarlyBinderIter { t: self.0.into_iter() }\n-    }\n-}\n-\n-impl<T: Iterator> Iterator for EarlyBinderIter<T> {\n-    type Item = EarlyBinder<T::Item>;\n-\n-    fn next(&mut self) -> Option<Self::Item> {\n-        self.t.next().map(|i| EarlyBinder(i))\n-    }\n-}\n-\n #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Debug, TyEncodable, TyDecodable)]\n #[derive(HashStable)]\n pub enum BoundVariableKind {"}, {"sha": "a939be32fff351c5b0421a9c29749f7d9eed4202", "filename": "compiler/rustc_middle/src/ty/subst.rs", "status": "modified", "additions": 69, "deletions": 8, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -497,18 +497,79 @@ impl<'tcx, T: TypeVisitable<'tcx>> TypeVisitable<'tcx> for &'tcx ty::List<T> {\n     }\n }\n \n-// Just call `foo.subst(tcx, substs)` to perform a substitution across `foo`.\n-#[rustc_on_unimplemented(message = \"Calling `subst` must now be done through an `EarlyBinder`\")]\n-pub trait Subst<'tcx>: Sized {\n-    type Inner;\n+#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Debug)]\n+#[derive(Encodable, Decodable, HashStable)]\n+pub struct EarlyBinder<T>(pub T);\n \n-    fn subst(self, tcx: TyCtxt<'tcx>, substs: &[GenericArg<'tcx>]) -> Self::Inner;\n+/// For early binders, you should first call `subst` before using any visitors.\n+impl<'tcx, T> !TypeFoldable<'tcx> for ty::EarlyBinder<T> {}\n+impl<'tcx, T> !TypeVisitable<'tcx> for ty::EarlyBinder<T> {}\n+\n+impl<T> EarlyBinder<T> {\n+    pub fn as_ref(&self) -> EarlyBinder<&T> {\n+        EarlyBinder(&self.0)\n+    }\n+\n+    pub fn map_bound_ref<F, U>(&self, f: F) -> EarlyBinder<U>\n+    where\n+        F: FnOnce(&T) -> U,\n+    {\n+        self.as_ref().map_bound(f)\n+    }\n+\n+    pub fn map_bound<F, U>(self, f: F) -> EarlyBinder<U>\n+    where\n+        F: FnOnce(T) -> U,\n+    {\n+        let value = f(self.0);\n+        EarlyBinder(value)\n+    }\n+\n+    pub fn try_map_bound<F, U, E>(self, f: F) -> Result<EarlyBinder<U>, E>\n+    where\n+        F: FnOnce(T) -> Result<U, E>,\n+    {\n+        let value = f(self.0)?;\n+        Ok(EarlyBinder(value))\n+    }\n+\n+    pub fn rebind<U>(&self, value: U) -> EarlyBinder<U> {\n+        EarlyBinder(value)\n+    }\n+}\n+\n+impl<T> EarlyBinder<Option<T>> {\n+    pub fn transpose(self) -> Option<EarlyBinder<T>> {\n+        self.0.map(|v| EarlyBinder(v))\n+    }\n }\n \n-impl<'tcx, T: TypeFoldable<'tcx>> Subst<'tcx> for ty::EarlyBinder<T> {\n-    type Inner = T;\n+impl<T, U> EarlyBinder<(T, U)> {\n+    pub fn transpose_tuple2(self) -> (EarlyBinder<T>, EarlyBinder<U>) {\n+        (EarlyBinder(self.0.0), EarlyBinder(self.0.1))\n+    }\n+}\n+\n+pub struct EarlyBinderIter<T> {\n+    t: T,\n+}\n+\n+impl<T: IntoIterator> EarlyBinder<T> {\n+    pub fn transpose_iter(self) -> EarlyBinderIter<T::IntoIter> {\n+        EarlyBinderIter { t: self.0.into_iter() }\n+    }\n+}\n+\n+impl<T: Iterator> Iterator for EarlyBinderIter<T> {\n+    type Item = EarlyBinder<T::Item>;\n+\n+    fn next(&mut self) -> Option<Self::Item> {\n+        self.t.next().map(|i| EarlyBinder(i))\n+    }\n+}\n \n-    fn subst(self, tcx: TyCtxt<'tcx>, substs: &[GenericArg<'tcx>]) -> Self::Inner {\n+impl<'tcx, T: TypeFoldable<'tcx>> ty::EarlyBinder<T> {\n+    pub fn subst(self, tcx: TyCtxt<'tcx>, substs: &[GenericArg<'tcx>]) -> T {\n         let mut folder = SubstFolder { tcx, substs, binders_passed: 0 };\n         self.0.fold_with(&mut folder)\n     }"}, {"sha": "d93aab04e9921721780bcccd4f92f3376088f9cc", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -3,11 +3,11 @@\n use crate::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use crate::ty::layout::IntegerExt;\n use crate::ty::query::TyCtxtAt;\n-use crate::ty::subst::{GenericArgKind, Subst, SubstsRef};\n use crate::ty::{\n     self, DefIdTree, FallibleTypeFolder, Ty, TyCtxt, TypeFoldable, TypeFolder, TypeSuperFoldable,\n     TypeVisitable,\n };\n+use crate::ty::{GenericArgKind, SubstsRef};\n use rustc_apfloat::Float as _;\n use rustc_ast as ast;\n use rustc_attr::{self as attr, SignedInt, UnsignedInt};"}, {"sha": "1b1414837668f6c38cd89e364a35ae24f8192419", "filename": "compiler/rustc_mir_build/src/build/matches/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Ftest.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -14,8 +14,8 @@ use rustc_hir::{LangItem, RangeEnd};\n use rustc_index::bit_set::BitSet;\n use rustc_middle::mir::*;\n use rustc_middle::thir::*;\n-use rustc_middle::ty::subst::{GenericArg, Subst};\n use rustc_middle::ty::util::IntTypeExt;\n+use rustc_middle::ty::GenericArg;\n use rustc_middle::ty::{self, adjustment::PointerCast, Ty, TyCtxt};\n use rustc_span::def_id::DefId;\n use rustc_span::symbol::{sym, Symbol};"}, {"sha": "1d95d6b53fbece1e34833720875f6ea20a5d8a7b", "filename": "compiler/rustc_mir_build/src/thir/cx/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fmod.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -15,7 +15,7 @@ use rustc_hir::HirId;\n use rustc_hir::Node;\n use rustc_middle::middle::region;\n use rustc_middle::thir::*;\n-use rustc_middle::ty::{self, RvalueScopes, Subst, TyCtxt};\n+use rustc_middle::ty::{self, RvalueScopes, TyCtxt};\n use rustc_span::Span;\n \n pub(crate) fn thir_body<'tcx>("}, {"sha": "08ba3f9941d93e15888bd27a8d6abf3bab983f2f", "filename": "compiler/rustc_mir_transform/src/const_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -17,7 +17,7 @@ use rustc_middle::mir::{\n     RETURN_PLACE,\n };\n use rustc_middle::ty::layout::{LayoutError, LayoutOf, LayoutOfHelpers, TyAndLayout};\n-use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::InternalSubsts;\n use rustc_middle::ty::{self, ConstKind, Instance, ParamEnv, Ty, TyCtxt, TypeVisitable};\n use rustc_span::{def_id::DefId, Span};\n use rustc_target::abi::{self, HasDataLayout, Size, TargetDataLayout};"}, {"sha": "f16efb365f3cdf9db6fef18a5d2359af8b6899ac", "filename": "compiler/rustc_mir_transform/src/const_prop_lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -21,7 +21,7 @@ use rustc_middle::mir::{\n     TerminatorKind, UnOp, RETURN_PLACE,\n };\n use rustc_middle::ty::layout::{LayoutError, LayoutOf, LayoutOfHelpers, TyAndLayout};\n-use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::InternalSubsts;\n use rustc_middle::ty::{self, ConstInt, Instance, ParamEnv, ScalarInt, Ty, TyCtxt, TypeVisitable};\n use rustc_session::lint;\n use rustc_span::Span;"}, {"sha": "ef8d6bb65590e3a9aeca608706198d76c9af2ff5", "filename": "compiler/rustc_mir_transform/src/elaborate_box_derefs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_box_derefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_box_derefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Felaborate_box_derefs.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -8,7 +8,6 @@ use rustc_index::vec::Idx;\n use rustc_middle::mir::patch::MirPatch;\n use rustc_middle::mir::visit::MutVisitor;\n use rustc_middle::mir::*;\n-use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{Ty, TyCtxt};\n \n /// Constructs the types used when accessing a Box's pointer"}, {"sha": "0568eb2ffa607e38152103f8088cd5bcaff50ea1", "filename": "compiler/rustc_mir_transform/src/function_item_references.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_transform%2Fsrc%2Ffunction_item_references.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_transform%2Fsrc%2Ffunction_item_references.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Ffunction_item_references.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -3,11 +3,7 @@ use rustc_errors::Applicability;\n use rustc_hir::def_id::DefId;\n use rustc_middle::mir::visit::Visitor;\n use rustc_middle::mir::*;\n-use rustc_middle::ty::{\n-    self,\n-    subst::{GenericArgKind, Subst, SubstsRef},\n-    EarlyBinder, PredicateKind, Ty, TyCtxt,\n-};\n+use rustc_middle::ty::{self, EarlyBinder, GenericArgKind, PredicateKind, SubstsRef, Ty, TyCtxt};\n use rustc_session::lint::builtin::FUNCTION_ITEM_REFERENCES;\n use rustc_span::{symbol::sym, Span};\n use rustc_target::spec::abi::Abi;"}, {"sha": "c833de3a8a7509c673dfc8f2cd799a6d72f14efc", "filename": "compiler/rustc_mir_transform/src/generator.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -61,9 +61,8 @@ use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::mir::dump_mir;\n use rustc_middle::mir::visit::{MutVisitor, PlaceContext, Visitor};\n use rustc_middle::mir::*;\n-use rustc_middle::ty::subst::{Subst, SubstsRef};\n-use rustc_middle::ty::GeneratorSubsts;\n use rustc_middle::ty::{self, AdtDef, Ty, TyCtxt};\n+use rustc_middle::ty::{GeneratorSubsts, SubstsRef};\n use rustc_mir_dataflow::impls::{\n     MaybeBorrowedLocals, MaybeLiveLocals, MaybeRequiresStorage, MaybeStorageLive,\n };"}, {"sha": "b60bd3cea233f57c0718f976ea248c461fb7a96c", "filename": "compiler/rustc_mir_transform/src/inline.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -7,7 +7,6 @@ use rustc_index::vec::Idx;\n use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n use rustc_middle::mir::visit::*;\n use rustc_middle::mir::*;\n-use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, Instance, InstanceDef, ParamEnv, Ty, TyCtxt};\n use rustc_session::config::OptLevel;\n use rustc_span::def_id::DefId;"}, {"sha": "6ca58ee458c564aac87da07ed367380f8c33a7ee", "filename": "compiler/rustc_mir_transform/src/shim.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -3,7 +3,7 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::lang_items::LangItem;\n use rustc_middle::mir::*;\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::InternalSubsts;\n use rustc_middle::ty::{self, EarlyBinder, GeneratorSubsts, Ty, TyCtxt};\n use rustc_target::abi::VariantIdx;\n "}, {"sha": "18e7e74741af855bc118b4fbb5304868a9c4adbe", "filename": "compiler/rustc_symbol_mangling/src/v0.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -7,10 +7,10 @@ use rustc_hir::def_id::{CrateNum, DefId};\n use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n use rustc_middle::ty::layout::IntegerExt;\n use rustc_middle::ty::print::{Print, Printer};\n-use rustc_middle::ty::subst::{GenericArg, GenericArgKind, Subst};\n use rustc_middle::ty::{\n     self, EarlyBinder, FloatTy, Instance, IntTy, Ty, TyCtxt, TypeVisitable, UintTy,\n };\n+use rustc_middle::ty::{GenericArg, GenericArgKind};\n use rustc_span::symbol::kw;\n use rustc_target::abi::Integer;\n use rustc_target::spec::abi::Abi;"}, {"sha": "94de8abce1920dd2e526d9f2453c5d3079ab2677", "filename": "compiler/rustc_trait_selection/src/traits/coherence.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -22,7 +22,6 @@ use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n use rustc_infer::traits::util;\n use rustc_middle::traits::specialization_graph::OverlapMode;\n use rustc_middle::ty::fast_reject::{DeepRejectCtxt, TreatParams};\n-use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, ImplSubject, Ty, TyCtxt, TypeVisitor};\n use rustc_span::symbol::sym;"}, {"sha": "07e470dc2ae51288a34dcfc1e9f1b6f1bda04e23", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/on_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -4,7 +4,7 @@ use super::{\n use crate::infer::InferCtxt;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n-use rustc_middle::ty::subst::{Subst, SubstsRef};\n+use rustc_middle::ty::SubstsRef;\n use rustc_middle::ty::{self, GenericParamDefKind};\n use rustc_span::symbol::sym;\n use std::iter;"}, {"sha": "104a465a3b5cc8c2571e005fec3dff510772fe5f", "filename": "compiler/rustc_trait_selection/src/traits/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -34,12 +34,11 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::lang_items::LangItem;\n use rustc_infer::traits::TraitEngineExt as _;\n use rustc_middle::ty::fold::TypeFoldable;\n-use rustc_middle::ty::subst::{InternalSubsts, SubstsRef};\n use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{\n-    self, DefIdTree, GenericParamDefKind, Subst, ToPredicate, Ty, TyCtxt, TypeSuperVisitable,\n-    VtblEntry,\n+    self, DefIdTree, GenericParamDefKind, ToPredicate, Ty, TyCtxt, TypeSuperVisitable, VtblEntry,\n };\n+use rustc_middle::ty::{InternalSubsts, SubstsRef};\n use rustc_span::{sym, Span};\n use smallvec::SmallVec;\n "}, {"sha": "a54b725753c87b1a764004eb6c47a18a30b70256", "filename": "compiler/rustc_trait_selection/src/traits/object_safety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -18,10 +18,10 @@ use rustc_errors::{FatalError, MultiSpan};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_middle::ty::abstract_const::{walk_abstract_const, AbstractConst};\n-use rustc_middle::ty::subst::{GenericArg, InternalSubsts, Subst};\n use rustc_middle::ty::{\n     self, EarlyBinder, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitor,\n };\n+use rustc_middle::ty::{GenericArg, InternalSubsts};\n use rustc_middle::ty::{Predicate, ToPredicate};\n use rustc_session::lint::builtin::WHERE_CLAUSES_OBJECT_SAFETY;\n use rustc_span::symbol::Symbol;"}, {"sha": "6f41cbeb7af2a65baed1e2659367459e2e6c4ea6", "filename": "compiler/rustc_trait_selection/src/traits/project.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -30,7 +30,6 @@ use rustc_hir::lang_items::LangItem;\n use rustc_infer::infer::resolve::OpportunisticRegionResolver;\n use rustc_middle::traits::select::OverflowError;\n use rustc_middle::ty::fold::{TypeFoldable, TypeFolder, TypeSuperFoldable};\n-use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::visit::{MaxUniverse, TypeVisitable};\n use rustc_middle::ty::DefIdTree;\n use rustc_middle::ty::{self, Term, ToPredicate, Ty, TyCtxt};"}, {"sha": "88000d469786e0310ae4fd7d4c7478051e025898", "filename": "compiler/rustc_trait_selection/src/traits/query/normalize.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -13,7 +13,6 @@ use rustc_data_structures::stack::ensure_sufficient_stack;\n use rustc_infer::traits::Normalized;\n use rustc_middle::mir;\n use rustc_middle::ty::fold::{FallibleTypeFolder, TypeFoldable, TypeSuperFoldable};\n-use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::visit::{TypeSuperVisitable, TypeVisitable};\n use rustc_middle::ty::{self, Ty, TyCtxt, TypeVisitor};\n "}, {"sha": "8b24e83ffa49755567779b2a1700cc1c6d0150e8", "filename": "compiler/rustc_trait_selection/src/traits/select/confirmation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -11,8 +11,8 @@ use rustc_hir::lang_items::LangItem;\n use rustc_index::bit_set::GrowableBitSet;\n use rustc_infer::infer::InferOk;\n use rustc_infer::infer::LateBoundRegionConversionTime::HigherRankedType;\n-use rustc_middle::ty::subst::{GenericArg, GenericArgKind, InternalSubsts, Subst, SubstsRef};\n use rustc_middle::ty::{self, GenericParamDefKind, Ty, TyCtxt};\n+use rustc_middle::ty::{GenericArg, GenericArgKind, InternalSubsts, SubstsRef};\n use rustc_middle::ty::{ToPolyTraitRef, ToPredicate};\n use rustc_span::def_id::DefId;\n "}, {"sha": "cff6b61ee336476d5e5e80a03f7aaf03051033b7", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -37,7 +37,7 @@ use rustc_middle::ty::fast_reject::{DeepRejectCtxt, TreatParams};\n use rustc_middle::ty::fold::BottomUpFolder;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::relate::TypeRelation;\n-use rustc_middle::ty::subst::{Subst, SubstsRef};\n+use rustc_middle::ty::SubstsRef;\n use rustc_middle::ty::{self, EarlyBinder, PolyProjectionPredicate, ToPolyTraitRef, ToPredicate};\n use rustc_middle::ty::{Ty, TyCtxt, TypeFoldable, TypeVisitable};\n use rustc_span::symbol::sym;"}, {"sha": "56a88749c46adf842b67cfc67a539f508df4da25", "filename": "compiler/rustc_trait_selection/src/traits/specialize/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -19,8 +19,8 @@ use crate::traits::{self, coherence, FutureCompatOverlapErrorKind, ObligationCau\n use rustc_data_structures::fx::{FxHashSet, FxIndexSet};\n use rustc_errors::{struct_span_err, EmissionGuarantee, LintDiagnosticBuilder};\n use rustc_hir::def_id::{DefId, LocalDefId};\n-use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use rustc_middle::ty::{self, ImplSubject, TyCtxt};\n+use rustc_middle::ty::{InternalSubsts, SubstsRef};\n use rustc_session::lint::builtin::COHERENCE_LEAK_CHECK;\n use rustc_session::lint::builtin::ORDER_DEPENDENT_TRAIT_OBJECTS;\n use rustc_span::{Span, DUMMY_SP};"}, {"sha": "5206e9f649bbc8ff47a8f1449b447115892ff37a", "filename": "compiler/rustc_trait_selection/src/traits/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Futil.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -5,8 +5,8 @@ use smallvec::SmallVec;\n \n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def_id::DefId;\n-use rustc_middle::ty::subst::{GenericArg, Subst, SubstsRef};\n use rustc_middle::ty::{self, ImplSubject, ToPredicate, Ty, TyCtxt, TypeVisitable};\n+use rustc_middle::ty::{GenericArg, SubstsRef};\n \n use super::{Normalized, Obligation, ObligationCause, PredicateObligation, SelectionContext};\n pub use rustc_infer::traits::{self, util::*};"}, {"sha": "0de28b826616e752c376fe96584eabbef23bb098", "filename": "compiler/rustc_traits/src/chalk/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fdb.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -7,8 +7,8 @@\n //! `crate::chalk::lowering` (to lower rustc types into Chalk types).\n \n use rustc_middle::traits::ChalkRustInterner as RustInterner;\n-use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use rustc_middle::ty::{self, AssocKind, EarlyBinder, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable};\n+use rustc_middle::ty::{InternalSubsts, SubstsRef};\n \n use rustc_ast::ast;\n use rustc_attr as attr;"}, {"sha": "7fb7c689550d4c5d0736ef5e3c6f8a26e6386710", "filename": "compiler/rustc_traits/src/dropck_outlives.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_traits%2Fsrc%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_traits%2Fsrc%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fdropck_outlives.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -4,7 +4,7 @@ use rustc_infer::infer::canonical::{Canonical, QueryResponse};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_infer::traits::TraitEngineExt as _;\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::InternalSubsts;\n use rustc_middle::ty::{self, EarlyBinder, ParamEnvAnd, Ty, TyCtxt};\n use rustc_span::source_map::{Span, DUMMY_SP};\n use rustc_trait_selection::traits::query::dropck_outlives::trivial_dropck_outlives;"}, {"sha": "ff7d1ef00ccf325d534fb056b7347f2dd9ebb7ce", "filename": "compiler/rustc_traits/src/type_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_traits%2Fsrc%2Ftype_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_traits%2Fsrc%2Ftype_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Ftype_op.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -5,10 +5,10 @@ use rustc_infer::infer::canonical::{Canonical, QueryResponse};\n use rustc_infer::infer::{DefiningAnchor, InferCtxt, TyCtxtInferExt};\n use rustc_infer::traits::{ObligationCauseCode, TraitEngineExt as _};\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::subst::{GenericArg, Subst, UserSelfTy, UserSubsts};\n use rustc_middle::ty::{\n     self, EarlyBinder, FnSig, Lift, PolyFnSig, Ty, TyCtxt, TypeFoldable, Variance,\n };\n+use rustc_middle::ty::{GenericArg, UserSelfTy, UserSubsts};\n use rustc_middle::ty::{ParamEnv, ParamEnvAnd, Predicate, ToPredicate};\n use rustc_span::{Span, DUMMY_SP};\n use rustc_trait_selection::infer::InferCtxtBuilderExt;"}, {"sha": "ba987c6f76314a4487f9437480b12d4bc2c6aaa6", "filename": "compiler/rustc_ty_utils/src/needs_drop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_ty_utils%2Fsrc%2Fneeds_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_ty_utils%2Fsrc%2Fneeds_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fneeds_drop.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -2,7 +2,6 @@\n \n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def_id::DefId;\n-use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::util::{needs_drop_components, AlwaysRequiresDrop};\n use rustc_middle::ty::{self, EarlyBinder, Ty, TyCtxt};"}, {"sha": "f7db39dfec3b8f42df2d048c0f4da3baa741e6dd", "filename": "compiler/rustc_ty_utils/src/ty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -1,7 +1,6 @@\n use rustc_data_structures::fx::FxIndexSet;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n-use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, Binder, Predicate, PredicateKind, ToPredicate, Ty, TyCtxt};\n use rustc_trait_selection::traits;\n "}, {"sha": "5432fdbb5e8e35c7e269f5cacf48ff1c9e9c7711", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -26,7 +26,7 @@ use rustc_hir::intravisit::{walk_generics, Visitor as _};\n use rustc_hir::lang_items::LangItem;\n use rustc_hir::{GenericArg, GenericArgs, OpaqueTyOrigin};\n use rustc_middle::middle::stability::AllowUnstable;\n-use rustc_middle::ty::subst::{self, GenericArgKind, InternalSubsts, Subst, SubstsRef};\n+use rustc_middle::ty::subst::{self, GenericArgKind, InternalSubsts, SubstsRef};\n use rustc_middle::ty::DynKind;\n use rustc_middle::ty::GenericParamDefKind;\n use rustc_middle::ty::{"}, {"sha": "27329f8eab42edb68bb6f9a82444ced6295f4ef2", "filename": "compiler/rustc_typeck/src/check/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -4,7 +4,7 @@ use rustc_errors::{Applicability, MultiSpan};\n use rustc_hir::{self as hir, ExprKind};\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::traits::Obligation;\n-use rustc_middle::ty::{self, Subst, ToPredicate, Ty};\n+use rustc_middle::ty::{self, ToPredicate, Ty};\n use rustc_span::Span;\n use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;\n use rustc_trait_selection::traits::{"}, {"sha": "c82a31e65cf1557f98b294f84dcfe8be8c743607", "filename": "compiler/rustc_typeck/src/check/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -17,7 +17,7 @@ use rustc_infer::{\n use rustc_middle::ty::adjustment::{\n     Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability,\n };\n-use rustc_middle::ty::subst::{Subst, SubstsRef};\n+use rustc_middle::ty::SubstsRef;\n use rustc_middle::ty::{self, Ty, TyCtxt, TypeVisitable};\n use rustc_span::def_id::LocalDefId;\n use rustc_span::symbol::{sym, Ident};"}, {"sha": "a13d73c471b5cd405deedfce33496228fc6e0b8a", "filename": "compiler/rustc_typeck/src/check/closure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -3,7 +3,6 @@\n use super::{check_fn, Expectation, FnCtxt, GeneratorTypes};\n \n use crate::astconv::AstConv;\n-use crate::rustc_middle::ty::subst::Subst;\n use hir::def::DefKind;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;"}, {"sha": "7c0b815e42a49de0a91bc890893173b6c63ea735", "filename": "compiler/rustc_typeck/src/check/compare_method.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -12,8 +12,8 @@ use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKi\n use rustc_infer::infer::{self, TyCtxtInferExt};\n use rustc_infer::traits::util;\n use rustc_middle::ty::error::{ExpectedFound, TypeError};\n-use rustc_middle::ty::subst::{InternalSubsts, Subst};\n use rustc_middle::ty::util::ExplicitSelf;\n+use rustc_middle::ty::InternalSubsts;\n use rustc_middle::ty::{\n     self, AssocItem, DefIdTree, Ty, TypeFoldable, TypeFolder, TypeSuperFoldable, TypeVisitable,\n };"}, {"sha": "70b9c732ff4bfc3901e4ce4e645de556aeb630cb", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -20,14 +20,12 @@ use rustc_infer::infer::error_reporting::TypeAnnotationNeeded::E0282;\n use rustc_infer::infer::{InferOk, InferResult};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow, AutoBorrowMutability};\n use rustc_middle::ty::fold::TypeFoldable;\n-use rustc_middle::ty::subst::{\n-    self, GenericArgKind, InternalSubsts, Subst, SubstsRef, UserSelfTy, UserSubsts,\n-};\n use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{\n     self, AdtKind, CanonicalUserType, DefIdTree, EarlyBinder, GenericParamDefKind, ToPolyTraitRef,\n     ToPredicate, Ty, UserType,\n };\n+use rustc_middle::ty::{GenericArgKind, InternalSubsts, SubstsRef, UserSelfTy, UserSubsts};\n use rustc_session::lint;\n use rustc_span::def_id::LocalDefId;\n use rustc_span::hygiene::DesugaringKind;\n@@ -559,7 +557,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// Registers an obligation for checking later, during regionck, that `arg` is well-formed.\n     pub fn register_wf_obligation(\n         &self,\n-        arg: subst::GenericArg<'tcx>,\n+        arg: ty::GenericArg<'tcx>,\n         span: Span,\n         code: traits::ObligationCauseCode<'tcx>,\n     ) {\n@@ -1271,7 +1269,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 &mut self,\n                 param: &ty::GenericParamDef,\n                 arg: &GenericArg<'_>,\n-            ) -> subst::GenericArg<'tcx> {\n+            ) -> ty::GenericArg<'tcx> {\n                 match (&param.kind, arg) {\n                     (GenericParamDefKind::Lifetime, GenericArg::Lifetime(lt)) => {\n                         <dyn AstConv<'_>>::ast_region_to_region(self.fcx, lt, Some(param)).into()\n@@ -1295,10 +1293,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n             fn inferred_kind(\n                 &mut self,\n-                substs: Option<&[subst::GenericArg<'tcx>]>,\n+                substs: Option<&[ty::GenericArg<'tcx>]>,\n                 param: &ty::GenericParamDef,\n                 infer_args: bool,\n-            ) -> subst::GenericArg<'tcx> {\n+            ) -> ty::GenericArg<'tcx> {\n                 let tcx = self.fcx.tcx();\n                 match param.kind {\n                     GenericParamDefKind::Lifetime => {"}, {"sha": "c32d13090311631d4d3d9ae09c4ea6f73596c9cb", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -14,7 +14,7 @@ use rustc_hir::{\n use rustc_infer::infer::{self, TyCtxtInferExt};\n use rustc_infer::traits::{self, StatementAsExpression};\n use rustc_middle::lint::in_external_macro;\n-use rustc_middle::ty::{self, Binder, IsSuggestable, Subst, ToPredicate, Ty};\n+use rustc_middle::ty::{self, Binder, IsSuggestable, ToPredicate, Ty};\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use rustc_trait_selection::infer::InferCtxtExt;"}, {"sha": "ae484b4fedaf96b7418f83c1d8d7a193a06ae0f4", "filename": "compiler/rustc_typeck/src/check/intrinsic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsic.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -10,7 +10,6 @@ use crate::require_same_types;\n use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_middle::traits::{ObligationCause, ObligationCauseCode};\n-use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_target::spec::abi::Abi;"}, {"sha": "30731cbd03d3bf8209c31acfd48f450c2434f787", "filename": "compiler/rustc_typeck/src/check/method/confirm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fconfirm.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -10,7 +10,7 @@ use rustc_middle::traits::{ObligationCauseCode, UnifyReceiverContext};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, PointerCast};\n use rustc_middle::ty::adjustment::{AllowTwoPhase, AutoBorrow, AutoBorrowMutability};\n use rustc_middle::ty::fold::TypeFoldable;\n-use rustc_middle::ty::subst::{self, Subst, SubstsRef};\n+use rustc_middle::ty::subst::{self, SubstsRef};\n use rustc_middle::ty::{self, GenericParamDefKind, Ty};\n use rustc_span::Span;\n use rustc_trait_selection::traits;"}, {"sha": "3fe9bea2299dfd3184ab0254f958685934d99138", "filename": "compiler/rustc_typeck/src/check/method/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -18,7 +18,6 @@ use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind, Namespace};\n use rustc_hir::def_id::DefId;\n use rustc_infer::infer::{self, InferOk};\n-use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::subst::{InternalSubsts, SubstsRef};\n use rustc_middle::ty::{self, DefIdTree, GenericParamDefKind, ToPredicate, Ty, TypeVisitable};\n use rustc_span::symbol::Ident;"}, {"sha": "6cd7ced01a3bfd66a3fed3efb0732d2cfc46d9c1", "filename": "compiler/rustc_typeck/src/check/method/probe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -19,9 +19,9 @@ use rustc_infer::infer::{self, InferOk, TyCtxtInferExt};\n use rustc_middle::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n use rustc_middle::middle::stability;\n use rustc_middle::ty::fast_reject::{simplify_type, TreatParams};\n-use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use rustc_middle::ty::GenericParamDefKind;\n use rustc_middle::ty::{self, ParamEnvAnd, ToPredicate, Ty, TyCtxt, TypeFoldable, TypeVisitable};\n+use rustc_middle::ty::{InternalSubsts, SubstsRef};\n use rustc_session::lint;\n use rustc_span::def_id::LocalDefId;\n use rustc_span::lev_distance::{"}, {"sha": "618b01fc55f8a1506d6921f235b5acbf7450afe2", "filename": "compiler/rustc_typeck/src/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -112,8 +112,8 @@ use rustc_hir::{HirIdMap, ImplicitSelfKind, Node};\n use rustc_index::bit_set::BitSet;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use rustc_middle::ty::{self, Ty, TyCtxt, UserType};\n+use rustc_middle::ty::{InternalSubsts, SubstsRef};\n use rustc_session::config;\n use rustc_session::parse::feature_err;\n use rustc_session::Session;"}, {"sha": "fd5df0d9fa1ed31e1e52014953e1e89aea8d63b1", "filename": "compiler/rustc_typeck/src/check/wfcheck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -12,12 +12,12 @@ use rustc_infer::infer::outlives::obligations::TypeOutlives;\n use rustc_infer::infer::{self, InferCtxt, TyCtxtInferExt};\n use rustc_middle::mir::ConstraintCategory;\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::subst::{GenericArgKind, InternalSubsts, Subst};\n use rustc_middle::ty::trait_def::TraitSpecializationKind;\n use rustc_middle::ty::{\n     self, AdtKind, DefIdTree, GenericParamDefKind, ToPredicate, Ty, TyCtxt, TypeFoldable,\n     TypeSuperVisitable, TypeVisitable, TypeVisitor,\n };\n+use rustc_middle::ty::{GenericArgKind, InternalSubsts};\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::{sym, Ident, Symbol};\n use rustc_span::{Span, DUMMY_SP};"}, {"sha": "064a70107fe83ab42742c8b964160be18400e1df", "filename": "compiler/rustc_typeck/src/outlives/implicit_infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Fimplicit_infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Fimplicit_infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Foutlives%2Fimplicit_infer.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -1,8 +1,8 @@\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::DefId;\n-use rustc_middle::ty::subst::{GenericArg, GenericArgKind, Subst};\n use rustc_middle::ty::{self, DefIdTree, Ty, TyCtxt};\n+use rustc_middle::ty::{GenericArg, GenericArgKind};\n use rustc_span::Span;\n \n use super::explicit::ExplicitPredicatesMap;"}, {"sha": "fd169f64885c29d78194ada28e41277810a2570b", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -2,7 +2,6 @@ use crate::rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtE\n use rustc_hir as hir;\n use rustc_infer::infer::{InferOk, TyCtxtInferExt};\n use rustc_infer::traits;\n-use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::ToPredicate;\n use rustc_span::DUMMY_SP;\n "}, {"sha": "375737e9bc4ea5b6087d09051b1a1ffde9d714ab", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -20,7 +20,7 @@ use rustc_hir::PredicateOrigin;\n use rustc_infer::infer::region_constraints::{Constraint, RegionConstraintData};\n use rustc_middle::middle::resolve_lifetime as rl;\n use rustc_middle::ty::fold::TypeFolder;\n-use rustc_middle::ty::subst::{InternalSubsts, Subst};\n+use rustc_middle::ty::InternalSubsts;\n use rustc_middle::ty::{self, AdtKind, DefIdTree, EarlyBinder, Lift, Ty, TyCtxt};\n use rustc_middle::{bug, span_bug};\n use rustc_span::hygiene::{AstPass, MacroKind};"}, {"sha": "45b5d79d4452247bd335409c67a52e13eb84d1ee", "filename": "src/tools/clippy/clippy_lints/src/dereference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdereference.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -20,7 +20,7 @@ use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow, AutoBorrowMutability};\n use rustc_middle::ty::{\n-    self, subst::Subst, Binder, BoundVariableKind, EarlyBinder, FnSig, GenericArgKind, List, ParamTy, PredicateKind,\n+    self, Binder, BoundVariableKind, EarlyBinder, FnSig, GenericArgKind, List, ParamTy, PredicateKind,\n     ProjectionPredicate, Ty, TyCtxt, TypeVisitable, TypeckResults,\n };\n use rustc_semver::RustcVersion;"}, {"sha": "598f8c31859ed7f2e40af9ac942ec032a5f28cdd", "filename": "src/tools/clippy/clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Feta_reduction.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -11,7 +11,6 @@ use rustc_hir::{Closure, Expr, ExprKind, Param, PatKind, Unsafety};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow};\n use rustc_middle::ty::binding::BindingMode;\n-use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, ClosureKind, Ty, TypeVisitable};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::sym;"}, {"sha": "eb2eefe0d5a16b89ae29ad1d1ecbf85f0ba9dcd1", "filename": "src/tools/clippy/clippy_lints/src/future_not_send.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ffuture_not_send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ffuture_not_send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ffuture_not_send.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -4,7 +4,6 @@ use rustc_hir::intravisit::FnKind;\n use rustc_hir::{Body, FnDecl, HirId};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{EarlyBinder, Opaque, PredicateKind::Trait};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::{sym, Span};"}, {"sha": "8d3cede70f70d3073fe42c07531315715f72c4a3", "filename": "src/tools/clippy/clippy_lints/src/methods/unnecessary_to_owned.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -1,6 +1,5 @@\n use super::implicit_clone::is_clone_like;\n use super::unnecessary_iter_cloned::{self, is_into_iter};\n-use crate::rustc_middle::ty::Subst;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::{get_associated_type, get_iterator_item_ty, implements_trait, is_copy, peel_mid_ty_refs};"}, {"sha": "084c0d471dded5689a2bddfbcac4a5c523f7cecf", "filename": "src/tools/clippy/clippy_lints/src/mut_reference.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmut_reference.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -1,7 +1,6 @@\n use clippy_utils::diagnostics::span_lint;\n use rustc_hir::{BorrowKind, Expr, ExprKind, Mutability};\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::iter;"}, {"sha": "ae55a6bf5586ef1476184dde68a43cd692d87fe1", "filename": "src/tools/clippy/clippy_lints/src/transmute/transmute_undefined_repr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Ftransmute_undefined_repr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Ftransmute_undefined_repr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Ftransmute_undefined_repr.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -3,7 +3,7 @@ use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::ty::is_c_void;\n use rustc_hir::Expr;\n use rustc_lint::LateContext;\n-use rustc_middle::ty::subst::{Subst, SubstsRef};\n+use rustc_middle::ty::SubstsRef;\n use rustc_middle::ty::{self, IntTy, Ty, TypeAndMut, UintTy};\n use rustc_span::DUMMY_SP;\n "}, {"sha": "96c55111fbaffbf7cb417ae9931ff01949db5888", "filename": "src/tools/clippy/clippy_utils/src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fconsts.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -9,7 +9,7 @@ use rustc_hir::{BinOp, BinOpKind, Block, Expr, ExprKind, HirId, Item, ItemKind,\n use rustc_lint::LateContext;\n use rustc_middle::mir;\n use rustc_middle::mir::interpret::Scalar;\n-use rustc_middle::ty::subst::{Subst, SubstsRef};\n+use rustc_middle::ty::SubstsRef;\n use rustc_middle::ty::{self, EarlyBinder, FloatTy, ScalarInt, Ty, TyCtxt};\n use rustc_middle::{bug, span_bug};\n use rustc_span::symbol::Symbol;"}, {"sha": "926ecf965932159813c541aae58b92844649cf99", "filename": "src/tools/clippy/clippy_utils/src/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fty.rs?ref=11bb80a92b4f46fa7dfa9148d0bdfc185a7621bd", "patch": "@@ -12,7 +12,7 @@ use rustc_hir::{Expr, FnDecl, LangItem, TyKind, Unsafety};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::LateContext;\n use rustc_middle::mir::interpret::{ConstValue, Scalar};\n-use rustc_middle::ty::subst::{GenericArg, GenericArgKind, Subst};\n+use rustc_middle::ty::{GenericArg, GenericArgKind};\n use rustc_middle::ty::{\n     self, AdtDef, Binder, BoundRegion, DefIdTree, FnSig, IntTy, ParamEnv, Predicate, PredicateKind, ProjectionTy,\n     Region, RegionKind, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitor, UintTy, VariantDef, VariantDiscr,"}]}