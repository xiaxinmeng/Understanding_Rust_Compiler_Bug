{"sha": "37e2f4f48743b3d89cd016e50c1d29c9ace1dd06", "node_id": "C_kwDOAAsO6NoAKDM3ZTJmNGY0ODc0M2IzZDg5Y2QwMTZlNTBjMWQyOWM5YWNlMWRkMDY", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-02-16T14:03:31Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-02-20T15:28:59Z"}, "message": "Make `configure_and_expand` \"infalllible\" by just aborting the compilation if it fails instead of bubbling out an error", "tree": {"sha": "c5e7b6a4d442449ac405cc04a713e4ba5530f47f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5e7b6a4d442449ac405cc04a713e4ba5530f47f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06", "html_url": "https://github.com/rust-lang/rust/commit/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63c8d000904fcb09cae22fba1768b955e354ebb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/63c8d000904fcb09cae22fba1768b955e354ebb8", "html_url": "https://github.com/rust-lang/rust/commit/63c8d000904fcb09cae22fba1768b955e354ebb8"}], "stats": {"total": 70, "additions": 33, "deletions": 37}, "files": [{"sha": "5c1e676c51d15b8df561d7f31d69f8c1c9e70a93", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=37e2f4f48743b3d89cd016e50c1d29c9ace1dd06", "patch": "@@ -9,7 +9,7 @@ use rustc_borrowck as mir_borrowck;\n use rustc_codegen_ssa::traits::CodegenBackend;\n use rustc_data_structures::parallel;\n use rustc_data_structures::sync::{Lrc, OnceCell, WorkerLocal};\n-use rustc_errors::{ErrorGuaranteed, PResult};\n+use rustc_errors::PResult;\n use rustc_expand::base::{ExtCtxt, LintStoreExpand, ResolverExpand};\n use rustc_hir::def_id::{StableCrateId, LOCAL_CRATE};\n use rustc_lint::{unerased_lint_store, BufferedEarlyLint, EarlyCheckNode, LintStore};\n@@ -176,7 +176,7 @@ pub fn configure_and_expand(\n     tcx: TyCtxt<'_>,\n     mut krate: ast::Crate,\n     resolver: &mut Resolver<'_, '_>,\n-) -> Result<ast::Crate> {\n+) -> ast::Crate {\n     let sess = tcx.sess;\n     let lint_store = unerased_lint_store(tcx);\n     let crate_name = tcx.crate_name(LOCAL_CRATE);\n@@ -250,20 +250,19 @@ pub fn configure_and_expand(\n             ecx.check_unused_macros();\n         });\n \n-        let recursion_limit_hit = ecx.reduced_recursion_limit.is_some();\n+        // If we hit a recursion limit, exit early to avoid later passes getting overwhelmed\n+        // with a large AST\n+        if ecx.reduced_recursion_limit.is_some() {\n+            sess.abort_if_errors();\n+            unreachable!();\n+        }\n \n         if cfg!(windows) {\n             env::set_var(\"PATH\", &old_path);\n         }\n \n-        if recursion_limit_hit {\n-            // If we hit a recursion limit, exit early to avoid later passes getting overwhelmed\n-            // with a large AST\n-            Err(ErrorGuaranteed::unchecked_claim_error_was_emitted())\n-        } else {\n-            Ok(krate)\n-        }\n-    })?;\n+        krate\n+    });\n \n     sess.time(\"maybe_building_test_harness\", || {\n         rustc_builtin_macros::test_harness::inject(sess, resolver, &mut krate)\n@@ -366,7 +365,7 @@ pub fn configure_and_expand(\n         )\n     });\n \n-    Ok(krate)\n+    krate\n }\n \n // Returns all the paths that correspond to generated files."}, {"sha": "b3c4e5a09d5b2e4eae331a1840c4aced79e4512e", "filename": "compiler/rustc_interface/src/queries.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs?ref=37e2f4f48743b3d89cd016e50c1d29c9ace1dd06", "patch": "@@ -227,7 +227,7 @@ impl<'tcx> Queries<'tcx> {\n                         self.codegen_backend().metadata_loader(),\n                         &arenas,\n                     );\n-                    let krate = passes::configure_and_expand(tcx, krate, &mut resolver)?;\n+                    let krate = passes::configure_and_expand(tcx, krate, &mut resolver);\n \n                     // Make sure we don't mutate the cstore from here on.\n                     tcx.untracked().cstore.leak();\n@@ -245,8 +245,7 @@ impl<'tcx> Queries<'tcx> {\n                 );\n                 feed.resolutions(tcx.arena.alloc(untracked_resolutions));\n                 feed.features_query(tcx.sess.features_untracked());\n-                Ok(())\n-            })?;\n+            });\n             Ok(qcx)\n         })\n     }"}, {"sha": "580f70c974290ef84a59864358e8aac0f5d6dd1b", "filename": "tests/rustdoc-ui/bounded-hr-lifetime.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Fbounded-hr-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Fbounded-hr-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fbounded-hr-lifetime.stderr?ref=37e2f4f48743b3d89cd016e50c1d29c9ace1dd06", "patch": "@@ -4,7 +4,5 @@ error: lifetime bounds cannot be used in this context\n LL |     for<'a: 'b + 'c> &'a (): std::fmt::Debug,\n    |             ^^   ^^\n \n-error: Compilation failed, aborting rustdoc\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n "}, {"sha": "0864159c8e222b53fa1f9881f5a9982e34d44430", "filename": "tests/rustdoc-ui/feature-gate-doc_cfg_hide.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Ffeature-gate-doc_cfg_hide.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Ffeature-gate-doc_cfg_hide.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Ffeature-gate-doc_cfg_hide.stderr?ref=37e2f4f48743b3d89cd016e50c1d29c9ace1dd06", "patch": "@@ -7,8 +7,6 @@ LL | #![doc(cfg_hide(test))]\n    = note: see issue #43781 <https://github.com/rust-lang/rust/issues/43781> for more information\n    = help: add `#![feature(doc_cfg_hide)]` to the crate attributes to enable\n \n-error: Compilation failed, aborting rustdoc\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "c34ea0567a9d4f1430271e4da9199c7d562ee0eb", "filename": "tests/rustdoc-ui/feature-gate-rustdoc_missing_doc_code_examples.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Ffeature-gate-rustdoc_missing_doc_code_examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Ffeature-gate-rustdoc_missing_doc_code_examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Ffeature-gate-rustdoc_missing_doc_code_examples.rs?ref=37e2f4f48743b3d89cd016e50c1d29c9ace1dd06", "patch": "@@ -1,10 +1,12 @@\n #![deny(unknown_lints)]\n //~^ NOTE defined here\n-\n #![allow(rustdoc::missing_doc_code_examples)]\n //~^ ERROR unknown lint\n //~| ERROR unknown lint\n+//~| ERROR unknown lint\n+//~| NOTE lint is unstable\n //~| NOTE lint is unstable\n //~| NOTE lint is unstable\n //~| NOTE see issue\n //~| NOTE see issue\n+//~| NOTE see issue"}, {"sha": "326dcfe3bdef0d89e390bcdef6c8b286cbd7c08d", "filename": "tests/rustdoc-ui/feature-gate-rustdoc_missing_doc_code_examples.stderr", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Ffeature-gate-rustdoc_missing_doc_code_examples.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Ffeature-gate-rustdoc_missing_doc_code_examples.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Ffeature-gate-rustdoc_missing_doc_code_examples.stderr?ref=37e2f4f48743b3d89cd016e50c1d29c9ace1dd06", "patch": "@@ -1,5 +1,5 @@\n error: unknown lint: `rustdoc::missing_doc_code_examples`\n-  --> $DIR/feature-gate-rustdoc_missing_doc_code_examples.rs:4:1\n+  --> $DIR/feature-gate-rustdoc_missing_doc_code_examples.rs:3:1\n    |\n LL | #![allow(rustdoc::missing_doc_code_examples)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -14,7 +14,7 @@ LL | #![deny(unknown_lints)]\n    |         ^^^^^^^^^^^^^\n \n error: unknown lint: `rustdoc::missing_doc_code_examples`\n-  --> $DIR/feature-gate-rustdoc_missing_doc_code_examples.rs:4:1\n+  --> $DIR/feature-gate-rustdoc_missing_doc_code_examples.rs:3:1\n    |\n LL | #![allow(rustdoc::missing_doc_code_examples)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -23,7 +23,15 @@ LL | #![allow(rustdoc::missing_doc_code_examples)]\n    = note: see issue #101730 <https://github.com/rust-lang/rust/issues/101730> for more information\n    = help: add `#![feature(rustdoc_missing_doc_code_examples)]` to the crate attributes to enable\n \n-error: Compilation failed, aborting rustdoc\n+error: unknown lint: `rustdoc::missing_doc_code_examples`\n+  --> $DIR/feature-gate-rustdoc_missing_doc_code_examples.rs:3:1\n+   |\n+LL | #![allow(rustdoc::missing_doc_code_examples)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the `rustdoc::missing_doc_code_examples` lint is unstable\n+   = note: see issue #101730 <https://github.com/rust-lang/rust/issues/101730> for more information\n+   = help: add `#![feature(rustdoc_missing_doc_code_examples)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "75e6b4ed217ddb44eb7a44447754656fa8f28940", "filename": "tests/rustdoc-ui/impl-fn-nesting.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Fimpl-fn-nesting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Fimpl-fn-nesting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fimpl-fn-nesting.stderr?ref=37e2f4f48743b3d89cd016e50c1d29c9ace1dd06", "patch": "@@ -58,9 +58,7 @@ error[E0412]: cannot find type `UnknownType` in this scope\n LL |             pub fn doubly_nested(c: UnknownType) {\n    |                                     ^^^^^^^^^^^ not found in this scope\n \n-error: Compilation failed, aborting rustdoc\n-\n-error: aborting due to 11 previous errors\n+error: aborting due to 10 previous errors\n \n Some errors have detailed explanations: E0405, E0412.\n For more information about an error, try `rustc --explain E0405`."}, {"sha": "14f560618521d73afc0b6bd179994fb33a57cc88", "filename": "tests/rustdoc-ui/intra-doc/unresolved-import-recovery.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Fintra-doc%2Funresolved-import-recovery.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Fintra-doc%2Funresolved-import-recovery.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Funresolved-import-recovery.stderr?ref=37e2f4f48743b3d89cd016e50c1d29c9ace1dd06", "patch": "@@ -6,8 +6,6 @@ LL | use unresolved_crate::module::Name;\n    |\n    = help: consider adding `extern crate unresolved_crate` to use the `unresolved_crate` crate\n \n-error: Compilation failed, aborting rustdoc\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0433`."}, {"sha": "d16ec6a853a5ca68da33ca341c170f9f3868c6b2", "filename": "tests/rustdoc-ui/issue-61732.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Fissue-61732.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Fissue-61732.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissue-61732.stderr?ref=37e2f4f48743b3d89cd016e50c1d29c9ace1dd06", "patch": "@@ -6,8 +6,6 @@ LL | pub(in crate::r#mod) fn main() {}\n    |\n    = help: consider adding `extern crate r#mod` to use the `r#mod` crate\n \n-error: Compilation failed, aborting rustdoc\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0433`."}, {"sha": "bf529b9f8e26327b6add65ba5a79f8d550afade4", "filename": "tests/rustdoc-ui/unknown-renamed-lints.stderr", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Funknown-renamed-lints.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37e2f4f48743b3d89cd016e50c1d29c9ace1dd06/tests%2Frustdoc-ui%2Funknown-renamed-lints.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Funknown-renamed-lints.stderr?ref=37e2f4f48743b3d89cd016e50c1d29c9ace1dd06", "patch": "@@ -58,7 +58,5 @@ error: unknown lint: `rustdoc::intra_doc_link_resolution_failure`\n LL | #![deny(rustdoc::intra_doc_link_resolution_failure)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: Compilation failed, aborting rustdoc\n-\n-error: aborting due to 9 previous errors\n+error: aborting due to 8 previous errors\n "}]}