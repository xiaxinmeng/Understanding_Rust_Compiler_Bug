{"sha": "ab42f96cff0aa4264d72d8bc76b810b2a0046653", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNDJmOTZjZmYwYWE0MjY0ZDcyZDhiYzc2YjgxMGIyYTAwNDY2NTM=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-03-10T18:27:04Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-03-10T18:27:04Z"}, "message": "Remove unnecessary `#[allow(dead_code)]`", "tree": {"sha": "34afb3759310924a88074a3c89af0ebf1ce0c415", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34afb3759310924a88074a3c89af0ebf1ce0c415"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab42f96cff0aa4264d72d8bc76b810b2a0046653", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab42f96cff0aa4264d72d8bc76b810b2a0046653", "html_url": "https://github.com/rust-lang/rust/commit/ab42f96cff0aa4264d72d8bc76b810b2a0046653", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab42f96cff0aa4264d72d8bc76b810b2a0046653/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d31f70c87c4e6451eaf69009fcf62c4435bf4174", "url": "https://api.github.com/repos/rust-lang/rust/commits/d31f70c87c4e6451eaf69009fcf62c4435bf4174", "html_url": "https://github.com/rust-lang/rust/commit/d31f70c87c4e6451eaf69009fcf62c4435bf4174"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "498000db50f436a854a9c6e86de2180272aebea5", "filename": "compiler/rustc_hir/src/lang_items.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ab42f96cff0aa4264d72d8bc76b810b2a0046653/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab42f96cff0aa4264d72d8bc76b810b2a0046653/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs?ref=ab42f96cff0aa4264d72d8bc76b810b2a0046653", "patch": "@@ -119,7 +119,6 @@ macro_rules! language_item_table {\n \n             $(\n                 #[doc = concat!(\"Returns the [`DefId`] of the `\", stringify!($name), \"` lang item if it is defined.\")]\n-                #[allow(dead_code)]\n                 pub fn $method(&self) -> Option<DefId> {\n                     self.items[LangItem::$variant as usize]\n                 }"}]}