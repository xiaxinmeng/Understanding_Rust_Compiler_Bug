{"sha": "7c287915654d0b3f1cc4b060b41db32a83b000c5", "node_id": "C_kwDOAAsO6NoAKDdjMjg3OTE1NjU0ZDBiM2YxY2M0YjA2MGI0MWRiMzJhODNiMDAwYzU", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-11T12:26:52Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-11T12:26:52Z"}, "message": "Add doc comments to futex operations.", "tree": {"sha": "62e949a73c4b2059369949c83e49163621130799", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62e949a73c4b2059369949c83e49163621130799"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c287915654d0b3f1cc4b060b41db32a83b000c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c287915654d0b3f1cc4b060b41db32a83b000c5", "html_url": "https://github.com/rust-lang/rust/commit/7c287915654d0b3f1cc4b060b41db32a83b000c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c287915654d0b3f1cc4b060b41db32a83b000c5/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "307aa588f42b65cbce27f0e366197e27ef531c77", "url": "https://api.github.com/repos/rust-lang/rust/commits/307aa588f42b65cbce27f0e366197e27ef531c77", "html_url": "https://github.com/rust-lang/rust/commit/307aa588f42b65cbce27f0e366197e27ef531c77"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "b45d1c0149cb462cc4c8f867f1a6d282f52a5cfc", "filename": "library/std/src/sys/unix/futex.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7c287915654d0b3f1cc4b060b41db32a83b000c5/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c287915654d0b3f1cc4b060b41db32a83b000c5/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs?ref=7c287915654d0b3f1cc4b060b41db32a83b000c5", "patch": "@@ -7,6 +7,11 @@\n use crate::sync::atomic::AtomicI32;\n use crate::time::Duration;\n \n+/// Wait for a futex_wake operation to wake us.\n+///\n+/// Returns directly if the futex doesn't hold the expected value.\n+///\n+/// Returns false on timeout, and true in all other cases.\n #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n pub fn futex_wait(futex: &AtomicI32, expected: i32, timeout: Option<Duration>) -> bool {\n     use super::time::Timespec;\n@@ -68,6 +73,10 @@ pub fn futex_wait(futex: &AtomicI32, expected: i32, timeout: Option<Duration>) {\n     }\n }\n \n+/// Wake up one thread that's blocked on futex_wait on this futex.\n+///\n+/// Returns true if this actually woke up such a thread,\n+/// or false if no thread was waiting on this futex.\n #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n pub fn futex_wake(futex: &AtomicI32) -> bool {\n     unsafe {\n@@ -80,6 +89,7 @@ pub fn futex_wake(futex: &AtomicI32) -> bool {\n     }\n }\n \n+/// Wake up all threads that are waiting on futex_wait on this futex.\n #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n pub fn futex_wake_all(futex: &AtomicI32) {\n     unsafe {"}]}