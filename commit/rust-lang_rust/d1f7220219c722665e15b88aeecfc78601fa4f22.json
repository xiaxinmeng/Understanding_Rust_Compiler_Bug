{"sha": "d1f7220219c722665e15b88aeecfc78601fa4f22", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxZjcyMjAyMTljNzIyNjY1ZTE1Yjg4YWVlY2ZjNzg2MDFmYTRmMjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-02T07:15:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-02T07:15:46Z"}, "message": "auto merge of #6111 : pnkfelix/rust/issue4391-rustc-should-not-silently-skip-erroneous-tests, r=pnkfelix\n\n...e.\r\n\r\nFixes #4391.", "tree": {"sha": "baef8c898d0012ecfd8d5a1dd4252eea57a1485b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/baef8c898d0012ecfd8d5a1dd4252eea57a1485b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1f7220219c722665e15b88aeecfc78601fa4f22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1f7220219c722665e15b88aeecfc78601fa4f22", "html_url": "https://github.com/rust-lang/rust/commit/d1f7220219c722665e15b88aeecfc78601fa4f22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1f7220219c722665e15b88aeecfc78601fa4f22/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5458d7dddda38f063220a19191373faecf11065f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5458d7dddda38f063220a19191373faecf11065f", "html_url": "https://github.com/rust-lang/rust/commit/5458d7dddda38f063220a19191373faecf11065f"}, {"sha": "9862cf703b8a867b13e674f892f7059b09fe59e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9862cf703b8a867b13e674f892f7059b09fe59e0", "html_url": "https://github.com/rust-lang/rust/commit/9862cf703b8a867b13e674f892f7059b09fe59e0"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "9b82a8dad059ed389c6ae208d27768eee3d8d2a9", "filename": "src/libcore/hashmap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1f7220219c722665e15b88aeecfc78601fa4f22/src%2Flibcore%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f7220219c722665e15b88aeecfc78601fa4f22/src%2Flibcore%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhashmap.rs?ref=d1f7220219c722665e15b88aeecfc78601fa4f22", "patch": "@@ -833,7 +833,7 @@ pub impl <T:Hash + Eq> HashSet<T> {\n     }\n }\n \n-#[test]\n+#[cfg(test)]\n mod test_map {\n     use container::{Container, Map, Set};\n     use option::{None, Some};\n@@ -1009,7 +1009,7 @@ mod test_map {\n     }\n }\n \n-#[test]\n+#[cfg(test)]\n mod test_set {\n     use super::*;\n     use container::{Container, Map, Set};"}, {"sha": "29b8400706ce0ca8ef0fa4262f515c42769400cd", "filename": "src/libcore/repr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1f7220219c722665e15b88aeecfc78601fa4f22/src%2Flibcore%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f7220219c722665e15b88aeecfc78601fa4f22/src%2Flibcore%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frepr.rs?ref=d1f7220219c722665e15b88aeecfc78601fa4f22", "patch": "@@ -673,7 +673,7 @@ pub fn write_repr<T>(writer: @Writer, object: &T) {\n     }\n }\n \n-#[test]\n+#[cfg(test)]\n struct P {a: int, b: float}\n \n #[test]"}, {"sha": "0e97c101dc651c701ddbcd2d3a816965cdfdd4d3", "filename": "src/libcore/task/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1f7220219c722665e15b88aeecfc78601fa4f22/src%2Flibcore%2Ftask%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f7220219c722665e15b88aeecfc78601fa4f22/src%2Flibcore%2Ftask%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask%2Fmod.rs?ref=d1f7220219c722665e15b88aeecfc78601fa4f22", "patch": "@@ -797,7 +797,7 @@ fn test_run_basic() {\n     po.recv();\n }\n \n-#[test]\n+#[cfg(test)]\n struct Wrapper {\n     mut f: Option<Chan<()>>\n }"}, {"sha": "ddd702e7d697d670243082b4ec4d1918ae8bebfd", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d1f7220219c722665e15b88aeecfc78601fa4f22/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f7220219c722665e15b88aeecfc78601fa4f22/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=d1f7220219c722665e15b88aeecfc78601fa4f22", "patch": "@@ -141,7 +141,7 @@ fn fold_item(cx: @mut TestCtxt, i: @ast::item, fld: @fold::ast_fold)\n     debug!(\"current path: %s\",\n            ast_util::path_name_i(copy cx.path, cx.sess.parse_sess.interner));\n \n-    if is_test_fn(i) || is_bench_fn(i) {\n+    if is_test_fn(cx, i) || is_bench_fn(i) {\n         match i.node {\n           ast::item_fn(_, purity, _, _, _) if purity == ast::unsafe_fn => {\n             let sess = cx.sess;\n@@ -169,7 +169,7 @@ fn fold_item(cx: @mut TestCtxt, i: @ast::item, fld: @fold::ast_fold)\n     return res;\n }\n \n-fn is_test_fn(i: @ast::item) -> bool {\n+fn is_test_fn(cx: @mut TestCtxt, i: @ast::item) -> bool {\n     let has_test_attr = !attr::find_attrs_by_name(i.attrs,\n                                                   ~\"test\").is_empty();\n \n@@ -188,6 +188,13 @@ fn is_test_fn(i: @ast::item) -> bool {\n         }\n     }\n \n+    if has_test_attr && !has_test_signature(i) {\n+        let sess = cx.sess;\n+        sess.span_err(\n+            i.span,\n+            ~\"functions used as tests must have signature fn() -> ().\"\n+        );\n+    }\n     return has_test_attr && has_test_signature(i);\n }\n "}, {"sha": "ea3793c13748358caabd93b41649447029430553", "filename": "src/libstd/cmp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1f7220219c722665e15b88aeecfc78601fa4f22/src%2Flibstd%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f7220219c722665e15b88aeecfc78601fa4f22/src%2Flibstd%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcmp.rs?ref=d1f7220219c722665e15b88aeecfc78601fa4f22", "patch": "@@ -64,7 +64,7 @@ fn test_fuzzy_eq_eps() {\n     assert!(!(&1.5f).fuzzy_eq_eps(&0.9, &0.5));\n }\n \n-#[test]\n+#[cfg(test)]\n mod test_complex{\n     use cmp::*;\n "}, {"sha": "8a310a9f52b5e7dbd6116865ff5686b74ae310aa", "filename": "src/libstd/deque.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1f7220219c722665e15b88aeecfc78601fa4f22/src%2Flibstd%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f7220219c722665e15b88aeecfc78601fa4f22/src%2Flibstd%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fdeque.rs?ref=d1f7220219c722665e15b88aeecfc78601fa4f22", "patch": "@@ -353,7 +353,7 @@ mod tests {\n         assert!(*deq.get(3) == d);\n     }\n \n-    #[test]\n+    #[cfg(test)]\n     fn test_parameterized<T:Copy + Eq + Durable>(a: T, b: T, c: T, d: T) {\n         let mut deq = Deque::new();\n         assert!(deq.len() == 0);"}, {"sha": "4f1d41a4a7a171ed9c09759d8776ca3461a62389", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1f7220219c722665e15b88aeecfc78601fa4f22/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f7220219c722665e15b88aeecfc78601fa4f22/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=d1f7220219c722665e15b88aeecfc78601fa4f22", "patch": "@@ -418,7 +418,7 @@ mod test {\n         new_parser_from_source_str(ps,~[],~\"bogofile\",source_str)\n     }\n \n-    #[test] fn to_json_str<E : Encodable<std::json::Encoder>>(val: @E) -> ~str {\n+    #[cfg(test)] fn to_json_str<E : Encodable<std::json::Encoder>>(val: @E) -> ~str {\n         do io::with_str_writer |writer| {\n             val.encode(~std::json::Encoder(writer));\n         }"}]}