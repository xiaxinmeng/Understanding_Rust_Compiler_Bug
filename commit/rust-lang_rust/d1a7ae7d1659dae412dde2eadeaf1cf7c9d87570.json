{"sha": "d1a7ae7d1659dae412dde2eadeaf1cf7c9d87570", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxYTdhZTdkMTY1OWRhZTQxMmRkZTJlYWRlYWYxY2Y3YzlkODc1NzA=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-16T08:12:03Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-16T13:53:28Z"}, "message": "Allow whitespaces in revision flags", "tree": {"sha": "62aeaaae807a365b256834dd4d5ee76d28462d49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62aeaaae807a365b256834dd4d5ee76d28462d49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1a7ae7d1659dae412dde2eadeaf1cf7c9d87570", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1a7ae7d1659dae412dde2eadeaf1cf7c9d87570", "html_url": "https://github.com/rust-lang/rust/commit/d1a7ae7d1659dae412dde2eadeaf1cf7c9d87570", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1a7ae7d1659dae412dde2eadeaf1cf7c9d87570/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a0d1cbd4674a6b2a58832513ecb2e97538f2c4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a0d1cbd4674a6b2a58832513ecb2e97538f2c4a", "html_url": "https://github.com/rust-lang/rust/commit/2a0d1cbd4674a6b2a58832513ecb2e97538f2c4a"}], "stats": {"total": 11, "additions": 2, "deletions": 9}, "files": [{"sha": "2a24a8c3c9485c60b7f74e90ea3bf32887178d11", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d1a7ae7d1659dae412dde2eadeaf1cf7c9d87570/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a7ae7d1659dae412dde2eadeaf1cf7c9d87570/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=d1a7ae7d1659dae412dde2eadeaf1cf7c9d87570", "patch": "@@ -631,10 +631,6 @@ fn iter_header<R: Read>(testfile: &Path, cfg: Option<&str>, rdr: R, it: &mut dyn\n \n     let comment = if testfile.to_string_lossy().ends_with(\".rs\") { \"//\" } else { \"#\" };\n \n-    // FIXME: would be nice to allow some whitespace between comment and brace :)\n-    // It took me like 2 days to debug why compile-flags weren\u2019t taken into account for my test :)\n-    let comment_with_brace = comment.to_string() + \"[\";\n-\n     let mut rdr = BufReader::new(rdr);\n     let mut ln = String::new();\n \n@@ -650,7 +646,7 @@ fn iter_header<R: Read>(testfile: &Path, cfg: Option<&str>, rdr: R, it: &mut dyn\n         let ln = ln.trim();\n         if ln.starts_with(\"fn\") || ln.starts_with(\"mod\") {\n             return;\n-        } else if ln.starts_with(&comment_with_brace) {\n+        } else if ln.starts_with(comment) && ln[comment.len()..].trim_start().starts_with('[') {\n             // A comment like `//[foo]` is specific to revision `foo`\n             if let Some(close_brace) = ln.find(']') {\n                 let open_brace = ln.find('[').unwrap();\n@@ -663,10 +659,7 @@ fn iter_header<R: Read>(testfile: &Path, cfg: Option<&str>, rdr: R, it: &mut dyn\n                     it(ln[(close_brace + 1)..].trim_start());\n                 }\n             } else {\n-                panic!(\n-                    \"malformed condition directive: expected `{}foo]`, found `{}`\",\n-                    comment_with_brace, ln\n-                )\n+                panic!(\"malformed condition directive: expected `{}[foo]`, found `{}`\", comment, ln)\n             }\n         } else if ln.starts_with(comment) {\n             it(ln[comment.len()..].trim_start());"}]}