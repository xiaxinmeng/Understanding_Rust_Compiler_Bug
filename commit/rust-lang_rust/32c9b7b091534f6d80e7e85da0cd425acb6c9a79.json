{"sha": "32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYzliN2IwOTE1MzRmNmQ4MGU3ZTg1ZGEwY2Q0MjVhY2I2YzlhNzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-21T19:50:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-21T19:50:10Z"}, "message": "Auto merge of #87351 - ehuss:rollup-pga85az, r=ehuss\n\nRollup of 5 pull requests\n\nSuccessful merges:\n\n - #81864 (docs: GlobalAlloc: completely replace example with one that works)\n - #87024 (rustdoc: show count of item contents when hidden)\n - #87278 (:arrow_up: rust-analyzer)\n - #87326 (Update cargo)\n - #87346 (Rename force-warns to force-warn)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "bb1f1d4339aa9d223e1c4053d8c773f00069bc07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb1f1d4339aa9d223e1c4053d8c773f00069bc07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "html_url": "https://github.com/rust-lang/rust/commit/32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05f2326c0570fdd64f53532a089bbbc361d190e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/05f2326c0570fdd64f53532a089bbbc361d190e6", "html_url": "https://github.com/rust-lang/rust/commit/05f2326c0570fdd64f53532a089bbbc361d190e6"}, {"sha": "43e25751ff6f20941bef019bdb10bce32af8f178", "url": "https://api.github.com/repos/rust-lang/rust/commits/43e25751ff6f20941bef019bdb10bce32af8f178", "html_url": "https://github.com/rust-lang/rust/commit/43e25751ff6f20941bef019bdb10bce32af8f178"}], "stats": {"total": 248, "additions": 173, "deletions": 75}, "files": [{"sha": "f448acd24fc551a3e64c0a7fd16f8902ad272f62", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -370,7 +370,7 @@ impl LintStore {\n                 match level {\n                     Level::Allow => \"-A\",\n                     Level::Warn => \"-W\",\n-                    Level::ForceWarn => \"--force-warns\",\n+                    Level::ForceWarn => \"--force-warn\",\n                     Level::Deny => \"-D\",\n                     Level::Forbid => \"-F\",\n                 },"}, {"sha": "4190e769976e9bfe374b996959d5295279dddd00", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -64,7 +64,7 @@ impl Level {\n         match self {\n             Level::Allow => \"allow\",\n             Level::Warn => \"warn\",\n-            Level::ForceWarn => \"force-warns\",\n+            Level::ForceWarn => \"force-warn\",\n             Level::Deny => \"deny\",\n             Level::Forbid => \"forbid\",\n         }"}, {"sha": "6ad68877235dc7d6453c65be964d44e5b278f05a", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -288,7 +288,7 @@ pub fn struct_lint_level<'s, 'd>(\n                     Level::Deny => \"-D\",\n                     Level::Forbid => \"-F\",\n                     Level::Allow => \"-A\",\n-                    Level::ForceWarn => \"--force-warns\",\n+                    Level::ForceWarn => \"--force-warn\",\n                 };\n                 let hyphen_case_lint_name = name.replace(\"_\", \"-\");\n                 if lint_flag_val.as_str() == name {"}, {"sha": "2d7f5f9b321d1d0c99501a6b9260ac98eb47ee1b", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1101,7 +1101,7 @@ pub fn rustc_short_optgroups() -> Vec<RustcOptGroup> {\n         ),\n         opt::multi_s(\n             \"\",\n-            \"force-warns\",\n+            \"force-warn\",\n             \"Specifiy lints that should warn even if \\\n              they are allowed somewhere else\",\n             \"LINT\",\n@@ -1175,11 +1175,11 @@ pub fn get_cmd_lint_options(\n     let mut lint_opts_with_position = vec![];\n     let mut describe_lints = false;\n \n-    if !debugging_opts.unstable_options && matches.opt_present(\"force-warns\") {\n+    if !debugging_opts.unstable_options && matches.opt_present(\"force-warn\") {\n         early_error(\n             error_format,\n             \"the `-Z unstable-options` flag must also be passed to enable \\\n-            the flag `--force-warns=lints`\",\n+            the flag `--force-warn=lints`\",\n         );\n     }\n "}, {"sha": "0a098c8e2d98633d158e50f175ee7fda400e6cc7", "filename": "library/core/src/alloc/global.rs", "status": "modified", "additions": 56, "deletions": 11, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/library%2Fcore%2Fsrc%2Falloc%2Fglobal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/library%2Fcore%2Fsrc%2Falloc%2Fglobal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Falloc%2Fglobal.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -20,24 +20,69 @@ use crate::ptr;\n ///\n /// # Example\n ///\n-/// ```no_run\n-/// use std::alloc::{GlobalAlloc, Layout, alloc};\n+/// ```\n+/// use std::alloc::{GlobalAlloc, Layout};\n+/// use std::cell::UnsafeCell;\n /// use std::ptr::null_mut;\n+/// use std::sync::atomic::{\n+///     AtomicUsize,\n+///     Ordering::{Acquire, SeqCst},\n+/// };\n ///\n-/// struct MyAllocator;\n-///\n-/// unsafe impl GlobalAlloc for MyAllocator {\n-///     unsafe fn alloc(&self, _layout: Layout) -> *mut u8 { null_mut() }\n-///     unsafe fn dealloc(&self, _ptr: *mut u8, _layout: Layout) {}\n+/// const ARENA_SIZE: usize = 128 * 1024;\n+/// const MAX_SUPPORTED_ALIGN: usize = 4096;\n+/// #[repr(C, align(4096))] // 4096 == MAX_SUPPORTED_ALIGN\n+/// struct SimpleAllocator {\n+///     arena: UnsafeCell<[u8; ARENA_SIZE]>,\n+///     remaining: AtomicUsize, // we allocate from the top, counting down\n /// }\n ///\n /// #[global_allocator]\n-/// static A: MyAllocator = MyAllocator;\n+/// static ALLOCATOR: SimpleAllocator = SimpleAllocator {\n+///     arena: UnsafeCell::new([0x55; ARENA_SIZE]),\n+///     remaining: AtomicUsize::new(ARENA_SIZE),\n+/// };\n ///\n-/// fn main() {\n-///     unsafe {\n-///         assert!(alloc(Layout::new::<u32>()).is_null())\n+/// unsafe impl Sync for SimpleAllocator {}\n+///\n+/// unsafe impl GlobalAlloc for SimpleAllocator {\n+///     unsafe fn alloc(&self, layout: Layout) -> *mut u8 {\n+///         let size = layout.size();\n+///         let align = layout.align();\n+///\n+///         // `Layout` contract forbids making a `Layout` with align=0, or align not power of 2.\n+///         // So we can safely use a mask to ensure alignment without worrying about UB.\n+///         let align_mask_to_round_down = !(align - 1);\n+///\n+///         if align > MAX_SUPPORTED_ALIGN {\n+///             return null_mut();\n+///         }\n+///\n+///         let mut allocated = 0;\n+///         if self\n+///             .remaining\n+///             .fetch_update(SeqCst, SeqCst, |mut remaining| {\n+///                 if size > remaining {\n+///                     return None;\n+///                 }\n+///                 remaining -= size;\n+///                 remaining &= align_mask_to_round_down;\n+///                 allocated = remaining;\n+///                 Some(remaining)\n+///             })\n+///             .is_err()\n+///         {\n+///             return null_mut();\n+///         };\n+///         (self.arena.get() as *mut u8).add(allocated)\n ///     }\n+///     unsafe fn dealloc(&self, _ptr: *mut u8, _layout: Layout) {}\n+/// }\n+///\n+/// fn main() {\n+///     let _s = format!(\"allocating a string!\");\n+///     let currently = ALLOCATOR.remaining.load(Acquire);\n+///     println!(\"allocated so far: {}\", ARENA_SIZE - currently);\n /// }\n /// ```\n ///"}, {"sha": "052de0f379e7fbc222b6e5fa63f93e3b6becd275", "filename": "src/doc/unstable-book/src/compiler-flags/force-warn.md", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fforce-warn.md", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fforce-warn.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fforce-warn.md?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,10 +1,10 @@\n-# `force-warns`\n+# `force-warn`\n \n The tracking issue for this feature is: [#85512](https://github.com/rust-lang/rust/issues/85512).\n \n ------------------------\n \n-This feature allows you to cause any lint to produce a warning even if the lint has a different level by default or another level is set somewhere else. For instance, the `force-warns` option can be used to make a lint (e.g., `dead_code`) produce a warning even if that lint is allowed in code with `#![allow(dead_code)]`.\n+This feature allows you to cause any lint to produce a warning even if the lint has a different level by default or another level is set somewhere else. For instance, the `force-warn` option can be used to make a lint (e.g., `dead_code`) produce a warning even if that lint is allowed in code with `#![allow(dead_code)]`.\n \n ## Example\n \n@@ -18,4 +18,4 @@ fn dead_function() {}\n fn main() {}\n ```\n \n-We can force a warning to be produced by providing `--force-warns dead_code` to rustc.\n+We can force a warning to be produced by providing `--force-warn dead_code` to rustc.", "previous_filename": "src/doc/unstable-book/src/compiler-flags/force-warns.md"}, {"sha": "552958d5e402b8b61c78de2a8cd8ca9035a9a9c1", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 34, "deletions": 12, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,6 +1,7 @@\n use clean::AttributesExt;\n \n use std::cmp::Ordering;\n+use std::fmt;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n@@ -155,7 +156,7 @@ fn should_hide_fields(n_fields: usize) -> bool {\n     n_fields > 12\n }\n \n-fn toggle_open(w: &mut Buffer, text: &str) {\n+fn toggle_open(w: &mut Buffer, text: impl fmt::Display) {\n     write!(\n         w,\n         \"<details class=\\\"rustdoc-toggle type-contents-toggle\\\">\\\n@@ -481,6 +482,9 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n     let consts = t.items.iter().filter(|m| m.is_associated_const()).collect::<Vec<_>>();\n     let required = t.items.iter().filter(|m| m.is_ty_method()).collect::<Vec<_>>();\n     let provided = t.items.iter().filter(|m| m.is_method()).collect::<Vec<_>>();\n+    let count_types = types.len();\n+    let count_consts = consts.len();\n+    let count_methods = required.len() + provided.len();\n \n     // Output the trait definition\n     wrap_into_docblock(w, |w| {\n@@ -511,9 +515,12 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n             let mut toggle = false;\n \n             // If there are too many associated types, hide _everything_\n-            if should_hide_fields(types.len()) {\n+            if should_hide_fields(count_types) {\n                 toggle = true;\n-                toggle_open(w, \"associated items\");\n+                toggle_open(\n+                    w,\n+                    format_args!(\"{} associated items\", count_types + count_consts + count_methods),\n+                );\n             }\n             for t in &types {\n                 render_assoc_item(w, t, AssocItemLink::Anchor(None), ItemType::Trait, cx);\n@@ -523,9 +530,18 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n             // We also do this if the types + consts is large because otherwise we could\n             // render a bunch of types and _then_ a bunch of consts just because both were\n             // _just_ under the limit\n-            if !toggle && should_hide_fields(types.len() + consts.len()) {\n+            if !toggle && should_hide_fields(count_types + count_consts) {\n                 toggle = true;\n-                toggle_open(w, \"associated constants and methods\");\n+                toggle_open(\n+                    w,\n+                    format_args!(\n+                        \"{} associated constant{} and {} method{}\",\n+                        count_consts,\n+                        pluralize(count_consts),\n+                        count_methods,\n+                        pluralize(count_methods),\n+                    ),\n+                );\n             }\n             if !types.is_empty() && !consts.is_empty() {\n                 w.write_str(\"\\n\");\n@@ -534,9 +550,9 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n                 render_assoc_item(w, t, AssocItemLink::Anchor(None), ItemType::Trait, cx);\n                 w.write_str(\";\\n\");\n             }\n-            if !toggle && should_hide_fields(required.len() + provided.len()) {\n+            if !toggle && should_hide_fields(count_methods) {\n                 toggle = true;\n-                toggle_open(w, \"methods\");\n+                toggle_open(w, format_args!(\"{} methods\", count_methods));\n             }\n             if !consts.is_empty() && !required.is_empty() {\n                 w.write_str(\"\\n\");\n@@ -933,9 +949,10 @@ fn item_enum(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, e: &clean::Enum\n             w.write_str(\" {}\");\n         } else {\n             w.write_str(\" {\\n\");\n-            let toggle = should_hide_fields(e.variants.len());\n+            let count_variants = e.variants.len();\n+            let toggle = should_hide_fields(count_variants);\n             if toggle {\n-                toggle_open(w, \"variants\");\n+                toggle_open(w, format_args!(\"{} variants\", count_variants));\n             }\n             for v in &e.variants {\n                 w.write_str(\"    \");\n@@ -1012,7 +1029,8 @@ fn item_enum(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, e: &clean::Enum\n \n             use crate::clean::Variant;\n             if let clean::VariantItem(Variant::Struct(ref s)) = *variant.kind {\n-                toggle_open(w, \"fields\");\n+                let count_fields = s.fields.len();\n+                toggle_open(w, format_args!(\"{} field{}\", count_fields, pluralize(count_fields)));\n                 let variant_id = cx.derive_id(format!(\n                     \"{}.{}.fields\",\n                     ItemType::Variant,\n@@ -1385,7 +1403,7 @@ fn render_union(\n         fields.iter().filter(|f| matches!(*f.kind, clean::StructFieldItem(..))).count();\n     let toggle = should_hide_fields(count_fields);\n     if toggle {\n-        toggle_open(w, \"fields\");\n+        toggle_open(w, format_args!(\"{} fields\", count_fields));\n     }\n \n     for field in fields {\n@@ -1441,7 +1459,7 @@ fn render_struct(\n             let has_visible_fields = count_fields > 0;\n             let toggle = should_hide_fields(count_fields);\n             if toggle {\n-                toggle_open(w, \"fields\");\n+                toggle_open(w, format_args!(\"{} fields\", count_fields));\n             }\n             for field in fields {\n                 if let clean::StructFieldItem(ref ty) = *field.kind {\n@@ -1618,3 +1636,7 @@ fn document_type_layout(w: &mut Buffer, cx: &Context<'_>, ty_def_id: DefId) {\n \n     writeln!(w, \"</div>\");\n }\n+\n+fn pluralize(count: usize) -> &'static str {\n+    if count > 1 { \"s\" } else { \"\" }\n+}"}, {"sha": "fa755777584f3cdacb58abe4cc4aa6722ce4d7e9", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -511,10 +511,10 @@ fn opts() -> Vec<RustcOptGroup> {\n                 \"LEVEL\",\n             )\n         }),\n-        unstable(\"force-warns\", |o| {\n+        unstable(\"force-warn\", |o| {\n             o.optopt(\n                 \"\",\n-                \"force-warns\",\n+                \"force-warn\",\n                 \"Lints that will warn even if allowed somewhere else\",\n                 \"LINTS\",\n             )"}, {"sha": "a9aad54162f110749cd45699c399452f27e61ed9", "filename": "src/test/run-make/unstable-flag-required/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Frun-make%2Funstable-flag-required%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Frun-make%2Funstable-flag-required%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Funstable-flag-required%2FMakefile?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -2,4 +2,4 @@\n \n all:\n \t$(RUSTDOC) --output-format=json x.html 2>&1 | diff - output-format-json.stderr\n-\t$(RUSTC) --force-warns dead_code x.rs 2>&1 | diff - force-warns.stderr\n+\t$(RUSTC) --force-warn dead_code x.rs 2>&1 | diff - force-warn.stderr"}, {"sha": "1b70dc83bdb158e0782b1ecfd2419676e382d685", "filename": "src/test/run-make/unstable-flag-required/force-warn.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Frun-make%2Funstable-flag-required%2Fforce-warn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Frun-make%2Funstable-flag-required%2Fforce-warn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Funstable-flag-required%2Fforce-warn.stderr?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,2 +1,2 @@\n-error: the `-Z unstable-options` flag must also be passed to enable the flag `--force-warns=lints`\n+error: the `-Z unstable-options` flag must also be passed to enable the flag `--force-warn=lints`\n ", "previous_filename": "src/test/run-make/unstable-flag-required/force-warns.stderr"}, {"sha": "167858b6065f9b3f2b587016966f26ce2c8c6400", "filename": "src/test/rustdoc/toggle-item-contents.rs", "status": "modified", "additions": 38, "deletions": 7, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Frustdoc%2Ftoggle-item-contents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Frustdoc%2Ftoggle-item-contents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftoggle-item-contents.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -9,7 +9,7 @@ pub struct PubStruct {\n \n // @has 'toggle_item_contents/struct.BigPubStruct.html'\n // @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n-// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show fields'\n+// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 13 fields'\n pub struct BigPubStruct {\n     pub a: usize,\n     pub b: usize,\n@@ -28,7 +28,7 @@ pub struct BigPubStruct {\n \n // @has 'toggle_item_contents/union.BigUnion.html'\n // @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n-// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show fields'\n+// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 13 fields'\n pub union BigUnion {\n     pub a: usize,\n     pub b: usize,\n@@ -63,7 +63,7 @@ pub struct PrivStruct {\n \n // @has 'toggle_item_contents/enum.Enum.html'\n // @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n-// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show fields'\n+// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 2 fields'\n pub enum Enum {\n     A, B, C,\n     D {\n@@ -72,9 +72,19 @@ pub enum Enum {\n     }\n }\n \n+// @has 'toggle_item_contents/enum.EnumStructVariant.html'\n+// @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n+// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 1 field'\n+pub enum EnumStructVariant {\n+    A, B, C,\n+    D {\n+        a: u8,\n+    }\n+}\n+\n // @has 'toggle_item_contents/enum.LargeEnum.html'\n // @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n-// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show variants'\n+// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 13 variants'\n pub enum LargeEnum {\n     A, B, C, D, E, F(u8), G, H, I, J, K, L, M\n }\n@@ -90,7 +100,7 @@ pub trait Trait {\n \n // @has 'toggle_item_contents/trait.GinormousTrait.html'\n // @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n-// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show associated items'\n+// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 16 associated items'\n pub trait GinormousTrait {\n     type A;\n     type B;\n@@ -113,7 +123,7 @@ pub trait GinormousTrait {\n \n // @has 'toggle_item_contents/trait.HugeTrait.html'\n // @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n-// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show associated constants and methods'\n+// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 12 associated constants and 2 methods'\n pub trait HugeTrait {\n     type A;\n     const M: usize = 1;\n@@ -133,9 +143,30 @@ pub trait HugeTrait {\n     fn bar();\n }\n \n+// @has 'toggle_item_contents/trait.GiganticTrait.html'\n+// @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n+// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 1 associated constant and 1 method'\n+pub trait GiganticTrait {\n+    type A;\n+    type B;\n+    type C;\n+    type D;\n+    type E;\n+    type F;\n+    type G;\n+    type H;\n+    type I;\n+    type J;\n+    type K;\n+    type L;\n+    const M: usize = 1;\n+    #[must_use]\n+    fn foo();\n+}\n+\n // @has 'toggle_item_contents/trait.BigTrait.html'\n // @count - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 1\n-// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show methods'\n+// @has - '//details[@class=\"rustdoc-toggle type-contents-toggle\"]' 'Show 14 methods'\n pub trait BigTrait {\n     type A;\n     #[must_use]"}, {"sha": "74e7823e1ffc13d2c63eff53b3bceee3dc03b12d", "filename": "src/test/ui/lint/cli-lint-override.force_warn_deny.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fcli-lint-override.force_warn_deny.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fcli-lint-override.force_warn_deny.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcli-lint-override.force_warn_deny.stderr?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -4,7 +4,7 @@ warning: extern declarations without an explicit ABI are deprecated\n LL | extern fn foo() {}\n    | ^^^^^^^^^^^^^^^ ABI should be specified here\n    |\n-   = note: requested on the command line with `--force-warns missing-abi`\n+   = note: requested on the command line with `--force-warn missing-abi`\n    = help: the default ABI is C\n \n warning: 1 warning emitted"}, {"sha": "a0a96d01be3f59389e6d1c0fd824206367060a4e", "filename": "src/test/ui/lint/cli-lint-override.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fcli-lint-override.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fcli-lint-override.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcli-lint-override.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -5,7 +5,7 @@\n //\n //[warn_deny] compile-flags: --warn missing_abi --deny missing_abi\n //[forbid_warn] compile-flags: --warn missing_abi --forbid missing_abi\n-//[force_warn_deny] compile-flags: -Z unstable-options --force-warns missing_abi --allow missing_abi\n+//[force_warn_deny] compile-flags: -Z unstable-options --force-warn missing_abi --allow missing_abi\n //[force_warn_deny] check-pass\n \n "}, {"sha": "55544cc73781a6dd86700b8dccfd2bc71cae4d9a", "filename": "src/test/ui/lint/cli-unknown-force-warn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fcli-unknown-force-warn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fcli-unknown-force-warn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcli-unknown-force-warn.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,7 +1,7 @@\n // Checks that rustc correctly errors when passed an invalid lint with\n-// `--force-warns`. This is a regression test for issue #86958.\n+// `--force-warn`. This is a regression test for issue #86958.\n //\n-// compile-flags: -Z unstable-options --force-warns foo-qux\n+// compile-flags: -Z unstable-options --force-warn foo-qux\n // error-pattern: unknown lint: `foo_qux`\n \n fn main() {}"}, {"sha": "4367c3b4500d5fe1f471d745436f822ec08bc6e8", "filename": "src/test/ui/lint/cli-unknown-force-warn.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fcli-unknown-force-warn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fcli-unknown-force-warn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcli-unknown-force-warn.stderr?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,14 +1,14 @@\n error[E0602]: unknown lint: `foo_qux`\n    |\n-   = note: requested on the command line with `--force-warns foo_qux`\n+   = note: requested on the command line with `--force-warn foo_qux`\n \n error[E0602]: unknown lint: `foo_qux`\n    |\n-   = note: requested on the command line with `--force-warns foo_qux`\n+   = note: requested on the command line with `--force-warn foo_qux`\n \n error[E0602]: unknown lint: `foo_qux`\n    |\n-   = note: requested on the command line with `--force-warns foo_qux`\n+   = note: requested on the command line with `--force-warn foo_qux`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "4799429ea2c69317f6e084e84fd4ccea37578160", "filename": "src/test/ui/lint/force-warn/force-allowed-by-default-lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns elided_lifetimes_in_paths -Zunstable-options\n+// compile-flags: --force-warn elided_lifetimes_in_paths -Zunstable-options\n // check-pass\n \n struct Foo<'a> {"}, {"sha": "05513de81d1c85c521b2c14027bd6ac37c150c6e", "filename": "src/test/ui/lint/force-warn/force-allowed-by-default-lint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.stderr?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -4,7 +4,7 @@ warning: hidden lifetime parameters in types are deprecated\n LL | fn foo(x: &Foo) {}\n    |            ^^^- help: indicate the anonymous lifetime: `<'_>`\n    |\n-   = note: requested on the command line with `--force-warns elided-lifetimes-in-paths`\n+   = note: requested on the command line with `--force-warn elided-lifetimes-in-paths`\n \n warning: 1 warning emitted\n "}, {"sha": "d066feba86984c99395a78b7460a7cf032d77637", "filename": "src/test/ui/lint/force-warn/force-allowed-deny-by-default-lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-deny-by-default-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-deny-by-default-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-deny-by-default-lint.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns const_err -Zunstable-options\n+// compile-flags: --force-warn const_err -Zunstable-options\n // check-pass\n \n #![allow(const_err)]"}, {"sha": "dd4f88a3b533ee90579ab13a6527e9e7e291bf1b", "filename": "src/test/ui/lint/force-warn/force-allowed-deny-by-default-lint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-deny-by-default-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-deny-by-default-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-deny-by-default-lint.stderr?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -6,7 +6,7 @@ LL | const C: i32 = 1 / 0;\n    |                |\n    |                attempt to divide `1_i32` by zero\n    |\n-   = note: requested on the command line with `--force-warns const-err`\n+   = note: requested on the command line with `--force-warn const-err`\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n "}, {"sha": "280de5064720ae7deb70d6aa5fbbcb0ada2121e7", "filename": "src/test/ui/lint/force-warn/force-allowed-warning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-warning.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns dead_code -Zunstable-options\n+// compile-flags: --force-warn dead_code -Zunstable-options\n // check-pass\n \n #![allow(dead_code)]"}, {"sha": "fced147254e82483f9b8bd4e45986a6299eebb3b", "filename": "src/test/ui/lint/force-warn/force-allowed-warning.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-warning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-warning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-warning.stderr?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -4,7 +4,7 @@ warning: function is never used: `dead_function`\n LL | fn dead_function() {}\n    |    ^^^^^^^^^^^^^\n    |\n-   = note: requested on the command line with `--force-warns dead-code`\n+   = note: requested on the command line with `--force-warn dead-code`\n \n warning: 1 warning emitted\n "}, {"sha": "8331df02da7637de159e97e103736641747aa0c5", "filename": "src/test/ui/lint/force-warn/force-deny-by-default-lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-deny-by-default-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-deny-by-default-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-deny-by-default-lint.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns const_err -Zunstable-options\n+// compile-flags: --force-warn const_err -Zunstable-options\n // check-pass\n \n const C: i32 = 1 / 0;"}, {"sha": "68cd3a392f5830c6db2bdf4426ff38811c62d9dd", "filename": "src/test/ui/lint/force-warn/force-deny-by-default-lint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-deny-by-default-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-deny-by-default-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-deny-by-default-lint.stderr?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -6,7 +6,7 @@ LL | const C: i32 = 1 / 0;\n    |                |\n    |                attempt to divide `1_i32` by zero\n    |\n-   = note: requested on the command line with `--force-warns const-err`\n+   = note: requested on the command line with `--force-warn const-err`\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n "}, {"sha": "0e8a65a41173d050e599a47acbd8dfbc69aa5597", "filename": "src/test/ui/lint/force-warn/force-lint-allow-all-warnings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns dead_code -Zunstable-options\n+// compile-flags: --force-warn dead_code -Zunstable-options\n // check-pass\n \n #![allow(warnings)]"}, {"sha": "3305f2c02834d7571ef7024e20d65a47b2dada84", "filename": "src/test/ui/lint/force-warn/force-lint-allow-all-warnings.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.stderr?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -4,7 +4,7 @@ warning: function is never used: `dead_function`\n LL | fn dead_function() {}\n    |    ^^^^^^^^^^^^^\n    |\n-   = note: requested on the command line with `--force-warns dead-code`\n+   = note: requested on the command line with `--force-warn dead-code`\n \n warning: 1 warning emitted\n "}, {"sha": "aaca59a2a2aabba9700515c49dad81d9d10dc33d", "filename": "src/test/ui/lint/force-warn/force-lint-group-allow-all-warnings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns nonstandard_style -Zunstable-options\n+// compile-flags: --force-warn nonstandard_style -Zunstable-options\n // check-pass\n \n #![allow(warnings)]"}, {"sha": "065a8f6a556a0d9613c857af8b9abb897a2fa2d4", "filename": "src/test/ui/lint/force-warn/force-lint-group-allow-all-warnings.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.stderr?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -4,7 +4,7 @@ warning: function `FUNCTION` should have a snake case name\n LL | pub fn FUNCTION() {}\n    |        ^^^^^^^^ help: convert the identifier to snake case: `function`\n    |\n-   = note: `--force-warns non-snake-case` implied by `--force-warns nonstandard-style`\n+   = note: `--force-warn non-snake-case` implied by `--force-warn nonstandard-style`\n \n warning: 1 warning emitted\n "}, {"sha": "d8447bd23824440ca3140732cf9f0b9f338af1f3", "filename": "src/test/ui/lint/force-warn/force-lint-in-allowed-group.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns bare_trait_objects -Zunstable-options\n+// compile-flags: --force-warn bare_trait_objects -Zunstable-options\n // check-pass\n \n #![allow(rust_2018_idioms)]"}, {"sha": "185c0e8e3d0eba88105739eb1e0821a59ba31dd5", "filename": "src/test/ui/lint/force-warn/force-lint-in-allowed-group.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.stderr?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -4,7 +4,7 @@ warning: trait objects without an explicit `dyn` are deprecated\n LL | pub fn function(_x: Box<SomeTrait>) {}\n    |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n    |\n-   = note: requested on the command line with `--force-warns bare-trait-objects`\n+   = note: requested on the command line with `--force-warn bare-trait-objects`\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see issue #80165 <https://github.com/rust-lang/rust/issues/80165>\n "}, {"sha": "e10d161e7c62b3d78ed9693bb18600210b361c91", "filename": "src/test/ui/lint/force-warn/force-warn-cap-lints-allow.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-allow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-allow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-allow.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --cap-lints allow  --force-warns bare_trait_objects -Zunstable-options\n+// compile-flags: --cap-lints allow  --force-warn bare_trait_objects -Zunstable-options\n // check-pass\n \n pub trait SomeTrait {}", "previous_filename": "src/test/ui/lint/force-warn/force-warns-cap-lints-allow.rs"}, {"sha": "a89970587751d3ed94d8c82f8d80911942ec7839", "filename": "src/test/ui/lint/force-warn/force-warn-cap-lints-allow.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-allow.stderr?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,10 +1,10 @@\n warning: trait objects without an explicit `dyn` are deprecated\n-  --> $DIR/force-warns-cap-lints-allow.rs:6:25\n+  --> $DIR/force-warn-cap-lints-allow.rs:6:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n    |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n    |\n-   = note: requested on the command line with `--force-warns bare-trait-objects`\n+   = note: requested on the command line with `--force-warn bare-trait-objects`\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see issue #80165 <https://github.com/rust-lang/rust/issues/80165>\n ", "previous_filename": "src/test/ui/lint/force-warn/force-warns-cap-lints-allow.stderr"}, {"sha": "4afc0868608d389ef1fee5cbc761da280c3babb5", "filename": "src/test/ui/lint/force-warn/force-warn-cap-lints-warn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-warn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-warn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-warn.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --cap-lints warn  --force-warns rust-2021-compatibility -Zunstable-options\n+// compile-flags: --cap-lints warn  --force-warn rust-2021-compatibility -Zunstable-options\n // check-pass\n #![allow(ellipsis_inclusive_range_patterns)]\n "}, {"sha": "1d5f88086c5c410c97bb0a6d79bcae15e42e27cc", "filename": "src/test/ui/lint/force-warn/force-warn-cap-lints-warn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-warn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-warn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-cap-lints-warn.stderr?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -4,7 +4,7 @@ warning: `...` range patterns are deprecated\n LL |         0...100 => true,\n    |          ^^^ help: use `..=` for an inclusive range\n    |\n-   = note: `--force-warns ellipsis-inclusive-range-patterns` implied by `--force-warns rust-2021-compatibility`\n+   = note: `--force-warn ellipsis-inclusive-range-patterns` implied by `--force-warn rust-2021-compatibility`\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see issue #80165 <https://github.com/rust-lang/rust/issues/80165>\n "}, {"sha": "193ba2b6f0da52bbeb597cb0d4443a5c383b0dd6", "filename": "src/test/ui/lint/force-warn/force-warn-group-allow-warning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns rust-2018-idioms -Zunstable-options\n+// compile-flags: --force-warn rust-2018-idioms -Zunstable-options\n // check-pass\n \n #![allow(bare_trait_objects)]"}, {"sha": "d242ef266b8d1a2e2f36ceeef1dd0225927086fe", "filename": "src/test/ui/lint/force-warn/force-warn-group-allow-warning.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.stderr?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -4,7 +4,7 @@ warning: trait objects without an explicit `dyn` are deprecated\n LL | pub fn function(_x: Box<SomeTrait>) {}\n    |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n    |\n-   = note: `--force-warns bare-trait-objects` implied by `--force-warns rust-2018-idioms`\n+   = note: `--force-warn bare-trait-objects` implied by `--force-warn rust-2018-idioms`\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see issue #80165 <https://github.com/rust-lang/rust/issues/80165>\n "}, {"sha": "0198610b78e10c8e8fecb7a94588a324c6cf2804", "filename": "src/test/ui/lint/force-warn/force-warn-group.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.rs?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: --force-warns rust_2018_idioms -Zunstable-options\n+// compile-flags: --force-warn rust_2018_idioms -Zunstable-options\n // check-pass\n \n #![allow(rust_2018_idioms)]"}, {"sha": "180dff880a65828356280598b923880db57b1045", "filename": "src/test/ui/lint/force-warn/force-warn-group.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32c9b7b091534f6d80e7e85da0cd425acb6c9a79/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.stderr?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -4,7 +4,7 @@ warning: trait objects without an explicit `dyn` are deprecated\n LL | pub fn function(_x: Box<SomeTrait>) {}\n    |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n    |\n-   = note: `--force-warns bare-trait-objects` implied by `--force-warns rust-2018-idioms`\n+   = note: `--force-warn bare-trait-objects` implied by `--force-warn rust-2018-idioms`\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see issue #80165 <https://github.com/rust-lang/rust/issues/80165>\n "}, {"sha": "4e143fd131e0c16cefd008456e974236ca54e62e", "filename": "src/tools/cargo", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargo?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1 +1 @@\n-Subproject commit 27277d966b3cfa454d6dea7f724cb961c036251c\n+Subproject commit 4e143fd131e0c16cefd008456e974236ca54e62e"}, {"sha": "ea105f9396a9dab68e71efb06016b7c76c83ba7c", "filename": "src/tools/rust-analyzer", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-analyzer?ref=32c9b7b091534f6d80e7e85da0cd425acb6c9a79", "patch": "@@ -1 +1 @@\n-Subproject commit fe00358888a24c64878abc15f09b0e60e16db9d6\n+Subproject commit ea105f9396a9dab68e71efb06016b7c76c83ba7c"}]}