{"sha": "24588e6b3af018aaff628b98cd56383595b2d226", "node_id": "C_kwDOAAsO6NoAKDI0NTg4ZTZiM2FmMDE4YWFmZjYyOGI5OGNkNTYzODM1OTViMmQyMjY", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-01-21T15:44:57Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-01-21T15:44:57Z"}, "message": "Old versions of Android generate SIGSEGV from libc::abort", "tree": {"sha": "f214cca7f1519288ec68892772879587b80611d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f214cca7f1519288ec68892772879587b80611d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24588e6b3af018aaff628b98cd56383595b2d226", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24588e6b3af018aaff628b98cd56383595b2d226", "html_url": "https://github.com/rust-lang/rust/commit/24588e6b3af018aaff628b98cd56383595b2d226", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24588e6b3af018aaff628b98cd56383595b2d226/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe9dc6e62a312bc2fe01bb5ea65ea5d027ce878d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe9dc6e62a312bc2fe01bb5ea65ea5d027ce878d", "html_url": "https://github.com/rust-lang/rust/commit/fe9dc6e62a312bc2fe01bb5ea65ea5d027ce878d"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "560c62155d9312b91de398ff19be6e06cf5539fe", "filename": "library/std/src/sys/unix/process/process_unix/tests.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/24588e6b3af018aaff628b98cd56383595b2d226/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24588e6b3af018aaff628b98cd56383595b2d226/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix%2Ftests.rs?ref=24588e6b3af018aaff628b98cd56383595b2d226", "patch": "@@ -53,5 +53,10 @@ fn test_command_fork_no_unwind() {\n     let status = got.expect(\"panic unexpectedly propagated\");\n     dbg!(status);\n     let signal = status.signal().expect(\"expected child process to die of signal\");\n-    assert!(signal == libc::SIGABRT || signal == libc::SIGILL || signal == libc::SIGTRAP);\n+    assert!(\n+        signal == libc::SIGABRT\n+            || signal == libc::SIGILL\n+            || signal == libc::SIGTRAP\n+            || signal == libc::SIGSEGV\n+    );\n }"}]}