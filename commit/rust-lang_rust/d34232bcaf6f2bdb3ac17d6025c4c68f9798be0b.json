{"sha": "d34232bcaf6f2bdb3ac17d6025c4c68f9798be0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNDIzMmJjYWY2ZjJiZGIzYWMxN2Q2MDI1YzRjNjhmOTc5OGJlMGI=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-31T08:39:47Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-25T14:47:34Z"}, "message": "Fix rebase fallout", "tree": {"sha": "83831def288c37ad50416b6919baf1f5d31ce54a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83831def288c37ad50416b6919baf1f5d31ce54a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d34232bcaf6f2bdb3ac17d6025c4c68f9798be0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d34232bcaf6f2bdb3ac17d6025c4c68f9798be0b", "html_url": "https://github.com/rust-lang/rust/commit/d34232bcaf6f2bdb3ac17d6025c4c68f9798be0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d34232bcaf6f2bdb3ac17d6025c4c68f9798be0b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f84d6edf1da310d1022777dadf59b87b78bd8fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f84d6edf1da310d1022777dadf59b87b78bd8fb", "html_url": "https://github.com/rust-lang/rust/commit/6f84d6edf1da310d1022777dadf59b87b78bd8fb"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "0156872a4da8f9f391e81035fb2084e20d25cf7c", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d34232bcaf6f2bdb3ac17d6025c4c68f9798be0b/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d34232bcaf6f2bdb3ac17d6025c4c68f9798be0b/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=d34232bcaf6f2bdb3ac17d6025c4c68f9798be0b", "patch": "@@ -30,7 +30,7 @@ use syntax::ast::Mutability;\n use super::{\n     Pointer, AllocId, Allocation, ConstValue, GlobalId,\n     EvalResult, Scalar, EvalErrorKind, AllocType, PointerArithmetic,\n-    Machine, MemoryAccess, AllocMap, MayLeak, ScalarMaybeUndef,\n+    Machine, MemoryAccess, AllocMap, MayLeak, ScalarMaybeUndef, ErrorHandled,\n };\n \n #[derive(Debug, PartialEq, Eq, Copy, Clone, Hash)]\n@@ -370,10 +370,13 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n         };\n         // use the raw query here to break validation cycles. Later uses of the static will call the\n         // full query anyway\n-        tcx.const_eval_raw(ty::ParamEnv::reveal_all().and(gid)).map_err(|_| {\n+        tcx.const_eval_raw(ty::ParamEnv::reveal_all().and(gid)).map_err(|err| {\n             // no need to report anything, the const_eval call takes care of that for statics\n             assert!(tcx.is_static(def_id).is_some());\n-            EvalErrorKind::ReferencedConstant.into()\n+            match err {\n+                ErrorHandled::Reported => EvalErrorKind::ReferencedConstant.into(),\n+                ErrorHandled::TooGeneric => EvalErrorKind::TooGeneric.into(),\n+            }\n         }).map(|const_val| {\n             if let ConstValue::ByRef(_, allocation, _) = const_val.val {\n                 // We got tcx memory. Let the machine figure out whether and how to"}]}