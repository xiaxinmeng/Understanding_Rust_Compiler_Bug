{"sha": "cd63b22e80e61fc4deb3da85a733d6c9266783e1", "node_id": "C_kwDOAAsO6NoAKGNkNjNiMjJlODBlNjFmYzRkZWIzZGE4NWE3MzNkNmM5MjY2NzgzZTE", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-05-03T19:07:36Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-05-03T19:09:52Z"}, "message": "Add more tests for label-break-value", "tree": {"sha": "e3e2a4cad90d543b4eed04677ca89dfae4e11f8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3e2a4cad90d543b4eed04677ca89dfae4e11f8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd63b22e80e61fc4deb3da85a733d6c9266783e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd63b22e80e61fc4deb3da85a733d6c9266783e1", "html_url": "https://github.com/rust-lang/rust/commit/cd63b22e80e61fc4deb3da85a733d6c9266783e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd63b22e80e61fc4deb3da85a733d6c9266783e1/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c110cfa161aab391bd37c16a95b8330bfc7e54ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/c110cfa161aab391bd37c16a95b8330bfc7e54ce", "html_url": "https://github.com/rust-lang/rust/commit/c110cfa161aab391bd37c16a95b8330bfc7e54ce"}], "stats": {"total": 209, "additions": 208, "deletions": 1}, "files": [{"sha": "5776c0b1e0c77c7403f1c5ca8c2c02774a679e64", "filename": "src/test/ui/for-loop-while/label_break_value.rs", "status": "modified", "additions": 52, "deletions": 1, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/cd63b22e80e61fc4deb3da85a733d6c9266783e1/src%2Ftest%2Fui%2Ffor-loop-while%2Flabel_break_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd63b22e80e61fc4deb3da85a733d6c9266783e1/src%2Ftest%2Fui%2Ffor-loop-while%2Flabel_break_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffor-loop-while%2Flabel_break_value.rs?ref=cd63b22e80e61fc4deb3da85a733d6c9266783e1", "patch": "@@ -95,6 +95,50 @@ fn label_break_mixed(v: u32) -> u32 {\n     r\n }\n \n+fn label_break_match(c: u8, xe: u8, ye: i8) {\n+    let mut x = 0;\n+    let y = 'a: {\n+        match c {\n+            0 => break 'a 0,\n+            v if { if v % 2 == 0 { break 'a 1; }; v % 3 == 0 } => { x += 1; },\n+            v if { 'b: { break 'b v == 5; } } => { x = 41; },\n+            _ => 'b: { //~ WARNING `'b` shadows a label\n+                break 'b ();\n+            },\n+        }\n+        x += 1;\n+        -1\n+    };\n+\n+    assert_eq!(x, xe);\n+    assert_eq!(y, ye);\n+}\n+\n+#[allow(unused_labels)]\n+fn label_break_macro() {\n+    macro_rules! mac1 {\n+        ($target:lifetime, $val:expr) => {\n+            break $target $val;\n+        };\n+    }\n+    let x: u8 = 'a: {\n+        'b: {\n+            mac1!('b, 1);\n+        };\n+        0\n+    };\n+    assert_eq!(x, 0);\n+    let x: u8 = 'a: { //~ WARNING `'a` shadows a label\n+        'b: { //~ WARNING `'b` shadows a label\n+            if true {\n+                mac1!('a, 1);\n+            }\n+        };\n+        0\n+    };\n+    assert_eq!(x, 1);\n+}\n+\n pub fn main() {\n     assert_eq!(label_break(true, false), 1);\n     assert_eq!(label_break(false, true), 2);\n@@ -112,5 +156,12 @@ pub fn main() {\n     assert_eq!(label_break_mixed(5), 5);\n     assert_eq!(label_break_mixed(6), 6);\n \n-    // FIXME: ensure that labeled blocks work if produced by macros and in match arms\n+    label_break_match(0, 0, 0);\n+    label_break_match(1, 1, -1);\n+    label_break_match(2, 0, 1);\n+    label_break_match(3, 2, -1);\n+    label_break_match(5, 42, -1);\n+    label_break_match(7, 1, -1);\n+\n+    label_break_macro();\n }"}, {"sha": "b1eb3204fd5997166ca0eac767e228dac6ea49e2", "filename": "src/test/ui/for-loop-while/label_break_value.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/cd63b22e80e61fc4deb3da85a733d6c9266783e1/src%2Ftest%2Fui%2Ffor-loop-while%2Flabel_break_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd63b22e80e61fc4deb3da85a733d6c9266783e1/src%2Ftest%2Fui%2Ffor-loop-while%2Flabel_break_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffor-loop-while%2Flabel_break_value.stderr?ref=cd63b22e80e61fc4deb3da85a733d6c9266783e1", "patch": "@@ -0,0 +1,28 @@\n+warning: label name `'b` shadows a label name that is already in scope\n+  --> $DIR/label_break_value.rs:105:18\n+   |\n+LL |             v if { 'b: { break 'b v == 5; } } => { x = 41; },\n+   |                    -- first declared here\n+LL |             _ => 'b: {\n+   |                  ^^ label `'b` already in scope\n+\n+warning: label name `'a` shadows a label name that is already in scope\n+  --> $DIR/label_break_value.rs:131:17\n+   |\n+LL |     let x: u8 = 'a: {\n+   |                 -- first declared here\n+...\n+LL |     let x: u8 = 'a: {\n+   |                 ^^ label `'a` already in scope\n+\n+warning: label name `'b` shadows a label name that is already in scope\n+  --> $DIR/label_break_value.rs:132:9\n+   |\n+LL |         'b: {\n+   |         -- first declared here\n+...\n+LL |         'b: {\n+   |         ^^ label `'b` already in scope\n+\n+warning: 3 warnings emitted\n+"}, {"sha": "e603c8463b578ce6c2c942b5174f8cbdae2f4a79", "filename": "src/test/ui/for-loop-while/label_break_value_invalid.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/cd63b22e80e61fc4deb3da85a733d6c9266783e1/src%2Ftest%2Fui%2Ffor-loop-while%2Flabel_break_value_invalid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd63b22e80e61fc4deb3da85a733d6c9266783e1/src%2Ftest%2Fui%2Ffor-loop-while%2Flabel_break_value_invalid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffor-loop-while%2Flabel_break_value_invalid.rs?ref=cd63b22e80e61fc4deb3da85a733d6c9266783e1", "patch": "@@ -0,0 +1,39 @@\n+#![crate_type = \"lib\"]\n+#![feature(label_break_value)]\n+\n+fn lbv_macro_test_hygiene_respected() {\n+    macro_rules! mac2 {\n+        ($val:expr) => {\n+            break 'a $val; //~ ERROR undeclared label `'a` [E0426]\n+        };\n+    }\n+    let x: u8 = 'a: {\n+        'b: {\n+            if true {\n+                mac2!(2);\n+            }\n+        };\n+        0\n+    };\n+    assert_eq!(x, 2);\n+\n+    macro_rules! mac3 {\n+        ($val:expr) => {\n+            'a: {\n+            //~^ WARNING `'a` shadows a label\n+            //~| WARNING `'a` shadows a label\n+            //~| WARNING `'a` shadows a label\n+                $val\n+            }\n+        };\n+    }\n+    let x: u8 = mac3!('b: { //~ WARNING `'b` shadows a label\n+        if true {\n+            break 'a 3; //~ ERROR undeclared label `'a` [E0426]\n+        }\n+        0\n+    });\n+    assert_eq!(x, 3);\n+    let x: u8 = mac3!(break 'a 4); //~ ERROR undeclared label `'a` [E0426]\n+    assert_eq!(x, 4);\n+}"}, {"sha": "549b394e14b101e564d39214ce33d8368a01879b", "filename": "src/test/ui/for-loop-while/label_break_value_invalid.stderr", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/cd63b22e80e61fc4deb3da85a733d6c9266783e1/src%2Ftest%2Fui%2Ffor-loop-while%2Flabel_break_value_invalid.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd63b22e80e61fc4deb3da85a733d6c9266783e1/src%2Ftest%2Fui%2Ffor-loop-while%2Flabel_break_value_invalid.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffor-loop-while%2Flabel_break_value_invalid.stderr?ref=cd63b22e80e61fc4deb3da85a733d6c9266783e1", "patch": "@@ -0,0 +1,89 @@\n+error[E0426]: use of undeclared label `'a`\n+  --> $DIR/label_break_value_invalid.rs:7:19\n+   |\n+LL |             break 'a $val;\n+   |                   ^^ undeclared label `'a`\n+...\n+LL |                 mac2!(2);\n+   |                 -------- in this macro invocation\n+   |\n+   = note: this error originates in the macro `mac2` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0426]: use of undeclared label `'a`\n+  --> $DIR/label_break_value_invalid.rs:32:19\n+   |\n+LL |     let x: u8 = mac3!('b: {\n+   |                       -- a label with a similar name is reachable\n+LL |         if true {\n+LL |             break 'a 3;\n+   |                   ^^\n+   |                   |\n+   |                   undeclared label `'a`\n+   |                   help: try using similarly named label: `'b`\n+\n+error[E0426]: use of undeclared label `'a`\n+  --> $DIR/label_break_value_invalid.rs:37:29\n+   |\n+LL |     let x: u8 = mac3!(break 'a 4);\n+   |                             ^^ undeclared label `'a`\n+\n+warning: label name `'a` shadows a label name that is already in scope\n+  --> $DIR/label_break_value_invalid.rs:22:13\n+   |\n+LL |       let x: u8 = 'a: {\n+   |                   -- first declared here\n+...\n+LL |               'a: {\n+   |               ^^ label `'a` already in scope\n+...\n+LL |       let x: u8 = mac3!('b: {\n+   |  _________________-\n+LL | |         if true {\n+LL | |             break 'a 3;\n+LL | |         }\n+LL | |         0\n+LL | |     });\n+   | |______- in this macro invocation\n+   |\n+   = note: this warning originates in the macro `mac3` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+warning: label name `'b` shadows a label name that is already in scope\n+  --> $DIR/label_break_value_invalid.rs:30:23\n+   |\n+LL |         'b: {\n+   |         -- first declared here\n+...\n+LL |     let x: u8 = mac3!('b: {\n+   |                       ^^ label `'b` already in scope\n+\n+warning: label name `'a` shadows a label name that is already in scope\n+  --> $DIR/label_break_value_invalid.rs:22:13\n+   |\n+LL |     let x: u8 = 'a: {\n+   |                 -- first declared here\n+...\n+LL |             'a: {\n+   |             ^^ label `'a` already in scope\n+...\n+LL |     let x: u8 = mac3!(break 'a 4);\n+   |                 ----------------- in this macro invocation\n+   |\n+   = note: this warning originates in the macro `mac3` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+warning: label name `'a` shadows a label name that is already in scope\n+  --> $DIR/label_break_value_invalid.rs:22:13\n+   |\n+LL |             'a: {\n+   |             ^^\n+   |             |\n+   |             first declared here\n+   |             label `'a` already in scope\n+...\n+LL |     let x: u8 = mac3!(break 'a 4);\n+   |                 ----------------- in this macro invocation\n+   |\n+   = note: this warning originates in the macro `mac3` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 3 previous errors; 4 warnings emitted\n+\n+For more information about this error, try `rustc --explain E0426`."}]}