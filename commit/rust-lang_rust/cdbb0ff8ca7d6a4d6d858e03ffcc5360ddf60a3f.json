{"sha": "cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkYmIwZmY4Y2E3ZDZhNGQ2ZDg1OGUwM2ZmY2M1MzYwZGRmNjBhM2Y=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-12T11:27:08Z"}, "committer": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-15T17:33:28Z"}, "message": "Special case type aliases from impl trait in const/static types", "tree": {"sha": "8cd6349512918ad6e4cae00502f9fd63f018dd49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cd6349512918ad6e4cae00502f9fd63f018dd49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f", "html_url": "https://github.com/rust-lang/rust/commit/cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3abdb08351d7c944e1dfab72a06fe5074b2bc227", "url": "https://api.github.com/repos/rust-lang/rust/commits/3abdb08351d7c944e1dfab72a06fe5074b2bc227", "html_url": "https://github.com/rust-lang/rust/commit/3abdb08351d7c944e1dfab72a06fe5074b2bc227"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "8cdb68b5c87982f0e83015bcfd1681b91e9b069d", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f", "patch": "@@ -342,7 +342,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                     ty,\n                     ImplTraitContext::OtherOpaqueTy {\n                         capturable_lifetimes: &mut FxHashSet::default(),\n-                        origin: hir::OpaqueTyOrigin::Misc,\n+                        origin: hir::OpaqueTyOrigin::TyAlias,\n                     },\n                 );\n                 let generics = self.lower_generics(gen, ImplTraitContext::disallowed());\n@@ -918,7 +918,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                             ty,\n                             ImplTraitContext::OtherOpaqueTy {\n                                 capturable_lifetimes: &mut FxHashSet::default(),\n-                                origin: hir::OpaqueTyOrigin::Misc,\n+                                origin: hir::OpaqueTyOrigin::TyAlias,\n                             },\n                         );\n                         hir::ImplItemKind::TyAlias(ty)"}, {"sha": "ccc16c34fb2183a6d25f4b8bc0ddc0d47186a576", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f", "patch": "@@ -2291,7 +2291,9 @@ pub enum OpaqueTyOrigin {\n     AsyncFn,\n     /// `let _: impl Trait = ...`\n     Binding,\n-    /// Impl trait in type aliases, consts, statics, bounds.\n+    /// type aliases: `type Foo = impl Trait;`\n+    TyAlias,\n+    /// Impl trait consts, statics, bounds.\n     Misc,\n }\n "}, {"sha": "d6a585e626c482e811ffb68796c0f8ee3eda9dbd", "filename": "compiler/rustc_trait_selection/src/opaque_types.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs?ref=cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f", "patch": "@@ -422,7 +422,9 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n             }\n             // These opaque type inherit all lifetime parameters from their\n             // parent, so we have to check them all.\n-            hir::OpaqueTyOrigin::Binding | hir::OpaqueTyOrigin::Misc => 0,\n+            hir::OpaqueTyOrigin::Binding\n+            | hir::OpaqueTyOrigin::TyAlias\n+            | hir::OpaqueTyOrigin::Misc => 0,\n         };\n \n         let span = tcx.def_span(def_id);\n@@ -581,6 +583,7 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n             // Otherwise, generate the label we'll use in the error message.\n             hir::OpaqueTyOrigin::Binding\n             | hir::OpaqueTyOrigin::FnReturn\n+            | hir::OpaqueTyOrigin::TyAlias\n             | hir::OpaqueTyOrigin::Misc => \"impl Trait\",\n         };\n         let msg = format!(\"ambiguous lifetime bound in `{}`\", context_name);"}, {"sha": "a22376279c26c5e05d9d8e2028e1e077ee3163d7", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f", "patch": "@@ -659,7 +659,8 @@ fn check_opaque_meets_bounds<'tcx>(\n         // Checked when type checking the function containing them.\n         hir::OpaqueTyOrigin::FnReturn | hir::OpaqueTyOrigin::AsyncFn => return,\n         // Can have different predicates to their defining use\n-        hir::OpaqueTyOrigin::Binding | hir::OpaqueTyOrigin::Misc => {}\n+        hir::OpaqueTyOrigin::Binding | hir::OpaqueTyOrigin::Misc | hir::OpaqueTyOrigin::TyAlias => {\n+        }\n     }\n \n     let hir_id = tcx.hir().local_def_id_to_hir_id(def_id);"}, {"sha": "8101e24865de7b3ec8da78a6242ece019cd702ee", "filename": "compiler/rustc_typeck/src/check/writeback.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs?ref=cdbb0ff8ca7d6a4d6d858e03ffcc5360ddf60a3f", "patch": "@@ -497,7 +497,8 @@ impl<'cx, 'tcx> WritebackCx<'cx, 'tcx> {\n             let mut skip_add = false;\n \n             if let ty::Opaque(defin_ty_def_id, _substs) = *definition_ty.kind() {\n-                if let hir::OpaqueTyOrigin::Misc = opaque_defn.origin {\n+                if let hir::OpaqueTyOrigin::Misc | hir::OpaqueTyOrigin::TyAlias = opaque_defn.origin\n+                {\n                     if def_id == defin_ty_def_id {\n                         debug!(\n                             \"skipping adding concrete definition for opaque type {:?} {:?}\","}]}