{"sha": "82e8cd4834fa5d5b9ca7de216d07d89f9c7addc2", "node_id": "C_kwDOAAsO6NoAKDgyZThjZDQ4MzRmYTVkNWI5Y2E3ZGUyMTZkMDdkODlmOWM3YWRkYzI", "commit": {"author": {"name": "Ian Chamberlain", "email": "ian.h.chamberlain@gmail.com", "date": "2022-03-17T03:26:22Z"}, "committer": {"name": "Mark Drobnak", "email": "mark.drobnak@gmail.com", "date": "2022-06-14T03:45:22Z"}, "message": "Add platform-support page for armv6k-nintendo-3ds\n\nCo-authored-by: Mark Drobnak <mark.drobnak@gmail.com>", "tree": {"sha": "f94523fb1cef0bfb36f6ad5aa9996bad515447de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f94523fb1cef0bfb36f6ad5aa9996bad515447de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82e8cd4834fa5d5b9ca7de216d07d89f9c7addc2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEJn5ZTY8tfNoIJXFiR6Ez87+dA9MFAmKoBFMACgkQR6Ez87+d\nA9OUIQgAmtuiG1LQ1P++jcMjyi8DmKUC8Ulw8S5omZZAgH/tItNDNbH3u2ky2D67\n1FPTxkO9+skfkpTN7HDlVF0EOJN61Gmisx2BjZiCIbvKVEvJnumHbEKz3xocxVym\nBrRcpUPuyeNhmW2AS9ov+evvuqu+RHzfFnYsIJXTxRiXPKi7eB0ymL75ZQ+u08+I\nH8KIfW+V9HcbH4ntmthWhrdpnLT5yvbSpYFVeGoVBfEQF0fyYIuvOpuGkHWRKDqt\nmKO36P+wyAU/dUtM5T68IJqop2KVY1AJ5vBvZtnAjWc8ybjajXuB/fk02ztHV9mG\nuH4speMQ1A/ep3A5frAQuQ7nBCyAVQ==\n=HiDF\n-----END PGP SIGNATURE-----", "payload": "tree f94523fb1cef0bfb36f6ad5aa9996bad515447de\nparent a49d14f08914390f24fa0ba6401b5f1de91939fc\nauthor Ian Chamberlain <ian.h.chamberlain@gmail.com> 1647487582 -0400\ncommitter Mark Drobnak <mark.drobnak@gmail.com> 1655178322 -0700\n\nAdd platform-support page for armv6k-nintendo-3ds\n\nCo-authored-by: Mark Drobnak <mark.drobnak@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82e8cd4834fa5d5b9ca7de216d07d89f9c7addc2", "html_url": "https://github.com/rust-lang/rust/commit/82e8cd4834fa5d5b9ca7de216d07d89f9c7addc2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82e8cd4834fa5d5b9ca7de216d07d89f9c7addc2/comments", "author": {"login": "ian-h-chamberlain", "id": 11131775, "node_id": "MDQ6VXNlcjExMTMxNzc1", "avatar_url": "https://avatars.githubusercontent.com/u/11131775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ian-h-chamberlain", "html_url": "https://github.com/ian-h-chamberlain", "followers_url": "https://api.github.com/users/ian-h-chamberlain/followers", "following_url": "https://api.github.com/users/ian-h-chamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/ian-h-chamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ian-h-chamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ian-h-chamberlain/subscriptions", "organizations_url": "https://api.github.com/users/ian-h-chamberlain/orgs", "repos_url": "https://api.github.com/users/ian-h-chamberlain/repos", "events_url": "https://api.github.com/users/ian-h-chamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/ian-h-chamberlain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AzureMarker", "id": 4417660, "node_id": "MDQ6VXNlcjQ0MTc2NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/4417660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AzureMarker", "html_url": "https://github.com/AzureMarker", "followers_url": "https://api.github.com/users/AzureMarker/followers", "following_url": "https://api.github.com/users/AzureMarker/following{/other_user}", "gists_url": "https://api.github.com/users/AzureMarker/gists{/gist_id}", "starred_url": "https://api.github.com/users/AzureMarker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AzureMarker/subscriptions", "organizations_url": "https://api.github.com/users/AzureMarker/orgs", "repos_url": "https://api.github.com/users/AzureMarker/repos", "events_url": "https://api.github.com/users/AzureMarker/events{/privacy}", "received_events_url": "https://api.github.com/users/AzureMarker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a49d14f08914390f24fa0ba6401b5f1de91939fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a49d14f08914390f24fa0ba6401b5f1de91939fc", "html_url": "https://github.com/rust-lang/rust/commit/a49d14f08914390f24fa0ba6401b5f1de91939fc"}], "stats": {"total": 133, "additions": 132, "deletions": 1}, "files": [{"sha": "87dc513853968d3008187fad8a8c79e6a3d0dbd1", "filename": "src/doc/rustc/src/SUMMARY.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/82e8cd4834fa5d5b9ca7de216d07d89f9c7addc2/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/82e8cd4834fa5d5b9ca7de216d07d89f9c7addc2/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md?ref=82e8cd4834fa5d5b9ca7de216d07d89f9c7addc2", "patch": "@@ -17,6 +17,7 @@\n     - [Template for Target-specific Documentation](platform-support/TEMPLATE.md)\n     - [aarch64-apple-ios-sim](platform-support/aarch64-apple-ios-sim.md)\n     - [\\*-apple-watchos\\*](platform-support/apple-watchos.md)\n+    - [armv6k-nintendo-3ds](platform-support/armv6k-nintendo-3ds.md)\n     - [armv7-unknown-linux-uclibceabi](platform-support/armv7-unknown-linux-uclibceabi.md)\n     - [armv7-unknown-linux-uclibceabihf](platform-support/armv7-unknown-linux-uclibceabihf.md)\n     - [\\*-kmc-solid_\\*](platform-support/kmc-solid.md)"}, {"sha": "eb985803266e7e8a975f3d94db50a441a12606e5", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82e8cd4834fa5d5b9ca7de216d07d89f9c7addc2/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/82e8cd4834fa5d5b9ca7de216d07d89f9c7addc2/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=82e8cd4834fa5d5b9ca7de216d07d89f9c7addc2", "patch": "@@ -226,7 +226,7 @@ target | std | host | notes\n `armv5te-unknown-linux-uclibceabi` | ? |  | ARMv5TE Linux with uClibc\n `armv6-unknown-freebsd` | \u2713 | \u2713 | ARMv6 FreeBSD\n `armv6-unknown-netbsd-eabihf` | ? |  |\n-`armv6k-nintendo-3ds` | * |  | ARMv6K Nintendo 3DS, Horizon (Requires devkitARM toolchain)\n+[`armv6k-nintendo-3ds`](platform-support/armv6k-nintendo-3ds.md) | ? |  | ARMv6K Nintendo 3DS, Horizon (Requires devkitARM toolchain)\n `armv7-apple-ios` | \u2713 |  | ARMv7 iOS, Cortex-a8\n [`armv7-unknown-linux-uclibceabi`](platform-support/armv7-unknown-linux-uclibceabi.md) | \u2713 | \u2713 | ARMv7 Linux with uClibc, softfloat\n [`armv7-unknown-linux-uclibceabihf`](platform-support/armv7-unknown-linux-uclibceabihf.md) | \u2713 | ? | ARMv7 Linux with uClibc, hardfloat"}, {"sha": "215290e389843d9279e5049c3269506ab1d4ac9f", "filename": "src/doc/rustc/src/platform-support/armv6k-nintendo-3ds.md", "status": "added", "additions": 130, "deletions": 0, "changes": 130, "blob_url": "https://github.com/rust-lang/rust/blob/82e8cd4834fa5d5b9ca7de216d07d89f9c7addc2/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Farmv6k-nintendo-3ds.md", "raw_url": "https://github.com/rust-lang/rust/raw/82e8cd4834fa5d5b9ca7de216d07d89f9c7addc2/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Farmv6k-nintendo-3ds.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Farmv6k-nintendo-3ds.md?ref=82e8cd4834fa5d5b9ca7de216d07d89f9c7addc2", "patch": "@@ -0,0 +1,130 @@\n+# `armv6k-nintendo-3ds`\n+\n+**Tier: 3**\n+\n+The Nintendo 3DS platform, which has an ARMv6K processor, and its associated\n+operating system (`horizon`).\n+\n+Rust support for this target is not affiliated with Nintendo, and is not derived\n+from nor used with any official Nintendo SDK.\n+\n+## Target maintainers\n+\n+- [@Meziu](https://github.com/Meziu)\n+- [@AzureMarker](https://github.com/AzureMarker)\n+- [@ian-h-chamberlain](https://github.com/ian-h-chamberlain)\n+\n+## Requirements\n+\n+This target is cross-compiled. Dynamic linking is not supported.\n+\n+`#![no_std]` crates can be built using `build-std` to build `core` and optionally\n+`alloc`, and either `panic_abort` or `panic_unwind`.\n+\n+`std` is partially supported, but mostly works. Some APIs are unimplemented\n+and will simply return an error, such as `std::process`. An allocator is provided\n+by default.\n+\n+In order to support some APIs, binaries must be linked against `libc` written\n+for the target, using a linker for the target. These are provided by the\n+devkitARM toolchain. See\n+[Cross-compilation toolchains and C code](#cross-compilation-toolchains-and-c-code)\n+for more details.\n+\n+Additionally, some helper crates provide implementations of some `libc` functions\n+use by `std` that may otherwise be missing. These, or an alternate implementation\n+of the relevant functions, are required to use `std`:\n+\n+- [`pthread-3ds`](https://github.com/Meziu/pthread-3ds) provides pthread APIs for `std::thread`.\n+- [`linker-fix-3ds`](https://github.com/Meziu/rust-linker-fix-3ds) fulfills some other missing libc APIs.\n+\n+Binaries built for this target should be compatible with all variants of the\n+3DS (and 2DS) hardware and firmware, but testing is limited and some versions may\n+not work correctly.\n+\n+This target generates binaries in the ELF format.\n+\n+## Building the target\n+\n+You can build Rust with support for the target by adding it to the `target`\n+list in `config.toml` and providing paths to the devkitARM toolchain.\n+\n+```toml\n+[build]\n+build-stage = 1\n+target = [\"armv6k-nintendo-3ds\"]\n+\n+[target.armv6k-nintendo-3ds]\n+cc = \"/opt/devkitpro/devkitARM/bin/arm-none-eabi-gcc\"\n+cxx = \"/opt/devkitpro/devkitARM/bin/arm-none-eabi-g++\"\n+ar = \"/opt/devkitpro/devkitARM/bin/arm-none-eabi-ar\"\n+ranlib = \"/opt/devkitpro/devkitARM/bin/arm-none-eabi-ranlib\"\n+linker = \"/opt/devkitpro/devkitARM/bin/arm-none-eabi-gcc\"\n+```\n+\n+Also, to build `compiler_builtins` for the target, export these flags before\n+building the Rust toolchain:\n+\n+```sh\n+export CFLAGS_armv6k_nintendo_3ds=\"-mfloat-abi=hard -mtune=mpcore -mtp=soft -march=armv6k\"\n+```\n+\n+## Building Rust programs\n+\n+Rust does not yet ship pre-compiled artifacts for this target.\n+\n+The recommended way to build binaries is by using the\n+[cargo-3ds](https://github.com/Meziu/cargo-3ds) tool, which uses `build-std`\n+and provides commands that work like the usual `cargo run`, `cargo build`, etc.\n+\n+You can also build Rust with the target enabled (see\n+[Building the target](#building-the-target) above).\n+\n+As mentioned in [Requirements](#requirements), programs that use `std` must link\n+against both the devkitARM toolchain and libraries providing the `libc` APIs used\n+in `std`.  There is a general-purpose utility crate for working with nonstandard\n+APIs provided by the OS: [`ctru-rs`](https://github.com/Meziu/ctru-rs).\n+Add it to Cargo.toml to use it in your program:\n+\n+```toml\n+[dependencies]\n+ctru-rs = { git = \"https://github.com/Meziu/ctru-rs.git\" }\n+```\n+\n+Using this library's `init()` function ensures the symbols needed to link\n+against `std` are present (as mentioned in [Requirements](#requirements)\n+above), as well as providing a runtime suitable for `std`:\n+\n+```rust,ignore (requires-3rd-party-library)\n+fn main() {\n+    ctru::init();\n+}\n+```\n+\n+## Testing\n+\n+Binaries built for this target can be run in an emulator (most commonly\n+[Citra](https://citra-emu.org/)), or sent to a device through\n+the use of a tool like devkitARM's `3dslink`. They may also simply be copied\n+to an SD card to be inserted in the device.\n+\n+The `cargo-3ds` tool mentioned in [Building Rust programs](#building-rust-programs)\n+supports the use of `3dslink` with `cargo 3ds run`. The default Rust test runner\n+is not supported, but\n+[custom test frameworks](https://doc.rust-lang.org/beta/unstable-book/language-features/custom-test-frameworks.html)\n+can be used with `cargo 3ds test` to run unit tests on a device.\n+\n+The Rust test suite for `library/std` is not yet supported.\n+\n+## Cross-compilation toolchains and C code\n+\n+C code can be built for this target using the\n+[devkitARM toolchain](https://devkitpro.org/wiki/Getting_Started).\n+This toolchain provides `arm-none-eabi-gcc` as the linker used to link Rust\n+programs as well.\n+\n+The toolchain also provides a `libc` implementation, which is required by `std`\n+for many of its APIs, and a helper library `libctru` which is used by several\n+of the helper crates listed in [Requirements](#requirements).\n+This toolchain does not, however, include all of the APIs expected by `std`,\n+and the remaining APIs are implemented by `pthread-3ds` and `linker-fix-3ds`."}]}