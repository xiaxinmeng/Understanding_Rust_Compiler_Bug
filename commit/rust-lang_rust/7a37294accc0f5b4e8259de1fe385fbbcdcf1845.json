{"sha": "7a37294accc0f5b4e8259de1fe385fbbcdcf1845", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhMzcyOTRhY2NjMGY1YjRlODI1OWRlMWZlMzg1ZmJiY2RjZjE4NDU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-01-14T01:29:50Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-01-15T16:22:16Z"}, "message": "Add a configure to disable libstd version injection\n\nWe'll use this when building snapshots so we can upgrade freely, but all\ncompilers will inject a version by default.", "tree": {"sha": "ce9604c8d9cae277974bbf3e76f1389ea5430ceb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce9604c8d9cae277974bbf3e76f1389ea5430ceb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a37294accc0f5b4e8259de1fe385fbbcdcf1845", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a37294accc0f5b4e8259de1fe385fbbcdcf1845", "html_url": "https://github.com/rust-lang/rust/commit/7a37294accc0f5b4e8259de1fe385fbbcdcf1845", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a37294accc0f5b4e8259de1fe385fbbcdcf1845/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bebdbd96826cc70c8e39d025a64b76cd64a2ee7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bebdbd96826cc70c8e39d025a64b76cd64a2ee7", "html_url": "https://github.com/rust-lang/rust/commit/7bebdbd96826cc70c8e39d025a64b76cd64a2ee7"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "bef6ece5505598950bd47798c182800557469605", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7a37294accc0f5b4e8259de1fe385fbbcdcf1845/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/7a37294accc0f5b4e8259de1fe385fbbcdcf1845/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=7a37294accc0f5b4e8259de1fe385fbbcdcf1845", "patch": "@@ -418,6 +418,7 @@ export CFG_PREFIX\n export CFG_LIBDIR\n export CFG_RUSTLIBDIR\n export CFG_LIBDIR_RELATIVE\n+export CFG_DISABLE_INJECT_STD_VERSION\n \n ######################################################################\n # Subprograms"}, {"sha": "f758d75fe760032a47979dc242f7e754e167c7ad", "filename": "configure", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a37294accc0f5b4e8259de1fe385fbbcdcf1845/configure", "raw_url": "https://github.com/rust-lang/rust/raw/7a37294accc0f5b4e8259de1fe385fbbcdcf1845/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=7a37294accc0f5b4e8259de1fe385fbbcdcf1845", "patch": "@@ -381,6 +381,7 @@ opt clang 0 \"prefer clang to gcc for building the runtime\"\n opt ccache 0 \"invoke gcc/clang via ccache to reuse object files between builds\"\n opt local-rust 0 \"use an installed rustc rather than downloading a snapshot\"\n opt pax-flags 0 \"apply PaX flags to rustc binaries (required for GRSecurity/PaX-patched kernels)\"\n+opt inject-std-version 1 \"inject the current compiler version of libstd into programs\"\n valopt prefix \"/usr/local\" \"set installation prefix\"\n valopt local-rust-root \"/usr/local\" \"set prefix for local rust binary\"\n valopt llvm-root \"\" \"set LLVM root\"\n@@ -1042,6 +1043,7 @@ putvar CFG_DISABLE_MANAGE_SUBMODULES\n putvar CFG_ANDROID_CROSS_PATH\n putvar CFG_MINGW32_CROSS_PATH\n putvar CFG_MANDIR\n+putvar CFG_DISABLE_INJECT_STD_VERSION\n \n # Avoid spurious warnings from clang by feeding it original source on\n # ccache-miss rather than preprocessed input."}, {"sha": "b3dda5cbc21c66985e55f0bc2e9cdb164badcf47", "filename": "src/libextra/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7a37294accc0f5b4e8259de1fe385fbbcdcf1845/src%2Flibextra%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a37294accc0f5b4e8259de1fe385fbbcdcf1845/src%2Flibextra%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Flib.rs?ref=7a37294accc0f5b4e8259de1fe385fbbcdcf1845", "patch": "@@ -20,7 +20,8 @@ Rust extras are part of the standard Rust distribution.\n \n */\n \n-#[crate_id = \"extra#0.10-pre\"];\n+// NOTE: upgrade to 0.10-pre after the next snapshot\n+#[crate_id = \"extra#0.9\"];\n #[comment = \"Rust extras\"];\n #[license = \"MIT/ASL2\"];\n #[crate_type = \"rlib\"];"}, {"sha": "f2bc03b21badb23e1a1c637c720a050284764d73", "filename": "src/librustc/front/std_inject.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7a37294accc0f5b4e8259de1fe385fbbcdcf1845/src%2Flibrustc%2Ffront%2Fstd_inject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a37294accc0f5b4e8259de1fe385fbbcdcf1845/src%2Flibrustc%2Ffront%2Fstd_inject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fstd_inject.rs?ref=7a37294accc0f5b4e8259de1fe385fbbcdcf1845", "patch": "@@ -21,6 +21,9 @@ use syntax::fold;\n use syntax::opt_vec;\n use syntax::util::small_vector::SmallVector;\n \n+// NOTE: upgrade to 0.10-pre after the next snapshot\n+pub static VERSION: &'static str = \"0.9\";\n+\n pub fn maybe_inject_libstd_ref(sess: Session, crate: ast::Crate)\n                                -> ast::Crate {\n     if use_std(&crate) {\n@@ -53,11 +56,21 @@ struct StandardLibraryInjector {\n     sess: Session,\n }\n \n+pub fn with_version(crate: &str) -> Option<(@str, ast::StrStyle)> {\n+    match option_env!(\"CFG_DISABLE_INJECT_STD_VERSION\") {\n+        Some(\"1\") => None,\n+        _ => {\n+            Some((format!(\"{}\\\\#{}\", crate, VERSION).to_managed(),\n+                  ast::CookedStr))\n+        }\n+    }\n+}\n+\n impl fold::Folder for StandardLibraryInjector {\n     fn fold_crate(&mut self, crate: ast::Crate) -> ast::Crate {\n         let mut vis = ~[ast::ViewItem {\n             node: ast::ViewItemExternMod(self.sess.ident_of(\"std\"),\n-                                         None,\n+                                         with_version(\"std\"),\n                                          ast::DUMMY_NODE_ID),\n             attrs: ~[],\n             vis: ast::Private,\n@@ -67,15 +80,15 @@ impl fold::Folder for StandardLibraryInjector {\n         if use_uv(&crate) && !self.sess.building_library.get() {\n             vis.push(ast::ViewItem {\n                 node: ast::ViewItemExternMod(self.sess.ident_of(\"green\"),\n-                                             None,\n+                                             with_version(\"green\"),\n                                              ast::DUMMY_NODE_ID),\n                 attrs: ~[],\n                 vis: ast::Private,\n                 span: DUMMY_SP\n             });\n             vis.push(ast::ViewItem {\n                 node: ast::ViewItemExternMod(self.sess.ident_of(\"rustuv\"),\n-                                             None,\n+                                             with_version(\"rustuv\"),\n                                              ast::DUMMY_NODE_ID),\n                 attrs: ~[],\n                 vis: ast::Private,"}, {"sha": "b9a98e7b15ae918988bd260f758eabdba3571125", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7a37294accc0f5b4e8259de1fe385fbbcdcf1845/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a37294accc0f5b4e8259de1fe385fbbcdcf1845/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=7a37294accc0f5b4e8259de1fe385fbbcdcf1845", "patch": "@@ -13,6 +13,7 @@\n \n use driver::session;\n use front::config;\n+use front::std_inject::with_version;\n \n use std::cell::RefCell;\n use std::vec;\n@@ -292,7 +293,7 @@ fn mk_std(cx: &TestCtxt) -> ast::ViewItem {\n                                           ast::DUMMY_NODE_ID))])\n     } else {\n         ast::ViewItemExternMod(id_extra,\n-                               None,\n+                               with_version(\"extra\"),\n                                ast::DUMMY_NODE_ID)\n     };\n     ast::ViewItem {"}]}