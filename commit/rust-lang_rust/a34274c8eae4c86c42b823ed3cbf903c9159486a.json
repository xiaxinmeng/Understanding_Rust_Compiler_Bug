{"sha": "a34274c8eae4c86c42b823ed3cbf903c9159486a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNDI3NGM4ZWFlNGM4NmM0MmI4MjNlZDNjYmY5MDNjOTE1OTQ4NmE=", "commit": {"author": {"name": "Daniel Keep", "email": "daniel.keep@gmail.com", "date": "2015-12-01T08:37:15Z"}, "committer": {"name": "Daniel Keep", "email": "daniel.keep@gmail.com", "date": "2015-12-01T08:39:52Z"}, "message": "trpl: additions & fixes for syntax index.\n\n* `const`: Add reference to raw pointers\n* Change `expr!(...)` etc. examples to use `ident` instead.\n  *Technically*, it should be `pat`, but that's not how it works in\n  practice.\n* `|`: add reference to closure syntax.\n* Closure syntax entry.\n* Indexing and slicing entries.", "tree": {"sha": "51905ebaeb4ada213388b726720978818f3bc7d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51905ebaeb4ada213388b726720978818f3bc7d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a34274c8eae4c86c42b823ed3cbf903c9159486a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a34274c8eae4c86c42b823ed3cbf903c9159486a", "html_url": "https://github.com/rust-lang/rust/commit/a34274c8eae4c86c42b823ed3cbf903c9159486a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a34274c8eae4c86c42b823ed3cbf903c9159486a/comments", "author": {"login": "DanielKeep", "id": 77238, "node_id": "MDQ6VXNlcjc3MjM4", "avatar_url": "https://avatars.githubusercontent.com/u/77238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanielKeep", "html_url": "https://github.com/DanielKeep", "followers_url": "https://api.github.com/users/DanielKeep/followers", "following_url": "https://api.github.com/users/DanielKeep/following{/other_user}", "gists_url": "https://api.github.com/users/DanielKeep/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanielKeep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanielKeep/subscriptions", "organizations_url": "https://api.github.com/users/DanielKeep/orgs", "repos_url": "https://api.github.com/users/DanielKeep/repos", "events_url": "https://api.github.com/users/DanielKeep/events{/privacy}", "received_events_url": "https://api.github.com/users/DanielKeep/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DanielKeep", "id": 77238, "node_id": "MDQ6VXNlcjc3MjM4", "avatar_url": "https://avatars.githubusercontent.com/u/77238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanielKeep", "html_url": "https://github.com/DanielKeep", "followers_url": "https://api.github.com/users/DanielKeep/followers", "following_url": "https://api.github.com/users/DanielKeep/following{/other_user}", "gists_url": "https://api.github.com/users/DanielKeep/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanielKeep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanielKeep/subscriptions", "organizations_url": "https://api.github.com/users/DanielKeep/orgs", "repos_url": "https://api.github.com/users/DanielKeep/repos", "events_url": "https://api.github.com/users/DanielKeep/events{/privacy}", "received_events_url": "https://api.github.com/users/DanielKeep/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c212c0e1d1ff9f061c8149b4831e5fa1cb7e5b83", "url": "https://api.github.com/repos/rust-lang/rust/commits/c212c0e1d1ff9f061c8149b4831e5fa1cb7e5b83", "html_url": "https://github.com/rust-lang/rust/commit/c212c0e1d1ff9f061c8149b4831e5fa1cb7e5b83"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "528c0b537f396035e1097bfd1d3f39bc2ad5c6e3", "filename": "src/doc/book/syntax-index.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a34274c8eae4c86c42b823ed3cbf903c9159486a/src%2Fdoc%2Fbook%2Fsyntax-index.md", "raw_url": "https://github.com/rust-lang/rust/raw/a34274c8eae4c86c42b823ed3cbf903c9159486a/src%2Fdoc%2Fbook%2Fsyntax-index.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsyntax-index.md?ref=a34274c8eae4c86c42b823ed3cbf903c9159486a", "patch": "@@ -4,7 +4,7 @@\n \n * `as`: primitive casting.  See [Casting Between Types (`as`)].\n * `break`: break out of loop.  See [Loops (Ending Iteration Early)].\n-* `const`: constant items.  See [`const` and `static`].\n+* `const`: constant items and constant raw pointers.  See [`const` and `static`], [Raw Pointers].\n * `continue`: continue to next loop iteration.  See [Loops (Ending Iteration Early)].\n * `crate`: external crate linkage.  See [Crates and Modules (Importing External Crates)].\n * `else`: fallback for `if` and `if let` constructs.  See [`if`], [`if let`].\n@@ -39,7 +39,7 @@\n \n ## Operators and Symbols\n \n-* `!` (`expr!(\u2026)`, `expr!{\u2026}`, `expr![\u2026]`): denotes macro expansion.  See [Macros].\n+* `!` (`ident!(\u2026)`, `ident!{\u2026}`, `ident![\u2026]`): denotes macro expansion.  See [Macros].\n * `!` (`!expr`): bitwise or logical complement.  Overloadable (`Not`).\n * `%` (`expr % expr`): arithmetic remainder.  Overloadable (`Rem`).\n * `%=` (`var %= expr`): arithmetic remainder & assignment.\n@@ -89,6 +89,7 @@\n * `^=` (`var ^= expr`): bitwise exclusive or & assignment.\n * `|` (`expr | expr`): bitwise or.  Overloadable (`BitOr`).\n * `|` (`pat | pat`): pattern alternatives.  See [Patterns (Multiple patterns)].\n+* `|` (`|\u2026| expr`): closures.  See [Closures].\n * `|=` (`var |= expr`): bitwise or & assignment.\n * `||` (`expr || expr`): logical or.\n * `_`: \"ignored\" pattern binding.  See [Patterns (Ignoring bindings)].\n@@ -105,6 +106,7 @@\n * `br\"\u2026\"`, `br#\"\u2026\"#`, `br##\"\u2026\"##`, \u2026: raw byte string literal, combination of raw and byte string literal. See [Reference (Raw Byte String Literals)].\n * `'\u2026'`: character literal.  See [Primitive Types (`char`)].\n * `b'\u2026'`: ASCII byte literal.\n+* `|\u2026| expr`: closure.  See [Closures].\n \n <!-- Path-related syntax -->\n \n@@ -173,6 +175,8 @@\n * `[\u2026]`: array literal.  See [Primitive Types (Arrays)].\n * `[expr; len]`: array literal containing `len` copies of `expr`.  See [Primitive Types (Arrays)].\n * `[type; len]`: array type containing `len` instances of `type`.  See [Primitive Types (Arrays)].\n+* `expr[expr]`: collection indexing.  Overloadable (`Index`, `IndexMut`).\n+* `expr[..]`, `expr[a..]`, `expr[..b]`, `expr[a..b]`: collection indexing pretending to be collection slicing, using `Range`, `RangeFrom`, `RangeTo`, `RangeFull` as the \"index\".\n \n [`const` and `static` (`static`)]: const-and-static.html#static\n [`const` and `static`]: const-and-static.html"}]}