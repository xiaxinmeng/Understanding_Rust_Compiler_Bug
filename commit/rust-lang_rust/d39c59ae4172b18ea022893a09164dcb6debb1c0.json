{"sha": "d39c59ae4172b18ea022893a09164dcb6debb1c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzOWM1OWFlNDE3MmIxOGVhMDIyODkzYTA5MTY0ZGNiNmRlYmIxYzA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-02T00:10:33Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-02T00:22:18Z"}, "message": "rustc: Move path_to_str to front::ast", "tree": {"sha": "5e5b02174b55d929510c8a061e9381c595b9233e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e5b02174b55d929510c8a061e9381c595b9233e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d39c59ae4172b18ea022893a09164dcb6debb1c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d39c59ae4172b18ea022893a09164dcb6debb1c0", "html_url": "https://github.com/rust-lang/rust/commit/d39c59ae4172b18ea022893a09164dcb6debb1c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d39c59ae4172b18ea022893a09164dcb6debb1c0/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e59b0be544bfda5c533c2024c981861ce012709", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e59b0be544bfda5c533c2024c981861ce012709", "html_url": "https://github.com/rust-lang/rust/commit/4e59b0be544bfda5c533c2024c981861ce012709"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "ce3bf568cd89844472fd4d92e0c9363f39f02d27", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d39c59ae4172b18ea022893a09164dcb6debb1c0/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d39c59ae4172b18ea022893a09164dcb6debb1c0/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=d39c59ae4172b18ea022893a09164dcb6debb1c0", "patch": "@@ -598,6 +598,19 @@ fn ternary_to_if(&@expr e) -> @ast::expr {\n     }\n }\n \n+// Path stringification\n+fn path_to_str(&ast::path pth) -> str {\n+    auto result = str::connect(pth.node.idents, \"::\");\n+    if (vec::len[@ast::ty](pth.node.types) > 0u) {\n+        fn f(&@ast::ty t) -> str { ret pretty::pprust::ty_to_str(*t); }\n+        result += \"[\";\n+        result += str::connect(vec::map(f, pth.node.types), \",\");\n+        result += \"]\";\n+    }\n+    ret result;\n+}\n+\n+\n //\n // Local Variables:\n // mode: rust"}, {"sha": "a9090c3624c19c01cdd731d9059de2ab81412448", "filename": "src/comp/metadata/tyencode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d39c59ae4172b18ea022893a09164dcb6debb1c0/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d39c59ae4172b18ea022893a09164dcb6debb1c0/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftyencode.rs?ref=d39c59ae4172b18ea022893a09164dcb6debb1c0", "patch": "@@ -232,7 +232,7 @@ fn enc_ty_fn(&io::writer w, &@ctxt cx, &ty::arg[] args, &ty::t out,\n \n }\n fn enc_constr(&io::writer w, &@ctxt cx, &@ty::constr_def c) {\n-    w.write_str(ty::path_to_str(c.node.path));\n+    w.write_str(path_to_str(c.node.path));\n     w.write_char('(');\n     w.write_str(cx.ds(c.node.id));\n     w.write_char('|');"}, {"sha": "f6a5b6413d0a68ff3dce4af4cf87f31655b767a2", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d39c59ae4172b18ea022893a09164dcb6debb1c0/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d39c59ae4172b18ea022893a09164dcb6debb1c0/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=d39c59ae4172b18ea022893a09164dcb6debb1c0", "patch": "@@ -423,7 +423,7 @@ fn resolve_constr(@env e, node_id id, &@ast::constr c, &scopes sc,\n             case (_) {\n                 e.sess.span_err(c.span,\n                                 \"Non-predicate in constraint: \" +\n-                                ty::path_to_str(c.node.path));\n+                                ast::path_to_str(c.node.path));\n             }\n         }\n     }"}, {"sha": "1b7e7878964e4875329a6d789a1067df70cced21", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d39c59ae4172b18ea022893a09164dcb6debb1c0/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d39c59ae4172b18ea022893a09164dcb6debb1c0/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=d39c59ae4172b18ea022893a09164dcb6debb1c0", "patch": "@@ -18,6 +18,7 @@ import front::ast::def_id;\n import front::ast::constr_arg_general;\n import front::ast::mutability;\n import front::ast::controlflow;\n+import front::ast::path_to_str;\n import metadata::creader;\n import metadata::decoder;\n import util::common::*;\n@@ -101,7 +102,6 @@ export node_type_table;\n export pat_node_id;\n export pat_ty;\n export cname;\n-export path_to_str;\n export rename;\n export ret_ty_of_fn;\n export ret_ty_of_fn_ty;\n@@ -632,19 +632,6 @@ fn cname(&ctxt cx, &t typ) -> option::t[str] {\n }\n \n \n-// Stringification\n-fn path_to_str(&ast::path pth) -> str {\n-    auto result = str::connect(pth.node.idents, \"::\");\n-    if (vec::len[@ast::ty](pth.node.types) > 0u) {\n-        fn f(&@ast::ty t) -> str { ret pretty::pprust::ty_to_str(*t); }\n-        result += \"[\";\n-        result += str::connect(vec::map(f, pth.node.types), \",\");\n-        result += \"]\";\n-    }\n-    ret result;\n-}\n-\n-\n // Type folds\n type ty_walk = fn(t) ;\n "}, {"sha": "c46c885ab6d8efd177d5b30bac3416e957026b7c", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d39c59ae4172b18ea022893a09164dcb6debb1c0/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d39c59ae4172b18ea022893a09164dcb6debb1c0/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=d39c59ae4172b18ea022893a09164dcb6debb1c0", "patch": "@@ -2,6 +2,7 @@\n import front::ast;\n import front::ast::mutability;\n import front::ast::local_def;\n+import front::ast::path_to_str;\n import metadata::decoder;\n import driver::session;\n import util::common;\n@@ -22,7 +23,6 @@ import middle::ty::mo_val;\n import middle::ty::mo_alias;\n import middle::ty::node_type_table;\n import middle::ty::pat_ty;\n-import middle::ty::path_to_str;\n import middle::ty::ty_param_substs_opt_and_ty;\n import pretty::ppaux::ty_to_str;\n import middle::ty::ty_param_count_and_ty;"}, {"sha": "396d37a80905b9b107c8344a4e2f783afff27222", "filename": "src/comp/pretty/ppaux.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d39c59ae4172b18ea022893a09164dcb6debb1c0/src%2Fcomp%2Fpretty%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d39c59ae4172b18ea022893a09164dcb6debb1c0/src%2Fcomp%2Fpretty%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fppaux.rs?ref=d39c59ae4172b18ea022893a09164dcb6debb1c0", "patch": "@@ -379,12 +379,12 @@ const uint default_columns = 78u;\n fn uint_to_str(&uint i) -> str { ret uistr(i); }\n \n fn constr_to_str(&@constr_def c) -> str {\n-    ret path_to_str(c.node.path) +\n+    ret ast::path_to_str(c.node.path) +\n             constr_args_to_str(uint_to_str, c.node.args);\n }\n \n fn ast_constr_to_str(&@front::ast::constr c) -> str {\n-    ret path_to_str(c.node.path) +\n+    ret ast::path_to_str(c.node.path) +\n             constr_args_to_str(uint_to_str, c.node.args);\n }\n "}]}