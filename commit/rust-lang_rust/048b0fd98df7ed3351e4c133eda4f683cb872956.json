{"sha": "048b0fd98df7ed3351e4c133eda4f683cb872956", "node_id": "C_kwDOAAsO6NoAKDA0OGIwZmQ5OGRmN2VkMzM1MWU0YzEzM2VkYTRmNjgzY2I4NzI5NTY", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-10-05T19:52:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-05T19:52:47Z"}, "message": "Rollup merge of #89523 - Aaron1011:derive-future-compat, r=wesleywiser\n\nMake `proc_macro_derive_resolution_fallback` a future-breakage lint\n\nWhen `cargo report future-incompatibilities` is stabilized\n(see #71249), this will cause dependencies that trigger\nthis lint to be included in the report.", "tree": {"sha": "386aba06bc5429d4d9f2dacdba062d1df1258fd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/386aba06bc5429d4d9f2dacdba062d1df1258fd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/048b0fd98df7ed3351e4c133eda4f683cb872956", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhXK0QCRBK7hj4Ov3rIwAA9iEIAE/h3B9+tDNqt9jKcva3JdiR\nNwNN398mt+EAp/WFv0NeElWaVWLR0kIZLp3Dh/xgo9rfKg5VBxcCnqhaE0FTLt2l\nRZfmAV7zUMHQKMJXIvQ2s18d2DnzH/pTnguUkgCl5L80CF7TwzIYyBRt9DHURDq9\nMDRgZZV1ZHppplKeFW4GnfgczrZhCN8tlxVSy0/4fpHLWQF3Fbw7iob/vQPUepLl\n+PBVy37PmqEKF0/zd+HKFN0bJLpvFhDiwLRcg0ga3BwecyTqzUP+RUReVNNU4P1k\n7Ve8twOQZuRHvfIDoeftQCZVEwJgdmD7Zvk2nQEN4svJutZTcJbpEnZLKA8tErA=\n=Sg3U\n-----END PGP SIGNATURE-----\n", "payload": "tree 386aba06bc5429d4d9f2dacdba062d1df1258fd7\nparent 4e8c853c9e419d70c3017683816af41db2f7a580\nparent 32a5abc6fe0f705210a9697804f20fe4f32a4160\nauthor Manish Goregaokar <manishsmail@gmail.com> 1633463567 -0700\ncommitter GitHub <noreply@github.com> 1633463567 -0700\n\nRollup merge of #89523 - Aaron1011:derive-future-compat, r=wesleywiser\n\nMake `proc_macro_derive_resolution_fallback` a future-breakage lint\n\nWhen `cargo report future-incompatibilities` is stabilized\n(see #71249), this will cause dependencies that trigger\nthis lint to be included in the report.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/048b0fd98df7ed3351e4c133eda4f683cb872956", "html_url": "https://github.com/rust-lang/rust/commit/048b0fd98df7ed3351e4c133eda4f683cb872956", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/048b0fd98df7ed3351e4c133eda4f683cb872956/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e8c853c9e419d70c3017683816af41db2f7a580", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e8c853c9e419d70c3017683816af41db2f7a580", "html_url": "https://github.com/rust-lang/rust/commit/4e8c853c9e419d70c3017683816af41db2f7a580"}, {"sha": "32a5abc6fe0f705210a9697804f20fe4f32a4160", "url": "https://api.github.com/repos/rust-lang/rust/commits/32a5abc6fe0f705210a9697804f20fe4f32a4160", "html_url": "https://github.com/rust-lang/rust/commit/32a5abc6fe0f705210a9697804f20fe4f32a4160"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "9d56bc193fb2958c6531583d51578fed3970b5d3", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/048b0fd98df7ed3351e4c133eda4f683cb872956/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/048b0fd98df7ed3351e4c133eda4f683cb872956/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=048b0fd98df7ed3351e4c133eda4f683cb872956", "patch": "@@ -1960,6 +1960,7 @@ declare_lint! {\n     \"detects proc macro derives using inaccessible names from parent modules\",\n     @future_incompatible = FutureIncompatibleInfo {\n         reference: \"issue #83583 <https://github.com/rust-lang/rust/issues/83583>\",\n+        reason: FutureIncompatibilityReason::FutureReleaseErrorReportNow,\n     };\n }\n "}, {"sha": "d6fd4baeb5ece7de355a3627c32bb13024ef8a58", "filename": "src/test/ui/proc-macro/generate-mod.stderr", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/048b0fd98df7ed3351e4c133eda4f683cb872956/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/048b0fd98df7ed3351e4c133eda4f683cb872956/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr?ref=048b0fd98df7ed3351e4c133eda4f683cb872956", "patch": "@@ -82,3 +82,75 @@ LL |     #[derive(generate_mod::CheckDerive)]\n error: aborting due to 4 previous errors; 4 warnings emitted\n \n For more information about this error, try `rustc --explain E0412`.\n+Future incompatibility report: Future breakage diagnostic:\n+warning: cannot find type `FromOutside` in this scope\n+  --> $DIR/generate-mod.rs:16:10\n+   |\n+LL | #[derive(generate_mod::CheckDerive)]\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^ names from parent modules are not accessible without an explicit import\n+   |\n+   = note: `#[warn(proc_macro_derive_resolution_fallback)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>\n+   = note: this warning originates in the derive macro `generate_mod::CheckDerive` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+Future breakage diagnostic:\n+warning: cannot find type `OuterDerive` in this scope\n+  --> $DIR/generate-mod.rs:16:10\n+   |\n+LL | #[derive(generate_mod::CheckDerive)]\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^ names from parent modules are not accessible without an explicit import\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>\n+   = note: this warning originates in the derive macro `generate_mod::CheckDerive` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+Future breakage diagnostic:\n+warning: cannot find type `FromOutside` in this scope\n+  --> $DIR/generate-mod.rs:23:14\n+   |\n+LL |     #[derive(generate_mod::CheckDerive)]\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^ names from parent modules are not accessible without an explicit import\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>\n+   = note: this warning originates in the derive macro `generate_mod::CheckDerive` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+Future breakage diagnostic:\n+warning: cannot find type `OuterDerive` in this scope\n+  --> $DIR/generate-mod.rs:23:14\n+   |\n+LL |     #[derive(generate_mod::CheckDerive)]\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^ names from parent modules are not accessible without an explicit import\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>\n+   = note: this warning originates in the derive macro `generate_mod::CheckDerive` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+Future breakage diagnostic:\n+warning: cannot find type `FromOutside` in this scope\n+  --> $DIR/generate-mod.rs:30:10\n+   |\n+LL | #[derive(generate_mod::CheckDeriveLint)] // OK, lint is suppressed\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ names from parent modules are not accessible without an explicit import\n+   |\n+note: the lint level is defined here\n+  --> $DIR/generate-mod.rs:30:10\n+   |\n+LL | #[derive(generate_mod::CheckDeriveLint)] // OK, lint is suppressed\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>\n+   = note: this warning originates in the derive macro `generate_mod::CheckDeriveLint` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+Future breakage diagnostic:\n+warning: cannot find type `OuterDeriveLint` in this scope\n+  --> $DIR/generate-mod.rs:30:10\n+   |\n+LL | #[derive(generate_mod::CheckDeriveLint)] // OK, lint is suppressed\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ names from parent modules are not accessible without an explicit import\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83583 <https://github.com/rust-lang/rust/issues/83583>\n+   = note: this warning originates in the derive macro `generate_mod::CheckDeriveLint` (in Nightly builds, run with -Z macro-backtrace for more info)\n+"}]}