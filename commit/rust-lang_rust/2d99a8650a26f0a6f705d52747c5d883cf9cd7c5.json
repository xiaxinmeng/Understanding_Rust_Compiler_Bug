{"sha": "2d99a8650a26f0a6f705d52747c5d883cf9cd7c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkOTlhODY1MGEyNmYwYTZmNzA1ZDUyNzQ3YzVkODgzY2Y5Y2Q3YzU=", "commit": {"author": {"name": "Andreas Jonson", "email": "andjo403@users.noreply.github.com", "date": "2021-04-11T16:38:05Z"}, "committer": {"name": "Andreas Jonson", "email": "andjo403@users.noreply.github.com", "date": "2021-04-11T17:13:27Z"}, "message": "stabilize const_cttz", "tree": {"sha": "51f9202e8003c14267566b74b55449a19b473fcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51f9202e8003c14267566b74b55449a19b473fcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d99a8650a26f0a6f705d52747c5d883cf9cd7c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d99a8650a26f0a6f705d52747c5d883cf9cd7c5", "html_url": "https://github.com/rust-lang/rust/commit/2d99a8650a26f0a6f705d52747c5d883cf9cd7c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d99a8650a26f0a6f705d52747c5d883cf9cd7c5/comments", "author": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea1252e7e3282fa8a3163ca424d6ed00a9dbe163", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea1252e7e3282fa8a3163ca424d6ed00a9dbe163", "html_url": "https://github.com/rust-lang/rust/commit/ea1252e7e3282fa8a3163ca424d6ed00a9dbe163"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "1ba0b23ae5be3c0d1bb03342bed35084bfcd8235", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d99a8650a26f0a6f705d52747c5d883cf9cd7c5/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d99a8650a26f0a6f705d52747c5d883cf9cd7c5/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=2d99a8650a26f0a6f705d52747c5d883cf9cd7c5", "patch": "@@ -1543,7 +1543,7 @@ extern \"rust-intrinsic\" {\n     /// let num_trailing = unsafe { cttz_nonzero(x) };\n     /// assert_eq!(num_trailing, 3);\n     /// ```\n-    #[rustc_const_unstable(feature = \"const_cttz\", issue = \"none\")]\n+    #[rustc_const_stable(feature = \"const_cttz\", since = \"1.53.0\")]\n     pub fn cttz_nonzero<T: Copy>(x: T) -> T;\n \n     /// Reverses the bytes in an integer type `T`."}, {"sha": "85866523d9f13af5a1bcc4e1a57a339cb4d4f3e5", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2d99a8650a26f0a6f705d52747c5d883cf9cd7c5/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d99a8650a26f0a6f705d52747c5d883cf9cd7c5/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=2d99a8650a26f0a6f705d52747c5d883cf9cd7c5", "patch": "@@ -79,7 +79,6 @@\n #![feature(const_int_unchecked_arith)]\n #![feature(const_mut_refs)]\n #![feature(const_refs_to_cell)]\n-#![feature(const_cttz)]\n #![feature(const_panic)]\n #![feature(const_pin)]\n #![feature(const_fn)]"}, {"sha": "2ccc5d27bbb781f5fc5138dc79a25e76c60bcaeb", "filename": "src/test/ui/consts/const-int-unchecked.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2d99a8650a26f0a6f705d52747c5d883cf9cd7c5/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d99a8650a26f0a6f705d52747c5d883cf9cd7c5/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.rs?ref=2d99a8650a26f0a6f705d52747c5d883cf9cd7c5", "patch": "@@ -186,4 +186,13 @@ const _: i32 = unsafe { std::intrinsics::unchecked_rem(i32::MIN, -1) };\n //~^ ERROR any use of this value will cause an error\n //~| WARN this was previously accepted by the compiler but is being phased out\n \n+// capture fault with zero value\n+\n+const _: u32 = unsafe { std::intrinsics::ctlz_nonzero(0) };\n+//~^ ERROR any use of this value will cause an error\n+//~| WARN this was previously accepted by the compiler but is being phased out\n+const _: u32 = unsafe { std::intrinsics::cttz_nonzero(0) };\n+//~^ ERROR any use of this value will cause an error\n+//~| WARN this was previously accepted by the compiler but is being phased out\n+\n fn main() {}"}, {"sha": "999b26543e2d51041141ecb42ad24186ba38c703", "filename": "src/test/ui/consts/const-int-unchecked.stderr", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2d99a8650a26f0a6f705d52747c5d883cf9cd7c5/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2d99a8650a26f0a6f705d52747c5d883cf9cd7c5/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr?ref=2d99a8650a26f0a6f705d52747c5d883cf9cd7c5", "patch": "@@ -516,5 +516,27 @@ LL | const _: i32 = unsafe { std::intrinsics::unchecked_rem(i32::MIN, -1) };\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n \n-error: aborting due to 47 previous errors\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:191:25\n+   |\n+LL | const _: u32 = unsafe { std::intrinsics::ctlz_nonzero(0) };\n+   | ------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n+   |                         |\n+   |                         `ctlz_nonzero` called on 0\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error: any use of this value will cause an error\n+  --> $DIR/const-int-unchecked.rs:194:25\n+   |\n+LL | const _: u32 = unsafe { std::intrinsics::cttz_nonzero(0) };\n+   | ------------------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n+   |                         |\n+   |                         `cttz_nonzero` called on 0\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error: aborting due to 49 previous errors\n "}]}