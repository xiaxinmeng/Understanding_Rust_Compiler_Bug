{"sha": "297dde9b1ad0c28922fac5046f77c2629cebf662", "node_id": "C_kwDOAAsO6NoAKDI5N2RkZTliMWFkMGMyODkyMmZhYzUwNDZmNzdjMjYyOWNlYmY2NjI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-02T21:28:09Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-02T21:28:09Z"}, "message": "Less manipulation of the callee_def_id.", "tree": {"sha": "a5e6eeaab40b95f9cc43ee59644dc96f3d46c269", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5e6eeaab40b95f9cc43ee59644dc96f3d46c269"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/297dde9b1ad0c28922fac5046f77c2629cebf662", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/297dde9b1ad0c28922fac5046f77c2629cebf662", "html_url": "https://github.com/rust-lang/rust/commit/297dde9b1ad0c28922fac5046f77c2629cebf662", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/297dde9b1ad0c28922fac5046f77c2629cebf662/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d3d9b26a424dc48b49a17c39159a3caaea9c3bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d3d9b26a424dc48b49a17c39159a3caaea9c3bf", "html_url": "https://github.com/rust-lang/rust/commit/2d3d9b26a424dc48b49a17c39159a3caaea9c3bf"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "2f0673b9a76b2d78a1bb247d7b0f566ea41ff97e", "filename": "compiler/rustc_mir_transform/src/inline.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/297dde9b1ad0c28922fac5046f77c2629cebf662/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/297dde9b1ad0c28922fac5046f77c2629cebf662/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs?ref=297dde9b1ad0c28922fac5046f77c2629cebf662", "patch": "@@ -176,7 +176,8 @@ impl<'tcx> Inliner<'tcx> {\n         callee: &Instance<'tcx>,\n     ) -> Result<(), &'static str> {\n         let caller_def_id = caller_body.source.def_id();\n-        if callee.def_id() == caller_def_id {\n+        let callee_def_id = callee.def_id();\n+        if callee_def_id == caller_def_id {\n             return Err(\"self-recursion\");\n         }\n \n@@ -185,7 +186,7 @@ impl<'tcx> Inliner<'tcx> {\n                 // If there is no MIR available (either because it was not in metadata or\n                 // because it has no MIR because it's an extern function), then the inliner\n                 // won't cause cycles on this.\n-                if !self.tcx.is_mir_available(callee.def_id()) {\n+                if !self.tcx.is_mir_available(callee_def_id) {\n                     return Err(\"item MIR unavailable\");\n                 }\n             }\n@@ -205,19 +206,19 @@ impl<'tcx> Inliner<'tcx> {\n             | InstanceDef::CloneShim(..) => return Ok(()),\n         }\n \n-        if self.tcx.is_constructor(callee.def_id()) {\n+        if self.tcx.is_constructor(callee_def_id) {\n             trace!(\"constructors always have MIR\");\n             // Constructor functions cannot cause a query cycle.\n             return Ok(());\n         }\n \n-        if let Some(callee_def_id) = callee.def_id().as_local() {\n+        if callee_def_id.is_local() {\n             // Avoid a cycle here by only using `instance_mir` only if we have\n             // a lower `DefPathHash` than the callee. This ensures that the callee will\n             // not inline us. This trick even works with incremental compilation,\n             // since `DefPathHash` is stable.\n             if self.tcx.def_path_hash(caller_def_id).local_hash()\n-                < self.tcx.def_path_hash(callee_def_id.to_def_id()).local_hash()\n+                < self.tcx.def_path_hash(callee_def_id).local_hash()\n             {\n                 return Ok(());\n             }"}]}