{"sha": "aa1cd6e707734d04df7f16fade00202e30a519d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhMWNkNmU3MDc3MzRkMDRkZjdmMTZmYWRlMDAyMDJlMzBhNTE5ZDI=", "commit": {"author": {"name": "Piotr Szotkowski", "email": "chastell@chastell.net", "date": "2014-10-26T08:40:13Z"}, "committer": {"name": "Piotr Szotkowski", "email": "chastell@chastell.net", "date": "2014-10-26T08:41:50Z"}, "message": "Guide: Patterns: use non-x variables in match blocks", "tree": {"sha": "cf913aafba59f234e26ec38a9ed914edab8f051b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf913aafba59f234e26ec38a9ed914edab8f051b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa1cd6e707734d04df7f16fade00202e30a519d2", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa1cd6e707734d04df7f16fade00202e30a519d2", "html_url": "https://github.com/rust-lang/rust/commit/aa1cd6e707734d04df7f16fade00202e30a519d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa1cd6e707734d04df7f16fade00202e30a519d2/comments", "author": {"login": "chastell", "id": 56633, "node_id": "MDQ6VXNlcjU2NjMz", "avatar_url": "https://avatars.githubusercontent.com/u/56633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chastell", "html_url": "https://github.com/chastell", "followers_url": "https://api.github.com/users/chastell/followers", "following_url": "https://api.github.com/users/chastell/following{/other_user}", "gists_url": "https://api.github.com/users/chastell/gists{/gist_id}", "starred_url": "https://api.github.com/users/chastell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chastell/subscriptions", "organizations_url": "https://api.github.com/users/chastell/orgs", "repos_url": "https://api.github.com/users/chastell/repos", "events_url": "https://api.github.com/users/chastell/events{/privacy}", "received_events_url": "https://api.github.com/users/chastell/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chastell", "id": 56633, "node_id": "MDQ6VXNlcjU2NjMz", "avatar_url": "https://avatars.githubusercontent.com/u/56633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chastell", "html_url": "https://github.com/chastell", "followers_url": "https://api.github.com/users/chastell/followers", "following_url": "https://api.github.com/users/chastell/following{/other_user}", "gists_url": "https://api.github.com/users/chastell/gists{/gist_id}", "starred_url": "https://api.github.com/users/chastell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chastell/subscriptions", "organizations_url": "https://api.github.com/users/chastell/orgs", "repos_url": "https://api.github.com/users/chastell/repos", "events_url": "https://api.github.com/users/chastell/events{/privacy}", "received_events_url": "https://api.github.com/users/chastell/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f168c12c5629afd45c9b3ed250350bf830b99642", "url": "https://api.github.com/repos/rust-lang/rust/commits/f168c12c5629afd45c9b3ed250350bf830b99642", "html_url": "https://github.com/rust-lang/rust/commit/f168c12c5629afd45c9b3ed250350bf830b99642"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "9b2c7adf92dd685ad0c81d1dd3cc9e6a14430140", "filename": "src/doc/guide.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/aa1cd6e707734d04df7f16fade00202e30a519d2/src%2Fdoc%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/aa1cd6e707734d04df7f16fade00202e30a519d2/src%2Fdoc%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide.md?ref=aa1cd6e707734d04df7f16fade00202e30a519d2", "patch": "@@ -3801,7 +3801,7 @@ the value to a name with `@`:\n let x = 1i;\n \n match x {\n-    x @ 1 ... 5 => println!(\"got {}\", x),\n+    e @ 1 ... 5 => println!(\"got a range element {}\", e),\n     _ => println!(\"anything\"),\n }\n ```\n@@ -3834,7 +3834,7 @@ enum OptionalInt {\n let x = Value(5i);\n \n match x {\n-    Value(x) if x > 5 => println!(\"Got an int bigger than five!\"),\n+    Value(i) if i > 5 => println!(\"Got an int bigger than five!\"),\n     Value(..) => println!(\"Got an int!\"),\n     Missing   => println!(\"No such luck.\"),\n }\n@@ -3847,12 +3847,12 @@ with. First, `&`:\n let x = &5i;\n \n match x {\n-    &x => println!(\"Got a value: {}\", x),\n+    &val => println!(\"Got a value: {}\", val),\n }\n ```\n \n-Here, the `x` inside the `match` has type `int`. In other words, the left hand\n-side of the pattern destructures the value. If we have `&5i`, then in `&x`, `x`\n+Here, the `val` inside the `match` has type `int`. In other words, the left hand\n+side of the pattern destructures the value. If we have `&5i`, then in `&val`, `val`\n would be `5i`.\n \n If you want to get a reference, use the `ref` keyword:\n@@ -3861,19 +3861,19 @@ If you want to get a reference, use the `ref` keyword:\n let x = 5i;\n \n match x {\n-    ref x => println!(\"Got a reference to {}\", x),\n+    ref r => println!(\"Got a reference to {}\", r),\n }\n ```\n \n-Here, the `x` inside the `match` has the type `&int`. In other words, the `ref`\n+Here, the `r` inside the `match` has the type `&int`. In other words, the `ref`\n keyword _creates_ a reference, for use in the pattern. If you need a mutable\n reference, `ref mut` will work in the same way:\n \n ```{rust}\n let mut x = 5i;\n \n match x {\n-    ref mut x => println!(\"Got a mutable reference to {}\", x),\n+    ref mut mr => println!(\"Got a mutable reference to {}\", mr),\n }\n ```\n "}]}