{"sha": "336be1d644ff2d07f6d9188afd7fbd33a6c1671a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNmJlMWQ2NDRmZjJkMDdmNmQ5MTg4YWZkN2ZiZDMzYTZjMTY3MWE=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-08-03T06:53:21Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-08-03T06:53:45Z"}, "message": "Fix build breakage", "tree": {"sha": "d701ebdff0ceb6b726ea2f273daf6e7ce4cccac5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d701ebdff0ceb6b726ea2f273daf6e7ce4cccac5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/336be1d644ff2d07f6d9188afd7fbd33a6c1671a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/336be1d644ff2d07f6d9188afd7fbd33a6c1671a", "html_url": "https://github.com/rust-lang/rust/commit/336be1d644ff2d07f6d9188afd7fbd33a6c1671a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/336be1d644ff2d07f6d9188afd7fbd33a6c1671a/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "948172b93fc5d31b7234ad98ff6bac466401a86a", "url": "https://api.github.com/repos/rust-lang/rust/commits/948172b93fc5d31b7234ad98ff6bac466401a86a", "html_url": "https://github.com/rust-lang/rust/commit/948172b93fc5d31b7234ad98ff6bac466401a86a"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "cf25eaf060755e839f16dfd3459f05df34857928", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/336be1d644ff2d07f6d9188afd7fbd33a6c1671a/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/336be1d644ff2d07f6d9188afd7fbd33a6c1671a/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=336be1d644ff2d07f6d9188afd7fbd33a6c1671a", "patch": "@@ -1475,11 +1475,10 @@ fn check_expr_with_unifier(fcx: @fn_ctxt,\n         capture::check_capture_clause(tcx, expr.id, cap_clause);\n       }\n       ast::expr_fn_block(decl, body, cap_clause) {\n+         // Take the prototype from the expected type, but default to block:\n           let proto = unpack_expected(fcx, expected, |sty|\n               alt sty { ty::ty_fn({proto, _}) { some(proto) } _ { none } }\n           ).get_default(ast::proto_box);\n-        // Take the prototype from the expected type, but default to block:\n-          let proto = proto_1.get_default(ast::proto_box);\n         check_expr_fn(fcx, expr, proto, decl, body, false, expected);\n         capture::check_capture_clause(tcx, expr.id, cap_clause);\n       }"}]}