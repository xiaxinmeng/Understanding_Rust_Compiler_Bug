{"sha": "825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyNWNmNTFhZDdkMjU3OGZjZDYwYTBiN2IxMDdkN2IwYWIzMDE3ZmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-28T22:18:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-28T22:18:03Z"}, "message": "Auto merge of #71486 - alexcrichton:arm64-lld, r=Mark-Simulacrum\n\nEnable \"full tools\" option on ARM dist builders\n\nThis commit switches the `--enable-extended` option on the arm-related\ndist builders to `--enable-full-tools`. This alias in `config.py`\ncorresponds to enabling a few more options:\n\n* `rust.lld = true` - this is the main purpose of this PR, to enable LLD\n  on ARM-related platforms. This means it will effectively unlock\n  compilation of wasm programs from an arm host.\n\n* `rust.llvm-tools = true` - it turns out that this option is largely\n  ignored in rustbuild today. This is only read in one location to set\n  some flags for the `llvm-tools` package, but the `llvm-tools` package\n  is already produced on all of these builders. It's predicted that this\n  will have no effect on build times.\n\n* `rust.codegen-backends = ['llvm']` - historically this also enabled\n  the emscripten backend, but that has long since been removed.\n\nThis brings the ARM dist builders in line with the x86_64 dist builders\nusing this flag. The hope is that the extra time spent on CI building\nLLD will acceptable because it's cached by `sccache`, LLD is a\nrelatively small C++ project, and the dist builders are all clocking\nwell under 3 hours (the slowest of all builders) around 2 hours.\n\nThere's likely some possible cleanup that can happen with these\nconfigure options since it doesn't look like they've aged too too well,\nbut I'm hopeful that possible refactorings, if necessary, could be\ndeferred to future PRs.", "tree": {"sha": "4a27066514f07ff70765cf8b3cbb0b8e4230b9cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a27066514f07ff70765cf8b3cbb0b8e4230b9cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff", "html_url": "https://github.com/rust-lang/rust/commit/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6470169237833d02c399568a375d9b47cbfaeccc", "url": "https://api.github.com/repos/rust-lang/rust/commits/6470169237833d02c399568a375d9b47cbfaeccc", "html_url": "https://github.com/rust-lang/rust/commit/6470169237833d02c399568a375d9b47cbfaeccc"}, {"sha": "0546d115288ce0d6c3a819909de12fba5ce673fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/0546d115288ce0d6c3a819909de12fba5ce673fd", "html_url": "https://github.com/rust-lang/rust/commit/0546d115288ce0d6c3a819909de12fba5ce673fd"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "89984bb55dfd82380ade435c25e362176592a593", "filename": "src/bootstrap/bin/llvm-config-wrapper.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff/src%2Fbootstrap%2Fbin%2Fllvm-config-wrapper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff/src%2Fbootstrap%2Fbin%2Fllvm-config-wrapper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Fllvm-config-wrapper.rs?ref=825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff", "patch": "@@ -10,7 +10,14 @@ fn main() {\n     let mut cmd = Command::new(real_llvm_config);\n     cmd.args(env::args().skip(1)).stderr(Stdio::piped());\n     let output = cmd.output().expect(\"failed to spawn llvm-config\");\n-    let stdout = String::from_utf8_lossy(&output.stdout);\n+    let mut stdout = String::from_utf8_lossy(&output.stdout);\n+\n+    if let Ok(to_replace) = env::var(\"LLVM_CONFIG_SHIM_REPLACE\") {\n+        if let Ok(replace_with) = env::var(\"LLVM_CONFIG_SHIM_REPLACE_WITH\") {\n+            stdout = stdout.replace(&to_replace, &replace_with).into();\n+        }\n+    }\n+\n     print!(\"{}\", stdout.replace(\"\\\\\", \"/\"));\n     io::stdout().flush().unwrap();\n     process::exit(output.status.code().unwrap_or(1));"}, {"sha": "0f39e33c5f46a2e346da835235bb25015ef2502a", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff", "patch": "@@ -479,10 +479,29 @@ impl Step for Lld {\n         let llvm_config_shim = env::current_exe().unwrap().with_file_name(\"llvm-config-wrapper\");\n         cfg.out_dir(&out_dir)\n             .profile(\"Release\")\n-            .env(\"LLVM_CONFIG_REAL\", llvm_config)\n+            .env(\"LLVM_CONFIG_REAL\", &llvm_config)\n             .define(\"LLVM_CONFIG_PATH\", llvm_config_shim)\n             .define(\"LLVM_INCLUDE_TESTS\", \"OFF\");\n \n+        // While we're using this horrible workaround to shim the execution of\n+        // llvm-config, let's just pile on more. I can't seem to figure out how\n+        // to build LLD as a standalone project and also cross-compile it at the\n+        // same time. It wants a natively executable `llvm-config` to learn\n+        // about LLVM, but then it learns about all the host configuration of\n+        // LLVM and tries to link to host LLVM libraries.\n+        //\n+        // To work around that we tell our shim to replace anything with the\n+        // build target with the actual target instead. This'll break parts of\n+        // LLD though which try to execute host tools, such as llvm-tblgen, so\n+        // we specifically tell it where to find those. This is likely super\n+        // brittle and will break over time. If anyone knows better how to\n+        // cross-compile LLD it would be much appreciated to fix this!\n+        if target != builder.config.build {\n+            cfg.env(\"LLVM_CONFIG_SHIM_REPLACE\", &builder.config.build)\n+                .env(\"LLVM_CONFIG_SHIM_REPLACE_WITH\", &target)\n+                .define(\"LLVM_TABLEGEN_EXE\", llvm_config.with_file_name(\"llvm-tblgen\"));\n+        }\n+\n         cfg.build();\n \n         t!(File::create(&done_stamp));"}, {"sha": "74766dc970d9f8fbcfb173ce21c6101824c499a0", "filename": "src/ci/docker/dist-aarch64-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2FDockerfile?ref=825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff", "patch": "@@ -33,7 +33,7 @@ ENV CC_aarch64_unknown_linux_gnu=aarch64-unknown-linux-gnueabi-gcc \\\n ENV HOSTS=aarch64-unknown-linux-gnu\n \n ENV RUST_CONFIGURE_ARGS \\\n-      --enable-extended \\\n+      --enable-full-tools \\\n       --enable-profiler \\\n       --disable-docs\n ENV SCRIPT python3 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "06870a8a982f3ab40e9c24a7c730770ac7405d12", "filename": "src/ci/docker/dist-arm-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile?ref=825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff", "patch": "@@ -27,5 +27,5 @@ ENV CC_arm_unknown_linux_gnueabi=arm-unknown-linux-gnueabi-gcc \\\n \n ENV HOSTS=arm-unknown-linux-gnueabi\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n+ENV RUST_CONFIGURE_ARGS --enable-full-tools --disable-docs\n ENV SCRIPT python3 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "155dd84891435e5ed4bb7ce4f2ed375d9b137049", "filename": "src/ci/docker/dist-armhf-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile?ref=825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff", "patch": "@@ -27,5 +27,5 @@ ENV CC_arm_unknown_linux_gnueabihf=arm-unknown-linux-gnueabihf-gcc \\\n \n ENV HOSTS=arm-unknown-linux-gnueabihf\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n+ENV RUST_CONFIGURE_ARGS --enable-full-tools --disable-docs\n ENV SCRIPT python3 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "649049da5dfe314719af3cfd920eb0ad9d83def6", "filename": "src/ci/docker/dist-armv7-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile?ref=825cf51ad7d2578fcd60a0b7b107d7b0ab3017ff", "patch": "@@ -27,5 +27,5 @@ ENV CC_armv7_unknown_linux_gnueabihf=armv7-unknown-linux-gnueabihf-gcc \\\n \n ENV HOSTS=armv7-unknown-linux-gnueabihf\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n+ENV RUST_CONFIGURE_ARGS --enable-full-tools --disable-docs\n ENV SCRIPT python3 ../x.py dist --host $HOSTS --target $HOSTS"}]}