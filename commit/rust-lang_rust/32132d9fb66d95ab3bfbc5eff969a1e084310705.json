{"sha": "32132d9fb66d95ab3bfbc5eff969a1e084310705", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMTMyZDlmYjY2ZDk1YWIzYmZiYzVlZmY5NjlhMWUwODQzMTA3MDU=", "commit": {"author": {"name": "lukaramu", "email": "lukaramu@users.noreply.github.com", "date": "2017-04-17T20:51:12Z"}, "committer": {"name": "lukaramu", "email": "lukaramu@users.noreply.github.com", "date": "2017-04-17T20:51:12Z"}, "message": "Expand std::path::Display's docs\n\nPart of #29368.\n* Added explanation for why the struct exists\n* Added link to where it is created\n* Added example", "tree": {"sha": "9a4e9f684a2691051312d08dea4ea9ef59657fb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a4e9f684a2691051312d08dea4ea9ef59657fb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32132d9fb66d95ab3bfbc5eff969a1e084310705", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32132d9fb66d95ab3bfbc5eff969a1e084310705", "html_url": "https://github.com/rust-lang/rust/commit/32132d9fb66d95ab3bfbc5eff969a1e084310705", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32132d9fb66d95ab3bfbc5eff969a1e084310705/comments", "author": null, "committer": null, "parents": [{"sha": "51ca5fe716c48b2dd4adbe4e2379d952b60afca8", "url": "https://api.github.com/repos/rust-lang/rust/commits/51ca5fe716c48b2dd4adbe4e2379d952b60afca8", "html_url": "https://github.com/rust-lang/rust/commit/51ca5fe716c48b2dd4adbe4e2379d952b60afca8"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "ce13b57f0a288689f13f37f04b5e26c24b2b5f98", "filename": "src/libstd/path.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/32132d9fb66d95ab3bfbc5eff969a1e084310705/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32132d9fb66d95ab3bfbc5eff969a1e084310705/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=32132d9fb66d95ab3bfbc5eff969a1e084310705", "patch": "@@ -2236,7 +2236,26 @@ impl fmt::Debug for Path {\n     }\n }\n \n-/// Helper struct for safely printing paths with `format!()` and `{}`\n+/// Helper struct for safely printing paths with [`format!`] and `{}`.\n+///\n+/// A [`Path`] might contain non-Unicode data. This `struct` implements the\n+/// [`Display`] trait in a way that mitigates that. It is created by the\n+/// [`display`][`Path::display`] method on [`Path`].\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::path::Path;\n+///\n+/// let path = Path::new(\"/tmp/foo.rs\");\n+///\n+/// println!(\"{}\", path.display());\n+/// ```\n+///\n+/// [`Display`]: ../../std/fmt/trait.Display.html\n+/// [`format!`]: ../../std/macro.format.html\n+/// [`Path`]: struct.Path.html\n+/// [`Path::display`]: struct.Path.html#method.display\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Display<'a> {\n     path: &'a Path,"}]}