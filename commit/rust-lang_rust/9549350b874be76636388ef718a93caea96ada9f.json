{"sha": "9549350b874be76636388ef718a93caea96ada9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1NDkzNTBiODc0YmU3NjYzNjM4OGVmNzE4YTkzY2FlYTk2YWRhOWY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-26T18:15:57Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-27T16:37:05Z"}, "message": "Refactor signaling of E0223 to avoid multiple span_errs for same code.", "tree": {"sha": "507e7578862a6b588663c0bd1bc559d9836df2df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/507e7578862a6b588663c0bd1bc559d9836df2df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9549350b874be76636388ef718a93caea96ada9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9549350b874be76636388ef718a93caea96ada9f", "html_url": "https://github.com/rust-lang/rust/commit/9549350b874be76636388ef718a93caea96ada9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9549350b874be76636388ef718a93caea96ada9f/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26518236149dd3435e1d1f15627b56dc713e8524", "url": "https://api.github.com/repos/rust-lang/rust/commits/26518236149dd3435e1d1f15627b56dc713e8524", "html_url": "https://github.com/rust-lang/rust/commit/26518236149dd3435e1d1f15627b56dc713e8524"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "d9dc050aebf10d13e251f192e9f9113187b9af79", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9549350b874be76636388ef718a93caea96ada9f/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9549350b874be76636388ef718a93caea96ada9f/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=9549350b874be76636388ef718a93caea96ada9f", "patch": "@@ -991,6 +991,17 @@ fn trait_ref_to_object_type<'tcx>(this: &AstConv<'tcx>,\n     result\n }\n \n+fn report_ambiguous_associated_type(tcx: &ty::ctxt,\n+                                    span: Span,\n+                                    type_str: &str,\n+                                    trait_str: &str,\n+                                    name: &str) {\n+    span_err!(tcx.sess, span, E0223,\n+              \"ambiguous associated type; specify the type using the syntax \\\n+               `<{} as {}>::{}`\",\n+              type_str, trait_str, name);\n+}\n+\n fn associated_path_def_to_ty<'tcx>(this: &AstConv<'tcx>,\n                                    span: Span,\n                                    ty: Ty<'tcx>,\n@@ -1011,10 +1022,8 @@ fn associated_path_def_to_ty<'tcx>(this: &AstConv<'tcx>,\n     let ty_param_node_id = if is_param {\n         ty_path_def.local_node_id()\n     } else {\n-        span_err!(tcx.sess, span, E0223,\n-                \"ambiguous associated type; specify the type using the syntax \\\n-                `<{} as Trait>::{}`\",\n-                ty.user_string(tcx), token::get_name(assoc_name));\n+        report_ambiguous_associated_type(\n+            tcx, span, &ty.user_string(tcx), \"Trait\", &token::get_name(assoc_name));\n         return (tcx.types.err, ty_path_def);\n     };\n \n@@ -1109,10 +1118,8 @@ fn qpath_to_ty<'tcx>(this: &AstConv<'tcx>,\n         ty\n     } else {\n         let path_str = ty::item_path_str(tcx, trait_def_id);\n-        span_err!(tcx.sess, span, E0223,\n-                  \"ambiguous associated type; specify the type using the syntax \\\n-                   `<Type as {}>::{}`\",\n-                   path_str, &token::get_ident(item_segment.identifier));\n+        report_ambiguous_associated_type(\n+            tcx, span, \"Type\", &path_str, &token::get_ident(item_segment.identifier));\n         return tcx.types.err;\n     };\n "}]}