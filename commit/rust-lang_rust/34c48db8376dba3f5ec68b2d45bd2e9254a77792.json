{"sha": "34c48db8376dba3f5ec68b2d45bd2e9254a77792", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0YzQ4ZGI4Mzc2ZGJhM2Y1ZWM2OGIyZDQ1YmQyZTkyNTRhNzc3OTI=", "commit": {"author": {"name": "Kevin Butler", "email": "haqkrs@gmail.com", "date": "2015-03-17T20:23:42Z"}, "committer": {"name": "Kevin Butler", "email": "haqkrs@gmail.com", "date": "2015-03-17T20:37:20Z"}, "message": "Fix documentation for StrExt::trim_matches", "tree": {"sha": "4a3ca7dfb97f222b893d2d8ec42198346fccab05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a3ca7dfb97f222b893d2d8ec42198346fccab05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34c48db8376dba3f5ec68b2d45bd2e9254a77792", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34c48db8376dba3f5ec68b2d45bd2e9254a77792", "html_url": "https://github.com/rust-lang/rust/commit/34c48db8376dba3f5ec68b2d45bd2e9254a77792", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34c48db8376dba3f5ec68b2d45bd2e9254a77792/comments", "author": {"login": "Ryman", "id": 994978, "node_id": "MDQ6VXNlcjk5NDk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/994978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryman", "html_url": "https://github.com/Ryman", "followers_url": "https://api.github.com/users/Ryman/followers", "following_url": "https://api.github.com/users/Ryman/following{/other_user}", "gists_url": "https://api.github.com/users/Ryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryman/subscriptions", "organizations_url": "https://api.github.com/users/Ryman/orgs", "repos_url": "https://api.github.com/users/Ryman/repos", "events_url": "https://api.github.com/users/Ryman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ryman", "id": 994978, "node_id": "MDQ6VXNlcjk5NDk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/994978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryman", "html_url": "https://github.com/Ryman", "followers_url": "https://api.github.com/users/Ryman/followers", "following_url": "https://api.github.com/users/Ryman/following{/other_user}", "gists_url": "https://api.github.com/users/Ryman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryman/subscriptions", "organizations_url": "https://api.github.com/users/Ryman/orgs", "repos_url": "https://api.github.com/users/Ryman/repos", "events_url": "https://api.github.com/users/Ryman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfac337daab9b86971bcb3db61382ac44f94621c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfac337daab9b86971bcb3db61382ac44f94621c", "html_url": "https://github.com/rust-lang/rust/commit/bfac337daab9b86971bcb3db61382ac44f94621c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f48b8d42ab1065a3eb89074ffcb96b481b51788f", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/34c48db8376dba3f5ec68b2d45bd2e9254a77792/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34c48db8376dba3f5ec68b2d45bd2e9254a77792/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=34c48db8376dba3f5ec68b2d45bd2e9254a77792", "patch": "@@ -923,11 +923,11 @@ pub trait StrExt: Index<RangeFull, Output = str> {\n \n     /// Returns a string with all pre- and suffixes that match a pattern repeatedly removed.\n     ///\n-    /// The pattern can be a simple `&str`, or a closure that determines the split.\n+    /// The pattern can be any `DoubleEndedSearcher`, including a closure that determines the split.\n     ///\n     /// # Examples\n     ///\n-    /// Simple `&str` patterns:\n+    /// Simple `char` patterns:\n     ///\n     /// ```\n     /// assert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");"}]}