{"sha": "87dc8242484110c75596a91ebd2043a476c09839", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZGM4MjQyNDg0MTEwYzc1NTk2YTkxZWJkMjA0M2E0NzZjMDk4Mzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-30T12:05:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-30T12:05:48Z"}, "message": "Auto merge of #87237 - jonas-schievink:const-for-and-try, r=oli-obk\n\nAdd feature gates for `for` and `?` in consts\n\nThese operations seems *relatively* straightforward to support, and only seem to be blocked on `impl const Trait`.\n\nI have included a working test for `const_try`, but `const_for` is currently unusable without reimplementing *every single* defaulted `Iterator` method, so I didn't do that.\n\n(both features still need tracking issues before this is merged)", "tree": {"sha": "00eb86f03f25d8707dd1784052d813dcc4cb0803", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00eb86f03f25d8707dd1784052d813dcc4cb0803"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87dc8242484110c75596a91ebd2043a476c09839", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87dc8242484110c75596a91ebd2043a476c09839", "html_url": "https://github.com/rust-lang/rust/commit/87dc8242484110c75596a91ebd2043a476c09839", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87dc8242484110c75596a91ebd2043a476c09839/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1195bea5a7b73e079fa14b37ac7e375fc77d368a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1195bea5a7b73e079fa14b37ac7e375fc77d368a", "html_url": "https://github.com/rust-lang/rust/commit/1195bea5a7b73e079fa14b37ac7e375fc77d368a"}, {"sha": "c5a29f92450c5d1191754000d37611af5e19f38b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5a29f92450c5d1191754000d37611af5e19f38b", "html_url": "https://github.com/rust-lang/rust/commit/c5a29f92450c5d1191754000d37611af5e19f38b"}], "stats": {"total": 196, "additions": 162, "deletions": 34}, "files": [{"sha": "9a8ef3b840dffc12aac7afd7cc994a9c1e662bf8", "filename": "compiler/rustc_error_codes/src/error_codes/E0744.md", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0744.md", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0744.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0744.md?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -2,25 +2,15 @@ An unsupported expression was used inside a const context.\n \n Erroneous code example:\n \n-```compile_fail,E0744\n+```compile_fail,edition2018,E0744\n const _: i32 = {\n-    let mut x = 0;\n-\n-    for i in 0..4 { // error!\n-        x += i;\n-    }\n+    async { 0 }.await\n };\n ```\n \n-At the moment, `for` loops, `.await`, and the `Try` operator (`?`) are forbidden\n-inside a `const`, `static`, or `const fn`.\n+At the moment, `.await` is forbidden inside a `const`, `static`, or `const fn`.\n \n This may be allowed at some point in the future, but the implementation is not\n-yet complete. See the tracking issues for [`async`] and [`?`] in `const fn`, and\n-(to support `for` loops in `const fn`) the tracking issues for [`impl const\n-Trait for Ty`] and [`&mut T`] in `const fn`.\n+yet complete. See the tracking issue for [`async`] in `const fn`.\n \n [`async`]: https://github.com/rust-lang/rust/issues/69431\n-[`?`]: https://github.com/rust-lang/rust/issues/74935\n-[`impl const Trait for Ty`]: https://github.com/rust-lang/rust/issues/67792\n-[`&mut T`]: https://github.com/rust-lang/rust/issues/57349"}, {"sha": "1ec9a0518b809d7c8c4376530209beee0cd0d534", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -677,6 +677,12 @@ declare_features! (\n     /// Allows `#[derive(Default)]` and `#[default]` on enums.\n     (active, derive_default_enum, \"1.56.0\", Some(86985), None),\n \n+    /// Allows `for _ in _` loops in const contexts.\n+    (active, const_for, \"1.56.0\", Some(87575), None),\n+\n+    /// Allows the `?` operator in const contexts.\n+    (active, const_try, \"1.56.0\", Some(74935), None),\n+\n     // -------------------------------------------------------------------------\n     // feature-group-end: actual feature gates\n     // -------------------------------------------------------------------------"}, {"sha": "f6a93f5e02d5fec22a87de5b695b34c4124c67e6", "filename": "compiler/rustc_passes/src/check_const.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/compiler%2Frustc_passes%2Fsrc%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/compiler%2Frustc_passes%2Fsrc%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_const.rs?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -40,13 +40,14 @@ impl NonConstExpr {\n         use hir::MatchSource::*;\n \n         let gates: &[_] = match self {\n-            // A `for` loop's desugaring contains a call to `IntoIterator::into_iter`,\n-            // so they are not yet allowed.\n-            // Likewise, `?` desugars to a call to `Try::into_result`.\n-            Self::Loop(ForLoop) | Self::Match(ForLoopDesugar | TryDesugar | AwaitDesugar) => {\n+            Self::Match(AwaitDesugar) => {\n                 return None;\n             }\n \n+            Self::Loop(ForLoop) | Self::Match(ForLoopDesugar) => &[sym::const_for],\n+\n+            Self::Match(TryDesugar) => &[sym::const_try],\n+\n             Self::Match(IfLetGuardDesugar) => bug!(\"`if let` guard outside a `match` expression\"),\n \n             // All other expressions are allowed."}, {"sha": "295e53aba35421349818352a80629e6ab45e68c0", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -410,6 +410,7 @@ symbols! {\n         const_fn_transmute,\n         const_fn_union,\n         const_fn_unsize,\n+        const_for,\n         const_format_args,\n         const_generic_defaults,\n         const_generics,\n@@ -432,6 +433,7 @@ symbols! {\n         const_trait_bound_opt_out,\n         const_trait_impl,\n         const_transmute,\n+        const_try,\n         constant,\n         constructor,\n         contents,"}, {"sha": "948c162e8946d8c3a8a54d8ff6445b55727ebee5", "filename": "src/test/ui/consts/const-fn-error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.rs?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -7,7 +7,7 @@ const fn f(x: usize) -> usize {\n         //~| ERROR calls in constant functions\n         //~| ERROR calls in constant functions\n         //~| ERROR E0080\n-        //~| ERROR E0744\n+        //~| ERROR `for` is not allowed in a `const fn`\n         sum += i;\n     }\n     sum"}, {"sha": "df24585e5551ac0e0018d09f6d125428666685dd", "filename": "src/test/ui/consts/const-fn-error.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-error.stderr?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -1,4 +1,4 @@\n-error[E0744]: `for` is not allowed in a `const fn`\n+error[E0658]: `for` is not allowed in a `const fn`\n   --> $DIR/const-fn-error.rs:5:5\n    |\n LL | /     for i in 0..x {\n@@ -9,6 +9,9 @@ LL | |\n LL | |         sum += i;\n LL | |     }\n    | |_____^\n+   |\n+   = note: see issue #87575 <https://github.com/rust-lang/rust/issues/87575> for more information\n+   = help: add `#![feature(const_for)]` to the crate attributes to enable\n \n error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n   --> $DIR/const-fn-error.rs:5:14\n@@ -45,5 +48,5 @@ LL |     let a : [i32; f(X)];\n \n error: aborting due to 5 previous errors\n \n-Some errors have detailed explanations: E0015, E0080, E0658, E0744.\n+Some errors have detailed explanations: E0015, E0080, E0658.\n For more information about an error, try `rustc --explain E0015`."}, {"sha": "bec7b808905360a7b0bb1bb0ac30ac5c4358a0fa", "filename": "src/test/ui/consts/const-for-feature-gate.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-for-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-for-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-for-feature-gate.rs?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -0,0 +1,8 @@\n+// gate-test-const_for\n+\n+const _: () = {\n+    for _ in 0..5 {}\n+    //~^ error: `for` is not allowed in a `const`\n+};\n+\n+fn main() {}"}, {"sha": "2ea377e09f61eaf4df483e78aacd34d8c82f802e", "filename": "src/test/ui/consts/const-for-feature-gate.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-for-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-for-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-for-feature-gate.stderr?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: `for` is not allowed in a `const`\n+  --> $DIR/const-for-feature-gate.rs:4:5\n+   |\n+LL |     for _ in 0..5 {}\n+   |     ^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #87575 <https://github.com/rust-lang/rust/issues/87575> for more information\n+   = help: add `#![feature(const_for)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "5fc1ee0e36948156eb9585d5910085e626d762e4", "filename": "src/test/ui/consts/const-for.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-for.rs?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -0,0 +1,10 @@\n+#![feature(const_for)]\n+#![feature(const_mut_refs)]\n+\n+const _: () = {\n+    for _ in 0..5 {}\n+    //~^ error: calls in constants are limited to\n+    //~| error: calls in constants are limited to\n+};\n+\n+fn main() {}"}, {"sha": "a35c04b3570b2e542fdf960ec586c5a70bd2e318", "filename": "src/test/ui/consts/const-for.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-for.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-for.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-for.stderr?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -0,0 +1,15 @@\n+error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+  --> $DIR/const-for.rs:5:14\n+   |\n+LL |     for _ in 0..5 {}\n+   |              ^^^^\n+\n+error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n+  --> $DIR/const-for.rs:5:14\n+   |\n+LL |     for _ in 0..5 {}\n+   |              ^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0015`."}, {"sha": "0839c23a0b99bb7b66b03e5d4526c3489cca08ec", "filename": "src/test/ui/consts/const-try-feature-gate.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-try-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-try-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-try-feature-gate.rs?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -0,0 +1,9 @@\n+// gate-test-const_try\n+\n+const fn t() -> Option<()> {\n+    Some(())?;\n+    //~^ error: `?` is not allowed in a `const fn`\n+    None\n+}\n+\n+fn main() {}"}, {"sha": "cd1a0630432071d4437fc015d9a08223742385b8", "filename": "src/test/ui/consts/const-try-feature-gate.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-try-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-try-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-try-feature-gate.stderr?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: `?` is not allowed in a `const fn`\n+  --> $DIR/const-try-feature-gate.rs:4:5\n+   |\n+LL |     Some(())?;\n+   |     ^^^^^^^^^\n+   |\n+   = note: see issue #74935 <https://github.com/rust-lang/rust/issues/74935> for more information\n+   = help: add `#![feature(const_try)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "e199fd9ff8a1af5cf8b0b0e16ca645ab8cdcb950", "filename": "src/test/ui/consts/const-try.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-try.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fconst-try.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-try.rs?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -0,0 +1,39 @@\n+// check-pass\n+\n+// Demonstrates what's needed to make use of `?` in const contexts.\n+\n+#![crate_type = \"lib\"]\n+#![feature(try_trait_v2)]\n+#![feature(const_trait_impl)]\n+#![feature(const_try)]\n+\n+use std::ops::{ControlFlow, FromResidual, Try};\n+\n+struct TryMe;\n+struct Error;\n+\n+impl const FromResidual<Error> for TryMe {\n+    fn from_residual(residual: Error) -> Self {\n+        TryMe\n+    }\n+}\n+\n+impl const Try for TryMe {\n+    type Output = ();\n+    type Residual = Error;\n+    fn from_output(output: Self::Output) -> Self {\n+        TryMe\n+    }\n+    fn branch(self) -> ControlFlow<Self::Residual, Self::Output> {\n+        ControlFlow::Break(Error)\n+    }\n+}\n+\n+const fn t() -> TryMe {\n+    TryMe?;\n+    TryMe\n+}\n+\n+const _: () = {\n+    t();\n+};"}, {"sha": "5f6ad8c105d7433cbc2781d9f97f9b10f3796150", "filename": "src/test/ui/consts/control-flow/loop.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Floop.stderr?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -1,19 +1,25 @@\n-error[E0744]: `for` is not allowed in a `const`\n+error[E0658]: `for` is not allowed in a `const`\n   --> $DIR/loop.rs:53:5\n    |\n LL | /     for i in 0..4 {\n LL | |         x += i;\n LL | |     }\n    | |_____^\n+   |\n+   = note: see issue #87575 <https://github.com/rust-lang/rust/issues/87575> for more information\n+   = help: add `#![feature(const_for)]` to the crate attributes to enable\n \n-error[E0744]: `for` is not allowed in a `const`\n+error[E0658]: `for` is not allowed in a `const`\n   --> $DIR/loop.rs:57:5\n    |\n LL | /     for i in 0..4 {\n LL | |         x += i;\n LL | |     }\n    | |_____^\n+   |\n+   = note: see issue #87575 <https://github.com/rust-lang/rust/issues/87575> for more information\n+   = help: add `#![feature(const_for)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0744`.\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "5aeec8fbf8665c18c5ef73f6a2d9213497918b6b", "filename": "src/test/ui/consts/control-flow/try.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Ftry.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Ftry.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Ftry.stderr?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -1,9 +1,12 @@\n-error[E0744]: `?` is not allowed in a `const fn`\n+error[E0658]: `?` is not allowed in a `const fn`\n   --> $DIR/try.rs:6:5\n    |\n LL |     x?;\n    |     ^^\n+   |\n+   = note: see issue #74935 <https://github.com/rust-lang/rust/issues/74935> for more information\n+   = help: add `#![feature(const_try)]` to the crate attributes to enable\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0744`.\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "465fb9baac3f03856a83a8fac4c523822312e92c", "filename": "src/test/ui/issues/issue-50582.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fissues%2Fissue-50582.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fissues%2Fissue-50582.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50582.stderr?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -1,8 +1,11 @@\n-error[E0744]: `for` is not allowed in a `const`\n+error[E0658]: `for` is not allowed in a `const`\n   --> $DIR/issue-50582.rs:2:20\n    |\n LL |     Vec::<[(); 1 + for x in 0..1 {}]>::new();\n    |                    ^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #87575 <https://github.com/rust-lang/rust/issues/87575> for more information\n+   = help: add `#![feature(const_for)]` to the crate attributes to enable\n \n error[E0277]: cannot add `()` to `{integer}`\n   --> $DIR/issue-50582.rs:2:18\n@@ -14,5 +17,5 @@ LL |     Vec::<[(); 1 + for x in 0..1 {}]>::new();\n \n error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0277, E0744.\n+Some errors have detailed explanations: E0277, E0658.\n For more information about an error, try `rustc --explain E0277`."}, {"sha": "e43cc20cbb57d2882e0c085cba16ebdc96d97819", "filename": "src/test/ui/issues/issue-50585.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fissues%2Fissue-50585.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fissues%2Fissue-50585.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50585.stderr?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -1,8 +1,11 @@\n-error[E0744]: `for` is not allowed in a `const`\n+error[E0658]: `for` is not allowed in a `const`\n   --> $DIR/issue-50585.rs:2:18\n    |\n LL |     |y: Vec<[(); for x in 0..2 {}]>| {};\n    |                  ^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #87575 <https://github.com/rust-lang/rust/issues/87575> for more information\n+   = help: add `#![feature(const_for)]` to the crate attributes to enable\n \n error[E0308]: mismatched types\n   --> $DIR/issue-50585.rs:2:18\n@@ -12,5 +15,5 @@ LL |     |y: Vec<[(); for x in 0..2 {}]>| {};\n \n error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0308, E0744.\n+Some errors have detailed explanations: E0308, E0658.\n For more information about an error, try `rustc --explain E0308`."}, {"sha": "26ab5f43a27b8d55823aa6a989172e825c7a2a5e", "filename": "src/test/ui/never_type/issue-52443.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fnever_type%2Fissue-52443.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Fnever_type%2Fissue-52443.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fissue-52443.stderr?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -6,11 +6,14 @@ LL |     [(); {while true {break}; 0}];\n    |\n    = note: `#[warn(while_true)]` on by default\n \n-error[E0744]: `for` is not allowed in a `const`\n+error[E0658]: `for` is not allowed in a `const`\n   --> $DIR/issue-52443.rs:9:12\n    |\n LL |     [(); { for _ in 0usize.. {}; 0}];\n    |            ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #87575 <https://github.com/rust-lang/rust/issues/87575> for more information\n+   = help: add `#![feature(const_for)]` to the crate attributes to enable\n \n error[E0308]: mismatched types\n   --> $DIR/issue-52443.rs:2:10\n@@ -56,5 +59,5 @@ LL |     [(); { for _ in 0usize.. {}; 0}];\n \n error: aborting due to 6 previous errors; 1 warning emitted\n \n-Some errors have detailed explanations: E0015, E0308, E0658, E0744.\n+Some errors have detailed explanations: E0015, E0308, E0658.\n For more information about an error, try `rustc --explain E0015`."}, {"sha": "32df63e449d4a912eac1e1b2502cde40298aef21", "filename": "src/test/ui/rfc-2632-const-trait-impl/hir-const-check.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fhir-const-check.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87dc8242484110c75596a91ebd2043a476c09839/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fhir-const-check.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fhir-const-check.stderr?ref=87dc8242484110c75596a91ebd2043a476c09839", "patch": "@@ -1,9 +1,12 @@\n-error[E0744]: `?` is not allowed in a `const fn`\n+error[E0658]: `?` is not allowed in a `const fn`\n   --> $DIR/hir-const-check.rs:11:9\n    |\n LL |         Some(())?;\n    |         ^^^^^^^^^\n+   |\n+   = note: see issue #74935 <https://github.com/rust-lang/rust/issues/74935> for more information\n+   = help: add `#![feature(const_try)]` to the crate attributes to enable\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0744`.\n+For more information about this error, try `rustc --explain E0658`."}]}