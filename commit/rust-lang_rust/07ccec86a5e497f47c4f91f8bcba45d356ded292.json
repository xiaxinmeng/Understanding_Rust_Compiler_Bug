{"sha": "07ccec86a5e497f47c4f91f8bcba45d356ded292", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3Y2NlYzg2YTVlNDk3ZjQ3YzRmOTFmOGJjYmE0NWQzNTZkZWQyOTI=", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby42@gmail.com", "date": "2019-06-08T21:49:33Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby42@gmail.com", "date": "2019-06-12T19:29:37Z"}, "message": "group printing", "tree": {"sha": "fe6874c528229e3988e9e17542e52e19fbfc3d90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe6874c528229e3988e9e17542e52e19fbfc3d90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07ccec86a5e497f47c4f91f8bcba45d356ded292", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07ccec86a5e497f47c4f91f8bcba45d356ded292", "html_url": "https://github.com/rust-lang/rust/commit/07ccec86a5e497f47c4f91f8bcba45d356ded292", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07ccec86a5e497f47c4f91f8bcba45d356ded292/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "296794dec5698abda5cacf644049cafc627a1bb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/296794dec5698abda5cacf644049cafc627a1bb6", "html_url": "https://github.com/rust-lang/rust/commit/296794dec5698abda5cacf644049cafc627a1bb6"}], "stats": {"total": 85, "additions": 48, "deletions": 37}, "files": [{"sha": "94c89d82c8f53e1130c5823795a64e8d2fa2f36d", "filename": "src/driver.rs", "status": "modified", "additions": 48, "deletions": 37, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/07ccec86a5e497f47c4f91f8bcba45d356ded292/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07ccec86a5e497f47c4f91f8bcba45d356ded292/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=07ccec86a5e497f47c4f91f8bcba45d356ded292", "patch": "@@ -112,6 +112,7 @@ impl rustc_driver::Callbacks for ClippyCallbacks {\n \n fn describe_lints() {\n     use lintlist::*;\n+    use std::collections::HashSet;\n \n     println!(\n         \"\n@@ -143,49 +144,58 @@ Available lint options:\n \n     let scoped = |x: &str| format!(\"clippy::{}\", x);\n \n+    let lint_groups: HashSet<_> = lints.iter().map(|lint| lint.group).collect();\n+\n     println!(\"Lint checks provided by clippy:\\n\");\n     println!(\"    {}  {:7.7}  meaning\", padded(\"name\"), \"default\");\n     println!(\"    {}  {:7.7}  -------\", padded(\"----\"), \"-------\");\n \n-    let print_lints = |lints: Vec<&Lint>| {\n+    let print_lints = |lints: &[&Lint]| {\n         for lint in lints {\n             let name = lint.name.replace(\"_\", \"-\");\n             println!(\"    {}  {:7.7}  {}\", padded(&scoped(&name)), \"unknown\", lint.desc);\n         }\n         println!(\"\\n\");\n     };\n \n-    print_lints(lints);\n-\n-    // let max_name_len = max(\"warnings\".len(),\n-    //                        plugin_groups.iter()\n-    //                                     .chain(&builtin_groups)\n-    //                                     .map(|&(s, _)| s.chars().count())\n-    //                                     .max()\n-    //                                     .unwrap_or(0));\n-\n-    // let padded = |x: &str| {\n-    //     let mut s = \" \".repeat(max_name_len - x.chars().count());\n-    //     s.push_str(x);\n-    //     s\n-    // };\n-\n-    // println!(\"Lint groups provided by rustc:\\n\");\n-    // println!(\"    {}  {}\", padded(\"name\"), \"sub-lints\");\n-    // println!(\"    {}  {}\", padded(\"----\"), \"---------\");\n-    // println!(\"    {}  {}\", padded(\"warnings\"), \"all lints that are set to issue warnings\");\n-\n-    // let print_lint_groups = |lints: Vec<(&'static str, Vec<lint::LintId>)>| {\n-    //     for (name, to) in lints {\n-    //         let name = name.to_lowercase().replace(\"_\", \"-\");\n-    //         let desc = to.into_iter()\n-    //                      .map(|x| x.to_string().replace(\"_\", \"-\"))\n-    //                      .collect::<Vec<String>>()\n-    //                      .join(\", \");\n-    //         println!(\"    {}  {}\", padded(&name), desc);\n-    //     }\n-    //     println!(\"\\n\");\n-    // };\n+    print_lints(&lints);\n+\n+    let max_name_len = std::cmp::max(\n+        \"warnings\".len(),\n+        lint_groups\n+            .iter()\n+            .map(|group| group.len())\n+            .map(|len| len + \"clippy::\".len())\n+            .max()\n+            .unwrap_or(0),\n+    );\n+\n+    let padded = |x: &str| {\n+        let mut s = \" \".repeat(max_name_len - x.chars().count());\n+        s.push_str(x);\n+        s\n+    };\n+\n+    println!(\"Lint groups provided by rustc:\\n\");\n+    println!(\"    {}  sub-lints\", padded(\"name\"));\n+    println!(\"    {}  ---------\", padded(\"----\"));\n+    // println!(\"    {}  all lints that are set to issue warnings\", padded(\"warnings\"));\n+\n+    let print_lint_groups = || {\n+        for group in lint_groups {\n+            let name = group.to_lowercase().replace(\"_\", \"-\");\n+            let desc = lints.iter()\n+                .filter(|&lint| lint.group == group)\n+                .map(|lint| lint.name)\n+                .map(|name| name.replace(\"_\", \"-\"))\n+                .collect::<Vec<String>>()\n+                .join(\", \");\n+            println!(\"    {}  {}\", padded(&name), desc);\n+        }\n+        println!(\"\\n\");\n+    };\n+\n+    print_lint_groups();\n \n     // print_lint_groups(builtin_groups);\n \n@@ -295,17 +305,18 @@ pub fn main() {\n                 exit(0);\n             }\n \n-            let args: Vec<_> = std::env::args().collect();\n-\n-            if !wrapper_mode\n-                && args.windows(2).any(|args| {\n+            let should_describe_lints = || {\n+                let args: Vec<_> = std::env::args().collect();\n+                args.windows(2).any(|args| {\n                     args[1] == \"help\"\n                         && match args[0].as_str() {\n                             \"-W\" | \"-A\" | \"-D\" | \"-F\" => true,\n                             _ => false,\n                         }\n                 })\n-            {\n+            };\n+\n+            if !wrapper_mode && should_describe_lints() {\n                 describe_lints();\n                 exit(0);\n             }"}]}