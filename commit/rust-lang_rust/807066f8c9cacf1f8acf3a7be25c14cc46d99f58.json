{"sha": "807066f8c9cacf1f8acf3a7be25c14cc46d99f58", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNzA2NmY4YzljYWNmMWY4YWNmM2E3YmUyNWMxNGNjNDZkOTlmNTg=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-11-28T12:20:37Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-11-28T23:44:22Z"}, "message": "Add test for #18908", "tree": {"sha": "758cd6efdbefa0849ec54c2ab26434d3524daef9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/758cd6efdbefa0849ec54c2ab26434d3524daef9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/807066f8c9cacf1f8acf3a7be25c14cc46d99f58", "comment_count": 8, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/807066f8c9cacf1f8acf3a7be25c14cc46d99f58", "html_url": "https://github.com/rust-lang/rust/commit/807066f8c9cacf1f8acf3a7be25c14cc46d99f58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/807066f8c9cacf1f8acf3a7be25c14cc46d99f58/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb52e69a503fbe1c5f7641655bc45def875584b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb52e69a503fbe1c5f7641655bc45def875584b3", "html_url": "https://github.com/rust-lang/rust/commit/fb52e69a503fbe1c5f7641655bc45def875584b3"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "d3ebf74fa8a0b0b157b49a2c5a064a223f12a669", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/807066f8c9cacf1f8acf3a7be25c14cc46d99f58/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/807066f8c9cacf1f8acf3a7be25c14cc46d99f58/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=807066f8c9cacf1f8acf3a7be25c14cc46d99f58", "patch": "@@ -2108,6 +2108,35 @@ mod tests {\n         assert_eq!(v.map_in_place(|_| ZeroSized).as_slice(), [ZeroSized, ZeroSized].as_slice());\n     }\n \n+    #[test]\n+    fn test_map_in_place_zero_drop_count() {\n+        use std::sync::atomic;\n+        use std::sync::atomic::AtomicUint;\n+\n+        #[deriving(Clone, PartialEq, Show)]\n+        struct Nothing;\n+        impl Drop for Nothing { fn drop(&mut self) { } }\n+\n+        #[deriving(Clone, PartialEq, Show)]\n+        struct ZeroSized;\n+        impl Drop for ZeroSized {\n+            fn drop(&mut self) {\n+                DROP_COUNTER.fetch_add(1, atomic::Relaxed);\n+            }\n+        }\n+        const NUM_ELEMENTS: uint = 2;\n+        static DROP_COUNTER: AtomicUint = atomic::INIT_ATOMIC_UINT;\n+\n+        let v = Vec::from_elem(NUM_ELEMENTS, Nothing);\n+\n+        DROP_COUNTER.store(0, atomic::Relaxed);\n+\n+        let v = v.map_in_place(|_| ZeroSized);\n+        assert_eq!(DROP_COUNTER.load(atomic::Relaxed), 0);\n+        drop(v);\n+        assert_eq!(DROP_COUNTER.load(atomic::Relaxed), NUM_ELEMENTS);\n+    }\n+\n     #[test]\n     fn test_move_items() {\n         let vec = vec![1, 2, 3];"}]}