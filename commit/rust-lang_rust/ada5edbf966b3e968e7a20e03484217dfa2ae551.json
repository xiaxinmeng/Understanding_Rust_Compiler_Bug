{"sha": "ada5edbf966b3e968e7a20e03484217dfa2ae551", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYTVlZGJmOTY2YjNlOTY4ZTdhMjBlMDM0ODQyMTdkZmEyYWU1NTE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-13T12:10:52Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-13T12:10:52Z"}, "message": "RUST_LOG got renamed to RUSTC_LOG", "tree": {"sha": "bf90486af72dfa8a8875e8d626d98fba560d1313", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf90486af72dfa8a8875e8d626d98fba560d1313"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ada5edbf966b3e968e7a20e03484217dfa2ae551", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ada5edbf966b3e968e7a20e03484217dfa2ae551", "html_url": "https://github.com/rust-lang/rust/commit/ada5edbf966b3e968e7a20e03484217dfa2ae551", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ada5edbf966b3e968e7a20e03484217dfa2ae551/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f09e61c31ffffc340495eca23e834d6159f61d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f09e61c31ffffc340495eca23e834d6159f61d6", "html_url": "https://github.com/rust-lang/rust/commit/7f09e61c31ffffc340495eca23e834d6159f61d6"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "272fd17d433cb1b8a9bbbee8e71e7c6f77fed39c", "filename": "src/bin/miri.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ada5edbf966b3e968e7a20e03484217dfa2ae551/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada5edbf966b3e968e7a20e03484217dfa2ae551/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=ada5edbf966b3e968e7a20e03484217dfa2ae551", "patch": "@@ -66,26 +66,26 @@ fn init_early_loggers() {\n     // If it is not set, we avoid initializing now so that we can initialize\n     // later with our custom settings, and *not* log anything for what happens before\n     // `miri` gets started.\n-    if env::var(\"RUST_LOG\").is_ok() {\n+    if env::var(\"RUSTC_LOG\").is_ok() {\n         rustc_driver::init_rustc_env_logger();\n     }\n }\n \n fn init_late_loggers() {\n-    // We initialize loggers right before we start evaluation. We overwrite the `RUST_LOG`\n+    // We initialize loggers right before we start evaluation. We overwrite the `RUSTC_LOG`\n     // env var if it is not set, control it based on `MIRI_LOG`.\n     if let Ok(var) = env::var(\"MIRI_LOG\") {\n-        if env::var(\"RUST_LOG\").is_err() {\n+        if env::var(\"RUSTC_LOG\").is_err() {\n             // We try to be a bit clever here: if `MIRI_LOG` is just a single level\n             // used for everything, we only apply it to the parts of rustc that are\n-            // CTFE-related. Otherwise, we use it verbatim for `RUST_LOG`.\n+            // CTFE-related. Otherwise, we use it verbatim for `RUSTC_LOG`.\n             // This way, if you set `MIRI_LOG=trace`, you get only the right parts of\n             // rustc traced, but you can also do `MIRI_LOG=miri=trace,rustc_mir::interpret=debug`.\n             if log::Level::from_str(&var).is_ok() {\n-                env::set_var(\"RUST_LOG\",\n+                env::set_var(\"RUSTC_LOG\",\n                     &format!(\"rustc::mir::interpret={0},rustc_mir::interpret={0}\", var));\n             } else {\n-                env::set_var(\"RUST_LOG\", &var);\n+                env::set_var(\"RUSTC_LOG\", &var);\n             }\n             rustc_driver::init_rustc_env_logger();\n         }"}]}