{"sha": "dd0fc0a03a680d76d3454f955648876b2a1ccae8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMGZjMGEwM2E2ODBkNzZkMzQ1NGY5NTU2NDg4NzZiMmExY2NhZTg=", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2016-12-17T10:22:41Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2016-12-17T13:48:27Z"}, "message": "Disconnect ar from cc on OpenBSD\n\nOpenBSD usually use an alternative compiler (`egcc') from ports. But the\n`ar' is unprefixed as it comes from base.", "tree": {"sha": "1e02ba21c3f5c379189891ab8052d61c20fcddd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e02ba21c3f5c379189891ab8052d61c20fcddd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd0fc0a03a680d76d3454f955648876b2a1ccae8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd0fc0a03a680d76d3454f955648876b2a1ccae8", "html_url": "https://github.com/rust-lang/rust/commit/dd0fc0a03a680d76d3454f955648876b2a1ccae8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd0fc0a03a680d76d3454f955648876b2a1ccae8/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d250169cb5a96481a3e7c8f9fe05de49f60e5ae5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d250169cb5a96481a3e7c8f9fe05de49f60e5ae5", "html_url": "https://github.com/rust-lang/rust/commit/d250169cb5a96481a3e7c8f9fe05de49f60e5ae5"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "bd036fae689559e5523d5d2b4aadf4a6520b7498", "filename": "src/build_helper/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd0fc0a03a680d76d3454f955648876b2a1ccae8/src%2Fbuild_helper%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd0fc0a03a680d76d3454f955648876b2a1ccae8/src%2Fbuild_helper%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuild_helper%2Flib.rs?ref=dd0fc0a03a680d76d3454f955648876b2a1ccae8", "patch": "@@ -47,6 +47,8 @@ pub fn cc2ar(cc: &Path, target: &str) -> Option<PathBuf> {\n         None\n     } else if target.contains(\"musl\") {\n         Some(PathBuf::from(\"ar\"))\n+    } else if target.contains(\"openbsd\") {\n+        Some(PathBuf::from(\"ar\"))\n     } else {\n         let parent = cc.parent().unwrap();\n         let file = cc.file_name().unwrap().to_str().unwrap();"}]}