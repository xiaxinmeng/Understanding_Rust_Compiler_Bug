{"sha": "c46e0300e6cebf78c78c28ca91e45b57e4e40954", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NmUwMzAwZTZjZWJmNzhjNzhjMjhjYTkxZTQ1YjU3ZTRlNDA5NTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-13T14:13:54Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-13T14:13:54Z"}, "message": "note about performance", "tree": {"sha": "89c0b43940fac0c196bb848062443c6c59a2edd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89c0b43940fac0c196bb848062443c6c59a2edd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c46e0300e6cebf78c78c28ca91e45b57e4e40954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c46e0300e6cebf78c78c28ca91e45b57e4e40954", "html_url": "https://github.com/rust-lang/rust/commit/c46e0300e6cebf78c78c28ca91e45b57e4e40954", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c46e0300e6cebf78c78c28ca91e45b57e4e40954/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff09d151241cf0bc14cd7ecb015350a77f882969", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff09d151241cf0bc14cd7ecb015350a77f882969", "html_url": "https://github.com/rust-lang/rust/commit/ff09d151241cf0bc14cd7ecb015350a77f882969"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "b35a1f36775419b3ffc29087fa2f7b19d137a618", "filename": "editors/README.md", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c46e0300e6cebf78c78c28ca91e45b57e4e40954/editors%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/c46e0300e6cebf78c78c28ca91e45b57e4e40954/editors%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2FREADME.md?ref=c46e0300e6cebf78c78c28ca91e45b57e4e40954", "patch": "@@ -9,7 +9,7 @@ $ cargo install-code\n $ rustup component add rust-src\n ```\n \n-This will run `cargo install --packge ra_lsp_server` to install the server\n+This will run `cargo install --package ra_lsp_server` to install the server\n binary into `~/.cargo/bin`, and then will build and install plugin from\n `editors/code`. See\n [this](https://github.com/rust-analyzer/rust-analyzer/blob/0199572a3d06ff66eeae85a2d2c9762996f0d2d8/crates/tools/src/main.rs#L150)\n@@ -18,9 +18,9 @@ bugs!\n \n It's better to remove existing Rust plugins to avoid interference.\n \n-## Rust Analyzer Specifc Features\n+## Rust Analyzer Specific Features\n \n-These features are implemented as extensions to the langauge server protocol.\n+These features are implemented as extensions to the language server protocol.\n They are more experimental in nature and work only with VS Code.\n \n ### Syntax highlighting\n@@ -36,7 +36,7 @@ symbols can be used to narrow down the search. Specifically,\n - `#Foo` searches for `Foo` type in the current workspace\n - `#foo#` searches for `foo` function in the current workspace\n - `#Foo*` searches for `Foo` type among dependencies, excluding `stdlib`\n-- `#foo#*` seaches for `foo` function among dependencies.\n+- `#foo#*` searches for `foo` function among dependencies.\n \n That is, `#` switches from \"types\" to all symbols, `*` switches from the current\n workspace to dependencies.\n@@ -87,7 +87,7 @@ Some features trigger on typing certain characters:\n \n ### Code Actions (Assists)\n \n-These are triggered in a particular context via lightbulb. We use custom code on\n+These are triggered in a particular context via light bulb. We use custom code on\n the VS Code side to be able to position cursor.\n \n \n@@ -196,7 +196,8 @@ use algo::{<|>visitor::{Visitor, visit}};\n   falls back to heuristic name matching for other things for the time being.\n \n * **Completion**: completes paths, including dependencies and standard library.\n-  Does not handle glob imports and macros. Completes fields and inherent methods\n+  Does not handle glob imports and macros. Completes fields and inherent\n+  methods.\n \n * **Outline** <kbd>alt+shift+o</kbd>\n \n@@ -216,4 +217,14 @@ use algo::{<|>visitor::{Visitor, visit}};\n * **Diagnostics**\n   - missing module for `mod foo;` with a fix to create `foo.rs`.\n   - struct field shorthand\n-  - unnessary braces in use item\n+  - unnecessary braces in use item\n+\n+\n+## Performance\n+\n+Rust Analyzer is expected to be pretty fast. Specifically, the initial analysis\n+of the project (i.e, when you first invoke completion or symbols) typically\n+takes dozen of seconds at most. After that, everything is supposed to be more or\n+less instant. However currently all analysis results are kept in memory, so\n+memory usage is pretty high. Working with `rust-lang/rust` repo, for example,\n+needs about 5 gigabytes of ram."}]}