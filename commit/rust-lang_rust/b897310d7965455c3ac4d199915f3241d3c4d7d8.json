{"sha": "b897310d7965455c3ac4d199915f3241d3c4d7d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4OTczMTBkNzk2NTQ1NWMzYWM0ZDE5OTkxNWYzMjQxZDNjNGQ3ZDg=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-09T17:18:53Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-09T17:20:28Z"}, "message": "Prefer to put the whole pattern of match arm on one line", "tree": {"sha": "c22cc3032461f19afd97da92674b77cdc320171b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c22cc3032461f19afd97da92674b77cdc320171b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b897310d7965455c3ac4d199915f3241d3c4d7d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b897310d7965455c3ac4d199915f3241d3c4d7d8", "html_url": "https://github.com/rust-lang/rust/commit/b897310d7965455c3ac4d199915f3241d3c4d7d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b897310d7965455c3ac4d199915f3241d3c4d7d8/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72b155a9e2798126e48ba441f759ee4166123361", "url": "https://api.github.com/repos/rust-lang/rust/commits/72b155a9e2798126e48ba441f759ee4166123361", "html_url": "https://github.com/rust-lang/rust/commit/72b155a9e2798126e48ba441f759ee4166123361"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "b304af8e5cdf1d22e1ae6192c937c9bead57b846", "filename": "src/expr.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b897310d7965455c3ac4d199915f3241d3c4d7d8/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b897310d7965455c3ac4d199915f3241d3c4d7d8/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=b897310d7965455c3ac4d199915f3241d3c4d7d8", "patch": "@@ -1687,14 +1687,14 @@ impl Rewrite for ast::Arm {\n                 .collect::<Option<Vec<_>>>()\n         );\n \n-        let all_simple = pat_strs.iter().all(|p| pat_is_simple(p));\n+        let all_simple = pat_strs.iter().all(|p| !p.contains('\\n'));\n         let items: Vec<_> = pat_strs.into_iter().map(ListItem::from_str).collect();\n+        let mut tactic = definitive_tactic(&items, ListTactic::HorizontalVertical, pat_shape.width);\n+        if tactic == DefinitiveListTactic::Horizontal && all_simple {\n+            tactic = DefinitiveListTactic::Mixed;\n+        }\n         let fmt = ListFormatting {\n-            tactic: if all_simple {\n-                DefinitiveListTactic::Mixed\n-            } else {\n-                DefinitiveListTactic::Vertical\n-            },\n+            tactic: tactic,\n             separator: \" |\",\n             trailing_separator: SeparatorTactic::Never,\n             shape: pat_shape,"}]}