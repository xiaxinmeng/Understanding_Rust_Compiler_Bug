{"sha": "019790c72a079fd9f695290322985bd693e06037", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxOTc5MGM3MmEwNzlmZDlmNjk1MjkwMzIyOTg1YmQ2OTNlMDYwMzc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-12T02:27:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-12T02:27:54Z"}, "message": "Rollup merge of #67494 - lukaslueg:const_alloc, r=oli-obk\n\nConstify more of alloc::Layout\n\nMaking more methods of `alloc::Layout` const would allow us to compute alignment/size information for arbitrary (sized) types at compile-time, including placing the information in associated constants. While `mem::size_of` and `mem::align_of` are already const and `Layout` is solely based on those, there is no guarantee in the implementation that a const derived from these functions will be exactly the same as what `Layout` uses and is subsequently used in a call to `alloc::alloc`. Constifying `Layout` makes this possible.\n\nFirst contribution to core, excuse my ignorance.", "tree": {"sha": "e923e00968dba3ec09e9998242bf15ee76b30cd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e923e00968dba3ec09e9998242bf15ee76b30cd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/019790c72a079fd9f695290322985bd693e06037", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeGoQqCRBK7hj4Ov3rIwAAdHIIAI9IOsPFr8t8SjDynrUkjPe/\nqg+j9GPm2I/TngiPBZsp6zuSXvhJqpPMcslwlaIac6Wjy5Xph1YeeDlhXZQsJbSf\nxvwKhB25aUUTRbIOOSMOUAmt7R95Z5hGfZaPMpW6ig/pONZhW/xP+Ak9dpdlO9OR\nCk/QoeRsfjKzxgQhKLqALRpZMMQqIhgFcJJJo833Zhm3HirqadCJh2GrSJWmBNAW\n2YGibuRO+a15bzQyjFCeolMDfsWddNuKEfaJ+c8Q+Kx3ieg/TIUk4bW8O9BVbF8Q\npqKKLM8ordGXRvvhGpms54jeSpwdHlCtuDd0M6BNaiI5+5qUNJsJ4ZIkWSCRTVo=\n=ucPS\n-----END PGP SIGNATURE-----\n", "payload": "tree e923e00968dba3ec09e9998242bf15ee76b30cd9\nparent f363745872f9b45cfec575f3c2cac42f0c242c03\nparent c5a9a14c9f793ce20d34cffac09f4ee21d541565\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1578796074 +0100\ncommitter GitHub <noreply@github.com> 1578796074 +0100\n\nRollup merge of #67494 - lukaslueg:const_alloc, r=oli-obk\n\nConstify more of alloc::Layout\n\nMaking more methods of `alloc::Layout` const would allow us to compute alignment/size information for arbitrary (sized) types at compile-time, including placing the information in associated constants. While `mem::size_of` and `mem::align_of` are already const and `Layout` is solely based on those, there is no guarantee in the implementation that a const derived from these functions will be exactly the same as what `Layout` uses and is subsequently used in a call to `alloc::alloc`. Constifying `Layout` makes this possible.\n\nFirst contribution to core, excuse my ignorance.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/019790c72a079fd9f695290322985bd693e06037", "html_url": "https://github.com/rust-lang/rust/commit/019790c72a079fd9f695290322985bd693e06037", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/019790c72a079fd9f695290322985bd693e06037/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f363745872f9b45cfec575f3c2cac42f0c242c03", "url": "https://api.github.com/repos/rust-lang/rust/commits/f363745872f9b45cfec575f3c2cac42f0c242c03", "html_url": "https://github.com/rust-lang/rust/commit/f363745872f9b45cfec575f3c2cac42f0c242c03"}, {"sha": "c5a9a14c9f793ce20d34cffac09f4ee21d541565", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5a9a14c9f793ce20d34cffac09f4ee21d541565", "html_url": "https://github.com/rust-lang/rust/commit/c5a9a14c9f793ce20d34cffac09f4ee21d541565"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "4354e1c7b5f695c1455f5e24f4bb7d165d5758b4", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/019790c72a079fd9f695290322985bd693e06037/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/019790c72a079fd9f695290322985bd693e06037/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=019790c72a079fd9f695290322985bd693e06037", "patch": "@@ -64,8 +64,9 @@ impl Layout {\n     ///    must not overflow (i.e., the rounded value must be less than\n     ///    `usize::MAX`).\n     #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n+    #[rustc_const_unstable(feature = \"const_alloc_layout\", issue = \"67521\")]\n     #[inline]\n-    pub fn from_size_align(size: usize, align: usize) -> Result<Self, LayoutErr> {\n+    pub const fn from_size_align(size: usize, align: usize) -> Result<Self, LayoutErr> {\n         if !align.is_power_of_two() {\n             return Err(LayoutErr { private: () });\n         }\n@@ -106,15 +107,17 @@ impl Layout {\n \n     /// The minimum size in bytes for a memory block of this layout.\n     #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n+    #[rustc_const_unstable(feature = \"const_alloc_layout\", issue = \"67521\")]\n     #[inline]\n-    pub fn size(&self) -> usize {\n+    pub const fn size(&self) -> usize {\n         self.size_\n     }\n \n     /// The minimum byte alignment for a memory block of this layout.\n     #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n+    #[rustc_const_unstable(feature = \"const_alloc_layout\", issue = \"67521\")]\n     #[inline]\n-    pub fn align(&self) -> usize {\n+    pub const fn align(&self) -> usize {\n         self.align_.get()\n     }\n \n@@ -181,8 +184,9 @@ impl Layout {\n     /// address for the whole allocated block of memory. One way to\n     /// satisfy this constraint is to ensure `align <= self.align()`.\n     #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n+    #[rustc_const_unstable(feature = \"const_alloc_layout\", issue = \"67521\")]\n     #[inline]\n-    pub fn padding_needed_for(&self, align: usize) -> usize {\n+    pub const fn padding_needed_for(&self, align: usize) -> usize {\n         let len = self.size();\n \n         // Rounded up value is:"}, {"sha": "95ffe4f438f5f608d69ea683989a974000846b04", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/019790c72a079fd9f695290322985bd693e06037/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/019790c72a079fd9f695290322985bd693e06037/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=019790c72a079fd9f695290322985bd693e06037", "patch": "@@ -70,6 +70,7 @@\n #![feature(bound_cloned)]\n #![feature(cfg_target_has_atomic)]\n #![feature(concat_idents)]\n+#![feature(const_alloc_layout)]\n #![feature(const_if_match)]\n #![feature(const_panic)]\n #![feature(const_fn_union)]"}]}