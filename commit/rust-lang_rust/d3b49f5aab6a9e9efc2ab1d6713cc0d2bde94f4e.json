{"sha": "d3b49f5aab6a9e9efc2ab1d6713cc0d2bde94f4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYjQ5ZjVhYWI2YTllOWVmYzJhYjFkNjcxM2NjMGQyYmRlOTRmNGU=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-03-25T12:50:10Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-25T14:59:13Z"}, "message": "fix pretty-printer\n\nA change in 54587bdccb7b6771cfc704a30fc0ef2c65824a15 (the vec\nappending overhaul) had broken it. (Apparently modifying a vec while\niterating over it can corrupt memory.)", "tree": {"sha": "bae28f87291e36eeeb08cff07d06d1728521da54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bae28f87291e36eeeb08cff07d06d1728521da54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3b49f5aab6a9e9efc2ab1d6713cc0d2bde94f4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3b49f5aab6a9e9efc2ab1d6713cc0d2bde94f4e", "html_url": "https://github.com/rust-lang/rust/commit/d3b49f5aab6a9e9efc2ab1d6713cc0d2bde94f4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3b49f5aab6a9e9efc2ab1d6713cc0d2bde94f4e/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78c077e428f53d4fc97650317044f6b204ac2d2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/78c077e428f53d4fc97650317044f6b204ac2d2b", "html_url": "https://github.com/rust-lang/rust/commit/78c077e428f53d4fc97650317044f6b204ac2d2b"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "69eb01bcf8338e47e6e697a9d46f19acf7db1698", "filename": "src/comp/pretty/pp.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d3b49f5aab6a9e9efc2ab1d6713cc0d2bde94f4e/src%2Fcomp%2Fpretty%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3b49f5aab6a9e9efc2ab1d6713cc0d2bde94f4e/src%2Fcomp%2Fpretty%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpp.rs?ref=d3b49f5aab6a9e9efc2ab1d6713cc0d2bde94f4e", "patch": "@@ -99,8 +99,10 @@ impure fn buffer_token(ps p, token tok) {\n }\n \n impure fn finish_block_scan(ps p, contexttype tp) {\n+  auto buf = p.buffered;\n+  auto front = _vec.shift[token](buf);\n   auto indent;\n-  alt (p.buffered.(0)){\n+  alt (front){\n     case (open(box_hv,?ind)) {\n       indent = ind;\n     }\n@@ -109,25 +111,27 @@ impure fn finish_block_scan(ps p, contexttype tp) {\n     }\n   }\n   p.scandepth = 0u;\n+  p.buffered = vec();\n   push_context(p, tp, indent);\n-  _vec.shift[token](p.buffered);\n-  for (token t in p.buffered) { add_token(p, t); }\n+  for (token t in buf) { add_token(p, t); }\n }\n \n impure fn finish_break_scan(ps p) {\n+  auto buf = p.buffered;\n+  auto front = _vec.shift[token](buf);\n   if (p.bufferedcol > p.width) {\n     line_break(p);\n   }\n   else {\n     auto width;\n-    alt (p.buffered.(0)) {case(brk(?w)) {width = w;}}\n+    alt (front) {case(brk(?w)) {width = w;}}\n     auto i = 0u;\n     while (i < width) {p.out.write_str(\" \"); i+=1u;}\n     p.col += width;\n   }\n   p.scandepth = 0u;\n-  _vec.shift[token](p.buffered);\n-  for (token t in p.buffered) { add_token(p, t); }\n+  p.buffered = vec();\n+  for (token t in buf) { add_token(p, t); }\n }\n \n impure fn start_scan(ps p, token tok) {"}]}