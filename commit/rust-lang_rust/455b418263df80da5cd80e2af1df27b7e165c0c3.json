{"sha": "455b418263df80da5cd80e2af1df27b7e165c0c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NWI0MTgyNjNkZjgwZGE1Y2Q4MGUyYWYxZGYyN2I3ZTE2NWMwYzM=", "commit": {"author": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2021-03-15T17:24:26Z"}, "committer": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2021-03-15T17:24:26Z"}, "message": "Update tests", "tree": {"sha": "58ca0db5e5bc0e39ddbe8d3455fbf0203be7ba2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58ca0db5e5bc0e39ddbe8d3455fbf0203be7ba2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/455b418263df80da5cd80e2af1df27b7e165c0c3", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXLDp5dXVcfV/VA/qztOS3gxIPQAFAmBPmEoACgkQztOS3gxI\nPQBqtw//f6huui3Sk7h04+WwTbLc5/8lU6rErThXgN7WYpitO+2TxJ17fiWMNLs5\nOmA89gyRrz6i63zyJIQNxtFpjtGK9xC+CgXS6zCHOFCW9im2grEaIIQygTz6ovnz\nxT3xA1KgbBjkLudK2N09N7sLbi3VDQH6Fggj8sRUen/lfbge72J8Id3UBa3BRG3T\nes+F/5c/EESvyXT6wPpHWWxMAEqtGbLfY0PCX2H6gwbAMYY46LoN0yJF8xWE0x+V\nCLLkmKG6ZtEFsh1ODNy/R6af2jkkNtwe3hWqSXmOtwiGf8R7O387qNJ5u6djndRc\nVXqi7mRNFVLUpRf1qc5TAIyp1wz5BVRRPhwMPlCO1xdXkO/8LvFLf4fdHpVi02dN\nPRNNxUDlwhgiYF744iNYhXOkCbD246DRmCZSeGclOLw4H2ixA+OpSynYp/4TzjdW\nnOWl5MhNm0hQaD1GiHEYwq+K1oSXcvmyk9FGul96ZLl3ERq069aoSApXvfeiNd0X\nutz63v/wTO4VSxXOFlvSk4razd9GcjmgzLEXFiW7CWm1oW3hh6sCe+CqddAiiGSk\n4YaUQzR+MKxYvKhUAotp/VKSIdLmrF2kQcNUFAMB9+hJlrZl+6sHJEGpaaFyp4Tb\nvbQwT09f0TjKdiLNS0qiwFcovtI27wKplhVD8pG7SN1G8iIP2gA=\n=wr7v\n-----END PGP SIGNATURE-----", "payload": "tree 58ca0db5e5bc0e39ddbe8d3455fbf0203be7ba2e\nparent 73fc05fdca348a899c78f527d08f323cd582100d\nauthor oxalica <oxalicc@pm.me> 1615829066 +0800\ncommitter oxalica <oxalicc@pm.me> 1615829066 +0800\n\nUpdate tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/455b418263df80da5cd80e2af1df27b7e165c0c3", "html_url": "https://github.com/rust-lang/rust/commit/455b418263df80da5cd80e2af1df27b7e165c0c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/455b418263df80da5cd80e2af1df27b7e165c0c3/comments", "author": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73fc05fdca348a899c78f527d08f323cd582100d", "url": "https://api.github.com/repos/rust-lang/rust/commits/73fc05fdca348a899c78f527d08f323cd582100d", "html_url": "https://github.com/rust-lang/rust/commit/73fc05fdca348a899c78f527d08f323cd582100d"}], "stats": {"total": 85, "additions": 57, "deletions": 28}, "files": [{"sha": "a35805c5e7e7f817e212233ccccc2798aad5e2cf", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 57, "deletions": 28, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/455b418263df80da5cd80e2af1df27b7e165c0c3/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/455b418263df80da5cd80e2af1df27b7e165c0c3/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=455b418263df80da5cd80e2af1df27b7e165c0c3", "patch": "@@ -653,7 +653,9 @@ fn main() { let foo_test = fo$0o(); }\n                 ```\n \n                 ```rust\n-                pub fn foo<'a, T: AsRef<str>>(b: &'a T) -> &'a str\n+                pub fn foo<'a, T>(b: &'a T) -> &'a str\n+                where\n+                    T: AsRef<str>,\n                 ```\n             \"#]],\n         );\n@@ -861,7 +863,7 @@ fn main() { So$0me(12); }\n                 ```\n \n                 ```rust\n-                Some\n+                Some(T)\n                 ```\n             \"#]],\n         );\n@@ -927,7 +929,7 @@ fn main() {\n                 ```\n \n                 ```rust\n-                Some\n+                Some(T)\n                 ```\n \n                 ---\n@@ -1424,13 +1426,14 @@ fn bar() { fo$0o(); }\n                 ```\n             \"#]],\n         );\n+        // Top level `pub(crate)` will be displayed as no visibility.\n         check(\n-            r#\"pub(crate) async unsafe extern \"C\" fn foo$0() {}\"#,\n+            r#\"mod m { pub(crate) async unsafe extern \"C\" fn foo$0() {} }\"#,\n             expect![[r#\"\n                 *foo*\n \n                 ```rust\n-                test\n+                test::m\n                 ```\n \n                 ```rust\n@@ -1472,11 +1475,18 @@ extern crate st$0d;\n //! abc123\n             \"#,\n             expect![[r#\"\n-            *std*\n-            Standard library for this test\n+                *std*\n+\n+                ```rust\n+                extern crate std\n+                ```\n \n-            Printed?\n-            abc123\n+                ---\n+\n+                Standard library for this test\n+\n+                Printed?\n+                abc123\n             \"#]],\n         );\n         check(\n@@ -1490,11 +1500,18 @@ extern crate std as ab$0c;\n //! abc123\n             \"#,\n             expect![[r#\"\n-            *abc*\n-            Standard library for this test\n+                *abc*\n \n-            Printed?\n-            abc123\n+                ```rust\n+                extern crate std\n+                ```\n+\n+                ---\n+\n+                Standard library for this test\n+\n+                Printed?\n+                abc123\n             \"#]],\n         );\n     }\n@@ -2004,7 +2021,7 @@ enum E {\n                 ```\n \n                 ```rust\n-                V\n+                V { field: i32 }\n                 ```\n \n                 ---\n@@ -2400,7 +2417,7 @@ fn main() { let s$0t = S{ f1:Arg(0) }; }\n                                     focus_range: 24..25,\n                                     name: \"S\",\n                                     kind: Struct,\n-                                    description: \"struct S\",\n+                                    description: \"struct S<T>\",\n                                 },\n                             },\n                             HoverGotoTypeData {\n@@ -2446,7 +2463,7 @@ fn main() { let s$0t = S{ f1: S{ f1: Arg(0) } }; }\n                                     focus_range: 24..25,\n                                     name: \"S\",\n                                     kind: Struct,\n-                                    description: \"struct S\",\n+                                    description: \"struct S<T>\",\n                                 },\n                             },\n                             HoverGotoTypeData {\n@@ -2588,7 +2605,7 @@ fn main() { let s$0t = foo(); }\n                                     focus_range: 6..9,\n                                     name: \"Foo\",\n                                     kind: Trait,\n-                                    description: \"trait Foo\",\n+                                    description: \"trait Foo<T>\",\n                                 },\n                             },\n                             HoverGotoTypeData {\n@@ -2685,7 +2702,7 @@ fn main() { let s$0t = foo(); }\n                                     focus_range: 6..9,\n                                     name: \"Foo\",\n                                     kind: Trait,\n-                                    description: \"trait Foo\",\n+                                    description: \"trait Foo<T>\",\n                                 },\n                             },\n                             HoverGotoTypeData {\n@@ -2698,7 +2715,7 @@ fn main() { let s$0t = foo(); }\n                                     focus_range: 22..25,\n                                     name: \"Bar\",\n                                     kind: Trait,\n-                                    description: \"trait Bar\",\n+                                    description: \"trait Bar<T>\",\n                                 },\n                             },\n                             HoverGotoTypeData {\n@@ -2802,7 +2819,7 @@ fn foo(ar$0g: &impl Foo + Bar<S>) {}\n                                     focus_range: 19..22,\n                                     name: \"Bar\",\n                                     kind: Trait,\n-                                    description: \"trait Bar\",\n+                                    description: \"trait Bar<T>\",\n                                 },\n                             },\n                             HoverGotoTypeData {\n@@ -2899,7 +2916,7 @@ fn foo(ar$0g: &impl Foo<S>) {}\n                                     focus_range: 6..9,\n                                     name: \"Foo\",\n                                     kind: Trait,\n-                                    description: \"trait Foo\",\n+                                    description: \"trait Foo<T>\",\n                                 },\n                             },\n                             HoverGotoTypeData {\n@@ -2949,7 +2966,7 @@ fn main() { let s$0t = foo(); }\n                                     focus_range: 49..50,\n                                     name: \"B\",\n                                     kind: Struct,\n-                                    description: \"struct B\",\n+                                    description: \"struct B<T>\",\n                                 },\n                             },\n                             HoverGotoTypeData {\n@@ -3025,7 +3042,7 @@ fn foo(ar$0g: &dyn Foo<S>) {}\n                                     focus_range: 6..9,\n                                     name: \"Foo\",\n                                     kind: Trait,\n-                                    description: \"trait Foo\",\n+                                    description: \"trait Foo<T>\",\n                                 },\n                             },\n                             HoverGotoTypeData {\n@@ -3073,7 +3090,7 @@ fn foo(a$0rg: &impl ImplTrait<B<dyn DynTrait<B<S>>>>) {}\n                                     focus_range: 6..15,\n                                     name: \"ImplTrait\",\n                                     kind: Trait,\n-                                    description: \"trait ImplTrait\",\n+                                    description: \"trait ImplTrait<T>\",\n                                 },\n                             },\n                             HoverGotoTypeData {\n@@ -3086,7 +3103,7 @@ fn foo(a$0rg: &impl ImplTrait<B<dyn DynTrait<B<S>>>>) {}\n                                     focus_range: 50..51,\n                                     name: \"B\",\n                                     kind: Struct,\n-                                    description: \"struct B\",\n+                                    description: \"struct B<T>\",\n                                 },\n                             },\n                             HoverGotoTypeData {\n@@ -3099,7 +3116,7 @@ fn foo(a$0rg: &impl ImplTrait<B<dyn DynTrait<B<S>>>>) {}\n                                     focus_range: 28..36,\n                                     name: \"DynTrait\",\n                                     kind: Trait,\n-                                    description: \"trait DynTrait\",\n+                                    description: \"trait DynTrait<T>\",\n                                 },\n                             },\n                             HoverGotoTypeData {\n@@ -3565,6 +3582,17 @@ mod foo$0;\n \"#,\n             expect![[r#\"\n                 *foo*\n+\n+                ```rust\n+                test\n+                ```\n+\n+                ```rust\n+                mod foo\n+                ```\n+\n+                ---\n+\n                 For the horde!\n             \"#]],\n         );\n@@ -3589,7 +3617,7 @@ use foo::bar::{self$0};\n                 ```\n \n                 ```rust\n-                pub mod bar\n+                mod bar\n                 ```\n \n                 ---\n@@ -3670,8 +3698,9 @@ fn main() {\n                 ```\n \n                 ```rust\n-                fn bar<'t, T: Clone + 't>(s: &mut S<'t, T>, t: u32) -> *mut u32\n+                fn bar<'t, T>(s: &mut S<'t, T>, t: u32) -> *mut u32\n                 where\n+                    T: Clone + 't,\n                     't: 't + 't,\n                     for<'a> T: Clone + 'a,\n                 ```"}]}