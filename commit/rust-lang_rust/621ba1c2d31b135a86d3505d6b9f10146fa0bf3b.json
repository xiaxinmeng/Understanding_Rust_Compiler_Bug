{"sha": "621ba1c2d31b135a86d3505d6b9f10146fa0bf3b", "node_id": "C_kwDOAAsO6NoAKDYyMWJhMWMyZDMxYjEzNWE4NmQzNTA1ZDZiOWYxMDE0NmZhMGJmM2I", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-28T10:52:40Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-28T10:52:40Z"}, "message": "import style", "tree": {"sha": "b9d6e235f098342da3667fdcd94c6f8677f3f986", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9d6e235f098342da3667fdcd94c6f8677f3f986"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/621ba1c2d31b135a86d3505d6b9f10146fa0bf3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/621ba1c2d31b135a86d3505d6b9f10146fa0bf3b", "html_url": "https://github.com/rust-lang/rust/commit/621ba1c2d31b135a86d3505d6b9f10146fa0bf3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/621ba1c2d31b135a86d3505d6b9f10146fa0bf3b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c11b363df143b60a8fe407ce5fcce254dff4e7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c11b363df143b60a8fe407ce5fcce254dff4e7e", "html_url": "https://github.com/rust-lang/rust/commit/5c11b363df143b60a8fe407ce5fcce254dff4e7e"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e4199898bfc5087361c118d28e16dfa918de8d9e", "filename": "crates/ide_db/src/helpers.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/621ba1c2d31b135a86d3505d6b9f10146fa0bf3b/crates%2Fide_db%2Fsrc%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/621ba1c2d31b135a86d3505d6b9f10146fa0bf3b/crates%2Fide_db%2Fsrc%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers.rs?ref=621ba1c2d31b135a86d3505d6b9f10146fa0bf3b", "patch": "@@ -14,7 +14,7 @@ use base_db::FileId;\n use hir::{ItemInNs, MacroDef, ModuleDef, Name, PathResolution, Semantics};\n use itertools::Itertools;\n use syntax::{\n-    ast::{self, make, HasLoopBody, Ident},\n+    ast::{self, make, HasLoopBody},\n     AstNode, AstToken, Direction, SyntaxElement, SyntaxKind, SyntaxToken, TokenAtOffset, WalkEvent,\n     T,\n };\n@@ -38,7 +38,7 @@ pub fn item_name(db: &RootDatabase, item: ItemInNs) -> Option<Name> {\n pub fn get_path_in_derive_attr(\n     sema: &hir::Semantics<RootDatabase>,\n     attr: &ast::Attr,\n-    cursor: &Ident,\n+    cursor: &ast::Ident,\n ) -> Option<ast::Path> {\n     let path = attr.path()?;\n     let tt = attr.token_tree()?;\n@@ -55,7 +55,7 @@ pub fn get_path_in_derive_attr(\n }\n \n /// Parses the path the identifier is part of inside a token tree.\n-pub fn get_path_at_cursor_in_tt(cursor: &Ident) -> Option<ast::Path> {\n+pub fn get_path_at_cursor_in_tt(cursor: &ast::Ident) -> Option<ast::Path> {\n     let cursor = cursor.syntax();\n     let first = cursor\n         .siblings_with_tokens(Direction::Prev)\n@@ -75,7 +75,7 @@ pub fn get_path_at_cursor_in_tt(cursor: &Ident) -> Option<ast::Path> {\n pub fn try_resolve_derive_input(\n     sema: &hir::Semantics<RootDatabase>,\n     attr: &ast::Attr,\n-    cursor: &Ident,\n+    cursor: &ast::Ident,\n ) -> Option<PathResolution> {\n     let path = get_path_in_derive_attr(sema, attr, cursor)?;\n     let scope = sema.scope(attr.syntax());"}]}