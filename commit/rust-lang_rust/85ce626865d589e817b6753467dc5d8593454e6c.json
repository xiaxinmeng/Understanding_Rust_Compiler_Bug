{"sha": "85ce626865d589e817b6753467dc5d8593454e6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1Y2U2MjY4NjVkNTg5ZTgxN2I2NzUzNDY3ZGM1ZDg1OTM0NTRlNmM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-01-18T09:23:51Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-01-22T19:10:00Z"}, "message": "Improve PlaceElem::Subslice handling", "tree": {"sha": "d75723e8ee19c2170388ebc42006c99766112dd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d75723e8ee19c2170388ebc42006c99766112dd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85ce626865d589e817b6753467dc5d8593454e6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85ce626865d589e817b6753467dc5d8593454e6c", "html_url": "https://github.com/rust-lang/rust/commit/85ce626865d589e817b6753467dc5d8593454e6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85ce626865d589e817b6753467dc5d8593454e6c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddd3d95a7eb02ba491e6b1ac7ca9c60ee18e3c70", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddd3d95a7eb02ba491e6b1ac7ca9c60ee18e3c70", "html_url": "https://github.com/rust-lang/rust/commit/ddd3d95a7eb02ba491e6b1ac7ca9c60ee18e3c70"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "e1ca09fa7804e92423d6df4ac5e8fe89774b6871", "filename": "src/base.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/85ce626865d589e817b6753467dc5d8593454e6c/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85ce626865d589e817b6753467dc5d8593454e6c/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=85ce626865d589e817b6753467dc5d8593454e6c", "patch": "@@ -678,11 +678,10 @@ pub fn trans_place<'tcx>(\n                 // slice[from:-to] in Python terms.\n \n                 match cplace.layout().ty.kind {\n-                    ty::Array(elem_ty, len) => {\n+                    ty::Array(elem_ty, _len) => {\n+                        assert!(!from_end, \"array subslices are never `from_end`\");\n                         let elem_layout = fx.layout_of(elem_ty);\n                         let ptr = cplace.to_ptr(fx);\n-                        let len = crate::constant::force_eval_const(fx, len)\n-                            .eval_usize(fx.tcx, ParamEnv::reveal_all());\n                         cplace = CPlace::for_ptr(\n                             ptr.offset_i64(fx, elem_layout.size.bytes() as i64 * from as i64),\n                             fx.layout_of(fx.tcx.mk_array(elem_ty, to as u64 - from as u64)),"}]}