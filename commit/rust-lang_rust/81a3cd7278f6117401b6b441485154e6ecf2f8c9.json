{"sha": "81a3cd7278f6117401b6b441485154e6ecf2f8c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxYTNjZDcyNzhmNjExNzQwMWI2YjQ0MTQ4NTE1NGU2ZWNmMmY4Yzk=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-14T15:45:00Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-14T16:39:20Z"}, "message": "allow try as scrutinee, e.g. `match try ...`", "tree": {"sha": "7a4e2351f60abf75a1777fb68ad733c2131ab1a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a4e2351f60abf75a1777fb68ad733c2131ab1a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81a3cd7278f6117401b6b441485154e6ecf2f8c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81a3cd7278f6117401b6b441485154e6ecf2f8c9", "html_url": "https://github.com/rust-lang/rust/commit/81a3cd7278f6117401b6b441485154e6ecf2f8c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81a3cd7278f6117401b6b441485154e6ecf2f8c9/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2765f426da76fd7b7b9bd377de7f92dd181387c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2765f426da76fd7b7b9bd377de7f92dd181387c0", "html_url": "https://github.com/rust-lang/rust/commit/2765f426da76fd7b7b9bd377de7f92dd181387c0"}], "stats": {"total": 108, "additions": 88, "deletions": 20}, "files": [{"sha": "4e3c5fa63de2cbb2f715585290c59576714e877c", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/81a3cd7278f6117401b6b441485154e6ecf2f8c9/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a3cd7278f6117401b6b441485154e6ecf2f8c9/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=81a3cd7278f6117401b6b441485154e6ecf2f8c9", "patch": "@@ -1846,11 +1846,9 @@ impl<'a> Parser<'a> {\n     }\n \n     fn is_try_block(&self) -> bool {\n-        self.token.is_keyword(kw::Try) &&\n-        self.look_ahead(1, |t| *t == token::OpenDelim(token::Brace)) &&\n-        self.token.uninterpolated_span().rust_2018() &&\n-        // Prevent `while try {} {}`, `if try {} {} else {}`, etc.\n-        !self.restrictions.contains(Restrictions::NO_STRUCT_LITERAL)\n+        self.token.is_keyword(kw::Try)\n+            && self.look_ahead(1, |t| *t == token::OpenDelim(token::Brace))\n+            && self.token.uninterpolated_span().rust_2018()\n     }\n \n     /// Parses an `async move? {...}` expression."}, {"sha": "cd0b967e79d07bcca6c1a8aca9fed4506aba433d", "filename": "src/test/ui/try-block/try-block-in-match.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/81a3cd7278f6117401b6b441485154e6ecf2f8c9/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a3cd7278f6117401b6b441485154e6ecf2f8c9/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.rs?ref=81a3cd7278f6117401b6b441485154e6ecf2f8c9", "patch": "@@ -1,7 +1,11 @@\n+// run-pass\n // compile-flags: --edition 2018\n \n #![feature(try_blocks)]\n \n fn main() {\n-    match try { false } { _ => {} } //~ ERROR expected expression, found reserved keyword `try`\n+    match try { } {\n+        Err(()) => (),\n+        Ok(()) => (),\n+    }\n }"}, {"sha": "936e0fe19bafeec19f05569240f644cbd9bc4fd9", "filename": "src/test/ui/try-block/try-block-in-match.stderr", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2765f426da76fd7b7b9bd377de7f92dd181387c0/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2765f426da76fd7b7b9bd377de7f92dd181387c0/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-match.stderr?ref=2765f426da76fd7b7b9bd377de7f92dd181387c0", "patch": "@@ -1,10 +0,0 @@\n-error: expected expression, found reserved keyword `try`\n-  --> $DIR/try-block-in-match.rs:6:11\n-   |\n-LL |     match try { false } { _ => {} }\n-   |     ----- ^^^ expected expression\n-   |     |\n-   |     while parsing this match expression\n-\n-error: aborting due to previous error\n-"}, {"sha": "33d27236519290134c5fdf4fb8dd9d0e6cacda6e", "filename": "src/test/ui/try-block/try-block-in-while.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/81a3cd7278f6117401b6b441485154e6ecf2f8c9/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a3cd7278f6117401b6b441485154e6ecf2f8c9/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.rs?ref=81a3cd7278f6117401b6b441485154e6ecf2f8c9", "patch": "@@ -3,5 +3,6 @@\n #![feature(try_blocks)]\n \n fn main() {\n-    while try { false } {} //~ ERROR expected expression, found reserved keyword `try`\n+    while try { false } {}\n+    //~^ ERROR the trait bound `bool: std::ops::Try` is not satisfied\n }"}, {"sha": "ac41ddfd8c042c13b3663b22525126839c133b82", "filename": "src/test/ui/try-block/try-block-in-while.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/81a3cd7278f6117401b6b441485154e6ecf2f8c9/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81a3cd7278f6117401b6b441485154e6ecf2f8c9/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-while.stderr?ref=81a3cd7278f6117401b6b441485154e6ecf2f8c9", "patch": "@@ -1,8 +1,11 @@\n-error: expected expression, found reserved keyword `try`\n-  --> $DIR/try-block-in-while.rs:6:11\n+error[E0277]: the trait bound `bool: std::ops::Try` is not satisfied\n+  --> $DIR/try-block-in-while.rs:6:15\n    |\n LL |     while try { false } {}\n-   |           ^^^ expected expression\n+   |               ^^^^^^^^^ the trait `std::ops::Try` is not implemented for `bool`\n+   |\n+   = note: required by `std::ops::Try::from_ok`\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "0b767eb2dad77de9c4dfbe5469dd63c104352a06", "filename": "src/test/ui/try-block/try-block-unused-delims.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/81a3cd7278f6117401b6b441485154e6ecf2f8c9/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a3cd7278f6117401b6b441485154e6ecf2f8c9/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.rs?ref=81a3cd7278f6117401b6b441485154e6ecf2f8c9", "patch": "@@ -0,0 +1,28 @@\n+// check-pass\n+// compile-flags: --edition 2018\n+\n+#![feature(try_blocks)]\n+#![warn(unused_parens, unused_braces)]\n+\n+fn consume<T>(_: Result<T, T>) -> T { todo!() }\n+\n+fn main() {\n+    consume((try {}));\n+    //~^ WARN unnecessary parentheses\n+\n+    consume({ try {} });\n+    //~^ WARN unnecessary braces\n+\n+    match (try {}) {\n+        //~^ WARN unnecessary parentheses\n+        Ok(()) | Err(()) => (),\n+    }\n+\n+    if let Err(()) = (try {}) {}\n+    //~^ WARN unnecessary parentheses\n+\n+    match (try {}) {\n+        //~^ WARN unnecessary parentheses\n+        Ok(()) | Err(()) => (),\n+    }\n+}"}, {"sha": "5c7602ee0ab1246c4322f5b1ffc16dfd2ee1f8c0", "filename": "src/test/ui/try-block/try-block-unused-delims.stderr", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/81a3cd7278f6117401b6b441485154e6ecf2f8c9/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81a3cd7278f6117401b6b441485154e6ecf2f8c9/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.stderr?ref=81a3cd7278f6117401b6b441485154e6ecf2f8c9", "patch": "@@ -0,0 +1,44 @@\n+warning: unnecessary parentheses around function argument\n+  --> $DIR/try-block-unused-delims.rs:10:13\n+   |\n+LL |     consume((try {}));\n+   |             ^^^^^^^^ help: remove these parentheses\n+   |\n+note: the lint level is defined here\n+  --> $DIR/try-block-unused-delims.rs:5:9\n+   |\n+LL | #![warn(unused_parens, unused_braces)]\n+   |         ^^^^^^^^^^^^^\n+\n+warning: unnecessary braces around function argument\n+  --> $DIR/try-block-unused-delims.rs:13:13\n+   |\n+LL |     consume({ try {} });\n+   |             ^^^^^^^^^^ help: remove these braces\n+   |\n+note: the lint level is defined here\n+  --> $DIR/try-block-unused-delims.rs:5:24\n+   |\n+LL | #![warn(unused_parens, unused_braces)]\n+   |                        ^^^^^^^^^^^^^\n+\n+warning: unnecessary parentheses around `match` scrutinee expression\n+  --> $DIR/try-block-unused-delims.rs:16:11\n+   |\n+LL |     match (try {}) {\n+   |           ^^^^^^^^ help: remove these parentheses\n+\n+warning: unnecessary parentheses around `let` scrutinee expression\n+  --> $DIR/try-block-unused-delims.rs:21:22\n+   |\n+LL |     if let Err(()) = (try {}) {}\n+   |                      ^^^^^^^^ help: remove these parentheses\n+\n+warning: unnecessary parentheses around `match` scrutinee expression\n+  --> $DIR/try-block-unused-delims.rs:24:11\n+   |\n+LL |     match (try {}) {\n+   |           ^^^^^^^^ help: remove these parentheses\n+\n+warning: 5 warnings emitted\n+"}]}