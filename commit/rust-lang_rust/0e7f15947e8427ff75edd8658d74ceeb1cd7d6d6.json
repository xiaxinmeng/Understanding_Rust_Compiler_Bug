{"sha": "0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "node_id": "C_kwDOAAsO6NoAKDBlN2YxNTk0N2U4NDI3ZmY3NWVkZDg2NThkNzRjZWViMWNkN2Q2ZDY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-29T04:24:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-29T04:24:24Z"}, "message": "Rollup merge of #105024 - notriddle:notriddle/fnname, r=jyn514\n\nrustdoc: remove `fnname` CSS class that's styled exactly like `fn`\n\nIt's not obvious why this was ever a separate class name, since even in c4219a478354b464079b1b7ab081e071e8e39765 when it was first added, it was styled identically to regular `fn` links.", "tree": {"sha": "3222d8d622084895b0154a8ef025b86b7331729b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3222d8d622084895b0154a8ef025b86b7331729b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjhYl4CRBK7hj4Ov3rIwAALjgIAEq9wODRDHTR4A1/BA2yQVil\nOepTVI75CNXNoWXSpVRBZJGrVithwu/gAQrsvH/IYFzT+BzW8gjRd52qSyDQHaPM\nbnn+4HFoWm8o7W5hhWEPgq9QPrYXHpsiBHFeAU41i3y9BwukJGL008FOzpORG0Mh\nj+VbEUsTQmIMVF2PIzg1L4+IuyKWi7Jh+E2ocH/4FwSgguHV1Ia6P1vVDWTl7yaH\n4cGs8ZSgMuRDT/NkvKFjoweGLMolLjxCQAO4Jmhnu5j4L9SbFysQs3l/nzFHTwNq\nwOnfdetKj66wFdn94ykp0au0I73G5Bx0vMr1bSaf2lFR1RGQ1XRD4aJq+f9BhFk=\n=YCqQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 3222d8d622084895b0154a8ef025b86b7331729b\nparent 219ea9a23f74598e5afa9c1d199891f806e61e45\nparent 19e020029670ca422978c98209d1ed712a041c45\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1669695864 +0100\ncommitter GitHub <noreply@github.com> 1669695864 +0100\n\nRollup merge of #105024 - notriddle:notriddle/fnname, r=jyn514\n\nrustdoc: remove `fnname` CSS class that's styled exactly like `fn`\n\nIt's not obvious why this was ever a separate class name, since even in c4219a478354b464079b1b7ab081e071e8e39765 when it was first added, it was styled identically to regular `fn` links.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "html_url": "https://github.com/rust-lang/rust/commit/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "219ea9a23f74598e5afa9c1d199891f806e61e45", "url": "https://api.github.com/repos/rust-lang/rust/commits/219ea9a23f74598e5afa9c1d199891f806e61e45", "html_url": "https://github.com/rust-lang/rust/commit/219ea9a23f74598e5afa9c1d199891f806e61e45"}, {"sha": "19e020029670ca422978c98209d1ed712a041c45", "url": "https://api.github.com/repos/rust-lang/rust/commits/19e020029670ca422978c98209d1ed712a041c45", "html_url": "https://github.com/rust-lang/rust/commit/19e020029670ca422978c98209d1ed712a041c45"}], "stats": {"total": 69, "additions": 34, "deletions": 35}, "files": [{"sha": "08f8096b07bd66399ac9bda4b17f6f19d8fa56c7", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -847,10 +847,10 @@ fn assoc_method(\n         render_attributes_in_code(w, meth);\n         (0, \"\", Ending::Newline)\n     };\n-    w.reserve(header_len + \"<a href=\\\"\\\" class=\\\"fnname\\\">{\".len() + \"</a>\".len());\n+    w.reserve(header_len + \"<a href=\\\"\\\" class=\\\"fn\\\">{\".len() + \"</a>\".len());\n     write!(\n         w,\n-        \"{indent}{vis}{constness}{asyncness}{unsafety}{defaultness}{abi}fn <a{href} class=\\\"fnname\\\">{name}</a>\\\n+        \"{indent}{vis}{constness}{asyncness}{unsafety}{defaultness}{abi}fn <a{href} class=\\\"fn\\\">{name}</a>\\\n          {generics}{decl}{notable_traits}{where_clause}\",\n         indent = indent_str,\n         vis = vis,"}, {"sha": "cf5592da43205d81a9b61907be8ccf7e935192df", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -242,7 +242,6 @@ h1 a,\n }\n \n .content span.fn, .content a.fn,\n-.content .fnname,\n .content span.method, .content a.method,\n .content span.tymethod, .content a.tymethod {\n \tcolor: var(--function-link-color);"}, {"sha": "2e07f19b13d649fb4fdb0b62f016dd44d146e8e1", "filename": "src/test/rustdoc-gui/item-decl-colors.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc-gui%2Fitem-decl-colors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc-gui%2Fitem-decl-colors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fitem-decl-colors.goml?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -30,7 +30,7 @@ define-function: (\n         (\"assert-css\", (\".item-decl .primitive\", {\"color\": |primitive_color|}, ALL)),\n         (\"goto\", \"file://\" + |DOC_PATH| + \"/test_docs/trait.TraitWithoutGenerics.html\"),\n         (\"assert-css\", (\".item-decl .constant\", {\"color\": |constant_color|}, ALL)),\n-        (\"assert-css\", (\".item-decl .fnname\", {\"color\": |fn_color|}, ALL)),\n+        (\"assert-css\", (\".item-decl .fn\", {\"color\": |fn_color|}, ALL)),\n         (\"assert-css\", (\".item-decl .associatedtype\", {\"color\": |assoc_type_color|}, ALL)),\n     ],\n )"}, {"sha": "7d4bd27d42d4d20feacb7823d98142c007c8aff3", "filename": "src/test/rustdoc-gui/notable-trait.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc-gui%2Fnotable-trait.goml", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc-gui%2Fnotable-trait.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fnotable-trait.goml?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -226,7 +226,7 @@ assert: \"#method\\.create_an_iterator_from_read .notable-traits:focus\"\n // Now we check that the focus isn't given back to the wrong item when opening\n // another popover.\n store-window-property: (scroll, \"scrollY\")\n-click: \"#method\\.create_an_iterator_from_read .fnname\"\n+click: \"#method\\.create_an_iterator_from_read .fn\"\n // We ensure that the scroll position changed.\n assert-window-property-false: {\"scrollY\": |scroll|}\n // Store the new position.\n@@ -240,7 +240,7 @@ assert-window-property-false: {\"scrollY\": |scroll|}\n \n // Same but with Escape handling.\n store-window-property: (scroll, \"scrollY\")\n-click: \"#method\\.create_an_iterator_from_read .fnname\"\n+click: \"#method\\.create_an_iterator_from_read .fn\"\n // We ensure that the scroll position changed.\n assert-window-property-false: {\"scrollY\": |scroll|}\n // Store the new position."}, {"sha": "41596a9bcccf28170ba5cdb2ad2f04d4d9e9783c", "filename": "src/test/rustdoc-gui/where-whitespace.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc-gui%2Fwhere-whitespace.goml", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc-gui%2Fwhere-whitespace.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fwhere-whitespace.goml?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -5,13 +5,13 @@ show-text: true\n // line than \"pub trait Whitespace<Idx>\").\n compare-elements-position-false: (\".item-decl code\", \".where.fmt-newline\", (\"y\"))\n // And that the code following it isn't on the same line either.\n-compare-elements-position-false: (\".item-decl .fnname\", \".where.fmt-newline\", (\"y\"))\n+compare-elements-position-false: (\".item-decl .fn\", \".where.fmt-newline\", (\"y\"))\n \n goto: \"file://\" + |DOC_PATH| + \"/lib2/struct.WhereWhitespace.html\"\n // We make the screen a bit wider to ensure that the trait impl is on one line.\n size: (915, 915)\n \n-compare-elements-position-false: (\"#method\\.new .fnname\", \"#method\\.new .where.fmt-newline\", (\"y\"))\n+compare-elements-position-false: (\"#method\\.new .fn\", \"#method\\.new .where.fmt-newline\", (\"y\"))\n // We ensure that both the trait name and the struct name are on the same line in\n // \"impl<K, T> Whitespace<&K> for WhereWhitespace<T>\".\n compare-elements-position: ("}, {"sha": "b9ec8bf4c09a023c0142f3d3b5fa88cbcf511aa7", "filename": "src/test/rustdoc/anchors.no_method_anchor.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fanchors.no_method_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fanchors.no_method_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_method_anchor.html?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -1 +1 @@\n-<section id=\"method.new\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#48\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.new\" class=\"fnname\">new</a>() -&gt; Self</h4></section>\n\\ No newline at end of file\n+<section id=\"method.new\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#48\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.new\" class=\"fn\">new</a>() -&gt; Self</h4></section>\n\\ No newline at end of file"}, {"sha": "4308ddad412069e86acea1890b91f62032668536", "filename": "src/test/rustdoc/anchors.no_trait_method_anchor.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fanchors.no_trait_method_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fanchors.no_trait_method_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_trait_method_anchor.html?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -1 +1 @@\n-<section id=\"method.bar\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#23\">source</a><h4 class=\"code-header\">fn <a href=\"#method.bar\" class=\"fnname\">bar</a>()</h4></section>\n\\ No newline at end of file\n+<section id=\"method.bar\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#23\">source</a><h4 class=\"code-header\">fn <a href=\"#method.bar\" class=\"fn\">bar</a>()</h4></section>\n\\ No newline at end of file"}, {"sha": "91eed8a3742926f223e38ebefac3af3160712e9c", "filename": "src/test/rustdoc/anchors.no_tymethod_anchor.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fanchors.no_tymethod_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fanchors.no_tymethod_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_tymethod_anchor.html?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -1 +1 @@\n-<section id=\"tymethod.foo\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#20\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.foo\" class=\"fnname\">foo</a>()</h4></section>\n\\ No newline at end of file\n+<section id=\"tymethod.foo\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#20\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.foo\" class=\"fn\">foo</a>()</h4></section>\n\\ No newline at end of file"}, {"sha": "02b51b3446195711319d83369a393c2d7d5ac452", "filename": "src/test/rustdoc/decl-trailing-whitespace.declaration.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fdecl-trailing-whitespace.declaration.html", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fdecl-trailing-whitespace.declaration.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdecl-trailing-whitespace.declaration.html?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -1,7 +1,7 @@\n <code>pub trait Write {\n-    fn <a href=\"#tymethod.poll_write\" class=\"fnname\">poll_write</a>(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self: <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cx: &amp;mut <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;buf: &amp;mut [<a class=\"primitive\" href=\"{{channel}}/std/primitive.usize.html\">usize</a>]<br />&#160;&#160;&#160;&#160;) -&gt; <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"{{channel}}/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"{{channel}}/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"struct.Error.html\" title=\"struct foo::Error\">Error</a>&gt;&gt;;\n-<span class=\"item-spacer\" />    fn <a href=\"#tymethod.poll_flush\" class=\"fnname\">poll_flush</a>(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self: <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cx: &amp;mut <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;<br />&#160;&#160;&#160;&#160;) -&gt; <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"{{channel}}/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"{{channel}}/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"struct.Error.html\" title=\"struct foo::Error\">Error</a>&gt;&gt;;\n-<span class=\"item-spacer\" />    fn <a href=\"#tymethod.poll_close\" class=\"fnname\">poll_close</a>(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self: <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cx: &amp;mut <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;<br />&#160;&#160;&#160;&#160;) -&gt; <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"{{channel}}/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"{{channel}}/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"struct.Error.html\" title=\"struct foo::Error\">Error</a>&gt;&gt;;\n+    fn <a href=\"#tymethod.poll_write\" class=\"fn\">poll_write</a>(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self: <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cx: &amp;mut <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;buf: &amp;mut [<a class=\"primitive\" href=\"{{channel}}/std/primitive.usize.html\">usize</a>]<br />&#160;&#160;&#160;&#160;) -&gt; <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"{{channel}}/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"{{channel}}/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"struct.Error.html\" title=\"struct foo::Error\">Error</a>&gt;&gt;;\n+<span class=\"item-spacer\" />    fn <a href=\"#tymethod.poll_flush\" class=\"fn\">poll_flush</a>(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self: <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cx: &amp;mut <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;<br />&#160;&#160;&#160;&#160;) -&gt; <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"{{channel}}/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"{{channel}}/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"struct.Error.html\" title=\"struct foo::Error\">Error</a>&gt;&gt;;\n+<span class=\"item-spacer\" />    fn <a href=\"#tymethod.poll_close\" class=\"fn\">poll_close</a>(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self: <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cx: &amp;mut <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;<br />&#160;&#160;&#160;&#160;) -&gt; <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"{{channel}}/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"{{channel}}/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"struct.Error.html\" title=\"struct foo::Error\">Error</a>&gt;&gt;;\n \n-    fn <a href=\"#method.poll_write_vectored\" class=\"fnname\">poll_write_vectored</a>(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self: <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cx: &amp;mut <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bufs: &amp;[<a class=\"primitive\" href=\"{{channel}}/std/primitive.usize.html\">usize</a>]<br />&#160;&#160;&#160;&#160;) -&gt; <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"{{channel}}/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"{{channel}}/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"struct.Error.html\" title=\"struct foo::Error\">Error</a>&gt;&gt; { ... }\n-}</code>\n+    fn <a href=\"#method.poll_write_vectored\" class=\"fn\">poll_write_vectored</a>(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self: <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cx: &amp;mut <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bufs: &amp;[<a class=\"primitive\" href=\"{{channel}}/std/primitive.usize.html\">usize</a>]<br />&#160;&#160;&#160;&#160;) -&gt; <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"{{channel}}/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"{{channel}}/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"struct.Error.html\" title=\"struct foo::Error\">Error</a>&gt;&gt; { ... }\n+}</code>\n\\ No newline at end of file"}, {"sha": "ef14836ccb8c6179552fc7e09b62f169a5a13152", "filename": "src/test/rustdoc/extern-default-method.no_href_on_anchor.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fextern-default-method.no_href_on_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fextern-default-method.no_href_on_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fextern-default-method.no_href_on_anchor.html?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -1 +1 @@\n-<a class=\"fnname\">provided</a>(&amp;self)\n\\ No newline at end of file\n+<a class=\"fn\">provided</a>(&amp;self)\n\\ No newline at end of file"}, {"sha": "fc28b230a5f7ed8ad30e476b011d2abf37cbbf4b", "filename": "src/test/rustdoc/extern-default-method.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fextern-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fextern-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fextern-default-method.rs?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -11,13 +11,13 @@ extern crate rustdoc_extern_default_method as ext;\n // However, the method in the trait impl should *not* have a link (an `href` attribute) to\n // its corresponding item in the trait declaration since it would otherwise be broken.\n //\n-// In older versions of rustdoc, the impl item (`a[@class=\"fnname\"]`) used to link to\n+// In older versions of rustdoc, the impl item (`a[@class=\"fn\"]`) used to link to\n // `#method.provided` \u2013 i.e. \"to itself\". Put in quotes since that was actually incorrect in\n // general: If the type `Struct` also had an inherent method called `provided`, the impl item\n // would link to that one even though those two methods are distinct items!\n \n // @count extern_default_method/struct.Struct.html '//*[@id=\"method.provided\"]' 1\n-// @count extern_default_method/struct.Struct.html '//*[@id=\"method.provided\"]//a[@class=\"fnname\"]' 1\n-// @snapshot no_href_on_anchor - '//*[@id=\"method.provided\"]//a[@class=\"fnname\"]'\n+// @count extern_default_method/struct.Struct.html '//*[@id=\"method.provided\"]//a[@class=\"fn\"]' 1\n+// @snapshot no_href_on_anchor - '//*[@id=\"method.provided\"]//a[@class=\"fn\"]'\n // @has extern_default_method/struct.Struct.html '//*[@id=\"method.provided\"]//a[@class=\"anchor\"]/@href' #method.provided\n pub use ext::Struct;"}, {"sha": "29f9c2926e9ec0c42f10d3eb5e70d5ad3bddf2c0", "filename": "src/test/rustdoc/foreigntype.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fforeigntype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fforeigntype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fforeigntype.rs?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -6,7 +6,7 @@ extern \"C\" {\n }\n \n impl ExtType {\n-    // @has - '//a[@class=\"fnname\"]' 'do_something'\n+    // @has - '//a[@class=\"fn\"]' 'do_something'\n     pub fn do_something(&self) {}\n }\n "}, {"sha": "f3c1c045202b0487c67306740b4eab50452e063f", "filename": "src/test/rustdoc/inline_cross/issue-24183.method_no_where_self_sized.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-24183.method_no_where_self_sized.html", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-24183.method_no_where_self_sized.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fissue-24183.method_no_where_self_sized.html?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -1 +1 @@\n-<h4 class=\"code-header\">fn <a href=\"#method.touch\" class=\"fnname\">touch</a>(&amp;self)</h4>\n\\ No newline at end of file\n+<h4 class=\"code-header\">fn <a href=\"#method.touch\" class=\"fn\">touch</a>(&amp;self)</h4>\n\\ No newline at end of file"}, {"sha": "a125fa036790b6c36cc88adf0d46806d56ce8624", "filename": "src/test/rustdoc/trait-impl-items-links-and-anchors.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -13,10 +13,10 @@ impl MyTrait for String {\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"associatedconstant.VALUE-1\"]//a[@class=\"constant\"]/@href' #associatedconstant.VALUE\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"associatedconstant.VALUE-1\"]//a[@class=\"anchor\"]/@href' #associatedconstant.VALUE-1\n     const VALUE: u32 = 5;\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"method.trait_function\"]//a[@class=\"fnname\"]/@href' #tymethod.trait_function\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"method.trait_function\"]//a[@class=\"fn\"]/@href' #tymethod.trait_function\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"method.trait_function\"]//a[@class=\"anchor\"]/@href' #method.trait_function\n     fn trait_function(&self) {}\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"method.defaulted_override-1\"]//a[@class=\"fnname\"]/@href' #method.defaulted_override\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"method.defaulted_override-1\"]//a[@class=\"fn\"]/@href' #method.defaulted_override\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"method.defaulted_override-1\"]//a[@class=\"anchor\"]/@href' #method.defaulted_override-1\n     fn defaulted_override(&self) {}\n }\n@@ -28,10 +28,10 @@ impl MyTrait for Vec<u8> {\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"associatedconstant.VALUE-2\"]//a[@class=\"constant\"]/@href' #associatedconstant.VALUE\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"associatedconstant.VALUE-2\"]//a[@class=\"anchor\"]/@href' #associatedconstant.VALUE-2\n     const VALUE: u32 = 5;\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"method.trait_function\"]//a[@class=\"fnname\"]/@href' #tymethod.trait_function\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"method.trait_function\"]//a[@class=\"fn\"]/@href' #tymethod.trait_function\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"method.trait_function-1\"]//a[@class=\"anchor\"]/@href' #method.trait_function-1\n     fn trait_function(&self) {}\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"method.defaulted_override-2\"]//a[@class=\"fnname\"]/@href' #method.defaulted_override\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"method.defaulted_override-2\"]//a[@class=\"fn\"]/@href' #method.defaulted_override\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//*[@id=\"method.defaulted_override-2\"]//a[@class=\"anchor\"]/@href' #method.defaulted_override-2\n     fn defaulted_override(&self) {}\n }\n@@ -45,13 +45,13 @@ impl MyTrait for MyStruct {\n     // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//*[@id=\"associatedconstant.VALUE\"]//a[@class=\"constant\"]/@href' trait.MyTrait.html#associatedconstant.VALUE\n     // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//*[@id=\"associatedconstant.VALUE\"]//a[@class=\"anchor\"]/@href' #associatedconstant.VALUE\n     const VALUE: u32 = 20;\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//*[@id=\"method.trait_function\"]//a[@class=\"fnname\"]/@href' trait.MyTrait.html#tymethod.trait_function\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//*[@id=\"method.trait_function\"]//a[@class=\"fn\"]/@href' trait.MyTrait.html#tymethod.trait_function\n     // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//*[@id=\"method.trait_function\"]//a[@class=\"anchor\"]/@href' #method.trait_function\n     fn trait_function(&self) {}\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//*[@id=\"method.defaulted_override\"]//a[@class=\"fnname\"]/@href' trait.MyTrait.html#method.defaulted_override\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//*[@id=\"method.defaulted_override\"]//a[@class=\"fn\"]/@href' trait.MyTrait.html#method.defaulted_override\n     // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//*[@id=\"method.defaulted_override\"]//a[@class=\"anchor\"]/@href' #method.defaulted_override\n     fn defaulted_override(&self) {}\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//*[@id=\"method.defaulted\"]//a[@class=\"fnname\"]/@href' trait.MyTrait.html#method.defaulted\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//*[@id=\"method.defaulted\"]//a[@class=\"fn\"]/@href' trait.MyTrait.html#method.defaulted\n     // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//*[@id=\"method.defaulted\"]//a[@class=\"anchor\"]/@href' #method.defaulted\n }\n "}, {"sha": "d5d6c556d8001464d0576c0cab4461f75ebbaaa7", "filename": "src/test/rustdoc/where.SWhere_TraitWhere_item-decl.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fwhere.SWhere_TraitWhere_item-decl.html", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fwhere.SWhere_TraitWhere_item-decl.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhere.SWhere_TraitWhere_item-decl.html?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -1,8 +1,8 @@\n <div class=\"item-decl\"><pre class=\"rust trait\"><code>pub trait TraitWhere {\n     type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'a&gt;<br />&#160;&#160;&#160;&#160;<span class=\"where\">where<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self: 'a</span>;\n \n-    fn <a href=\"#method.func\" class=\"fnname\">func</a>(self)<br />&#160;&#160;&#160;&#160;<span class=\"where\">where<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self: <a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a></span>,\n+    fn <a href=\"#method.func\" class=\"fn\">func</a>(self)<br />&#160;&#160;&#160;&#160;<span class=\"where\">where<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self: <a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a></span>,\n     { ... }\n-<span class=\"item-spacer\" />    fn <a href=\"#method.lines\" class=\"fnname\">lines</a>(self) -&gt; <a class=\"struct\" href=\"{{channel}}/std/io/struct.Lines.html\" title=\"struct std::io::Lines\">Lines</a>&lt;Self&gt;<br />&#160;&#160;&#160;&#160;<span class=\"where\">where<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self: <a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a></span>,\n+<span class=\"item-spacer\" />    fn <a href=\"#method.lines\" class=\"fn\">lines</a>(self) -&gt; <a class=\"struct\" href=\"{{channel}}/std/io/struct.Lines.html\" title=\"struct std::io::Lines\">Lines</a>&lt;Self&gt;<br />&#160;&#160;&#160;&#160;<span class=\"where\">where<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self: <a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a></span>,\n     { ... }\n }</code></pre></div>\n\\ No newline at end of file"}, {"sha": "50cfe362328b681749613d4e81a1e01a4c2a1bb8", "filename": "src/test/rustdoc/whitespace-after-where-clause.trait.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait.html", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait.html?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -1,6 +1,6 @@\n <div class=\"item-decl\"><pre class=\"rust trait\"><code>pub trait ToOwned&lt;T&gt;<span class=\"where fmt-newline\">where<br />&#160;&#160;&#160;&#160;T: <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span>{\n     type <a href=\"#associatedtype.Owned\" class=\"associatedtype\">Owned</a>;\n \n-    fn <a href=\"#tymethod.to_owned\" class=\"fnname\">to_owned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"trait.ToOwned.html#associatedtype.Owned\" title=\"type foo::ToOwned::Owned\">Owned</a>;\n-<span class=\"item-spacer\" />    fn <a href=\"#tymethod.whatever\" class=\"fnname\">whatever</a>(&amp;self) -&gt; T;\n+    fn <a href=\"#tymethod.to_owned\" class=\"fn\">to_owned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"trait.ToOwned.html#associatedtype.Owned\" title=\"type foo::ToOwned::Owned\">Owned</a>;\n+<span class=\"item-spacer\" />    fn <a href=\"#tymethod.whatever\" class=\"fn\">whatever</a>(&amp;self) -&gt; T;\n }</code></pre></div>\n\\ No newline at end of file"}, {"sha": "21eb89b75011b633667482e5547a34933bfab95e", "filename": "src/test/rustdoc/whitespace-after-where-clause.trait2.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait2.html", "raw_url": "https://github.com/rust-lang/rust/raw/0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwhitespace-after-where-clause.trait2.html?ref=0e7f15947e8427ff75edd8658d74ceeb1cd7d6d6", "patch": "@@ -1,6 +1,6 @@\n <div class=\"item-decl\"><pre class=\"rust trait\"><code>pub trait ToOwned2&lt;T:&#160;<a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; {\n     type <a href=\"#associatedtype.Owned\" class=\"associatedtype\">Owned</a>;\n \n-    fn <a href=\"#tymethod.to_owned\" class=\"fnname\">to_owned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"trait.ToOwned2.html#associatedtype.Owned\" title=\"type foo::ToOwned2::Owned\">Owned</a>;\n-<span class=\"item-spacer\" />    fn <a href=\"#tymethod.whatever\" class=\"fnname\">whatever</a>(&amp;self) -&gt; T;\n+    fn <a href=\"#tymethod.to_owned\" class=\"fn\">to_owned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"trait.ToOwned2.html#associatedtype.Owned\" title=\"type foo::ToOwned2::Owned\">Owned</a>;\n+<span class=\"item-spacer\" />    fn <a href=\"#tymethod.whatever\" class=\"fn\">whatever</a>(&amp;self) -&gt; T;\n }</code></pre></div>\n\\ No newline at end of file"}]}