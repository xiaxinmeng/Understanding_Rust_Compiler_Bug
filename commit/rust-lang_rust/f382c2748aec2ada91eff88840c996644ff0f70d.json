{"sha": "f382c2748aec2ada91eff88840c996644ff0f70d", "node_id": "C_kwDOAAsO6NoAKGYzODJjMjc0OGFlYzJhZGE5MWVmZjg4ODQwYzk5NjY0NGZmMGY3MGQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-08T21:43:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-08T21:43:25Z"}, "message": "Auto merge of #102819 - matthiaskrgr:rollup-xwnvofc, r=matthiaskrgr\n\nRollup of 7 pull requests\n\nSuccessful merges:\n\n - #99194 (Fix gdb-cmd for rust-gdbgui)\n - #99880 (`EscapeAscii` is not an `ExactSizeIterator`)\n - #102524 (rustdoc: remove weird `<a href=\"#\">` wrapper around unsafe triangle)\n - #102581 (Make the `config.src` handling for downloadable bootstrap more conservative)\n - #102604 (Improve readability of bootstrap's README)\n - #102723 (test: run-make: skip when cross-compiling)\n - #102815 (rustdoc: remove mobile topbar from source pages instead of hiding it)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "85ae870f8b8a10329cece97bf46f5a6e2a4407f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85ae870f8b8a10329cece97bf46f5a6e2a4407f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f382c2748aec2ada91eff88840c996644ff0f70d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f382c2748aec2ada91eff88840c996644ff0f70d", "html_url": "https://github.com/rust-lang/rust/commit/f382c2748aec2ada91eff88840c996644ff0f70d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f382c2748aec2ada91eff88840c996644ff0f70d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8796e7a9cfd4c5c4f1de15ec1c53994ddf288665", "url": "https://api.github.com/repos/rust-lang/rust/commits/8796e7a9cfd4c5c4f1de15ec1c53994ddf288665", "html_url": "https://github.com/rust-lang/rust/commit/8796e7a9cfd4c5c4f1de15ec1c53994ddf288665"}, {"sha": "92628633ee821eba88b243dea46c0019c407c24a", "url": "https://api.github.com/repos/rust-lang/rust/commits/92628633ee821eba88b243dea46c0019c407c24a", "html_url": "https://github.com/rust-lang/rust/commit/92628633ee821eba88b243dea46c0019c407c24a"}], "stats": {"total": 151, "additions": 97, "deletions": 54}, "files": [{"sha": "5e5399acc1b0f1990a9a2d813f83507a093eb130", "filename": "library/core/src/slice/ascii.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f382c2748aec2ada91eff88840c996644ff0f70d/library%2Fcore%2Fsrc%2Fslice%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f382c2748aec2ada91eff88840c996644ff0f70d/library%2Fcore%2Fsrc%2Fslice%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fascii.rs?ref=f382c2748aec2ada91eff88840c996644ff0f70d", "patch": "@@ -215,8 +215,6 @@ impl<'a> iter::DoubleEndedIterator for EscapeAscii<'a> {\n     }\n }\n #[stable(feature = \"inherent_ascii_escape\", since = \"1.60.0\")]\n-impl<'a> iter::ExactSizeIterator for EscapeAscii<'a> {}\n-#[stable(feature = \"inherent_ascii_escape\", since = \"1.60.0\")]\n impl<'a> iter::FusedIterator for EscapeAscii<'a> {}\n #[stable(feature = \"inherent_ascii_escape\", since = \"1.60.0\")]\n impl<'a> fmt::Display for EscapeAscii<'a> {"}, {"sha": "985727bddc53358756bf41134fcd3ee03775e4d2", "filename": "src/bootstrap/README.md", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Fbootstrap%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Fbootstrap%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FREADME.md?ref=f382c2748aec2ada91eff88840c996644ff0f70d", "patch": "@@ -1,7 +1,7 @@\n # rustbuild - Bootstrapping Rust\n \n This is an in-progress README which is targeted at helping to explain how Rust\n-is bootstrapped and in general some of the technical details of the build\n+is bootstrapped and in general, some of the technical details of the build\n system.\n \n ## Using rustbuild\n@@ -12,16 +12,16 @@ The rustbuild build system has a primary entry point, a top level `x.py` script:\n $ python ./x.py build\n ```\n \n-Note that if you're on Unix you should be able to execute the script directly:\n+Note that if you're on Unix, you should be able to execute the script directly:\n \n ```sh\n $ ./x.py build\n ```\n \n The script accepts commands, flags, and arguments to determine what to do:\n \n-* `build` - a general purpose command for compiling code. Alone `build` will\n-  bootstrap the entire compiler, and otherwise arguments passed indicate what to\n+* `build` - a general purpose command for compiling code. Alone, `build` will\n+  bootstrap the entire compiler, and otherwise, arguments passed indicate what to\n   build. For example:\n \n   ```\n@@ -38,7 +38,7 @@ The script accepts commands, flags, and arguments to determine what to do:\n   ./x.py build --stage 0 library/test\n   ```\n \n-  If files are dirty that would normally be rebuilt from stage 0, that can be\n+  If files that would normally be rebuilt from stage 0 are dirty, the rebuild can be\n   overridden using `--keep-stage 0`. Using `--keep-stage n` will skip all steps\n   that belong to stage n or earlier:\n \n@@ -47,8 +47,8 @@ The script accepts commands, flags, and arguments to determine what to do:\n   ./x.py build --keep-stage 0\n   ```\n \n-* `test` - a command for executing unit tests. Like the `build` command this\n-  will execute the entire test suite by default, and otherwise it can be used to\n+* `test` - a command for executing unit tests. Like the `build` command, this\n+  will execute the entire test suite by default, and otherwise, it can be used to\n   select which test suite is run:\n \n   ```\n@@ -75,7 +75,7 @@ The script accepts commands, flags, and arguments to determine what to do:\n   ./x.py test src/doc\n   ```\n \n-* `doc` - a command for building documentation. Like above can take arguments\n+* `doc` - a command for building documentation. Like above, can take arguments\n   for what to document.\n \n ## Configuring rustbuild\n@@ -110,12 +110,12 @@ compiler. What actually happens when you invoke rustbuild is:\n    compiles the build system itself (this folder). Finally, it then invokes the\n    actual `bootstrap` binary build system.\n 2. In Rust, `bootstrap` will slurp up all configuration, perform a number of\n-   sanity checks (compilers exist for example), and then start building the\n+   sanity checks (whether compilers exist, for example), and then start building the\n    stage0 artifacts.\n-3. The stage0 `cargo` downloaded earlier is used to build the standard library\n+3. The stage0 `cargo`, downloaded earlier, is used to build the standard library\n    and the compiler, and then these binaries are then copied to the `stage1`\n    directory. That compiler is then used to generate the stage1 artifacts which\n-   are then copied to the stage2 directory, and then finally the stage2\n+   are then copied to the stage2 directory, and then finally, the stage2\n    artifacts are generated using that compiler.\n \n The goal of each stage is to (a) leverage Cargo as much as possible and failing\n@@ -149,7 +149,7 @@ like this:\n build/\n \n   # Location where the stage0 compiler downloads are all cached. This directory\n-  # only contains the tarballs themselves as they're extracted elsewhere.\n+  # only contains the tarballs themselves, as they're extracted elsewhere.\n   cache/\n     2015-12-19/\n     2016-01-15/\n@@ -172,22 +172,22 @@ build/\n   # hand.\n   x86_64-unknown-linux-gnu/\n \n-    # The build artifacts for the `compiler-rt` library for the target this\n-    # folder is under. The exact layout here will likely depend on the platform,\n-    # and this is also built with CMake so the build system is also likely\n-    # different.\n+    # The build artifacts for the `compiler-rt` library for the target that\n+    # this folder is under. The exact layout here will likely depend on the\n+    # platform, and this is also built with CMake, so the build system is\n+    # also likely different.\n     compiler-rt/\n       build/\n \n     # Output folder for LLVM if it is compiled for this target\n     llvm/\n \n       # build folder (e.g. the platform-specific build system). Like with\n-      # compiler-rt this is compiled with CMake\n+      # compiler-rt, this is compiled with CMake\n       build/\n \n       # Installation of LLVM. Note that we run the equivalent of 'make install'\n-      # for LLVM to setup these folders.\n+      # for LLVM, to setup these folders.\n       bin/\n       lib/\n       include/\n@@ -206,18 +206,18 @@ build/\n \n     # Location where the stage0 Cargo and Rust compiler are unpacked. This\n     # directory is purely an extracted and overlaid tarball of these two (done\n-    # by the bootstrapy python script). In theory the build system does not\n+    # by the bootstrap python script). In theory, the build system does not\n     # modify anything under this directory afterwards.\n     stage0/\n \n-    # These to build directories are the cargo output directories for builds of\n-    # the standard library and compiler, respectively. Internally these may also\n+    # These to-build directories are the cargo output directories for builds of\n+    # the standard library and compiler, respectively. Internally, these may also\n     # have other target directories, which represent artifacts being compiled\n     # from the host to the specified target.\n     #\n     # Essentially, each of these directories is filled in by one `cargo`\n     # invocation. The build system instruments calling Cargo in the right order\n-    # with the right variables to ensure these are filled in correctly.\n+    # with the right variables to ensure that these are filled in correctly.\n     stageN-std/\n     stageN-test/\n     stageN-rustc/\n@@ -232,8 +232,8 @@ build/\n     # being compiled (e.g. after libstd has been built), *this* is used as the\n     # sysroot for the stage0 compiler being run.\n     #\n-    # Basically this directory is just a temporary artifact use to configure the\n-    # stage0 compiler to ensure that the libstd we just built is used to\n+    # Basically, this directory is just a temporary artifact used to configure the\n+    # stage0 compiler to ensure that the libstd that we just built is used to\n     # compile the stage1 compiler.\n     stage0-sysroot/lib/\n \n@@ -242,7 +242,7 @@ build/\n     # system will link (using hard links) output from stageN-{std,rustc} into\n     # each of these directories.\n     #\n-    # In theory there is no extra build output in these directories.\n+    # In theory, there is no extra build output in these directories.\n     stage1/\n     stage2/\n     stage3/\n@@ -265,14 +265,14 @@ structure here serves two goals:\n    depend on `std`, so libstd is a separate project compiled ahead of time\n    before the actual compiler builds.\n 2. Splitting \"host artifacts\" from \"target artifacts\". That is, when building\n-   code for an arbitrary target you don't need the entire compiler, but you'll\n+   code for an arbitrary target, you don't need the entire compiler, but you'll\n    end up needing libraries like libtest that depend on std but also want to use\n    crates.io dependencies. Hence, libtest is split out as its own project that\n    is sequenced after `std` but before `rustc`. This project is built for all\n    targets.\n \n There is some loss in build parallelism here because libtest can be compiled in\n-parallel with a number of rustc artifacts, but in theory the loss isn't too bad!\n+parallel with a number of rustc artifacts, but in theory, the loss isn't too bad!\n \n ## Build tools\n \n@@ -285,13 +285,13 @@ appropriate libstd/libtest/librustc compile above.\n \n ## Extending rustbuild\n \n-So you'd like to add a feature to the rustbuild build system or just fix a bug.\n+So, you'd like to add a feature to the rustbuild build system or just fix a bug.\n Great! One of the major motivational factors for moving away from `make` is that\n Rust is in theory much easier to read, modify, and write. If you find anything\n-excessively confusing, please open an issue on this and we'll try to get it\n-documented or simplified pronto.\n+excessively confusing, please open an issue on this, and we'll try to get it\n+documented or simplified, pronto.\n \n-First up, you'll probably want to read over the documentation above as that'll\n+First up, you'll probably want to read over the documentation above, as that'll\n give you a high level overview of what rustbuild is doing. You also probably\n want to play around a bit yourself by just getting it up and running before you\n dive too much into the actual build system itself.\n@@ -326,7 +326,7 @@ A 'major change' includes\n Changes that do not affect contributors to the compiler or users\n building rustc from source don't need an update to `VERSION`.\n \n-If you have any questions feel free to reach out on the `#t-infra` channel in\n+If you have any questions, feel free to reach out on the `#t-infra` channel in\n the [Rust Zulip server][rust-zulip] or ask on internals.rust-lang.org. When\n you encounter bugs, please file issues on the rust-lang/rust issue tracker.\n "}, {"sha": "da2d1c1301d6efeb542ce0d9064bf37321409b2d", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=f382c2748aec2ada91eff88840c996644ff0f70d", "patch": "@@ -829,10 +829,19 @@ impl Config {\n             let s = git_root.to_str().unwrap();\n \n             // Bootstrap is quite bad at handling /? in front of paths\n-            config.src = match s.strip_prefix(\"\\\\\\\\?\\\\\") {\n+            let src = match s.strip_prefix(\"\\\\\\\\?\\\\\") {\n                 Some(p) => PathBuf::from(p),\n                 None => PathBuf::from(git_root),\n             };\n+            // If this doesn't have at least `stage0.json`, we guessed wrong. This can happen when,\n+            // for example, the build directory is inside of another unrelated git directory.\n+            // In that case keep the original `CARGO_MANIFEST_DIR` handling.\n+            //\n+            // NOTE: this implies that downloadable bootstrap isn't supported when the build directory is outside\n+            // the source directory. We could fix that by setting a variable from all three of python, ./x, and x.ps1.\n+            if src.join(\"src\").join(\"stage0.json\").exists() {\n+                config.src = src;\n+            }\n         } else {\n             // We're building from a tarball, not git sources.\n             // We don't support pre-downloaded bootstrap in this case."}, {"sha": "590e488e643aa8612901b9b576975cd8bf1c6b1b", "filename": "src/etc/rust-gdbgui", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Fetc%2Frust-gdbgui", "raw_url": "https://github.com/rust-lang/rust/raw/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Fetc%2Frust-gdbgui", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Frust-gdbgui?ref=f382c2748aec2ada91eff88840c996644ff0f70d", "patch": "@@ -58,7 +58,6 @@ GDB_ARGS=\"--directory=\\\"$GDB_PYTHON_MODULE_DIRECTORY\\\" -iex \\\"add-auto-load-safe\n # Finally we execute gdbgui.\n PYTHONPATH=\"$PYTHONPATH:$GDB_PYTHON_MODULE_DIRECTORY\" \\\n   exec ${RUST_GDBGUI} \\\n-  --gdb ${RUST_GDB} \\\n-  --gdb-args \"${GDB_ARGS}\" \\\n+  --gdb-cmd \"${RUST_GDB} ${GDB_ARGS}\" \\\n   \"${@}\"\n "}, {"sha": "6327817364a5545e6f6900a56ec4ea9911c02619", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=f382c2748aec2ada91eff88840c996644ff0f70d", "patch": "@@ -400,7 +400,7 @@ fn item_module(w: &mut Buffer, cx: &mut Context<'_>, item: &clean::Item, items:\n                         if myitem.fn_header(cx.tcx()).unwrap().unsafety\n                             == hir::Unsafety::Unsafe =>\n                     {\n-                        \"<a title=\\\"unsafe function\\\" href=\\\"#\\\"><sup>\u26a0</sup></a>\"\n+                        \"<sup title=\\\"unsafe function\\\">\u26a0</sup>\"\n                     }\n                     _ => \"\",\n                 };"}, {"sha": "4678c4856f755655ffcd3663a46a58a4e9a149a3", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=f382c2748aec2ada91eff88840c996644ff0f70d", "patch": "@@ -1801,10 +1801,6 @@ in storage.js plus the media query with (min-width: 701px)\n \t\ttop: 0;\n \t}\n \n-\t.source .mobile-topbar {\n-\t\tdisplay: none;\n-\t}\n-\n \t.sidebar-menu-toggle {\n \t\twidth: 45px;\n \t\t/* Rare exception to specifying font sizes in rem. Since this is acting"}, {"sha": "359dd41b13fed015047e4624cbf6822412f58532", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=f382c2748aec2ada91eff88840c996644ff0f70d", "patch": "@@ -735,14 +735,15 @@ function loadCss(cssFileName) {\n     let oldSidebarScrollPosition = null;\n \n     function showSidebar() {\n-        if (window.innerWidth < window.RUSTDOC_MOBILE_BREAKPOINT) {\n+        const mobile_topbar = document.querySelector(\".mobile-topbar\");\n+        if (window.innerWidth < window.RUSTDOC_MOBILE_BREAKPOINT && mobile_topbar) {\n             // This is to keep the scroll position on mobile.\n             oldSidebarScrollPosition = window.scrollY;\n             document.body.style.width = `${document.body.offsetWidth}px`;\n             document.body.style.position = \"fixed\";\n             document.body.style.top = `-${oldSidebarScrollPosition}px`;\n-            document.querySelector(\".mobile-topbar\").style.top = `${oldSidebarScrollPosition}px`;\n-            document.querySelector(\".mobile-topbar\").style.position = \"relative\";\n+            mobile_topbar.style.top = `${oldSidebarScrollPosition}px`;\n+            mobile_topbar.style.position = \"relative\";\n         } else {\n             oldSidebarScrollPosition = null;\n         }\n@@ -751,13 +752,14 @@ function loadCss(cssFileName) {\n     }\n \n     function hideSidebar() {\n-        if (oldSidebarScrollPosition !== null) {\n+        const mobile_topbar = document.querySelector(\".mobile-topbar\");\n+        if (oldSidebarScrollPosition !== null && mobile_topbar) {\n             // This is to keep the scroll position on mobile.\n             document.body.style.width = \"\";\n             document.body.style.position = \"\";\n             document.body.style.top = \"\";\n-            document.querySelector(\".mobile-topbar\").style.top = \"\";\n-            document.querySelector(\".mobile-topbar\").style.position = \"\";\n+            mobile_topbar.style.top = \"\";\n+            mobile_topbar.style.position = \"\";\n             // The scroll position is lost when resetting the style, hence why we store it in\n             // `oldSidebarScrollPosition`.\n             window.scrollTo(0, oldSidebarScrollPosition);"}, {"sha": "01a2ea6c2ec3371b0d0e967081d545514fbb9e73", "filename": "src/librustdoc/html/templates/page.html", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "raw_url": "https://github.com/rust-lang/rust/raw/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html?ref=f382c2748aec2ada91eff88840c996644ff0f70d", "patch": "@@ -73,6 +73,7 @@\n     </div> {#- -#}\n     <![endif]--> {#- -#}\n     {{- layout.external_html.before_content|safe -}}\n+    {%- if page.css_class != \"source\" -%}\n     <nav class=\"mobile-topbar\"> {#- -#}\n         <button class=\"sidebar-menu-toggle\">&#9776;</button> {#- -#}\n         <a class=\"sidebar-logo\" href=\"{{page.root_path|safe}}{{krate_with_trailing_slash|safe}}index.html\"> {#- -#}\n@@ -86,6 +87,7 @@\n         </a> {#- -#}\n         <h2 class=\"location\"></h2> {#- -#}\n     </nav> {#- -#}\n+    {%- endif -%}\n     <nav class=\"sidebar\"> {#- -#}\n         <a class=\"sidebar-logo\" href=\"{{page.root_path|safe}}{{krate_with_trailing_slash|safe}}index.html\"> {#- -#}\n             <div class=\"logo-container\"> {#- -#}"}, {"sha": "986a3f4e64bab0537a3b4440cff847d9c035ce45", "filename": "src/test/run-make/issue-36710/Makefile", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Ftest%2Frun-make%2Fissue-36710%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Ftest%2Frun-make%2Fissue-36710%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-36710%2FMakefile?ref=f382c2748aec2ada91eff88840c996644ff0f70d", "patch": "@@ -1,10 +1,6 @@\n-# ignore-riscv64 $(call RUN,foo) expects to run the target executable natively\n+# ignore-cross-compile $(call RUN,foo) expects to run the target executable natively\n #                              so it won't work with remote-test-server\n-# ignore-arm Another build using remote-test-server\n # ignore-none no-std is not supported\n-# ignore-wasm32 FIXME: don't attempt to compile C++ to WASM\n-# ignore-wasm64 FIXME: don't attempt to compile C++ to WASM\n-# ignore-nvptx64-nvidia-cuda FIXME: can't find crate for `std`\n # ignore-musl FIXME: this makefile needs teaching how to use a musl toolchain\n #                    (see dist-i586-gnu-i586-i686-musl Dockerfile)\n "}, {"sha": "9ba663687729558ad33706e486e42e075a474010", "filename": "src/test/rustdoc-gui/sidebar-source-code.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Ftest%2Frustdoc-gui%2Fsidebar-source-code.goml", "raw_url": "https://github.com/rust-lang/rust/raw/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Ftest%2Frustdoc-gui%2Fsidebar-source-code.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar-source-code.goml?ref=f382c2748aec2ada91eff88840c996644ff0f70d", "patch": "@@ -42,4 +42,4 @@ assert-false: \".source-sidebar-expanded\"\n assert: \"nav.sidebar\"\n \n // Check that the topbar is not visible\n-assert-property: (\".mobile-topbar\", {\"offsetParent\": \"null\"})\n+assert-false: \".mobile-topbar\""}, {"sha": "33c74e3a331cd9051f6d997466e3942977542c0c", "filename": "src/test/rustdoc-gui/src/test_docs/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs?ref=f382c2748aec2ada91eff88840c996644ff0f70d", "patch": "@@ -367,3 +367,7 @@ impl TypeWithNoDocblocks {\n     pub fn first_fn(&self) {}\n     pub fn second_fn(&self) {}\n }\n+\n+pub unsafe fn unsafe_fn() {}\n+\n+pub fn safe_fn() {}"}, {"sha": "94f128db72e90c6a82e07821b6771241ad2074ad", "filename": "src/test/rustdoc-gui/unsafe-fn.goml", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Ftest%2Frustdoc-gui%2Funsafe-fn.goml", "raw_url": "https://github.com/rust-lang/rust/raw/f382c2748aec2ada91eff88840c996644ff0f70d/src%2Ftest%2Frustdoc-gui%2Funsafe-fn.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Funsafe-fn.goml?ref=f382c2748aec2ada91eff88840c996644ff0f70d", "patch": "@@ -0,0 +1,37 @@\n+goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+\n+compare-elements-property: (\n+\t\"//a[@title='test_docs::safe_fn fn']/..\",\n+\t\"//a[@title='test_docs::unsafe_fn fn']/..\",\n+\t[\"clientHeight\"]\n+)\n+\n+// If the text isn't displayed, the browser doesn't compute color style correctly...\n+show-text: true\n+\n+// Set the theme to dark.\n+local-storage: {\"rustdoc-theme\": \"dark\", \"rustdoc-preferred-dark-theme\": \"dark\", \"rustdoc-use-system-theme\": \"false\"}\n+// We reload the page so the local storage settings are being used.\n+reload:\n+\n+assert-css: (\".item-left sup\", {\n+\t\"color\": \"rgb(221, 221, 221)\"\n+})\n+\n+// Set the theme to ayu.\n+local-storage: {\"rustdoc-theme\": \"ayu\", \"rustdoc-preferred-dark-theme\": \"ayu\", \"rustdoc-use-system-theme\": \"false\"}\n+// We reload the page so the local storage settings are being used.\n+reload:\n+\n+assert-css: (\".item-left sup\", {\n+\t\"color\": \"rgb(197, 197, 197)\"\n+})\n+\n+// Set the theme to light.\n+local-storage: {\"rustdoc-theme\": \"light\", \"rustdoc-preferred-dark-theme\": \"light\", \"rustdoc-use-system-theme\": \"false\"}\n+// We reload the page so the local storage settings are being used.\n+reload:\n+\n+assert-css: (\".item-left sup\", {\n+\t\"color\": \"rgb(0, 0, 0)\"\n+})"}]}