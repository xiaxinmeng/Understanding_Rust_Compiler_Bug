{"sha": "2b7dc94535e2b4f922091ee1834e21a7d18ba4bf", "node_id": "C_kwDOAAsO6NoAKDJiN2RjOTQ1MzVlMmI0ZjkyMjA5MWVlMTgzNGUyMWE3ZDE4YmE0YmY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-27T06:46:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-27T06:46:54Z"}, "message": "Rollup merge of #109635 - Nilstrieb:debrrruginfo, r=compiler=errors\n\ndebuginfo: Get pointer size/align from tcx.data_layout instead of layout_of\n\nThis avoids some type interning and a query execution. It also just makes the code simpler.", "tree": {"sha": "2c46b03f9d36a0b8fc99ffa4b5bd481e8ea454e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c46b03f9d36a0b8fc99ffa4b5bd481e8ea454e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b7dc94535e2b4f922091ee1834e21a7d18ba4bf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkITveCRBK7hj4Ov3rIwAAEgQIAFaCEzKzhkzlvElYqTZhteYe\neFF3eWNNIwNBokeWhe2pmB8yMI6rKFsEiWFR0RCfCmewkjXdkFc/tqAlObBAEZa0\n1xcUiz3tzLikrotPtyd93C41E4IiZwsc4YqVPK4G97WKEQTGp7Ha3obDyobdGQGc\nS/95xFmt7HGal+Rg8yU99bMs/yHbZmL/sABjHWJLnKnp4DcO++E6m6xOMXDCriC2\nud20GKtFYtsKeKliHdga6Sp7HNME3+jdBqNqKLRBxk2FojaSV1wmwBWalcPjiaVu\n4j5KVeFkURNLLvJaHroXd6xajRKgVL09iaDR+8dSQhG5jAiQzhDYTeJbYmKmK+M=\n=HMTF\n-----END PGP SIGNATURE-----\n", "payload": "tree 2c46b03f9d36a0b8fc99ffa4b5bd481e8ea454e1\nparent b39db705f55a2d3aa4d3db63df46e9b66b8af423\nparent 72c917d4be2dfb53c01466335175ed69eba9b5ad\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679899614 +0200\ncommitter GitHub <noreply@github.com> 1679899614 +0200\n\nRollup merge of #109635 - Nilstrieb:debrrruginfo, r=compiler=errors\n\ndebuginfo: Get pointer size/align from tcx.data_layout instead of layout_of\n\nThis avoids some type interning and a query execution. It also just makes the code simpler.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b7dc94535e2b4f922091ee1834e21a7d18ba4bf", "html_url": "https://github.com/rust-lang/rust/commit/2b7dc94535e2b4f922091ee1834e21a7d18ba4bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b7dc94535e2b4f922091ee1834e21a7d18ba4bf/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b39db705f55a2d3aa4d3db63df46e9b66b8af423", "url": "https://api.github.com/repos/rust-lang/rust/commits/b39db705f55a2d3aa4d3db63df46e9b66b8af423", "html_url": "https://github.com/rust-lang/rust/commit/b39db705f55a2d3aa4d3db63df46e9b66b8af423"}, {"sha": "72c917d4be2dfb53c01466335175ed69eba9b5ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/72c917d4be2dfb53c01466335175ed69eba9b5ad", "html_url": "https://github.com/rust-lang/rust/commit/72c917d4be2dfb53c01466335175ed69eba9b5ad"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "e2a592d851a8cd9a55e28e88bf603668cbdbd4a7", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/metadata.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2b7dc94535e2b4f922091ee1834e21a7d18ba4bf/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b7dc94535e2b4f922091ee1834e21a7d18ba4bf/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs?ref=2b7dc94535e2b4f922091ee1834e21a7d18ba4bf", "patch": "@@ -176,15 +176,14 @@ fn build_pointer_or_reference_di_node<'ll, 'tcx>(\n \n     return_if_di_node_created_in_meantime!(cx, unique_type_id);\n \n-    let (thin_pointer_size, thin_pointer_align) =\n-        cx.size_and_align_of(cx.tcx.mk_imm_ptr(cx.tcx.types.unit));\n+    let data_layout = &cx.tcx.data_layout;\n     let ptr_type_debuginfo_name = compute_debuginfo_type_name(cx.tcx, ptr_type, true);\n \n     match fat_pointer_kind(cx, pointee_type) {\n         None => {\n             // This is a thin pointer. Create a regular pointer type and give it the correct name.\n             debug_assert_eq!(\n-                (thin_pointer_size, thin_pointer_align),\n+                (data_layout.pointer_size, data_layout.pointer_align.abi),\n                 cx.size_and_align_of(ptr_type),\n                 \"ptr_type={}, pointee_type={}\",\n                 ptr_type,\n@@ -195,8 +194,8 @@ fn build_pointer_or_reference_di_node<'ll, 'tcx>(\n                 llvm::LLVMRustDIBuilderCreatePointerType(\n                     DIB(cx),\n                     pointee_type_di_node,\n-                    thin_pointer_size.bits(),\n-                    thin_pointer_align.bits() as u32,\n+                    data_layout.pointer_size.bits(),\n+                    data_layout.pointer_align.abi.bits() as u32,\n                     0, // Ignore DWARF address space.\n                     ptr_type_debuginfo_name.as_ptr().cast(),\n                     ptr_type_debuginfo_name.len(),"}]}