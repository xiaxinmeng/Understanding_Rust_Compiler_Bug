{"sha": "cbafac5ba188f118d895bb075060081be3aa2800", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiYWZhYzViYTE4OGYxMThkODk1YmIwNzUwNjAwODFiZTNhYTI4MDA=", "commit": {"author": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2017-02-09T03:01:57Z"}, "committer": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2017-02-09T03:01:57Z"}, "message": "Fix compilation on Redox", "tree": {"sha": "609fe725d142fb594655a78df29867f14bf5cabc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/609fe725d142fb594655a78df29867f14bf5cabc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbafac5ba188f118d895bb075060081be3aa2800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbafac5ba188f118d895bb075060081be3aa2800", "html_url": "https://github.com/rust-lang/rust/commit/cbafac5ba188f118d895bb075060081be3aa2800", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbafac5ba188f118d895bb075060081be3aa2800/comments", "author": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29dece1c8bbebf7ae8034ef0826b119281730937", "url": "https://api.github.com/repos/rust-lang/rust/commits/29dece1c8bbebf7ae8034ef0826b119281730937", "html_url": "https://github.com/rust-lang/rust/commit/29dece1c8bbebf7ae8034ef0826b119281730937"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "31c40ea58b1de103a979647e24b66034798c1858", "filename": "src/libstd/sys/redox/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cbafac5ba188f118d895bb075060081be3aa2800/src%2Flibstd%2Fsys%2Fredox%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbafac5ba188f118d895bb075060081be3aa2800/src%2Flibstd%2Fsys%2Fredox%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fmod.rs?ref=cbafac5ba188f118d895bb075060081be3aa2800", "patch": "@@ -13,7 +13,7 @@\n use io::{self, ErrorKind};\n \n pub mod args;\n-#[cfg(any(not(cargobuild), feature = \"backtrace\"))]\n+#[cfg(feature = \"backtrace\")]\n pub mod backtrace;\n pub mod condvar;\n pub mod env;"}, {"sha": "936097d7fb2a602264f32294bd343170bf67326a", "filename": "src/libstd/sys/redox/net/tcp.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cbafac5ba188f118d895bb075060081be3aa2800/src%2Flibstd%2Fsys%2Fredox%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbafac5ba188f118d895bb075060081be3aa2800/src%2Flibstd%2Fsys%2Fredox%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fnet%2Ftcp.rs?ref=cbafac5ba188f118d895bb075060081be3aa2800", "patch": "@@ -63,6 +63,10 @@ impl TcpStream {\n         Ok(path_to_local_addr(path.to_str().unwrap_or(\"\")))\n     }\n \n+    pub fn peek(&self, _buf: &mut [u8]) -> Result<usize> {\n+        Err(Error::new(ErrorKind::Other, \"TcpStream::peek not implemented\"))\n+    }\n+\n     pub fn shutdown(&self, _how: Shutdown) -> Result<()> {\n         Err(Error::new(ErrorKind::Other, \"TcpStream::shutdown not implemented\"))\n     }"}, {"sha": "93ebcc95fd0f87e0c70fa6584678ec2cab778a8a", "filename": "src/libstd/sys/redox/net/udp.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cbafac5ba188f118d895bb075060081be3aa2800/src%2Flibstd%2Fsys%2Fredox%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbafac5ba188f118d895bb075060081be3aa2800/src%2Flibstd%2Fsys%2Fredox%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fnet%2Fudp.rs?ref=cbafac5ba188f118d895bb075060081be3aa2800", "patch": "@@ -87,6 +87,14 @@ impl UdpSocket {\n         Ok(path_to_local_addr(path.to_str().unwrap_or(\"\")))\n     }\n \n+    pub fn peek(&self, _buf: &mut [u8]) -> Result<usize> {\n+        Err(Error::new(ErrorKind::Other, \"UdpSocket::peek not implemented\"))\n+    }\n+\n+    pub fn peek_from(&self, _buf: &mut [u8]) -> Result<(usize, SocketAddr)> {\n+        Err(Error::new(ErrorKind::Other, \"UdpSocket::peek_from not implemented\"))\n+    }\n+\n     pub fn broadcast(&self) -> Result<bool> {\n         Err(Error::new(ErrorKind::Other, \"UdpSocket::broadcast not implemented\"))\n     }"}]}