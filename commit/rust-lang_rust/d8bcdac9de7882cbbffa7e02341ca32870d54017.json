{"sha": "d8bcdac9de7882cbbffa7e02341ca32870d54017", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YmNkYWM5ZGU3ODgyY2JiZmZhN2UwMjM0MWNhMzI4NzBkNTQwMTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-15T20:57:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-15T20:57:14Z"}, "message": "Auto merge of #5318 - matthiaskrgr:rustup_30, r=flip1995\n\nrustup https://github.com/rust-lang/rust/pull/69589/\n\nchangelog: none", "tree": {"sha": "ed5b9973a31b27404e07991e11227543d5b3e36d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed5b9973a31b27404e07991e11227543d5b3e36d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8bcdac9de7882cbbffa7e02341ca32870d54017", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8bcdac9de7882cbbffa7e02341ca32870d54017", "html_url": "https://github.com/rust-lang/rust/commit/d8bcdac9de7882cbbffa7e02341ca32870d54017", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8bcdac9de7882cbbffa7e02341ca32870d54017/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1a138cdd923a82866c590c78c9a338844f1405d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a138cdd923a82866c590c78c9a338844f1405d", "html_url": "https://github.com/rust-lang/rust/commit/c1a138cdd923a82866c590c78c9a338844f1405d"}, {"sha": "4d8ed5a84293fb435c71447169e9b387c4988b47", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d8ed5a84293fb435c71447169e9b387c4988b47", "html_url": "https://github.com/rust-lang/rust/commit/4d8ed5a84293fb435c71447169e9b387c4988b47"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "f9bf1141a8b25806730e52bcc86b8ad76a22c431", "filename": "clippy_lints/src/dbg_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8bcdac9de7882cbbffa7e02341ca32870d54017/clippy_lints%2Fsrc%2Fdbg_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8bcdac9de7882cbbffa7e02341ca32870d54017/clippy_lints%2Fsrc%2Fdbg_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdbg_macro.rs?ref=d8bcdac9de7882cbbffa7e02341ca32870d54017", "patch": "@@ -30,7 +30,7 @@ declare_clippy_lint! {\n declare_lint_pass!(DbgMacro => [DBG_MACRO]);\n \n impl EarlyLintPass for DbgMacro {\n-    fn check_mac(&mut self, cx: &EarlyContext<'_>, mac: &ast::Mac) {\n+    fn check_mac(&mut self, cx: &EarlyContext<'_>, mac: &ast::MacCall) {\n         if mac.path == sym!(dbg) {\n             if let Some(sugg) = tts_span(mac.args.inner_tokens()).and_then(|span| snippet_opt(cx, span)) {\n                 span_lint_and_sugg("}, {"sha": "98446eef9d7327c8cabe25d3bea60223d3b73640", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d8bcdac9de7882cbbffa7e02341ca32870d54017/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8bcdac9de7882cbbffa7e02341ca32870d54017/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=d8bcdac9de7882cbbffa7e02341ca32870d54017", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{span_lint, span_lint_and_then};\n use rustc_ast::ast::{\n-    Arm, AssocItem, AssocItemKind, Attribute, Block, FnDecl, Ident, Item, ItemKind, Local, Mac, Pat, PatKind,\n+    Arm, AssocItem, AssocItemKind, Attribute, Block, FnDecl, Ident, Item, ItemKind, Local, MacCall, Pat, PatKind,\n };\n use rustc_ast::attr;\n use rustc_ast::visit::{walk_block, walk_expr, walk_pat, Visitor};\n@@ -145,7 +145,7 @@ impl<'a, 'tcx, 'b> Visitor<'tcx> for SimilarNamesNameVisitor<'a, 'tcx, 'b> {\n             _ => walk_pat(self, pat),\n         }\n     }\n-    fn visit_mac(&mut self, _mac: &Mac) {\n+    fn visit_mac(&mut self, _mac: &MacCall) {\n         // do not check macs\n     }\n }\n@@ -347,7 +347,7 @@ impl<'a, 'tcx> Visitor<'tcx> for SimilarNamesLocalVisitor<'a, 'tcx> {\n     fn visit_item(&mut self, _: &Item) {\n         // do not recurse into inner items\n     }\n-    fn visit_mac(&mut self, _mac: &Mac) {\n+    fn visit_mac(&mut self, _mac: &MacCall) {\n         // do not check macs\n     }\n }"}, {"sha": "b2c4027b9f11bd6710885f4168613a824b697598", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8bcdac9de7882cbbffa7e02341ca32870d54017/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8bcdac9de7882cbbffa7e02341ca32870d54017/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=d8bcdac9de7882cbbffa7e02341ca32870d54017", "patch": "@@ -154,7 +154,7 @@ impl<'a> Sugg<'a> {\n             | ast::ExprKind::InlineAsm(..)\n             | ast::ExprKind::Lit(..)\n             | ast::ExprKind::Loop(..)\n-            | ast::ExprKind::Mac(..)\n+            | ast::ExprKind::MacCall(..)\n             | ast::ExprKind::MethodCall(..)\n             | ast::ExprKind::Paren(..)\n             | ast::ExprKind::Path(..)"}, {"sha": "a63c6771bb539cba7ce92058a734a8d384b143cc", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d8bcdac9de7882cbbffa7e02341ca32870d54017/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8bcdac9de7882cbbffa7e02341ca32870d54017/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=d8bcdac9de7882cbbffa7e02341ca32870d54017", "patch": "@@ -2,7 +2,7 @@ use std::borrow::Cow;\n use std::ops::Range;\n \n use crate::utils::{snippet_with_applicability, span_lint, span_lint_and_sugg, span_lint_and_then};\n-use rustc_ast::ast::{Expr, ExprKind, Item, ItemKind, Mac, StrLit, StrStyle};\n+use rustc_ast::ast::{Expr, ExprKind, Item, ItemKind, MacCall, StrLit, StrStyle};\n use rustc_ast::token;\n use rustc_ast::tokenstream::TokenStream;\n use rustc_errors::Applicability;\n@@ -216,7 +216,7 @@ impl EarlyLintPass for Write {\n         self.in_debug_impl = false;\n     }\n \n-    fn check_mac(&mut self, cx: &EarlyContext<'_>, mac: &Mac) {\n+    fn check_mac(&mut self, cx: &EarlyContext<'_>, mac: &MacCall) {\n         if mac.path == sym!(println) {\n             span_lint(cx, PRINT_STDOUT, mac.span(), \"use of `println!`\");\n             if let (Some(fmt_str), _) = self.check_tts(cx, &mac.args.inner_tokens(), false) {"}]}