{"sha": "4b14f67df3c28cd1cd8ea5bf794a3e542c663d8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiMTRmNjdkZjNjMjhjZDFjZDhlYTViZjc5NGEzZTU0MmM2NjNkOGQ=", "commit": {"author": {"name": "Greg Chapple", "email": "gregchapple1@gmail.com", "date": "2015-01-06T10:56:14Z"}, "committer": {"name": "Greg Chapple", "email": "gregchapple1@gmail.com", "date": "2015-01-13T13:57:09Z"}, "message": "Replace usage of deriving with derive in docs", "tree": {"sha": "6dca535c770cb8b7441717e7c75c0a13e69ae672", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dca535c770cb8b7441717e7c75c0a13e69ae672"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b14f67df3c28cd1cd8ea5bf794a3e542c663d8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b14f67df3c28cd1cd8ea5bf794a3e542c663d8d", "html_url": "https://github.com/rust-lang/rust/commit/4b14f67df3c28cd1cd8ea5bf794a3e542c663d8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b14f67df3c28cd1cd8ea5bf794a3e542c663d8d/comments", "author": {"login": "gchp", "id": 1315394, "node_id": "MDQ6VXNlcjEzMTUzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1315394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchp", "html_url": "https://github.com/gchp", "followers_url": "https://api.github.com/users/gchp/followers", "following_url": "https://api.github.com/users/gchp/following{/other_user}", "gists_url": "https://api.github.com/users/gchp/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchp/subscriptions", "organizations_url": "https://api.github.com/users/gchp/orgs", "repos_url": "https://api.github.com/users/gchp/repos", "events_url": "https://api.github.com/users/gchp/events{/privacy}", "received_events_url": "https://api.github.com/users/gchp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gchp", "id": 1315394, "node_id": "MDQ6VXNlcjEzMTUzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1315394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchp", "html_url": "https://github.com/gchp", "followers_url": "https://api.github.com/users/gchp/followers", "following_url": "https://api.github.com/users/gchp/following{/other_user}", "gists_url": "https://api.github.com/users/gchp/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchp/subscriptions", "organizations_url": "https://api.github.com/users/gchp/orgs", "repos_url": "https://api.github.com/users/gchp/repos", "events_url": "https://api.github.com/users/gchp/events{/privacy}", "received_events_url": "https://api.github.com/users/gchp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1241f14dc8f5e708e258a46950e8c7635efe6c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1241f14dc8f5e708e258a46950e8c7635efe6c7", "html_url": "https://github.com/rust-lang/rust/commit/f1241f14dc8f5e708e258a46950e8c7635efe6c7"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "db45633b884b474c2f754e24d3f889c07dbba92e", "filename": "src/doc/reference.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4b14f67df3c28cd1cd8ea5bf794a3e542c663d8d/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/4b14f67df3c28cd1cd8ea5bf794a3e542c663d8d/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=4b14f67df3c28cd1cd8ea5bf794a3e542c663d8d", "patch": "@@ -2432,15 +2432,15 @@ There are three different types of inline attributes:\n * `#[inline(always)]` asks the compiler to always perform an inline expansion.\n * `#[inline(never)]` asks the compiler to never perform an inline expansion.\n \n-### Deriving\n+### Derive\n \n-The `deriving` attribute allows certain traits to be automatically implemented\n+The `derive` attribute allows certain traits to be automatically implemented\n for data structures. For example, the following will create an `impl` for the\n `PartialEq` and `Clone` traits for `Foo`, the type parameter `T` will be given\n the `PartialEq` or `Clone` constraints for the appropriate `impl`:\n \n ```\n-#[deriving(PartialEq, Clone)]\n+#[derive(PartialEq, Clone)]\n struct Foo<T> {\n     a: int,\n     b: T\n@@ -2462,7 +2462,7 @@ impl<T: PartialEq> PartialEq for Foo<T> {\n }\n ```\n \n-Supported traits for `deriving` are:\n+Supported traits for `derive` are:\n \n * Comparison traits: `PartialEq`, `Eq`, `PartialOrd`, `Ord`.\n * Serialization: `Encodable`, `Decodable`. These require `serialize`."}, {"sha": "aba13d31989064b782b8e93496a198baeb783b25", "filename": "src/doc/rustdoc.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b14f67df3c28cd1cd8ea5bf794a3e542c663d8d/src%2Fdoc%2Frustdoc.md", "raw_url": "https://github.com/rust-lang/rust/raw/4b14f67df3c28cd1cd8ea5bf794a3e542c663d8d/src%2Fdoc%2Frustdoc.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc.md?ref=4b14f67df3c28cd1cd8ea5bf794a3e542c663d8d", "patch": "@@ -198,7 +198,7 @@ Rustdoc also supplies some extra sugar for helping with some tedious\n documentation examples. If a line is prefixed with `# `, then the line\n will not show up in the HTML documentation, but it will be used when\n testing the code block (NB. the space after the `#` is required, so\n-that one can still write things like `#[deriving(Eq)]`).\n+that one can still write things like `#[derive(Eq)]`).\n \n ~~~md\n ```"}, {"sha": "4cd39d407a243b184c80fa590cbf0dba2a84ef78", "filename": "src/doc/trpl/plugins.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b14f67df3c28cd1cd8ea5bf794a3e542c663d8d/src%2Fdoc%2Ftrpl%2Fplugins.md", "raw_url": "https://github.com/rust-lang/rust/raw/4b14f67df3c28cd1cd8ea5bf794a3e542c663d8d/src%2Fdoc%2Ftrpl%2Fplugins.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fplugins.md?ref=4b14f67df3c28cd1cd8ea5bf794a3e542c663d8d", "patch": "@@ -126,7 +126,7 @@ The advantages over a simple `fn(&str) -> uint` are:\n   a way to define new literal syntax for any data type.\n \n In addition to procedural macros, you can define new\n-[`deriving`](../reference.html#deriving)-like attributes and other kinds of\n+[`derive`](../reference.html#derive)-like attributes and other kinds of\n extensions.  See\n [`Registry::register_syntax_extension`](../rustc/plugin/registry/struct.Registry.html#method.register_syntax_extension)\n and the [`SyntaxExtension`"}]}