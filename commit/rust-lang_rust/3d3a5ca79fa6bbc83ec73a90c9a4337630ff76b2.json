{"sha": "3d3a5ca79fa6bbc83ec73a90c9a4337630ff76b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkM2E1Y2E3OWZhNmJiYzgzZWM3M2E5MGM5YTQzMzc2MzBmZjc2YjI=", "commit": {"author": {"name": "ortem", "email": "ortem00@gmail.com", "date": "2021-04-06T09:23:28Z"}, "committer": {"name": "ortem", "email": "ortem00@gmail.com", "date": "2021-04-06T09:44:17Z"}, "message": "Fix HashMap/HashSet LLDB pretty-printer after hashbrown 0.11.0\n\nThe pretty-printer was broken in https://github.com/rust-lang/rust/pull/77566\nafter updating hashbrown to 0.11.0.\nNote that the corresponding GDB pretty-printer was updated properly.", "tree": {"sha": "e813e617f5809bbf816cf6cc6e1ba8fac5c4c494", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e813e617f5809bbf816cf6cc6e1ba8fac5c4c494"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d3a5ca79fa6bbc83ec73a90c9a4337630ff76b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d3a5ca79fa6bbc83ec73a90c9a4337630ff76b2", "html_url": "https://github.com/rust-lang/rust/commit/3d3a5ca79fa6bbc83ec73a90c9a4337630ff76b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d3a5ca79fa6bbc83ec73a90c9a4337630ff76b2/comments", "author": {"login": "artemmukhin", "id": 4854600, "node_id": "MDQ6VXNlcjQ4NTQ2MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4854600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artemmukhin", "html_url": "https://github.com/artemmukhin", "followers_url": "https://api.github.com/users/artemmukhin/followers", "following_url": "https://api.github.com/users/artemmukhin/following{/other_user}", "gists_url": "https://api.github.com/users/artemmukhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/artemmukhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artemmukhin/subscriptions", "organizations_url": "https://api.github.com/users/artemmukhin/orgs", "repos_url": "https://api.github.com/users/artemmukhin/repos", "events_url": "https://api.github.com/users/artemmukhin/events{/privacy}", "received_events_url": "https://api.github.com/users/artemmukhin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "artemmukhin", "id": 4854600, "node_id": "MDQ6VXNlcjQ4NTQ2MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4854600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artemmukhin", "html_url": "https://github.com/artemmukhin", "followers_url": "https://api.github.com/users/artemmukhin/followers", "following_url": "https://api.github.com/users/artemmukhin/following{/other_user}", "gists_url": "https://api.github.com/users/artemmukhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/artemmukhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artemmukhin/subscriptions", "organizations_url": "https://api.github.com/users/artemmukhin/orgs", "repos_url": "https://api.github.com/users/artemmukhin/repos", "events_url": "https://api.github.com/users/artemmukhin/events{/privacy}", "received_events_url": "https://api.github.com/users/artemmukhin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a7a0ac51eefbdacc5b1763f8d49a787407afb34", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a7a0ac51eefbdacc5b1763f8d49a787407afb34", "html_url": "https://github.com/rust-lang/rust/commit/5a7a0ac51eefbdacc5b1763f8d49a787407afb34"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "86dcc335e3cbfdcf2daab64d64fe5810b22f1cbd", "filename": "src/etc/lldb_providers.py", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3d3a5ca79fa6bbc83ec73a90c9a4337630ff76b2/src%2Fetc%2Flldb_providers.py", "raw_url": "https://github.com/rust-lang/rust/raw/3d3a5ca79fa6bbc83ec73a90c9a4337630ff76b2/src%2Fetc%2Flldb_providers.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_providers.py?ref=3d3a5ca79fa6bbc83ec73a90c9a4337630ff76b2", "patch": "@@ -527,20 +527,22 @@ def get_child_at_index(self, index):\n     def update(self):\n         # type: () -> None\n         table = self.table()\n-        capacity = table.GetChildMemberWithName(\"bucket_mask\").GetValueAsUnsigned() + 1\n-        ctrl = table.GetChildMemberWithName(\"ctrl\").GetChildAtIndex(0)\n+        inner_table = table.GetChildMemberWithName(\"table\")\n \n-        self.size = table.GetChildMemberWithName(\"items\").GetValueAsUnsigned()\n+        capacity = inner_table.GetChildMemberWithName(\"bucket_mask\").GetValueAsUnsigned() + 1\n+        ctrl = inner_table.GetChildMemberWithName(\"ctrl\").GetChildAtIndex(0)\n+\n+        self.size = inner_table.GetChildMemberWithName(\"items\").GetValueAsUnsigned()\n         self.pair_type = table.type.template_args[0]\n         if self.pair_type.IsTypedefType():\n             self.pair_type = self.pair_type.GetTypedefedType()\n         self.pair_type_size = self.pair_type.GetByteSize()\n \n-        self.new_layout = not table.GetChildMemberWithName(\"data\").IsValid()\n+        self.new_layout = not inner_table.GetChildMemberWithName(\"data\").IsValid()\n         if self.new_layout:\n             self.data_ptr = ctrl.Cast(self.pair_type.GetPointerType())\n         else:\n-            self.data_ptr = table.GetChildMemberWithName(\"data\").GetChildAtIndex(0)\n+            self.data_ptr = inner_table.GetChildMemberWithName(\"data\").GetChildAtIndex(0)\n \n         u8_type = self.valobj.GetTarget().GetBasicType(eBasicTypeUnsignedChar)\n         u8_type_size = self.valobj.GetTarget().GetBasicType(eBasicTypeUnsignedChar).GetByteSize()\n@@ -563,7 +565,7 @@ def table(self):\n             # HashSet wraps either std HashMap or hashbrown::HashSet, which both\n             # wrap hashbrown::HashMap, so either way we \"unwrap\" twice.\n             hashbrown_hashmap = self.valobj.GetChildAtIndex(0).GetChildAtIndex(0)\n-        return hashbrown_hashmap.GetChildMemberWithName(\"table\").GetChildMemberWithName(\"table\")\n+        return hashbrown_hashmap.GetChildMemberWithName(\"table\")\n \n     def has_children(self):\n         # type: () -> bool"}]}