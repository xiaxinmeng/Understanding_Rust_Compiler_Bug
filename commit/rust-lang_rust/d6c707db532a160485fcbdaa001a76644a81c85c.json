{"sha": "d6c707db532a160485fcbdaa001a76644a81c85c", "node_id": "C_kwDOAAsO6NoAKGQ2YzcwN2RiNTMyYTE2MDQ4NWZjYmRhYTAwMWE3NjY0NGE4MWM4NWM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-23T08:20:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-23T08:20:57Z"}, "message": "Auto merge of #7980 - dswij:7870, r=xFrednet\n\nFix FP on `if_then_some_else_none` when there is early return\n\ncloses #7870\n\nchangelog: [`if_then_some_else_none`] now does not fire when there is early return", "tree": {"sha": "e5d0cfe367775987113de4aa4a7d17069e409f17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5d0cfe367775987113de4aa4a7d17069e409f17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6c707db532a160485fcbdaa001a76644a81c85c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6c707db532a160485fcbdaa001a76644a81c85c", "html_url": "https://github.com/rust-lang/rust/commit/d6c707db532a160485fcbdaa001a76644a81c85c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6c707db532a160485fcbdaa001a76644a81c85c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57a8804ef991b04aed5414fbf668f444c9050c73", "url": "https://api.github.com/repos/rust-lang/rust/commits/57a8804ef991b04aed5414fbf668f444c9050c73", "html_url": "https://github.com/rust-lang/rust/commit/57a8804ef991b04aed5414fbf668f444c9050c73"}, {"sha": "ec3d1c8ca31c392e50c3605d461a9ee6f929c97c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec3d1c8ca31c392e50c3605d461a9ee6f929c97c", "html_url": "https://github.com/rust-lang/rust/commit/ec3d1c8ca31c392e50c3605d461a9ee6f929c97c"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "30d222bd7d27de9643047c51f282d05357aadba1", "filename": "clippy_lints/src/if_then_some_else_none.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d6c707db532a160485fcbdaa001a76644a81c85c/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6c707db532a160485fcbdaa001a76644a81c85c/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs?ref=d6c707db532a160485fcbdaa001a76644a81c85c", "patch": "@@ -1,9 +1,9 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::source::snippet_with_macro_callsite;\n-use clippy_utils::{higher, is_else_clause, is_lang_ctor, meets_msrv, msrvs};\n+use clippy_utils::{contains_return, higher, is_else_clause, is_lang_ctor, meets_msrv, msrvs};\n use if_chain::if_chain;\n use rustc_hir::LangItem::{OptionNone, OptionSome};\n-use rustc_hir::{Expr, ExprKind};\n+use rustc_hir::{Expr, ExprKind, Stmt, StmtKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::lint::in_external_macro;\n use rustc_semver::RustcVersion;\n@@ -82,6 +82,7 @@ impl LateLintPass<'_> for IfThenSomeElseNone {\n             if let Some(els_expr) = els_block.expr;\n             if let ExprKind::Path(ref qpath) = els_expr.kind;\n             if is_lang_ctor(cx, qpath, OptionNone);\n+            if !stmts_contains_early_return(then_block.stmts);\n             then {\n                 let cond_snip = snippet_with_macro_callsite(cx, cond.span, \"[condition]\");\n                 let cond_snip = if matches!(cond.kind, ExprKind::Unary(_, _) | ExprKind::Binary(_, _, _)) {\n@@ -114,3 +115,11 @@ impl LateLintPass<'_> for IfThenSomeElseNone {\n \n     extract_msrv_attr!(LateContext);\n }\n+\n+fn stmts_contains_early_return(stmts: &[Stmt<'_>]) -> bool {\n+    stmts.iter().any(|stmt| {\n+        let Stmt { kind: StmtKind::Semi(e), .. } = stmt else { return false };\n+\n+        contains_return(e)\n+    })\n+}"}, {"sha": "3bc3a0395244cea27e73a6bf61aaf0f8690af1c0", "filename": "tests/ui/if_then_some_else_none.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d6c707db532a160485fcbdaa001a76644a81c85c/tests%2Fui%2Fif_then_some_else_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6c707db532a160485fcbdaa001a76644a81c85c/tests%2Fui%2Fif_then_some_else_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_then_some_else_none.rs?ref=d6c707db532a160485fcbdaa001a76644a81c85c", "patch": "@@ -102,3 +102,14 @@ fn into_some<T>(v: T) -> Option<T> {\n fn into_none<T>() -> Option<T> {\n     None\n }\n+\n+// Should not warn\n+fn f(b: bool, v: Option<()>) -> Option<()> {\n+    if b {\n+        v?; // This is a potential early return, is not equivalent with `bool::then`\n+\n+        Some(())\n+    } else {\n+        None\n+    }\n+}"}]}