{"sha": "9cf96429a7ae13f89def17def0b70aa61d2672eb", "node_id": "C_kwDOAAsO6NoAKDljZjk2NDI5YTdhZTEzZjg5ZGVmMTdkZWYwYjcwYWE2MWQyNjcyZWI", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-25T16:31:51Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-25T16:31:51Z"}, "message": "Use `ty::TraitRef::new` in clippy", "tree": {"sha": "de380504617ec653aff8b59a08bb7db0cf5822a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de380504617ec653aff8b59a08bb7db0cf5822a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cf96429a7ae13f89def17def0b70aa61d2672eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cf96429a7ae13f89def17def0b70aa61d2672eb", "html_url": "https://github.com/rust-lang/rust/commit/9cf96429a7ae13f89def17def0b70aa61d2672eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cf96429a7ae13f89def17def0b70aa61d2672eb/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5514d9f444b498332f2b4ae8852f1f036fc3087f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5514d9f444b498332f2b4ae8852f1f036fc3087f", "html_url": "https://github.com/rust-lang/rust/commit/5514d9f444b498332f2b4ae8852f1f036fc3087f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8f5d319cd4fc1860ec0226720f4d6a50fd54c839", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cf96429a7ae13f89def17def0b70aa61d2672eb/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cf96429a7ae13f89def17def0b70aa61d2672eb/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=9cf96429a7ae13f89def17def0b70aa61d2672eb", "patch": "@@ -517,7 +517,7 @@ fn param_env_for_derived_eq(tcx: TyCtxt<'_>, did: DefId, eq_trait_id: DefId) ->\n         tcx.mk_predicates_from_iter(ty_predicates.iter().map(|&(p, _)| p).chain(\n             params.iter().filter(|&&(_, needs_eq)| needs_eq).map(|&(param, _)| {\n                 tcx.mk_predicate(Binder::dummy(PredicateKind::Clause(Clause::Trait(TraitPredicate {\n-                    trait_ref: tcx.mk_trait_ref(eq_trait_id, [tcx.mk_param_from_def(param)]),\n+                    trait_ref: ty::TraitRef::new(tcx, eq_trait_id, [tcx.mk_param_from_def(param)]),\n                     constness: BoundConstness::NotConst,\n                     polarity: ImplPolarity::Positive,\n                 }))))"}]}