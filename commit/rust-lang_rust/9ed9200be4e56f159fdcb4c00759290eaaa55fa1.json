{"sha": "9ed9200be4e56f159fdcb4c00759290eaaa55fa1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllZDkyMDBiZTRlNTZmMTU5ZmRjYjRjMDA3NTkyOTBlYWFhNTVmYTE=", "commit": {"author": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2020-05-06T02:32:08Z"}, "committer": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2020-05-06T02:32:08Z"}, "message": "use trait_object_dummy_self instead of err", "tree": {"sha": "2d5d7b8e1ce21a7e0fe6d6235b78da35553ecd88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d5d7b8e1ce21a7e0fe6d6235b78da35553ecd88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ed9200be4e56f159fdcb4c00759290eaaa55fa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ed9200be4e56f159fdcb4c00759290eaaa55fa1", "html_url": "https://github.com/rust-lang/rust/commit/9ed9200be4e56f159fdcb4c00759290eaaa55fa1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ed9200be4e56f159fdcb4c00759290eaaa55fa1/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8d394e5184fe3af761ea1e5ba73f993cfb36dfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8d394e5184fe3af761ea1e5ba73f993cfb36dfe", "html_url": "https://github.com/rust-lang/rust/commit/f8d394e5184fe3af761ea1e5ba73f993cfb36dfe"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "035e5880dc52290ef284793a6b4bac6a02a21dca", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ed9200be4e56f159fdcb4c00759290eaaa55fa1/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ed9200be4e56f159fdcb4c00759290eaaa55fa1/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=9ed9200be4e56f159fdcb4c00759290eaaa55fa1", "patch": "@@ -178,7 +178,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         match expected_ty.kind {\n             ty::Dynamic(ref object_type, ..) => {\n                 let sig = object_type.projection_bounds().find_map(|pb| {\n-                    let pb = pb.with_self_ty(self.tcx, self.tcx.types.err);\n+                    let pb = pb.with_self_ty(self.tcx, self.tcx.types.trait_object_dummy_self);\n                     self.deduce_sig_from_projection(None, &pb)\n                 });\n                 let kind = object_type"}]}