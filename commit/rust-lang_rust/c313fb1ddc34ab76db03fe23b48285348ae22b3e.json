{"sha": "c313fb1ddc34ab76db03fe23b48285348ae22b3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMTNmYjFkZGMzNGFiNzZkYjAzZmUyM2I0ODI4NTM0OGFlMjJiM2U=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-09-18T06:06:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-18T06:06:49Z"}, "message": "Merge pull request #1973 from topecongiro/issue-1972\n\nEcho back input from stdin when disable_all_formatting is true", "tree": {"sha": "be98ed5a8704649499454853977ad373661a967a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be98ed5a8704649499454853977ad373661a967a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c313fb1ddc34ab76db03fe23b48285348ae22b3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c313fb1ddc34ab76db03fe23b48285348ae22b3e", "html_url": "https://github.com/rust-lang/rust/commit/c313fb1ddc34ab76db03fe23b48285348ae22b3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c313fb1ddc34ab76db03fe23b48285348ae22b3e/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3637760102cbbd7a9c99bde37b64e13b661a06ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/3637760102cbbd7a9c99bde37b64e13b661a06ff", "html_url": "https://github.com/rust-lang/rust/commit/3637760102cbbd7a9c99bde37b64e13b661a06ff"}, {"sha": "dc26b069f66b856aecf638755ae99e7b32548f74", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc26b069f66b856aecf638755ae99e7b32548f74", "html_url": "https://github.com/rust-lang/rust/commit/dc26b069f66b856aecf638755ae99e7b32548f74"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "043f6f506d051aa1d4df86731b9f73e780bbcaf6", "filename": "src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c313fb1ddc34ab76db03fe23b48285348ae22b3e/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c313fb1ddc34ab76db03fe23b48285348ae22b3e/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=c313fb1ddc34ab76db03fe23b48285348ae22b3e", "patch": "@@ -890,6 +890,12 @@ pub fn format_input<T: Write>(\n ) -> Result<(Summary, FileMap, FormatReport), (io::Error, Summary)> {\n     let mut summary = Summary::default();\n     if config.disable_all_formatting() {\n+        // When the input is from stdin, echo back the input.\n+        if let Input::Text(ref buf) = input {\n+            if let Err(e) = io::stdout().write_all(buf.as_bytes()) {\n+                return Err((e, summary));\n+            }\n+        }\n         return Ok((summary, FileMap::new(), FormatReport::new()));\n     }\n     let codemap = Rc::new(CodeMap::new(FilePathMapping::empty()));"}, {"sha": "c7ad93bafe36c0080f9361212af31837849fbbc5", "filename": "tests/config/disable_all_formatting.toml", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c313fb1ddc34ab76db03fe23b48285348ae22b3e/tests%2Fconfig%2Fdisable_all_formatting.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c313fb1ddc34ab76db03fe23b48285348ae22b3e/tests%2Fconfig%2Fdisable_all_formatting.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconfig%2Fdisable_all_formatting.toml?ref=c313fb1ddc34ab76db03fe23b48285348ae22b3e", "patch": "@@ -0,0 +1 @@\n+disable_all_formatting = true"}, {"sha": "44cfb732f4b40a28572d4fda18c75f92a54dd59b", "filename": "tests/system.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c313fb1ddc34ab76db03fe23b48285348ae22b3e/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c313fb1ddc34ab76db03fe23b48285348ae22b3e/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=c313fb1ddc34ab76db03fe23b48285348ae22b3e", "patch": "@@ -14,8 +14,9 @@ extern crate term;\n \n use std::collections::HashMap;\n use std::fs;\n-use std::io::{self, BufRead, BufReader, Read};\n+use std::io::{self, BufRead, BufReader, Read, Write};\n use std::path::{Path, PathBuf};\n+use std::process::{Command, Stdio};\n \n use rustfmt::*;\n use rustfmt::filemap::{write_system_newlines, FileMap};\n@@ -157,6 +158,28 @@ fn stdin_formatting_smoke_test() {\n     panic!(\"no stdin\");\n }\n \n+#[test]\n+fn stdin_disable_all_formatting_test() {\n+    let input = String::from(\"fn main() { println!(\\\"This should not be formatted.\\\"); }\");\n+    let mut child = Command::new(\"./target/debug/rustfmt\")\n+        .stdin(Stdio::piped())\n+        .stdout(Stdio::piped())\n+        .arg(\"--config-path=./tests/config/disable_all_formatting.toml\")\n+        .spawn()\n+        .expect(\"failed to execute child\");\n+\n+    {\n+        let stdin = child.stdin.as_mut().expect(\"failed to get stdin\");\n+        stdin\n+            .write_all(input.as_bytes())\n+            .expect(\"failed to write stdin\");\n+    }\n+    let output = child.wait_with_output().expect(\"failed to wait on child\");\n+    assert!(output.status.success());\n+    assert!(output.stderr.is_empty());\n+    assert_eq!(input, String::from_utf8(output.stdout).unwrap());\n+}\n+\n #[test]\n fn format_lines_errors_are_reported() {\n     let long_identifier = String::from_utf8(vec![b'a'; 239]).unwrap();"}, {"sha": "ef7e4ee936260e79f177f231332f96ae93a99ca0", "filename": "tests/target/disable_all_formatting.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3637760102cbbd7a9c99bde37b64e13b661a06ff/tests%2Ftarget%2Fdisable_all_formatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3637760102cbbd7a9c99bde37b64e13b661a06ff/tests%2Ftarget%2Fdisable_all_formatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fdisable_all_formatting.rs?ref=3637760102cbbd7a9c99bde37b64e13b661a06ff", "patch": "@@ -1,4 +0,0 @@\n-// rustfmt-disable_all_formatting: true\n-// Don't format anything.\n-\n-fn main() { println!(\"This should not be formatted.\"); }"}]}