{"sha": "798968e1e3a7d9eafa0c27c857571cdc347c34a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ODk2OGUxZTNhN2Q5ZWFmYTBjMjdjODU3NTcxY2RjMzQ3YzM0YTc=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-11T13:24:02Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-27T14:29:47Z"}, "message": "Move TokenExpander to base_db and rename it\n\nIt's only used to break the dependency to proc_macro_api", "tree": {"sha": "79e82b07d8486f2d9b710706e5aacc07f25ddbb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79e82b07d8486f2d9b710706e5aacc07f25ddbb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/798968e1e3a7d9eafa0c27c857571cdc347c34a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/798968e1e3a7d9eafa0c27c857571cdc347c34a7", "html_url": "https://github.com/rust-lang/rust/commit/798968e1e3a7d9eafa0c27c857571cdc347c34a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/798968e1e3a7d9eafa0c27c857571cdc347c34a7/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fd75c98ac81c9f6581712ec8802940e547315e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fd75c98ac81c9f6581712ec8802940e547315e3", "html_url": "https://github.com/rust-lang/rust/commit/0fd75c98ac81c9f6581712ec8802940e547315e3"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "a693e7f80d5fb85c69e8f52c352db14473cd962a", "filename": "crates/base_db/src/input.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/798968e1e3a7d9eafa0c27c857571cdc347c34a7/crates%2Fbase_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/798968e1e3a7d9eafa0c27c857571cdc347c34a7/crates%2Fbase_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Finput.rs?ref=798968e1e3a7d9eafa0c27c857571cdc347c34a7", "patch": "@@ -6,12 +6,12 @@\n //! actual IO. See `vfs` and `project_model` in the `rust-analyzer` crate for how\n //! actual IO is done and lowered to input.\n \n-use std::{fmt, iter::FromIterator, ops, str::FromStr, sync::Arc};\n+use std::{fmt, iter::FromIterator, ops, panic::RefUnwindSafe, str::FromStr, sync::Arc};\n \n use cfg::CfgOptions;\n use rustc_hash::{FxHashMap, FxHashSet};\n use syntax::SmolStr;\n-use tt::TokenExpander;\n+use tt::{ExpansionError, Subtree};\n use vfs::{file_set::FileSet, FileId, VfsPath};\n \n /// Files are grouped into source roots. A source root is a directory on the\n@@ -150,11 +150,16 @@ pub enum ProcMacroKind {\n     Attr,\n }\n \n+pub trait ProcMacroExpander: fmt::Debug + Send + Sync + RefUnwindSafe {\n+    fn expand(&self, subtree: &Subtree, attrs: Option<&Subtree>)\n+        -> Result<Subtree, ExpansionError>;\n+}\n+\n #[derive(Debug, Clone)]\n pub struct ProcMacro {\n     pub name: SmolStr,\n     pub kind: ProcMacroKind,\n-    pub expander: Arc<dyn TokenExpander>,\n+    pub expander: Arc<dyn ProcMacroExpander>,\n }\n \n impl Eq for ProcMacro {}"}, {"sha": "5f77a0b1f014d4a121910afe5453db88cae5b14f", "filename": "crates/base_db/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/798968e1e3a7d9eafa0c27c857571cdc347c34a7/crates%2Fbase_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/798968e1e3a7d9eafa0c27c857571cdc347c34a7/crates%2Fbase_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Flib.rs?ref=798968e1e3a7d9eafa0c27c857571cdc347c34a7", "patch": "@@ -14,7 +14,7 @@ pub use crate::{\n     change::Change,\n     input::{\n         CrateData, CrateDisplayName, CrateGraph, CrateId, CrateName, Dependency, Edition, Env,\n-        ProcMacro, ProcMacroId, ProcMacroKind, SourceRoot, SourceRootId,\n+        ProcMacro, ProcMacroExpander, ProcMacroId, ProcMacroKind, SourceRoot, SourceRootId,\n     },\n };\n pub use salsa;"}, {"sha": "a61afbbd669980ecc3ef47f6ee6dca3467f78cbc", "filename": "crates/proc_macro_api/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/798968e1e3a7d9eafa0c27c857571cdc347c34a7/crates%2Fproc_macro_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/798968e1e3a7d9eafa0c27c857571cdc347c34a7/crates%2Fproc_macro_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2Fsrc%2Flib.rs?ref=798968e1e3a7d9eafa0c27c857571cdc347c34a7", "patch": "@@ -39,7 +39,7 @@ impl PartialEq for ProcMacroProcessExpander {\n     }\n }\n \n-impl tt::TokenExpander for ProcMacroProcessExpander {\n+impl base_db::ProcMacroExpander for ProcMacroProcessExpander {\n     fn expand(\n         &self,\n         subtree: &Subtree,\n@@ -90,7 +90,7 @@ impl ProcMacroClient {\n                     ProcMacroKind::FuncLike => base_db::ProcMacroKind::FuncLike,\n                     ProcMacroKind::Attr => base_db::ProcMacroKind::Attr,\n                 };\n-                let expander: Arc<dyn tt::TokenExpander> = Arc::new(ProcMacroProcessExpander {\n+                let expander = Arc::new(ProcMacroProcessExpander {\n                     process: self.process.clone(),\n                     name: name.clone(),\n                     dylib_path: dylib_path.into(),"}, {"sha": "8301dc28a03faeec60ff4c5938e398155f076b20", "filename": "crates/tt/src/lib.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/798968e1e3a7d9eafa0c27c857571cdc347c34a7/crates%2Ftt%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/798968e1e3a7d9eafa0c27c857571cdc347c34a7/crates%2Ftt%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftt%2Fsrc%2Flib.rs?ref=798968e1e3a7d9eafa0c27c857571cdc347c34a7", "patch": "@@ -1,7 +1,7 @@\n //! `tt` crate defines a `TokenTree` data structure: this is the interface (both\n //! input and output) of macros. It closely mirrors `proc_macro` crate's\n //! `TokenTree`.\n-use std::{fmt, panic::RefUnwindSafe};\n+use std::fmt;\n \n use stdx::impl_from;\n \n@@ -247,8 +247,3 @@ impl fmt::Display for ExpansionError {\n         }\n     }\n }\n-\n-pub trait TokenExpander: fmt::Debug + Send + Sync + RefUnwindSafe {\n-    fn expand(&self, subtree: &Subtree, attrs: Option<&Subtree>)\n-        -> Result<Subtree, ExpansionError>;\n-}"}]}