{"sha": "3d02aa850bdb4c475a6dcbdebf879fdd625cdab9", "node_id": "C_kwDOAAsO6NoAKDNkMDJhYTg1MGJkYjRjNDc1YTZkY2JkZWJmODc5ZmRkNjI1Y2RhYjk", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-10-04T18:27:28Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2023-05-14T14:52:08Z"}, "message": "explain that `PhantomData<&'a T>` infers `T: 'a`", "tree": {"sha": "fa3b52e175bbe9212b1ff4d9965b5c55efad5085", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa3b52e175bbe9212b1ff4d9965b5c55efad5085"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d02aa850bdb4c475a6dcbdebf879fdd625cdab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d02aa850bdb4c475a6dcbdebf879fdd625cdab9", "html_url": "https://github.com/rust-lang/rust/commit/3d02aa850bdb4c475a6dcbdebf879fdd625cdab9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d02aa850bdb4c475a6dcbdebf879fdd625cdab9/comments", "author": null, "committer": null, "parents": [{"sha": "3603a84a3d74d0b70dbbdaa47ed8f8a306f3fe7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3603a84a3d74d0b70dbbdaa47ed8f8a306f3fe7f", "html_url": "https://github.com/rust-lang/rust/commit/3603a84a3d74d0b70dbbdaa47ed8f8a306f3fe7f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "47a3e78b4d5c7828def6fb11f149d27c429ca44c", "filename": "library/core/src/marker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d02aa850bdb4c475a6dcbdebf879fdd625cdab9/library%2Fcore%2Fsrc%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d02aa850bdb4c475a6dcbdebf879fdd625cdab9/library%2Fcore%2Fsrc%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmarker.rs?ref=3d02aa850bdb4c475a6dcbdebf879fdd625cdab9", "patch": "@@ -695,7 +695,7 @@ impl<T: ?Sized> !Sync for *mut T {}\n /// }\n /// ```\n ///\n-/// This also in turn requires the annotation `T: 'a`, indicating\n+/// This also in turn infers the lifetime bound `T: 'a`, indicating\n /// that any references in `T` are valid over the lifetime `'a`.\n ///\n /// When initializing a `Slice` you simply provide the value"}]}