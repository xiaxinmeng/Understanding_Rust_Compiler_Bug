{"sha": "b5a76c7ff075b96415d5941c95854b217e294d9d", "node_id": "C_kwDOAAsO6NoAKGI1YTc2YzdmZjA3NWI5NjQxNWQ1OTQxYzk1ODU0YjIxN2UyOTRkOWQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-04-20T12:44:10Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-04-20T12:44:10Z"}, "message": "add test for https://github.com/rust-lang/miri/issues/2068", "tree": {"sha": "76e0df10b77fa3d6475bc6dc5167208af9449eeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76e0df10b77fa3d6475bc6dc5167208af9449eeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5a76c7ff075b96415d5941c95854b217e294d9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5a76c7ff075b96415d5941c95854b217e294d9d", "html_url": "https://github.com/rust-lang/rust/commit/b5a76c7ff075b96415d5941c95854b217e294d9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5a76c7ff075b96415d5941c95854b217e294d9d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd968a89bf13a739655cc8a379976bd93dc9bc58", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd968a89bf13a739655cc8a379976bd93dc9bc58", "html_url": "https://github.com/rust-lang/rust/commit/dd968a89bf13a739655cc8a379976bd93dc9bc58"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "7576ba78f607dd5ecff38d752b0619cefebe3e95", "filename": "tests/run-pass/issue-miri-2068.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/b5a76c7ff075b96415d5941c95854b217e294d9d/tests%2Frun-pass%2Fissue-miri-2068.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5a76c7ff075b96415d5941c95854b217e294d9d/tests%2Frun-pass%2Fissue-miri-2068.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-miri-2068.rs?ref=b5a76c7ff075b96415d5941c95854b217e294d9d", "patch": "@@ -0,0 +1,48 @@\n+#![feature(pin_macro)]\n+\n+use core::future::Future;\n+use core::pin::Pin;\n+use core::task::{Context, Poll};\n+\n+use std::sync::Arc;\n+\n+struct NopWaker;\n+\n+impl std::task::Wake for NopWaker {\n+    fn wake(self: Arc<Self>) {}\n+}\n+\n+pub fn fuzzing_block_on<O, F: Future<Output = O>>(fut: F) -> O {\n+    let mut fut = std::pin::pin!(fut);\n+    let waker = std::task::Waker::from(Arc::new(NopWaker));\n+    let mut context = std::task::Context::from_waker(&waker);\n+    loop {\n+        match fut.as_mut().poll(&mut context) {\n+            Poll::Ready(v) => return v,\n+            Poll::Pending => {}\n+        }\n+    }\n+}\n+\n+pub struct LastFuture<S> {\n+    last: S,\n+}\n+\n+impl<S> Future for LastFuture<S>\n+where\n+    Self: Unpin,\n+    S: Unpin + Copy,\n+{\n+    type Output = S;\n+\n+    fn poll(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Self::Output> {\n+        return Poll::Ready(self.last);\n+    }\n+}\n+\n+fn main() {\n+    fuzzing_block_on(async {\n+        LastFuture { last: &0u32 }.await;\n+        LastFuture { last: Option::<u32>::None }.await;\n+    });\n+}"}]}