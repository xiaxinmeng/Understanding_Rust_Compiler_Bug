{"sha": "e68bf8ae15ee6c052d0bcc9252386c5c5ee86de2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2OGJmOGFlMTVlZTZjMDUyZDBiY2M5MjUyMzg2YzVjNWVlODZkZTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-11T17:20:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-11T17:20:20Z"}, "message": "Auto merge of #58021 - ishitatsuyuki:57667-fix, r=RalfJung\n\nFix fallout from #57667", "tree": {"sha": "09d79ac31cde6e8ea6f1d8da98b7a33d34ab945e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09d79ac31cde6e8ea6f1d8da98b7a33d34ab945e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e68bf8ae15ee6c052d0bcc9252386c5c5ee86de2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e68bf8ae15ee6c052d0bcc9252386c5c5ee86de2", "html_url": "https://github.com/rust-lang/rust/commit/e68bf8ae15ee6c052d0bcc9252386c5c5ee86de2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e68bf8ae15ee6c052d0bcc9252386c5c5ee86de2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de5c3c4b07fb37028bb36b2271271caf24eec6f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/de5c3c4b07fb37028bb36b2271271caf24eec6f3", "html_url": "https://github.com/rust-lang/rust/commit/de5c3c4b07fb37028bb36b2271271caf24eec6f3"}, {"sha": "a03e20db6d15fe1cdda64c0fbe934e36209a08f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a03e20db6d15fe1cdda64c0fbe934e36209a08f6", "html_url": "https://github.com/rust-lang/rust/commit/a03e20db6d15fe1cdda64c0fbe934e36209a08f6"}], "stats": {"total": 39, "additions": 6, "deletions": 33}, "files": [{"sha": "9afcb7c4621c9a0ef9e5a5b742c1e862e565a72d", "filename": "src/libsyntax/ptr.rs", "status": "modified", "additions": 6, "deletions": 33, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/e68bf8ae15ee6c052d0bcc9252386c5c5ee86de2/src%2Flibsyntax%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e68bf8ae15ee6c052d0bcc9252386c5c5ee86de2/src%2Flibsyntax%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fptr.rs?ref=e68bf8ae15ee6c052d0bcc9252386c5c5ee86de2", "patch": "@@ -29,7 +29,7 @@\n use std::fmt::{self, Display, Debug};\n use std::iter::FromIterator;\n use std::ops::{Deref, DerefMut};\n-use std::{mem, ptr, slice, vec};\n+use std::{slice, vec};\n \n use serialize::{Encodable, Decodable, Encoder, Decoder};\n \n@@ -66,45 +66,18 @@ impl<T: 'static> P<T> {\n     pub fn map<F>(mut self, f: F) -> P<T> where\n         F: FnOnce(T) -> T,\n     {\n-        let p: *mut T = &mut *self.ptr;\n+        let x = f(*self.ptr);\n+        *self.ptr = x;\n \n-        // Leak self in case of panic.\n-        // FIXME(eddyb) Use some sort of \"free guard\" that\n-        // only deallocates, without dropping the pointee,\n-        // in case the call the `f` below ends in a panic.\n-        mem::forget(self);\n-\n-        unsafe {\n-            ptr::write(p, f(ptr::read(p)));\n-\n-            // Recreate self from the raw pointer.\n-            P { ptr: Box::from_raw(p) }\n-        }\n+        self\n     }\n \n     /// Optionally produce a new `P<T>` from `self` without reallocating.\n     pub fn filter_map<F>(mut self, f: F) -> Option<P<T>> where\n         F: FnOnce(T) -> Option<T>,\n     {\n-        let p: *mut T = &mut *self.ptr;\n-\n-        // Leak self in case of panic.\n-        // FIXME(eddyb) Use some sort of \"free guard\" that\n-        // only deallocates, without dropping the pointee,\n-        // in case the call the `f` below ends in a panic.\n-        mem::forget(self);\n-\n-        unsafe {\n-            if let Some(v) = f(ptr::read(p)) {\n-                ptr::write(p, v);\n-\n-                // Recreate self from the raw pointer.\n-                Some(P { ptr: Box::from_raw(p) })\n-            } else {\n-                drop(Box::from_raw(p));\n-                None\n-            }\n-        }\n+        *self.ptr = f(*self.ptr)?;\n+        Some(self)\n     }\n }\n "}]}