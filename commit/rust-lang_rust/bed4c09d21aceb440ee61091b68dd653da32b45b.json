{"sha": "bed4c09d21aceb440ee61091b68dd653da32b45b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZDRjMDlkMjFhY2ViNDQwZWU2MTA5MWI2OGRkNjUzZGEzMmI0NWI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-01T03:49:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-01T03:49:32Z"}, "message": "Rollup merge of #66896 - RalfJung:queries, r=Zoxc\n\npass Queries to compiler callbacks\n\nhttps://github.com/rust-lang/rust/pull/66791 made it impossible to access the tcx in the callbacks; this should fix that.\n\nr? @Zoxc", "tree": {"sha": "feada823fc5b16040da2f7aba36cda434f0b2fa4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/feada823fc5b16040da2f7aba36cda434f0b2fa4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bed4c09d21aceb440ee61091b68dd653da32b45b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd4zhMCRBK7hj4Ov3rIwAAdHIIAEz3Krar4QEb75ECKpPu30zQ\nabF7w0SvfpTtiehHJgvuhe4SPcXPP8hpEnXqU8b0A0ULEOHIzVgH2mbO/6OqwD/D\n3VSrPoFRbrAA8T9xWtMQkj11hq02ccVe5G8v7BaYzO7dTK84YpmKwSrzYoMncCSv\nVb+4G4WooGhM0e8cotwNSdNO3PynXbaIX3nG7vWc2G6UBybSxdZ7o5bcUudY8gjJ\nY83k35Y+H2orMcOlcAUswISJ/7KVyTxXkfAoGwa6lWoOg1Sa0WVFqOMuI6BZPhb6\nK3rIACyn8DAGdT86WhYaFZ6HaQSy8IGQReiq5aEBxk87e67fuhnPmWbv2EMzf0I=\n=n0fw\n-----END PGP SIGNATURE-----\n", "payload": "tree feada823fc5b16040da2f7aba36cda434f0b2fa4\nparent 3db3f156f11cd16fe07a0b90c26740737e29be60\nparent 7f20198632bc2079d4deb4c213ec4876c47ec5d2\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1575172172 +0100\ncommitter GitHub <noreply@github.com> 1575172172 +0100\n\nRollup merge of #66896 - RalfJung:queries, r=Zoxc\n\npass Queries to compiler callbacks\n\nhttps://github.com/rust-lang/rust/pull/66791 made it impossible to access the tcx in the callbacks; this should fix that.\n\nr? @Zoxc\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bed4c09d21aceb440ee61091b68dd653da32b45b", "html_url": "https://github.com/rust-lang/rust/commit/bed4c09d21aceb440ee61091b68dd653da32b45b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bed4c09d21aceb440ee61091b68dd653da32b45b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3db3f156f11cd16fe07a0b90c26740737e29be60", "url": "https://api.github.com/repos/rust-lang/rust/commits/3db3f156f11cd16fe07a0b90c26740737e29be60", "html_url": "https://github.com/rust-lang/rust/commit/3db3f156f11cd16fe07a0b90c26740737e29be60"}, {"sha": "7f20198632bc2079d4deb4c213ec4876c47ec5d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f20198632bc2079d4deb4c213ec4876c47ec5d2", "html_url": "https://github.com/rust-lang/rust/commit/7f20198632bc2079d4deb4c213ec4876c47ec5d2"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "93f4e73ccc311aac793f060eafb36f2e0676d709", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/bed4c09d21aceb440ee61091b68dd653da32b45b/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bed4c09d21aceb440ee61091b68dd653da32b45b/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=bed4c09d21aceb440ee61091b68dd653da32b45b", "patch": "@@ -41,7 +41,7 @@ use rustc::util::common::{set_time_depth, time, print_time_passes_entry, ErrorRe\n use rustc_metadata::locator;\n use rustc_codegen_utils::codegen_backend::CodegenBackend;\n use errors::{PResult, registry::Registry};\n-use rustc_interface::interface;\n+use rustc_interface::{interface, Queries};\n use rustc_interface::util::get_codegen_sysroot;\n use rustc_data_structures::sync::SeqCst;\n use rustc_feature::{find_gated_cfg, UnstableFeatures};\n@@ -98,17 +98,29 @@ pub trait Callbacks {\n     fn config(&mut self, _config: &mut interface::Config) {}\n     /// Called after parsing. Return value instructs the compiler whether to\n     /// continue the compilation afterwards (defaults to `Compilation::Continue`)\n-    fn after_parsing(&mut self, _compiler: &interface::Compiler) -> Compilation {\n+    fn after_parsing<'tcx>(\n+        &mut self,\n+        _compiler: &interface::Compiler,\n+        _queries: &'tcx Queries<'tcx>,\n+    ) -> Compilation {\n         Compilation::Continue\n     }\n     /// Called after expansion. Return value instructs the compiler whether to\n     /// continue the compilation afterwards (defaults to `Compilation::Continue`)\n-    fn after_expansion(&mut self, _compiler: &interface::Compiler) -> Compilation {\n+    fn after_expansion<'tcx>(\n+        &mut self,\n+        _compiler: &interface::Compiler,\n+        _queries: &'tcx Queries<'tcx>,\n+    ) -> Compilation {\n         Compilation::Continue\n     }\n     /// Called after analysis. Return value instructs the compiler whether to\n     /// continue the compilation afterwards (defaults to `Compilation::Continue`)\n-    fn after_analysis(&mut self, _compiler: &interface::Compiler) -> Compilation {\n+    fn after_analysis<'tcx>(\n+        &mut self,\n+        _compiler: &interface::Compiler,\n+        _queries: &'tcx Queries<'tcx>,\n+    ) -> Compilation {\n         Compilation::Continue\n     }\n }\n@@ -312,7 +324,7 @@ pub fn run_compiler(\n                 return early_exit();\n             }\n \n-            if callbacks.after_parsing(compiler) == Compilation::Stop {\n+            if callbacks.after_parsing(compiler, queries) == Compilation::Stop {\n                 return early_exit();\n             }\n \n@@ -333,7 +345,7 @@ pub fn run_compiler(\n             }\n \n             queries.expansion()?;\n-            if callbacks.after_expansion(compiler) == Compilation::Stop {\n+            if callbacks.after_expansion(compiler, queries) == Compilation::Stop {\n                 return early_exit();\n             }\n \n@@ -382,7 +394,7 @@ pub fn run_compiler(\n \n             queries.global_ctxt()?.peek_mut().enter(|tcx| tcx.analysis(LOCAL_CRATE))?;\n \n-            if callbacks.after_analysis(compiler) == Compilation::Stop {\n+            if callbacks.after_analysis(compiler, queries) == Compilation::Stop {\n                 return early_exit();\n             }\n "}, {"sha": "76af4342f5c9ef0c59877cdb020394bd6287b98f", "filename": "src/librustc_interface/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bed4c09d21aceb440ee61091b68dd653da32b45b/src%2Flibrustc_interface%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bed4c09d21aceb440ee61091b68dd653da32b45b/src%2Flibrustc_interface%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Flib.rs?ref=bed4c09d21aceb440ee61091b68dd653da32b45b", "patch": "@@ -18,6 +18,7 @@ pub mod util;\n mod proc_macro_decls;\n \n pub use interface::{run_compiler, Config};\n+pub use queries::Queries;\n \n #[cfg(test)]\n mod tests;"}]}