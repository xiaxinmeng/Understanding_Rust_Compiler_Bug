{"sha": "6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiZGQ1ZmE0NjFiYTBmM2YzNjk3MzM5ZmZiNTYwYzU3N2UzYjBjYzY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-23T13:53:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-23T14:12:49Z"}, "message": "Privatise nameres", "tree": {"sha": "18f3da22ef7153887ce6ad4d5d28df57fb030ab3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18f3da22ef7153887ce6ad4d5d28df57fb030ab3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6", "html_url": "https://github.com/rust-lang/rust/commit/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "158b1cb524d8e07aa7a6ec2342bca2ce4667d316", "url": "https://api.github.com/repos/rust-lang/rust/commits/158b1cb524d8e07aa7a6ec2342bca2ce4667d316", "html_url": "https://github.com/rust-lang/rust/commit/158b1cb524d8e07aa7a6ec2342bca2ce4667d316"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "cd178bf887b1f747c815a92ae1d49c9e53cdc665", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6", "patch": "@@ -9,7 +9,7 @@ use hir_def::{\n     body::scope::ExprScopes,\n     builtin_type::BuiltinType,\n     docs::Documentation,\n-    nameres::per_ns::PerNs,\n+    per_ns::PerNs,\n     resolver::{HasResolver, TypeNs},\n     type_ref::TypeRef,\n     ContainerId, HasModule, ImplId, LocalEnumVariantId, LocalImportId, LocalModuleId,"}, {"sha": "11ae9cdc0f369f7dc75d61a2c121cc4daa9b2a4a", "filename": "crates/ra_hir_def/src/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flib.rs?ref=6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6", "patch": "@@ -21,17 +21,16 @@ pub mod resolver;\n pub mod data;\n pub mod lang_item;\n pub mod docs;\n+pub mod per_ns;\n \n mod trace;\n+mod nameres;\n \n #[cfg(test)]\n mod test_db;\n #[cfg(test)]\n mod marks;\n \n-// FIXME: this should be private\n-pub mod nameres;\n-\n use std::hash::{Hash, Hasher};\n \n use hir_expand::{ast_id_map::FileAstId, db::AstDatabase, AstId, HirFileId, MacroDefId, Source};"}, {"sha": "3b2e996470aebbef0fe054be97102ace87a20bc8", "filename": "crates/ra_hir_def/src/nameres.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs?ref=6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6", "patch": "@@ -47,8 +47,7 @@\n //! path and, upon success, we run macro expansion and \"collect module\" phase on\n //! the result\n \n-pub mod raw;\n-pub mod per_ns;\n+pub(crate) mod raw;\n mod collector;\n mod mod_resolution;\n mod path_resolution;\n@@ -72,8 +71,9 @@ use rustc_hash::{FxHashMap, FxHashSet};\n use crate::{\n     builtin_type::BuiltinType,\n     db::DefDatabase,\n-    nameres::{diagnostics::DefDiagnostic, path_resolution::ResolveMode, per_ns::PerNs},\n+    nameres::{diagnostics::DefDiagnostic, path_resolution::ResolveMode},\n     path::Path,\n+    per_ns::PerNs,\n     AstId, FunctionId, ImplId, LocalImportId, LocalModuleId, ModuleDefId, ModuleId, TraitId,\n };\n "}, {"sha": "b02364e86f6ebff9453abd26348bfafffadb5617", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6", "patch": "@@ -16,9 +16,10 @@ use crate::{\n     db::DefDatabase,\n     nameres::{\n         diagnostics::DefDiagnostic, mod_resolution::ModDir, path_resolution::ReachedFixedPoint,\n-        per_ns::PerNs, raw, CrateDefMap, ModuleData, Resolution, ResolveMode,\n+        raw, CrateDefMap, ModuleData, Resolution, ResolveMode,\n     },\n     path::{Path, PathKind},\n+    per_ns::PerNs,\n     AdtId, AstId, AstItemDef, ConstLoc, ContainerId, EnumId, EnumVariantId, FunctionLoc, ImplId,\n     Intern, LocalImportId, LocalModuleId, LocationCtx, ModuleDefId, ModuleId, StaticId, StructId,\n     StructOrUnionId, TraitId, TypeAliasLoc, UnionId,"}, {"sha": "9455f22bbd6fe155dd81f2210fcbe227a411e2bd", "filename": "crates/ra_hir_def/src/nameres/path_resolution.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs?ref=6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6", "patch": "@@ -16,8 +16,9 @@ use test_utils::tested_by;\n \n use crate::{\n     db::DefDatabase,\n-    nameres::{per_ns::PerNs, CrateDefMap},\n+    nameres::CrateDefMap,\n     path::{Path, PathKind},\n+    per_ns::PerNs,\n     AdtId, EnumVariantId, LocalModuleId, ModuleDefId, ModuleId,\n };\n "}, {"sha": "717ed1ef905a4ebfef8d034c17a29f5ffe2c7f70", "filename": "crates/ra_hir_def/src/per_ns.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/crates%2Fra_hir_def%2Fsrc%2Fper_ns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/crates%2Fra_hir_def%2Fsrc%2Fper_ns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fper_ns.rs?ref=6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6", "previous_filename": "crates/ra_hir_def/src/nameres/per_ns.rs"}, {"sha": "b56de44dd7a22600e3a03e1e82dac9425e466186", "filename": "crates/ra_hir_def/src/resolver.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs?ref=6bdd5fa461ba0f3f3697339ffb560c577e3b0cc6", "patch": "@@ -14,8 +14,9 @@ use crate::{\n     db::DefDatabase,\n     expr::{ExprId, PatId},\n     generics::GenericParams,\n-    nameres::{per_ns::PerNs, CrateDefMap},\n+    nameres::CrateDefMap,\n     path::{Path, PathKind},\n+    per_ns::PerNs,\n     AdtId, AstItemDef, ConstId, ContainerId, DefWithBodyId, EnumId, EnumVariantId, FunctionId,\n     GenericDefId, ImplId, LocalModuleId, Lookup, ModuleDefId, ModuleId, StaticId, StructId,\n     TraitId, TypeAliasId,"}]}