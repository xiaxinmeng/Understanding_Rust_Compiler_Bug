{"sha": "31c3c0449807d22a0f10e7a290a8e4ed114b98d4", "node_id": "C_kwDOAAsO6NoAKDMxYzNjMDQ0OTgwN2QyMmEwZjEwZTdhMjkwYThlNGVkMTE0Yjk4ZDQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-20T15:16:41Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-20T15:16:41Z"}, "message": "make ptr::invalid not the same as a regular int2ptr cast", "tree": {"sha": "fabb1a13819787798e6fce2cd86f5f891f818955", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fabb1a13819787798e6fce2cd86f5f891f818955"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31c3c0449807d22a0f10e7a290a8e4ed114b98d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31c3c0449807d22a0f10e7a290a8e4ed114b98d4", "html_url": "https://github.com/rust-lang/rust/commit/31c3c0449807d22a0f10e7a290a8e4ed114b98d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31c3c0449807d22a0f10e7a290a8e4ed114b98d4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "512a328e2fb32bddd206461770a2c058368519cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/512a328e2fb32bddd206461770a2c058368519cc", "html_url": "https://github.com/rust-lang/rust/commit/512a328e2fb32bddd206461770a2c058368519cc"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "dc229c9ff9b44594645573104ea46b13157686ec", "filename": "library/core/src/ptr/mod.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/31c3c0449807d22a0f10e7a290a8e4ed114b98d4/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31c3c0449807d22a0f10e7a290a8e4ed114b98d4/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs?ref=31c3c0449807d22a0f10e7a290a8e4ed114b98d4", "patch": "@@ -555,7 +555,11 @@ pub const fn null_mut<T>() -> *mut T {\n #[unstable(feature = \"strict_provenance\", issue = \"95228\")]\n pub const fn invalid<T>(addr: usize) -> *const T {\n     // FIXME(strict_provenance_magic): I am magic and should be a compiler intrinsic.\n-    addr as *const T\n+    // We use transmute rather than a cast so tools like Miri can tell that this\n+    // is *not* the same as from_exposed_addr.\n+    // SAFETY: every valid integer is also a valid pointer (as long as you don't dereference that\n+    // pointer).\n+    unsafe { mem::transmute(addr) }\n }\n \n /// Creates an invalid mutable pointer with the given address.\n@@ -582,7 +586,11 @@ pub const fn invalid<T>(addr: usize) -> *const T {\n #[unstable(feature = \"strict_provenance\", issue = \"95228\")]\n pub const fn invalid_mut<T>(addr: usize) -> *mut T {\n     // FIXME(strict_provenance_magic): I am magic and should be a compiler intrinsic.\n-    addr as *mut T\n+    // We use transmute rather than a cast so tools like Miri can tell that this\n+    // is *not* the same as from_exposed_addr.\n+    // SAFETY: every valid integer is also a valid pointer (as long as you don't dereference that\n+    // pointer).\n+    unsafe { mem::transmute(addr) }\n }\n \n /// Convert an address back to a pointer, picking up a previously 'exposed' provenance."}]}