{"sha": "70d418c315f663042636b3b63f4bbe003b4a22d8", "node_id": "C_kwDOAAsO6NoAKDcwZDQxOGMzMTVmNjYzMDQyNjM2YjNiNjNmNGJiZTAwM2I0YTIyZDg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-11-20T17:33:04Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-11-20T17:33:04Z"}, "message": "Revert \"require full validity when determining the discriminant of a value\"\n\nThis reverts commit 0a2b7d71d96a22126cce57f0dab5890d060f2259, reversing\nchanges made to 47c1bd1bcc50b25d133f8be3d49825491c1df249.\nThis caused several unforeseen problems:\n- https://github.com/rust-lang/rust/issues/91029\n- https://github.com/rust-lang/rust/pull/89764#issuecomment-973588007", "tree": {"sha": "9f4fb23b3e52b44a1558aa8b5889ec14c84229ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f4fb23b3e52b44a1558aa8b5889ec14c84229ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70d418c315f663042636b3b63f4bbe003b4a22d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70d418c315f663042636b3b63f4bbe003b4a22d8", "html_url": "https://github.com/rust-lang/rust/commit/70d418c315f663042636b3b63f4bbe003b4a22d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70d418c315f663042636b3b63f4bbe003b4a22d8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93542a8240c5f926ac5f3f99cef99366082f9c2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/93542a8240c5f926ac5f3f99cef99366082f9c2b", "html_url": "https://github.com/rust-lang/rust/commit/93542a8240c5f926ac5f3f99cef99366082f9c2b"}], "stats": {"total": 12, "additions": 0, "deletions": 12}, "files": [{"sha": "44da27a43db0a01e08d9c46db4ef4fc8be2c4e70", "filename": "compiler/rustc_const_eval/src/interpret/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/70d418c315f663042636b3b63f4bbe003b4a22d8/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70d418c315f663042636b3b63f4bbe003b4a22d8/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs?ref=70d418c315f663042636b3b63f4bbe003b4a22d8", "patch": "@@ -265,12 +265,6 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             }\n             sym::discriminant_value => {\n                 let place = self.deref_operand(&args[0])?;\n-                if M::enforce_validity(self) {\n-                    // This is 'using' the value, so make sure the validity invariant is satisfied.\n-                    // (Also see https://github.com/rust-lang/rust/pull/89764.)\n-                    self.validate_operand(&place.into())?;\n-                }\n-\n                 let discr_val = self.read_discriminant(&place.into())?.0;\n                 self.write_scalar(discr_val, dest)?;\n             }"}, {"sha": "e6037d561dedcb5228ed84e93e524df136f17551", "filename": "compiler/rustc_const_eval/src/interpret/step.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/70d418c315f663042636b3b63f4bbe003b4a22d8/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70d418c315f663042636b3b63f4bbe003b4a22d8/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs?ref=70d418c315f663042636b3b63f4bbe003b4a22d8", "patch": "@@ -304,12 +304,6 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n             Discriminant(place) => {\n                 let op = self.eval_place_to_op(place, None)?;\n-                if M::enforce_validity(self) {\n-                    // This is 'using' the value, so make sure the validity invariant is satisfied.\n-                    // (Also see https://github.com/rust-lang/rust/pull/89764.)\n-                    self.validate_operand(&op)?;\n-                }\n-\n                 let discr_val = self.read_discriminant(&op)?.0;\n                 self.write_scalar(discr_val, &dest)?;\n             }"}]}