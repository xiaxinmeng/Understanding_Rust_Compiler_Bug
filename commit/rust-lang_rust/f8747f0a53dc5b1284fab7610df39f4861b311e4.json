{"sha": "f8747f0a53dc5b1284fab7610df39f4861b311e4", "node_id": "C_kwDOAAsO6NoAKGY4NzQ3ZjBhNTNkYzViMTI4NGZhYjc2MTBkZjM5ZjQ4NjFiMzExZTQ", "commit": {"author": {"name": "Afonso Bordado", "email": "afonsobordado@az8.co", "date": "2022-07-30T19:24:04Z"}, "committer": {"name": "Afonso Bordado", "email": "afonsobordado@az8.co", "date": "2022-07-30T19:24:04Z"}, "message": "Fix aarch64 cross compilation", "tree": {"sha": "d2215941df5dcf6c0c7b47c2d823e3c9661803ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2215941df5dcf6c0c7b47c2d823e3c9661803ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8747f0a53dc5b1284fab7610df39f4861b311e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8747f0a53dc5b1284fab7610df39f4861b311e4", "html_url": "https://github.com/rust-lang/rust/commit/f8747f0a53dc5b1284fab7610df39f4861b311e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8747f0a53dc5b1284fab7610df39f4861b311e4/comments", "author": {"login": "afonso360", "id": 1357143, "node_id": "MDQ6VXNlcjEzNTcxNDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1357143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afonso360", "html_url": "https://github.com/afonso360", "followers_url": "https://api.github.com/users/afonso360/followers", "following_url": "https://api.github.com/users/afonso360/following{/other_user}", "gists_url": "https://api.github.com/users/afonso360/gists{/gist_id}", "starred_url": "https://api.github.com/users/afonso360/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afonso360/subscriptions", "organizations_url": "https://api.github.com/users/afonso360/orgs", "repos_url": "https://api.github.com/users/afonso360/repos", "events_url": "https://api.github.com/users/afonso360/events{/privacy}", "received_events_url": "https://api.github.com/users/afonso360/received_events", "type": "User", "site_admin": false}, "committer": {"login": "afonso360", "id": 1357143, "node_id": "MDQ6VXNlcjEzNTcxNDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1357143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afonso360", "html_url": "https://github.com/afonso360", "followers_url": "https://api.github.com/users/afonso360/followers", "following_url": "https://api.github.com/users/afonso360/following{/other_user}", "gists_url": "https://api.github.com/users/afonso360/gists{/gist_id}", "starred_url": "https://api.github.com/users/afonso360/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afonso360/subscriptions", "organizations_url": "https://api.github.com/users/afonso360/orgs", "repos_url": "https://api.github.com/users/afonso360/repos", "events_url": "https://api.github.com/users/afonso360/events{/privacy}", "received_events_url": "https://api.github.com/users/afonso360/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ec3d20882f434b9cdbca5c8ed4f3630883b32aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ec3d20882f434b9cdbca5c8ed4f3630883b32aa", "html_url": "https://github.com/rust-lang/rust/commit/8ec3d20882f434b9cdbca5c8ed4f3630883b32aa"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "5c69beeaab5fb3aba6f4ab660a44d722675a4949", "filename": "build_system/tests.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f8747f0a53dc5b1284fab7610df39f4861b311e4/build_system%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8747f0a53dc5b1284fab7610df39f4861b311e4/build_system%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Ftests.rs?ref=f8747f0a53dc5b1284fab7610df39f4861b311e4", "patch": "@@ -322,7 +322,7 @@ struct TestRunner {\n     out_dir: PathBuf,\n     jit_supported: bool,\n     rust_flags: String,\n-    run_wrapper: String,\n+    run_wrapper: Vec<String>,\n     host_triple: String,\n     target_triple: String,\n }\n@@ -339,18 +339,18 @@ impl TestRunner {\n         let jit_supported = target_triple.contains(\"x86_64\") && is_native;\n \n         let mut rust_flags = env::var(\"RUSTFLAGS\").ok().unwrap_or(\"\".to_string());\n-        let mut run_wrapper = String::new();\n+        let mut run_wrapper = Vec::new();\n \n         if !is_native {\n             match target_triple.as_str() {\n                 \"aarch64-unknown-linux-gnu\" => {\n                     // We are cross-compiling for aarch64. Use the correct linker and run tests in qemu.\n-                    rust_flags = format!(\"-Clinker=aarch64-linux-gnu-gcc {}\", rust_flags);\n-                    run_wrapper = \"qemu-aarch64 -L /usr/aarch64-linux-gnu\".to_string();\n+                    rust_flags = format!(\"-Clinker=aarch64-linux-gnu-gcc{}\", rust_flags);\n+                    run_wrapper = vec![\"qemu-aarch64\", \"-L\", \"/usr/aarch64-linux-gnu\"];\n                 },\n                 \"x86_64-pc-windows-gnu\" => {\n                     // We are cross-compiling for Windows. Run tests in wine.\n-                    run_wrapper = \"wine\".to_string();\n+                    run_wrapper = vec![\"wine\"];\n                 }\n                 _ => {\n                     println!(\"Unknown non-native platform\");\n@@ -368,7 +368,7 @@ impl TestRunner {\n             out_dir,\n             jit_supported,\n             rust_flags,\n-            run_wrapper,\n+            run_wrapper: run_wrapper.iter().map(|s| s.to_string()).collect(),\n             host_triple,\n             target_triple,\n         }\n@@ -446,7 +446,7 @@ impl TestRunner {\n \n         // Prepend the RUN_WRAPPER's\n         if !self.run_wrapper.is_empty() {\n-            full_cmd.push(self.run_wrapper.clone());\n+            full_cmd.extend(self.run_wrapper.iter().cloned());\n         }\n \n         full_cmd.push({\n@@ -459,6 +459,7 @@ impl TestRunner {\n             full_cmd.push(arg.to_string());\n         }\n \n+        println!(\"full_CMD: {:?}\", full_cmd);\n         let mut cmd_iter = full_cmd.into_iter();\n         let first = cmd_iter.next().unwrap();\n "}]}