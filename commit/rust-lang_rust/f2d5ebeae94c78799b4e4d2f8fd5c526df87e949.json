{"sha": "f2d5ebeae94c78799b4e4d2f8fd5c526df87e949", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZDVlYmVhZTk0Yzc4Nzk5YjRlNGQyZjhmZDVjNTI2ZGY4N2U5NDk=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-09-29T21:51:12Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-09-29T21:51:12Z"}, "message": "sacrifice a few bytes for the euv demon", "tree": {"sha": "38911e325f6a07e0de3cbcd0f5ff1d52afb4a32a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38911e325f6a07e0de3cbcd0f5ff1d52afb4a32a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2d5ebeae94c78799b4e4d2f8fd5c526df87e949", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2d5ebeae94c78799b4e4d2f8fd5c526df87e949", "html_url": "https://github.com/rust-lang/rust/commit/f2d5ebeae94c78799b4e4d2f8fd5c526df87e949", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2d5ebeae94c78799b4e4d2f8fd5c526df87e949/comments", "author": null, "committer": null, "parents": [{"sha": "9699adc508a90834de1c1c432b10f774b8ffcf4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9699adc508a90834de1c1c432b10f774b8ffcf4f", "html_url": "https://github.com/rust-lang/rust/commit/9699adc508a90834de1c1c432b10f774b8ffcf4f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "13e8fddf77912afd90bfa3d781a2ae34edf87f90", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2d5ebeae94c78799b4e4d2f8fd5c526df87e949/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2d5ebeae94c78799b4e4d2f8fd5c526df87e949/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=f2d5ebeae94c78799b4e4d2f8fd5c526df87e949", "patch": "@@ -244,7 +244,7 @@ impl OverloadedCallType {\n // can just use the tcx as the typer.\n //\n // FIXME(stage0): the :'t here is probably only important for stage0\n-pub struct ExprUseVisitor<'d, 't, 'a: 't, 'tcx:'a+'d+'t> {\n+pub struct ExprUseVisitor<'d, 't, 'a: 't, 'tcx:'a+'d> {\n     typer: &'t infer::InferCtxt<'a, 'tcx>,\n     mc: mc::MemCategorizationContext<'t, 'a, 'tcx>,\n     delegate: &'d mut Delegate<'tcx>,\n@@ -278,7 +278,7 @@ enum PassArgs {\n impl<'d,'t,'a,'tcx> ExprUseVisitor<'d,'t,'a,'tcx> {\n     pub fn new(delegate: &'d mut Delegate<'tcx>,\n                typer: &'t infer::InferCtxt<'a, 'tcx>)\n-               -> ExprUseVisitor<'d,'t,'a,'tcx>\n+               -> ExprUseVisitor<'d,'t,'a,'tcx> where 'tcx:'a\n     {\n         ExprUseVisitor {\n             typer: typer,"}]}