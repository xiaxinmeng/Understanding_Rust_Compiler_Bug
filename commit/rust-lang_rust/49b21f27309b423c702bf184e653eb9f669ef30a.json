{"sha": "49b21f27309b423c702bf184e653eb9f669ef30a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5YjIxZjI3MzA5YjQyM2M3MDJiZjE4NGU2NTNlYjlmNjY5ZWYzMGE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-29T11:18:21Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-29T11:18:21Z"}, "message": "Fix returning (u128, u128)", "tree": {"sha": "83c0e2a066278615ca46d8885f161b7cacd93bd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83c0e2a066278615ca46d8885f161b7cacd93bd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49b21f27309b423c702bf184e653eb9f669ef30a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49b21f27309b423c702bf184e653eb9f669ef30a", "html_url": "https://github.com/rust-lang/rust/commit/49b21f27309b423c702bf184e653eb9f669ef30a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49b21f27309b423c702bf184e653eb9f669ef30a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63646b1956375836fac8610d04da5d2e8ce04559", "url": "https://api.github.com/repos/rust-lang/rust/commits/63646b1956375836fac8610d04da5d2e8ce04559", "html_url": "https://github.com/rust-lang/rust/commit/63646b1956375836fac8610d04da5d2e8ce04559"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "380bc487bcc9611cd4382872d37f5bec39ab74af", "filename": "example/mini_core_hello_world.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/49b21f27309b423c702bf184e653eb9f669ef30a/example%2Fmini_core_hello_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b21f27309b423c702bf184e653eb9f669ef30a/example%2Fmini_core_hello_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fmini_core_hello_world.rs?ref=49b21f27309b423c702bf184e653eb9f669ef30a", "patch": "@@ -117,13 +117,23 @@ impl<T: ?Sized, U: ?Sized> CoerceUnsized<Unique<U>> for Unique<T> where T: Unsiz\n fn take_f32(_f: f32) {}\n fn take_unique(_u: Unique<()>) {}\n \n+fn return_u128_pair() -> (u128, u128) {\n+    (0, 0)\n+}\n+\n+fn call_return_u128_pair() {\n+    return_u128_pair();\n+}\n+\n fn main() {\n     take_unique(Unique {\n         pointer: 0 as *const (),\n         _marker: PhantomData,\n     });\n     take_f32(0.1);\n \n+    call_return_u128_pair();\n+\n     //return;\n \n     unsafe {"}, {"sha": "f9a747da3140f005cea3273f4cf49e537d13c298", "filename": "src/abi.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/49b21f27309b423c702bf184e653eb9f669ef30a/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b21f27309b423c702bf184e653eb9f669ef30a/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=49b21f27309b423c702bf184e653eb9f669ef30a", "patch": "@@ -113,10 +113,16 @@ fn get_pass_mode<'tcx>(\n                 PassMode::ByVal(scalar_to_clif_type(tcx, scalar.clone()))\n             }\n             layout::Abi::ScalarPair(a, b) => {\n-                PassMode::ByValPair(\n-                    scalar_to_clif_type(tcx, a.clone()),\n-                    scalar_to_clif_type(tcx, b.clone()),\n-                )\n+                let a = scalar_to_clif_type(tcx, a.clone());\n+                let b = scalar_to_clif_type(tcx, b.clone());\n+                if a == types::I128 && b == types::I128 {\n+                    // Returning (i128, i128) by-val-pair would take 4 regs, while only 3 are\n+                    // available on x86_64. Cranelift gets confused when too many return params\n+                    // are used.\n+                    PassMode::ByRef\n+                } else {\n+                    PassMode::ByValPair(a, b)\n+                }\n             }\n \n             // FIXME implement Vector Abi in a cg_llvm compatible way"}]}