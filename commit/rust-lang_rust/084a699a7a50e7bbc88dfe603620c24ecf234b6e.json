{"sha": "084a699a7a50e7bbc88dfe603620c24ecf234b6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4NGE2OTlhN2E1MGU3YmJjODhkZmU2MDM2MjBjMjRlY2YyMzRiNmU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-02T02:20:22Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-02T02:20:40Z"}, "message": "rt: Remove vec_append.ll\n\nThis looks like just a random snippet of llasm.", "tree": {"sha": "239e047e580f00a0b4691f575354438e07b9241e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/239e047e580f00a0b4691f575354438e07b9241e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/084a699a7a50e7bbc88dfe603620c24ecf234b6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/084a699a7a50e7bbc88dfe603620c24ecf234b6e", "html_url": "https://github.com/rust-lang/rust/commit/084a699a7a50e7bbc88dfe603620c24ecf234b6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/084a699a7a50e7bbc88dfe603620c24ecf234b6e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4056082833f576847c79690861aa9c3a20f0c80e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4056082833f576847c79690861aa9c3a20f0c80e", "html_url": "https://github.com/rust-lang/rust/commit/4056082833f576847c79690861aa9c3a20f0c80e"}], "stats": {"total": 138, "additions": 0, "deletions": 138}, "files": [{"sha": "28a6e793cdb4b0db0456e06027d9ec7e800fe683", "filename": "src/rt/vec_append.ll", "status": "removed", "additions": 0, "deletions": 138, "changes": 138, "blob_url": "https://github.com/rust-lang/rust/blob/4056082833f576847c79690861aa9c3a20f0c80e/src%2Frt%2Fvec_append.ll", "raw_url": "https://github.com/rust-lang/rust/raw/4056082833f576847c79690861aa9c3a20f0c80e/src%2Frt%2Fvec_append.ll", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fvec_append.ll?ref=4056082833f576847c79690861aa9c3a20f0c80e", "patch": "@@ -1,138 +0,0 @@\n-%0 = type { i32, i32, i32, i32, [0 x i32] }\n-%task = type { i32, i32, i32, i32, i32, i32, i32, i32 }\n-%tydesc = type { %tydesc**, i32, i32, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*)*, void (i1*, %task*, i1*, %tydesc**, i8*, i8*, i8)* }\n-\n-declare void @llvm.memmove.p0i8.p0i8.i32(i8* nocapture, i8* nocapture, i32, i32, i1) nounwind\n-\n-define fastcc void @rust_vec_append_glue(%task*, %tydesc*, %tydesc*, %0**, %0*, i1) {\n-allocas:\n-  %6 = alloca i32\n-  %7 = alloca i8*\n-  br label %copy_args\n-\n-copy_args:                                        ; preds = %allocas\n-  br label %derived_tydescs\n-\n-derived_tydescs:                                  ; preds = %copy_args\n-  br label %8\n-\n-; <label>:8                                       ; preds = %derived_tydescs\n-  %9 = load %0** %3\n-  %10 = getelementptr %0* %4, i32 0, i32 2\n-  %11 = load i32* %10\n-  %12 = sub i32 %11, 1\n-  %13 = select i1 %5, i32 %12, i32 %11\n-  %14 = call %0* @upcall_vec_grow(%task* %0, %0* %9, i32 %13, i32* %6, %tydesc* %1)\n-  %15 = getelementptr %0* %14, i32 0, i32 2\n-  %16 = load i32* %15\n-  %17 = sub i32 %16, 1\n-  %18 = select i1 %5, i32 %17, i32 %16\n-  %19 = getelementptr %0* %14, i32 0, i32 4\n-  %20 = bitcast [0 x i32]* %19 to i8*\n-  %21 = getelementptr i8* %20, i32 %18\n-  store i8* %21, i8** %7\n-  %22 = load i32* %6\n-  %23 = trunc i32 %22 to i1\n-  br i1 %23, label %24, label %41\n-\n-; <label>:24                                      ; preds = %8\n-  %25 = getelementptr %0* %9, i32 0, i32 2\n-  %26 = load i32* %25\n-  %27 = sub i32 %26, 1\n-  %28 = select i1 %5, i32 %27, i32 %26\n-  %29 = getelementptr %0* %14, i32 0, i32 4\n-  %30 = bitcast [0 x i32]* %29 to i8*\n-  %31 = getelementptr %0* %9, i32 0, i32 4\n-  %32 = bitcast [0 x i32]* %31 to i8*\n-  %33 = getelementptr i8* %32, i32 %28\n-  %34 = getelementptr %tydesc* %2, i32 0, i32 1\n-  %35 = load i32* %34\n-  %36 = getelementptr %tydesc* %2, i32 0, i32 2\n-  %37 = load i32* %36\n-  %38 = ptrtoint i8* %30 to i32\n-  %39 = ptrtoint i8* %32 to i32\n-  %40 = ptrtoint i8* %33 to i32\n-  br label %55\n-\n-; <label>:41                                      ; preds = %68, %8\n-  %42 = getelementptr %0* %4, i32 0, i32 2\n-  %43 = load i32* %42\n-  %44 = load i8** %7\n-  %45 = getelementptr %0* %4, i32 0, i32 4\n-  %46 = bitcast [0 x i32]* %45 to i8*\n-  %47 = getelementptr i8* %46, i32 %43\n-  %48 = getelementptr %tydesc* %2, i32 0, i32 1\n-  %49 = load i32* %48\n-  %50 = getelementptr %tydesc* %2, i32 0, i32 2\n-  %51 = load i32* %50\n-  %52 = ptrtoint i8* %44 to i32\n-  %53 = ptrtoint i8* %46 to i32\n-  %54 = ptrtoint i8* %47 to i32\n-  br label %79\n-\n-; <label>:55                                      ; preds = %59, %24\n-  %56 = phi i32 [ %38, %24 ], [ %66, %59 ]\n-  %57 = phi i32 [ %39, %24 ], [ %67, %59 ]\n-  %58 = icmp ult i32 %57, %40\n-  br i1 %58, label %59, label %68\n-\n-; <label>:59                                      ; preds = %55\n-  %60 = inttoptr i32 %56 to i8*\n-  %61 = inttoptr i32 %57 to i8*\n-  %62 = getelementptr %tydesc* %2, i32 0, i32 0\n-  %63 = load %tydesc*** %62\n-  %64 = getelementptr %tydesc* %2, i32 0, i32 3\n-  %65 = load void (i1*, %task*, i1*, %tydesc**, i8*)** %64\n-  call fastcc void %65(i1* null, %task* %0, i1* null, %tydesc** %63, i8* %61)\n-  %66 = add i32 %56, %35\n-  %67 = add i32 %57, %35\n-  br label %55\n-\n-; <label>:68                                      ; preds = %55\n-  call void @llvm.memmove.p0i8.p0i8.i32(i8* %30, i8* %32, i32 %28, i32 0, i1 false)\n-  %69 = getelementptr %0* %9, i32 0, i32 2\n-  %70 = load i32* %69\n-  %71 = getelementptr %0* %14, i32 0, i32 2\n-  store i32 %70, i32* %71\n-  %72 = getelementptr %0* %14, i32 0, i32 2\n-  %73 = load i32* %72\n-  %74 = sub i32 %73, 1\n-  %75 = select i1 %5, i32 %74, i32 %73\n-  %76 = getelementptr %0* %14, i32 0, i32 4\n-  %77 = bitcast [0 x i32]* %76 to i8*\n-  %78 = getelementptr i8* %77, i32 %75\n-  store i8* %78, i8** %7\n-  br label %41\n-\n-; <label>:79                                      ; preds = %83, %41\n-  %80 = phi i32 [ %52, %41 ], [ %90, %83 ]\n-  %81 = phi i32 [ %53, %41 ], [ %91, %83 ]\n-  %82 = icmp ult i32 %81, %54\n-  br i1 %82, label %83, label %92\n-\n-; <label>:83                                      ; preds = %79\n-  %84 = inttoptr i32 %80 to i8*\n-  %85 = inttoptr i32 %81 to i8*\n-  %86 = getelementptr %tydesc* %2, i32 0, i32 0\n-  %87 = load %tydesc*** %86\n-  %88 = getelementptr %tydesc* %2, i32 0, i32 3\n-  %89 = load void (i1*, %task*, i1*, %tydesc**, i8*)** %88\n-  call fastcc void %89(i1* null, %task* %0, i1* null, %tydesc** %87, i8* %85)\n-  %90 = add i32 %80, %49\n-  %91 = add i32 %81, %49\n-  br label %79\n-\n-; <label>:92                                      ; preds = %79\n-  call void @llvm.memmove.p0i8.p0i8.i32(i8* %44, i8* %46, i32 %43, i32 0, i1 false)\n-  %93 = getelementptr %0* %14, i32 0, i32 2\n-  %94 = load i32* %93\n-  %95 = sub i32 %94, 1\n-  %96 = select i1 %5, i32 %95, i32 %94\n-  %97 = add i32 %96, %43\n-  %98 = getelementptr %0* %14, i32 0, i32 2\n-  store i32 %97, i32* %98\n-  store %0* %14, %0** %3\n-  ret void\n-}\n-\n-declare %0* @upcall_vec_grow(%task*, %0*, i32, i32*, %tydesc*)"}]}