{"sha": "96d6efdf32f346c45f58897b2f7fff38a476cfbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2ZDZlZmRmMzJmMzQ2YzQ1ZjU4ODk3YjJmN2ZmZjM4YTQ3NmNmYmU=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-24T01:04:07Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-08T11:37:25Z"}, "message": "Emit errors without halting interpretation", "tree": {"sha": "9161ad612993acb063cf511be1daa33ce292c3bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9161ad612993acb063cf511be1daa33ce292c3bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96d6efdf32f346c45f58897b2f7fff38a476cfbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96d6efdf32f346c45f58897b2f7fff38a476cfbe", "html_url": "https://github.com/rust-lang/rust/commit/96d6efdf32f346c45f58897b2f7fff38a476cfbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96d6efdf32f346c45f58897b2f7fff38a476cfbe/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4411903cca01933cc98ac903b3864768b6136024", "url": "https://api.github.com/repos/rust-lang/rust/commits/4411903cca01933cc98ac903b3864768b6136024", "html_url": "https://github.com/rust-lang/rust/commit/4411903cca01933cc98ac903b3864768b6136024"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "504863b13427c97d9a1831b65f91d982c140857b", "filename": "src/diagnostics.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/96d6efdf32f346c45f58897b2f7fff38a476cfbe/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96d6efdf32f346c45f58897b2f7fff38a476cfbe/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=96d6efdf32f346c45f58897b2f7fff38a476cfbe", "patch": "@@ -70,10 +70,14 @@ pub fn register_err(e: InterpErrorInfo<'static>) {\n     ECX.with(|ecx| ecx.borrow_mut().push(e));\n }\n \n-pub fn process_errors(mut f: impl FnMut(InterpErrorInfo<'static>)) {\n-    ECX.with(|ecx| {\n-        for e in ecx.borrow_mut().drain(..) {\n-            f(e);\n-        }\n-    });\n+impl<'mir, 'tcx> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n+pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx> {\n+    fn process_errors(&self) {\n+        let this = self.eval_context_ref();\n+        ECX.with(|ecx| {\n+            for e in ecx.borrow_mut().drain(..) {\n+                report_err(this, e);\n+            }\n+        });\n+    }\n }"}, {"sha": "ae92a777d88e411c8d1820eb3ab76dbdfacd2992", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/96d6efdf32f346c45f58897b2f7fff38a476cfbe/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96d6efdf32f346c45f58897b2f7fff38a476cfbe/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=96d6efdf32f346c45f58897b2f7fff38a476cfbe", "patch": "@@ -42,7 +42,9 @@ pub use crate::shims::time::EvalContextExt as TimeEvalContextExt;\n pub use crate::shims::tls::{EvalContextExt as TlsEvalContextExt, TlsData};\n pub use crate::shims::EvalContextExt as ShimsEvalContextExt;\n \n-pub use crate::diagnostics::{process_errors, register_err, report_err};\n+pub use crate::diagnostics::{\n+    register_err, report_err, EvalContextExt as DiagnosticsEvalContextExt,\n+};\n pub use crate::eval::{create_ecx, eval_main, MiriConfig, TerminationInfo};\n pub use crate::helpers::EvalContextExt as HelpersEvalContextExt;\n pub use crate::machine::{"}, {"sha": "3d446c6b468e3ee484bfbba4ec48e97e44f1bcb0", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/96d6efdf32f346c45f58897b2f7fff38a476cfbe/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96d6efdf32f346c45f58897b2f7fff38a476cfbe/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=96d6efdf32f346c45f58897b2f7fff38a476cfbe", "patch": "@@ -10,11 +10,9 @@ use std::rc::Rc;\n use rustc_hir::Mutability;\n use rustc::mir::RetagKind;\n use rustc::ty::{self, layout::Size};\n+use rustc_mir::interpret::InterpError;\n \n-use crate::{\n-    AllocId, HelpersEvalContextExt, ImmTy, Immediate, InterpResult, MPlaceTy, MemoryKind,\n-    MiriMemoryKind, PlaceTy, Pointer, RangeMap, TerminationInfo,\n-};\n+use crate::*;\n \n pub type PtrId = NonZeroU64;\n pub type CallId = NonZeroU64;\n@@ -269,7 +267,12 @@ impl<'tcx> Stack {\n     fn check_protector(item: &Item, tag: Option<Tag>, global: &GlobalState) -> InterpResult<'tcx> {\n         if let Tag::Tagged(id) = item.tag {\n             if Some(id) == global.tracked_pointer_tag {\n-                throw_machine_stop!(TerminationInfo::PoppedTrackedPointerTag(item.clone()));\n+                register_err(\n+                    InterpError::MachineStop(Box::new(TerminationInfo::PoppedTrackedPointerTag(\n+                        item.clone(),\n+                    )))\n+                    .into(),\n+                );\n             }\n         }\n         if let Some(call) = item.protector {\n@@ -630,6 +633,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             this.write_immediate(val, place)?;\n         }\n \n+        this.process_errors();\n+\n         Ok(())\n     }\n }"}]}