{"sha": "c84c4a8d71914b5bc0cb3546158bc053aacb7a96", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NGM0YThkNzE5MTRiNWJjMGNiMzU0NjE1OGJjMDUzYWFjYjdhOTY=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-12T19:14:08Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-12T23:52:26Z"}, "message": "Handle str/~ in patterns.", "tree": {"sha": "b56a7c4ead45edfe023cd485e5d90ddbdd71eced", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b56a7c4ead45edfe023cd485e5d90ddbdd71eced"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c84c4a8d71914b5bc0cb3546158bc053aacb7a96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c84c4a8d71914b5bc0cb3546158bc053aacb7a96", "html_url": "https://github.com/rust-lang/rust/commit/c84c4a8d71914b5bc0cb3546158bc053aacb7a96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c84c4a8d71914b5bc0cb3546158bc053aacb7a96/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ea9c8df0f7c9ee72913883128b37d0a80d2f4f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ea9c8df0f7c9ee72913883128b37d0a80d2f4f6", "html_url": "https://github.com/rust-lang/rust/commit/2ea9c8df0f7c9ee72913883128b37d0a80d2f4f6"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "5ac7834c348a081c6ac1f68fe933553013356dea", "filename": "src/rustc/middle/check_const.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c84c4a8d71914b5bc0cb3546158bc053aacb7a96/src%2Frustc%2Fmiddle%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84c4a8d71914b5bc0cb3546158bc053aacb7a96/src%2Frustc%2Fmiddle%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fcheck_const.rs?ref=c84c4a8d71914b5bc0cb3546158bc053aacb7a96", "patch": "@@ -37,7 +37,12 @@ fn check_item(sess: session, ast_map: ast_map::map, def_map: resolve::def_map,\n \n fn check_pat(p: @pat, &&_is_const: bool, v: visit::vt<bool>) {\n     fn is_str(e: @expr) -> bool {\n-        alt e.node { expr_lit(@{node: lit_str(_), _}) { true } _ { false } }\n+        alt e.node {\n+          expr_lit(@{node: lit_str(_), _}) |\n+          expr_vstore(@{node: expr_lit(@{node: lit_str(_), _}), _},\n+                      vstore_uniq) { true }\n+          _ { false }\n+        }\n     }\n     alt p.node {\n       // Let through plain string literals here"}, {"sha": "cc36455da068303f1c98287b5a2d510d706b0f22", "filename": "src/rustc/middle/const_eval.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c84c4a8d71914b5bc0cb3546158bc053aacb7a96/src%2Frustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84c4a8d71914b5bc0cb3546158bc053aacb7a96/src%2Frustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fconst_eval.rs?ref=c84c4a8d71914b5bc0cb3546158bc053aacb7a96", "patch": "@@ -103,6 +103,8 @@ fn eval_const_expr(tcx: middle::ty::ctxt, e: @expr) -> const_val {\n         }\n       }\n       expr_lit(lit) { lit_to_const(lit) }\n+      // If we have a vstore, just keep going; it has to be a string\n+      expr_vstore(e, _) { eval_const_expr(tcx, e) }\n     }\n }\n "}, {"sha": "05d2b42aa66f531f675ccd2c0417949ada3b9a7c", "filename": "src/rustc/middle/trans/alt.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c84c4a8d71914b5bc0cb3546158bc053aacb7a96/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84c4a8d71914b5bc0cb3546158bc053aacb7a96/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Falt.rs?ref=c84c4a8d71914b5bc0cb3546158bc053aacb7a96", "patch": "@@ -47,7 +47,10 @@ fn trans_opt(bcx: block, o: opt) -> opt_result {\n     alt o {\n       lit(l) {\n         alt l.node {\n-          ast::expr_lit(@{node: ast::lit_str(s), _}) {\n+          ast::expr_lit(@{node: ast::lit_str(s), _}) |\n+          ast::expr_vstore(@{node: ast::expr_lit(\n+              @{node: ast::lit_str(s), _}), _},\n+                           ast::vstore_uniq) {\n             let strty = ty::mk_str(bcx.tcx());\n             let cell = empty_dest_cell();\n             bcx = tvec::trans_estr(bcx, s, ast::vstore_uniq, by_val(cell));"}, {"sha": "eba5d55155611489f97ba54fbbae1ca019eedaf2", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c84c4a8d71914b5bc0cb3546158bc053aacb7a96/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c84c4a8d71914b5bc0cb3546158bc053aacb7a96/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=c84c4a8d71914b5bc0cb3546158bc053aacb7a96", "patch": "@@ -4613,7 +4613,9 @@ fn trans_enum_variant(ccx: @crate_ctxt, enum_id: ast::node_id,\n fn trans_const_expr(cx: @crate_ctxt, e: @ast::expr) -> ValueRef {\n     let _icx = cx.insn_ctxt(\"trans_const_expr\");\n     alt e.node {\n-      ast::expr_lit(lit) { ret trans_crate_lit(cx, e, *lit); }\n+      ast::expr_lit(lit) { trans_crate_lit(cx, e, *lit) }\n+      // If we have a vstore, just keep going; it has to be a string\n+      ast::expr_vstore(e, _) { trans_const_expr(cx, e) }\n       ast::expr_binary(b, e1, e2) {\n         let te1 = trans_const_expr(cx, e1);\n         let te2 = trans_const_expr(cx, e2);"}]}