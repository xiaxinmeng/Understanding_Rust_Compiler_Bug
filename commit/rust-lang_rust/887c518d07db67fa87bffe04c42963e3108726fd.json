{"sha": "887c518d07db67fa87bffe04c42963e3108726fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4N2M1MThkMDdkYjY3ZmE4N2JmZmUwNGM0Mjk2M2UzMTA4NzI2ZmQ=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-18T07:07:03Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-18T07:07:03Z"}, "message": "Merge pull request #57 from Manishearth/mut_mut\n\nNew lint: mut_mut", "tree": {"sha": "3acc5f91b88c51b8902b5c327309e4d0c6961038", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3acc5f91b88c51b8902b5c327309e4d0c6961038"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/887c518d07db67fa87bffe04c42963e3108726fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/887c518d07db67fa87bffe04c42963e3108726fd", "html_url": "https://github.com/rust-lang/rust/commit/887c518d07db67fa87bffe04c42963e3108726fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/887c518d07db67fa87bffe04c42963e3108726fd/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd62ef3450c500748486d61edbce4414889969aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd62ef3450c500748486d61edbce4414889969aa", "html_url": "https://github.com/rust-lang/rust/commit/cd62ef3450c500748486d61edbce4414889969aa"}, {"sha": "96bfade4f13af23f95c7381a3b08168f9e852f99", "url": "https://api.github.com/repos/rust-lang/rust/commits/96bfade4f13af23f95c7381a3b08168f9e852f99", "html_url": "https://github.com/rust-lang/rust/commit/96bfade4f13af23f95c7381a3b08168f9e852f99"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "ddc28a95f03e5d08c2c64655d49759bbf74d55d0", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/887c518d07db67fa87bffe04c42963e3108726fd/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/887c518d07db67fa87bffe04c42963e3108726fd/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=887c518d07db67fa87bffe04c42963e3108726fd", "patch": "@@ -22,6 +22,7 @@ Lints included in this crate:\n  - `precedence`: Warns on expressions where precedence may trip up the unwary reader of the source and suggests adding parenthesis, e.g. `x << 2 + y` will be parsed as `x << (2 + y)`\n  - `redundant_closure`: Warns on usage of eta-reducible closures like `|a| foo(a)` (which can be written as just `foo`)\n  - `identity_op`: Warns on identity operations like `x + 0` or `y / 1` (which can be reduced to `x` and `y`, respectively)\n+ - `mut_mut`: Warns on `&mut &mut` which is either a copy'n'paste error, or shows a fundamental misunderstanding of references\n \n To use, add the following lines to your Cargo.toml:\n "}, {"sha": "cd918bff459493464e2e0e07a21b9789a3c5cf03", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/887c518d07db67fa87bffe04c42963e3108726fd/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/887c518d07db67fa87bffe04c42963e3108726fd/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=887c518d07db67fa87bffe04c42963e3108726fd", "patch": "@@ -23,6 +23,7 @@ pub mod needless_bool;\n pub mod approx_const;\n pub mod eta_reduction;\n pub mod identity_op;\n+pub mod mut_mut;\n \n #[plugin_registrar]\n pub fn plugin_registrar(reg: &mut Registry) {\n@@ -40,6 +41,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_lint_pass(box misc::Precedence as LintPassObject);\n     reg.register_lint_pass(box eta_reduction::EtaPass as LintPassObject);\n     reg.register_lint_pass(box identity_op::IdentityOp as LintPassObject);\n+    reg.register_lint_pass(box mut_mut::MutMut as LintPassObject);\n     \n     reg.register_lint_group(\"clippy\", vec![types::BOX_VEC, types::LINKEDLIST,\n                                            misc::SINGLE_MATCH, misc::STR_TO_STRING,\n@@ -53,5 +55,6 @@ pub fn plugin_registrar(reg: &mut Registry) {\n                                            misc::PRECEDENCE,\n                                            eta_reduction::REDUNDANT_CLOSURE,\n                                            identity_op::IDENTITY_OP,\n+                                           mut_mut::MUT_MUT,\n                                            ]);\n }"}, {"sha": "0a58e293915d8328e1f35da4684b1dda5bc72be7", "filename": "src/mut_mut.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/887c518d07db67fa87bffe04c42963e3108726fd/src%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/887c518d07db67fa87bffe04c42963e3108726fd/src%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmut_mut.rs?ref=887c518d07db67fa87bffe04c42963e3108726fd", "patch": "@@ -0,0 +1,51 @@\n+use syntax::ptr::P;\n+use syntax::ast;\n+use syntax::ast::*;\n+use syntax::ast_util::{is_comparison_binop, binop_to_string};\n+use syntax::visit::{FnKind};\n+use rustc::lint::{Context, LintPass, LintArray, Lint, Level};\n+use rustc::middle::ty::{self, expr_ty, ty_str, ty_ptr, ty_rptr, ty_float};\n+use syntax::codemap::{Span, Spanned};\n+\n+declare_lint!(pub MUT_MUT, Warn,\n+              \"Warn on usage of double-mut refs, e.g. '&mut &mut ...'\");\n+\n+#[derive(Copy,Clone)]\n+pub struct MutMut;\n+\n+impl LintPass for MutMut {\n+\tfn get_lints(&self) -> LintArray {\n+        lint_array!(MUT_MUT)\n+\t}\n+\t\n+\tfn check_expr(&mut self, cx: &Context, expr: &Expr) {\n+\t\t\n+\t\tfn unwrap_addr(expr : &Expr) -> Option<&Expr> {\n+\t\t\tmatch expr.node {\n+\t\t\t\tExprAddrOf(MutMutable, ref e) => Option::Some(e),\n+\t\t\t\t_ => Option::None\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\tif unwrap_addr(expr).and_then(unwrap_addr).is_some() {\n+\t\t\tcx.span_lint(MUT_MUT, expr.span, \n+\t\t\t\t\"We're not sure what this means, so if you know, please tell us.\")\n+\t\t}\n+\t}\n+\t\n+\tfn check_ty(&mut self, cx: &Context, ty: &Ty) {\n+\t\t\n+\t\tfn unwrap_mut(ty : &Ty) -> Option<&Ty> {\n+\t\t\tmatch ty.node {\n+\t\t\t\tTyPtr(MutTy{ ty: ref pty, mutbl: MutMutable }) => Option::Some(pty),\n+\t\t\t\tTyRptr(_, MutTy{ ty: ref pty, mutbl: MutMutable }) => Option::Some(pty),\n+\t\t\t\t_ => Option::None\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\tif unwrap_mut(ty).and_then(unwrap_mut).is_some() {\n+\t\t\tcx.span_lint(MUT_MUT, ty.span, \n+\t\t\t\t\"We're not sure what this means, so if you know, please tell us.\")\n+\t\t}\n+\t}\n+}"}, {"sha": "7d1dad44a90fbf62ea6a8f9c7fc89ff9a33a1324", "filename": "tests/compile-fail/mut_mut.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/887c518d07db67fa87bffe04c42963e3108726fd/tests%2Fcompile-fail%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/887c518d07db67fa87bffe04c42963e3108726fd/tests%2Fcompile-fail%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmut_mut.rs?ref=887c518d07db67fa87bffe04c42963e3108726fd", "patch": "@@ -0,0 +1,20 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+\n+#[deny(mut_mut)]\n+fn fun(x : &mut &mut u32) -> bool { //~ERROR\n+\t**x > 0\n+}\n+\n+#[deny(mut_mut)]\n+fn main() {\n+\tlet mut x = &mut &mut 1u32; //~ERROR\n+\tif fun(x) {\n+\t\tlet y : &mut &mut &mut u32 = &mut &mut &mut 2; \n+\t\t\t //~^ ERROR\n+                  //~^^ ERROR\n+                                  //~^^^ ERROR\n+\t\t\t\t\t\t\t\t\t   //~^^^^ ERROR\n+\t\t***y + **x;\n+\t}\n+}"}]}