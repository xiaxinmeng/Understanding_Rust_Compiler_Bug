{"sha": "ce3b6f505ed8c0a285461f4f9b729b62e7703354", "node_id": "C_kwDOAAsO6NoAKGNlM2I2ZjUwNWVkOGMwYTI4NTQ2MWY0ZjliNzI5YjYyZTc3MDMzNTQ", "commit": {"author": {"name": "Paolo Barbolini", "email": "paolo.barbolini@m4ss.net", "date": "2022-06-11T22:55:09Z"}, "committer": {"name": "Paolo Barbolini", "email": "paolo.barbolini@m4ss.net", "date": "2022-06-17T22:03:54Z"}, "message": "Expose iter::ByRefSized as unstable feature and use it", "tree": {"sha": "1a880f21f2ae5932393c5994bef6dd7138ac9b65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a880f21f2ae5932393c5994bef6dd7138ac9b65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce3b6f505ed8c0a285461f4f9b729b62e7703354", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce3b6f505ed8c0a285461f4f9b729b62e7703354", "html_url": "https://github.com/rust-lang/rust/commit/ce3b6f505ed8c0a285461f4f9b729b62e7703354", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce3b6f505ed8c0a285461f4f9b729b62e7703354/comments", "author": {"login": "paolobarbolini", "id": 6215781, "node_id": "MDQ6VXNlcjYyMTU3ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6215781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paolobarbolini", "html_url": "https://github.com/paolobarbolini", "followers_url": "https://api.github.com/users/paolobarbolini/followers", "following_url": "https://api.github.com/users/paolobarbolini/following{/other_user}", "gists_url": "https://api.github.com/users/paolobarbolini/gists{/gist_id}", "starred_url": "https://api.github.com/users/paolobarbolini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paolobarbolini/subscriptions", "organizations_url": "https://api.github.com/users/paolobarbolini/orgs", "repos_url": "https://api.github.com/users/paolobarbolini/repos", "events_url": "https://api.github.com/users/paolobarbolini/events{/privacy}", "received_events_url": "https://api.github.com/users/paolobarbolini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paolobarbolini", "id": 6215781, "node_id": "MDQ6VXNlcjYyMTU3ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6215781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paolobarbolini", "html_url": "https://github.com/paolobarbolini", "followers_url": "https://api.github.com/users/paolobarbolini/followers", "following_url": "https://api.github.com/users/paolobarbolini/following{/other_user}", "gists_url": "https://api.github.com/users/paolobarbolini/gists{/gist_id}", "starred_url": "https://api.github.com/users/paolobarbolini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paolobarbolini/subscriptions", "organizations_url": "https://api.github.com/users/paolobarbolini/orgs", "repos_url": "https://api.github.com/users/paolobarbolini/repos", "events_url": "https://api.github.com/users/paolobarbolini/events{/privacy}", "received_events_url": "https://api.github.com/users/paolobarbolini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc3fae4dc1891de19368622d7b77ba3006b8f4ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc3fae4dc1891de19368622d7b77ba3006b8f4ea", "html_url": "https://github.com/rust-lang/rust/commit/bc3fae4dc1891de19368622d7b77ba3006b8f4ea"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "97ff8b76524035e5356fc2e75545a99b927d20db", "filename": "library/alloc/src/collections/vec_deque/spec_extend.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce3b6f505ed8c0a285461f4f9b729b62e7703354/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fspec_extend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3b6f505ed8c0a285461f4f9b729b62e7703354/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fspec_extend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fspec_extend.rs?ref=ce3b6f505ed8c0a285461f4f9b729b62e7703354", "patch": "@@ -1,6 +1,6 @@\n use crate::alloc::Allocator;\n use crate::vec;\n-use core::iter::TrustedLen;\n+use core::iter::{ByRefSized, TrustedLen};\n use core::slice;\n \n use super::VecDeque;"}, {"sha": "c08caa7b93ed2c445d5f5a3ed2006846525d6020", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ce3b6f505ed8c0a285461f4f9b729b62e7703354/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3b6f505ed8c0a285461f4f9b729b62e7703354/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=ce3b6f505ed8c0a285461f4f9b729b62e7703354", "patch": "@@ -143,6 +143,7 @@\n #![feature(unchecked_math)]\n #![feature(unicode_internals)]\n #![feature(unsize)]\n+#![feature(std_internals)]\n //\n // Language features:\n #![feature(allocator_internals)]"}, {"sha": "cc1e8e8a27fa6bd4f2f8db7a23d56c4fb91df107", "filename": "library/core/src/iter/adapters/by_ref_sized.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ce3b6f505ed8c0a285461f4f9b729b62e7703354/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fby_ref_sized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3b6f505ed8c0a285461f4f9b729b62e7703354/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fby_ref_sized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fby_ref_sized.rs?ref=ce3b6f505ed8c0a285461f4f9b729b62e7703354", "patch": "@@ -4,8 +4,11 @@ use crate::ops::Try;\n ///\n /// Ideally this will no longer be required, eventually, but as can be seen in\n /// the benchmarks (as of Feb 2022 at least) `by_ref` can have performance cost.\n-pub(crate) struct ByRefSized<'a, I>(pub &'a mut I);\n+#[unstable(feature = \"std_internals\", issue = \"none\")]\n+#[derive(Debug)]\n+pub struct ByRefSized<'a, I>(pub &'a mut I);\n \n+#[unstable(feature = \"std_internals\", issue = \"none\")]\n impl<I: Iterator> Iterator for ByRefSized<'_, I> {\n     type Item = I::Item;\n \n@@ -47,6 +50,7 @@ impl<I: Iterator> Iterator for ByRefSized<'_, I> {\n     }\n }\n \n+#[unstable(feature = \"std_internals\", issue = \"none\")]\n impl<I: DoubleEndedIterator> DoubleEndedIterator for ByRefSized<'_, I> {\n     #[inline]\n     fn next_back(&mut self) -> Option<Self::Item> {"}, {"sha": "916a26e242466ee5675b2e8591781c3a23ee327e", "filename": "library/core/src/iter/adapters/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ce3b6f505ed8c0a285461f4f9b729b62e7703354/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3b6f505ed8c0a285461f4f9b729b62e7703354/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs?ref=ce3b6f505ed8c0a285461f4f9b729b62e7703354", "patch": "@@ -32,7 +32,8 @@ pub use self::{\n     scan::Scan, skip::Skip, skip_while::SkipWhile, take::Take, take_while::TakeWhile, zip::Zip,\n };\n \n-pub(crate) use self::by_ref_sized::ByRefSized;\n+#[unstable(feature = \"std_internals\", issue = \"none\")]\n+pub use self::by_ref_sized::ByRefSized;\n \n #[stable(feature = \"iter_cloned\", since = \"1.1.0\")]\n pub use self::cloned::Cloned;"}, {"sha": "d5c6aed5b6c8ab48ee5368a2da0acefa79e3e035", "filename": "library/core/src/iter/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce3b6f505ed8c0a285461f4f9b729b62e7703354/library%2Fcore%2Fsrc%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3b6f505ed8c0a285461f4f9b729b62e7703354/library%2Fcore%2Fsrc%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fmod.rs?ref=ce3b6f505ed8c0a285461f4f9b729b62e7703354", "patch": "@@ -398,6 +398,8 @@ pub use self::traits::{\n \n #[stable(feature = \"iter_zip\", since = \"1.59.0\")]\n pub use self::adapters::zip;\n+#[unstable(feature = \"std_internals\", issue = \"none\")]\n+pub use self::adapters::ByRefSized;\n #[stable(feature = \"iter_cloned\", since = \"1.1.0\")]\n pub use self::adapters::Cloned;\n #[stable(feature = \"iter_copied\", since = \"1.36.0\")]\n@@ -422,7 +424,7 @@ pub use self::adapters::{\n #[unstable(feature = \"iter_intersperse\", reason = \"recently added\", issue = \"79524\")]\n pub use self::adapters::{Intersperse, IntersperseWith};\n \n-pub(crate) use self::adapters::{try_process, ByRefSized};\n+pub(crate) use self::adapters::try_process;\n \n mod adapters;\n mod range;"}]}