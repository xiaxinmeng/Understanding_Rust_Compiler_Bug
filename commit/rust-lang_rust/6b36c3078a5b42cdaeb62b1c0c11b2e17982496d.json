{"sha": "6b36c3078a5b42cdaeb62b1c0c11b2e17982496d", "node_id": "C_kwDOAAsO6NoAKDZiMzZjMzA3OGE1YjQyY2RhZWI2MmIxYzBjMTFiMmUxNzk4MjQ5NmQ", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-02-20T06:12:56Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-02-20T06:12:56Z"}, "message": "Remove old FIXMEs referring to #19596", "tree": {"sha": "39a7f87011a35979bb73a7dddf441298b4945502", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39a7f87011a35979bb73a7dddf441298b4945502"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b36c3078a5b42cdaeb62b1c0c11b2e17982496d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b36c3078a5b42cdaeb62b1c0c11b2e17982496d", "html_url": "https://github.com/rust-lang/rust/commit/6b36c3078a5b42cdaeb62b1c0c11b2e17982496d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b36c3078a5b42cdaeb62b1c0c11b2e17982496d/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96834f0231277e8feb8dcf185b2af082ad2e39f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/96834f0231277e8feb8dcf185b2af082ad2e39f6", "html_url": "https://github.com/rust-lang/rust/commit/96834f0231277e8feb8dcf185b2af082ad2e39f6"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "3e7ebbb8e2038f81134d165fba3bd3059841e697", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b36c3078a5b42cdaeb62b1c0c11b2e17982496d/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b36c3078a5b42cdaeb62b1c0c11b2e17982496d/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=6b36c3078a5b42cdaeb62b1c0c11b2e17982496d", "patch": "@@ -990,7 +990,6 @@ pub struct Pat<'hir> {\n }\n \n impl<'hir> Pat<'hir> {\n-    // FIXME(#19596) this is a workaround, but there should be a better way\n     fn walk_short_(&self, it: &mut impl FnMut(&Pat<'hir>) -> bool) -> bool {\n         if !it(self) {\n             return false;\n@@ -1018,7 +1017,6 @@ impl<'hir> Pat<'hir> {\n         self.walk_short_(&mut it)\n     }\n \n-    // FIXME(#19596) this is a workaround, but there should be a better way\n     fn walk_(&self, it: &mut impl FnMut(&Pat<'hir>) -> bool) {\n         if !it(self) {\n             return;"}, {"sha": "8fe99e9043e13c2431e1f6a94ac1440cac1d324f", "filename": "compiler/rustc_hir_typeck/src/mem_categorization.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6b36c3078a5b42cdaeb62b1c0c11b2e17982496d/compiler%2Frustc_hir_typeck%2Fsrc%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b36c3078a5b42cdaeb62b1c0c11b2e17982496d/compiler%2Frustc_hir_typeck%2Fsrc%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmem_categorization.rs?ref=6b36c3078a5b42cdaeb62b1c0c11b2e17982496d", "patch": "@@ -602,7 +602,6 @@ impl<'a, 'tcx> MemCategorizationContext<'a, 'tcx> {\n         }\n     }\n \n-    // FIXME(#19596) This is a workaround, but there should be a better way to do this\n     fn cat_pattern_<F>(\n         &self,\n         mut place_with_id: PlaceWithHirId<'tcx>,"}]}