{"sha": "42f3ac5ea610b351e404dd30199d13ffc91617d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyZjNhYzVlYTYxMGIzNTFlNDA0ZGQzMDE5OWQxM2ZmYzkxNjE3ZDU=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-02-04T06:17:58Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-02-04T06:17:58Z"}, "message": "Expand defaulted unit test", "tree": {"sha": "b640eda9ffceead228da70c5ff011d0f734409e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b640eda9ffceead228da70c5ff011d0f734409e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42f3ac5ea610b351e404dd30199d13ffc91617d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42f3ac5ea610b351e404dd30199d13ffc91617d5", "html_url": "https://github.com/rust-lang/rust/commit/42f3ac5ea610b351e404dd30199d13ffc91617d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42f3ac5ea610b351e404dd30199d13ffc91617d5/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7444d07154652c4d7a3e91e645eaa604a8bc4c84", "url": "https://api.github.com/repos/rust-lang/rust/commits/7444d07154652c4d7a3e91e645eaa604a8bc4c84", "html_url": "https://github.com/rust-lang/rust/commit/7444d07154652c4d7a3e91e645eaa604a8bc4c84"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "5213a189714dd52fd865acae8421b0c15f9536ac", "filename": "src/test/compile-fail/defaulted-unit-warning.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/42f3ac5ea610b351e404dd30199d13ffc91617d5/src%2Ftest%2Fcompile-fail%2Fdefaulted-unit-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42f3ac5ea610b351e404dd30199d13ffc91617d5/src%2Ftest%2Fcompile-fail%2Fdefaulted-unit-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdefaulted-unit-warning.rs?ref=42f3ac5ea610b351e404dd30199d13ffc91617d5", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n+#![allow(unreachable_code)]\n #![deny(resolve_trait_on_defaulted_unit)]\n \n trait Deserialize: Sized {\n@@ -30,6 +32,19 @@ fn doit() -> Result<(), String> {\n     Ok(())\n }\n \n+trait ImplementedForUnitButNotNever {}\n+\n+impl ImplementedForUnitButNotNever for () {}\n+\n+fn foo<T: ImplementedForUnitButNotNever>(_t: T) {}\n+\n+fn smeg() {\n+    let _x = return;\n+    foo(_x);\n+    //~^ ERROR code relies on type\n+    //~| WARNING previously accepted\n+}\n+\n fn main() {\n     let _ = doit();\n }"}]}