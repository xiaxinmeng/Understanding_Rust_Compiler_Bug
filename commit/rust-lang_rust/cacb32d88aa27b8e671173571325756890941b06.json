{"sha": "cacb32d88aa27b8e671173571325756890941b06", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhY2IzMmQ4OGFhMjdiOGU2NzExNzM1NzEzMjU3NTY4OTA5NDFiMDY=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-09-24T03:42:01Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-09-24T03:44:43Z"}, "message": "reject impl keyword in impl header", "tree": {"sha": "ddb83902ba9bb99b14dc9f410898f31873ae76ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddb83902ba9bb99b14dc9f410898f31873ae76ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cacb32d88aa27b8e671173571325756890941b06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cacb32d88aa27b8e671173571325756890941b06", "html_url": "https://github.com/rust-lang/rust/commit/cacb32d88aa27b8e671173571325756890941b06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cacb32d88aa27b8e671173571325756890941b06/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4463165854071e16645a3244e016b45752e68b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4463165854071e16645a3244e016b45752e68b7", "html_url": "https://github.com/rust-lang/rust/commit/e4463165854071e16645a3244e016b45752e68b7"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "25b6cb66b3d29e550ed43948cf9960b6c6dabebf", "filename": "crates/ra_syntax/src/grammar/items/traits.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cacb32d88aa27b8e671173571325756890941b06/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cacb32d88aa27b8e671173571325756890941b06/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Ftraits.rs?ref=cacb32d88aa27b8e671173571325756890941b06", "patch": "@@ -54,8 +54,16 @@ pub(super) fn impl_item(p: &mut Parser) {\n \n     // test impl_item_neg\n     // impl !Send for X {}\n-    p.eat(EXCL);\n-    types::type_(p);\n+    if p.at(IMPL_KW) {\n+        p.error(\"expected type\");\n+    } else {\n+        p.eat(EXCL);\n+        if p.at(IMPL_KW) {\n+            p.error(\"expected type\");\n+        } else {\n+            types::type_(p);\n+        }\n+    }\n     if p.eat(FOR_KW) {\n         types::type_(p);\n     }"}]}