{"sha": "3bcd6fa5712520061fcc2504e1f0aae62c09e514", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiY2Q2ZmE1NzEyNTIwMDYxZmNjMjUwNGUxZjBhYWU2MmMwOWU1MTQ=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-05-15T14:13:12Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-05-28T07:43:24Z"}, "message": "use Eq instead of Lt in loop", "tree": {"sha": "a106c166d8dc8c4209aa9db529a23ab12d109099", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a106c166d8dc8c4209aa9db529a23ab12d109099"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bcd6fa5712520061fcc2504e1f0aae62c09e514", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bcd6fa5712520061fcc2504e1f0aae62c09e514", "html_url": "https://github.com/rust-lang/rust/commit/3bcd6fa5712520061fcc2504e1f0aae62c09e514", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bcd6fa5712520061fcc2504e1f0aae62c09e514/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68b7475dc04d4429d4bfb4837a902090915b6584", "url": "https://api.github.com/repos/rust-lang/rust/commits/68b7475dc04d4429d4bfb4837a902090915b6584", "html_url": "https://github.com/rust-lang/rust/commit/68b7475dc04d4429d4bfb4837a902090915b6584"}], "stats": {"total": 51, "additions": 47, "deletions": 4}, "files": [{"sha": "c1d8d087eac5a25976ae5bfb533560c59a8419ae", "filename": "src/librustc_mir/util/elaborate_drops.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3bcd6fa5712520061fcc2504e1f0aae62c09e514/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bcd6fa5712520061fcc2504e1f0aae62c09e514/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Felaborate_drops.rs?ref=3bcd6fa5712520061fcc2504e1f0aae62c09e514", "patch": "@@ -556,8 +556,8 @@ impl<'l, 'b, 'tcx, D> DropCtxt<'l, 'b, 'tcx, D>\n     /// create a loop that drops an array:\n     ///\n     /// loop-block:\n-    ///    can_go = index < len\n-    ///    if can_go then drop-block else succ\n+    ///    can_go = index == len\n+    ///    if can_go then succ else drop-block\n     /// drop-block:\n     ///    ptr = &mut LV[index]\n     ///    index = index + 1\n@@ -604,13 +604,13 @@ impl<'l, 'b, 'tcx, D> DropCtxt<'l, 'b, 'tcx, D>\n         let loop_block = self.elaborator.patch().new_block(BasicBlockData {\n             statements: vec![\n                 Statement { source_info: self.source_info, kind: StatementKind::Assign(\n-                    can_go.clone(), Rvalue::BinaryOp(BinOp::Lt, use_(index), use_(length))\n+                    can_go.clone(), Rvalue::BinaryOp(BinOp::Eq, use_(index), use_(length))\n                 )},\n             ],\n             is_cleanup: unwind.is_cleanup(),\n             terminator: Some(Terminator {\n                 source_info: self.source_info,\n-                kind: TerminatorKind::if_(tcx, use_(can_go), drop_block, succ)\n+                kind: TerminatorKind::if_(tcx, use_(can_go), succ, drop_block)\n             })\n         });\n "}, {"sha": "e145cde039dfdcb33ccbc1cd001b149b5f308671", "filename": "src/test/run-pass/issue-41888.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/3bcd6fa5712520061fcc2504e1f0aae62c09e514/src%2Ftest%2Frun-pass%2Fissue-41888.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bcd6fa5712520061fcc2504e1f0aae62c09e514/src%2Ftest%2Frun-pass%2Fissue-41888.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-41888.rs?ref=3bcd6fa5712520061fcc2504e1f0aae62c09e514", "patch": "@@ -0,0 +1,43 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() { let _ = g(Some(E::F(K))); }\n+\n+type R = Result<(), ()>;\n+struct K;\n+\n+enum E {\n+    F(K), // must not be built-in type\n+    #[allow(dead_code)]\n+    G(Box<E>, Box<E>),\n+}\n+\n+fn translate(x: R) -> R { x }\n+\n+fn g(mut status: Option<E>) -> R {\n+    loop {\n+        match status {\n+            Some(infix_or_postfix) => match infix_or_postfix {\n+                E::F(_op) => { // <- must be captured by value\n+                    match Ok(()) {\n+                        Err(err) => return Err(err),\n+                        Ok(_) => {},\n+                    };\n+                }\n+                _ => (),\n+            },\n+            _ => match translate(Err(())) {\n+                Err(err) => return Err(err),\n+                Ok(_) => {},\n+            }\n+        }\n+        status = None;\n+    }\n+}"}]}