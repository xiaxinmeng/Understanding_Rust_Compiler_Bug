{"sha": "4e3e8d1ab265e9d0024cd33f2f3b8c2a8b31265d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlM2U4ZDFhYjI2NWU5ZDAwMjRjZDMzZjJmM2I4YzJhOGIzMTI2NWQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-27T10:07:48Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-27T10:07:48Z"}, "message": "cleanup", "tree": {"sha": "93d3793a4de59a4a9c3cee39ace5ee45c0944ef5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93d3793a4de59a4a9c3cee39ace5ee45c0944ef5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e3e8d1ab265e9d0024cd33f2f3b8c2a8b31265d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e3e8d1ab265e9d0024cd33f2f3b8c2a8b31265d", "html_url": "https://github.com/rust-lang/rust/commit/4e3e8d1ab265e9d0024cd33f2f3b8c2a8b31265d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e3e8d1ab265e9d0024cd33f2f3b8c2a8b31265d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18a6dd4635be18ebe73eb25ffa34a33f0ec8203f", "url": "https://api.github.com/repos/rust-lang/rust/commits/18a6dd4635be18ebe73eb25ffa34a33f0ec8203f", "html_url": "https://github.com/rust-lang/rust/commit/18a6dd4635be18ebe73eb25ffa34a33f0ec8203f"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "5c01654cc01d91c1906698dd2b15a46630b82b82", "filename": "crates/ra_ide/src/completion/test_utils.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4e3e8d1ab265e9d0024cd33f2f3b8c2a8b31265d/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e3e8d1ab265e9d0024cd33f2f3b8c2a8b31265d/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Ftest_utils.rs?ref=4e3e8d1ab265e9d0024cd33f2f3b8c2a8b31265d", "patch": "@@ -1,21 +1,18 @@\n //! Runs completion for testing purposes.\n \n+use hir::Semantics;\n+use ra_syntax::{AstNode, NodeOrToken, SyntaxElement};\n+\n use crate::{\n     completion::{completion_item::CompletionKind, CompletionConfig},\n     mock_analysis::analysis_and_position,\n     CompletionItem,\n };\n-use hir::Semantics;\n-use ra_syntax::{AstNode, NodeOrToken, SyntaxElement};\n \n pub(crate) fn do_completion(code: &str, kind: CompletionKind) -> Vec<CompletionItem> {\n     do_completion_with_options(code, kind, &CompletionConfig::default())\n }\n \n-pub(crate) fn completion_list(code: &str, kind: CompletionKind) -> String {\n-    completion_list_with_options(code, kind, &CompletionConfig::default())\n-}\n-\n pub(crate) fn do_completion_with_options(\n     code: &str,\n     kind: CompletionKind,\n@@ -29,13 +26,8 @@ pub(crate) fn do_completion_with_options(\n     kind_completions\n }\n \n-fn get_all_completion_items(code: &str, options: &CompletionConfig) -> Vec<CompletionItem> {\n-    let (analysis, position) = if code.contains(\"//-\") {\n-        analysis_and_position(code)\n-    } else {\n-        analysis_and_position(code)\n-    };\n-    analysis.completions(options, position).unwrap().unwrap().into()\n+pub(crate) fn completion_list(code: &str, kind: CompletionKind) -> String {\n+    completion_list_with_options(code, kind, &CompletionConfig::default())\n }\n \n pub(crate) fn completion_list_with_options(\n@@ -65,3 +57,8 @@ pub(crate) fn check_pattern_is_applicable(code: &str, check: fn(SyntaxElement) -\n         })\n         .unwrap();\n }\n+\n+fn get_all_completion_items(code: &str, options: &CompletionConfig) -> Vec<CompletionItem> {\n+    let (analysis, position) = analysis_and_position(code);\n+    analysis.completions(options, position).unwrap().unwrap().into()\n+}"}]}