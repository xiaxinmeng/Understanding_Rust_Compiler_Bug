{"sha": "554c7659e8106ee3390ba9bbcc8b44950bda309d", "node_id": "C_kwDOAAsO6NoAKDU1NGM3NjU5ZTgxMDZlZTMzOTBiYTliYmNjOGI0NDk1MGJkYTMwOWQ", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-15T18:18:24Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-15T18:18:24Z"}, "message": "Fix broken link", "tree": {"sha": "a0cb00365324f50fca73f8260408ec033fb6da0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0cb00365324f50fca73f8260408ec033fb6da0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/554c7659e8106ee3390ba9bbcc8b44950bda309d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/554c7659e8106ee3390ba9bbcc8b44950bda309d", "html_url": "https://github.com/rust-lang/rust/commit/554c7659e8106ee3390ba9bbcc8b44950bda309d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/554c7659e8106ee3390ba9bbcc8b44950bda309d/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28d2353f3b1150313921916ae37a8525e9c2838d", "url": "https://api.github.com/repos/rust-lang/rust/commits/28d2353f3b1150313921916ae37a8525e9c2838d", "html_url": "https://github.com/rust-lang/rust/commit/28d2353f3b1150313921916ae37a8525e9c2838d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8597940b34e86f5238a9f0945b8d7309d96b6a5f", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/554c7659e8106ee3390ba9bbcc8b44950bda309d/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554c7659e8106ee3390ba9bbcc8b44950bda309d/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=554c7659e8106ee3390ba9bbcc8b44950bda309d", "patch": "@@ -384,7 +384,7 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n     /// In particular, this will return an error whenever there aren't three\n     /// full path segments left in the link.\n     ///\n-    /// [enum struct variant]: hir::VariantData::Struct\n+    /// [enum struct variant]: rustc_hir::VariantData::Struct\n     fn variant_field<'path>(\n         &self,\n         path_str: &'path str,"}]}