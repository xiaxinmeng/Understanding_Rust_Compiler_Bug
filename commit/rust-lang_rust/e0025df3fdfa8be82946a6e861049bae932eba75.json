{"sha": "e0025df3fdfa8be82946a6e861049bae932eba75", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMDI1ZGYzZmRmYThiZTgyOTQ2YTZlODYxMDQ5YmFlOTMyZWJhNzU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-23T17:31:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-23T17:31:56Z"}, "message": "Rollup merge of #56097 - ogoffart:union-abi, r=eddyb\n\nFix invalid bitcast taking bool out of a union represented as a scalar\n\nAs reported in https://github.com/rust-lang/rust/pull/54668#issuecomment-440186476", "tree": {"sha": "e67262c792f3aa23e2a183f52098982e2bdc42c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e67262c792f3aa23e2a183f52098982e2bdc42c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0025df3fdfa8be82946a6e861049bae932eba75", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb+DmMCRBK7hj4Ov3rIwAAdHIIAKHOiSag2oejNpz9ZCJIl4kv\nc1zkgD3p2248gKrN6XQkUDBtwdS79muuSk5W72qU81j5hr3R378fbrdop6EoKSKN\nZTfWuxFe0p+AlVrlu8r6hN+OIltwaBkXzHzbokjYQ5RLrJoS/zGg1nYl1lftFX9V\nqnnza6UWNecrWlTSqpTLGXCHyKuBaOAVNAOQ8RI8JnzGgvEXVGDH1Wk1NELFCrQy\nyuBwnoa4+NcVQZc8j43nEuyq6Kv4nEQi6G/s/O/oArePWsXsVPX5hNYd4BrdCOHG\nIpzuRtGIdPG2Hyc/9iyhrJr7+F+qXTwAku6W5Kgju6cUhOEUV94pUDPrr4sqrUI=\n=vGh/\n-----END PGP SIGNATURE-----\n", "payload": "tree e67262c792f3aa23e2a183f52098982e2bdc42c5\nparent fb33fa49160f666d1cad0af6c275e15cf523e047\nparent 4c21f66c1dffefa0dbeec3e409aa77630cb9a448\nauthor kennytm <kennytm@gmail.com> 1542994316 +0800\ncommitter GitHub <noreply@github.com> 1542994316 +0800\n\nRollup merge of #56097 - ogoffart:union-abi, r=eddyb\n\nFix invalid bitcast taking bool out of a union represented as a scalar\n\nAs reported in https://github.com/rust-lang/rust/pull/54668#issuecomment-440186476\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0025df3fdfa8be82946a6e861049bae932eba75", "html_url": "https://github.com/rust-lang/rust/commit/e0025df3fdfa8be82946a6e861049bae932eba75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0025df3fdfa8be82946a6e861049bae932eba75/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb33fa49160f666d1cad0af6c275e15cf523e047", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb33fa49160f666d1cad0af6c275e15cf523e047", "html_url": "https://github.com/rust-lang/rust/commit/fb33fa49160f666d1cad0af6c275e15cf523e047"}, {"sha": "4c21f66c1dffefa0dbeec3e409aa77630cb9a448", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c21f66c1dffefa0dbeec3e409aa77630cb9a448", "html_url": "https://github.com/rust-lang/rust/commit/4c21f66c1dffefa0dbeec3e409aa77630cb9a448"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "92d0219caf06bf2e9fd036782380c4d5e7ee695b", "filename": "src/librustc_codegen_ssa/mir/operand.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e0025df3fdfa8be82946a6e861049bae932eba75/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0025df3fdfa8be82946a6e861049bae932eba75/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Foperand.rs?ref=e0025df3fdfa8be82946a6e861049bae932eba75", "patch": "@@ -244,13 +244,24 @@ impl<'a, 'tcx: 'a, V: CodegenObject> OperandRef<'tcx, V> {\n         };\n \n         // HACK(eddyb) have to bitcast pointers until LLVM removes pointee types.\n+        // Bools in union fields needs to be truncated.\n+        let to_immediate_or_cast = |bx: &mut Bx, val, ty| {\n+            if ty == bx.cx().type_i1() {\n+                bx.trunc(val, ty)\n+            } else {\n+                bx.bitcast(val, ty)\n+            }\n+        };\n+\n         match val {\n             OperandValue::Immediate(ref mut llval) => {\n-                *llval = bx.bitcast(*llval, bx.cx().immediate_backend_type(field));\n+                *llval = to_immediate_or_cast(bx, *llval, bx.cx().immediate_backend_type(field));\n             }\n             OperandValue::Pair(ref mut a, ref mut b) => {\n-                *a = bx.bitcast(*a, bx.cx().scalar_pair_element_backend_type(field, 0, true));\n-                *b = bx.bitcast(*b, bx.cx().scalar_pair_element_backend_type(field, 1, true));\n+                *a = to_immediate_or_cast(bx, *a, bx.cx()\n+                    .scalar_pair_element_backend_type(field, 0, true));\n+                *b = to_immediate_or_cast(bx, *b, bx.cx()\n+                    .scalar_pair_element_backend_type(field, 1, true));\n             }\n             OperandValue::Ref(..) => bug!()\n         }"}, {"sha": "5a6df52502eb5cc4423f8905b3b2153484d0d753", "filename": "src/test/codegen/union-abi.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e0025df3fdfa8be82946a6e861049bae932eba75/src%2Ftest%2Fcodegen%2Funion-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0025df3fdfa8be82946a6e861049bae932eba75/src%2Ftest%2Fcodegen%2Funion-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Funion-abi.rs?ref=e0025df3fdfa8be82946a6e861049bae932eba75", "patch": "@@ -78,3 +78,9 @@ pub union CUnionU128{a:u128}\n #[no_mangle]\n pub fn test_CUnionU128(_: CUnionU128) { loop {} }\n \n+pub union UnionBool { b:bool }\n+// CHECK: define zeroext i1 @test_UnionBool(i8 %b)\n+#[no_mangle]\n+pub fn test_UnionBool(b: UnionBool) -> bool { unsafe { b.b }  }\n+// CHECK: %0 = trunc i8 %b to i1\n+"}]}