{"sha": "3bb88775de5a6f8f5c5743dd11af6c820122ccc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiYjg4Nzc1ZGU1YTZmOGY1YzU3NDNkZDExYWY2YzgyMDEyMmNjYzc=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-11-07T07:16:43Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-11-07T07:16:43Z"}, "message": "Merge #3407\n\n3407: Fix `possible_missing_comma` false positives r=oli-obk a=mikerite\n\n`possible_missing_comma` should only trigger when the binary operator has\r\nunary equivalent. Otherwise, it's not possible to insert a comma without\r\nbreaking compilation. The operators identified were `+`, `&`, `*` and `-`.\r\n\r\nThis fixes the specific examples given in issues #3244 and #3396\r\nbut doesn't address the conflict this lint has with the style of starting\r\na line with a binary operator.\n\nCo-authored-by: Michael Wright <mikerite@lavabit.com>", "tree": {"sha": "92d47bd200941ad73fd2e0a93a31e668fa239c12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92d47bd200941ad73fd2e0a93a31e668fa239c12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bb88775de5a6f8f5c5743dd11af6c820122ccc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bb88775de5a6f8f5c5743dd11af6c820122ccc7", "html_url": "https://github.com/rust-lang/rust/commit/3bb88775de5a6f8f5c5743dd11af6c820122ccc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bb88775de5a6f8f5c5743dd11af6c820122ccc7/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "4c3408c61d1042bf0585de440041ee7edfc5b350", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c3408c61d1042bf0585de440041ee7edfc5b350", "html_url": "https://github.com/rust-lang/rust/commit/4c3408c61d1042bf0585de440041ee7edfc5b350"}, {"sha": "c20e17f8ee44e05067402960dc12794c377fbe03", "url": "https://api.github.com/repos/rust-lang/rust/commits/c20e17f8ee44e05067402960dc12794c377fbe03", "html_url": "https://github.com/rust-lang/rust/commit/c20e17f8ee44e05067402960dc12794c377fbe03"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "d06183cb52f14b0885443b7321008b7cefc1b2c0", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3bb88775de5a6f8f5c5743dd11af6c820122ccc7/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bb88775de5a6f8f5c5743dd11af6c820122ccc7/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=3bb88775de5a6f8f5c5743dd11af6c820122ccc7", "patch": "@@ -173,12 +173,19 @@ fn check_else_if(cx: &EarlyContext<'_>, expr: &ast::Expr) {\n     }\n }\n \n+fn has_unary_equivalent(bin_op: ast::BinOpKind) -> bool {\n+    // &, *, -\n+    bin_op == ast::BinOpKind::And\n+    || bin_op == ast::BinOpKind::Mul\n+    || bin_op == ast::BinOpKind::Sub\n+}\n+\n /// Implementation of the `POSSIBLE_MISSING_COMMA` lint for array\n fn check_array(cx: &EarlyContext<'_>, expr: &ast::Expr) {\n     if let ast::ExprKind::Array(ref array) = expr.node {\n         for element in array {\n             if let ast::ExprKind::Binary(ref op, ref lhs, _) = element.node {\n-                if !differing_macro_contexts(lhs.span, op.span) {\n+                if has_unary_equivalent(op.node) && !differing_macro_contexts(lhs.span, op.span) {\n                     let space_span = lhs.span.between(op.span);\n                     if let Some(space_snippet) = snippet_opt(cx, space_span) {\n                         let lint_span = lhs.span.with_lo(lhs.span.hi());"}, {"sha": "88f6e497d12e741a3d6609702cbdf3c401f5a8fc", "filename": "tests/ui/formatting.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3bb88775de5a6f8f5c5743dd11af6c820122ccc7/tests%2Fui%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bb88775de5a6f8f5c5743dd11af6c820122ccc7/tests%2Fui%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformatting.rs?ref=3bb88775de5a6f8f5c5743dd11af6c820122ccc7", "patch": "@@ -112,4 +112,16 @@ fn main() {\n         1 + 2, 3 +\n         4, 5 + 6,\n     ];\n+\n+    // don't lint for bin op without unary equiv\n+    // issue 3244\n+    vec![\n+        1\n+        / 2,\n+    ];\n+    // issue 3396\n+    vec![\n+        true\n+        | false,\n+    ];\n }"}]}