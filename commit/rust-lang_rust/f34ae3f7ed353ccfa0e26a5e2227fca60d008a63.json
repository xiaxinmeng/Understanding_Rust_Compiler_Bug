{"sha": "f34ae3f7ed353ccfa0e26a5e2227fca60d008a63", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNGFlM2Y3ZWQzNTNjY2ZhMGUyNmE1ZTIyMjdmY2E2MGQwMDhhNjM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-03-14T01:52:58Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-04-04T23:39:36Z"}, "message": "Add nightly check on rustdoc --extend-css option", "tree": {"sha": "2fbf45fd5abe28a70177b1776492ca6e80b3052f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fbf45fd5abe28a70177b1776492ca6e80b3052f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f34ae3f7ed353ccfa0e26a5e2227fca60d008a63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f34ae3f7ed353ccfa0e26a5e2227fca60d008a63", "html_url": "https://github.com/rust-lang/rust/commit/f34ae3f7ed353ccfa0e26a5e2227fca60d008a63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f34ae3f7ed353ccfa0e26a5e2227fca60d008a63/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab835a12da26c2146b2dde1f3fe99df687730725", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab835a12da26c2146b2dde1f3fe99df687730725", "html_url": "https://github.com/rust-lang/rust/commit/ab835a12da26c2146b2dde1f3fe99df687730725"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "d5b2f2bb83ee0403331fbc6c3c75cb5691ca813c", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f34ae3f7ed353ccfa0e26a5e2227fca60d008a63/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f34ae3f7ed353ccfa0e26a5e2227fca60d008a63/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=f34ae3f7ed353ccfa0e26a5e2227fca60d008a63", "patch": "@@ -65,8 +65,10 @@ use std::sync::mpsc::channel;\n use externalfiles::ExternalHtml;\n use serialize::Decodable;\n use serialize::json::{self, Json};\n+use rustc::session::early_error;\n use rustc::session::search_paths::SearchPaths;\n-use rustc::session::config::ErrorOutputType;\n+use rustc::session::config::{get_unstable_features_setting, ErrorOutputType};\n+use syntax::feature_gate::UnstableFeatures;\n \n // reexported from `clean` so it can be easily updated with the mod itself\n pub use clean::SCHEMA_VERSION;\n@@ -189,6 +191,7 @@ pub fn opts() -> Vec<getopts::OptGroup> {\n         optopt(\"e\", \"extend-css\",\n                \"to redefine some css rules with a given file to generate doc with your \\\n                 own theme\", \"PATH\"),\n+        optmulti(\"Z\", \"\", \"internal and debugging options (only on nightly build)\", \"FLAG\"),\n     )\n }\n \n@@ -198,6 +201,20 @@ pub fn usage(argv0: &str) {\n                             &opts()));\n }\n \n+fn check_unstable_flag_enabled(nightly_build: bool, has_z_unstable_options: bool,\n+                               flag_name: &str) {\n+    // check if unstable for --extend-css option\n+    let e = if !nightly_build {\n+        format!(\"the option `{}` is only accepted on the nightly compiler\", flag_name)\n+    } else if !has_z_unstable_options {\n+        format!(\"the `-Z unstable-options` flag must also be passed to enable the flag `{}`\",\n+                flag_name)\n+    } else {\n+        return\n+    };\n+    early_error(ErrorOutputType::default(), &e)\n+}\n+\n pub fn main_args(args: &[String]) -> isize {\n     let matches = match getopts::getopts(&args[1..], &opts()) {\n         Ok(m) => m,\n@@ -260,7 +277,24 @@ pub fn main_args(args: &[String]) -> isize {\n     let css_file_extension = matches.opt_str(\"e\").map(|s| PathBuf::from(&s));\n     let cfgs = matches.opt_strs(\"cfg\");\n \n+    // we now check if unstable options are allowed and if we're in a nightly build\n+    let mut has_z_unstable_options = false;\n+    for flag in matches.opt_strs(\"Z\").iter() {\n+        if *flag != \"unstable-options\" {\n+            println!(\"Unknown flag for `Z` option: {}\", flag);\n+            return 1;\n+        } else {\n+            has_z_unstable_options = true;\n+        }\n+    }\n+    let nightly_build = get_unstable_features_setting();\n+    let nightly_build = match nightly_build {\n+                            UnstableFeatures::Allow | UnstableFeatures::Cheat => true,\n+                            _ => false,\n+                        };\n+\n     if let Some(ref p) = css_file_extension {\n+        check_unstable_flag_enabled(nightly_build, has_z_unstable_options, \"extend-css\");\n         if !p.is_file() {\n             println!(\"{}\", \"--extend-css option must take a css file as input\");\n             return 1;"}]}