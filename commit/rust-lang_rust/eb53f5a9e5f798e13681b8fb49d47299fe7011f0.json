{"sha": "eb53f5a9e5f798e13681b8fb49d47299fe7011f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNTNmNWE5ZTVmNzk4ZTEzNjgxYjhmYjQ5ZDQ3Mjk5ZmU3MDExZjA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-09T11:14:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-09T11:14:30Z"}, "message": "Merge #4812\n\n4812: Use correct indent when replacing with match r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "aab012cc1a346f99d688b694e18e85031ad1cd8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aab012cc1a346f99d688b694e18e85031ad1cd8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb53f5a9e5f798e13681b8fb49d47299fe7011f0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe328WCRBK7hj4Ov3rIwAAdHIIAA6fOGXbwxQ35WCkctsTbRyd\n6hhaFxHrh7VZChPM8gyyN4lxSL6/PS+iqE5lfHKJhfs1bqwhnFDgMRi08OZlddLi\nOP4YJwMyXq9t5g3o3ckaFt7dWVyy6OrpUxIJLd/U3r6ZMr3OteL9/1OxDtuQycL0\nMTnccPAkvma6Nu6bvnztmAMbkVDftq9GKzhInsz17eHM3uxrwgc4OuMc27vaCE17\nFFwgEJcj6UAWMzF3NSL2YWWBZux+HyDNqgULwZ4EZwR/qbEf2fRC5nW3oXgsRa/9\n4THknmrD824EE90Q3aIZnzRor3mEF1XxChrAe/FqWSGWoArL+GtqCTWD+f+SE0s=\n=KPeU\n-----END PGP SIGNATURE-----\n", "payload": "tree aab012cc1a346f99d688b694e18e85031ad1cd8a\nparent 382d10ea60de8a70766c1fb67d3feee10774b597\nparent 8cad7d1a2b2546986aa8f42207875b1c8eed948a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1591701270 +0000\ncommitter GitHub <noreply@github.com> 1591701270 +0000\n\nMerge #4812\n\n4812: Use correct indent when replacing with match r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb53f5a9e5f798e13681b8fb49d47299fe7011f0", "html_url": "https://github.com/rust-lang/rust/commit/eb53f5a9e5f798e13681b8fb49d47299fe7011f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb53f5a9e5f798e13681b8fb49d47299fe7011f0/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "382d10ea60de8a70766c1fb67d3feee10774b597", "url": "https://api.github.com/repos/rust-lang/rust/commits/382d10ea60de8a70766c1fb67d3feee10774b597", "html_url": "https://github.com/rust-lang/rust/commit/382d10ea60de8a70766c1fb67d3feee10774b597"}, {"sha": "8cad7d1a2b2546986aa8f42207875b1c8eed948a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cad7d1a2b2546986aa8f42207875b1c8eed948a", "html_url": "https://github.com/rust-lang/rust/commit/8cad7d1a2b2546986aa8f42207875b1c8eed948a"}], "stats": {"total": 52, "additions": 45, "deletions": 7}, "files": [{"sha": "dfade743215c33e85ffbf7a4f6b238ab9c3d5cd0", "filename": "crates/ra_assists/src/handlers/early_return.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb53f5a9e5f798e13681b8fb49d47299fe7011f0/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb53f5a9e5f798e13681b8fb49d47299fe7011f0/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs?ref=eb53f5a9e5f798e13681b8fb49d47299fe7011f0", "patch": "@@ -154,7 +154,7 @@ pub(crate) fn convert_to_guarded_return(acc: &mut Assists, ctx: &AssistContext)\n             parent_block: &ast::BlockExpr,\n             if_expr: &ast::IfExpr,\n         ) -> SyntaxNode {\n-            let then_block_items = then_block.dedent(IndentLevel::from(1));\n+            let then_block_items = then_block.dedent(IndentLevel(1));\n             let end_of_then = then_block_items.syntax().last_child_or_token().unwrap();\n             let end_of_then =\n                 if end_of_then.prev_sibling_or_token().map(|n| n.kind()) == Some(WHITESPACE) {"}, {"sha": "dfcd787de5854a77b534cd8242bfd7f867437ed4", "filename": "crates/ra_assists/src/handlers/replace_if_let_with_match.rs", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/eb53f5a9e5f798e13681b8fb49d47299fe7011f0/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb53f5a9e5f798e13681b8fb49d47299fe7011f0/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs?ref=eb53f5a9e5f798e13681b8fb49d47299fe7011f0", "patch": "@@ -51,6 +51,7 @@ pub(crate) fn replace_if_let_with_match(acc: &mut Assists, ctx: &AssistContext)\n     acc.add(AssistId(\"replace_if_let_with_match\"), \"Replace with match\", target, move |edit| {\n         let match_expr = {\n             let then_arm = {\n+                let then_block = then_block.reset_indent().indent(IndentLevel(1));\n                 let then_expr = unwrap_trivial_block(then_block);\n                 make::match_arm(vec![pat.clone()], then_expr)\n             };\n@@ -64,8 +65,8 @@ pub(crate) fn replace_if_let_with_match(acc: &mut Assists, ctx: &AssistContext)\n                 let else_expr = unwrap_trivial_block(else_block);\n                 make::match_arm(vec![pattern], else_expr)\n             };\n-            make::expr_match(expr, make::match_arm_list(vec![then_arm, else_arm]))\n-                .indent(IndentLevel::from_node(if_expr.syntax()))\n+            let match_expr = make::expr_match(expr, make::match_arm_list(vec![then_arm, else_arm]));\n+            match_expr.indent(IndentLevel::from_node(if_expr.syntax()))\n         };\n \n         edit.replace_ast::<ast::Expr>(if_expr.into(), match_expr);\n@@ -213,4 +214,36 @@ fn foo(x: Result<i32, ()>) {\n            \"#,\n         );\n     }\n+\n+    #[test]\n+    fn nested_indent() {\n+        check_assist(\n+            replace_if_let_with_match,\n+            r#\"\n+fn main() {\n+    if true {\n+        <|>if let Ok(rel_path) = path.strip_prefix(root_path) {\n+            let rel_path = RelativePathBuf::from_path(rel_path).ok()?;\n+            Some((*id, rel_path))\n+        } else {\n+            None\n+        }\n+    }\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    if true {\n+        match path.strip_prefix(root_path) {\n+            Ok(rel_path) => {\n+                let rel_path = RelativePathBuf::from_path(rel_path).ok()?;\n+                Some((*id, rel_path))\n+            }\n+            _ => None,\n+        }\n+    }\n+}\n+\"#,\n+        )\n+    }\n }"}, {"sha": "2ef173a03970d737e0fc7c2bf21abdeaf008ee0a", "filename": "crates/ra_syntax/src/ast/edit.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/eb53f5a9e5f798e13681b8fb49d47299fe7011f0/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb53f5a9e5f798e13681b8fb49d47299fe7011f0/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs?ref=eb53f5a9e5f798e13681b8fb49d47299fe7011f0", "patch": "@@ -579,12 +579,17 @@ pub trait AstNodeEdit: AstNode + Clone + Sized {\n         rewriter.rewrite_ast(self)\n     }\n     #[must_use]\n-    fn indent(&self, indent: IndentLevel) -> Self {\n-        Self::cast(indent.increase_indent(self.syntax().clone())).unwrap()\n+    fn indent(&self, level: IndentLevel) -> Self {\n+        Self::cast(level.increase_indent(self.syntax().clone())).unwrap()\n     }\n     #[must_use]\n-    fn dedent(&self, indent: IndentLevel) -> Self {\n-        Self::cast(indent.decrease_indent(self.syntax().clone())).unwrap()\n+    fn dedent(&self, level: IndentLevel) -> Self {\n+        Self::cast(level.decrease_indent(self.syntax().clone())).unwrap()\n+    }\n+    #[must_use]\n+    fn reset_indent(&self) -> Self {\n+        let level = IndentLevel::from_node(self.syntax());\n+        self.dedent(level)\n     }\n }\n "}]}