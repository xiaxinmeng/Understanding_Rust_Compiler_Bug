{"sha": "dc0b9f44e2731dec413d69997ad093962deb665e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMGI5ZjQ0ZTI3MzFkZWM0MTNkNjk5OTdhZDA5Mzk2MmRlYjY2NWU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-06T23:31:21Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-07T01:14:40Z"}, "message": "rt: Change the rust_port refcounting scheme to avoid races\n\nHopefully...", "tree": {"sha": "d8d676fe83f2eaf241bb9ca291d388b10fb5c019", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8d676fe83f2eaf241bb9ca291d388b10fb5c019"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc0b9f44e2731dec413d69997ad093962deb665e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc0b9f44e2731dec413d69997ad093962deb665e", "html_url": "https://github.com/rust-lang/rust/commit/dc0b9f44e2731dec413d69997ad093962deb665e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc0b9f44e2731dec413d69997ad093962deb665e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9571850daded0f46ae3b9b8e0834b6be2e5219b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9571850daded0f46ae3b9b8e0834b6be2e5219b", "html_url": "https://github.com/rust-lang/rust/commit/e9571850daded0f46ae3b9b8e0834b6be2e5219b"}], "stats": {"total": 47, "additions": 26, "deletions": 21}, "files": [{"sha": "9f2bb2d465284cd89537b7a86b2c1c95a1af2d4b", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dc0b9f44e2731dec413d69997ad093962deb665e/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/dc0b9f44e2731dec413d69997ad093962deb665e/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=dc0b9f44e2731dec413d69997ad093962deb665e", "patch": "@@ -497,7 +497,6 @@ extern \"C\" CDECL void\n del_port(rust_port *port) {\n     rust_task *task = rust_task_thread::get_task();\n     LOG(task, comm, \"del_port(0x%\" PRIxPTR \")\", (uintptr_t) port);\n-    A(task->thread, port->get_ref_count() == 0, \"Expected port ref_count == 0\");\n     delete port;\n }\n "}, {"sha": "e37829f2df2dcf2bc6882164834aff8af91b7092", "filename": "src/rt/rust_port.cpp", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/dc0b9f44e2731dec413d69997ad093962deb665e/src%2Frt%2Frust_port.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/dc0b9f44e2731dec413d69997ad093962deb665e/src%2Frt%2Frust_port.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_port.cpp?ref=dc0b9f44e2731dec413d69997ad093962deb665e", "patch": "@@ -20,12 +20,19 @@ rust_port::~rust_port() {\n     task->deref();\n }\n \n-void rust_port::delete_this() {\n-    scoped_lock with(detach_lock);\n+void rust_port::ref() {\n+    scoped_lock with(ref_lock);\n+    ref_count++;\n+}\n \n-    if (task->blocked_on(&detach_cond)) {\n-        // The port owner is waiting for the port to be detached\n-        task->wakeup(&detach_cond);\n+void rust_port::deref() {\n+    scoped_lock with(ref_lock);\n+    ref_count--;\n+    if (!ref_count) {\n+        if (task->blocked_on(&detach_cond)) {\n+            // The port owner is waiting for the port to be detached\n+            task->wakeup(&detach_cond);\n+        }\n     }\n }\n \n@@ -34,23 +41,20 @@ void rust_port::begin_detach(uintptr_t *yield) {\n \n     task->release_port(id);\n \n-    deref();\n+    scoped_lock with(ref_lock);\n+    ref_count--;\n \n-    scoped_lock with(detach_lock);\n-    if (get_ref_count() != 0) {\n+    if (ref_count != 0) {\n         task->block(&detach_cond, \"waiting for port detach\");\n         *yield = true;\n     }\n }\n \n void rust_port::end_detach() {\n-    // FIXME: For some reason we can sometimes get here without the\n-    // refcount decreasing to 0. This is definitely a bug\n-    while (get_ref_count() != 0) { }\n-\n     // Just take the lock to make sure that the thread that signaled\n     // the detach_cond isn't still holding it\n-    scoped_lock with(detach_lock);\n+    scoped_lock with(ref_lock);\n+    I(task->thread, ref_count == 0);\n }\n \n void rust_port::send(void *sptr) {"}, {"sha": "454b1dcce45b6b2ce06c0d5f20db91dcaa4adca2", "filename": "src/rt/rust_port.h", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/dc0b9f44e2731dec413d69997ad093962deb665e/src%2Frt%2Frust_port.h", "raw_url": "https://github.com/rust-lang/rust/raw/dc0b9f44e2731dec413d69997ad093962deb665e/src%2Frt%2Frust_port.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_port.h?ref=dc0b9f44e2731dec413d69997ad093962deb665e", "patch": "@@ -6,9 +6,17 @@\n class port_detach_cond : public rust_cond { };\n \n class rust_port : public kernel_owned<rust_port>, public rust_cond {\n+private:\n+    // Protects ref_count and detach_cond\n+    lock_and_signal ref_lock;\n+    intptr_t ref_count;\n+    port_detach_cond detach_cond;\n+\n public:\n-    RUST_ATOMIC_REFCOUNT();\n+    void ref();\n+    void deref();\n \n+public:\n     rust_port_id id;\n \n     rust_kernel *kernel;\n@@ -18,15 +26,9 @@ class rust_port : public kernel_owned<rust_port>, public rust_cond {\n \n     lock_and_signal lock;\n \n-private:\n-    // Protects blocking and signaling on detach_cond\n-    lock_and_signal detach_lock;\n-    port_detach_cond detach_cond;\n-\n public:\n     rust_port(rust_task *task, size_t unit_sz);\n     ~rust_port();\n-    void delete_this();\n \n     void log_state();\n     void send(void *sptr);"}]}