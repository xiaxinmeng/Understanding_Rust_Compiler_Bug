{"sha": "43e1b58bccf7e62bcccfd1ce0bedc9dc65df3564", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzZTFiNThiY2NmN2U2MmJjY2NmZDFjZTBiZWRjOWRjNjVkZjM1NjQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-05T09:29:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-05T09:29:46Z"}, "message": "Rollup merge of #78716 - est31:array_traits, r=Dylan-DPC\n\nArray trait impl comment/doc fixes\n\nTwo small doc/comment fixes regarding trait implementations on arrays.", "tree": {"sha": "48fd373b32783ca019b40de23052cea3e0af9c5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48fd373b32783ca019b40de23052cea3e0af9c5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43e1b58bccf7e62bcccfd1ce0bedc9dc65df3564", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfo8YMCRBK7hj4Ov3rIwAAdHIIAE/7+xH7P7/CxHUzTUmtzpFK\nZnF3sZERqlxqUlhWYT2enQ/s8UgaCT/im+40HFIzKUvc/t5diz6Y5wUFlv66Ijmd\n4C4wtv7lpxa0xtZPIAHoFoiqUT0xaWlTNips9WBLuCnMrlD06q+8nlQ9kSfy7XR6\nMIBmZvBR2ZDb0whFBLJogK19Dkv1TBnbeYZaWJBLGx6XXWPP3BV1AHZzNCWUeEI6\n22pkYbPhRl8vBYFAX4a67VyQuDlBki51/5OSjQT0TKq+/JYHjuzat8st5Eo2cahL\nbhkUUl5gBy17EURVFpgvjGPKUx+d7fW2o+zbNFc5dyi8SXwUyq3xTQcFaX+8BcI=\n=AA70\n-----END PGP SIGNATURE-----\n", "payload": "tree 48fd373b32783ca019b40de23052cea3e0af9c5d\nparent cbf74bc4ca3f9a3b17af672930c56fa25861b21e\nparent 93fa023111ddfa1997e32b117a3fff01c03c4db1\nauthor Mara Bos <m-ou.se@m-ou.se> 1604568586 +0100\ncommitter GitHub <noreply@github.com> 1604568586 +0100\n\nRollup merge of #78716 - est31:array_traits, r=Dylan-DPC\n\nArray trait impl comment/doc fixes\n\nTwo small doc/comment fixes regarding trait implementations on arrays.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43e1b58bccf7e62bcccfd1ce0bedc9dc65df3564", "html_url": "https://github.com/rust-lang/rust/commit/43e1b58bccf7e62bcccfd1ce0bedc9dc65df3564", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43e1b58bccf7e62bcccfd1ce0bedc9dc65df3564/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbf74bc4ca3f9a3b17af672930c56fa25861b21e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbf74bc4ca3f9a3b17af672930c56fa25861b21e", "html_url": "https://github.com/rust-lang/rust/commit/cbf74bc4ca3f9a3b17af672930c56fa25861b21e"}, {"sha": "93fa023111ddfa1997e32b117a3fff01c03c4db1", "url": "https://api.github.com/repos/rust-lang/rust/commits/93fa023111ddfa1997e32b117a3fff01c03c4db1", "html_url": "https://github.com/rust-lang/rust/commit/93fa023111ddfa1997e32b117a3fff01c03c4db1"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "123a191dd2cc2fb88be44db5daa5eede8fa1edd9", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/43e1b58bccf7e62bcccfd1ce0bedc9dc65df3564/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43e1b58bccf7e62bcccfd1ce0bedc9dc65df3564/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=43e1b58bccf7e62bcccfd1ce0bedc9dc65df3564", "patch": "@@ -353,8 +353,9 @@ impl<T: Ord, const N: usize> Ord for [T; N] {\n     }\n }\n \n-// The Default impls cannot be generated using the array_impls! macro because\n-// they require array literals.\n+// The Default impls cannot be done with const generics because `[T; 0]` doesn't\n+// require Default to be implemented, and having different impl blocks for\n+// different numbers isn't supported yet.\n \n macro_rules! array_impl_default {\n     {$n:expr, $t:ident $($ts:ident)*} => {"}, {"sha": "88ab671b94eb9462caff8645ed643bc267a271a4", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/43e1b58bccf7e62bcccfd1ce0bedc9dc65df3564/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43e1b58bccf7e62bcccfd1ce0bedc9dc65df3564/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=43e1b58bccf7e62bcccfd1ce0bedc9dc65df3564", "patch": "@@ -491,22 +491,19 @@ mod prim_pointer {}\n ///\n /// Arrays of *any* size implement the following traits if the element type allows it:\n ///\n+/// - [`Copy`]\n+/// - [`Clone`]\n /// - [`Debug`]\n /// - [`IntoIterator`] (implemented for `&[T; N]` and `&mut [T; N]`)\n /// - [`PartialEq`], [`PartialOrd`], [`Eq`], [`Ord`]\n /// - [`Hash`]\n /// - [`AsRef`], [`AsMut`]\n /// - [`Borrow`], [`BorrowMut`]\n ///\n-/// Arrays of sizes from 0 to 32 (inclusive) implement [`Default`] trait\n+/// Arrays of sizes from 0 to 32 (inclusive) implement the [`Default`] trait\n /// if the element type allows it. As a stopgap, trait implementations are\n /// statically generated up to size 32.\n ///\n-/// Arrays of *any* size are [`Copy`] if the element type is [`Copy`]\n-/// and [`Clone`] if the element type is [`Clone`]. This works\n-/// because [`Copy`] and [`Clone`] traits are specially known\n-/// to the compiler.\n-///\n /// Arrays coerce to [slices (`[T]`)][slice], so a slice method may be called on\n /// an array. Indeed, this provides most of the API for working with arrays.\n /// Slices have a dynamic size and do not coerce to arrays."}]}