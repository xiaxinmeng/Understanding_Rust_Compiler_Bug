{"sha": "1e9e3191ab01ad16e8a839efeea5cac2999140af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlOWUzMTkxYWIwMWFkMTZlOGE4MzllZmVlYTVjYWMyOTk5MTQwYWY=", "commit": {"author": {"name": "Paul Li\u00e9tar", "email": "lietar@google.com", "date": "2017-10-27T21:36:18Z"}, "committer": {"name": "Paul Li\u00e9tar", "email": "lietar@google.com", "date": "2017-10-27T21:36:18Z"}, "message": "Move type_has_metadata to trans_utils", "tree": {"sha": "f255b7046a970dc7319a5d628eca334899ccbe57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f255b7046a970dc7319a5d628eca334899ccbe57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e9e3191ab01ad16e8a839efeea5cac2999140af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e9e3191ab01ad16e8a839efeea5cac2999140af", "html_url": "https://github.com/rust-lang/rust/commit/1e9e3191ab01ad16e8a839efeea5cac2999140af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e9e3191ab01ad16e8a839efeea5cac2999140af/comments", "author": null, "committer": null, "parents": [{"sha": "5341d64f667956530e537f7b7cca26b9f0c39275", "url": "https://api.github.com/repos/rust-lang/rust/commits/5341d64f667956530e537f7b7cca26b9f0c39275", "html_url": "https://github.com/rust-lang/rust/commit/5341d64f667956530e537f7b7cca26b9f0c39275"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "e3856cabcf910c77b3123462928f5040d34f150d", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1e9e3191ab01ad16e8a839efeea5cac2999140af/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e9e3191ab01ad16e8a839efeea5cac2999140af/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=1e9e3191ab01ad16e8a839efeea5cac2999140af", "patch": "@@ -152,19 +152,6 @@ pub fn type_is_freeze<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, ty: Ty<'tcx>) -> bo\n     ty.is_freeze(tcx, ty::ParamEnv::empty(traits::Reveal::All), DUMMY_SP)\n }\n \n-pub fn type_has_metadata<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, ty: Ty<'tcx>) -> bool {\n-    if type_is_sized(tcx, ty) {\n-        return false;\n-    }\n-\n-    let tail = tcx.struct_tail(ty);\n-    match tail.sty {\n-        ty::TyForeign(..) => false,\n-        ty::TyStr | ty::TySlice(..) | ty::TyDynamic(..) => true,\n-        _ => bug!(\"unexpected unsized tail: {:?}\", tail.sty),\n-    }\n-}\n-\n /*\n * A note on nomenclature of linking: \"extern\", \"foreign\", and \"upcall\".\n *"}, {"sha": "9df057c77a95d36c2909921fcfbbb237ecb2ce30", "filename": "src/librustc_trans/context.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1e9e3191ab01ad16e8a839efeea5cac2999140af/src%2Flibrustc_trans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e9e3191ab01ad16e8a839efeea5cac2999140af/src%2Flibrustc_trans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcontext.rs?ref=1e9e3191ab01ad16e8a839efeea5cac2999140af", "patch": "@@ -32,6 +32,7 @@ use rustc::session::Session;\n use rustc::ty::layout::{LayoutCx, LayoutError, LayoutTyper, TyLayout};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::util::nodemap::FxHashMap;\n+use rustc_trans_utils;\n \n use std::ffi::{CStr, CString};\n use std::cell::{Cell, RefCell};\n@@ -302,7 +303,7 @@ impl<'b, 'tcx> SharedCrateContext<'b, 'tcx> {\n     }\n \n     pub fn type_has_metadata(&self, ty: Ty<'tcx>) -> bool {\n-        common::type_has_metadata(self.tcx, ty)\n+        rustc_trans_utils::common::type_has_metadata(self.tcx, ty)\n     }\n \n     pub fn tcx(&self) -> TyCtxt<'b, 'tcx, 'tcx> {"}, {"sha": "ec9c5b1119b74824748ab64efba8553a92e4877e", "filename": "src/librustc_trans_utils/common.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1e9e3191ab01ad16e8a839efeea5cac2999140af/src%2Flibrustc_trans_utils%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e9e3191ab01ad16e8a839efeea5cac2999140af/src%2Flibrustc_trans_utils%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans_utils%2Fcommon.rs?ref=1e9e3191ab01ad16e8a839efeea5cac2999140af", "patch": "@@ -25,6 +25,19 @@ pub fn type_is_sized<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, ty: Ty<'tcx>) -> boo\n     ty.is_sized(tcx, ty::ParamEnv::empty(traits::Reveal::All), DUMMY_SP)\n }\n \n+pub fn type_has_metadata<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, ty: Ty<'tcx>) -> bool {\n+    if type_is_sized(tcx, ty) {\n+        return false;\n+    }\n+\n+    let tail = tcx.struct_tail(ty);\n+    match tail.sty {\n+        ty::TyForeign(..) => false,\n+        ty::TyStr | ty::TySlice(..) | ty::TyDynamic(..) => true,\n+        _ => bug!(\"unexpected unsized tail: {:?}\", tail.sty),\n+    }\n+}\n+\n pub fn requests_inline<'a, 'tcx>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     instance: &ty::Instance<'tcx>"}, {"sha": "bcc59a4d06ac80e6c3440a43b5593d3b07006715", "filename": "src/librustc_trans_utils/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e9e3191ab01ad16e8a839efeea5cac2999140af/src%2Flibrustc_trans_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e9e3191ab01ad16e8a839efeea5cac2999140af/src%2Flibrustc_trans_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans_utils%2Flib.rs?ref=1e9e3191ab01ad16e8a839efeea5cac2999140af", "patch": "@@ -50,7 +50,7 @@ use rustc::util::nodemap::NodeSet;\n \n use syntax::attr;\n \n-mod common;\n+pub mod common;\n pub mod link;\n pub mod collector;\n pub mod trans_item;"}, {"sha": "817ceefeb7fe917782b29b27c8f4ee619d628577", "filename": "src/librustc_trans_utils/trans_item.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e9e3191ab01ad16e8a839efeea5cac2999140af/src%2Flibrustc_trans_utils%2Ftrans_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e9e3191ab01ad16e8a839efeea5cac2999140af/src%2Flibrustc_trans_utils%2Ftrans_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans_utils%2Ftrans_item.rs?ref=1e9e3191ab01ad16e8a839efeea5cac2999140af", "patch": "@@ -335,6 +335,7 @@ impl<'a, 'tcx> DefPathBasedNames<'a, 'tcx> {\n                         output);\n                 }\n             },\n+            ty::TyForeign(did) => self.push_def_path(did, output),\n             ty::TyFnDef(..) |\n             ty::TyFnPtr(_) => {\n                 let sig = t.fn_sig(self.tcx);"}]}