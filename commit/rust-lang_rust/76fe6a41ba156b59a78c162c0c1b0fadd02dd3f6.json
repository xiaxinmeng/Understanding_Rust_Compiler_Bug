{"sha": "76fe6a41ba156b59a78c162c0c1b0fadd02dd3f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ZmU2YTQxYmExNTZiNTlhNzhjMTYyYzBjMWIwZmFkZDAyZGQzZjY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-10-09T17:12:49Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-10-09T17:12:49Z"}, "message": "Refactor a nested `if` to a `match`", "tree": {"sha": "a87827ba45420b73933cc6dc89516914b4e9ab6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a87827ba45420b73933cc6dc89516914b4e9ab6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76fe6a41ba156b59a78c162c0c1b0fadd02dd3f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76fe6a41ba156b59a78c162c0c1b0fadd02dd3f6", "html_url": "https://github.com/rust-lang/rust/commit/76fe6a41ba156b59a78c162c0c1b0fadd02dd3f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76fe6a41ba156b59a78c162c0c1b0fadd02dd3f6/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76a7667e792e4f4e4849ace0f6b016e2695a693c", "url": "https://api.github.com/repos/rust-lang/rust/commits/76a7667e792e4f4e4849ace0f6b016e2695a693c", "html_url": "https://github.com/rust-lang/rust/commit/76a7667e792e4f4e4849ace0f6b016e2695a693c"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "d12194aefa6bec99d8efc892d40b407728174fe7", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/76fe6a41ba156b59a78c162c0c1b0fadd02dd3f6/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76fe6a41ba156b59a78c162c0c1b0fadd02dd3f6/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=76fe6a41ba156b59a78c162c0c1b0fadd02dd3f6", "patch": "@@ -825,17 +825,13 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n                     });\n                     (present_variants.next(), present_variants.next())\n                 };\n-                let present_first = if present_first.is_none() {\n-                    if def.is_enum() {\n-                        // Uninhabited because it has no variants, or only absent ones.\n-                        return tcx.layout_raw(param_env.and(tcx.types.never));\n-                    } else {\n-                        // if it's a struct, still compute a layout so that we can still compute the\n-                        // field offsets\n-                        Some(VariantIdx::new(0))\n-                    }\n-                } else {\n-                    present_first\n+                let present_first = match present_first {\n+                    present_first @ Some(_) => present_first,\n+                    // Uninhabited because it has no variants, or only absent ones.\n+                    None if def.is_enum() => return tcx.layout_raw(param_env.and(tcx.types.never)),\n+                    // if it's a struct, still compute a layout so that we can still compute the\n+                    // field offsets\n+                    None => Some(VariantIdx::new(0)),\n                 };\n \n                 let is_struct = !def.is_enum() ||"}]}