{"sha": "778d03236450655907a6e8dfbe3899a9e76b5ff0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3OGQwMzIzNjQ1MDY1NTkwN2E2ZThkZmJlMzg5OWE5ZTc2YjVmZjA=", "commit": {"author": {"name": "kud1ing", "email": "github@kudling.de", "date": "2014-02-23T21:23:10Z"}, "committer": {"name": "kud1ing", "email": "github@kudling.de", "date": "2014-02-23T21:23:10Z"}, "message": "Tutorial: fix typo", "tree": {"sha": "2308836a8708674cf6a90c2fa6f2c501acc42754", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2308836a8708674cf6a90c2fa6f2c501acc42754"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/778d03236450655907a6e8dfbe3899a9e76b5ff0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/778d03236450655907a6e8dfbe3899a9e76b5ff0", "html_url": "https://github.com/rust-lang/rust/commit/778d03236450655907a6e8dfbe3899a9e76b5ff0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/778d03236450655907a6e8dfbe3899a9e76b5ff0/comments", "author": null, "committer": null, "parents": [{"sha": "8786405047cadcfb5ec3a2d711ca264d74843c13", "url": "https://api.github.com/repos/rust-lang/rust/commits/8786405047cadcfb5ec3a2d711ca264d74843c13", "html_url": "https://github.com/rust-lang/rust/commit/8786405047cadcfb5ec3a2d711ca264d74843c13"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d21f97f76ab0a31885b33e0e5459eb5999b3ab7f", "filename": "src/doc/tutorial.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/778d03236450655907a6e8dfbe3899a9e76b5ff0/src%2Fdoc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/778d03236450655907a6e8dfbe3899a9e76b5ff0/src%2Fdoc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftutorial.md?ref=778d03236450655907a6e8dfbe3899a9e76b5ff0", "patch": "@@ -1026,7 +1026,7 @@ type was invalid because the size was infinite!\n \n An *owned box* (`~`) uses a dynamic memory allocation to provide the invariant\n of always being the size of a pointer, regardless of the contained type. This\n-can be leverage to create a valid `List` definition:\n+can be leveraged to create a valid `List` definition:\n \n ~~~\n enum List {"}]}