{"sha": "27513a21c4bea1774c295c398af413631807cb5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NTEzYTIxYzRiZWExNzc0YzI5NWMzOThhZjQxMzYzMTgwN2NiNWM=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-24T15:41:43Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-24T22:21:44Z"}, "message": "Tidy.", "tree": {"sha": "68123cbaabc243722ef18181331ba2ef9d865435", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68123cbaabc243722ef18181331ba2ef9d865435"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27513a21c4bea1774c295c398af413631807cb5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27513a21c4bea1774c295c398af413631807cb5c", "html_url": "https://github.com/rust-lang/rust/commit/27513a21c4bea1774c295c398af413631807cb5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27513a21c4bea1774c295c398af413631807cb5c/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5098ba6a932785152285d5729708f7d58f795b62", "url": "https://api.github.com/repos/rust-lang/rust/commits/5098ba6a932785152285d5729708f7d58f795b62", "html_url": "https://github.com/rust-lang/rust/commit/5098ba6a932785152285d5729708f7d58f795b62"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "2429cbe3f5e634385e7320381233eaffb32e0097", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/27513a21c4bea1774c295c398af413631807cb5c/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27513a21c4bea1774c295c398af413631807cb5c/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=27513a21c4bea1774c295c398af413631807cb5c", "patch": "@@ -372,7 +372,9 @@ pub fn run_compiler(\n                             &crate_name,\n                             &compiler.input(),\n                             None,\n-                            DumpHandler::new(compiler.output_dir().as_ref().map(|p| &**p), &crate_name)\n+                            DumpHandler::new(\n+                                compiler.output_dir().as_ref().map(|p| &**p), &crate_name\n+                            )\n                         )\n                     });\n "}, {"sha": "013c986288a6ee6d5bd74f0d2cda8fa33a369cd2", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/27513a21c4bea1774c295c398af413631807cb5c/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27513a21c4bea1774c295c398af413631807cb5c/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=27513a21c4bea1774c295c398af413631807cb5c", "patch": "@@ -236,7 +236,9 @@ impl<'comp> Queries<'comp> {\n             let (krate, boxed_resolver, _) = &*expansion_result.peek();\n             let crate_name = self.crate_name()?;\n             let crate_name = crate_name.peek();\n-            passes::prepare_outputs(self.session(), self.compiler, &krate, &boxed_resolver, &crate_name)\n+            passes::prepare_outputs(\n+                self.session(), self.compiler, &krate, &boxed_resolver, &crate_name\n+            )\n         })\n     }\n "}, {"sha": "02045b0dec8a6860de83e8e0c0794acf0ec32b6f", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/27513a21c4bea1774c295c398af413631807cb5c/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27513a21c4bea1774c295c398af413631807cb5c/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=27513a21c4bea1774c295c398af413631807cb5c", "patch": "@@ -359,10 +359,11 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n                 // intra-doc-links\n                 resolver.borrow_mut().access(|resolver| {\n                     for extern_name in &extern_names {\n-                        resolver.resolve_str_path_error(DUMMY_SP, extern_name, TypeNS, CRATE_NODE_ID)\n-                            .unwrap_or_else(\n-                                |()| panic!(\"Unable to resolve external crate {}\", extern_name)\n-                            );\n+                        resolver.resolve_str_path_error(\n+                            DUMMY_SP, extern_name, TypeNS, CRATE_NODE_ID\n+                        ).unwrap_or_else(\n+                            |()| panic!(\"Unable to resolve external crate {}\", extern_name)\n+                        );\n                     }\n                 });\n "}]}