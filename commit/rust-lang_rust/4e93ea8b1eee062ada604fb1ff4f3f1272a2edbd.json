{"sha": "4e93ea8b1eee062ada604fb1ff4f3f1272a2edbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlOTNlYThiMWVlZTA2MmFkYTYwNGZiMWZmNGYzZjEyNzJhMmVkYmQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-09-14T21:22:15Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-09-14T21:22:27Z"}, "message": "Remove mention of the nonexistent (and no longer implementable) memory accounting model.", "tree": {"sha": "7169dab5e0e004ddfb7cc3723a0820426c2a3ab7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7169dab5e0e004ddfb7cc3723a0820426c2a3ab7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e93ea8b1eee062ada604fb1ff4f3f1272a2edbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e93ea8b1eee062ada604fb1ff4f3f1272a2edbd", "html_url": "https://github.com/rust-lang/rust/commit/4e93ea8b1eee062ada604fb1ff4f3f1272a2edbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e93ea8b1eee062ada604fb1ff4f3f1272a2edbd/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9505d70513ebd38d1a404b1dde3c181f40f86b75", "url": "https://api.github.com/repos/rust-lang/rust/commits/9505d70513ebd38d1a404b1dde3c181f40f86b75", "html_url": "https://github.com/rust-lang/rust/commit/9505d70513ebd38d1a404b1dde3c181f40f86b75"}], "stats": {"total": 23, "additions": 0, "deletions": 23}, "files": [{"sha": "b1c546097b8b62b4ff80495cefd1cced32862e31", "filename": "doc/rust.texi", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4e93ea8b1eee062ada604fb1ff4f3f1272a2edbd/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/4e93ea8b1eee062ada604fb1ff4f3f1272a2edbd/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=4e93ea8b1eee062ada604fb1ff4f3f1272a2edbd", "patch": "@@ -1248,7 +1248,6 @@ consist of @emph{boxes}.\n * Ref.Mem.Own::                 Memory ownership model.\n * Ref.Mem.Slot::                Stack memory model.\n * Ref.Mem.Box::                 Heap memory model.\n-* Ref.Mem.Acct::                Memory accounting model.\n @end menu\n \n @node       Ref.Mem.Alloc\n@@ -1404,28 +1403,6 @@ fn main() @{\n @end example\n \n \n-@node       Ref.Mem.Acct\n-@subsection Ref.Mem.Acct\n-@c * Ref.Mem.Acct::                Memory accounting model.\n-@cindex Accounting\n-@cindex Memory budget\n-\n-Every task tracks the amount of memory allocated and not yet released. Each\n-task may have a memory budget. The @dfn{budget} of a task is the maximum\n-amount of memory that can be simultaneously allocated in the task. If a task\n-tries to allocate memory with an exceeded budget, the task will receive a\n-signal.\n-\n-Within a task, accounting is strictly enforced: all memory allocated through\n-the runtime library, both user data and runtime-support structures such as\n-channel and signal queues, are charged to a task.\n-\n-When a communication channel crosses from one task to another, any value\n-sent over the channel is guaranteed to have been @emph{detached} from the\n-task's memory graph (singly referenced, and/or deep-copied), so its memory\n-cost is transferred to the receiving task.\n-\n-\n @page\n @node    Ref.Task\n @section Ref.Task"}]}