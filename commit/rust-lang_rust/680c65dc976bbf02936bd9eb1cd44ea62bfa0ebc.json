{"sha": "680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MGM2NWRjOTc2YmJmMDI5MzZiZDllYjFjZDQ0ZWE2MmJmYTBlYmM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-05-07T21:23:14Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-05-07T21:23:14Z"}, "message": "Update tests to use the absolute position for small parent heuristic", "tree": {"sha": "4570ca2f55b295ad9126e2f70e3499ba25803263", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4570ca2f55b295ad9126e2f70e3499ba25803263"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc", "html_url": "https://github.com/rust-lang/rust/commit/680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f46f4b5f665675826bf9756c0e0896d5a5ef92d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f46f4b5f665675826bf9756c0e0896d5a5ef92d1", "html_url": "https://github.com/rust-lang/rust/commit/f46f4b5f665675826bf9756c0e0896d5a5ef92d1"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "172a7815c3915a74b62ac4af73a72fcafb61a667", "filename": "tests/target/chains.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc/tests%2Ftarget%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc/tests%2Ftarget%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains.rs?ref=680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc", "patch": "@@ -151,7 +151,8 @@ fn try_shorthand() {\n     let zzzz = expr?.another?.another?.another?.another?;\n     let aaa = x??????????????????????????????????????????????????????????????????????????;\n \n-    let y = a.very\n+    let y = a\n+        .very\n         .loooooooooooooooooooooooooooooooooooooong()\n         .chain()\n         .inside()\n@@ -206,9 +207,8 @@ fn issue2126() {\n             {\n                 {\n                     {\n-                        let x = self.span_from(\n-                            sub_span.expect(\"No span found for struct arant variant\"),\n-                        );\n+                        let x = self\n+                            .span_from(sub_span.expect(\"No span found for struct arant variant\"));\n                         self.sspanpan_from_span(\n                             sub_span.expect(\"No span found for struct variant\"),\n                         );"}, {"sha": "77f3c551f0a5278946c345065d49cf47970ff3ab", "filename": "tests/target/configs/indent_style/block_call.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_call.rs?ref=680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc", "patch": "@@ -25,7 +25,8 @@ fn main() {\n     // #1380\n     {\n         {\n-            let creds = self.client\n+            let creds = self\n+                .client\n                 .client_credentials(&self.config.auth.oauth2.id, &self.config.auth.oauth2.secret)?;\n         }\n     }"}, {"sha": "d5a6762d12b5391ec31b27f0c62d657fe9f51da4", "filename": "tests/target/expr-block.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc/tests%2Ftarget%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc/tests%2Ftarget%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr-block.rs?ref=680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc", "patch": "@@ -283,6 +283,7 @@ fn issue_1862() {\n }\n \n fn issue_1878() {\n-    let channel: &str = seq.next_element()?\n+    let channel: &str = seq\n+        .next_element()?\n         .ok_or_else(|| de::Error::invalid_length(2, &self))?;\n }"}, {"sha": "34753bc92713b7700ad52744f23e440ddee4fd70", "filename": "tests/target/expr.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc", "patch": "@@ -404,7 +404,8 @@ impl Foo {\n             let x = match () {\n                 () => {\n                     let i;\n-                    i == self.install_config\n+                    i == self\n+                        .install_config\n                         .storage\n                         .experimental_compressed_block_size as usize\n                 }"}, {"sha": "04992a0a0f6c3dbd600da918c73be68702c1458a", "filename": "tests/target/try-conversion.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc/tests%2Ftarget%2Ftry-conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc/tests%2Ftarget%2Ftry-conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftry-conversion.rs?ref=680c65dc976bbf02936bd9eb1cd44ea62bfa0ebc", "patch": "@@ -3,7 +3,8 @@\n fn main() {\n     let x = some_expr()?;\n \n-    let y = a.very\n+    let y = a\n+        .very\n         .loooooooooooooooooooooooooooooooooooooong()\n         .chain()\n         .inside()"}]}