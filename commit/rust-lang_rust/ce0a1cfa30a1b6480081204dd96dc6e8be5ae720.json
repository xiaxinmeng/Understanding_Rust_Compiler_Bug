{"sha": "ce0a1cfa30a1b6480081204dd96dc6e8be5ae720", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlMGExY2ZhMzBhMWI2NDgwMDgxMjA0ZGQ5NmRjNmU4YmU1YWU3MjA=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-10T12:08:29Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-10T14:44:12Z"}, "message": "Rollup merge of #45146 - petrochenkov:lessrec, r=estebank\n\nFix a bug in diagnostics for `x as usize < y`\n\nAlso improve diagnostics for `x as usize << y`.\n\nFixes https://github.com/rust-lang/rust/issues/44406\nr? @estebank", "tree": {"sha": "87eaf61d0fb364d7093fe0fe408ce7798c6e2bf0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87eaf61d0fb364d7093fe0fe408ce7798c6e2bf0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce0a1cfa30a1b6480081204dd96dc6e8be5ae720", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlnc3LwACgkQ/vbIBR0O\nATzgIRAAnZ3mzFSePCPsZOOG3bZWQNGJM8lEwUduXtBohT0J/HQ4ggGpcO23PTbj\nnxwSFYG37qE3wk4o7zM+um1maB6H2NUiUv1hELYG8RMtdBtPusMHieIl8rbe6uHs\nrP4yrVp5qRIN19TQYVfJJb1SiLkbj4WNv5OFdPxPS++WxTdYtMvl4hV2hoThO+2N\nkGOrmAyqdAnGm+Gla3aKQCVY/Y5pTliCzmmZJGt44LLKHiCwuN3zqovTmKtszQLv\nUkKnrtdHLRxcGVoXsWjk9qSfCfN2gDRIPqtTROaHR92Tto/HlGTR3zeHbKOAm7SZ\nWfxtbAO2Mt/KFhlLKC6ZZ04qFncindwIiHjjrb4SryW+QGid9gAxBH8xIpDV6Bjj\nsem+CfiaMdnjhMs4mPZzFrAoahvs5vLy2jijpuLxm0Qn3wGwpcqHHC5r+9e5+5MR\nlmMNHim+UL+bT0fB01FI3x7xrKQ5f1pl+o3erbSnwgx6j9Zk0Pq+0nASOMpbbwj3\n4kKZcagHVjb683UlD6mmbUiByYC9K6P94kpswAb+rM5+TcDCC5UnQmukWjz0Td5i\nyl0gx6W2w/whLD3zDbPaTjbLm6+j9SbdZfRuBIp5RUrAAXASIorijGMKRH1JARqr\nWweUktORiR1f9OBjJ81nEA99Y5Sf4ilcsV0wfBA3Wt4TSlGkOQE=\n=nLAP\n-----END PGP SIGNATURE-----", "payload": "tree 87eaf61d0fb364d7093fe0fe408ce7798c6e2bf0\nparent 0ca4c4c5b36f08450739644bd20b33954ea9cca3\nparent 3e4d9df02bf8a801fb6f4903697ec523590210a9\nauthor kennytm <kennytm@gmail.com> 1507637309 +0800\ncommitter kennytm <kennytm@gmail.com> 1507646652 +0800\n\nRollup merge of #45146 - petrochenkov:lessrec, r=estebank\n\nFix a bug in diagnostics for `x as usize < y`\n\nAlso improve diagnostics for `x as usize << y`.\n\nFixes https://github.com/rust-lang/rust/issues/44406\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce0a1cfa30a1b6480081204dd96dc6e8be5ae720", "html_url": "https://github.com/rust-lang/rust/commit/ce0a1cfa30a1b6480081204dd96dc6e8be5ae720", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce0a1cfa30a1b6480081204dd96dc6e8be5ae720/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ca4c4c5b36f08450739644bd20b33954ea9cca3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ca4c4c5b36f08450739644bd20b33954ea9cca3", "html_url": "https://github.com/rust-lang/rust/commit/0ca4c4c5b36f08450739644bd20b33954ea9cca3"}, {"sha": "3e4d9df02bf8a801fb6f4903697ec523590210a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e4d9df02bf8a801fb6f4903697ec523590210a9", "html_url": "https://github.com/rust-lang/rust/commit/3e4d9df02bf8a801fb6f4903697ec523590210a9"}], "stats": {"total": 79, "additions": 74, "deletions": 5}, "files": [{"sha": "ff020445715d4511263fe8f70b95915c2a289bd5", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ce0a1cfa30a1b6480081204dd96dc6e8be5ae720/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce0a1cfa30a1b6480081204dd96dc6e8be5ae720/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ce0a1cfa30a1b6480081204dd96dc6e8be5ae720", "patch": "@@ -2890,17 +2890,30 @@ impl<'a> Parser<'a> {\n \n                 match self.parse_path(PathStyle::Expr) {\n                     Ok(path) => {\n+                        let (op_noun, op_verb) = match self.token {\n+                            token::Lt => (\"comparison\", \"comparing\"),\n+                            token::BinOp(token::Shl) => (\"shift\", \"shifting\"),\n+                            _ => {\n+                                // We can end up here even without `<` being the next token, for\n+                                // example because `parse_ty_no_plus` returns `Err` on keywords,\n+                                // but `parse_path` returns `Ok` on them due to error recovery.\n+                                // Return original error and parser state.\n+                                mem::replace(self, parser_snapshot_after_type);\n+                                return Err(type_err);\n+                            }\n+                        };\n+\n                         // Successfully parsed the type path leaving a `<` yet to parse.\n                         type_err.cancel();\n \n                         // Report non-fatal diagnostics, keep `x as usize` as an expression\n                         // in AST and continue parsing.\n                         let msg = format!(\"`<` is interpreted as a start of generic \\\n-                                           arguments for `{}`, not a comparison\", path);\n+                                           arguments for `{}`, not a {}\", path, op_noun);\n                         let mut err = self.sess.span_diagnostic.struct_span_err(self.span, &msg);\n                         err.span_label(self.look_ahead_span(1).to(parser_snapshot_after_type.span),\n                                        \"interpreted as generic arguments\");\n-                        err.span_label(self.span, \"not interpreted as comparison\");\n+                        err.span_label(self.span, format!(\"not interpreted as {}\", op_noun));\n \n                         let expr = mk_expr(self, P(Ty {\n                             span: path.span,\n@@ -2911,7 +2924,7 @@ impl<'a> Parser<'a> {\n                         let expr_str = self.sess.codemap().span_to_snippet(expr.span)\n                                                 .unwrap_or(pprust::expr_to_string(&expr));\n                         err.span_suggestion(expr.span,\n-                                            \"try comparing the casted value\",\n+                                            &format!(\"try {} the casted value\", op_verb),\n                                             format!(\"({})\", expr_str));\n                         err.emit();\n "}, {"sha": "c8e0cd1763ffa14acd62c441eb3d56ac850f9524", "filename": "src/test/ui/issue-22644.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce0a1cfa30a1b6480081204dd96dc6e8be5ae720/src%2Ftest%2Fui%2Fissue-22644.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce0a1cfa30a1b6480081204dd96dc6e8be5ae720/src%2Ftest%2Fui%2Fissue-22644.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-22644.rs?ref=ce0a1cfa30a1b6480081204dd96dc6e8be5ae720", "patch": "@@ -35,5 +35,7 @@ fn main() {\n                    <\n                    5);\n \n+    println!(\"{}\", a as usize << long_name);\n+\n     println!(\"{}\", a: &mut 4);\n }"}, {"sha": "f4967c4803bee28b8a01fc5bd1fa1f111deb913b", "filename": "src/test/ui/issue-22644.stderr", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ce0a1cfa30a1b6480081204dd96dc6e8be5ae720/src%2Ftest%2Fui%2Fissue-22644.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ce0a1cfa30a1b6480081204dd96dc6e8be5ae720/src%2Ftest%2Fui%2Fissue-22644.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-22644.stderr?ref=ce0a1cfa30a1b6480081204dd96dc6e8be5ae720", "patch": "@@ -76,9 +76,18 @@ help: try comparing the casted value\n 33 | \n  ...\n \n+error: `<` is interpreted as a start of generic arguments for `usize`, not a shift\n+  --> $DIR/issue-22644.rs:38:31\n+   |\n+38 |     println!(\"{}\", a as usize << long_name);\n+   |                    ---------- ^^ --------- interpreted as generic arguments\n+   |                    |          |\n+   |                    |          not interpreted as shift\n+   |                    help: try shifting the casted value: `(a as usize)`\n+\n error: expected type, found `4`\n-  --> $DIR/issue-22644.rs:38:28\n+  --> $DIR/issue-22644.rs:40:28\n    |\n-38 |     println!(\"{}\", a: &mut 4);\n+40 |     println!(\"{}\", a: &mut 4);\n    |                            ^ expecting a type here because of type ascription\n "}, {"sha": "abf572118fc68ce3fca4cab7d7d81bc8e89d70e8", "filename": "src/test/ui/issue-44406.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ce0a1cfa30a1b6480081204dd96dc6e8be5ae720/src%2Ftest%2Fui%2Fissue-44406.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce0a1cfa30a1b6480081204dd96dc6e8be5ae720/src%2Ftest%2Fui%2Fissue-44406.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-44406.rs?ref=ce0a1cfa30a1b6480081204dd96dc6e8be5ae720", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+macro_rules! foo {\n+    ($rest: tt) => {\n+        bar(baz: $rest)\n+    }\n+}\n+\n+fn main() {\n+    foo!(true);\n+}"}, {"sha": "e07face24bab7b0c4acfd1dfd4e8693e64e5a208", "filename": "src/test/ui/issue-44406.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ce0a1cfa30a1b6480081204dd96dc6e8be5ae720/src%2Ftest%2Fui%2Fissue-44406.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ce0a1cfa30a1b6480081204dd96dc6e8be5ae720/src%2Ftest%2Fui%2Fissue-44406.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-44406.stderr?ref=ce0a1cfa30a1b6480081204dd96dc6e8be5ae720", "patch": "@@ -0,0 +1,26 @@\n+error: expected identifier, found keyword `true`\n+  --> $DIR/issue-44406.rs:18:10\n+   |\n+18 |     foo!(true);\n+   |          ^^^^\n+\n+error: expected type, found keyword `true`\n+  --> $DIR/issue-44406.rs:18:10\n+   |\n+13 |         bar(baz: $rest)\n+   |                - help: did you mean to use `;` here?\n+...\n+18 |     foo!(true);\n+   |          ^^^^ expecting a type here because of type ascription\n+\n+error: expected one of `!`, `&&`, `&`, `(`, `*`, `.`, `;`, `<`, `?`, `[`, `_`, `extern`, `fn`, `for`, `impl`, `unsafe`, `}`, an operator, or lifetime, found `true`\n+  --> $DIR/issue-44406.rs:18:10\n+   |\n+13 |         bar(baz: $rest)\n+   |                 - expected one of 19 possible tokens here\n+...\n+18 |     foo!(true);\n+   |          ^^^^ unexpected token\n+\n+error: aborting due to 3 previous errors\n+"}]}