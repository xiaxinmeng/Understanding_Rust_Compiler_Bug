{"sha": "e39979aa91c8c08219e35a74ae5aa7aa5d8bc4d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzOTk3OWFhOTFjOGMwODIxOWUzNWE3NGFlNWFhN2FhNWQ4YmM0ZDY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2021-03-26T18:39:20Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2021-03-26T18:39:20Z"}, "message": "Implement \"Extract type alias\" assist", "tree": {"sha": "47581f4f5555036fafdb39ea2da4eb4eb7eac44b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47581f4f5555036fafdb39ea2da4eb4eb7eac44b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e39979aa91c8c08219e35a74ae5aa7aa5d8bc4d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e39979aa91c8c08219e35a74ae5aa7aa5d8bc4d6", "html_url": "https://github.com/rust-lang/rust/commit/e39979aa91c8c08219e35a74ae5aa7aa5d8bc4d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e39979aa91c8c08219e35a74ae5aa7aa5d8bc4d6/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ecaad98e074c42dbf637a11afcb630aafffd7b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ecaad98e074c42dbf637a11afcb630aafffd7b3", "html_url": "https://github.com/rust-lang/rust/commit/4ecaad98e074c42dbf637a11afcb630aafffd7b3"}], "stats": {"total": 186, "additions": 186, "deletions": 0}, "files": [{"sha": "77186823409bc425873b219606f5cda661ff86b3", "filename": "crates/ide_assists/src/handlers/extract_type_alias.rs", "status": "added", "additions": 165, "deletions": 0, "changes": 165, "blob_url": "https://github.com/rust-lang/rust/blob/e39979aa91c8c08219e35a74ae5aa7aa5d8bc4d6/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_type_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e39979aa91c8c08219e35a74ae5aa7aa5d8bc4d6/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_type_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_type_alias.rs?ref=e39979aa91c8c08219e35a74ae5aa7aa5d8bc4d6", "patch": "@@ -0,0 +1,165 @@\n+use syntax::{\n+    ast::{self, AstNode},\n+    SyntaxKind,\n+};\n+\n+use crate::{AssistContext, AssistId, AssistKind, Assists};\n+\n+// Assist: extract_type_alias\n+//\n+// Extracts the selected type as a type alias.\n+//\n+// ```\n+// struct S {\n+//     field: $0(u8, u8, u8)$0,\n+// }\n+// ```\n+// ->\n+// ```\n+// type Type = (u8, u8, u8);\n+//\n+// struct S {\n+//     field: Type,\n+// }\n+// ```\n+pub(crate) fn extract_type_alias(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n+    if ctx.frange.range.is_empty() {\n+        return None;\n+    }\n+\n+    let node = match ctx.covering_element() {\n+        syntax::NodeOrToken::Node(node) => node,\n+        syntax::NodeOrToken::Token(tok) => tok.parent()?,\n+    };\n+    let range = node.text_range();\n+    let mut type_like_node = None;\n+    for node in node.ancestors() {\n+        if node.text_range() != range {\n+            break;\n+        }\n+\n+        let kind = node.kind();\n+        if ast::Type::can_cast(kind) || kind == SyntaxKind::TYPE_ARG {\n+            type_like_node = Some(node);\n+            break;\n+        }\n+    }\n+\n+    let node = type_like_node?;\n+\n+    let insert = ctx.find_node_at_offset::<ast::Item>()?.syntax().text_range().start();\n+    let target = node.text_range();\n+\n+    acc.add(\n+        AssistId(\"extract_type_alias\", AssistKind::RefactorExtract),\n+        \"Extract type as type alias\",\n+        target,\n+        |builder| {\n+            builder.edit_file(ctx.frange.file_id);\n+            // FIXME: add snippet support\n+            builder.replace(target, \"Type\");\n+            builder.insert(insert, format!(\"type Type = {};\\n\\n\", node));\n+        },\n+    )\n+}\n+\n+#[cfg(test)]\n+mod tests {\n+    use crate::tests::{check_assist, check_assist_not_applicable};\n+\n+    use super::*;\n+\n+    #[test]\n+    fn test_not_applicable_without_selection() {\n+        check_assist_not_applicable(\n+            extract_type_alias,\n+            r\"\n+struct S {\n+    field: $0(u8, u8, u8),\n+}\n+            \",\n+        );\n+    }\n+\n+    #[test]\n+    fn test_simple_types() {\n+        check_assist(\n+            extract_type_alias,\n+            r\"\n+struct S {\n+    field: $0u8$0,\n+}\n+            \",\n+            r#\"\n+type Type = u8;\n+\n+struct S {\n+    field: Type,\n+}\n+            \"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_generic_type_arg() {\n+        check_assist(\n+            extract_type_alias,\n+            r\"\n+fn generic<T>() {}\n+\n+fn f() {\n+    generic::<$0()$0>();\n+}\n+            \",\n+            r#\"\n+fn generic<T>() {}\n+\n+type Type = ();\n+\n+fn f() {\n+    generic::<Type>();\n+}\n+            \"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_inner_type_arg() {\n+        check_assist(\n+            extract_type_alias,\n+            r\"\n+struct Vec<T> {}\n+struct S {\n+    v: Vec<Vec<$0Vec<u8>$0>>,\n+}\n+            \",\n+            r#\"\n+struct Vec<T> {}\n+type Type = Vec<u8>;\n+\n+struct S {\n+    v: Vec<Vec<Type>>,\n+}\n+            \"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_extract_inner_type() {\n+        check_assist(\n+            extract_type_alias,\n+            r\"\n+struct S {\n+    field: ($0u8$0,),\n+}\n+            \",\n+            r#\"\n+type Type = u8;\n+\n+struct S {\n+    field: (Type,),\n+}\n+            \"#,\n+        );\n+    }\n+}"}, {"sha": "3d1dcef4ceadaf0751706dd262f2a2aa0d441b96", "filename": "crates/ide_assists/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e39979aa91c8c08219e35a74ae5aa7aa5d8bc4d6/crates%2Fide_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e39979aa91c8c08219e35a74ae5aa7aa5d8bc4d6/crates%2Fide_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Flib.rs?ref=e39979aa91c8c08219e35a74ae5aa7aa5d8bc4d6", "patch": "@@ -121,6 +121,7 @@ mod handlers {\n     mod expand_glob_import;\n     mod extract_function;\n     mod extract_struct_from_enum_variant;\n+    mod extract_type_alias;\n     mod extract_variable;\n     mod fill_match_arms;\n     mod fix_visibility;\n@@ -187,6 +188,7 @@ mod handlers {\n             early_return::convert_to_guarded_return,\n             expand_glob_import::expand_glob_import,\n             extract_struct_from_enum_variant::extract_struct_from_enum_variant,\n+            extract_type_alias::extract_type_alias,\n             fill_match_arms::fill_match_arms,\n             fix_visibility::fix_visibility,\n             flip_binexpr::flip_binexpr,"}, {"sha": "6bb65e6bc98aa989dac30c81bc1a8756a28099bc", "filename": "crates/ide_assists/src/tests/generated.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e39979aa91c8c08219e35a74ae5aa7aa5d8bc4d6/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e39979aa91c8c08219e35a74ae5aa7aa5d8bc4d6/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=e39979aa91c8c08219e35a74ae5aa7aa5d8bc4d6", "patch": "@@ -328,6 +328,25 @@ enum A { One(One) }\n     )\n }\n \n+#[test]\n+fn doctest_extract_type_alias() {\n+    check_doc_test(\n+        \"extract_type_alias\",\n+        r#####\"\n+struct S {\n+    field: $0(u8, u8, u8)$0,\n+}\n+\"#####,\n+        r#####\"\n+type Type = (u8, u8, u8);\n+\n+struct S {\n+    field: Type,\n+}\n+\"#####,\n+    )\n+}\n+\n #[test]\n fn doctest_extract_variable() {\n     check_doc_test("}]}