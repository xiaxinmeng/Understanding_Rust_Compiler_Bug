{"sha": "a42c0257c7ed05558f685a77db0de08379feeef8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MmMwMjU3YzdlZDA1NTU4ZjY4NWE3N2RiMGRlMDgzNzlmZWVlZjg=", "commit": {"author": {"name": "Marco A L Barbosa", "email": "malbarbo@gmail.com", "date": "2017-04-18T16:40:00Z"}, "committer": {"name": "Marco A L Barbosa", "email": "malbarbo@gmail.com", "date": "2017-04-18T16:50:29Z"}, "message": "Add bootstrap support for android", "tree": {"sha": "fbd619da019dc6907b98d8c29324db00bf7660e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbd619da019dc6907b98d8c29324db00bf7660e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a42c0257c7ed05558f685a77db0de08379feeef8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a42c0257c7ed05558f685a77db0de08379feeef8", "html_url": "https://github.com/rust-lang/rust/commit/a42c0257c7ed05558f685a77db0de08379feeef8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a42c0257c7ed05558f685a77db0de08379feeef8/comments", "author": {"login": "malbarbo", "id": 1678126, "node_id": "MDQ6VXNlcjE2NzgxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1678126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malbarbo", "html_url": "https://github.com/malbarbo", "followers_url": "https://api.github.com/users/malbarbo/followers", "following_url": "https://api.github.com/users/malbarbo/following{/other_user}", "gists_url": "https://api.github.com/users/malbarbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/malbarbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malbarbo/subscriptions", "organizations_url": "https://api.github.com/users/malbarbo/orgs", "repos_url": "https://api.github.com/users/malbarbo/repos", "events_url": "https://api.github.com/users/malbarbo/events{/privacy}", "received_events_url": "https://api.github.com/users/malbarbo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "malbarbo", "id": 1678126, "node_id": "MDQ6VXNlcjE2NzgxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1678126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malbarbo", "html_url": "https://github.com/malbarbo", "followers_url": "https://api.github.com/users/malbarbo/followers", "following_url": "https://api.github.com/users/malbarbo/following{/other_user}", "gists_url": "https://api.github.com/users/malbarbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/malbarbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malbarbo/subscriptions", "organizations_url": "https://api.github.com/users/malbarbo/orgs", "repos_url": "https://api.github.com/users/malbarbo/repos", "events_url": "https://api.github.com/users/malbarbo/events{/privacy}", "received_events_url": "https://api.github.com/users/malbarbo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e621e1c73f1487b4450446eafe6ccad3a99e3cd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e621e1c73f1487b4450446eafe6ccad3a99e3cd8", "html_url": "https://github.com/rust-lang/rust/commit/e621e1c73f1487b4450446eafe6ccad3a99e3cd8"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "e27f4091b19148b946781d3b9363764a053b52c5", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a42c0257c7ed05558f685a77db0de08379feeef8/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/a42c0257c7ed05558f685a77db0de08379feeef8/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=a42c0257c7ed05558f685a77db0de08379feeef8", "patch": "@@ -415,7 +415,11 @@ def build_triple(self):\n         # The goal here is to come up with the same triple as LLVM would,\n         # at least for the subset of platforms we're willing to target.\n         if ostype == 'Linux':\n-            ostype = 'unknown-linux-gnu'\n+            os = subprocess.check_output(['uname', '-o']).strip().decode(default_encoding)\n+            if os == 'Android':\n+                ostype = 'linux-android'\n+            else:\n+                ostype = 'unknown-linux-gnu'\n         elif ostype == 'FreeBSD':\n             ostype = 'unknown-freebsd'\n         elif ostype == 'DragonFly':\n@@ -472,15 +476,21 @@ def build_triple(self):\n             cputype = 'i686'\n         elif cputype in {'xscale', 'arm'}:\n             cputype = 'arm'\n+            if ostype == 'linux-android':\n+                ostype = 'linux-androideabi'\n         elif cputype == 'armv6l':\n             cputype = 'arm'\n-            ostype += 'eabihf'\n+            if ostype == 'linux-android':\n+                ostype = 'linux-androideabi'\n+            else:\n+                ostype += 'eabihf'\n         elif cputype in {'armv7l', 'armv8l'}:\n             cputype = 'armv7'\n-            ostype += 'eabihf'\n-        elif cputype == 'aarch64':\n-            cputype = 'aarch64'\n-        elif cputype == 'arm64':\n+            if ostype == 'linux-android':\n+                ostype = 'linux-androideabi'\n+            else:\n+                ostype += 'eabihf'\n+        elif cputype in {'aarch64', 'arm64'}:\n             cputype = 'aarch64'\n         elif cputype == 'mips':\n             if sys.byteorder == 'big':"}]}