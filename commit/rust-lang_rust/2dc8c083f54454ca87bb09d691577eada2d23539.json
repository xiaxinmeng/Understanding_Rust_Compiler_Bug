{"sha": "2dc8c083f54454ca87bb09d691577eada2d23539", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkYzhjMDgzZjU0NDU0Y2E4N2JiMDlkNjkxNTc3ZWFkYTJkMjM1Mzk=", "commit": {"author": {"name": "Andy Weiss", "email": "dragonbear@google.com", "date": "2020-04-10T04:50:23Z"}, "committer": {"name": "Andy Weiss", "email": "dragonbear@google.com", "date": "2020-04-22T04:07:43Z"}, "message": "Switch to matching against full paths instead of just the last element of the path", "tree": {"sha": "e074101fff3db9b85a2500e5d20469076642c396", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e074101fff3db9b85a2500e5d20469076642c396"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2dc8c083f54454ca87bb09d691577eada2d23539", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2dc8c083f54454ca87bb09d691577eada2d23539", "html_url": "https://github.com/rust-lang/rust/commit/2dc8c083f54454ca87bb09d691577eada2d23539", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2dc8c083f54454ca87bb09d691577eada2d23539/comments", "author": {"login": "rokob", "id": 831355, "node_id": "MDQ6VXNlcjgzMTM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/831355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rokob", "html_url": "https://github.com/rokob", "followers_url": "https://api.github.com/users/rokob/followers", "following_url": "https://api.github.com/users/rokob/following{/other_user}", "gists_url": "https://api.github.com/users/rokob/gists{/gist_id}", "starred_url": "https://api.github.com/users/rokob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rokob/subscriptions", "organizations_url": "https://api.github.com/users/rokob/orgs", "repos_url": "https://api.github.com/users/rokob/repos", "events_url": "https://api.github.com/users/rokob/events{/privacy}", "received_events_url": "https://api.github.com/users/rokob/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rokob", "id": 831355, "node_id": "MDQ6VXNlcjgzMTM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/831355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rokob", "html_url": "https://github.com/rokob", "followers_url": "https://api.github.com/users/rokob/followers", "following_url": "https://api.github.com/users/rokob/following{/other_user}", "gists_url": "https://api.github.com/users/rokob/gists{/gist_id}", "starred_url": "https://api.github.com/users/rokob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rokob/subscriptions", "organizations_url": "https://api.github.com/users/rokob/orgs", "repos_url": "https://api.github.com/users/rokob/repos", "events_url": "https://api.github.com/users/rokob/events{/privacy}", "received_events_url": "https://api.github.com/users/rokob/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c25c3c381ccfa0bf9b7bc7386a09cc4421fd790", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c25c3c381ccfa0bf9b7bc7386a09cc4421fd790", "html_url": "https://github.com/rust-lang/rust/commit/6c25c3c381ccfa0bf9b7bc7386a09cc4421fd790"}], "stats": {"total": 51, "additions": 24, "deletions": 27}, "files": [{"sha": "8e3e0ed0430b260f3c11c5bae96a7cb2cd52d9ab", "filename": "clippy_lints/src/await_holding_lock.rs", "status": "modified", "additions": 21, "deletions": 27, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/2dc8c083f54454ca87bb09d691577eada2d23539/clippy_lints%2Fsrc%2Fawait_holding_lock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dc8c083f54454ca87bb09d691577eada2d23539/clippy_lints%2Fsrc%2Fawait_holding_lock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fawait_holding_lock.rs?ref=2dc8c083f54454ca87bb09d691577eada2d23539", "patch": "@@ -1,10 +1,10 @@\n-use crate::utils::span_lint_and_note;\n-use if_chain::if_chain;\n+use crate::utils::{match_def_path, paths, span_lint_and_note};\n+use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{Body, FnDecl, HirId, IsAsync};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use rustc_span::{Span, Symbol};\n+use rustc_span::Span;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for calls to await while holding a MutexGuard.\n@@ -44,8 +44,6 @@ declare_clippy_lint! {\n     \"Inside an async function, holding a MutexGuard while calling await\"\n }\n \n-const MUTEX_GUARD_TYPES: [&str; 3] = [\"MutexGuard\", \"RwLockReadGuard\", \"RwLockWriteGuard\"];\n-\n declare_lint_pass!(AwaitHoldingLock => [AWAIT_HOLDING_LOCK]);\n \n impl LateLintPass<'_, '_> for AwaitHoldingLock {\n@@ -62,21 +60,18 @@ impl LateLintPass<'_, '_> for AwaitHoldingLock {\n             return;\n         }\n \n-        for ty_clause in &cx.tables.generator_interior_types {\n-            if_chain! {\n-              if let rustc_middle::ty::Adt(adt, _) = ty_clause.ty.kind;\n-              if let Some(&sym) = cx.get_def_path(adt.did).iter().last();\n-              if is_symbol_mutex_guard(sym);\n-              then {\n-                span_lint_and_note(\n-                      cx,\n-                      AWAIT_HOLDING_LOCK,\n-                      ty_clause.span,\n-                      \"this MutexGuard is held across an 'await' point\",\n-                      ty_clause.scope_span.unwrap_or(span),\n-                      \"these are all the await points this lock is held through\"\n+        for ty_cause in &cx.tables.generator_interior_types {\n+            if let rustc_middle::ty::Adt(adt, _) = ty_cause.ty.kind {\n+                if is_mutex_guard(cx, adt.did) {\n+                    span_lint_and_note(\n+                        cx,\n+                        AWAIT_HOLDING_LOCK,\n+                        ty_cause.span,\n+                        \"this MutexGuard is held across an 'await' point\",\n+                        ty_cause.scope_span.unwrap_or(span),\n+                        \"these are all the await points this lock is held through\",\n                     );\n-              }\n+                }\n             }\n         }\n     }\n@@ -89,12 +84,11 @@ fn is_async_fn(fn_kind: FnKind<'_>) -> bool {\n     })\n }\n \n-fn is_symbol_mutex_guard(sym: Symbol) -> bool {\n-    let sym_str = sym.as_str();\n-    for ty in &MUTEX_GUARD_TYPES {\n-        if sym_str == *ty {\n-            return true;\n-        }\n-    }\n-    false\n+fn is_mutex_guard(cx: &LateContext<'_, '_>, def_id: DefId) -> bool {\n+    match_def_path(cx, def_id, &paths::MUTEX_GUARD)\n+        || match_def_path(cx, def_id, &paths::RWLOCK_READ_GUARD)\n+        || match_def_path(cx, def_id, &paths::RWLOCK_WRITE_GUARD)\n+        || match_def_path(cx, def_id, &paths::PARKING_LOT_MUTEX_GUARD)\n+        || match_def_path(cx, def_id, &paths::PARKING_LOT_RWLOCK_READ_GUARD)\n+        || match_def_path(cx, def_id, &paths::PARKING_LOT_RWLOCK_WRITE_GUARD)\n }"}, {"sha": "7ad09eabec1516c5651f2bf3e5c38afa469cd853", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2dc8c083f54454ca87bb09d691577eada2d23539/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dc8c083f54454ca87bb09d691577eada2d23539/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=2dc8c083f54454ca87bb09d691577eada2d23539", "patch": "@@ -72,6 +72,9 @@ pub const ORD: [&str; 3] = [\"core\", \"cmp\", \"Ord\"];\n pub const OS_STRING: [&str; 4] = [\"std\", \"ffi\", \"os_str\", \"OsString\"];\n pub const OS_STRING_AS_OS_STR: [&str; 5] = [\"std\", \"ffi\", \"os_str\", \"OsString\", \"as_os_str\"];\n pub const OS_STR_TO_OS_STRING: [&str; 5] = [\"std\", \"ffi\", \"os_str\", \"OsStr\", \"to_os_string\"];\n+pub const PARKING_LOT_MUTEX_GUARD: [&str; 2] = [\"parking_lot\", \"MutexGuard\"];\n+pub const PARKING_LOT_RWLOCK_READ_GUARD: [&str; 2] = [\"parking_lot\", \"RwLockReadGuard\"];\n+pub const PARKING_LOT_RWLOCK_WRITE_GUARD: [&str; 2] = [\"parking_lot\", \"RwLockWriteGuard\"];\n pub const PATH: [&str; 3] = [\"std\", \"path\", \"Path\"];\n pub const PATH_BUF: [&str; 3] = [\"std\", \"path\", \"PathBuf\"];\n pub const PATH_BUF_AS_PATH: [&str; 4] = [\"std\", \"path\", \"PathBuf\", \"as_path\"];"}]}