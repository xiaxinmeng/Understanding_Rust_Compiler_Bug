{"sha": "a04ce71172d8b51aa0d7df288bfd7333e39c763a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwNGNlNzExNzJkOGI1MWFhMGQ3ZGYyODhiZmQ3MzMzZTM5Yzc2M2E=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-19T03:16:48Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-19T08:29:59Z"}, "message": "Modify the `Bytes` type so that it remains cloneable even\nthough it includes a `fn()`. This is really a more general\nproblem but I wanted to ensures that `bytes` in particular\nremains working due to #12677.", "tree": {"sha": "3495c43bd416cbd1d7e4c29f50f4a39c384f0691", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3495c43bd416cbd1d7e4c29f50f4a39c384f0691"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a04ce71172d8b51aa0d7df288bfd7333e39c763a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a04ce71172d8b51aa0d7df288bfd7333e39c763a", "html_url": "https://github.com/rust-lang/rust/commit/a04ce71172d8b51aa0d7df288bfd7333e39c763a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a04ce71172d8b51aa0d7df288bfd7333e39c763a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89922e52b06fbe1af74983cf2f936c5bf9e6d91e", "url": "https://api.github.com/repos/rust-lang/rust/commits/89922e52b06fbe1af74983cf2f936c5bf9e6d91e", "html_url": "https://github.com/rust-lang/rust/commit/89922e52b06fbe1af74983cf2f936c5bf9e6d91e"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "8fe41c0bd89c26e73b742cb047c38c9d54a7de26", "filename": "src/libcore/str.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a04ce71172d8b51aa0d7df288bfd7333e39c763a/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a04ce71172d8b51aa0d7df288bfd7333e39c763a/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=a04ce71172d8b51aa0d7df288bfd7333e39c763a", "patch": "@@ -21,6 +21,7 @@ pub use self::Searcher::{Naive, TwoWay, TwoWayLong};\n \n use char::Char;\n use char;\n+use clone::Clone;\n use cmp::{Eq, mod};\n use default::Default;\n use iter::{Map, Iterator, IteratorExt, DoubleEndedIterator};\n@@ -31,7 +32,7 @@ use mem;\n use num::Int;\n use option::Option;\n use option::Option::{None, Some};\n-use ops::FnMut;\n+use ops::{Fn, FnMut};\n use ptr::RawPtr;\n use raw::{Repr, Slice};\n use slice::{mod, SliceExt};\n@@ -316,7 +317,23 @@ impl<'a> DoubleEndedIterator<(uint, char)> for CharOffsets<'a> {\n \n /// External iterator for a string's bytes.\n /// Use with the `std::iter` module.\n-pub type Bytes<'a> = Map<&'a u8, u8, slice::Items<'a, u8>, fn(&u8) -> u8>;\n+pub type Bytes<'a> = Map<&'a u8, u8, slice::Items<'a, u8>, BytesFn>;\n+\n+/// A temporary new type wrapper that ensures that the `Bytes` iterator\n+/// is cloneable.\n+#[deriving(Copy)]\n+#[experimental = \"iterator type instability\"]\n+pub struct BytesFn(fn(&u8) -> u8);\n+\n+impl<'a> Fn(&'a u8) -> u8 for BytesFn {\n+    extern \"rust-call\" fn call(&self, (ptr,): (&'a u8,)) -> u8 {\n+        (self.0)(ptr)\n+    }\n+}\n+\n+impl Clone for BytesFn {\n+    fn clone(&self) -> BytesFn { *self }\n+}\n \n /// An iterator over the substrings of a string, separated by `sep`.\n #[deriving(Clone)]\n@@ -2009,7 +2026,7 @@ impl StrPrelude for str {\n     fn bytes(&self) -> Bytes {\n         fn deref(&x: &u8) -> u8 { x }\n \n-        self.as_bytes().iter().map(deref)\n+        self.as_bytes().iter().map(BytesFn(deref))\n     }\n \n     #[inline]"}]}