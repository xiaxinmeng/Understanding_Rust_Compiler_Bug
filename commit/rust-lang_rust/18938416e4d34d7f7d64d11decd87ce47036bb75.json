{"sha": "18938416e4d34d7f7d64d11decd87ce47036bb75", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4OTM4NDE2ZTRkMzRkN2Y3ZDY0ZDExZGVjZDg3Y2U0NzAzNmJiNzU=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-03-23T01:35:22Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-03-29T10:03:35Z"}, "message": "Update documentation.\n\nThis commit updates the unstable book and diagnostics to reflect that\nthe `#[non_exhaustive]` attribute is now available for enum variants.", "tree": {"sha": "c5c2eddc3406bf150cabb290fd5dfb267812edf4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5c2eddc3406bf150cabb290fd5dfb267812edf4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18938416e4d34d7f7d64d11decd87ce47036bb75", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlyd7XcACgkQAXYLT59T\n8VS2og/9Gh4U5dQXbr9T1KYA6II4ncdFTYp0rPXW5rJEo0sJ6TRiHv2E0c6gmHbc\nXzgdq1u8NwazgfuJrblFLPQSHvKllYK38Tt5pqaVreu6o/0I3t5ifcdY8d8611ZQ\nPgc6JiT7mOQAQ0RxXGMQbWstZhn3F1urxnkioiDldCc7swrl7+tnS4WjG10UOrU4\nfOz9NixSYjHl63eRGbw+HCZngUn6/3E4P86sek5uc4XkbvbPc7i8dc4xPQ1p6vIv\ntWDxqwM+ZTSUv3RPHTUAE2mGKRgpFt2iODMxtVQ7u8QTB9ohljIMoatAJ6WSHR/z\nMgWb5b8FcQfIG+IXP5DtJlxB3ZGyWvnMDW1JeZsyaV9zgllduHeuzC2yZGwO8UE9\nbxbuczWuix9nFqkg3VZUxdg5IcpMO2xIzAjw/58VnPeRQWzxiMVSDvzVDYnDTrRa\nafU4jGw/9XC48D1Wm07SJWh6qgahsBWE3BBzpmnRnjyskU8eqZgHKm0kaTPBqgur\n0F6lDyqY2pistzB00V+ez/JP2SoUxULZliQ04P6i5GUrw+QxLVgyJ4m0xJvq3YEu\n6zFiHmEHJehA07CHA1WMUrYycgb1p8/tS528Vtm2/rlMneuF8JM4sB+v76Ag04SE\nSBYZfctln7SDMlIHxiA870sj78ytWomMuad+ZUvG2ouwtFsIwPk=\n=nxnS\n-----END PGP SIGNATURE-----", "payload": "tree c5c2eddc3406bf150cabb290fd5dfb267812edf4\nparent 3a88cd77781965118f9860b76341b7fe249df061\nauthor David Wood <david@davidtw.co> 1553304922 +0100\ncommitter David Wood <david@davidtw.co> 1553853815 +0100\n\nUpdate documentation.\n\nThis commit updates the unstable book and diagnostics to reflect that\nthe `#[non_exhaustive]` attribute is now available for enum variants.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18938416e4d34d7f7d64d11decd87ce47036bb75", "html_url": "https://github.com/rust-lang/rust/commit/18938416e4d34d7f7d64d11decd87ce47036bb75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18938416e4d34d7f7d64d11decd87ce47036bb75/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a88cd77781965118f9860b76341b7fe249df061", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a88cd77781965118f9860b76341b7fe249df061", "html_url": "https://github.com/rust-lang/rust/commit/3a88cd77781965118f9860b76341b7fe249df061"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "907147c17ef8e500260577c1c637d7260bc7bd5b", "filename": "src/doc/unstable-book/src/language-features/non-exhaustive.md", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/18938416e4d34d7f7d64d11decd87ce47036bb75/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnon-exhaustive.md", "raw_url": "https://github.com/rust-lang/rust/raw/18938416e4d34d7f7d64d11decd87ce47036bb75/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnon-exhaustive.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnon-exhaustive.md?ref=18938416e4d34d7f7d64d11decd87ce47036bb75", "patch": "@@ -7,10 +7,12 @@ The tracking issue for this feature is: [#44109]\n ------------------------\n \n The `non_exhaustive` gate allows you to use the `#[non_exhaustive]` attribute\n-on structs and enums. When applied within a crate, users of the crate will need\n-to use the `_` pattern when matching enums and use the `..` pattern when\n-matching structs. Structs marked as `non_exhaustive` will not be able to be\n-created normally outside of the defining crate. This is demonstrated below:\n+on structs, enums and enum variants. When applied within a crate, users of the\n+crate will need to use the `_` pattern when matching enums and use the `..`\n+pattern when matching structs. Enum variants cannot be matched against.\n+Structs and enum variants marked as `non_exhaustive` will not be able to\n+be created normally outside of the defining crate. This is demonstrated\n+below:\n \n ```rust,ignore (pseudo-Rust)\n use std::error::Error as StdError;\n@@ -72,4 +74,3 @@ let config = Config { window_width: 640, window_height: 480 };\n // when marked non_exhaustive.\n let &Config { window_width, window_height, .. } = config;\n ```\n-"}, {"sha": "22f24df450f462377f91ff9acd7d355f951fdaed", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/18938416e4d34d7f7d64d11decd87ce47036bb75/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18938416e4d34d7f7d64d11decd87ce47036bb75/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=18938416e4d34d7f7d64d11decd87ce47036bb75", "patch": "@@ -4341,11 +4341,12 @@ foo.method(); // Ok!\n \"##,\n \n E0638: r##\"\n-This error indicates that the struct or enum must be matched non-exhaustively\n-as it has been marked as `non_exhaustive`.\n+This error indicates that the struct, enum or enum variant must be matched\n+non-exhaustively as it has been marked as `non_exhaustive`.\n \n When applied within a crate, downstream users of the crate will need to use the\n `_` pattern when matching enums and use the `..` pattern when matching structs.\n+Downstream crates cannot match against non-exhaustive enum variants.\n \n For example, in the below example, since the enum is marked as\n `non_exhaustive`, it is required that downstream crates match non-exhaustively\n@@ -4390,10 +4391,10 @@ Similarly, for structs, match with `..` to avoid this error.\n \"##,\n \n E0639: r##\"\n-This error indicates that the struct or enum cannot be instantiated from\n-outside of the defining crate as it has been marked as `non_exhaustive` and as\n-such more fields/variants may be added in future that could cause adverse side\n-effects for this code.\n+This error indicates that the struct, enum or enum variant cannot be\n+instantiated from outside of the defining crate as it has been marked\n+as `non_exhaustive` and as such more fields/variants may be added in\n+future that could cause adverse side effects for this code.\n \n It is recommended that you look for a `new` function or equivalent in the\n crate's documentation."}]}