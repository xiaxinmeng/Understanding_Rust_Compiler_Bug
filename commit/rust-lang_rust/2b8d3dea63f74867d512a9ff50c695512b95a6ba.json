{"sha": "2b8d3dea63f74867d512a9ff50c695512b95a6ba", "node_id": "C_kwDOAAsO6NoAKDJiOGQzZGVhNjNmNzQ4NjdkNTEyYTlmZjUwYzY5NTUxMmI5NWE2YmE", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-02-03T22:56:18Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-02-04T02:10:00Z"}, "message": "Remove `staticlibs` local variable.", "tree": {"sha": "069c73fce7daf833eac4e9399503e96525759b16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/069c73fce7daf833eac4e9399503e96525759b16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b8d3dea63f74867d512a9ff50c695512b95a6ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b8d3dea63f74867d512a9ff50c695512b95a6ba", "html_url": "https://github.com/rust-lang/rust/commit/2b8d3dea63f74867d512a9ff50c695512b95a6ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b8d3dea63f74867d512a9ff50c695512b95a6ba/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dcda2aaec79f499f2d515e680a67f9f4b0d2bf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dcda2aaec79f499f2d515e680a67f9f4b0d2bf9", "html_url": "https://github.com/rust-lang/rust/commit/6dcda2aaec79f499f2d515e680a67f9f4b0d2bf9"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "5c81917fc0a82c4ac30544dbafbfcca724e7806c", "filename": "compiler/rustc_metadata/src/locator.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2b8d3dea63f74867d512a9ff50c695512b95a6ba/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b8d3dea63f74867d512a9ff50c695512b95a6ba/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs?ref=2b8d3dea63f74867d512a9ff50c695512b95a6ba", "patch": "@@ -385,7 +385,6 @@ impl<'a> CrateLocator<'a> {\n \n         let mut candidates: FxHashMap<_, (FxHashMap<_, _>, FxHashMap<_, _>, FxHashMap<_, _>)> =\n             Default::default();\n-        let mut staticlibs = vec![];\n \n         // First, find all possible candidate rlibs and dylibs purely based on\n         // the name of the files themselves. We're trying to match against an\n@@ -414,7 +413,7 @@ impl<'a> CrateLocator<'a> {\n                     (&f[dylib_prefix.len()..(f.len() - dylib_suffix.len())], CrateFlavor::Dylib)\n                 } else {\n                     if f.starts_with(staticlib_prefix) && f.ends_with(staticlib_suffix) {\n-                        staticlibs.push(CrateMismatch {\n+                        self.crate_rejections.via_kind.push(CrateMismatch {\n                             path: spf.path.clone(),\n                             got: \"static\".to_string(),\n                         });\n@@ -438,8 +437,6 @@ impl<'a> CrateLocator<'a> {\n             }\n         }\n \n-        self.crate_rejections.via_kind.extend(staticlibs);\n-\n         // We have now collected all known libraries into a set of candidates\n         // keyed of the filename hash listed. For each filename, we also have a\n         // list of rlibs/dylibs that apply. Here, we map each of these lists"}]}