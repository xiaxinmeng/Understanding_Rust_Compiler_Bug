{"sha": "72b6a91fe732ab9b4438fab3b7d454e359a4bae1", "node_id": "C_kwDOAAsO6NoAKDcyYjZhOTFmZTczMmFiOWI0NDM4ZmFiM2I3ZDQ1NGUzNTlhNGJhZTE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-11T22:31:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-11T22:31:52Z"}, "message": "Rollup merge of #91764 - cjgillot:elide-anyway, r=jackh726\n\nDo not ICE when suggesting elided lifetimes on non-existent spans.\n\nFixes https://github.com/rust-lang/rust/issues/91763\n\nr? `@jackh726`", "tree": {"sha": "87176dec00430581eb878f4fe4edb67a1f3b79f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87176dec00430581eb878f4fe4edb67a1f3b79f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72b6a91fe732ab9b4438fab3b7d454e359a4bae1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhtSbYCRBK7hj4Ov3rIwAAc1IIAFe5Lh3U5VYDS8NYbOGO6mHs\nzP7ULmTbMVWnlpzhWqrfLxWMu8cgW7VRXuTOLniR+80O7abPz+EjUlreWcGK/moq\n3prtMrfT/AiLgOzb1bPgkUGd+DON3VpI1HhYf0hUZwvW/b4XWEwB6eOM7n+RbusK\nod5DjaVOyKAUlo+gfa50TrFlADgyfmQ8Nt2P31FCb6JaeA1YmbRTltMmOi8TX50l\nPQoTu7DHILohtZC+6ij7eqcJocfcgvlWsTt2hjkLWqPmJ/miRh4Mit+oZZgexbCc\nOv4T8oVpHtxHMKafPbus+J2mO7OFBzERtHgCjgyJgo0E0wKF3sU1PFITkhv7wOk=\n=EZC+\n-----END PGP SIGNATURE-----\n", "payload": "tree 87176dec00430581eb878f4fe4edb67a1f3b79f4\nparent 6c66d3452deac2b7ea78ecb31a3d21b18038b5cd\nparent 989d1de91bb357ba7bb360dd85a4a1308862ceb6\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639261912 +0100\ncommitter GitHub <noreply@github.com> 1639261912 +0100\n\nRollup merge of #91764 - cjgillot:elide-anyway, r=jackh726\n\nDo not ICE when suggesting elided lifetimes on non-existent spans.\n\nFixes https://github.com/rust-lang/rust/issues/91763\n\nr? `@jackh726`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72b6a91fe732ab9b4438fab3b7d454e359a4bae1", "html_url": "https://github.com/rust-lang/rust/commit/72b6a91fe732ab9b4438fab3b7d454e359a4bae1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72b6a91fe732ab9b4438fab3b7d454e359a4bae1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c66d3452deac2b7ea78ecb31a3d21b18038b5cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c66d3452deac2b7ea78ecb31a3d21b18038b5cd", "html_url": "https://github.com/rust-lang/rust/commit/6c66d3452deac2b7ea78ecb31a3d21b18038b5cd"}, {"sha": "989d1de91bb357ba7bb360dd85a4a1308862ceb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/989d1de91bb357ba7bb360dd85a4a1308862ceb6", "html_url": "https://github.com/rust-lang/rust/commit/989d1de91bb357ba7bb360dd85a4a1308862ceb6"}], "stats": {"total": 99, "additions": 78, "deletions": 21}, "files": [{"sha": "3c79020523a9fea2f99e036dc22811c0f2b7c31c", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/72b6a91fe732ab9b4438fab3b7d454e359a4bae1/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72b6a91fe732ab9b4438fab3b7d454e359a4bae1/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=72b6a91fe732ab9b4438fab3b7d454e359a4bae1", "patch": "@@ -22,9 +22,7 @@ use ast::util::unicode::TEXT_FLOW_CONTROL_CHARS;\n use rustc_ast as ast;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync;\n-use rustc_errors::{\n-    add_elided_lifetime_in_path_suggestion, struct_span_err, Applicability, SuggestionStyle,\n-};\n+use rustc_errors::{struct_span_err, Applicability, SuggestionStyle};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::def_id::{CrateNum, DefId};\n@@ -670,23 +668,6 @@ pub trait LintContext: Sized {\n                 ) => {\n                     db.span_note(span_def, \"the macro is defined here\");\n                 }\n-                BuiltinLintDiagnostics::ElidedLifetimesInPaths(\n-                    n,\n-                    path_span,\n-                    incl_angl_brckt,\n-                    insertion_span,\n-                    anon_lts,\n-                ) => {\n-                    add_elided_lifetime_in_path_suggestion(\n-                        sess.source_map(),\n-                        &mut db,\n-                        n,\n-                        path_span,\n-                        incl_angl_brckt,\n-                        insertion_span,\n-                        anon_lts,\n-                    );\n-                }\n                 BuiltinLintDiagnostics::UnknownCrateTypes(span, note, sugg) => {\n                     db.span_suggestion(span, &note, sugg, Applicability::MaybeIncorrect);\n                 }"}, {"sha": "3f504d75dfc92120bee05a736400105e181ca579", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/72b6a91fe732ab9b4438fab3b7d454e359a4bae1/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72b6a91fe732ab9b4438fab3b7d454e359a4bae1/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=72b6a91fe732ab9b4438fab3b7d454e359a4bae1", "patch": "@@ -289,7 +289,6 @@ pub enum BuiltinLintDiagnostics {\n     AbsPathWithModule(Span),\n     ProcMacroDeriveResolutionFallback(Span),\n     MacroExpandedMacroExportsAccessedByAbsolutePaths(Span),\n-    ElidedLifetimesInPaths(usize, Span, bool, Span, String),\n     UnknownCrateTypes(Span, String, String),\n     UnusedImports(String, Vec<(Span, String)>),\n     RedundantImport(Vec<(Span, bool)>, Ident),"}, {"sha": "feb4f82ce8ddcc53088ab561fdae62dc76f937b3", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/72b6a91fe732ab9b4438fab3b7d454e359a4bae1/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72b6a91fe732ab9b4438fab3b7d454e359a4bae1/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=72b6a91fe732ab9b4438fab3b7d454e359a4bae1", "patch": "@@ -2115,6 +2115,11 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n                     })\n                     .map(|(formatter, span)| (*span, formatter(name)))\n                     .collect();\n+                if spans_suggs.is_empty() {\n+                    // If all the spans come from macros, we cannot extract snippets and then\n+                    // `formatters` only contains None and `spans_suggs` is empty.\n+                    return;\n+                }\n                 err.multipart_suggestion_verbose(\n                     &format!(\n                         \"consider using the `{}` lifetime\","}, {"sha": "0335f72b7846f0a561fa30ccabd1938831d8bc98", "filename": "src/test/ui/lifetimes/auxiliary/issue-91763-aux.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/72b6a91fe732ab9b4438fab3b7d454e359a4bae1/src%2Ftest%2Fui%2Flifetimes%2Fauxiliary%2Fissue-91763-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72b6a91fe732ab9b4438fab3b7d454e359a4bae1/src%2Ftest%2Fui%2Flifetimes%2Fauxiliary%2Fissue-91763-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fauxiliary%2Fissue-91763-aux.rs?ref=72b6a91fe732ab9b4438fab3b7d454e359a4bae1", "patch": "@@ -0,0 +1,47 @@\n+// force-host\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+//#![feature(proc_macro_diagnostic, proc_macro_span, proc_macro_def_site)]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::{Delimiter, Group, Ident, Punct, Spacing, Span, TokenStream, TokenTree};\n+use std::iter::FromIterator;\n+\n+#[proc_macro_attribute]\n+pub fn repro(_args: TokenStream, input: TokenStream) -> TokenStream {\n+    let call_site = Span::call_site();\n+    let span = input.into_iter().nth(8).unwrap().span();\n+\n+    //fn f(_: &::std::fmt::Formatter) {}\n+    TokenStream::from_iter([\n+        TokenTree::Ident(Ident::new(\"fn\", call_site)),\n+        TokenTree::Ident(Ident::new(\"f\", call_site)),\n+        TokenTree::Group(Group::new(\n+            Delimiter::Parenthesis,\n+            TokenStream::from_iter([\n+                TokenTree::Ident(Ident::new(\"_\", call_site)),\n+                TokenTree::Punct(punct(':', Spacing::Alone, call_site)),\n+                TokenTree::Punct(punct('&', Spacing::Alone, call_site)),\n+                TokenTree::Punct(punct(':', Spacing::Joint, span)),\n+                TokenTree::Punct(punct(':', Spacing::Alone, span)),\n+                TokenTree::Ident(Ident::new(\"std\", span)),\n+                TokenTree::Punct(punct(':', Spacing::Joint, span)),\n+                TokenTree::Punct(punct(':', Spacing::Alone, span)),\n+                TokenTree::Ident(Ident::new(\"fmt\", span)),\n+                TokenTree::Punct(punct(':', Spacing::Joint, span)),\n+                TokenTree::Punct(punct(':', Spacing::Alone, span)),\n+                TokenTree::Ident(Ident::new(\"Formatter\", span)),\n+            ]),\n+        )),\n+        TokenTree::Group(Group::new(Delimiter::Brace, TokenStream::new())),\n+    ])\n+}\n+\n+fn punct(ch: char, spacing: Spacing, span: Span) -> Punct {\n+    let mut punct = Punct::new(ch, spacing);\n+    punct.set_span(span);\n+    punct\n+}"}, {"sha": "2e8807fe639aca9f76ec04e13b1f616acca595dd", "filename": "src/test/ui/lifetimes/issue-91763.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/72b6a91fe732ab9b4438fab3b7d454e359a4bae1/src%2Ftest%2Fui%2Flifetimes%2Fissue-91763.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72b6a91fe732ab9b4438fab3b7d454e359a4bae1/src%2Ftest%2Fui%2Flifetimes%2Fissue-91763.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fissue-91763.rs?ref=72b6a91fe732ab9b4438fab3b7d454e359a4bae1", "patch": "@@ -0,0 +1,11 @@\n+// aux-build:issue-91763-aux.rs\n+\n+#![deny(elided_lifetimes_in_paths)]\n+\n+extern crate issue_91763_aux;\n+\n+#[issue_91763_aux::repro]\n+fn f() -> Ptr<Thing>;\n+//~^ ERROR hidden lifetime parameters in types are deprecated\n+\n+fn main() {}"}, {"sha": "1b1912c8e4544d8c03d168914fb4e72cccef0e9b", "filename": "src/test/ui/lifetimes/issue-91763.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/72b6a91fe732ab9b4438fab3b7d454e359a4bae1/src%2Ftest%2Fui%2Flifetimes%2Fissue-91763.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72b6a91fe732ab9b4438fab3b7d454e359a4bae1/src%2Ftest%2Fui%2Flifetimes%2Fissue-91763.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fissue-91763.stderr?ref=72b6a91fe732ab9b4438fab3b7d454e359a4bae1", "patch": "@@ -0,0 +1,14 @@\n+error: hidden lifetime parameters in types are deprecated\n+  --> $DIR/issue-91763.rs:8:20\n+   |\n+LL | fn f() -> Ptr<Thing>;\n+   |                    ^ expected named lifetime parameter\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-91763.rs:3:9\n+   |\n+LL | #![deny(elided_lifetimes_in_paths)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}