{"sha": "61b0b212f9609e56f06a63db8542c3a5288074d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYjBiMjEyZjk2MDllNTZmMDZhNjNkYjg1NDJjM2E1Mjg4MDc0ZDg=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-01-11T07:50:24Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-01-11T07:50:24Z"}, "message": "fix function arguments in constant promotion\n\nwe can't create the target block until *after* we promote the arguments\n- otherwise the arguments will be promoted into the target block. oops.\n\nFixes #38985.", "tree": {"sha": "1dd9d3fb54d20043bfc1ad49c7d14cd173ffbe9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dd9d3fb54d20043bfc1ad49c7d14cd173ffbe9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61b0b212f9609e56f06a63db8542c3a5288074d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61b0b212f9609e56f06a63db8542c3a5288074d8", "html_url": "https://github.com/rust-lang/rust/commit/61b0b212f9609e56f06a63db8542c3a5288074d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61b0b212f9609e56f06a63db8542c3a5288074d8/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ef1a69d2e05d86e0893763d2c86677e9c5f3d99", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ef1a69d2e05d86e0893763d2c86677e9c5f3d99", "html_url": "https://github.com/rust-lang/rust/commit/7ef1a69d2e05d86e0893763d2c86677e9c5f3d99"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "57cf4b1e8b02bf06edaa1cb49310b8e4c5289d40", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/61b0b212f9609e56f06a63db8542c3a5288074d8/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61b0b212f9609e56f06a63db8542c3a5288074d8/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=61b0b212f9609e56f06a63db8542c3a5288074d8", "patch": "@@ -237,7 +237,7 @@ impl<'a, 'tcx> Promoter<'a, 'tcx> {\n             self.visit_rvalue(&mut rvalue, loc);\n             self.assign(new_temp, rvalue, source_info.span);\n         } else {\n-            let mut terminator = if self.keep_original {\n+            let terminator = if self.keep_original {\n                 self.source[loc.block].terminator().clone()\n             } else {\n                 let terminator = self.source[loc.block].terminator_mut();\n@@ -255,28 +255,30 @@ impl<'a, 'tcx> Promoter<'a, 'tcx> {\n                 }\n             };\n \n-            let last = self.promoted.basic_blocks().last().unwrap();\n-            let new_target = self.new_block();\n-\n-            terminator.kind = match terminator.kind {\n+            match terminator.kind {\n                 TerminatorKind::Call { mut func, mut args, .. } => {\n                     self.visit_operand(&mut func, loc);\n                     for arg in &mut args {\n                         self.visit_operand(arg, loc);\n                     }\n-                    TerminatorKind::Call {\n-                        func: func,\n-                        args: args,\n-                        cleanup: None,\n-                        destination: Some((Lvalue::Local(new_temp), new_target))\n-                    }\n+\n+                    let last = self.promoted.basic_blocks().last().unwrap();\n+                    let new_target = self.new_block();\n+\n+                    *self.promoted[last].terminator_mut() = Terminator {\n+                        kind: TerminatorKind::Call {\n+                            func: func,\n+                            args: args,\n+                            cleanup: None,\n+                            destination: Some((Lvalue::Local(new_temp), new_target))\n+                        },\n+                        ..terminator\n+                    };\n                 }\n                 ref kind => {\n                     span_bug!(terminator.source_info.span, \"{:?} not promotable\", kind);\n                 }\n             };\n-\n-            *self.promoted[last].terminator_mut() = terminator;\n         };\n \n         self.keep_original = old_keep_original;"}, {"sha": "9bdde02d0061ce23b1643b4b34fedc0ef1e0cb83", "filename": "src/test/run-pass/issue-37991.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/61b0b212f9609e56f06a63db8542c3a5288074d8/src%2Ftest%2Frun-pass%2Fissue-37991.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61b0b212f9609e56f06a63db8542c3a5288074d8/src%2Ftest%2Frun-pass%2Fissue-37991.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-37991.rs?ref=61b0b212f9609e56f06a63db8542c3a5288074d8", "patch": "@@ -14,7 +14,14 @@ const fn foo() -> i64 {\n     3\n }\n \n+const fn bar(x: i64) -> i64 {\n+    x*2\n+}\n+\n fn main() {\n     let val = &(foo() % 2);\n     assert_eq!(*val, 1);\n+\n+    let val2 = &(bar(1+1) % 3);\n+    assert_eq!(*val2, 1);\n }"}]}