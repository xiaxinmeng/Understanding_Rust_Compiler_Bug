{"sha": "be9914625b0cbf5f305c5af3adbc6bc337ae760e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlOTkxNDYyNWIwY2JmNWYzMDVjNWFmM2FkYmM2YmMzMzdhZTc2MGU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-02-10T01:58:09Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-02-25T04:46:27Z"}, "message": "allow snapshot to be specified in make command line", "tree": {"sha": "5aa378002d30e654c2cdd281e86172ada8748c1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5aa378002d30e654c2cdd281e86172ada8748c1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be9914625b0cbf5f305c5af3adbc6bc337ae760e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be9914625b0cbf5f305c5af3adbc6bc337ae760e", "html_url": "https://github.com/rust-lang/rust/commit/be9914625b0cbf5f305c5af3adbc6bc337ae760e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be9914625b0cbf5f305c5af3adbc6bc337ae760e/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e4c5d2d4d65253a527742ac9ef40a3f6ca5c3a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e4c5d2d4d65253a527742ac9ef40a3f6ca5c3a0", "html_url": "https://github.com/rust-lang/rust/commit/8e4c5d2d4d65253a527742ac9ef40a3f6ca5c3a0"}], "stats": {"total": 38, "additions": 24, "deletions": 14}, "files": [{"sha": "b790c2f9f2de20f32608b7cb28369842bacd28d5", "filename": "mk/stage0.mk", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be9914625b0cbf5f305c5af3adbc6bc337ae760e/mk%2Fstage0.mk", "raw_url": "https://github.com/rust-lang/rust/raw/be9914625b0cbf5f305c5af3adbc6bc337ae760e/mk%2Fstage0.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage0.mk?ref=be9914625b0cbf5f305c5af3adbc6bc337ae760e", "patch": "@@ -4,7 +4,9 @@ $(HBIN0_H_$(CFG_HOST_TRIPLE))/rustc$(X):\t\t\\\n \t\t$(S)src/snapshots.txt\t\t\t\t\t\\\n \t\t$(S)src/etc/get-snapshot.py $(MKFILE_DEPS)\n \t@$(call E, fetch: $@)\n-\t$(Q)$(S)src/etc/get-snapshot.py $(CFG_HOST_TRIPLE)\n+#   Note: the variable \"SNAPSHOT_FILE\" is generally not set, and so\n+#   we generally only pass one argument to this script.  \n+\t$(Q)$(S)src/etc/get-snapshot.py $(CFG_HOST_TRIPLE) $(SNAPSHOT_FILE)\n \t$(Q)touch $@\n \n # Host libs will be extracted by the above rule"}, {"sha": "643cd0fcdd622654a388a4ce30d1835ab79933c8", "filename": "src/etc/get-snapshot.py", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/be9914625b0cbf5f305c5af3adbc6bc337ae760e/src%2Fetc%2Fget-snapshot.py", "raw_url": "https://github.com/rust-lang/rust/raw/be9914625b0cbf5f305c5af3adbc6bc337ae760e/src%2Fetc%2Fget-snapshot.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fget-snapshot.py?ref=be9914625b0cbf5f305c5af3adbc6bc337ae760e", "patch": "@@ -3,8 +3,7 @@\n import os, tarfile, hashlib, re, shutil, sys\n from snapshot import *\n \n-def unpack_snapshot(triple, snap):\n-  dl_path = os.path.join(download_dir_base, snap)\n+def unpack_snapshot(triple, dl_path):\n   print(\"opening snapshot \" + dl_path)\n   tar = tarfile.open(dl_path)\n   kernel = get_kernel(triple)\n@@ -60,18 +59,27 @@ def determine_curr_snapshot(triple):\n \n # Main\n \n+# this gets called with one or two arguments:\n+# The first is the O/S triple.\n+# The second is an optional path to the snapshot to use.\n+\n triple = sys.argv[1]\n-snap = determine_curr_snapshot(triple)\n-dl = os.path.join(download_dir_base, snap)\n-url = download_url_base + \"/\" + snap\n-print(\"determined most recent snapshot: \" + snap)\n+if len(sys.argv) == 3:\n+  dl_path = sys.argv[2]\n+else:\n+  snap = determine_curr_snapshot(triple)\n+  dl = os.path.join(download_dir_base, snap)\n+  url = download_url_base + \"/\" + snap\n+  print(\"determined most recent snapshot: \" + snap)\n \n-if (not os.path.exists(dl)):\n-  get_url_to_file(url, dl)\n+  if (not os.path.exists(dl)):\n+    get_url_to_file(url, dl)\n \n-if (snap_filename_hash_part(snap) == hash_file(dl)):\n-  print(\"got download with ok hash\")\n-else:\n-  raise Exception(\"bad hash on download\")\n+  if (snap_filename_hash_part(snap) == hash_file(dl)):\n+    print(\"got download with ok hash\")\n+  else:\n+    raise Exception(\"bad hash on download\")\n+\n+  dl_path = os.path.join(download_dir_base, snap)\n \n-unpack_snapshot(triple, snap)\n+unpack_snapshot(triple, dl_path)"}]}