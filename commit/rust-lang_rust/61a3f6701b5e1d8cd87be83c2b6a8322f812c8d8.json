{"sha": "61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYTNmNjcwMWI1ZTFkOGNkODdiZTgzYzJiNmE4MzIyZjgxMmM4ZDg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-16T18:18:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-16T18:18:44Z"}, "message": "Rollup merge of #74148 - GuillaumeGomez:doc-alias-check, r=Manishearth\n\nMove #[doc(alias)] check in rustc\n\nPart of #73721.\n\nr? @ollie27", "tree": {"sha": "291441ecd6c8cf664aa06327901876e715d7ef50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/291441ecd6c8cf664aa06327901876e715d7ef50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfEJoECRBK7hj4Ov3rIwAAdHIIAAWzkIpZzxIky5fBVnNCbH8z\nJvPq5yrjpVAjH5dGvHpYj1hTVRB7OpGoS5WeV+V1SwrfBAeNudzTCD9gHShA4S3u\n4bKsb0l5t6PkgnNiJGx6ugM6o10isj5YZ6Ha9n210UvIGsd2mFE5+0w2igPY6w/0\nFZWAOyLZFNWuFOI+35aDQAcHlpcmdfmJyREstDlHZ81CK0vmD3qSSLsnzN2KmNQ2\nlLZ+YA3gD/f/OAED6AROiuc3FhnX895DIKg3l8ssPcrkdIKD4TIPNA9qZvoxuIPs\n9avLIvyOztOAduCMBJEbMjm3fKsq+zrtA30rv8Q70nfy2G+AjnsM37Ota9XE8gQ=\n=QbLK\n-----END PGP SIGNATURE-----\n", "payload": "tree 291441ecd6c8cf664aa06327901876e715d7ef50\nparent ef3900090ef983368b9c9efaaace7dfaff8b0992\nparent b0884c098bc3704f7ec9381ac1670eb923845127\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594923524 -0700\ncommitter GitHub <noreply@github.com> 1594923524 -0700\n\nRollup merge of #74148 - GuillaumeGomez:doc-alias-check, r=Manishearth\n\nMove #[doc(alias)] check in rustc\n\nPart of #73721.\n\nr? @ollie27\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8", "html_url": "https://github.com/rust-lang/rust/commit/61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef3900090ef983368b9c9efaaace7dfaff8b0992", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef3900090ef983368b9c9efaaace7dfaff8b0992", "html_url": "https://github.com/rust-lang/rust/commit/ef3900090ef983368b9c9efaaace7dfaff8b0992"}, {"sha": "b0884c098bc3704f7ec9381ac1670eb923845127", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0884c098bc3704f7ec9381ac1670eb923845127", "html_url": "https://github.com/rust-lang/rust/commit/b0884c098bc3704f7ec9381ac1670eb923845127"}], "stats": {"total": 65, "additions": 34, "deletions": 31}, "files": [{"sha": "3e63a63d9d0f950cc7ad903a2c456a7cf417b1df", "filename": "src/librustc_passes/check_attr.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8/src%2Flibrustc_passes%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8/src%2Flibrustc_passes%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fcheck_attr.rs?ref=61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8", "patch": "@@ -70,6 +70,8 @@ impl CheckAttrVisitor<'tcx> {\n                 self.check_target_feature(attr, span, target)\n             } else if attr.check_name(sym::track_caller) {\n                 self.check_track_caller(&attr.span, attrs, span, target)\n+            } else if attr.check_name(sym::doc) {\n+                self.check_doc_alias(attr)\n             } else {\n                 true\n             };\n@@ -216,6 +218,34 @@ impl CheckAttrVisitor<'tcx> {\n         }\n     }\n \n+    fn check_doc_alias(&self, attr: &Attribute) -> bool {\n+        if let Some(mi) = attr.meta() {\n+            if let Some(list) = mi.meta_item_list() {\n+                for meta in list {\n+                    if meta.check_name(sym::alias) {\n+                        if !meta.is_value_str()\n+                            || meta\n+                                .value_str()\n+                                .map(|s| s.to_string())\n+                                .unwrap_or_else(String::new)\n+                                .is_empty()\n+                        {\n+                            self.tcx\n+                                .sess\n+                                .struct_span_err(\n+                                    meta.span(),\n+                                    \"doc alias attribute expects a string: #[doc(alias = \\\"0\\\")]\",\n+                                )\n+                                .emit();\n+                            return false;\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+        true\n+    }\n+\n     /// Checks if the `#[repr]` attributes on `item` are valid.\n     fn check_repr(\n         &self,"}, {"sha": "9ed5e2697c86a68b67ebc3e46a94449b6fbd64c6", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8", "patch": "@@ -486,33 +486,6 @@ impl Attributes {\n         })\n     }\n \n-    /// Enforce the format of attributes inside `#[doc(...)]`.\n-    pub fn check_doc_attributes(\n-        diagnostic: &::rustc_errors::Handler,\n-        mi: &ast::MetaItem,\n-    ) -> Option<(String, String)> {\n-        mi.meta_item_list().and_then(|list| {\n-            for meta in list {\n-                if meta.check_name(sym::alias) {\n-                    if !meta.is_value_str()\n-                        || meta\n-                            .value_str()\n-                            .map(|s| s.to_string())\n-                            .unwrap_or_else(String::new)\n-                            .is_empty()\n-                    {\n-                        diagnostic.span_err(\n-                            meta.span(),\n-                            \"doc alias attribute expects a string: #[doc(alias = \\\"0\\\")]\",\n-                        );\n-                    }\n-                }\n-            }\n-\n-            None\n-        })\n-    }\n-\n     pub fn has_doc_flag(&self, flag: Symbol) -> bool {\n         for attr in &self.other_attrs {\n             if !attr.check_name(sym::doc) {\n@@ -556,7 +529,6 @@ impl Attributes {\n                 } else {\n                     if attr.check_name(sym::doc) {\n                         if let Some(mi) = attr.meta() {\n-                            Attributes::check_doc_attributes(&diagnostic, &mi);\n                             if let Some(cfg_mi) = Attributes::extract_cfg(&mi) {\n                                 // Extracted #[doc(cfg(...))]\n                                 match Cfg::parse(cfg_mi) {"}, {"sha": "b02cc1a4545b12b31e919576835afdef0062b445", "filename": "src/test/ui/check-doc-alias-attr.rs", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8/src%2Ftest%2Fui%2Fcheck-doc-alias-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8/src%2Ftest%2Fui%2Fcheck-doc-alias-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-doc-alias-attr.rs?ref=61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8", "patch": "@@ -1,3 +1,4 @@\n+#![crate_type = \"lib\"]\n #![feature(doc_alias)]\n \n #[doc(alias = \"foo\")] // ok!", "previous_filename": "src/test/rustdoc-ui/check-doc-alias-attr.rs"}, {"sha": "268230ab44a0ac5d5efcc02c330960773f6fa5c9", "filename": "src/test/ui/check-doc-alias-attr.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8/src%2Ftest%2Fui%2Fcheck-doc-alias-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8/src%2Ftest%2Fui%2Fcheck-doc-alias-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-doc-alias-attr.stderr?ref=61a3f6701b5e1d8cd87be83c2b6a8322f812c8d8", "patch": "@@ -1,17 +1,17 @@\n error: doc alias attribute expects a string: #[doc(alias = \"0\")]\n-  --> $DIR/check-doc-alias-attr.rs:6:7\n+  --> $DIR/check-doc-alias-attr.rs:7:7\n    |\n LL | #[doc(alias)]\n    |       ^^^^^\n \n error: doc alias attribute expects a string: #[doc(alias = \"0\")]\n-  --> $DIR/check-doc-alias-attr.rs:7:7\n+  --> $DIR/check-doc-alias-attr.rs:8:7\n    |\n LL | #[doc(alias = 0)]\n    |       ^^^^^^^^^\n \n error: doc alias attribute expects a string: #[doc(alias = \"0\")]\n-  --> $DIR/check-doc-alias-attr.rs:8:7\n+  --> $DIR/check-doc-alias-attr.rs:9:7\n    |\n LL | #[doc(alias(\"bar\"))]\n    |       ^^^^^^^^^^^^", "previous_filename": "src/test/rustdoc-ui/check-doc-alias-attr.stderr"}]}