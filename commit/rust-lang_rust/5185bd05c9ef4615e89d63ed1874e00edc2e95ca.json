{"sha": "5185bd05c9ef4615e89d63ed1874e00edc2e95ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxODViZDA1YzllZjQ2MTVlODlkNjNlZDE4NzRlMDBlZGMyZTk1Y2E=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-08-30T08:39:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-30T08:39:07Z"}, "message": "Rollup merge of #36054 - mikhail-m1:master2, r=jonathandturner\n\nupdate error E0451 to new format\n\nFixes #35928 as part of #35233.\n\nr? @jonathandturner", "tree": {"sha": "feb3ae6bec9b0608e7f83e45e85101456f9d1f66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/feb3ae6bec9b0608e7f83e45e85101456f9d1f66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5185bd05c9ef4615e89d63ed1874e00edc2e95ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5185bd05c9ef4615e89d63ed1874e00edc2e95ca", "html_url": "https://github.com/rust-lang/rust/commit/5185bd05c9ef4615e89d63ed1874e00edc2e95ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5185bd05c9ef4615e89d63ed1874e00edc2e95ca/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23f769881ac4aa7b8b06006cf632b35bd3adb62d", "url": "https://api.github.com/repos/rust-lang/rust/commits/23f769881ac4aa7b8b06006cf632b35bd3adb62d", "html_url": "https://github.com/rust-lang/rust/commit/23f769881ac4aa7b8b06006cf632b35bd3adb62d"}, {"sha": "46fc80c44e8dfa974210c441eaf53c89dfad031e", "url": "https://api.github.com/repos/rust-lang/rust/commits/46fc80c44e8dfa974210c441eaf53c89dfad031e", "html_url": "https://github.com/rust-lang/rust/commit/46fc80c44e8dfa974210c441eaf53c89dfad031e"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "41b7c51e3009026dae4162849c2a5aa042b0b83e", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5185bd05c9ef4615e89d63ed1874e00edc2e95ca/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5185bd05c9ef4615e89d63ed1874e00edc2e95ca/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=5185bd05c9ef4615e89d63ed1874e00edc2e95ca", "patch": "@@ -384,8 +384,10 @@ impl<'a, 'tcx> PrivacyVisitor<'a, 'tcx> {\n     fn check_field(&mut self, span: Span, def: ty::AdtDef<'tcx>, field: ty::FieldDef<'tcx>) {\n         if def.adt_kind() == ty::AdtKind::Struct &&\n            !field.vis.is_accessible_from(self.curitem, &self.tcx.map) {\n-            span_err!(self.tcx.sess, span, E0451, \"field `{}` of struct `{}` is private\",\n-                      field.name, self.tcx.item_path_str(def.did));\n+            struct_span_err!(self.tcx.sess, span, E0451, \"field `{}` of struct `{}` is private\",\n+                      field.name, self.tcx.item_path_str(def.did))\n+                .span_label(span, &format!(\"field `{}` is private\", field.name))\n+                .emit();\n         }\n     }\n \n@@ -425,14 +427,19 @@ impl<'a, 'tcx, 'v> Visitor<'v> for PrivacyVisitor<'a, 'tcx> {\n                 let method = self.tcx.tables.borrow().method_map[&method_call];\n                 self.check_method(expr.span, method.def_id);\n             }\n-            hir::ExprStruct(..) => {\n+            hir::ExprStruct(_, ref fields, _) => {\n                 let adt = self.tcx.expr_ty(expr).ty_adt_def().unwrap();\n                 let variant = adt.variant_of_def(self.tcx.expect_def(expr.id));\n                 // RFC 736: ensure all unmentioned fields are visible.\n                 // Rather than computing the set of unmentioned fields\n                 // (i.e. `all_fields - fields`), just check them all.\n-                for field in &variant.fields {\n-                    self.check_field(expr.span, adt, field);\n+                for field in variant.fields.iter() {\n+                    let span = if let Some(f) = fields.iter().find(|f| f.name.node == field.name) {\n+                        f.span\n+                    } else {\n+                        expr.span\n+                    };\n+                    self.check_field(span, adt, field);\n                 }\n             }\n             hir::ExprPath(..) => {\n@@ -491,7 +498,7 @@ impl<'a, 'tcx, 'v> Visitor<'v> for PrivacyVisitor<'a, 'tcx> {\n                 let adt = self.tcx.pat_ty(pattern).ty_adt_def().unwrap();\n                 let variant = adt.variant_of_def(self.tcx.expect_def(pattern.id));\n                 for field in fields {\n-                    self.check_field(pattern.span, adt, variant.field_named(field.node.name));\n+                    self.check_field(field.span, adt, variant.field_named(field.node.name));\n                 }\n             }\n             PatKind::TupleStruct(_, ref fields, ddpos) => {"}, {"sha": "f7b106d160dae78d1c0fdc87997a8314d639fbbf", "filename": "src/test/compile-fail/E0451.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5185bd05c9ef4615e89d63ed1874e00edc2e95ca/src%2Ftest%2Fcompile-fail%2FE0451.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5185bd05c9ef4615e89d63ed1874e00edc2e95ca/src%2Ftest%2Fcompile-fail%2FE0451.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0451.rs?ref=5185bd05c9ef4615e89d63ed1874e00edc2e95ca", "patch": "@@ -13,8 +13,24 @@ mod Bar {\n         pub a: isize,\n         b: isize,\n     }\n+\n+    pub struct FooTuple (\n+        pub isize,\n+        isize,\n+    );\n+}\n+\n+fn pat_match(foo: Bar::Foo) {\n+    let Bar::Foo{a:a, b:b} = foo; //~ ERROR E0451\n+                                  //~^ NOTE field `b` is private\n+}\n+\n+fn pat_match_tuple(foo: Bar::FooTuple) {\n+    let Bar::FooTuple(a,b) = foo; //~ ERROR E0451\n+                                  //~^ NOTE field `1` is private\n }\n \n fn main() {\n     let f = Bar::Foo{ a: 0, b: 0 }; //~ ERROR E0451\n+                                    //~^ NOTE field `b` is private\n }"}]}