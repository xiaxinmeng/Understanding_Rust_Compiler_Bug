{"sha": "0a18a050b50da53145e43fea9b403eec23ca36c7", "node_id": "C_kwDOAAsO6NoAKDBhMThhMDUwYjUwZGE1MzE0NWU0M2ZlYTliNDAzZWVjMjNjYTM2Yzc", "commit": {"author": {"name": "bellau", "email": "laurent.belmonte@gmail.com", "date": "2022-02-13T08:09:44Z"}, "committer": {"name": "bellau", "email": "laurent.belmonte@gmail.com", "date": "2022-02-13T08:09:44Z"}, "message": "fix handle static async and static async move", "tree": {"sha": "5bd34773f4d3bd99eb5119352c394d95a6e69abc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bd34773f4d3bd99eb5119352c394d95a6e69abc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a18a050b50da53145e43fea9b403eec23ca36c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a18a050b50da53145e43fea9b403eec23ca36c7", "html_url": "https://github.com/rust-lang/rust/commit/0a18a050b50da53145e43fea9b403eec23ca36c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a18a050b50da53145e43fea9b403eec23ca36c7/comments", "author": {"login": "bellau", "id": 475393, "node_id": "MDQ6VXNlcjQ3NTM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/475393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bellau", "html_url": "https://github.com/bellau", "followers_url": "https://api.github.com/users/bellau/followers", "following_url": "https://api.github.com/users/bellau/following{/other_user}", "gists_url": "https://api.github.com/users/bellau/gists{/gist_id}", "starred_url": "https://api.github.com/users/bellau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bellau/subscriptions", "organizations_url": "https://api.github.com/users/bellau/orgs", "repos_url": "https://api.github.com/users/bellau/repos", "events_url": "https://api.github.com/users/bellau/events{/privacy}", "received_events_url": "https://api.github.com/users/bellau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bellau", "id": 475393, "node_id": "MDQ6VXNlcjQ3NTM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/475393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bellau", "html_url": "https://github.com/bellau", "followers_url": "https://api.github.com/users/bellau/followers", "following_url": "https://api.github.com/users/bellau/following{/other_user}", "gists_url": "https://api.github.com/users/bellau/gists{/gist_id}", "starred_url": "https://api.github.com/users/bellau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bellau/subscriptions", "organizations_url": "https://api.github.com/users/bellau/orgs", "repos_url": "https://api.github.com/users/bellau/repos", "events_url": "https://api.github.com/users/bellau/events{/privacy}", "received_events_url": "https://api.github.com/users/bellau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ed19d54db4b85374b13ae06d9a6047d0a26f2d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ed19d54db4b85374b13ae06d9a6047d0a26f2d9", "html_url": "https://github.com/rust-lang/rust/commit/3ed19d54db4b85374b13ae06d9a6047d0a26f2d9"}], "stats": {"total": 57, "additions": 54, "deletions": 3}, "files": [{"sha": "b4d88f8d0ed903effc84a48847638732fe7cc2c1", "filename": "crates/parser/src/grammar/expressions/atom.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0a18a050b50da53145e43fea9b403eec23ca36c7/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a18a050b50da53145e43fea9b403eec23ca36c7/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=0a18a050b50da53145e43fea9b403eec23ca36c7", "patch": "@@ -74,7 +74,14 @@ pub(super) fn atom_expr(p: &mut Parser, r: Restrictions) -> Option<(CompletedMar\n         T![|] => closure_expr(p),\n         T![move] if la == T![|] => closure_expr(p),\n         T![async] if la == T![|] || (la == T![move] && p.nth(2) == T![|]) => closure_expr(p),\n-        T![static] if la == T![|] || (la == T![move] && p.nth(2) == T![|]) => closure_expr(p),\n+        T![static]\n+            if la == T![|]\n+                || (la == T![move] && p.nth(2) == T![|])\n+                || (la == T![async] && p.nth(2) == T![|])\n+                || (la == T![async] && p.nth(2) == T![move] && p.nth(3) == T![|]) =>\n+        {\n+            closure_expr(p)\n+        }\n         T![if] => if_expr(p),\n \n         T![loop] => loop_expr(p, None),\n@@ -237,6 +244,8 @@ fn array_expr(p: &mut Parser) -> CompletedMarker {\n //     async move || {};\n //     static || {};\n //     static move || {};\n+//     static async || {};\n+//     static async move || {};\n // }\n fn closure_expr(p: &mut Parser) -> CompletedMarker {\n     assert!(\n@@ -246,17 +255,23 @@ fn closure_expr(p: &mut Parser) -> CompletedMarker {\n             || (p.at(T![async]) && p.nth(1) == T![move] && p.nth(2) == T![|])\n             || (p.at(T![static]) && p.nth(1) == T![|])\n             || (p.at(T![static]) && p.nth(1) == T![move] && p.nth(2) == T![|])\n+            || (p.at(T![static]) && p.nth(1) == T![async] && p.nth(2) == T![|])\n+            || (p.at(T![static])\n+                && p.nth(1) == T![async]\n+                && p.nth(2) == T![move]\n+                && p.nth(3) == T![|])\n     );\n     let m = p.start();\n-    p.eat(T![async]);\n     p.eat(T![static]);\n+    p.eat(T![async]);\n     p.eat(T![move]);\n     params::param_list_closure(p);\n     if opt_ret_type(p) {\n         // test lambda_ret_block\n         // fn main() { || -> i32 { 92 }(); }\n         block_expr(p);\n     } else if p.at_ts(EXPR_FIRST) {\n+        println!(\"gg\");\n         expr(p);\n     } else {\n         p.error(\"expected expression\");"}, {"sha": "c9e5d42392e88d8f878d03017ea691df378cde28", "filename": "crates/parser/src/grammar/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a18a050b50da53145e43fea9b403eec23ca36c7/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a18a050b50da53145e43fea9b403eec23ca36c7/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs?ref=0a18a050b50da53145e43fea9b403eec23ca36c7", "patch": "@@ -230,7 +230,7 @@ fn opt_item_without_modifiers(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n         IDENT if p.at_contextual_kw(T![macro_rules]) && p.nth(1) == BANG => macro_rules(p, m),\n \n         T![const] if (la == IDENT || la == T![_] || la == T![mut]) => consts::konst(p, m),\n-        T![static] if (la != PIPE && la != T![move]) => consts::static_(p, m),\n+        T![static] if (la != PIPE && la != T![move] && la != T![async]) => consts::static_(p, m),\n \n         _ => return Err(m),\n     };"}, {"sha": "d01f9216642b2a0ff3609069c0585011867693dd", "filename": "crates/parser/test_data/parser/inline/ok/0106_lambda_expr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a18a050b50da53145e43fea9b403eec23ca36c7/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a18a050b50da53145e43fea9b403eec23ca36c7/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rs?ref=0a18a050b50da53145e43fea9b403eec23ca36c7", "patch": "@@ -8,4 +8,6 @@ fn foo() {\n     async move || {};\n     static || {};\n     static move || {};\n+    static async || {};\n+    static async move || {};\n }"}, {"sha": "bc54b018697be6a39ef65969c3dbe5cd54d69471", "filename": "crates/parser/test_data/parser/inline/ok/0106_lambda_expr.txt", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0a18a050b50da53145e43fea9b403eec23ca36c7/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0a18a050b50da53145e43fea9b403eec23ca36c7/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.txt?ref=0a18a050b50da53145e43fea9b403eec23ca36c7", "patch": "@@ -165,6 +165,40 @@ SOURCE_FILE\n                 L_CURLY \"{\"\n                 R_CURLY \"}\"\n           SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CLOSURE_EXPR\n+            STATIC_KW \"static\"\n+            WHITESPACE \" \"\n+            ASYNC_KW \"async\"\n+            WHITESPACE \" \"\n+            PARAM_LIST\n+              PIPE \"|\"\n+              PIPE \"|\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                R_CURLY \"}\"\n+          SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CLOSURE_EXPR\n+            STATIC_KW \"static\"\n+            WHITESPACE \" \"\n+            ASYNC_KW \"async\"\n+            WHITESPACE \" \"\n+            MOVE_KW \"move\"\n+            WHITESPACE \" \"\n+            PARAM_LIST\n+              PIPE \"|\"\n+              PIPE \"|\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                R_CURLY \"}\"\n+          SEMICOLON \";\"\n         WHITESPACE \"\\n\"\n         R_CURLY \"}\"\n   WHITESPACE \"\\n\""}]}