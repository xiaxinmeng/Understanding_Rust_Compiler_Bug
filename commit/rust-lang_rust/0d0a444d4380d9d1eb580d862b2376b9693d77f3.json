{"sha": "0d0a444d4380d9d1eb580d862b2376b9693d77f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkMGE0NDRkNDM4MGQ5ZDFlYjU4MGQ4NjJiMjM3NmI5NjkzZDc3ZjM=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-10-10T21:53:31Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-10-10T21:53:43Z"}, "message": "Remove `as_original_file`", "tree": {"sha": "c51b9acd97d0f3a336a8473b743e468cd570224c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c51b9acd97d0f3a336a8473b743e468cd570224c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d0a444d4380d9d1eb580d862b2376b9693d77f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d0a444d4380d9d1eb580d862b2376b9693d77f3", "html_url": "https://github.com/rust-lang/rust/commit/0d0a444d4380d9d1eb580d862b2376b9693d77f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d0a444d4380d9d1eb580d862b2376b9693d77f3/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04741ae2bc70bc002f62b9b142057dd6eabcec75", "url": "https://api.github.com/repos/rust-lang/rust/commits/04741ae2bc70bc002f62b9b142057dd6eabcec75", "html_url": "https://github.com/rust-lang/rust/commit/04741ae2bc70bc002f62b9b142057dd6eabcec75"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "85b022744608398e6863239fd36ef304ae26a2a3", "filename": "crates/ra_hir/src/ids.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0d0a444d4380d9d1eb580d862b2376b9693d77f3/crates%2Fra_hir%2Fsrc%2Fids.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d0a444d4380d9d1eb580d862b2376b9693d77f3/crates%2Fra_hir%2Fsrc%2Fids.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fids.rs?ref=0d0a444d4380d9d1eb580d862b2376b9693d77f3", "patch": "@@ -50,16 +50,6 @@ impl HirFileId {\n         }\n     }\n \n-    /// XXX: this is a temporary function, which should go away when we implement the\n-    /// nameresolution+macro expansion combo. Prefer using `original_file` if\n-    /// possible.\n-    pub fn as_original_file(self) -> FileId {\n-        match self.0 {\n-            HirFileIdRepr::File(file_id) => file_id,\n-            HirFileIdRepr::Macro(_r) => panic!(\"macro generated file: {:?}\", self),\n-        }\n-    }\n-\n     /// Get the crate which the macro lives in, if it is a macro file.\n     pub(crate) fn macro_crate(self, db: &impl AstDatabase) -> Option<Crate> {\n         match self.0 {"}]}