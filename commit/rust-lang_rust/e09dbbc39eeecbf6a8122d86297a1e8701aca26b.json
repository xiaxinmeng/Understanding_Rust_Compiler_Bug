{"sha": "e09dbbc39eeecbf6a8122d86297a1e8701aca26b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwOWRiYmMzOWVlZWNiZjZhODEyMmQ4NjI5N2ExZTg3MDFhY2EyNmI=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-03-17T09:05:23Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-03-17T10:17:11Z"}, "message": "Add an example of lossy decoding to str::Utf8Error docs", "tree": {"sha": "d4be529a9124e90e44b35cdf84c4427e3bed3556", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4be529a9124e90e44b35cdf84c4427e3bed3556"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e09dbbc39eeecbf6a8122d86297a1e8701aca26b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e09dbbc39eeecbf6a8122d86297a1e8701aca26b", "html_url": "https://github.com/rust-lang/rust/commit/e09dbbc39eeecbf6a8122d86297a1e8701aca26b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e09dbbc39eeecbf6a8122d86297a1e8701aca26b/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc34ca1c9787fde84116637a0cee92fc5e375e3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc34ca1c9787fde84116637a0cee92fc5e375e3d", "html_url": "https://github.com/rust-lang/rust/commit/cc34ca1c9787fde84116637a0cee92fc5e375e3d"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "1185b7acaae1f3101d34307983185843208ae8f0", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/e09dbbc39eeecbf6a8122d86297a1e8701aca26b/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e09dbbc39eeecbf6a8122d86297a1e8701aca26b/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=e09dbbc39eeecbf6a8122d86297a1e8701aca26b", "patch": "@@ -165,6 +165,37 @@ Section: Creating a string\n ///\n /// [`String`]: ../../std/string/struct.String.html#method.from_utf8\n /// [`&str`]: ../../std/str/fn.from_utf8.html\n+///\n+/// # Examples\n+///\n+/// This error type\u2019s methods can be used to create functionality\n+/// similar to `String::from_utf8_lossy` without allocating heap memory:\n+///\n+/// ```\n+/// fn from_utf8_lossy<F>(mut input: &[u8], mut push: F) where F: FnMut(&str) {\n+///     loop {\n+///         match ::std::str::from_utf8(input) {\n+///             Ok(valid) => {\n+///                 push(valid);\n+///                 break\n+///             }\n+///             Err(error) => {\n+///                 let (valid, after_valid) = input.split_at(error.valid_up_to());\n+///                 unsafe {\n+///                     push(::std::str::from_utf8_unchecked(valid))\n+///                 }\n+///                 push(\"\\u{FFFD}\");\n+///\n+///                 if let Some(invalid_sequence_length) = error.error_len() {\n+///                     input = &after_valid[invalid_sequence_length..]\n+///                 } else {\n+///                     break\n+///                 }\n+///             }\n+///         }\n+///     }\n+/// }\n+/// ```\n #[derive(Copy, Eq, PartialEq, Clone, Debug)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Utf8Error {"}]}