{"sha": "77cd993fd1582680cc01ce86d07e52b2e4b34fec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3Y2Q5OTNmZDE1ODI2ODBjYzAxY2U4NmQwN2U1MmIyZTRiMzRmZWM=", "commit": {"author": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2017-11-09T16:42:41Z"}, "committer": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2017-11-09T16:42:41Z"}, "message": "add run-pass tests", "tree": {"sha": "d4ea5b9e73da9b82ee5c4f02805e2eff350322bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4ea5b9e73da9b82ee5c4f02805e2eff350322bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77cd993fd1582680cc01ce86d07e52b2e4b34fec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77cd993fd1582680cc01ce86d07e52b2e4b34fec", "html_url": "https://github.com/rust-lang/rust/commit/77cd993fd1582680cc01ce86d07e52b2e4b34fec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77cd993fd1582680cc01ce86d07e52b2e4b34fec/comments", "author": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddc21d567e50437d70f7f56377834135a2d34e6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddc21d567e50437d70f7f56377834135a2d34e6e", "html_url": "https://github.com/rust-lang/rust/commit/ddc21d567e50437d70f7f56377834135a2d34e6e"}], "stats": {"total": 115, "additions": 115, "deletions": 0}, "files": [{"sha": "755a8d7ea294fc4786010e9f63fb5cc5269eb968", "filename": "src/test/run-pass/arbitrary_self_types_silly.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/77cd993fd1582680cc01ce86d07e52b2e4b34fec/src%2Ftest%2Frun-pass%2Farbitrary_self_types_silly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77cd993fd1582680cc01ce86d07e52b2e4b34fec/src%2Ftest%2Frun-pass%2Farbitrary_self_types_silly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Farbitrary_self_types_silly.rs?ref=77cd993fd1582680cc01ce86d07e52b2e4b34fec", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![feature(arbitrary_self_types)]\n+\n+struct Foo;\n+struct Bar;\n+\n+impl std::ops::Deref for Bar {\n+    type Target = Foo;\n+\n+    fn deref(&self) -> &Foo {\n+        &Foo\n+    }\n+}\n+\n+impl Foo {\n+    fn bar(self: Bar) -> i32 { 3 }\n+}\n+\n+fn main() {\n+    assert_eq!(3, Bar.bar());\n+}"}, {"sha": "961717de0463e32e7e862ea32930c6d81b7b6d38", "filename": "src/test/run-pass/arbitrary_self_types_struct.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/77cd993fd1582680cc01ce86d07e52b2e4b34fec/src%2Ftest%2Frun-pass%2Farbitrary_self_types_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77cd993fd1582680cc01ce86d07e52b2e4b34fec/src%2Ftest%2Frun-pass%2Farbitrary_self_types_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Farbitrary_self_types_struct.rs?ref=77cd993fd1582680cc01ce86d07e52b2e4b34fec", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![feature(arbitrary_self_types)]\n+\n+use std::rc::Rc;\n+\n+struct Foo {\n+    x: i32,\n+    y: i32,\n+}\n+\n+impl Foo {\n+    fn x(self: &Rc<Self>) -> i32 {\n+        self.x\n+    }\n+\n+    fn y(self: Rc<Self>) -> i32 {\n+        self.y\n+    }\n+}\n+\n+fn main() {\n+    let foo = Rc::new(Foo {x: 3, y: 4});\n+    assert_eq!(3, foo.x());\n+    assert_eq!(4, foo.y());\n+}"}, {"sha": "e74d614dd6bd9eb1aa1a316d1a19a884906259ce", "filename": "src/test/run-pass/arbitrary_self_types_trait.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/77cd993fd1582680cc01ce86d07e52b2e4b34fec/src%2Ftest%2Frun-pass%2Farbitrary_self_types_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77cd993fd1582680cc01ce86d07e52b2e4b34fec/src%2Ftest%2Frun-pass%2Farbitrary_self_types_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Farbitrary_self_types_trait.rs?ref=77cd993fd1582680cc01ce86d07e52b2e4b34fec", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![feature(arbitrary_self_types)]\n+\n+use std::rc::Rc;\n+\n+trait Trait {\n+    fn trait_method<'a>(self: &'a Box<Rc<Self>>) -> &'a [i32];\n+}\n+\n+impl Trait for Vec<i32> {\n+    fn trait_method<'a>(self: &'a Box<Rc<Self>>) -> &'a [i32] {\n+        &***self\n+    }\n+}\n+\n+fn main() {\n+    let v = vec![1,2,3];\n+\n+    assert_eq!(&[1,2,3], Box::new(Rc::new(v)).trait_method());\n+}"}, {"sha": "8dc40e7aab111b8a9f6a2f4e3c992446bdf7a8e0", "filename": "src/test/run-pass/arbitrary_self_types_unsized_struct.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/77cd993fd1582680cc01ce86d07e52b2e4b34fec/src%2Ftest%2Frun-pass%2Farbitrary_self_types_unsized_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77cd993fd1582680cc01ce86d07e52b2e4b34fec/src%2Ftest%2Frun-pass%2Farbitrary_self_types_unsized_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Farbitrary_self_types_unsized_struct.rs?ref=77cd993fd1582680cc01ce86d07e52b2e4b34fec", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![feature(arbitrary_self_types)]\n+\n+use std::rc::Rc;\n+\n+struct Foo<T: ?Sized>(T);\n+\n+impl Foo<[u8]> {\n+    fn len(self: Rc<Self>) -> usize {\n+        self.0.len()\n+    }\n+}\n+\n+fn main() {\n+    let rc = Rc::new(Foo([1u8,2,3])) as Rc<Foo<[u8]>>;\n+    assert_eq!(3, rc.len());\n+}"}]}