{"sha": "c0874dbd21c89854c68e8db7201f5557ab5e6259", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwODc0ZGJkMjFjODk4NTRjNjhlOGRiNzIwMWY1NTU3YWI1ZTYyNTk=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-09T00:24:07Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-09T01:03:27Z"}, "message": "Adding try_send for pipes::chan and pipes::shared_chan", "tree": {"sha": "c4c12ac64e31225391906cb39f8d32c88b056ec3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4c12ac64e31225391906cb39f8d32c88b056ec3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0874dbd21c89854c68e8db7201f5557ab5e6259", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0874dbd21c89854c68e8db7201f5557ab5e6259", "html_url": "https://github.com/rust-lang/rust/commit/c0874dbd21c89854c68e8db7201f5557ab5e6259", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0874dbd21c89854c68e8db7201f5557ab5e6259/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1beb1f491fdd2d05ca2c05edc966535064c98cf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1beb1f491fdd2d05ca2c05edc966535064c98cf4", "html_url": "https://github.com/rust-lang/rust/commit/1beb1f491fdd2d05ca2c05edc966535064c98cf4"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "e455d22e70e9f08facd8596164c680074a50bffc", "filename": "src/libcore/pipes.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c0874dbd21c89854c68e8db7201f5557ab5e6259/src%2Flibcore%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0874dbd21c89854c68e8db7201f5557ab5e6259/src%2Flibcore%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpipes.rs?ref=c0874dbd21c89854c68e8db7201f5557ab5e6259", "patch": "@@ -877,6 +877,9 @@ trait channel<T: send> {\n \n     /// Sends a message.\n     fn send(+x: T);\n+\n+    /// Sends a message, or report if the receiver has closed the connection.\n+    fn try_send(+x: T) -> bool;\n }\n \n /// A trait for things that can receive multiple messages.\n@@ -931,6 +934,18 @@ impl chan<T: send> of channel<T> for chan<T> {\n         self.endp = some(\n             streamp::client::data(unwrap(endp), x))\n     }\n+\n+    fn try_send(+x: T) -> bool {\n+        let mut endp = none;\n+        endp <-> self.endp;\n+        match move streamp::client::try_data(unwrap(endp), x) {\n+            some(next) => {\n+                self.endp = some(move_it!(next));\n+                true\n+            }\n+            none => false\n+        }\n+    }\n }\n \n impl port<T: send> of recv<T> for port<T> {\n@@ -1047,6 +1062,15 @@ impl chan<T: send> of channel<T> for shared_chan<T> {\n             chan.send(option::unwrap(x))\n         }\n     }\n+\n+    fn try_send(+x: T) -> bool {\n+        let mut xx = some(x);\n+        do self.with |chan| {\n+            let mut x = none;\n+            x <-> xx;\n+            chan.try_send(option::unwrap(x))\n+        }\n+    }\n }\n \n /// Converts a `chan` into a `shared_chan`."}]}