{"sha": "4f655382c8f85f95d7bb05a6be46417fad42679a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNjU1MzgyYzhmODVmOTVkN2JiMDVhNmJlNDY0MTdmYWQ0MjY3OWE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-11-12T07:50:16Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-11-12T07:50:16Z"}, "message": "Fixup #29776", "tree": {"sha": "5643950712891e2b97cd6605f40147cfd2e7f044", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5643950712891e2b97cd6605f40147cfd2e7f044"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f655382c8f85f95d7bb05a6be46417fad42679a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f655382c8f85f95d7bb05a6be46417fad42679a", "html_url": "https://github.com/rust-lang/rust/commit/4f655382c8f85f95d7bb05a6be46417fad42679a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f655382c8f85f95d7bb05a6be46417fad42679a/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8844190801a8f9178ed593d3cd21c5cfbc8d660e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8844190801a8f9178ed593d3cd21c5cfbc8d660e", "html_url": "https://github.com/rust-lang/rust/commit/8844190801a8f9178ed593d3cd21c5cfbc8d660e"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "75bcd431ec8e190ca5b9a45676bfdd70cfacc462", "filename": "src/test/run-pass/issue-29740.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4f655382c8f85f95d7bb05a6be46417fad42679a/src%2Ftest%2Frun-pass%2Fissue-29740.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f655382c8f85f95d7bb05a6be46417fad42679a/src%2Ftest%2Frun-pass%2Fissue-29740.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-29740.rs?ref=4f655382c8f85f95d7bb05a6be46417fad42679a", "patch": "@@ -242,7 +242,8 @@ fn key_from_string(key_string: &str, location: u32) -> Option<Key> {\n         \"}\" => Some(Key::RightBracket),\n         \"]\" => Some(Key::RightBracket),\n         \"Escape\" => Some(Key::Escape),\n-        \"Enter\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_STANDARD => Some(Key::Enter),\n+        \"Enter\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_STANDARD\n+                => Some(Key::Enter),\n         \"Tab\" => Some(Key::Tab),\n         \"Backspace\" => Some(Key::Backspace),\n         \"Insert\" => Some(Key::Insert),\n@@ -300,16 +301,23 @@ fn key_from_string(key_string: &str, location: u32) -> Option<Key> {\n         \"*\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_NUMPAD => Some(Key::KpMultiply),\n         \"-\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_NUMPAD => Some(Key::KpSubtract),\n         \"+\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_NUMPAD => Some(Key::KpAdd),\n-        \"Enter\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_NUMPAD => Some(Key::KpEnter),\n+        \"Enter\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_NUMPAD\n+                => Some(Key::KpEnter),\n         \"=\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_NUMPAD => Some(Key::KpEqual),\n-        \"Shift\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_LEFT => Some(Key::LeftShift),\n-        \"Control\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_LEFT => Some(Key::LeftControl),\n+        \"Shift\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_LEFT\n+                => Some(Key::LeftShift),\n+        \"Control\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_LEFT\n+                => Some(Key::LeftControl),\n         \"Alt\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_LEFT => Some(Key::LeftAlt),\n-        \"Super\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_LEFT => Some(Key::LeftSuper),\n-        \"Shift\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_RIGHT => Some(Key::RightShift),\n-        \"Control\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_RIGHT => Some(Key::RightControl),\n+        \"Super\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_LEFT\n+                => Some(Key::LeftSuper),\n+        \"Shift\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_RIGHT\n+                => Some(Key::RightShift),\n+        \"Control\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_RIGHT\n+                => Some(Key::RightControl),\n         \"Alt\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_RIGHT => Some(Key::RightAlt),\n-        \"Super\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_RIGHT => Some(Key::RightSuper),\n+        \"Super\" if location == KeyboardEventConstants::DOM_KEY_LOCATION_RIGHT\n+                => Some(Key::RightSuper),\n         \"ContextMenu\" => Some(Key::Menu),\n         _ => None\n     }"}]}