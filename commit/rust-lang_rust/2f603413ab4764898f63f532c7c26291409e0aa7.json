{"sha": "2f603413ab4764898f63f532c7c26291409e0aa7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNjAzNDEzYWI0NzY0ODk4ZjYzZjUzMmM3YzI2MjkxNDA5ZTBhYTc=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2018-04-12T20:48:48Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2018-04-12T20:48:48Z"}, "message": "improve Atomic*::fetch_update docs", "tree": {"sha": "4d8605042833db2bc38b6402d45f0e55248464a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d8605042833db2bc38b6402d45f0e55248464a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f603413ab4764898f63f532c7c26291409e0aa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f603413ab4764898f63f532c7c26291409e0aa7", "html_url": "https://github.com/rust-lang/rust/commit/2f603413ab4764898f63f532c7c26291409e0aa7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f603413ab4764898f63f532c7c26291409e0aa7/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c537493d01694cc6e0a614dff12c475055aa2b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c537493d01694cc6e0a614dff12c475055aa2b4", "html_url": "https://github.com/rust-lang/rust/commit/6c537493d01694cc6e0a614dff12c475055aa2b4"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "62e0979c5fefc077f9171c0595136fc5a297d29c", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2f603413ab4764898f63f532c7c26291409e0aa7/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f603413ab4764898f63f532c7c26291409e0aa7/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=2f603413ab4764898f63f532c7c26291409e0aa7", "patch": "@@ -1425,8 +1425,8 @@ assert_eq!(foo.load(Ordering::SeqCst), 0b011110);\n \n             doc_comment! {\n                 concat!(\"Fetches the value, and applies a function to it that returns an optional\n-new value. Returns a `Result` (`Ok(_)` if the function returned `Some(_)`, else `Err(_)`) of the\n-previous value.\n+new value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else\n+`Err(previous_value)`.\n \n Note: This may call the function multiple times if the value has been changed from other threads in\n the meantime, as long as the function returns `Some(_)`, but the function will have been applied"}]}