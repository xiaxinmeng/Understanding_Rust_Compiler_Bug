{"sha": "8a39dffa7f3afc974073d8f62b9dfcb419e03f4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhMzlkZmZhN2YzYWZjOTc0MDczZDhmNjJiOWRmY2I0MTllMDNmNGU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-06-04T04:37:02Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-06-04T04:37:02Z"}, "message": "Rollup merge of #25987 - pnkfelix:fix-dropck-doc-formatto, r=Manishearth\n\nFix the dropck doc formatting to avoid hitting four-space indent.\r\n\r\nThis was causing `rustdoc` to interpret the part starting with `(A.) ...` as a code block based on its four-space indentation, which then was treated by `rustdoc` as a *Rust* code snippet, and thus was attempting (and failing) to parse my english as Rust code. Thus causing the compiler-docs build to fail.\r\n\r\nIndependently, we should probably change `rustdoc` to not interpret four-space indents as code that needs to be tested; it seems too perilous to me at least.\r\n\r\n(But the formatting here needed to be changed either way.)\r\n\r\ncc Issue #25699.", "tree": {"sha": "e574c39b9628d3180e541690e7943079d5edae7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e574c39b9628d3180e541690e7943079d5edae7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a39dffa7f3afc974073d8f62b9dfcb419e03f4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a39dffa7f3afc974073d8f62b9dfcb419e03f4e", "html_url": "https://github.com/rust-lang/rust/commit/8a39dffa7f3afc974073d8f62b9dfcb419e03f4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a39dffa7f3afc974073d8f62b9dfcb419e03f4e/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c2806caaedc9b83868b14dcaf5f33420be9d368", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c2806caaedc9b83868b14dcaf5f33420be9d368", "html_url": "https://github.com/rust-lang/rust/commit/8c2806caaedc9b83868b14dcaf5f33420be9d368"}, {"sha": "01ddbe9f33f409a5274d36cd7f0609263eab4764", "url": "https://api.github.com/repos/rust-lang/rust/commits/01ddbe9f33f409a5274d36cd7f0609263eab4764", "html_url": "https://github.com/rust-lang/rust/commit/01ddbe9f33f409a5274d36cd7f0609263eab4764"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "28e48cb6f2544f6c4db7a9aef09d67b39f097d03", "filename": "src/librustc_typeck/check/dropck.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8a39dffa7f3afc974073d8f62b9dfcb419e03f4e/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a39dffa7f3afc974073d8f62b9dfcb419e03f4e/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs?ref=8a39dffa7f3afc974073d8f62b9dfcb419e03f4e", "patch": "@@ -238,14 +238,12 @@ fn ensure_drop_predicates_are_implied_by_item_defn<'tcx>(\n /// Let `v` be some value (either temporary or named) and 'a be some\n /// lifetime (scope). If the type of `v` owns data of type `D`, where\n ///\n-///   (1.) `D` has a lifetime- or type-parametric Drop implementation, and\n-///   (2.) the structure of `D` can reach a reference of type `&'a _`, and\n-///   (3.) either:\n-///\n-///     (A.) the Drop impl for `D` instantiates `D` at 'a directly,\n+/// * (1.) `D` has a lifetime- or type-parametric Drop implementation, and\n+/// * (2.) the structure of `D` can reach a reference of type `&'a _`, and\n+/// * (3.) either:\n+///   * (A.) the Drop impl for `D` instantiates `D` at 'a directly,\n ///          i.e. `D<'a>`, or,\n-///\n-///     (B.) the Drop impl for `D` has some type parameter with a\n+///   * (B.) the Drop impl for `D` has some type parameter with a\n ///          trait bound `T` where `T` is a trait that has at least\n ///          one method,\n ///"}]}