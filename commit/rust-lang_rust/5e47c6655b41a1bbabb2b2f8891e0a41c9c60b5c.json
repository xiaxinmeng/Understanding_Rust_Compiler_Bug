{"sha": "5e47c6655b41a1bbabb2b2f8891e0a41c9c60b5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNDdjNjY1NWI0MWExYmJhYmIyYjJmODg5MWUwYTQxYzljNjBiNWM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-03-21T16:57:22Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-03-21T16:57:22Z"}, "message": "workaround bugs in pretty-printer so that we can pass check-stage2-pretty-rpass.", "tree": {"sha": "a58406af7891d8b96ec24cc2e522a7f61e7ebb78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a58406af7891d8b96ec24cc2e522a7f61e7ebb78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e47c6655b41a1bbabb2b2f8891e0a41c9c60b5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e47c6655b41a1bbabb2b2f8891e0a41c9c60b5c", "html_url": "https://github.com/rust-lang/rust/commit/5e47c6655b41a1bbabb2b2f8891e0a41c9c60b5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e47c6655b41a1bbabb2b2f8891e0a41c9c60b5c/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61ff823c63d90f323872862053e928b5a9c874e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/61ff823c63d90f323872862053e928b5a9c874e4", "html_url": "https://github.com/rust-lang/rust/commit/61ff823c63d90f323872862053e928b5a9c874e4"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "4ff058f336661253f4a2f07380ec3cdd1a815d36", "filename": "src/test/run-pass/shift-near-oflo.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5e47c6655b41a1bbabb2b2f8891e0a41c9c60b5c/src%2Ftest%2Frun-pass%2Fshift-near-oflo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e47c6655b41a1bbabb2b2f8891e0a41c9c60b5c/src%2Ftest%2Frun-pass%2Fshift-near-oflo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fshift-near-oflo.rs?ref=5e47c6655b41a1bbabb2b2f8891e0a41c9c60b5c", "patch": "@@ -26,18 +26,18 @@ fn test_left_shift() {\n \n     macro_rules! tests {\n         ($iN:ty, $uN:ty, $max_rhs:expr, $expect_i:expr, $expect_u:expr) => { {\n-            let x = 1 as $iN << id(0);\n+            let x = (1 as $iN) << id(0);\n             assert_eq!(x, 1);\n-            let x = 1 as $uN << id(0);\n+            let x = (1 as $uN) << id(0);\n             assert_eq!(x, 1);\n-            let x = 1 as $iN << id($max_rhs);\n+            let x = (1 as $iN) << id($max_rhs);\n             assert_eq!(x, $expect_i);\n-            let x = 1 as $uN << id($max_rhs);\n+            let x = (1 as $uN) << id($max_rhs);\n             assert_eq!(x, $expect_u);\n             // high-order bits on LHS are silently discarded without panic.\n-            let x = 3 as $iN << id($max_rhs);\n+            let x = (3 as $iN) << id($max_rhs);\n             assert_eq!(x, $expect_i);\n-            let x = 3 as $uN << id($max_rhs);\n+            let x = (3 as $uN) << id($max_rhs);\n             assert_eq!(x, $expect_u);\n         } }\n     }\n@@ -71,23 +71,23 @@ fn test_right_shift() {\n         ($iN:ty, $uN:ty, $max_rhs:expr,\n          $signbit_i:expr, $highbit_i:expr, $highbit_u:expr) =>\n         { {\n-            let x = 1 as $iN >> id(0);\n+            let x = (1 as $iN) >> id(0);\n             assert_eq!(x, 1);\n-            let x = 1 as $uN >> id(0);\n+            let x = (1 as $uN) >> id(0);\n             assert_eq!(x, 1);\n-            let x = $highbit_i >> id($max_rhs-1);\n+            let x = ($highbit_i) >> id($max_rhs-1);\n             assert_eq!(x, 1);\n-            let x = $highbit_u >> id($max_rhs);\n+            let x = ($highbit_u) >> id($max_rhs);\n             assert_eq!(x, 1);\n             // sign-bit is carried by arithmetic right shift\n-            let x = $signbit_i >> id($max_rhs);\n+            let x = ($signbit_i) >> id($max_rhs);\n             assert_eq!(x, -1);\n             // low-order bits on LHS are silently discarded without panic.\n-            let x = $highbit_i + 1 >> id($max_rhs-1);\n+            let x = ($highbit_i + 1) >> id($max_rhs-1);\n             assert_eq!(x, 1);\n-            let x = $highbit_u + 1 >> id($max_rhs);\n+            let x = ($highbit_u + 1) >> id($max_rhs);\n             assert_eq!(x, 1);\n-            let x = $signbit_i + 1 >> id($max_rhs);\n+            let x = ($signbit_i + 1) >> id($max_rhs);\n             assert_eq!(x, -1);\n         } }\n     }"}]}