{"sha": "ec5071931eb68a981d14eefd7f6c39bb16c59596", "node_id": "C_kwDOAAsO6NoAKGVjNTA3MTkzMWViNjhhOTgxZDE0ZWVmZDdmNmMzOWJiMTZjNTk1OTY", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-10-15T10:00:02Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-10-15T10:10:55Z"}, "message": "`unnecessary_sort_by` only warns if argument impl `Ord` trait", "tree": {"sha": "075e3fc3859d335252c0c6890087123224057146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/075e3fc3859d335252c0c6890087123224057146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec5071931eb68a981d14eefd7f6c39bb16c59596", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec5071931eb68a981d14eefd7f6c39bb16c59596", "html_url": "https://github.com/rust-lang/rust/commit/ec5071931eb68a981d14eefd7f6c39bb16c59596", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec5071931eb68a981d14eefd7f6c39bb16c59596/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4996e17b1450fb837ee72db739266187c486c03d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4996e17b1450fb837ee72db739266187c486c03d", "html_url": "https://github.com/rust-lang/rust/commit/4996e17b1450fb837ee72db739266187c486c03d"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "26b56e0f2f316c69b7e53e9f5f50020f25290c3b", "filename": "clippy_lints/src/unnecessary_sort_by.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ec5071931eb68a981d14eefd7f6c39bb16c59596/clippy_lints%2Fsrc%2Funnecessary_sort_by.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec5071931eb68a981d14eefd7f6c39bb16c59596/clippy_lints%2Fsrc%2Funnecessary_sort_by.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_sort_by.rs?ref=ec5071931eb68a981d14eefd7f6c39bb16c59596", "patch": "@@ -1,6 +1,6 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::sugg::Sugg;\n-use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::ty::{implements_trait, is_type_diagnostic_item};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, Mutability, Param, Pat, PatKind, Path, PathSegment, QPath};\n@@ -193,10 +193,15 @@ fn detect_lint(cx: &LateContext<'_>, expr: &Expr<'_>) -> Option<LintTrigger> {\n             let vec_name = Sugg::hir(cx, &args[0], \"..\").to_string();\n             let unstable = name == \"sort_unstable_by\";\n \n+            if_chain! {\n             if let ExprKind::Path(QPath::Resolved(_, Path {\n                 segments: [PathSegment { ident: left_name, .. }], ..\n-            })) = &left_expr.kind {\n-                if left_name == left_ident {\n+            })) = &left_expr.kind;\n+            if left_name == left_ident;\n+            if cx.tcx.get_diagnostic_item(sym::Ord).map_or(false, |id| {\n+                implements_trait(cx, cx.typeck_results().expr_ty(left_expr), id, &[])\n+            });\n+                then {\n                     return Some(LintTrigger::Sort(SortDetection { vec_name, unstable }));\n                 }\n             }"}]}