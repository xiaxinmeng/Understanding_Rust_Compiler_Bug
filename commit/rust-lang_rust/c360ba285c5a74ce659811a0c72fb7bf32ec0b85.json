{"sha": "c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzNjBiYTI4NWM1YTc0Y2U2NTk4MTFhMGM3MmZiN2JmMzJlYzBiODU=", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-02-09T02:24:02Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-02-12T15:31:51Z"}, "message": "Cleanup imports", "tree": {"sha": "e8d6a225017a22ec10d61b7c1867c8fc0b719a18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8d6a225017a22ec10d61b7c1867c8fc0b719a18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "html_url": "https://github.com/rust-lang/rust/commit/c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3216c7656afbada6af3cbf77ef5236a7153f58e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3216c7656afbada6af3cbf77ef5236a7153f58e8", "html_url": "https://github.com/rust-lang/rust/commit/3216c7656afbada6af3cbf77ef5236a7153f58e8"}], "stats": {"total": 141, "additions": 72, "deletions": 69}, "files": [{"sha": "bdf781761cc94085dd4325d02612106a3e738ef8", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -31,7 +31,6 @@\n //! in the HIR, especially for multiple identifiers.\n \n use crate::dep_graph::DepGraph;\n-use errors::Applicability;\n use crate::hir::{self, ParamName};\n use crate::hir::HirVec;\n use crate::hir::map::{DefKey, DefPathData, Definitions};\n@@ -41,14 +40,15 @@ use crate::hir::GenericArg;\n use crate::lint::builtin::{self, PARENTHESIZED_PARAMS_IN_TYPES_AND_MODULES,\n                     ELIDED_LIFETIMES_IN_PATHS};\n use crate::middle::cstore::CrateStore;\n-use rustc_data_structures::fx::FxHashSet;\n-use rustc_data_structures::indexed_vec::IndexVec;\n-use rustc_data_structures::thin_vec::ThinVec;\n-use rustc_data_structures::sync::Lrc;\n use crate::session::Session;\n use crate::session::config::nightly_options;\n use crate::util::common::FN_OUTPUT_NAME;\n use crate::util::nodemap::{DefIdMap, NodeMap};\n+use errors::Applicability;\n+use rustc_data_structures::fx::FxHashSet;\n+use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_data_structures::thin_vec::ThinVec;\n+use rustc_data_structures::sync::Lrc;\n \n use std::collections::{BTreeSet, BTreeMap};\n use std::fmt::Debug;"}, {"sha": "7238551d22e070bfe24e7e12f7900e41e66cdda1", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -10,12 +10,12 @@ pub use self::PrimTy::*;\n pub use self::UnOp::*;\n pub use self::UnsafeSource::*;\n \n-use errors::FatalError;\n use crate::hir::def::Def;\n use crate::hir::def_id::{DefId, DefIndex, LocalDefId, CRATE_DEF_INDEX};\n use crate::util::nodemap::{NodeMap, FxHashSet};\n use crate::mir::mono::Linkage;\n \n+use errors::FatalError;\n use syntax_pos::{Span, DUMMY_SP, symbol::InternedString};\n use syntax::source_map::Spanned;\n use rustc_target::spec::abi::Abi;"}, {"sha": "93c0246474936621d73a6eaad15a7851c1165235", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -50,16 +50,16 @@ use super::region_constraints::GenericKind;\n use super::{InferCtxt, RegionVariableOrigin, SubregionOrigin, TypeTrace, ValuePairs};\n use crate::infer::{self, SuppressRegionErrors};\n \n-use errors::{Applicability, DiagnosticBuilder, DiagnosticStyledString};\n use crate::hir;\n use crate::hir::def_id::DefId;\n use crate::hir::Node;\n use crate::middle::region;\n-use std::{cmp, fmt};\n-use syntax_pos::{Pos, Span};\n use crate::traits::{ObligationCause, ObligationCauseCode};\n use crate::ty::error::TypeError;\n use crate::ty::{self, subst::Subst, Region, Ty, TyCtxt, TyKind, TypeFoldable};\n+use errors::{Applicability, DiagnosticBuilder, DiagnosticStyledString};\n+use std::{cmp, fmt};\n+use syntax_pos::{Pos, Span};\n \n mod note;\n "}, {"sha": "3b822e01a4264cc1adc0ef2a594cbb7180d004f8", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -7,21 +7,12 @@ pub use self::SubregionOrigin::*;\n pub use self::ValuePairs::*;\n pub use crate::ty::IntVarValue;\n \n-use arena::SyncDroplessArena;\n-use errors::DiagnosticBuilder;\n use crate::hir::def_id::DefId;\n use crate::infer::canonical::{Canonical, CanonicalVarValues};\n use crate::middle::free_region::RegionRelations;\n use crate::middle::lang_items;\n use crate::middle::region;\n-use rustc_data_structures::unify as ut;\n use crate::session::config::BorrowckMode;\n-use std::cell::{Cell, Ref, RefCell, RefMut};\n-use std::collections::BTreeMap;\n-use std::fmt;\n-use syntax::ast;\n-use syntax_pos::symbol::InternedString;\n-use syntax_pos::{self, Span};\n use crate::traits::{self, ObligationCause, PredicateObligations, TraitEngine};\n use crate::ty::error::{ExpectedFound, TypeError, UnconstrainedNumeric};\n use crate::ty::fold::TypeFoldable;\n@@ -31,6 +22,16 @@ use crate::ty::{self, GenericParamDefKind, Ty, TyCtxt, CtxtInterners};\n use crate::ty::{FloatVid, IntVid, TyVid};\n use crate::util::nodemap::FxHashMap;\n \n+use arena::SyncDroplessArena;\n+use errors::DiagnosticBuilder;\n+use rustc_data_structures::unify as ut;\n+use std::cell::{Cell, Ref, RefCell, RefMut};\n+use std::collections::BTreeMap;\n+use std::fmt;\n+use syntax::ast;\n+use syntax_pos::symbol::InternedString;\n+use syntax_pos::Span;\n+\n use self::combine::CombineFields;\n use self::lexical_region_resolve::LexicalRegionResolutions;\n use self::outlives::env::OutlivesEnvironment;"}, {"sha": "6f10b0e2c0e67a0a96dffa8e986d784a221157d4", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -4,9 +4,9 @@\n //! compiler code, rather than using their own custom pass. Those\n //! lints are all available in `rustc_lint::builtin`.\n \n-use errors::{Applicability, DiagnosticBuilder};\n use crate::lint::{LintPass, LateLintPass, LintArray};\n use crate::session::Session;\n+use errors::{Applicability, DiagnosticBuilder};\n use syntax::ast;\n use syntax::source_map::Span;\n "}, {"sha": "924aa3fde0a08fd7e5ea406b771c215912fa978a", "filename": "src/librustc/lint/levels.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Flint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Flint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Flevels.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -1,20 +1,20 @@\n use std::cmp;\n \n-use errors::{Applicability, DiagnosticBuilder};\n use crate::hir::HirId;\n use crate::ich::StableHashingContext;\n use crate::lint::builtin;\n use crate::lint::context::CheckLintNameResult;\n use crate::lint::{self, Lint, LintId, Level, LintSource};\n+use crate::session::Session;\n+use crate::util::nodemap::FxHashMap;\n+use errors::{Applicability, DiagnosticBuilder};\n use rustc_data_structures::stable_hasher::{HashStable, ToStableHashKey,\n                                            StableHasher, StableHasherResult};\n-use crate::session::Session;\n use syntax::ast;\n use syntax::attr;\n use syntax::feature_gate;\n use syntax::source_map::MultiSpan;\n use syntax::symbol::Symbol;\n-use crate::util::nodemap::FxHashMap;\n \n pub struct LintLevelSets {\n     list: Vec<LintSet>,"}, {"sha": "479f93b19bcdb02e06c0ecc90d29247fbf78d482", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -23,23 +23,23 @@ pub use self::LintSource::*;\n \n use rustc_data_structures::sync::{self, Lrc};\n \n-use errors::{DiagnosticBuilder, DiagnosticId};\n use crate::hir::def_id::{CrateNum, LOCAL_CRATE};\n use crate::hir::intravisit;\n use crate::hir;\n use crate::lint::builtin::{BuiltinLintDiagnostics, DUPLICATE_MATCHER_BINDING_NAME};\n use crate::lint::builtin::parser::{QUESTION_MARK_MACRO_SEP, ILL_FORMED_ATTRIBUTE_INPUT};\n use crate::session::{Session, DiagnosticMessageId};\n+use crate::ty::TyCtxt;\n+use crate::ty::query::Providers;\n+use crate::util::nodemap::NodeMap;\n+use errors::{DiagnosticBuilder, DiagnosticId};\n use std::{hash, ptr};\n use syntax::ast;\n use syntax::source_map::{MultiSpan, ExpnFormat};\n use syntax::early_buffered_lints::BufferedEarlyLintId;\n use syntax::edition::Edition;\n use syntax::symbol::Symbol;\n use syntax_pos::Span;\n-use crate::ty::TyCtxt;\n-use crate::ty::query::Providers;\n-use crate::util::nodemap::NodeMap;\n \n pub use crate::lint::context::{LateContext, EarlyContext, LintContext, LintStore,\n                         check_crate, check_ast_crate, CheckLintNameResult,"}, {"sha": "331343e052dea322231458c5e592f35b63fe9a6f", "filename": "src/librustc/middle/lib_features.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fmiddle%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fmiddle%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flib_features.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -5,10 +5,10 @@\n // (unlike lang features), which means we need to collect them instead.\n \n use crate::ty::TyCtxt;\n+use crate::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use syntax::symbol::Symbol;\n use syntax::ast::{Attribute, MetaItem, MetaItemKind};\n use syntax_pos::Span;\n-use crate::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_data_structures::fx::{FxHashSet, FxHashMap};\n use errors::DiagnosticId;\n "}, {"sha": "6ff364e37d57ec7fd90edede7b73c160c62e2a8b", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -102,9 +102,9 @@ use crate::hir::Node;\n use crate::ty::{self, TyCtxt};\n use crate::ty::query::Providers;\n use crate::lint;\n-use errors::Applicability;\n use crate::util::nodemap::{NodeMap, HirIdMap, HirIdSet};\n \n+use errors::Applicability;\n use std::collections::{BTreeMap, VecDeque};\n use std::{fmt, u32};\n use std::io::prelude::*;"}, {"sha": "1a2f72cfa0254a0ae1a772472b979845d53501ae", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -11,10 +11,11 @@ use crate::hir::map::Map;\n use crate::hir::{GenericArg, GenericParam, ItemLocalId, LifetimeName, Node, ParamName};\n use crate::ty::{self, DefIdTree, GenericParamDefKind, TyCtxt};\n \n-use errors::{Applicability, DiagnosticBuilder};\n use crate::rustc::lint;\n-use rustc_data_structures::sync::Lrc;\n use crate::session::Session;\n+use crate::util::nodemap::{DefIdMap, FxHashMap, FxHashSet, NodeMap, NodeSet};\n+use errors::{Applicability, DiagnosticBuilder};\n+use rustc_data_structures::sync::Lrc;\n use std::borrow::Cow;\n use std::cell::Cell;\n use std::mem::replace;\n@@ -23,7 +24,6 @@ use syntax::attr;\n use syntax::ptr::P;\n use syntax::symbol::keywords;\n use syntax_pos::Span;\n-use crate::util::nodemap::{DefIdMap, FxHashMap, FxHashSet, NodeMap, NodeSet};\n \n use crate::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use crate::hir::{self, GenericParamKind, LifetimeParamKind};"}, {"sha": "55cb6e9baeccc1e653fc42a1853f8a756ac85aa8", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -17,14 +17,11 @@ use super::{\n     Overflow,\n };\n \n-use errors::{Applicability, DiagnosticBuilder};\n use crate::hir;\n use crate::hir::Node;\n use crate::hir::def_id::DefId;\n use crate::infer::{self, InferCtxt};\n use crate::infer::type_variable::TypeVariableOrigin;\n-use std::fmt;\n-use syntax::ast;\n use crate::session::DiagnosticMessageId;\n use crate::ty::{self, AdtKind, ToPredicate, ToPolyTraitRef, Ty, TyCtxt, TypeFoldable};\n use crate::ty::GenericParamDefKind;\n@@ -35,6 +32,9 @@ use crate::ty::subst::Subst;\n use crate::ty::SubtypePredicate;\n use crate::util::nodemap::{FxHashMap, FxHashSet};\n \n+use errors::{Applicability, DiagnosticBuilder};\n+use std::fmt;\n+use syntax::ast;\n use syntax_pos::{DUMMY_SP, Span, ExpnInfo, ExpnFormat};\n \n impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {"}, {"sha": "17b607328cc7d524a10250f92db54e1d50bef1dd", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -2,7 +2,6 @@\n \n use crate::dep_graph::DepGraph;\n use crate::dep_graph::{self, DepNode, DepConstructor};\n-use errors::DiagnosticBuilder;\n use crate::session::Session;\n use crate::session::config::{BorrowckMode, OutputFilenames};\n use crate::session::config::CrateType;\n@@ -43,6 +42,7 @@ use crate::ty::{BoundVar, BindingMode};\n use crate::ty::CanonicalPolyFnSig;\n use crate::util::nodemap::{DefIdMap, DefIdSet, ItemLocalMap};\n use crate::util::nodemap::{FxHashMap, FxHashSet};\n+use errors::DiagnosticBuilder;\n use rustc_data_structures::interner::HashInterner;\n use smallvec::SmallVec;\n use rustc_data_structures::stable_hasher::{HashStable, hash_stable_hashmap,"}, {"sha": "6aa810dcb2f05666581bb93db92c9c117c895b7c", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -1,9 +1,7 @@\n use crate::dep_graph::{self, DepConstructor, DepNode};\n-use errors::DiagnosticBuilder;\n use crate::hir::def_id::{CrateNum, DefId, DefIndex};\n use crate::hir::def::{Def, Export};\n use crate::hir::{self, TraitCandidate, ItemLocalId, CodegenFnAttrs};\n-use rustc_data_structures::svh::Svh;\n use crate::infer::canonical::{self, Canonical};\n use crate::lint;\n use crate::middle::borrowck::BorrowCheckResult;\n@@ -44,6 +42,8 @@ use crate::util::common::{ErrorReported};\n use crate::util::profiling::ProfileCategory::*;\n use crate::session::Session;\n \n+use errors::DiagnosticBuilder;\n+use rustc_data_structures::svh::Svh;\n use rustc_data_structures::bit_set::BitSet;\n use rustc_data_structures::indexed_vec::IndexVec;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};"}, {"sha": "8656c21ce1064e299dde1da7f9d8b838c4a1d4f0", "filename": "src/librustc/ty/query/on_disk_cache.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -1,28 +1,29 @@\n use crate::dep_graph::{DepNodeIndex, SerializedDepNodeIndex};\n-use errors::Diagnostic;\n use crate::hir;\n use crate::hir::def_id::{CrateNum, DefIndex, DefId, LocalDefId, LOCAL_CRATE};\n use crate::hir::map::definitions::DefPathHash;\n use crate::ich::{CachingSourceMapView, Fingerprint};\n use crate::mir::{self, interpret};\n use crate::mir::interpret::{AllocDecodingSession, AllocDecodingState};\n-use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::thin_vec::ThinVec;\n-use rustc_data_structures::sync::{Lrc, Lock, HashMapExt, Once};\n-use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n use crate::rustc_serialize::{Decodable, Decoder, Encodable, Encoder, opaque,\n                       SpecializedDecoder, SpecializedEncoder,\n                       UseSpecializedDecodable, UseSpecializedEncodable};\n use crate::session::{CrateDisambiguator, Session};\n+use crate::ty;\n+use crate::ty::codec::{self as ty_codec, TyDecoder, TyEncoder};\n+use crate::ty::context::TyCtxt;\n+use crate::util::common::time;\n+\n+use errors::Diagnostic;\n+use rustc_data_structures::fx::FxHashMap;\n+use rustc_data_structures::thin_vec::ThinVec;\n+use rustc_data_structures::sync::{Lrc, Lock, HashMapExt, Once};\n+use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n use std::mem;\n use syntax::ast::NodeId;\n use syntax::source_map::{SourceMap, StableSourceFileId};\n use syntax_pos::{BytePos, Span, DUMMY_SP, SourceFile};\n use syntax_pos::hygiene::{Mark, SyntaxContext, ExpnInfo};\n-use crate::ty;\n-use crate::ty::codec::{self as ty_codec, TyDecoder, TyEncoder};\n-use crate::ty::context::TyCtxt;\n-use crate::util::common::time;\n \n const TAG_FILE_FOOTER: u128 = 0xC0FFEE_C0FFEE_C0FFEE_C0FFEE_C0FFEE;\n "}, {"sha": "49c6093fb7d658cc1e9b7932c93c64a7ba5a3cbd", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -3,10 +3,6 @@\n //! provider, manage the caches, and so forth.\n \n use crate::dep_graph::{DepNodeIndex, DepNode, DepKind, SerializedDepNodeIndex};\n-use errors::DiagnosticBuilder;\n-use errors::Level;\n-use errors::Diagnostic;\n-use errors::FatalError;\n use crate::ty::tls;\n use crate::ty::{TyCtxt};\n use crate::ty::query::Query;\n@@ -16,6 +12,10 @@ use crate::ty::item_path;\n \n use crate::util::common::{profq_msg, ProfileQueriesMsg, QueryMsg};\n \n+use errors::DiagnosticBuilder;\n+use errors::Level;\n+use errors::Diagnostic;\n+use errors::FatalError;\n use rustc_data_structures::fx::{FxHashMap};\n use rustc_data_structures::sync::{Lrc, Lock};\n use rustc_data_structures::thin_vec::ThinVec;"}, {"sha": "7afe84d11dcb037a606bdf42fad9fedfd207513b", "filename": "src/libsyntax/attr/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fbuiltin.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -1,10 +1,10 @@\n //! Parsing and validation of builtin attributes\n \n use crate::ast::{self, Attribute, MetaItem, Name, NestedMetaItemKind};\n-use errors::{Applicability, Handler};\n use crate::feature_gate::{Features, GatedCfg};\n use crate::parse::ParseSess;\n \n+use errors::{Applicability, Handler};\n use syntax_pos::{symbol::Symbol, Span};\n \n use super::{list_contains_name, mark_used, MetaItemKind};"}, {"sha": "66e9fa042dfa1298a3937504dc4caecd01cbf002", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -9,12 +9,12 @@ use crate::feature_gate::{\n use crate::attr;\n use crate::ast;\n use crate::edition::Edition;\n-use errors::Applicability;\n use crate::mut_visit::*;\n use crate::parse::{token, ParseSess};\n use crate::ptr::P;\n use crate::util::map_in_place::MapInPlace;\n \n+use errors::Applicability;\n use smallvec::SmallVec;\n \n /// A folder that strips out items that do not belong in the current configuration."}, {"sha": "12caf8e23de14e4dfeb205df880fe1299deee4f0", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -4,7 +4,6 @@ use crate::ast::{self, Attribute, Name, PatKind, MetaItem};\n use crate::attr::HasAttrs;\n use crate::source_map::{SourceMap, Spanned, respan};\n use crate::edition::Edition;\n-use errors::{DiagnosticBuilder, DiagnosticId};\n use crate::ext::expand::{self, AstFragment, Invocation};\n use crate::ext::hygiene::{self, Mark, SyntaxContext, Transparency};\n use crate::mut_visit::{self, MutVisitor};\n@@ -15,6 +14,7 @@ use crate::symbol::{keywords, Ident, Symbol};\n use crate::ThinVec;\n use crate::tokenstream::{self, TokenStream};\n \n+use errors::{DiagnosticBuilder, DiagnosticId};\n use smallvec::{smallvec, SmallVec};\n use syntax_pos::{Span, MultiSpan, DUMMY_SP};\n "}, {"sha": "359db7325158ba008541da675ce4e7e85158fd13", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -3,7 +3,6 @@ use crate::ast::{MacStmtStyle, StmtKind, ItemKind};\n use crate::attr::{self, HasAttrs};\n use crate::source_map::{ExpnInfo, MacroBang, MacroAttribute, dummy_spanned, respan};\n use crate::config::StripUnconfigured;\n-use errors::{Applicability, FatalError};\n use crate::ext::base::*;\n use crate::ext::derive::{add_derived_markers, collect_derives};\n use crate::ext::hygiene::{self, Mark, SyntaxContext};\n@@ -20,6 +19,7 @@ use crate::tokenstream::{TokenStream, TokenTree};\n use crate::visit::{self, Visitor};\n use crate::util::map_in_place::MapInPlace;\n \n+use errors::{Applicability, FatalError};\n use smallvec::{smallvec, SmallVec};\n use syntax_pos::{Span, DUMMY_SP, FileName};\n use syntax_pos::hygiene::ExpnFormat;"}, {"sha": "fe9b5a068c45dabae845e5b4a81838221df482a3", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -75,7 +75,6 @@ pub use ParseResult::*;\n use TokenTreeOrTokenTreeSlice::*;\n \n use crate::ast::Ident;\n-use errors::FatalError;\n use crate::ext::tt::quoted::{self, TokenTree};\n use crate::parse::{Directory, ParseSess};\n use crate::parse::parser::{Parser, PathStyle};\n@@ -84,8 +83,9 @@ use crate::print::pprust;\n use crate::symbol::keywords;\n use crate::tokenstream::{DelimSpan, TokenStream};\n \n+use errors::FatalError;\n use smallvec::{smallvec, SmallVec};\n-use syntax_pos::{self, Span};\n+use syntax_pos::Span;\n \n use rustc_data_structures::fx::FxHashMap;\n use std::collections::hash_map::Entry::{Occupied, Vacant};"}, {"sha": "6f5a4eabb0215007bcc651fd4ee8edbf263b29ae", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -1,6 +1,5 @@\n use crate::{ast, attr};\n use crate::edition::Edition;\n-use errors::FatalError;\n use crate::ext::base::{DummyResult, ExtCtxt, MacResult, SyntaxExtension};\n use crate::ext::base::{NormalTT, TTMacroExpander};\n use crate::ext::expand::{AstFragment, AstFragmentKind};\n@@ -17,6 +16,7 @@ use crate::parse::token::Token::*;\n use crate::symbol::Symbol;\n use crate::tokenstream::{DelimSpan, TokenStream, TokenTree};\n \n+use errors::FatalError;\n use syntax_pos::{Span, DUMMY_SP, symbol::Ident};\n use log::debug;\n "}, {"sha": "14183a496a9fac7b3bb404b1a5d9ecac14ae7390", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -20,11 +20,11 @@ use crate::attr;\n use crate::early_buffered_lints::BufferedEarlyLintId;\n use crate::source_map::Spanned;\n use crate::edition::{ALL_EDITIONS, Edition};\n-use errors::{DiagnosticBuilder, Handler};\n use crate::visit::{self, FnKind, Visitor};\n use crate::parse::ParseSess;\n use crate::symbol::Symbol;\n \n+use errors::{DiagnosticBuilder, Handler};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_target::spec::abi::Abi;\n use syntax_pos::{Span, DUMMY_SP};"}, {"sha": "09f77fd33dbd00c07c9824642df7f382629e15e3", "filename": "src/libsyntax/json.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fjson.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -10,12 +10,13 @@\n // FIXME: spec the JSON output properly.\n \n use crate::source_map::{SourceMap, FilePathMapping};\n+\n use errors::registry::Registry;\n use errors::{DiagnosticBuilder, SubDiagnostic, CodeSuggestion, SourceMapper};\n use errors::{DiagnosticId, Applicability};\n use errors::emitter::{Emitter, EmitterWriter};\n \n-use syntax_pos::{self, MacroBacktrace, Span, SpanLabel, MultiSpan};\n+use syntax_pos::{MacroBacktrace, Span, SpanLabel, MultiSpan};\n use rustc_data_structures::sync::{self, Lrc};\n use std::io::{self, Write};\n use std::vec;"}, {"sha": "7a16401828947bf87b51f28dc7868ca0e95b7431", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -1,10 +1,10 @@\n use crate::ast::{self, Ident};\n use crate::source_map::{SourceMap, FilePathMapping};\n-use errors::{Applicability, FatalError, Diagnostic, DiagnosticBuilder};\n use crate::parse::{token, ParseSess};\n use crate::symbol::{Symbol, keywords};\n \n-use syntax_pos::{self, BytePos, CharPos, Pos, Span, NO_EXPANSION};\n+use errors::{Applicability, FatalError, Diagnostic, DiagnosticBuilder};\n+use syntax_pos::{BytePos, CharPos, Pos, Span, NO_EXPANSION};\n use core::unicode::property::Pattern_White_Space;\n \n use std::borrow::Cow;"}, {"sha": "87ca883ef7ba9e4b03ca7ea54745a55707f06e9d", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -3,14 +3,14 @@\n use crate::ast::{self, CrateConfig, NodeId};\n use crate::early_buffered_lints::{BufferedEarlyLint, BufferedEarlyLintId};\n use crate::source_map::{SourceMap, FilePathMapping};\n-use errors::{FatalError, Level, Handler, ColorConfig, Diagnostic, DiagnosticBuilder};\n use crate::feature_gate::UnstableFeatures;\n use crate::parse::parser::Parser;\n use crate::symbol::Symbol;\n use crate::tokenstream::{TokenStream, TokenTree};\n use crate::diagnostics::plugin::ErrorMap;\n use crate::print::pprust::token_to_string;\n \n+use errors::{FatalError, Level, Handler, ColorConfig, Diagnostic, DiagnosticBuilder};\n use rustc_data_structures::sync::{Lrc, Lock};\n use syntax_pos::{Span, SourceFile, FileName, MultiSpan};\n use log::debug;"}, {"sha": "3eacd61c318ef7e8b3dce18edd7387c86554f368", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -33,7 +33,6 @@ use crate::ast::{RangeEnd, RangeSyntax};\n use crate::{ast, attr};\n use crate::ext::base::DummyResult;\n use crate::source_map::{self, SourceMap, Spanned, respan};\n-use errors::{Applicability, DiagnosticBuilder, DiagnosticId};\n use crate::parse::{self, SeqSep, classify, token};\n use crate::parse::lexer::{TokenAndSpan, UnmatchedBrace};\n use crate::parse::lexer::comments::{doc_comment_style, strip_doc_comment_decoration};\n@@ -47,8 +46,9 @@ use crate::ThinVec;\n use crate::tokenstream::{self, DelimSpan, TokenTree, TokenStream, TreeAndJoint};\n use crate::symbol::{Symbol, keywords};\n \n+use errors::{Applicability, DiagnosticBuilder, DiagnosticId};\n use rustc_target::spec::abi::{self, Abi};\n-use syntax_pos::{self, Span, MultiSpan, BytePos, FileName};\n+use syntax_pos::{Span, MultiSpan, BytePos, FileName};\n use log::{debug, trace};\n \n use std::borrow::Cow;"}, {"sha": "56290fa771ba9c58b533cc8f7e1f324f95b7688c", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -12,11 +12,10 @@ use std::vec;\n \n use log::debug;\n use smallvec::{smallvec, SmallVec};\n-use syntax_pos::{self, DUMMY_SP, NO_EXPANSION, Span, SourceFile, BytePos};\n+use syntax_pos::{DUMMY_SP, NO_EXPANSION, Span, SourceFile, BytePos};\n \n use crate::attr::{self, HasAttrs};\n use crate::source_map::{self, SourceMap, ExpnInfo, MacroAttribute, dummy_spanned, respan};\n-use errors;\n use crate::config;\n use crate::entry::{self, EntryPointType};\n use crate::ext::base::{ExtCtxt, Resolver};"}, {"sha": "cf39090e1888b9509eec18e5b984c29dd1cfb096", "filename": "src/libsyntax/test_snippet.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Ftest_snippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax%2Ftest_snippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest_snippet.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -1,7 +1,8 @@\n use crate::source_map::{SourceMap, FilePathMapping};\n+use crate::with_globals;\n+\n use errors::Handler;\n use errors::emitter::EmitterWriter;\n-use crate::with_globals;\n \n use std::io;\n use std::io::prelude::*;"}, {"sha": "6aba4d83cd27c21b31fa38f7eda769473cdd8eab", "filename": "src/libsyntax_ext/deriving/custom.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -1,7 +1,7 @@\n-use errors::FatalError;\n use crate::proc_macro_impl::EXEC_STRATEGY;\n use crate::proc_macro_server;\n \n+use errors::FatalError;\n use syntax::ast::{self, ItemKind, Attribute, Mac};\n use syntax::attr::{mark_used, mark_known};\n use syntax::source_map::Span;"}, {"sha": "f0fc6392cd73f593f7e963e8c4342f8ce2182b37", "filename": "src/libsyntax_ext/proc_macro_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax_ext%2Fproc_macro_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c360ba285c5a74ce659811a0c72fb7bf32ec0b85/src%2Flibsyntax_ext%2Fproc_macro_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fproc_macro_impl.rs?ref=c360ba285c5a74ce659811a0c72fb7bf32ec0b85", "patch": "@@ -1,6 +1,6 @@\n-use errors::FatalError;\n use crate::proc_macro_server;\n \n+use errors::FatalError;\n use syntax::source_map::Span;\n use syntax::ext::base::{self, *};\n use syntax::tokenstream::TokenStream;"}]}