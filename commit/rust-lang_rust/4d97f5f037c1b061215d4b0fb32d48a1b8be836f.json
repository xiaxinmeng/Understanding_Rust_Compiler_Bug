{"sha": "4d97f5f037c1b061215d4b0fb32d48a1b8be836f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkOTdmNWYwMzdjMWIwNjEyMTVkNGIwZmIzMmQ0OGExYjhiZTgzNmY=", "commit": {"author": {"name": "Pavan Kumar Sunkara", "email": "pavan.sss1991@gmail.com", "date": "2020-09-05T01:06:05Z"}, "committer": {"name": "Pavan Kumar Sunkara", "email": "pavan.sss1991@gmail.com", "date": "2020-09-10T16:56:04Z"}, "message": "Rename record_field_pat to record_pat_field", "tree": {"sha": "b0be5ddcce7c64a5aedc0661c208b7f0e611564e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0be5ddcce7c64a5aedc0661c208b7f0e611564e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d97f5f037c1b061215d4b0fb32d48a1b8be836f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d97f5f037c1b061215d4b0fb32d48a1b8be836f", "html_url": "https://github.com/rust-lang/rust/commit/4d97f5f037c1b061215d4b0fb32d48a1b8be836f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/comments", "author": {"login": "pksunkara", "id": 174703, "node_id": "MDQ6VXNlcjE3NDcwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/174703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pksunkara", "html_url": "https://github.com/pksunkara", "followers_url": "https://api.github.com/users/pksunkara/followers", "following_url": "https://api.github.com/users/pksunkara/following{/other_user}", "gists_url": "https://api.github.com/users/pksunkara/gists{/gist_id}", "starred_url": "https://api.github.com/users/pksunkara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pksunkara/subscriptions", "organizations_url": "https://api.github.com/users/pksunkara/orgs", "repos_url": "https://api.github.com/users/pksunkara/repos", "events_url": "https://api.github.com/users/pksunkara/events{/privacy}", "received_events_url": "https://api.github.com/users/pksunkara/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pksunkara", "id": 174703, "node_id": "MDQ6VXNlcjE3NDcwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/174703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pksunkara", "html_url": "https://github.com/pksunkara", "followers_url": "https://api.github.com/users/pksunkara/followers", "following_url": "https://api.github.com/users/pksunkara/following{/other_user}", "gists_url": "https://api.github.com/users/pksunkara/gists{/gist_id}", "starred_url": "https://api.github.com/users/pksunkara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pksunkara/subscriptions", "organizations_url": "https://api.github.com/users/pksunkara/orgs", "repos_url": "https://api.github.com/users/pksunkara/repos", "events_url": "https://api.github.com/users/pksunkara/events{/privacy}", "received_events_url": "https://api.github.com/users/pksunkara/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c336e266fe09ae9ae6e634513d441cbcde63696", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c336e266fe09ae9ae6e634513d441cbcde63696", "html_url": "https://github.com/rust-lang/rust/commit/5c336e266fe09ae9ae6e634513d441cbcde63696"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "0516a05b4154f3c863cef5695332e1f02a6c7741", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=4d97f5f037c1b061215d4b0fb32d48a1b8be836f", "patch": "@@ -207,8 +207,8 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         self.imp.resolve_record_field(field)\n     }\n \n-    pub fn resolve_record_field_pat(&self, field: &ast::RecordPatField) -> Option<Field> {\n-        self.imp.resolve_record_field_pat(field)\n+    pub fn resolve_record_pat_field(&self, field: &ast::RecordPatField) -> Option<Field> {\n+        self.imp.resolve_record_pat_field(field)\n     }\n \n     pub fn resolve_macro_call(&self, macro_call: &ast::MacroCall) -> Option<MacroDef> {\n@@ -433,8 +433,8 @@ impl<'db> SemanticsImpl<'db> {\n         self.analyze(field.syntax()).resolve_record_field(self.db, field)\n     }\n \n-    fn resolve_record_field_pat(&self, field: &ast::RecordPatField) -> Option<Field> {\n-        self.analyze(field.syntax()).resolve_record_field_pat(self.db, field)\n+    fn resolve_record_pat_field(&self, field: &ast::RecordPatField) -> Option<Field> {\n+        self.analyze(field.syntax()).resolve_record_pat_field(self.db, field)\n     }\n \n     fn resolve_macro_call(&self, macro_call: &ast::MacroCall) -> Option<MacroDef> {"}, {"sha": "1aef0f33f5f84fa6e6d23ddd42c30ad197a2c9d7", "filename": "crates/hir/src/source_analyzer.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs?ref=4d97f5f037c1b061215d4b0fb32d48a1b8be836f", "patch": "@@ -179,13 +179,13 @@ impl SourceAnalyzer {\n         Some((struct_field.into(), local))\n     }\n \n-    pub(crate) fn resolve_record_field_pat(\n+    pub(crate) fn resolve_record_pat_field(\n         &self,\n         _db: &dyn HirDatabase,\n         field: &ast::RecordPatField,\n     ) -> Option<Field> {\n         let pat_id = self.pat_id(&field.pat()?)?;\n-        let struct_field = self.infer.as_ref()?.record_field_pat_resolution(pat_id)?;\n+        let struct_field = self.infer.as_ref()?.record_pat_field_resolution(pat_id)?;\n         Some(struct_field.into())\n     }\n "}, {"sha": "2b53b8297314941f5b917917ff7939d908b83bfc", "filename": "crates/hir_ty/src/infer.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer.rs?ref=4d97f5f037c1b061215d4b0fb32d48a1b8be836f", "patch": "@@ -125,7 +125,7 @@ pub struct InferenceResult {\n     field_resolutions: FxHashMap<ExprId, FieldId>,\n     /// For each field in record literal, records the field it resolves to.\n     record_field_resolutions: FxHashMap<ExprId, FieldId>,\n-    record_field_pat_resolutions: FxHashMap<PatId, FieldId>,\n+    record_pat_field_resolutions: FxHashMap<PatId, FieldId>,\n     /// For each struct literal, records the variant it resolves to.\n     variant_resolutions: FxHashMap<ExprOrPatId, VariantId>,\n     /// For each associated item record what it resolves to\n@@ -146,8 +146,8 @@ impl InferenceResult {\n     pub fn record_field_resolution(&self, expr: ExprId) -> Option<FieldId> {\n         self.record_field_resolutions.get(&expr).copied()\n     }\n-    pub fn record_field_pat_resolution(&self, pat: PatId) -> Option<FieldId> {\n-        self.record_field_pat_resolutions.get(&pat).copied()\n+    pub fn record_pat_field_resolution(&self, pat: PatId) -> Option<FieldId> {\n+        self.record_pat_field_resolutions.get(&pat).copied()\n     }\n     pub fn variant_resolution_for_expr(&self, id: ExprId) -> Option<VariantId> {\n         self.variant_resolutions.get(&id.into()).copied()"}, {"sha": "dde38bc397b6eb184e342760001496badb8e3e58", "filename": "crates/hir_ty/src/infer/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs?ref=4d97f5f037c1b061215d4b0fb32d48a1b8be836f", "patch": "@@ -70,7 +70,7 @@ impl<'a> InferenceContext<'a> {\n             let matching_field = var_data.as_ref().and_then(|it| it.field(&subpat.name));\n             if let Some(local_id) = matching_field {\n                 let field_def = FieldId { parent: def.unwrap(), local_id };\n-                self.result.record_field_pat_resolutions.insert(subpat.pat, field_def);\n+                self.result.record_pat_field_resolutions.insert(subpat.pat, field_def);\n             }\n \n             let expected_ty ="}, {"sha": "f8c7aa491ea56ef205d0adc306aadcb9f059ceca", "filename": "crates/ide_db/src/defs.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fdefs.rs?ref=4d97f5f037c1b061215d4b0fb32d48a1b8be836f", "patch": "@@ -157,9 +157,9 @@ pub fn classify_name(sema: &Semantics<RootDatabase>, name: &ast::Name) -> Option\n             ast::IdentPat(it) => {\n                 let local = sema.to_def(&it)?;\n \n-                if let Some(record_field_pat) = it.syntax().parent().and_then(ast::RecordPatField::cast) {\n-                    if record_field_pat.name_ref().is_none() {\n-                        if let Some(field) = sema.resolve_record_field_pat(&record_field_pat) {\n+                if let Some(record_pat_field) = it.syntax().parent().and_then(ast::RecordPatField::cast) {\n+                    if record_pat_field.name_ref().is_none() {\n+                        if let Some(field) = sema.resolve_record_pat_field(&record_pat_field) {\n                             let field = Definition::Field(field);\n                             return Some(NameClass::FieldShorthand { local, field });\n                         }\n@@ -275,8 +275,8 @@ pub fn classify_name_ref(\n         }\n     }\n \n-    if let Some(record_field_pat) = ast::RecordPatField::cast(parent.clone()) {\n-        if let Some(field) = sema.resolve_record_field_pat(&record_field_pat) {\n+    if let Some(record_pat_field) = ast::RecordPatField::cast(parent.clone()) {\n+        if let Some(field) = sema.resolve_record_pat_field(&record_pat_field) {\n             let field = Definition::Field(field);\n             return Some(NameRefClass::Definition(field));\n         }"}, {"sha": "7e7f73deeac9db2111aa8a208a058cc4ba1511bf", "filename": "crates/parser/src/grammar/patterns.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=4d97f5f037c1b061215d4b0fb32d48a1b8be836f", "patch": "@@ -188,7 +188,7 @@ fn tuple_pat_fields(p: &mut Parser) {\n     p.expect(T![')']);\n }\n \n-// test record_field_pat_list\n+// test record_pat_field_list\n // fn foo() {\n //     let S {} = ();\n //     let S { f, ref mut g } = ();\n@@ -208,7 +208,7 @@ fn record_pat_field_list(p: &mut Parser) {\n             c => {\n                 let m = p.start();\n                 match c {\n-                    // test record_field_pat\n+                    // test record_pat_field\n                     // fn foo() {\n                     //     let S { 0: 1 } = ();\n                     //     let S { x: 1 } = ();"}, {"sha": "866e60ed8a16f7022d67dc2cf54061a5ee89c6fa", "filename": "crates/syntax/test_data/parser/inline/ok/0102_record_pat_field_list.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0102_record_pat_field_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0102_record_pat_field_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0102_record_pat_field_list.rast?ref=4d97f5f037c1b061215d4b0fb32d48a1b8be836f", "previous_filename": "crates/syntax/test_data/parser/inline/ok/0102_record_field_pat_list.rast"}, {"sha": "da3412fa8a94a44de833d2edfae5d7b9dd1e2660", "filename": "crates/syntax/test_data/parser/inline/ok/0102_record_pat_field_list.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0102_record_pat_field_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0102_record_pat_field_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0102_record_pat_field_list.rs?ref=4d97f5f037c1b061215d4b0fb32d48a1b8be836f", "previous_filename": "crates/syntax/test_data/parser/inline/ok/0102_record_field_pat_list.rs"}, {"sha": "925409bdfe3b11a7cbd9f07eab3335af0a056b8e", "filename": "crates/syntax/test_data/parser/inline/ok/0145_record_pat_field.rast", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0145_record_pat_field.rast", "raw_url": "https://github.com/rust-lang/rust/raw/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0145_record_pat_field.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0145_record_pat_field.rast?ref=4d97f5f037c1b061215d4b0fb32d48a1b8be836f", "previous_filename": "crates/syntax/test_data/parser/inline/ok/0145_record_field_pat.rast"}, {"sha": "26b1d5f895202062e05f3a8dd06980d1291081e6", "filename": "crates/syntax/test_data/parser/inline/ok/0145_record_pat_field.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0145_record_pat_field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d97f5f037c1b061215d4b0fb32d48a1b8be836f/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0145_record_pat_field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0145_record_pat_field.rs?ref=4d97f5f037c1b061215d4b0fb32d48a1b8be836f", "previous_filename": "crates/syntax/test_data/parser/inline/ok/0145_record_field_pat.rs"}]}