{"sha": "62cd02d7fc9b0f830536801cadf4484488bd802d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyY2QwMmQ3ZmM5YjBmODMwNTM2ODAxY2FkZjQ0ODQ0ODhiZDgwMmQ=", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@gmail.com", "date": "2018-09-05T15:43:48Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gmail.com", "date": "2018-09-05T15:43:48Z"}, "message": "propagate build.python into cmake\n\nIf a suitable value of Python is not on PATH, one can still invoke x.py\nmanually, which propagates BOOTSTRAP_PYTHON into the bootstrap\nenvironment.  But building LLVM will abort with error messages about not\nbeing able to find Python, and instructions to set PYTHON_EXECUTABLE,\nbecause nothing is done with BOOTSTRAP_PYTHON when invoking cmake.\nSetting build.python in config.toml had no effect in this scenario,\neither\n\nTo fix this, let's provide PYTHON_EXECUTABLE when invoking cmake; for\nthe \"normal\" case of Python in PATH, this doesn't alter any behavior.\nFor more unusual cases, however, this ensures cmake finds Python\nproperly.  (This change also ensures there are no differences between\nwhat bootstrap is using, and what cmake uses, which may be useful for\nconsistency's sake.)", "tree": {"sha": "f3eadfef67452128b9a69b8c43ec12e2aff8d29d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3eadfef67452128b9a69b8c43ec12e2aff8d29d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62cd02d7fc9b0f830536801cadf4484488bd802d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62cd02d7fc9b0f830536801cadf4484488bd802d", "html_url": "https://github.com/rust-lang/rust/commit/62cd02d7fc9b0f830536801cadf4484488bd802d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62cd02d7fc9b0f830536801cadf4484488bd802d/comments", "author": {"login": "froydnj", "id": 151096, "node_id": "MDQ6VXNlcjE1MTA5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/151096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froydnj", "html_url": "https://github.com/froydnj", "followers_url": "https://api.github.com/users/froydnj/followers", "following_url": "https://api.github.com/users/froydnj/following{/other_user}", "gists_url": "https://api.github.com/users/froydnj/gists{/gist_id}", "starred_url": "https://api.github.com/users/froydnj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froydnj/subscriptions", "organizations_url": "https://api.github.com/users/froydnj/orgs", "repos_url": "https://api.github.com/users/froydnj/repos", "events_url": "https://api.github.com/users/froydnj/events{/privacy}", "received_events_url": "https://api.github.com/users/froydnj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froydnj", "id": 151096, "node_id": "MDQ6VXNlcjE1MTA5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/151096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froydnj", "html_url": "https://github.com/froydnj", "followers_url": "https://api.github.com/users/froydnj/followers", "following_url": "https://api.github.com/users/froydnj/following{/other_user}", "gists_url": "https://api.github.com/users/froydnj/gists{/gist_id}", "starred_url": "https://api.github.com/users/froydnj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froydnj/subscriptions", "organizations_url": "https://api.github.com/users/froydnj/orgs", "repos_url": "https://api.github.com/users/froydnj/repos", "events_url": "https://api.github.com/users/froydnj/events{/privacy}", "received_events_url": "https://api.github.com/users/froydnj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0297f3043e4ed592c63c0bcc11df3655ec8cf46", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0297f3043e4ed592c63c0bcc11df3655ec8cf46", "html_url": "https://github.com/rust-lang/rust/commit/b0297f3043e4ed592c63c0bcc11df3655ec8cf46"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "caf38d766f54effb2e96b65b7c9d92b24d80b265", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/62cd02d7fc9b0f830536801cadf4484488bd802d/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62cd02d7fc9b0f830536801cadf4484488bd802d/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=62cd02d7fc9b0f830536801cadf4484488bd802d", "patch": "@@ -239,6 +239,10 @@ impl Step for Llvm {\n             cfg.define(\"LLVM_NATIVE_BUILD\", builder.llvm_out(builder.config.build).join(\"build\"));\n         }\n \n+        if let Some(ref python) = builder.config.python {\n+            cfg.define(\"PYTHON_EXECUTABLE\", python);\n+        }\n+\n         configure_cmake(builder, target, &mut cfg, false);\n \n         // FIXME: we don't actually need to build all LLVM tools and all LLVM"}]}