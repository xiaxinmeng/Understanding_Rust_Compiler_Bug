{"sha": "3df37c3c45f908f2a41a1d3508060d109bd7bc02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZjM3YzNjNDVmOTA4ZjJhNDFhMWQzNTA4MDYwZDEwOWJkN2JjMDI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-15T11:40:05Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-15T11:40:05Z"}, "message": "syntax: Cleanup in diagnostic", "tree": {"sha": "c8b6e6e56ed0698996146a0ea10dd001fddd0289", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8b6e6e56ed0698996146a0ea10dd001fddd0289"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3df37c3c45f908f2a41a1d3508060d109bd7bc02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3df37c3c45f908f2a41a1d3508060d109bd7bc02", "html_url": "https://github.com/rust-lang/rust/commit/3df37c3c45f908f2a41a1d3508060d109bd7bc02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3df37c3c45f908f2a41a1d3508060d109bd7bc02/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e88b17c3b288302a5137a8b807fafae0907d404c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e88b17c3b288302a5137a8b807fafae0907d404c", "html_url": "https://github.com/rust-lang/rust/commit/e88b17c3b288302a5137a8b807fafae0907d404c"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "047c3ccf119264f5290f3e06bc93467501eae8bd", "filename": "src/librustsyntax/diagnostic.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3df37c3c45f908f2a41a1d3508060d109bd7bc02/src%2Flibrustsyntax%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df37c3c45f908f2a41a1d3508060d109bd7bc02/src%2Flibrustsyntax%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fdiagnostic.rs?ref=3df37c3c45f908f2a41a1d3508060d109bd7bc02", "patch": "@@ -37,7 +37,7 @@ iface handler {\n \n type handler_t = @{\n     mut err_count: uint,\n-    _emit: emitter\n+    emit: emitter\n };\n \n type codemap_t = @{\n@@ -73,11 +73,11 @@ impl codemap_span_handler of span_handler for codemap_t {\n \n impl codemap_handler of handler for handler_t {\n     fn fatal(msg: str) -> ! {\n-        self._emit(none, msg, fatal);\n+        self.emit(none, msg, fatal);\n         fail;\n     }\n     fn err(msg: str) {\n-        self._emit(none, msg, error);\n+        self.emit(none, msg, error);\n         self.bump_err_count();\n     }\n     fn bump_err_count() {\n@@ -90,17 +90,17 @@ impl codemap_handler of handler for handler_t {\n         }\n     }\n     fn warn(msg: str) {\n-        self._emit(none, msg, warning);\n+        self.emit(none, msg, warning);\n     }\n     fn note(msg: str) {\n-        self._emit(none, msg, note);\n+        self.emit(none, msg, note);\n     }\n     fn bug(msg: str) -> ! {\n         self.fatal(ice_msg(msg));\n     }\n     fn unimpl(msg: str) -> ! { self.bug(\"unimplemented \" + msg); }\n     fn emit(cmsp: option<(codemap::codemap, span)>, msg: str, lvl: level) {\n-        self._emit(cmsp, msg, lvl);\n+        self.emit(cmsp, msg, lvl);\n     }\n }\n \n@@ -127,7 +127,7 @@ fn mk_handler(emitter: option<emitter>) -> handler {\n \n     @{\n         mut err_count: 0u,\n-        _emit: emit\n+        emit: emit\n     } as handler\n }\n "}]}