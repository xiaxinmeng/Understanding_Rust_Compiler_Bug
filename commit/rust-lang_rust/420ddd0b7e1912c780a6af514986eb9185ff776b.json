{"sha": "420ddd0b7e1912c780a6af514986eb9185ff776b", "node_id": "C_kwDOAAsO6NoAKDQyMGRkZDBiN2UxOTEyYzc4MGE2YWY1MTQ5ODZlYjkxODVmZjc3NmI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-04T01:26:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-04T01:26:22Z"}, "message": "Rollup merge of #91209 - camelid:snapshot, r=jyn514\n\nImplement `@snapshot` check for htmldocck\n\nThis form of check allows performing snapshot tests (\u00e0 la `src/test/ui`)\non rustdoc HTML output, making it easier to create and update tests.\n\nSee [this Zulip thread][1] for more information about the motivation for\nthis change.\n\n[1]: https://zulip-archive.rust-lang.org/stream/266220-rustdoc/topic/HTML.20snapshot.20tests.html#262651142\n\nr? `@GuillaumeGomez`", "tree": {"sha": "8d7d58b9266b86e63b77d825c0c23757156b3633", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d7d58b9266b86e63b77d825c0c23757156b3633"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/420ddd0b7e1912c780a6af514986eb9185ff776b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhqsO+CRBK7hj4Ov3rIwAArN0IAHTOWkY/7E4XYqwa+Smbk9HT\nprbv2aGMU8XXhZv+8H8EvXd6CGIMzOwpIciylJS+fG8cCrIVEAa3yTM9AhpKBZ81\nVwY2jFaWRku8EhcYQHJ6R5Okq283b/5Sf13ktYu7PHVJrZMrKCIx+YifkBqS08fP\n+aKkqaeCH2SR3wkzXZmAaFea4c6BY0Omi8GVeRW/OK4SDXYdymX+JyiVQr7/uHaQ\n9rIfR5L5D8AyP+fTaZYg3vyXvx6agOJVv3dpaIOZ5nY6+A83IjNzczuf8GWJ1OyE\n0X0FpXEiX/K6rW4v9yf/rkXIjoVI7Ex9Q3cyxzlGjtEb6g1GCFflTDqd5Ycn9uE=\n=XqYb\n-----END PGP SIGNATURE-----\n", "payload": "tree 8d7d58b9266b86e63b77d825c0c23757156b3633\nparent 0bd4ee79e099a75a13396de272278c9ad8192bd5\nparent fe88fcfa3909219ab537a6de9213a48fffcce75e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638581182 +0100\ncommitter GitHub <noreply@github.com> 1638581182 +0100\n\nRollup merge of #91209 - camelid:snapshot, r=jyn514\n\nImplement `@snapshot` check for htmldocck\n\nThis form of check allows performing snapshot tests (\u00e0 la `src/test/ui`)\non rustdoc HTML output, making it easier to create and update tests.\n\nSee [this Zulip thread][1] for more information about the motivation for\nthis change.\n\n[1]: https://zulip-archive.rust-lang.org/stream/266220-rustdoc/topic/HTML.20snapshot.20tests.html#262651142\n\nr? `@GuillaumeGomez`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/420ddd0b7e1912c780a6af514986eb9185ff776b", "html_url": "https://github.com/rust-lang/rust/commit/420ddd0b7e1912c780a6af514986eb9185ff776b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/420ddd0b7e1912c780a6af514986eb9185ff776b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bd4ee79e099a75a13396de272278c9ad8192bd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bd4ee79e099a75a13396de272278c9ad8192bd5", "html_url": "https://github.com/rust-lang/rust/commit/0bd4ee79e099a75a13396de272278c9ad8192bd5"}, {"sha": "fe88fcfa3909219ab537a6de9213a48fffcce75e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe88fcfa3909219ab537a6de9213a48fffcce75e", "html_url": "https://github.com/rust-lang/rust/commit/fe88fcfa3909219ab537a6de9213a48fffcce75e"}], "stats": {"total": 112, "additions": 92, "deletions": 20}, "files": [{"sha": "48a341ffe083710770023c465dfe4b5d03a2b40c", "filename": "src/etc/htmldocck.py", "status": "modified", "additions": 76, "deletions": 4, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/420ddd0b7e1912c780a6af514986eb9185ff776b/src%2Fetc%2Fhtmldocck.py", "raw_url": "https://github.com/rust-lang/rust/raw/420ddd0b7e1912c780a6af514986eb9185ff776b/src%2Fetc%2Fhtmldocck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fhtmldocck.py?ref=420ddd0b7e1912c780a6af514986eb9185ff776b", "patch": "@@ -90,10 +90,20 @@\n   highlights for example. If you want to simply check for the presence of\n   a given node or attribute, use an empty string (`\"\"`) as a `PATTERN`.\n \n-* `@count PATH XPATH COUNT' checks for the occurrence of the given XPath\n+* `@count PATH XPATH COUNT` checks for the occurrence of the given XPath\n   in the specified file. The number of occurrences must match the given\n   count.\n \n+* `@snapshot NAME PATH XPATH` creates a snapshot test named NAME.\n+  A snapshot test captures a subtree of the DOM, at the location\n+  determined by the XPath, and compares it to a pre-recorded value\n+  in a file. The file's name is the test's name with the `.rs` extension\n+  replaced with `.NAME.html`, where NAME is the snapshot's name.\n+\n+  htmldocck supports the `--bless` option to accept the current subtree\n+  as expected, saving it to the file determined by the snapshot's name.\n+  compiletest's `--bless` flag is forwarded to htmldocck.\n+\n * `@has-dir PATH` checks for the existence of the given directory.\n \n All conditions can be negated with `!`. `@!has foo/type.NoSuch.html`\n@@ -137,6 +147,10 @@\n \n channel = os.environ[\"DOC_RUST_LANG_ORG_CHANNEL\"]\n \n+# Initialized in main\n+rust_test_path = None\n+bless = None\n+\n class CustomHTMLParser(HTMLParser):\n     \"\"\"simplified HTML parser.\n \n@@ -387,6 +401,32 @@ def get_tree_count(tree, path):\n     return len(tree.findall(path))\n \n \n+def check_snapshot(snapshot_name, tree):\n+    assert rust_test_path.endswith('.rs')\n+    snapshot_path = '{}.{}.{}'.format(rust_test_path[:-3], snapshot_name, 'html')\n+    try:\n+        with open(snapshot_path, 'r') as snapshot_file:\n+            expected_str = snapshot_file.read()\n+    except FileNotFoundError:\n+        if bless:\n+            expected_str = None\n+        else:\n+            raise FailedCheck('No saved snapshot value')\n+\n+    actual_str = ET.tostring(tree).decode('utf-8')\n+\n+    if expected_str != actual_str:\n+        if bless:\n+            with open(snapshot_path, 'w') as snapshot_file:\n+                snapshot_file.write(actual_str)\n+        else:\n+            print('--- expected ---\\n')\n+            print(expected_str)\n+            print('\\n\\n--- actual ---\\n')\n+            print(actual_str)\n+            print()\n+            raise FailedCheck('Actual snapshot value is different than expected')\n+\n def stderr(*args):\n     if sys.version_info.major < 3:\n         file = codecs.getwriter('utf-8')(sys.stderr)\n@@ -448,6 +488,28 @@ def check_command(c, cache):\n                 ret = expected == found\n             else:\n                 raise InvalidCheck('Invalid number of @{} arguments'.format(c.cmd))\n+\n+        elif c.cmd == 'snapshot':  # snapshot test\n+            if len(c.args) == 3:  # @snapshot <snapshot-name> <html-path> <xpath>\n+                [snapshot_name, html_path, pattern] = c.args\n+                tree = cache.get_tree(html_path)\n+                xpath = normalize_xpath(pattern)\n+                subtrees = tree.findall(xpath)\n+                if len(subtrees) == 1:\n+                    [subtree] = subtrees\n+                    try:\n+                        check_snapshot(snapshot_name, subtree)\n+                        ret = True\n+                    except FailedCheck as err:\n+                        cerr = str(err)\n+                        ret = False\n+                elif len(subtrees) == 0:\n+                    raise FailedCheck('XPATH did not match')\n+                else:\n+                    raise FailedCheck('Expected 1 match, but found {}'.format(len(subtrees)))\n+            else:\n+                raise InvalidCheck('Invalid number of @{} arguments'.format(c.cmd))\n+\n         elif c.cmd == 'has-dir':  # has-dir test\n             if len(c.args) == 1:  # @has-dir <path> = has-dir test\n                 try:\n@@ -458,11 +520,13 @@ def check_command(c, cache):\n                     ret = False\n             else:\n                 raise InvalidCheck('Invalid number of @{} arguments'.format(c.cmd))\n+\n         elif c.cmd == 'valid-html':\n             raise InvalidCheck('Unimplemented @valid-html')\n \n         elif c.cmd == 'valid-links':\n             raise InvalidCheck('Unimplemented @valid-links')\n+\n         else:\n             raise InvalidCheck('Unrecognized @{}'.format(c.cmd))\n \n@@ -483,11 +547,19 @@ def check(target, commands):\n \n \n if __name__ == '__main__':\n-    if len(sys.argv) != 3:\n-        stderr('Usage: {} <doc dir> <template>'.format(sys.argv[0]))\n+    if len(sys.argv) not in [3, 4]:\n+        stderr('Usage: {} <doc dir> <template> [--bless]'.format(sys.argv[0]))\n         raise SystemExit(1)\n \n-    check(sys.argv[1], get_commands(sys.argv[2]))\n+    rust_test_path = sys.argv[2]\n+    if len(sys.argv) > 3 and sys.argv[3] == '--bless':\n+        bless = True\n+    else:\n+        # We only support `--bless` at the end of the arguments.\n+        # This assert is to prevent silent failures.\n+        assert '--bless' not in sys.argv\n+        bless = False\n+    check(sys.argv[1], get_commands(rust_test_path))\n     if ERR_COUNT:\n         stderr(\"\\nEncountered {} errors\".format(ERR_COUNT))\n         raise SystemExit(1)"}, {"sha": "69d647a92e82b30090fe9328bf6a11232ea7edba", "filename": "src/test/rustdoc/mixing-doc-comments-and-attrs.S1_top-doc.html", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/420ddd0b7e1912c780a6af514986eb9185ff776b/src%2Ftest%2Frustdoc%2Fmixing-doc-comments-and-attrs.S1_top-doc.html", "raw_url": "https://github.com/rust-lang/rust/raw/420ddd0b7e1912c780a6af514986eb9185ff776b/src%2Ftest%2Frustdoc%2Fmixing-doc-comments-and-attrs.S1_top-doc.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmixing-doc-comments-and-attrs.S1_top-doc.html?ref=420ddd0b7e1912c780a6af514986eb9185ff776b", "patch": "@@ -0,0 +1,4 @@\n+<div class=\"docblock\"><p>Hello world!\n+Goodbye!\n+Hello again!</p>\n+</div>\n\\ No newline at end of file"}, {"sha": "8ff114b993edbeb5cd285e76fbfc09c050137d96", "filename": "src/test/rustdoc/mixing-doc-comments-and-attrs.S2_top-doc.html", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/420ddd0b7e1912c780a6af514986eb9185ff776b/src%2Ftest%2Frustdoc%2Fmixing-doc-comments-and-attrs.S2_top-doc.html", "raw_url": "https://github.com/rust-lang/rust/raw/420ddd0b7e1912c780a6af514986eb9185ff776b/src%2Ftest%2Frustdoc%2Fmixing-doc-comments-and-attrs.S2_top-doc.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmixing-doc-comments-and-attrs.S2_top-doc.html?ref=420ddd0b7e1912c780a6af514986eb9185ff776b", "patch": "@@ -0,0 +1,4 @@\n+<div class=\"docblock\"><p>Hello world!</p>\n+<p>Goodbye!\n+Hello again!</p>\n+</div>\n\\ No newline at end of file"}, {"sha": "1aedd4d107c21ef3d972678088ef5a042a0c624f", "filename": "src/test/rustdoc/mixing-doc-comments-and-attrs.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/420ddd0b7e1912c780a6af514986eb9185ff776b/src%2Ftest%2Frustdoc%2Fmixing-doc-comments-and-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/420ddd0b7e1912c780a6af514986eb9185ff776b/src%2Ftest%2Frustdoc%2Fmixing-doc-comments-and-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmixing-doc-comments-and-attrs.rs?ref=420ddd0b7e1912c780a6af514986eb9185ff776b", "patch": "@@ -1,23 +1,15 @@\n #![crate_name = \"foo\"]\n \n // @has 'foo/struct.S1.html'\n-// @count - '//details[@class=\"rustdoc-toggle top-doc\"]/div[@class=\"docblock\"]/p' \\\n-//     1\n-// @has - '//details[@class=\"rustdoc-toggle top-doc\"]/div[@class=\"docblock\"]/p[1]' \\\n-//     'Hello world! Goodbye! Hello again!'\n+// @snapshot S1_top-doc - '//details[@class=\"rustdoc-toggle top-doc\"]/div[@class=\"docblock\"]'\n \n #[doc = \"Hello world!\\n\\n\"]\n /// Goodbye!\n #[doc = \"  Hello again!\\n\"]\n pub struct S1;\n \n // @has 'foo/struct.S2.html'\n-// @count - '//details[@class=\"rustdoc-toggle top-doc\"]/div[@class=\"docblock\"]/p' \\\n-//     2\n-// @has - '//details[@class=\"rustdoc-toggle top-doc\"]/div[@class=\"docblock\"]/p[1]' \\\n-//     'Hello world!'\n-// @has - '//details[@class=\"rustdoc-toggle top-doc\"]/div[@class=\"docblock\"]/p[2]' \\\n-//     'Goodbye! Hello again!'\n+// @snapshot S2_top-doc - '//details[@class=\"rustdoc-toggle top-doc\"]/div[@class=\"docblock\"]'\n \n /// Hello world!\n ///"}, {"sha": "4bf74c1508bd295882d648c39c8167ebd12987e1", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/420ddd0b7e1912c780a6af514986eb9185ff776b/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/420ddd0b7e1912c780a6af514986eb9185ff776b/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=420ddd0b7e1912c780a6af514986eb9185ff776b", "patch": "@@ -2219,12 +2219,12 @@ impl<'test> TestCx<'test> {\n             self.check_rustdoc_test_option(proc_res);\n         } else {\n             let root = self.config.find_rust_src_root().unwrap();\n-            let res = self.cmd2procres(\n-                Command::new(&self.config.docck_python)\n-                    .arg(root.join(\"src/etc/htmldocck.py\"))\n-                    .arg(&out_dir)\n-                    .arg(&self.testpaths.file),\n-            );\n+            let mut cmd = Command::new(&self.config.docck_python);\n+            cmd.arg(root.join(\"src/etc/htmldocck.py\")).arg(&out_dir).arg(&self.testpaths.file);\n+            if self.config.bless {\n+                cmd.arg(\"--bless\");\n+            }\n+            let res = self.cmd2procres(&mut cmd);\n             if !res.status.success() {\n                 self.fatal_proc_rec_with_ctx(\"htmldocck failed!\", &res, |mut this| {\n                     this.compare_to_default_rustdoc(&out_dir)"}]}