{"sha": "393e2356594560dec84e73471f26a366a6fc91dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5M2UyMzU2NTk0NTYwZGVjODRlNzM0NzFmMjZhMzY2YTZmYzkxZGQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-12T14:11:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-12T14:11:42Z"}, "message": "Merge #7980\n\n7980: Fix remaining references to `cargo xtask codegen` r=matklad a=Veykril\n\n\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "fc22518e7df4fdb1d8c17a391932de3fa3eebc41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc22518e7df4fdb1d8c17a391932de3fa3eebc41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/393e2356594560dec84e73471f26a366a6fc91dd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgS3aeCRBK7hj4Ov3rIwAAdHIIABBPCY2zXtMNMKrW8sZ63ksc\nA7jV5tgnr1445LgLrnQNwxp5dsFpT/kCNmApsNY0ZsweXj3TMOFbns/3BNbugl8V\ngCyLaxlfZcK9xrhuJ9l0HIlo0sdxAzCT/lXqw9ZasXzkmL4jGXWV92CNwJr6cvR/\nSGnmhXoq2Q+LJ/ptYHuHyNrpbfFrYABD1nayfw3qJcnNSEQUeyIPstwhRn9G2RlO\nmlpDL0T3aF2DesuhmP1DBLudElYKaE88J3VlUqU9N1BEaTTRJK1p6ZWa+k4UuF8i\nXHdQZVXyKZweJs2qXjUhxBvb072zfxlfIYd36jzjxMnGkmEE4IsBwFtGgUfZ/bw=\n=vl4I\n-----END PGP SIGNATURE-----\n", "payload": "tree fc22518e7df4fdb1d8c17a391932de3fa3eebc41\nparent c0e9530fd095317563532c20f13959619515c9b2\nparent ebf4448f78abaff3c666b61c3bb8a849db5c9b7f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1615558302 +0000\ncommitter GitHub <noreply@github.com> 1615558302 +0000\n\nMerge #7980\n\n7980: Fix remaining references to `cargo xtask codegen` r=matklad a=Veykril\n\n\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/393e2356594560dec84e73471f26a366a6fc91dd", "html_url": "https://github.com/rust-lang/rust/commit/393e2356594560dec84e73471f26a366a6fc91dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/393e2356594560dec84e73471f26a366a6fc91dd/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0e9530fd095317563532c20f13959619515c9b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0e9530fd095317563532c20f13959619515c9b2", "html_url": "https://github.com/rust-lang/rust/commit/c0e9530fd095317563532c20f13959619515c9b2"}, {"sha": "ebf4448f78abaff3c666b61c3bb8a849db5c9b7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebf4448f78abaff3c666b61c3bb8a849db5c9b7f", "html_url": "https://github.com/rust-lang/rust/commit/ebf4448f78abaff3c666b61c3bb8a849db5c9b7f"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "6c0e2272276b63eaa24a47864aa320227ab95a08", "filename": "crates/parser/src/grammar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/393e2356594560dec84e73471f26a366a6fc91dd/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/393e2356594560dec84e73471f26a366a6fc91dd/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=393e2356594560dec84e73471f26a366a6fc91dd", "patch": "@@ -18,7 +18,7 @@\n //! // fn foo() {}\n //! ```\n //!\n-//! After adding a new inline-test, run `cargo xtask codegen` to\n+//! After adding a new inline-test, run `cargo test -p xtask` to\n //! extract it as a standalone text-fixture into\n //! `crates/syntax/test_data/parser/`, and run `cargo test` once to\n //! create the \"gold\" value."}, {"sha": "fb991133aa74503463f18649c96187257294106a", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/393e2356594560dec84e73471f26a366a6fc91dd/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/393e2356594560dec84e73471f26a366a6fc91dd/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=393e2356594560dec84e73471f26a366a6fc91dd", "patch": "@@ -97,21 +97,21 @@ See [RFC](https://github.com/rust-lang/rfcs/pull/2256) and [./syntax.md](./synta\n \n - [rowan](https://github.com/rust-analyzer/rowan) library is used for constructing syntax trees.\n - `ast` provides a type safe API on top of the raw `rowan` tree.\n-- `ungrammar` description of the grammar, which is used to generate `syntax_kinds` and `ast` modules, using `cargo xtask codegen` command.\n+- `ungrammar` description of the grammar, which is used to generate `syntax_kinds` and `ast` modules, using `cargo test -p xtask` command.\n \n Tests for ra_syntax are mostly data-driven.\n `test_data/parser` contains subdirectories with a bunch of `.rs` (test vectors) and `.txt` files with corresponding syntax trees.\n During testing, we check `.rs` against `.txt`.\n If the `.txt` file is missing, it is created (this is how you update tests).\n-Additionally, running `cargo xtask codegen` will walk the grammar module and collect all `// test test_name` comments into files inside `test_data/parser/inline` directory.\n+Additionally, running the xtask test suite with `cargo test -p xtask` will walk the grammar module and collect all `// test test_name` comments into files inside `test_data/parser/inline` directory.\n \n To update test data, run with `UPDATE_EXPECT` variable:\n \n ```bash\n env UPDATE_EXPECT=1 cargo qt\n ```\n \n-After adding a new inline test you need to run `cargo xtest codegen` and also update the test data as described above.\n+After adding a new inline test you need to run `cargo test -p xtask` and also update the test data as described above.\n \n Note  [`api_walkthrough`](https://github.com/rust-analyzer/rust-analyzer/blob/2fb6af89eb794f775de60b82afe56b6f986c2a40/crates/ra_syntax/src/lib.rs#L190-L348)\n in particular: it shows off various methods of working with syntax tree."}, {"sha": "f4c37353cd5488c282af1718d2df1be971209eee", "filename": "docs/user/manual.adoc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/393e2356594560dec84e73471f26a366a6fc91dd/docs%2Fuser%2Fmanual.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/393e2356594560dec84e73471f26a366a6fc91dd/docs%2Fuser%2Fmanual.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fmanual.adoc?ref=393e2356594560dec84e73471f26a366a6fc91dd", "patch": "@@ -19,7 +19,7 @@ The LSP allows various code editors, like VS Code, Emacs or Vim, to implement se\n To improve this document, send a pull request: +\n https://github.com/rust-analyzer/rust-analyzer/blob/master/docs/user/manual.adoc[https://github.com/rust-analyzer/.../manual.adoc]\n \n-The manual is written in https://asciidoc.org[AsciiDoc] and includes some extra files which are generated from the source code. Run `cargo test` and `cargo xtask codegen` to create these and then `asciidoctor manual.adoc` to create an HTML copy.\n+The manual is written in https://asciidoc.org[AsciiDoc] and includes some extra files which are generated from the source code. Run `cargo test` and `cargo test -p xtask` to create these and then `asciidoctor manual.adoc` to create an HTML copy.\n \n ====\n "}, {"sha": "518e17e3897cace71c0a30c96afa1d59ff250239", "filename": "xtask/src/codegen.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/393e2356594560dec84e73471f26a366a6fc91dd/xtask%2Fsrc%2Fcodegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/393e2356594560dec84e73471f26a366a6fc91dd/xtask%2Fsrc%2Fcodegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen.rs?ref=393e2356594560dec84e73471f26a366a6fc91dd", "patch": "@@ -62,7 +62,7 @@ pub(crate) fn ensure_file_contents(file: &Path, contents: &str) -> Result<()> {\n         let _ = std::fs::create_dir_all(parent);\n     }\n     std::fs::write(file, contents).unwrap();\n-    anyhow::bail!(\"some file were not up to date\")\n+    anyhow::bail!(\"some file was not up to date and has been updated, simply re-run the tests\")\n }\n \n fn normalize_newlines(s: &str) -> String {"}, {"sha": "057cd57ae0746410d837d4d54aebabe547a47f2b", "filename": "xtask/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/393e2356594560dec84e73471f26a366a6fc91dd/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/393e2356594560dec84e73471f26a366a6fc91dd/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=393e2356594560dec84e73471f26a366a6fc91dd", "patch": "@@ -1,7 +1,7 @@\n //! See https://github.com/matklad/cargo-xtask/.\n //!\n //! This binary defines various auxiliary build commands, which are not\n-//! expressible with just `cargo`. Notably, it provides `cargo xtask codegen`\n+//! expressible with just `cargo`. Notably, it provides tests via `cargo test -p xtask`\n //! for code generation and `cargo xtask install` for installation of\n //! rust-analyzer server and client.\n //!"}]}