{"sha": "607fa14960cbba1a993fa89acc0bcc02e900cecc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwN2ZhMTQ5NjBjYmJhMWE5OTNmYTg5YWNjMGJjYzAyZTkwMGNlY2M=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-03-31T06:07:25Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-31T14:52:30Z"}, "message": "Rename incr_all_refcnts to take_ty, to match drop_ty", "tree": {"sha": "6aecaee60a04e8aa88b6c06ad89c56872499a949", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6aecaee60a04e8aa88b6c06ad89c56872499a949"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/607fa14960cbba1a993fa89acc0bcc02e900cecc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/607fa14960cbba1a993fa89acc0bcc02e900cecc", "html_url": "https://github.com/rust-lang/rust/commit/607fa14960cbba1a993fa89acc0bcc02e900cecc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/607fa14960cbba1a993fa89acc0bcc02e900cecc/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0b72ab47228f3eada3077f1eaae15ae53006d1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0b72ab47228f3eada3077f1eaae15ae53006d1d", "html_url": "https://github.com/rust-lang/rust/commit/b0b72ab47228f3eada3077f1eaae15ae53006d1d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "3fa5b699749f67be66ec678493dae6da0d193273", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/607fa14960cbba1a993fa89acc0bcc02e900cecc/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/607fa14960cbba1a993fa89acc0bcc02e900cecc/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=607fa14960cbba1a993fa89acc0bcc02e900cecc", "patch": "@@ -1668,7 +1668,7 @@ fn make_take_glue(@block_ctxt cx, ValueRef v, @ty.t t) -> result {\n \n     } else if (ty.type_is_structural(t)) {\n         ret iter_structural_ty(cx, v, t,\n-                               bind incr_all_refcnts(_, _, _));\n+                               bind take_ty(_, _, _));\n     }\n     ret res(cx, C_nil());\n }\n@@ -2315,7 +2315,7 @@ fn call_tydesc_glue(@block_ctxt cx, ValueRef v, @ty.t t, int field) {\n     call_tydesc_glue_full(td.bcx, v, td.val, field);\n }\n \n-fn incr_all_refcnts(@block_ctxt cx,\n+fn take_ty(@block_ctxt cx,\n                     ValueRef v,\n                     @ty.t t) -> result {\n     if (!ty.type_is_scalar(t)) {\n@@ -2397,15 +2397,15 @@ fn copy_ty(@block_ctxt cx,\n         ret res(cx, C_nil());\n \n     } else if (ty.type_is_boxed(t)) {\n-        auto r = incr_all_refcnts(cx, src, t);\n+        auto r = take_ty(cx, src, t);\n         if (action == DROP_EXISTING) {\n             r = drop_ty(r.bcx, r.bcx.build.Load(dst), t);\n         }\n         ret res(r.bcx, r.bcx.build.Store(src, dst));\n \n     } else if (ty.type_is_structural(t) ||\n                ty.type_has_dynamic_size(t)) {\n-        auto r = incr_all_refcnts(cx, src, t);\n+        auto r = take_ty(cx, src, t);\n         if (action == DROP_EXISTING) {\n             r = drop_ty(r.bcx, dst, t);\n         }"}]}