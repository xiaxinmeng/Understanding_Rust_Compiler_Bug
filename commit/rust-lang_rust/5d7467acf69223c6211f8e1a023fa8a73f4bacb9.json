{"sha": "5d7467acf69223c6211f8e1a023fa8a73f4bacb9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkNzQ2N2FjZjY5MjIzYzYyMTFmOGUxYTAyM2ZhOGE3M2Y0YmFjYjk=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-04-14T21:41:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-04-14T21:41:04Z"}, "message": "Rollup merge of #41172 - Aaron1011:rustdoc-overflow, r=frewsxcv\n\nFix rustdoc infinitely recursing when an external crate reexports itself\n\nPreviously, rustdoc's LibEmbargoVisitor unconditionally visited the\nchild modules of an external crate. If a module re-exported its parent\nvia `pub use super::*`, rustdoc would re-walk the parent, leading to\ninfinite recursion.\n\nThis commit makes LibEmbargoVisitor store already visited modules in an\nFxHashSet, ensuring that each module is only walked once.\n\nFixes #40936", "tree": {"sha": "e19a1726a7ae73872cefae7fce02567e6083dcb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e19a1726a7ae73872cefae7fce02567e6083dcb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d7467acf69223c6211f8e1a023fa8a73f4bacb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d7467acf69223c6211f8e1a023fa8a73f4bacb9", "html_url": "https://github.com/rust-lang/rust/commit/5d7467acf69223c6211f8e1a023fa8a73f4bacb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d7467acf69223c6211f8e1a023fa8a73f4bacb9/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6f6b445aa2fc71f626dff7f7c7988b04f4a292d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6f6b445aa2fc71f626dff7f7c7988b04f4a292d", "html_url": "https://github.com/rust-lang/rust/commit/e6f6b445aa2fc71f626dff7f7c7988b04f4a292d"}, {"sha": "63a291febac3ba2cb48787fed24388c2817ef4a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/63a291febac3ba2cb48787fed24388c2817ef4a2", "html_url": "https://github.com/rust-lang/rust/commit/63a291febac3ba2cb48787fed24388c2817ef4a2"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "40a6ffe9505fd1f834d2fce524e9171cdef07110", "filename": "src/librustdoc/visit_lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5d7467acf69223c6211f8e1a023fa8a73f4bacb9/src%2Flibrustdoc%2Fvisit_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7467acf69223c6211f8e1a023fa8a73f4bacb9/src%2Flibrustdoc%2Fvisit_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_lib.rs?ref=5d7467acf69223c6211f8e1a023fa8a73f4bacb9", "patch": "@@ -13,6 +13,7 @@ use rustc::middle::privacy::{AccessLevels, AccessLevel};\n use rustc::hir::def::Def;\n use rustc::hir::def_id::{CrateNum, CRATE_DEF_INDEX, DefId};\n use rustc::ty::Visibility;\n+use rustc::util::nodemap::FxHashSet;\n \n use std::cell::RefMut;\n \n@@ -29,6 +30,8 @@ pub struct LibEmbargoVisitor<'a, 'b: 'a, 'tcx: 'b> {\n     access_levels: RefMut<'a, AccessLevels<DefId>>,\n     // Previous accessibility level, None means unreachable\n     prev_level: Option<AccessLevel>,\n+    // Keeps track of already visited modules, in case a module re-exports its parent\n+    visited_mods: FxHashSet<DefId>,\n }\n \n impl<'a, 'b, 'tcx> LibEmbargoVisitor<'a, 'b, 'tcx> {\n@@ -38,6 +41,7 @@ impl<'a, 'b, 'tcx> LibEmbargoVisitor<'a, 'b, 'tcx> {\n             cstore: &*cx.sess().cstore,\n             access_levels: cx.access_levels.borrow_mut(),\n             prev_level: Some(AccessLevel::Public),\n+            visited_mods: FxHashSet()\n         }\n     }\n \n@@ -62,6 +66,10 @@ impl<'a, 'b, 'tcx> LibEmbargoVisitor<'a, 'b, 'tcx> {\n     }\n \n     pub fn visit_mod(&mut self, def_id: DefId) {\n+        if !self.visited_mods.insert(def_id) {\n+            return;\n+        }\n+\n         for item in self.cstore.item_children(def_id) {\n             self.visit_item(item.def);\n         }"}, {"sha": "54cc18cca23ac3e9ea7c826bcac1c1bb43ffb2b9", "filename": "src/test/rustdoc/auxiliary/issue-40936.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5d7467acf69223c6211f8e1a023fa8a73f4bacb9/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-40936.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7467acf69223c6211f8e1a023fa8a73f4bacb9/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-40936.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-40936.rs?ref=5d7467acf69223c6211f8e1a023fa8a73f4bacb9", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod outermod {\n+    pub mod innermod {\n+        pub use super::*;\n+    }\n+}"}, {"sha": "3e02eec1b9c306b06318ab7383161916d919327d", "filename": "src/test/rustdoc/issue-40936.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5d7467acf69223c6211f8e1a023fa8a73f4bacb9/src%2Ftest%2Frustdoc%2Fissue-40936.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7467acf69223c6211f8e1a023fa8a73f4bacb9/src%2Ftest%2Frustdoc%2Fissue-40936.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-40936.rs?ref=5d7467acf69223c6211f8e1a023fa8a73f4bacb9", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-40936.rs\n+// build-aux-docs\n+\n+#![crate_name = \"foo\"]\n+\n+extern crate issue_40936;"}]}