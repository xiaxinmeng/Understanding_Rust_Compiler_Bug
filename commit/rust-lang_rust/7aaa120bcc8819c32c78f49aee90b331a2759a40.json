{"sha": "7aaa120bcc8819c32c78f49aee90b331a2759a40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhYWExMjBiY2M4ODE5YzMyYzc4ZjQ5YWVlOTBiMzMxYTI3NTlhNDA=", "commit": {"author": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2012-04-07T18:00:00Z"}, "committer": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2012-04-07T18:05:09Z"}, "message": "Check version when resolving transitive dependent crates\n\nIssue #2138", "tree": {"sha": "e2d1e5220898dfb1284108f619c14ff54154a68b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2d1e5220898dfb1284108f619c14ff54154a68b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7aaa120bcc8819c32c78f49aee90b331a2759a40", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7aaa120bcc8819c32c78f49aee90b331a2759a40", "html_url": "https://github.com/rust-lang/rust/commit/7aaa120bcc8819c32c78f49aee90b331a2759a40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7aaa120bcc8819c32c78f49aee90b331a2759a40/comments", "author": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5aa5220f8a3fc3ec0c58dede9f4c14be4a3752af", "url": "https://api.github.com/repos/rust-lang/rust/commits/5aa5220f8a3fc3ec0c58dede9f4c14be4a3752af", "html_url": "https://github.com/rust-lang/rust/commit/5aa5220f8a3fc3ec0c58dede9f4c14be4a3752af"}], "stats": {"total": 62, "additions": 56, "deletions": 6}, "files": [{"sha": "ae3efa665ab8d766a870d41a612bd4fc0a33238b", "filename": "src/rustc/metadata/creader.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7aaa120bcc8819c32c78f49aee90b331a2759a40/src%2Frustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7aaa120bcc8819c32c78f49aee90b331a2759a40/src%2Frustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fcreader.rs?ref=7aaa120bcc8819c32c78f49aee90b331a2759a40", "patch": "@@ -314,16 +314,21 @@ fn load_library_crate(sess: session::session, ident: ast::ident, span: span,\n     }\n }\n \n-fn metas_with_ident(ident: ast::ident,\n+fn metas_with(ident: ast::ident, key: str,\n                     metas: [@ast::meta_item]) -> [@ast::meta_item] {\n-    let name_items = attr::find_meta_items_by_name(metas, \"name\");\n+    let name_items = attr::find_meta_items_by_name(metas, key);\n     if name_items.is_empty() {\n-        metas + [attr::mk_name_value_item_str(\"name\", ident)]\n+        metas + [attr::mk_name_value_item_str(key, ident)]\n     } else {\n         metas\n     }\n }\n \n+fn metas_with_ident(ident: ast::ident,\n+                    metas: [@ast::meta_item]) -> [@ast::meta_item] {\n+    metas_with(ident, \"name\", metas)\n+}\n+\n fn existing_match(e: env, metas: [@ast::meta_item]) -> option<int> {\n     let maybe_entry = e.crate_cache.find {|c|\n         metadata_matches(*c.metas, metas)\n@@ -381,11 +386,12 @@ fn resolve_crate_deps(e: env, cdata: @[u8]) -> cstore::cnum_map {\n     let cnum_map = int_hash::<ast::crate_num>();\n     for decoder::get_crate_deps(cdata).each {|dep|\n         let extrn_cnum = dep.cnum;\n-        let cname = dep.ident;\n+        let cname = dep.name;\n+        let cvers = dep.vers;\n         // FIXME: We really need to know the linkage metas of our transitive\n         // dependencies in order to resolve them correctly.\n-        let cmetas = [];\n-        #debug(\"resolving dep %s\", cname);\n+        let cmetas = metas_with(cvers, \"vers\", []);\n+        #debug(\"resolving dep %s ver: %s\", cname, dep.vers);\n         alt existing_match(e, metas_with_ident(cname, cmetas)) {\n           some(local_cnum) {\n             #debug(\"already have it\");"}, {"sha": "3c41daa1e8b30cd82cad527fe2f2fddc9ee515d9", "filename": "src/test/auxiliary/crateresolve4a-1.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7aaa120bcc8819c32c78f49aee90b331a2759a40/src%2Ftest%2Fauxiliary%2Fcrateresolve4a-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7aaa120bcc8819c32c78f49aee90b331a2759a40/src%2Ftest%2Fauxiliary%2Fcrateresolve4a-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve4a-1.rs?ref=7aaa120bcc8819c32c78f49aee90b331a2759a40", "patch": "@@ -0,0 +1,4 @@\n+#[link(name = \"crateresolve4a\", vers = \"0.1\")];\n+#[crate_type = \"lib\"];\n+\n+fn f() -> int { 10 }"}, {"sha": "cba82fd55b9bb25c78d9f1cbcbd081b79a11086b", "filename": "src/test/auxiliary/crateresolve4a-2.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7aaa120bcc8819c32c78f49aee90b331a2759a40/src%2Ftest%2Fauxiliary%2Fcrateresolve4a-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7aaa120bcc8819c32c78f49aee90b331a2759a40/src%2Ftest%2Fauxiliary%2Fcrateresolve4a-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve4a-2.rs?ref=7aaa120bcc8819c32c78f49aee90b331a2759a40", "patch": "@@ -0,0 +1,4 @@\n+#[link(name = \"crateresolve4a\", vers= \"0.2\")];\n+#[crate_type = \"lib\"];\n+\n+fn g() -> int { 20 }"}, {"sha": "b5cda2a814e0f45eec31dbcba2a6812727138d56", "filename": "src/test/auxiliary/crateresolve4b-1.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7aaa120bcc8819c32c78f49aee90b331a2759a40/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7aaa120bcc8819c32c78f49aee90b331a2759a40/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-1.rs?ref=7aaa120bcc8819c32c78f49aee90b331a2759a40", "patch": "@@ -0,0 +1,8 @@\n+// aux-build:crateresolve4a-1.rs\n+// aux-build:crateresolve4a-2.rs\n+#[link(name = \"crateresolve4b\", vers = \"0.1\")];\n+#[crate_type = \"lib\"];\n+\n+use crateresolve4a(vers=\"0.2\");\n+\n+fn f() -> int { crateresolve4a::g() }"}, {"sha": "1129b98542c797f5787de7afeb989c151e8f26ef", "filename": "src/test/auxiliary/crateresolve4b-2.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7aaa120bcc8819c32c78f49aee90b331a2759a40/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7aaa120bcc8819c32c78f49aee90b331a2759a40/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve4b-2.rs?ref=7aaa120bcc8819c32c78f49aee90b331a2759a40", "patch": "@@ -0,0 +1,8 @@\n+// aux-build:crateresolve4a-1.rs\n+// aux-build:crateresolve4a-2.rs\n+#[link(name = \"crateresolve4b\", vers = \"0.2\")];\n+#[crate_type = \"lib\"];\n+\n+use crateresolve4a(vers=\"0.1\");\n+\n+fn g() -> int { crateresolve4a::f() }"}, {"sha": "1fe8393ab7aa48dd16af5513c0a403f15705add7", "filename": "src/test/run-pass/crateresolve4.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7aaa120bcc8819c32c78f49aee90b331a2759a40/src%2Ftest%2Frun-pass%2Fcrateresolve4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7aaa120bcc8819c32c78f49aee90b331a2759a40/src%2Ftest%2Frun-pass%2Fcrateresolve4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve4.rs?ref=7aaa120bcc8819c32c78f49aee90b331a2759a40", "patch": "@@ -0,0 +1,20 @@\n+// xfail-fast\n+// aux-build:crateresolve4a-1.rs\n+// aux-build:crateresolve4a-2.rs\n+// aux-build:crateresolve4b-1.rs\n+// aux-build:crateresolve4b-2.rs\n+\n+mod a {\n+    use crateresolve4b(vers = \"0.1\");\n+    fn f() { assert crateresolve4b::f() == 20; }\n+}\n+\n+mod b {\n+    use crateresolve4b(vers = \"0.2\");\n+    fn f() { assert crateresolve4b::g() == 10; }\n+}\n+\n+fn main() {\n+    a::f();\n+    b::f();\n+}"}]}