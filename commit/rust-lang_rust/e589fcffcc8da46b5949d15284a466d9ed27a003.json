{"sha": "e589fcffcc8da46b5949d15284a466d9ed27a003", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ODlmY2ZmY2M4ZGE0NmI1OTQ5ZDE1Mjg0YTQ2NmQ5ZWQyN2EwMDM=", "commit": {"author": {"name": "Bruno de Oliveira Abinader", "email": "bruno.d@partner.samsung.com", "date": "2014-02-25T02:54:34Z"}, "committer": {"name": "Bruno de Oliveira Abinader", "email": "bruno.d@partner.samsung.com", "date": "2014-02-27T12:35:46Z"}, "message": "Implemented list::len() based on Container trait", "tree": {"sha": "46eb9a0648af8123d64fc6351025449abdaf6734", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46eb9a0648af8123d64fc6351025449abdaf6734"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e589fcffcc8da46b5949d15284a466d9ed27a003", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e589fcffcc8da46b5949d15284a466d9ed27a003", "html_url": "https://github.com/rust-lang/rust/commit/e589fcffcc8da46b5949d15284a466d9ed27a003", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e589fcffcc8da46b5949d15284a466d9ed27a003/comments", "author": {"login": "brunoabinader", "id": 76133, "node_id": "MDQ6VXNlcjc2MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/76133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoabinader", "html_url": "https://github.com/brunoabinader", "followers_url": "https://api.github.com/users/brunoabinader/followers", "following_url": "https://api.github.com/users/brunoabinader/following{/other_user}", "gists_url": "https://api.github.com/users/brunoabinader/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoabinader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoabinader/subscriptions", "organizations_url": "https://api.github.com/users/brunoabinader/orgs", "repos_url": "https://api.github.com/users/brunoabinader/repos", "events_url": "https://api.github.com/users/brunoabinader/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoabinader/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brunoabinader", "id": 76133, "node_id": "MDQ6VXNlcjc2MTMz", "avatar_url": "https://avatars.githubusercontent.com/u/76133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoabinader", "html_url": "https://github.com/brunoabinader", "followers_url": "https://api.github.com/users/brunoabinader/followers", "following_url": "https://api.github.com/users/brunoabinader/following{/other_user}", "gists_url": "https://api.github.com/users/brunoabinader/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoabinader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoabinader/subscriptions", "organizations_url": "https://api.github.com/users/brunoabinader/orgs", "repos_url": "https://api.github.com/users/brunoabinader/repos", "events_url": "https://api.github.com/users/brunoabinader/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoabinader/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "197116d7ce7862b21eac6af498a2726d7a1bc3d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/197116d7ce7862b21eac6af498a2726d7a1bc3d6", "html_url": "https://github.com/rust-lang/rust/commit/197116d7ce7862b21eac6af498a2726d7a1bc3d6"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "9223669c787639340577aee3220101b12c565c58", "filename": "src/libcollections/list.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e589fcffcc8da46b5949d15284a466d9ed27a003/src%2Flibcollections%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e589fcffcc8da46b5949d15284a466d9ed27a003/src%2Flibcollections%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flist.rs?ref=e589fcffcc8da46b5949d15284a466d9ed27a003", "patch": "@@ -10,6 +10,8 @@\n \n //! A standard, garbage-collected linked list.\n \n+use std::container::Container;\n+\n #[deriving(Clone, Eq)]\n #[allow(missing_doc)]\n pub enum List<T> {\n@@ -53,6 +55,11 @@ impl<T> List<T> {\n     }\n }\n \n+impl<T> Container for List<T> {\n+    /// Returns the length of a list\n+    fn len(&self) -> uint { self.iter().len() }\n+}\n+\n /// Returns true if a list contains an element with the given value\n pub fn has<T:Eq>(list: @List<T>, element: T) -> bool {\n     let mut found = false;\n@@ -70,13 +77,6 @@ pub fn is_empty<T>(list: @List<T>) -> bool {\n     }\n }\n \n-/// Returns the length of a list\n-pub fn len<T>(list: @List<T>) -> uint {\n-    let mut count = 0u;\n-    iter(list, |_e| count += 1u);\n-    count\n-}\n-\n /// Returns all but the first element of a list\n pub fn tail<T>(list: @List<T>) -> @List<T> {\n     match *list {\n@@ -252,10 +252,11 @@ mod tests {\n \n     #[test]\n     fn test_len() {\n-        let list = @List::from_vec([0, 1, 2]);\n-        let empty = @list::Nil::<int>;\n-        assert_eq!(list::len(list), 3u);\n-        assert_eq!(list::len(empty), 0u);\n+        let empty = Nil::<int>;\n+        assert_eq!(empty.len(), 0u);\n+\n+        let list = List::from_vec([0, 1, 2]);\n+        assert_eq!(list.len(), 3u);\n     }\n \n     #[test]"}]}