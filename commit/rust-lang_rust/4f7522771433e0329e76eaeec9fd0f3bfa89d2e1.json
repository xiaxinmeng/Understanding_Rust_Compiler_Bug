{"sha": "4f7522771433e0329e76eaeec9fd0f3bfa89d2e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNzUyMjc3MTQzM2UwMzI5ZTc2ZWFlZWM5ZmQwZjNiZmE4OWQyZTE=", "commit": {"author": {"name": "Theodore DeRego", "email": "tderego94@gmail.com", "date": "2015-05-01T02:52:11Z"}, "committer": {"name": "Theodore DeRego", "email": "tderego94@gmail.com", "date": "2015-05-01T02:52:11Z"}, "message": "Spaces around  in type bounds", "tree": {"sha": "9db4946dc8f7be514b8c42b9c33612ce2903f89d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9db4946dc8f7be514b8c42b9c33612ce2903f89d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f7522771433e0329e76eaeec9fd0f3bfa89d2e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f7522771433e0329e76eaeec9fd0f3bfa89d2e1", "html_url": "https://github.com/rust-lang/rust/commit/4f7522771433e0329e76eaeec9fd0f3bfa89d2e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f7522771433e0329e76eaeec9fd0f3bfa89d2e1/comments", "author": {"login": "tedsta", "id": 1218723, "node_id": "MDQ6VXNlcjEyMTg3MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1218723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedsta", "html_url": "https://github.com/tedsta", "followers_url": "https://api.github.com/users/tedsta/followers", "following_url": "https://api.github.com/users/tedsta/following{/other_user}", "gists_url": "https://api.github.com/users/tedsta/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedsta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedsta/subscriptions", "organizations_url": "https://api.github.com/users/tedsta/orgs", "repos_url": "https://api.github.com/users/tedsta/repos", "events_url": "https://api.github.com/users/tedsta/events{/privacy}", "received_events_url": "https://api.github.com/users/tedsta/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tedsta", "id": 1218723, "node_id": "MDQ6VXNlcjEyMTg3MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1218723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedsta", "html_url": "https://github.com/tedsta", "followers_url": "https://api.github.com/users/tedsta/followers", "following_url": "https://api.github.com/users/tedsta/following{/other_user}", "gists_url": "https://api.github.com/users/tedsta/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedsta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedsta/subscriptions", "organizations_url": "https://api.github.com/users/tedsta/orgs", "repos_url": "https://api.github.com/users/tedsta/repos", "events_url": "https://api.github.com/users/tedsta/events{/privacy}", "received_events_url": "https://api.github.com/users/tedsta/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "381491b3b36de5fd1bbddf1afc77c54a8768e464", "url": "https://api.github.com/repos/rust-lang/rust/commits/381491b3b36de5fd1bbddf1afc77c54a8768e464", "html_url": "https://github.com/rust-lang/rust/commit/381491b3b36de5fd1bbddf1afc77c54a8768e464"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "c16b9eadf4e522d97c5187de8182ee709228855c", "filename": "src/types.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4f7522771433e0329e76eaeec9fd0f3bfa89d2e1/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f7522771433e0329e76eaeec9fd0f3bfa89d2e1/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=4f7522771433e0329e76eaeec9fd0f3bfa89d2e1", "patch": "@@ -28,20 +28,20 @@ impl<'a> FmtVisitor<'a> {\n                     format!(\"for<{}> {}: {}\",\n                             bound_lifetimes.iter().map(|l| self.rewrite_lifetime_def(l)).collect::<Vec<_>>().connect(\", \"),\n                             pprust::ty_to_string(bounded_ty),\n-                            bounds.iter().map(|b| self.rewrite_ty_bound(b)).collect::<Vec<_>>().connect(\"+\"))\n+                            bounds.iter().map(|b| self.rewrite_ty_bound(b)).collect::<Vec<_>>().connect(\" + \"))\n \n                 } else {\n                     format!(\"{}: {}\",\n                             pprust::ty_to_string(bounded_ty),\n-                            bounds.iter().map(|b| self.rewrite_ty_bound(b)).collect::<Vec<_>>().connect(\"+\"))\n+                            bounds.iter().map(|b| self.rewrite_ty_bound(b)).collect::<Vec<_>>().connect(\" + \"))\n                 }\n             }\n             &ast::WherePredicate::RegionPredicate(ast::WhereRegionPredicate{ref lifetime,\n                                                                             ref bounds,\n                                                                             ..}) => {\n                 format!(\"{}: {}\",\n                         pprust::lifetime_to_string(lifetime),\n-                        bounds.iter().map(|l| pprust::lifetime_to_string(l)).collect::<Vec<_>>().connect(\"+\"))\n+                        bounds.iter().map(|l| pprust::lifetime_to_string(l)).collect::<Vec<_>>().connect(\" + \"))\n             }\n             &ast::WherePredicate::EqPredicate(ast::WhereEqPredicate{ref path, ref ty, ..}) => {\n                 format!(\"{} = {}\", pprust::path_to_string(path), pprust::ty_to_string(ty))\n@@ -57,7 +57,7 @@ impl<'a> FmtVisitor<'a> {\n \n         format!(\"{}: {}\",\n                 pprust::lifetime_to_string(&lifetime.lifetime),\n-                lifetime.bounds.iter().map(|l| pprust::lifetime_to_string(l)).collect::<Vec<_>>().connect(\"+\"))\n+                lifetime.bounds.iter().map(|l| pprust::lifetime_to_string(l)).collect::<Vec<_>>().connect(\" + \"))\n     }\n \n     pub fn rewrite_ty_bound(&self, bound: &ast::TyParamBound) -> String\n@@ -81,7 +81,7 @@ impl<'a> FmtVisitor<'a> {\n         result.push_str(&token::get_ident(ty_param.ident));\n         if ty_param.bounds.len() > 0 {\n             result.push_str(\": \");\n-            result.push_str(&ty_param.bounds.iter().map(|b| self.rewrite_ty_bound(b)).collect::<Vec<_>>().connect(\"+\"));\n+            result.push_str(&ty_param.bounds.iter().map(|b| self.rewrite_ty_bound(b)).collect::<Vec<_>>().connect(\" + \"));\n         }\n         if let Some(ref def) = ty_param.default {\n             result.push_str(\" = \");"}, {"sha": "aec27597b7a15e5ca42a4850fff3e3387be686b4", "filename": "tests/idem/fn.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4f7522771433e0329e76eaeec9fd0f3bfa89d2e1/tests%2Fidem%2Ffn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f7522771433e0329e76eaeec9fd0f3bfa89d2e1/tests%2Fidem%2Ffn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fidem%2Ffn.rs?ref=4f7522771433e0329e76eaeec9fd0f3bfa89d2e1", "patch": "@@ -41,7 +41,11 @@ impl Foo {\n     }\n }\n \n-pub fn render<'a, N: Clone+'a, E: Clone+'a, G: Labeller<'a, N, E>+GraphWalk<'a, N, E>, W: Write>\n+pub fn render<'a,\n+              N: Clone + 'a,\n+              E: Clone + 'a,\n+              G: Labeller<'a, N, E> + GraphWalk<'a, N, E>,\n+              W: Write>\n     (g: &'a G,\n      w: &mut W)\n      -> io::Result<()> {"}]}