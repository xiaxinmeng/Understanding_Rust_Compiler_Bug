{"sha": "02d50de63e50423c9cbaf3daa46dde6c9c5c9dba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZDUwZGU2M2U1MDQyM2M5Y2JhZjNkYWE0NmRkZTZjOWM1YzlkYmE=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2018-10-25T22:48:27Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2018-11-06T20:36:43Z"}, "message": "Add a tracking issue for extra Layout methods", "tree": {"sha": "95170b7dd4a19dd6b6df578cfccb441d9d97ebe3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95170b7dd4a19dd6b6df578cfccb441d9d97ebe3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02d50de63e50423c9cbaf3daa46dde6c9c5c9dba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02d50de63e50423c9cbaf3daa46dde6c9c5c9dba", "html_url": "https://github.com/rust-lang/rust/commit/02d50de63e50423c9cbaf3daa46dde6c9c5c9dba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02d50de63e50423c9cbaf3daa46dde6c9c5c9dba/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de027b64f1052cbeed911b5e98aab8803cfe302e", "url": "https://api.github.com/repos/rust-lang/rust/commits/de027b64f1052cbeed911b5e98aab8803cfe302e", "html_url": "https://github.com/rust-lang/rust/commit/de027b64f1052cbeed911b5e98aab8803cfe302e"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "c082a6d8ef0ddb03b642622cc9442c2591a78094", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02d50de63e50423c9cbaf3daa46dde6c9c5c9dba/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d50de63e50423c9cbaf3daa46dde6c9c5c9dba/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=02d50de63e50423c9cbaf3daa46dde6c9c5c9dba", "patch": "@@ -119,6 +119,7 @@\n #![feature(const_vec_new)]\n #![feature(slice_partition_dedup)]\n #![feature(maybe_uninit)]\n+#![feature(alloc_layout_extra)]\n \n // Allow testing this library\n "}, {"sha": "113a85abecbef4613163b79d0056cde77513faf8", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/02d50de63e50423c9cbaf3daa46dde6c9c5c9dba/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d50de63e50423c9cbaf3daa46dde6c9c5c9dba/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=02d50de63e50423c9cbaf3daa46dde6c9c5c9dba", "patch": "@@ -167,7 +167,7 @@ impl Layout {\n     /// Returns an error if the combination of `self.size()` and the given\n     /// `align` violates the conditions listed in\n     /// [`Layout::from_size_align`](#method.from_size_align).\n-    #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n+    #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n     #[inline]\n     pub fn align_to(&self, align: usize) -> Result<Self, LayoutErr> {\n         Layout::from_size_align(self.size(), cmp::max(self.align(), align))\n@@ -189,7 +189,7 @@ impl Layout {\n     /// to be less than or equal to the alignment of the starting\n     /// address for the whole allocated block of memory. One way to\n     /// satisfy this constraint is to ensure `align <= self.align()`.\n-    #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n+    #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n     #[inline]\n     pub fn padding_needed_for(&self, align: usize) -> usize {\n         let len = self.size();\n@@ -226,7 +226,7 @@ impl Layout {\n     /// of each element in the array.\n     ///\n     /// On arithmetic overflow, returns `LayoutErr`.\n-    #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n+    #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n     #[inline]\n     pub fn repeat(&self, n: usize) -> Result<(Self, usize), LayoutErr> {\n         let padded_size = self.size().checked_add(self.padding_needed_for(self.align()))\n@@ -255,7 +255,7 @@ impl Layout {\n     /// (assuming that the record itself starts at offset 0).\n     ///\n     /// On arithmetic overflow, returns `LayoutErr`.\n-    #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n+    #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n     #[inline]\n     pub fn extend(&self, next: Self) -> Result<(Self, usize), LayoutErr> {\n         let new_align = cmp::max(self.align(), next.align());\n@@ -282,7 +282,7 @@ impl Layout {\n     /// aligned.\n     ///\n     /// On arithmetic overflow, returns `LayoutErr`.\n-    #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n+    #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n     #[inline]\n     pub fn repeat_packed(&self, n: usize) -> Result<Self, LayoutErr> {\n         let size = self.size().checked_mul(n).ok_or(LayoutErr { private: () })?;\n@@ -295,7 +295,7 @@ impl Layout {\n     /// and is not incorporated *at all* into the resulting layout.\n     ///\n     /// On arithmetic overflow, returns `LayoutErr`.\n-    #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n+    #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n     #[inline]\n     pub fn extend_packed(&self, next: Self) -> Result<Self, LayoutErr> {\n         let new_size = self.size().checked_add(next.size())\n@@ -307,7 +307,7 @@ impl Layout {\n     /// Creates a layout describing the record for a `[T; n]`.\n     ///\n     /// On arithmetic overflow, returns `LayoutErr`.\n-    #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n+    #[unstable(feature = \"alloc_layout_extra\", issue = \"55724\")]\n     #[inline]\n     pub fn array<T>(n: usize) -> Result<Self, LayoutErr> {\n         Layout::new::<T>()"}, {"sha": "b3c137f971b8d7f6e6a609f1260d079f363b96a4", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02d50de63e50423c9cbaf3daa46dde6c9c5c9dba/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d50de63e50423c9cbaf3daa46dde6c9c5c9dba/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=02d50de63e50423c9cbaf3daa46dde6c9c5c9dba", "patch": "@@ -310,6 +310,7 @@\n #![feature(doc_keyword)]\n #![feature(panic_info_message)]\n #![feature(non_exhaustive)]\n+#![feature(alloc_layout_extra)]\n \n #![default_lib_allocator]\n "}]}