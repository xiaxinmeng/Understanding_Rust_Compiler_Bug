{"sha": "180202fa4d5db2b32216f35ec9a8b3c05252efc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MDIwMmZhNGQ1ZGIyYjMyMjE2ZjM1ZWM5YThiM2MwNTI1MmVmYzE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-27T22:04:18Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-27T22:04:47Z"}, "message": "libcore: Fix core test", "tree": {"sha": "89bd1cf6f2b814dff722b1d191d95725c4ac2aa7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89bd1cf6f2b814dff722b1d191d95725c4ac2aa7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/180202fa4d5db2b32216f35ec9a8b3c05252efc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/180202fa4d5db2b32216f35ec9a8b3c05252efc1", "html_url": "https://github.com/rust-lang/rust/commit/180202fa4d5db2b32216f35ec9a8b3c05252efc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/180202fa4d5db2b32216f35ec9a8b3c05252efc1/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c6e470a257fc546555aa10ededded4a77460a71", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c6e470a257fc546555aa10ededded4a77460a71", "html_url": "https://github.com/rust-lang/rust/commit/0c6e470a257fc546555aa10ededded4a77460a71"}], "stats": {"total": 44, "additions": 27, "deletions": 17}, "files": [{"sha": "0f27f4ddfb14fd415dcab078fc562aa391228fa1", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/180202fa4d5db2b32216f35ec9a8b3c05252efc1/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/180202fa4d5db2b32216f35ec9a8b3c05252efc1/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=180202fa4d5db2b32216f35ec9a8b3c05252efc1", "patch": "@@ -16,14 +16,17 @@ trait Eq {\n     pure fn eq(&&other: self) -> bool;\n }\n \n+#[cfg(notest)]\n pure fn lt<T: Ord>(v1: &T, v2: &T) -> bool {\n     v1.lt(*v2)\n }\n \n+#[cfg(notest)]\n pure fn le<T: Ord Eq>(v1: &T, v2: &T) -> bool {\n     v1.lt(*v2) || v1.eq(*v2)\n }\n \n+#[cfg(notest)]\n pure fn eq<T: Eq>(v1: &T, v2: &T) -> bool {\n     v1.eq(*v2)\n }"}, {"sha": "953a7a9494d3be7dd6cb7f865a7c89fc089290b3", "filename": "src/libcore/int-template.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/180202fa4d5db2b32216f35ec9a8b3c05252efc1/src%2Flibcore%2Fint-template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/180202fa4d5db2b32216f35ec9a8b3c05252efc1/src%2Flibcore%2Fint-template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fint-template.rs?ref=180202fa4d5db2b32216f35ec9a8b3c05252efc1", "patch": "@@ -1,5 +1,4 @@\n import T = inst::T;\n-import cmp::{Eq, Ord};\n import num::from_int;\n \n export min_value, max_value;\n@@ -63,19 +62,23 @@ pure fn abs(i: T) -> T {\n     if is_negative(i) { -i } else { i }\n }\n \n-impl T: Ord {\n-    pure fn lt(&&other: T) -> bool {\n-        return self < other;\n+#[cfg(notest)]\n+mod impls {\n+    import cmp::{Eq, Ord};\n+\n+    impl T: Ord {\n+        pure fn lt(&&other: T) -> bool {\n+            return self < other;\n+        }\n     }\n-}\n \n-impl T: Eq {\n-    pure fn eq(&&other: T) -> bool {\n-        return self == other;\n+    impl T: Eq {\n+        pure fn eq(&&other: T) -> bool {\n+            return self == other;\n+        }\n     }\n }\n \n-\n impl T: num::Num {\n     pure fn add(&&other: T)    -> T { return self + other; }\n     pure fn sub(&&other: T)    -> T { return self - other; }"}, {"sha": "48681661ee71a08c14b213eb33441dfdea1e6fac", "filename": "src/libcore/uint-template.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/180202fa4d5db2b32216f35ec9a8b3c05252efc1/src%2Flibcore%2Fuint-template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/180202fa4d5db2b32216f35ec9a8b3c05252efc1/src%2Flibcore%2Fuint-template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fuint-template.rs?ref=180202fa4d5db2b32216f35ec9a8b3c05252efc1", "patch": "@@ -1,5 +1,4 @@\n import T = inst::T;\n-import cmp::{Eq, Ord};\n \n export min_value, max_value;\n export min, max;\n@@ -56,15 +55,20 @@ pure fn compl(i: T) -> T {\n     max_value ^ i\n }\n \n-impl T: Ord {\n-    pure fn lt(&&other: T) -> bool {\n-        return self < other;\n+#[cfg(notest)]\n+mod impls {\n+    import cmp::{Eq, Ord};\n+\n+    impl T: Ord {\n+        pure fn lt(&&other: T) -> bool {\n+            return self < other;\n+        }\n     }\n-}\n \n-impl T: Eq {\n-    pure fn eq(&&other: T) -> bool {\n-        return self == other;\n+    impl T: Eq {\n+        pure fn eq(&&other: T) -> bool {\n+            return self == other;\n+        }\n     }\n }\n "}]}