{"sha": "e6aafbc70781bd346c6363a166641baa4f224a14", "node_id": "C_kwDOAAsO6NoAKGU2YWFmYmM3MDc4MWJkMzQ2YzYzNjNhMTY2NjQxYmFhNGYyMjRhMTQ", "commit": {"author": {"name": "Ralf Sager", "email": "rsa@3fnc.org", "date": "2022-04-17T07:42:15Z"}, "committer": {"name": "Ralf Sager", "email": "rsa@3fnc.org", "date": "2022-04-17T07:42:15Z"}, "message": "move import to fix warning with emscripten target", "tree": {"sha": "7df5656832baf44a411621cae55f2664e84c2671", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7df5656832baf44a411621cae55f2664e84c2671"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6aafbc70781bd346c6363a166641baa4f224a14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6aafbc70781bd346c6363a166641baa4f224a14", "html_url": "https://github.com/rust-lang/rust/commit/e6aafbc70781bd346c6363a166641baa4f224a14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6aafbc70781bd346c6363a166641baa4f224a14/comments", "author": {"login": "anonion0", "id": 11861766, "node_id": "MDQ6VXNlcjExODYxNzY2", "avatar_url": "https://avatars.githubusercontent.com/u/11861766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anonion0", "html_url": "https://github.com/anonion0", "followers_url": "https://api.github.com/users/anonion0/followers", "following_url": "https://api.github.com/users/anonion0/following{/other_user}", "gists_url": "https://api.github.com/users/anonion0/gists{/gist_id}", "starred_url": "https://api.github.com/users/anonion0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anonion0/subscriptions", "organizations_url": "https://api.github.com/users/anonion0/orgs", "repos_url": "https://api.github.com/users/anonion0/repos", "events_url": "https://api.github.com/users/anonion0/events{/privacy}", "received_events_url": "https://api.github.com/users/anonion0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anonion0", "id": 11861766, "node_id": "MDQ6VXNlcjExODYxNzY2", "avatar_url": "https://avatars.githubusercontent.com/u/11861766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anonion0", "html_url": "https://github.com/anonion0", "followers_url": "https://api.github.com/users/anonion0/followers", "following_url": "https://api.github.com/users/anonion0/following{/other_user}", "gists_url": "https://api.github.com/users/anonion0/gists{/gist_id}", "starred_url": "https://api.github.com/users/anonion0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anonion0/subscriptions", "organizations_url": "https://api.github.com/users/anonion0/orgs", "repos_url": "https://api.github.com/users/anonion0/repos", "events_url": "https://api.github.com/users/anonion0/events{/privacy}", "received_events_url": "https://api.github.com/users/anonion0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c492355aa5282522f8653a4517506a9c0be31164", "url": "https://api.github.com/repos/rust-lang/rust/commits/c492355aa5282522f8653a4517506a9c0be31164", "html_url": "https://github.com/rust-lang/rust/commit/c492355aa5282522f8653a4517506a9c0be31164"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "84c5aa8a81b3626daf7800bbfe829e389b4bb163", "filename": "library/std/src/sys/unix/process/process_unix.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e6aafbc70781bd346c6363a166641baa4f224a14/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6aafbc70781bd346c6363a166641baa4f224a14/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=e6aafbc70781bd346c6363a166641baa4f224a14", "patch": "@@ -279,7 +279,7 @@ impl Command {\n         stdio: ChildPipes,\n         maybe_envp: Option<&CStringArray>,\n     ) -> Result<!, io::Error> {\n-        use crate::sys::{self, cvt_nz, cvt_r};\n+        use crate::sys::{self, cvt_r};\n \n         if let Some(fd) = stdio.stdin.fd() {\n             cvt_r(|| libc::dup2(fd, libc::STDIN_FILENO))?;\n@@ -324,6 +324,7 @@ impl Command {\n         #[cfg(not(target_os = \"emscripten\"))]\n         {\n             use crate::mem::MaybeUninit;\n+            use crate::sys::cvt_nz;\n             // Reset signal handling so the child process starts in a\n             // standardized state. libstd ignores SIGPIPE, and signal-handling\n             // libraries often set a mask. Child processes inherit ignored"}]}