{"sha": "1486b7f91ce18962038ef36d2479e57e27a569ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ODZiN2Y5MWNlMTg5NjIwMzhlZjM2ZDI0NzllNTdlMjdhNTY5ZWQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-21T14:01:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-21T14:01:34Z"}, "message": "Rollup merge of #64641 - cuviper:extern-rust-ctypes, r=estebank\n\nExempt extern \"Rust\" from improper_ctypes\n\nIt should be fine for Rust ABIs to involve any Rust type.\n\nFixes #64593.", "tree": {"sha": "7e06ceccadc69cf3115de1a8461ce7808a9b1a8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e06ceccadc69cf3115de1a8461ce7808a9b1a8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1486b7f91ce18962038ef36d2479e57e27a569ed", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdhi0+CRBK7hj4Ov3rIwAAdHIIAI4DxfAZcglZHAd2SyuJ4PTI\nSLEE5sbdy5eP5iTIRMF3flonHhHvUNQU9Qu4MzsnWTaZqlWN5ePAZHhcjxsyBVEb\nOrAaZ7yBhFvj/NQ8/2MwCKYqxRW+DDaeYX+lFIDm9plDv89Hc0/rd0ipgDgTSYEk\n6UCsRervMs4aPEcMgDAdKTSMc+WIqPZBfnPFjal++6tk2yHhYAdENNZXZQpWufsO\nVP/zGoTeCiDs32VfHv/Argumo0HixeMoxL/ubyqiTmPNJIBaQ0ZDyYvQ+sccPfS5\nFIjJZN70FSvr+VBUSFfgD/2wAbyLJeUmVADVAqC4edkf2I5siuLj/Lxuo8MGqWs=\n=aIck\n-----END PGP SIGNATURE-----\n", "payload": "tree 7e06ceccadc69cf3115de1a8461ce7808a9b1a8e\nparent 6254d7a80a77db4d314353e418d36e1a6317c749\nparent 9f374da46781cfe2d297636fe97b2fd9647cb1d9\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569074494 +0200\ncommitter GitHub <noreply@github.com> 1569074494 +0200\n\nRollup merge of #64641 - cuviper:extern-rust-ctypes, r=estebank\n\nExempt extern \"Rust\" from improper_ctypes\n\nIt should be fine for Rust ABIs to involve any Rust type.\n\nFixes #64593.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1486b7f91ce18962038ef36d2479e57e27a569ed", "html_url": "https://github.com/rust-lang/rust/commit/1486b7f91ce18962038ef36d2479e57e27a569ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1486b7f91ce18962038ef36d2479e57e27a569ed/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6254d7a80a77db4d314353e418d36e1a6317c749", "url": "https://api.github.com/repos/rust-lang/rust/commits/6254d7a80a77db4d314353e418d36e1a6317c749", "html_url": "https://github.com/rust-lang/rust/commit/6254d7a80a77db4d314353e418d36e1a6317c749"}, {"sha": "9f374da46781cfe2d297636fe97b2fd9647cb1d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f374da46781cfe2d297636fe97b2fd9647cb1d9", "html_url": "https://github.com/rust-lang/rust/commit/9f374da46781cfe2d297636fe97b2fd9647cb1d9"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "a39fcd5ad4c580fef0c96d466dc3d9c05728249d", "filename": "src/liballoc/alloc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1486b7f91ce18962038ef36d2479e57e27a569ed/src%2Fliballoc%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1486b7f91ce18962038ef36d2479e57e27a569ed/src%2Fliballoc%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Falloc.rs?ref=1486b7f91ce18962038ef36d2479e57e27a569ed", "patch": "@@ -240,7 +240,7 @@ pub(crate) unsafe fn box_free<T: ?Sized>(ptr: Unique<T>) {\n #[stable(feature = \"global_alloc\", since = \"1.28.0\")]\n #[rustc_allocator_nounwind]\n pub fn handle_alloc_error(layout: Layout) -> ! {\n-    #[allow(improper_ctypes)]\n+    #[cfg_attr(bootstrap, allow(improper_ctypes))]\n     extern \"Rust\" {\n         #[lang = \"oom\"]\n         fn oom_impl(layout: Layout) -> !;"}, {"sha": "3d2bc24bf24a5dc35e54f9e58ec1eae895e415f7", "filename": "src/libcore/panicking.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1486b7f91ce18962038ef36d2479e57e27a569ed/src%2Flibcore%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1486b7f91ce18962038ef36d2479e57e27a569ed/src%2Flibcore%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpanicking.rs?ref=1486b7f91ce18962038ef36d2479e57e27a569ed", "patch": "@@ -71,7 +71,7 @@ pub fn panic_fmt(fmt: fmt::Arguments<'_>, file_line_col: &(&'static str, u32, u3\n     }\n \n     // NOTE This function never crosses the FFI boundary; it's a Rust-to-Rust call\n-    #[allow(improper_ctypes)] // PanicInfo contains a trait object which is not FFI safe\n+    #[cfg_attr(boostrap_stdarch_ignore_this, allow(improper_ctypes))]\n     extern \"Rust\" {\n         #[lang = \"panic_impl\"]\n         fn panic_impl(pi: &PanicInfo<'_>) -> !;"}, {"sha": "40261f6d13739d0b04668b35cd0dc2f7dbfca596", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1486b7f91ce18962038ef36d2479e57e27a569ed/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1486b7f91ce18962038ef36d2479e57e27a569ed/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=1486b7f91ce18962038ef36d2479e57e27a569ed", "patch": "@@ -975,7 +975,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ImproperCTypes {\n     fn check_foreign_item(&mut self, cx: &LateContext<'_, '_>, it: &hir::ForeignItem) {\n         let mut vis = ImproperCTypesVisitor { cx };\n         let abi = cx.tcx.hir().get_foreign_abi(it.hir_id);\n-        if abi != Abi::RustIntrinsic && abi != Abi::PlatformIntrinsic {\n+        if let Abi::Rust | Abi::RustCall | Abi::RustIntrinsic | Abi::PlatformIntrinsic = abi {\n+            // Don't worry about types in internal ABIs.\n+        } else {\n             match it.node {\n                 hir::ForeignItemKind::Fn(ref decl, _, _) => {\n                     vis.check_foreign_fn(it.hir_id, decl);"}, {"sha": "9e787f638a9989d7827d58bf6e4845847f8c458f", "filename": "src/test/ui/issues/issue-64593.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1486b7f91ce18962038ef36d2479e57e27a569ed/src%2Ftest%2Fui%2Fissues%2Fissue-64593.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1486b7f91ce18962038ef36d2479e57e27a569ed/src%2Ftest%2Fui%2Fissues%2Fissue-64593.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-64593.rs?ref=1486b7f91ce18962038ef36d2479e57e27a569ed", "patch": "@@ -0,0 +1,12 @@\n+// check-pass\n+#![deny(improper_ctypes)]\n+\n+pub struct Error(std::num::NonZeroU32);\n+\n+extern \"Rust\" {\n+    fn foo(dest: &mut [u8]) -> Result<(), Error>;\n+}\n+\n+fn main() {\n+    let _ = unsafe { foo(&mut []) };\n+}"}]}