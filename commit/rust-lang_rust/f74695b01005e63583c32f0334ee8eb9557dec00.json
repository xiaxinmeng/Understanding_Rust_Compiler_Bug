{"sha": "f74695b01005e63583c32f0334ee8eb9557dec00", "node_id": "C_kwDOAAsO6NoAKGY3NDY5NWIwMTAwNWU2MzU4M2MzMmYwMzM0ZWU4ZWI5NTU3ZGVjMDA", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-31T17:28:24Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-31T17:28:24Z"}, "message": "Document handling of StorageDead.", "tree": {"sha": "ea6935de1b0b21f40e3bd74cb31e0be9a2850f1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea6935de1b0b21f40e3bd74cb31e0be9a2850f1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f74695b01005e63583c32f0334ee8eb9557dec00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f74695b01005e63583c32f0334ee8eb9557dec00", "html_url": "https://github.com/rust-lang/rust/commit/f74695b01005e63583c32f0334ee8eb9557dec00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f74695b01005e63583c32f0334ee8eb9557dec00/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e11e4081df2a23914e1552b82b8e4b8c7bc457cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e11e4081df2a23914e1552b82b8e4b8c7bc457cb", "html_url": "https://github.com/rust-lang/rust/commit/e11e4081df2a23914e1552b82b8e4b8c7bc457cb"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "40c7b5a164597e8ea993a9e591de3f164c9a170c", "filename": "compiler/rustc_mir_transform/src/const_prop.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f74695b01005e63583c32f0334ee8eb9557dec00/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f74695b01005e63583c32f0334ee8eb9557dec00/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs?ref=f74695b01005e63583c32f0334ee8eb9557dec00", "patch": "@@ -889,6 +889,21 @@ impl<'tcx> MutVisitor<'tcx> for ConstPropagator<'_, 'tcx> {\n             StatementKind::StorageLive(local) => {\n                 Self::remove_const(&mut self.ecx, local);\n             }\n+            // We do not need to mark dead locals as such. For `FullConstProp` locals,\n+            // this allows to propagate the single assigned value in this case:\n+            // ```\n+            // let x = SOME_CONST;\n+            // if a {\n+            //   f(copy x);\n+            //   StorageDead(x);\n+            // } else {\n+            //   g(copy x);\n+            //   StorageDead(x);\n+            // }\n+            // ```\n+            //\n+            // This may propagate a constant where the local would be uninit or dead.\n+            // In both cases, this does not matter, as those reads would be UB anyway.\n             _ => {}\n         }\n     }"}]}