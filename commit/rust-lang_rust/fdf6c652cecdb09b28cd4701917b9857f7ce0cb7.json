{"sha": "fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZjZjNjUyY2VjZGIwOWIyOGNkNDcwMTkxN2I5ODU3ZjdjZTBjYjc=", "commit": {"author": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-11-29T04:39:46Z"}, "committer": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-12-01T06:26:29Z"}, "message": "Moved all of the tests over to ui and annotated why they are failing with appropriate fixme comments", "tree": {"sha": "493e0d6060736bed07f6efd127c301b983e87fa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/493e0d6060736bed07f6efd127c301b983e87fa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "html_url": "https://github.com/rust-lang/rust/commit/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/comments", "author": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db4408a3ce89551cc89e73d56928a06f67aa1c11", "url": "https://api.github.com/repos/rust-lang/rust/commits/db4408a3ce89551cc89e73d56928a06f67aa1c11", "html_url": "https://github.com/rust-lang/rust/commit/db4408a3ce89551cc89e73d56928a06f67aa1c11"}], "stats": {"total": 132, "additions": 97, "deletions": 35}, "files": [{"sha": "724ec2496f24cdc6a342f903b786e68caa392969", "filename": "src/test/compile-fail/feature-gate-generic_associated_types.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fcompile-fail%2Ffeature-gate-generic_associated_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fcompile-fail%2Ffeature-gate-generic_associated_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-generic_associated_types.rs?ref=fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "patch": "@@ -12,13 +12,17 @@ use std::ops::Deref;\n \n trait PointerFamily<U> {\n     type Pointer<T>: Deref<Target = T>;\n+    //~^ ERROR generic associated types are unstable\n     type Pointer2<T>: Deref<Target = T> where T: Clone, U: Clone;\n+    //~^ ERROR generic associated types are unstable\n }\n \n struct Foo;\n impl PointerFamily<u32> for Foo {\n     type Pointer<usize> = Box<usize>;\n+    //~^ ERROR generic associated types are unstable\n     type Pointer2<u32> = Box<u32>;\n+    //~^ ERROR generic associated types are unstable\n }\n \n fn main() {}"}, {"sha": "892a925f3d5696689ea455802989389c8c9f81d6", "filename": "src/test/run-pass/rfc1598-generic-associated-types/whitespace-before-generics.rs", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/db4408a3ce89551cc89e73d56928a06f67aa1c11/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fwhitespace-before-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db4408a3ce89551cc89e73d56928a06f67aa1c11/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fwhitespace-before-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fwhitespace-before-generics.rs?ref=db4408a3ce89551cc89e73d56928a06f67aa1c11", "patch": "@@ -1,35 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![feature(generic_associated_types)]\n-\n-// Checking the interaction with this other feature\n-#![feature(associated_type_defaults)]\n-\n-use std::fmt::{Display, Debug};\n-\n-trait Foo {\n-    type Assoc where Self: Sized;\n-    type Assoc2 <T >where T: Display;\n-    type WithDefault <T> = Iterator <Item=T> where T: Debug;\n-    // No generics on this associated type\n-    type NoGenerics;\n-}\n-\n-struct Bar;\n-\n-impl Foo for Bar {\n-    type Assoc = usize;\n-    type Assoc2 <T> = Vec<T>;\n-    type WithDefault<'a, T> = &'a Iterator<T>;\n-    type NoGenerics = f64;\n-}\n-\n-fn main() {}"}, {"sha": "87a0b33e63b5ed99f6b090b1b963a61e803d5cb4", "filename": "src/test/ui/rfc1598-generic-associated-types/construct_with_other_type.rs", "status": "renamed", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.rs?ref=fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "patch": "@@ -10,6 +10,8 @@\n \n #![feature(generic_associated_types)]\n \n+//FIXME(#44265): \"undeclared lifetime\" errors will be addressed in a follow-up PR\n+\n trait Foo {\n     type Bar<'a, 'b>;\n }\n@@ -20,6 +22,7 @@ trait Baz {\n \n impl<T> Baz for T where T: Foo {\n     type Quux<'a> = <T as Foo>::Bar<'a, 'static>;\n+    //~^ ERROR undeclared lifetime\n }\n \n fn main() {}", "previous_filename": "src/test/run-pass/rfc1598-generic-associated-types/construct_with_other_type.rs"}, {"sha": "3c3c5d12627818fd533ba5cbd8c6ac1d6fef4789", "filename": "src/test/ui/rfc1598-generic-associated-types/construct_with_other_type.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fconstruct_with_other_type.stderr?ref=fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "patch": "@@ -0,0 +1,8 @@\n+error[E0261]: use of undeclared lifetime name `'a`\n+  --> $DIR/construct_with_other_type.rs:24:37\n+   |\n+24 |     type Quux<'a> = <T as Foo>::Bar<'a, 'static>;\n+   |                                     ^^ undeclared lifetime\n+\n+error: aborting due to previous error\n+"}, {"sha": "af580aeccf7c60f09169b5f81578a1a4c6c9cb68", "filename": "src/test/ui/rfc1598-generic-associated-types/generic-associated-types-where.rs", "status": "renamed", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.rs?ref=fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "patch": "@@ -13,12 +13,15 @@\n // Checking the interaction with this other feature\n #![feature(associated_type_defaults)]\n \n+//FIXME(#44265): \"undeclared lifetime\" errors will be addressed in a follow-up PR\n+\n use std::fmt::{Display, Debug};\n \n trait Foo {\n     type Assoc where Self: Sized;\n     type Assoc2<T> where T: Display;\n     type WithDefault<T> where T: Debug = Iterator<Item=T>;\n+    type NoGenerics;\n }\n \n struct Bar;\n@@ -27,6 +30,8 @@ impl Foo for Bar {\n     type Assoc = usize;\n     type Assoc2<T> = Vec<T>;\n     type WithDefault<'a, T> = &'a Iterator<T>;\n+    //~^ ERROR undeclared lifetime\n+    type NoGenerics = ::std::cell::Cell<i32>;\n }\n \n fn main() {}", "previous_filename": "src/test/run-pass/rfc1598-generic-associated-types/generic-associated-types-where.rs"}, {"sha": "1ffeb36f6aedab92a4cdbe4878103cdf0df3b2b2", "filename": "src/test/ui/rfc1598-generic-associated-types/generic-associated-types-where.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.stderr?ref=fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "patch": "@@ -0,0 +1,8 @@\n+error[E0261]: use of undeclared lifetime name `'a`\n+  --> $DIR/generic-associated-types-where.rs:32:32\n+   |\n+32 |     type WithDefault<'a, T> = &'a Iterator<T>;\n+   |                                ^^ undeclared lifetime\n+\n+error: aborting due to previous error\n+"}, {"sha": "0019c4be5e8e0c9f4c6db1cb3271bdd7ba58a244", "filename": "src/test/ui/rfc1598-generic-associated-types/iterable.rs", "status": "renamed", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.rs?ref=fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "patch": "@@ -10,9 +10,12 @@\n \n #![feature(generic_associated_types)]\n \n+//FIXME(#44265): \"undeclared lifetime\" errors will be addressed in a follow-up PR\n+\n trait Iterable {\n     type Item<'a>;\n     type Iter<'a>: Iterator<Item = Self::Item<'a>>;\n+    //~^ ERROR undeclared lifetime\n \n     fn iter<'a>(&'a self) -> Self::Iter<'a>;\n }", "previous_filename": "src/test/run-pass/rfc1598-generic-associated-types/iterable.rs"}, {"sha": "0e565047afe63a84007baeba8308e245f4e79b78", "filename": "src/test/ui/rfc1598-generic-associated-types/iterable.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.stderr?ref=fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "patch": "@@ -0,0 +1,8 @@\n+error[E0261]: use of undeclared lifetime name `'a`\n+  --> $DIR/iterable.rs:17:47\n+   |\n+17 |     type Iter<'a>: Iterator<Item = Self::Item<'a>>;\n+   |                                               ^^ undeclared lifetime\n+\n+error: aborting due to previous error\n+"}, {"sha": "cbeeb1d6ca7b292686f21deaa02e27405e47ace6", "filename": "src/test/ui/rfc1598-generic-associated-types/pointer_family.rs", "status": "renamed", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.rs?ref=fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "patch": "@@ -10,20 +10,24 @@\n \n #![feature(generic_associated_types)]\n \n+//FIXME(#44265): \"type parameter not allowed\" errors will be addressed in a follow-up PR\n+\n use std::rc::Rc;\n use std::sync::Arc;\n use std::ops::Deref;\n \n trait PointerFamily {\n     type Pointer<T>: Deref<Target = T>;\n     fn new<T>(value: T) -> Self::Pointer<T>;\n+    //~^ ERROR type parameters are not allowed on this type [E0109]\n }\n \n struct ArcFamily;\n \n impl PointerFamily for ArcFamily {\n     type Pointer<T> = Arc<T>;\n     fn new<T>(value: T) -> Self::Pointer<T> {\n+    //~^ ERROR type parameters are not allowed on this type [E0109]\n         Arc::new(value)\n     }\n }\n@@ -33,12 +37,14 @@ struct RcFamily;\n impl PointerFamily for RcFamily {\n     type Pointer<T> = Rc<T>;\n     fn new<T>(value: T) -> Self::Pointer<T> {\n+    //~^ ERROR type parameters are not allowed on this type [E0109]\n         Rc::new(value)\n     }\n }\n \n struct Foo<P: PointerFamily> {\n     bar: P::Pointer<String>,\n+    //~^ ERROR type parameters are not allowed on this type [E0109]\n }\n \n fn main() {}", "previous_filename": "src/test/run-pass/rfc1598-generic-associated-types/pointer_family.rs"}, {"sha": "cc7f06f3b86d5f113b1c950ef9793210e058ce0d", "filename": "src/test/ui/rfc1598-generic-associated-types/pointer_family.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fpointer_family.stderr?ref=fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "patch": "@@ -0,0 +1,26 @@\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/pointer_family.rs:46:21\n+   |\n+46 |     bar: P::Pointer<String>,\n+   |                     ^^^^^^ type parameter not allowed\n+\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/pointer_family.rs:21:42\n+   |\n+21 |     fn new<T>(value: T) -> Self::Pointer<T>;\n+   |                                          ^ type parameter not allowed\n+\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/pointer_family.rs:29:42\n+   |\n+29 |     fn new<T>(value: T) -> Self::Pointer<T> {\n+   |                                          ^ type parameter not allowed\n+\n+error[E0109]: type parameters are not allowed on this type\n+  --> $DIR/pointer_family.rs:39:42\n+   |\n+39 |     fn new<T>(value: T) -> Self::Pointer<T> {\n+   |                                          ^ type parameter not allowed\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "f9e270ee92e22999d832518d729288f9a66786d7", "filename": "src/test/ui/rfc1598-generic-associated-types/streaming_iterator.rs", "status": "renamed", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.rs?ref=fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "patch": "@@ -10,23 +10,29 @@\n \n #![feature(generic_associated_types)]\n \n+//FIXME(#44265): \"lifetime parameter not allowed on this type\" errors will be addressed in a\n+// follow-up PR\n+\n use std::fmt::Display;\n \n trait StreamingIterator {\n     type Item<'a>;\n     // Applying the lifetime parameter `'a` to `Self::Item` inside the trait.\n     fn next<'a>(&'a self) -> Option<Self::Item<'a>>;\n+    //~^ ERROR lifetime parameters are not allowed on this type [E0110]\n }\n \n struct Foo<T: StreamingIterator> {\n     // Applying a concrete lifetime to the constructor outside the trait.\n     bar: <T as StreamingIterator>::Item<'static>,\n+    //~^ ERROR lifetime parameters are not allowed on this type [E0110]\n }\n \n // Users can bound parameters by the type constructed by that trait's associated type constructor\n // of a trait using HRTB. Both type equality bounds and trait bounds of this kind are valid:\n //FIXME(sunjay): This next line should parse and be valid\n //fn foo<T: for<'a> StreamingIterator<Item<'a>=&'a [i32]>>(iter: T) { /* ... */ }\n fn foo<T>(iter: T) where T: StreamingIterator, for<'a> T::Item<'a>: Display { /* ... */ }\n+//~^ ERROR lifetime parameters are not allowed on this type [E0110]\n \n fn main() {}", "previous_filename": "src/test/run-pass/rfc1598-generic-associated-types/streaming_iterator.rs"}, {"sha": "b1908d022ed067cbd4e9c84789d206a0e34cad95", "filename": "src/test/ui/rfc1598-generic-associated-types/streaming_iterator.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fdf6c652cecdb09b28cd4701917b9857f7ce0cb7/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fstreaming_iterator.stderr?ref=fdf6c652cecdb09b28cd4701917b9857f7ce0cb7", "patch": "@@ -0,0 +1,20 @@\n+error[E0110]: lifetime parameters are not allowed on this type\n+  --> $DIR/streaming_iterator.rs:27:41\n+   |\n+27 |     bar: <T as StreamingIterator>::Item<'static>,\n+   |                                         ^^^^^^^ lifetime parameter not allowed on this type\n+\n+error[E0110]: lifetime parameters are not allowed on this type\n+  --> $DIR/streaming_iterator.rs:35:64\n+   |\n+35 | fn foo<T>(iter: T) where T: StreamingIterator, for<'a> T::Item<'a>: Display { /* ... */ }\n+   |                                                                ^^ lifetime parameter not allowed on this type\n+\n+error[E0110]: lifetime parameters are not allowed on this type\n+  --> $DIR/streaming_iterator.rs:21:48\n+   |\n+21 |     fn next<'a>(&'a self) -> Option<Self::Item<'a>>;\n+   |                                                ^^ lifetime parameter not allowed on this type\n+\n+error: aborting due to 3 previous errors\n+"}]}