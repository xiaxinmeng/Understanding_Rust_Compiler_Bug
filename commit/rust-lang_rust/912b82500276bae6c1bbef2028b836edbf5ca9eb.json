{"sha": "912b82500276bae6c1bbef2028b836edbf5ca9eb", "node_id": "C_kwDOAAsO6NoAKDkxMmI4MjUwMDI3NmJhZTZjMWJiZWYyMDI4YjgzNmVkYmY1Y2E5ZWI", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-01-30T03:58:23Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-02-21T00:51:56Z"}, "message": "Use `ThinVec` in `ast::PatKind::Struct`.", "tree": {"sha": "31f0d8f64d3cf5f172348df5fef5d7e93568a3c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31f0d8f64d3cf5f172348df5fef5d7e93568a3c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/912b82500276bae6c1bbef2028b836edbf5ca9eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/912b82500276bae6c1bbef2028b836edbf5ca9eb", "html_url": "https://github.com/rust-lang/rust/commit/912b82500276bae6c1bbef2028b836edbf5ca9eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/912b82500276bae6c1bbef2028b836edbf5ca9eb/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1807027248f57d98a1490bfbe9eb3d3de944e60f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1807027248f57d98a1490bfbe9eb3d3de944e60f", "html_url": "https://github.com/rust-lang/rust/commit/1807027248f57d98a1490bfbe9eb3d3de944e60f"}], "stats": {"total": 122, "additions": 61, "deletions": 61}, "files": [{"sha": "48a86b2753a6502ecdcae4fc3dd6c9d36ca0c246", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/912b82500276bae6c1bbef2028b836edbf5ca9eb/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/912b82500276bae6c1bbef2028b836edbf5ca9eb/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=912b82500276bae6c1bbef2028b836edbf5ca9eb", "patch": "@@ -722,7 +722,7 @@ pub enum PatKind {\n \n     /// A struct or struct variant pattern (e.g., `Variant {x, y, ..}`).\n     /// The `bool` is `true` in the presence of a `..`.\n-    Struct(Option<P<QSelf>>, Path, Vec<PatField>, /* recovered */ bool),\n+    Struct(Option<P<QSelf>>, Path, ThinVec<PatField>, /* recovered */ bool),\n \n     /// A tuple struct/variant pattern (`Variant(x, y, .., z)`).\n     TupleStruct(Option<P<QSelf>>, Path, ThinVec<P<Pat>>),\n@@ -3128,10 +3128,10 @@ mod size_asserts {\n     static_assert_size!(Local, 72);\n     static_assert_size!(MetaItemLit, 40);\n     static_assert_size!(Param, 40);\n-    static_assert_size!(Pat, 88);\n+    static_assert_size!(Pat, 72);\n     static_assert_size!(Path, 24);\n     static_assert_size!(PathSegment, 24);\n-    static_assert_size!(PatKind, 64);\n+    static_assert_size!(PatKind, 48);\n     static_assert_size!(Stmt, 32);\n     static_assert_size!(StmtKind, 16);\n     static_assert_size!(Ty, 64);"}, {"sha": "c99b72a26349083f7230b55ea0fc2aee989d3867", "filename": "compiler/rustc_builtin_macros/src/deriving/debug.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/912b82500276bae6c1bbef2028b836edbf5ca9eb/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/912b82500276bae6c1bbef2028b836edbf5ca9eb/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fdebug.rs?ref=912b82500276bae6c1bbef2028b836edbf5ca9eb", "patch": "@@ -224,11 +224,11 @@ fn show_fieldless_enum(\n             let pat = match &v.data {\n                 ast::VariantData::Tuple(fields, _) => {\n                     debug_assert!(fields.is_empty());\n-                    cx.pat_tuple_struct(span, variant_path, thin_vec![])\n+                    cx.pat_tuple_struct(span, variant_path, ThinVec::new())\n                 }\n                 ast::VariantData::Struct(fields, _) => {\n                     debug_assert!(fields.is_empty());\n-                    cx.pat_struct(span, variant_path, vec![])\n+                    cx.pat_struct(span, variant_path, ThinVec::new())\n                 }\n                 ast::VariantData::Unit(_) => cx.pat_path(span, variant_path),\n             };"}, {"sha": "b09d3e0842fdff790ef6774efc5e8f1f296692b7", "filename": "compiler/rustc_expand/src/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/912b82500276bae6c1bbef2028b836edbf5ca9eb/compiler%2Frustc_expand%2Fsrc%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/912b82500276bae6c1bbef2028b836edbf5ca9eb/compiler%2Frustc_expand%2Fsrc%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbuild.rs?ref=912b82500276bae6c1bbef2028b836edbf5ca9eb", "patch": "@@ -486,7 +486,7 @@ impl<'a> ExtCtxt<'a> {\n         &self,\n         span: Span,\n         path: ast::Path,\n-        field_pats: Vec<ast::PatField>,\n+        field_pats: ThinVec<ast::PatField>,\n     ) -> P<ast::Pat> {\n         self.pat(span, PatKind::Struct(None, path, field_pats, false))\n     }"}, {"sha": "94f7031fad231872427fc8ffbc8b4d780ed1bf66", "filename": "compiler/rustc_parse/src/parser/pat.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/912b82500276bae6c1bbef2028b836edbf5ca9eb/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/912b82500276bae6c1bbef2028b836edbf5ca9eb/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs?ref=912b82500276bae6c1bbef2028b836edbf5ca9eb", "patch": "@@ -23,7 +23,7 @@ use rustc_errors::{\n use rustc_session::errors::ExprParenthesesNeeded;\n use rustc_span::source_map::{respan, Span, Spanned};\n use rustc_span::symbol::{kw, sym, Ident};\n-use thin_vec::thin_vec;\n+use thin_vec::{thin_vec, ThinVec};\n \n #[derive(PartialEq, Copy, Clone)]\n pub enum Expected {\n@@ -854,7 +854,7 @@ impl<'a> Parser<'a> {\n             e.span_label(path.span, \"while parsing the fields for this pattern\");\n             e.emit();\n             self.recover_stmt();\n-            (vec![], true)\n+            (ThinVec::new(), true)\n         });\n         self.bump();\n         Ok(PatKind::Struct(qself, path, fields, etc))\n@@ -933,8 +933,8 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Parses the fields of a struct-like pattern.\n-    fn parse_pat_fields(&mut self) -> PResult<'a, (Vec<PatField>, bool)> {\n-        let mut fields = Vec::new();\n+    fn parse_pat_fields(&mut self) -> PResult<'a, (ThinVec<PatField>, bool)> {\n+        let mut fields = ThinVec::new();\n         let mut etc = false;\n         let mut ate_comma = true;\n         let mut delayed_err: Option<DiagnosticBuilder<'a, ErrorGuaranteed>> = None;"}, {"sha": "4e53070798f947f6c3d358abcedbe60ff2c4b07d", "filename": "tests/ui/stats/hir-stats.stderr", "status": "modified", "additions": 51, "deletions": 51, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/912b82500276bae6c1bbef2028b836edbf5ca9eb/tests%2Fui%2Fstats%2Fhir-stats.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/912b82500276bae6c1bbef2028b836edbf5ca9eb/tests%2Fui%2Fstats%2Fhir-stats.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstats%2Fhir-stats.stderr?ref=912b82500276bae6c1bbef2028b836edbf5ca9eb", "patch": "@@ -7,7 +7,7 @@ ast-stats-1 ExprField                 48 ( 0.7%)             1            48\n ast-stats-1 WherePredicate            56 ( 0.8%)             1            56\n ast-stats-1 - BoundPredicate            56 ( 0.8%)             1\n ast-stats-1 Crate                     56 ( 0.8%)             1            56\n-ast-stats-1 Attribute                 64 ( 0.9%)             2            32\n+ast-stats-1 Attribute                 64 ( 1.0%)             2            32\n ast-stats-1 - Normal                    32 ( 0.5%)             1\n ast-stats-1 - DocComment                32 ( 0.5%)             1\n ast-stats-1 Local                     72 ( 1.1%)             1            72\n@@ -21,45 +21,45 @@ ast-stats-1 - Local                     32 ( 0.5%)             1\n ast-stats-1 - MacCall                   32 ( 0.5%)             1\n ast-stats-1 - Expr                      96 ( 1.4%)             3\n ast-stats-1 Param                    160 ( 2.4%)             4            40\n-ast-stats-1 Block                    192 ( 2.8%)             6            32\n+ast-stats-1 Block                    192 ( 2.9%)             6            32\n ast-stats-1 Variant                  208 ( 3.1%)             2           104\n-ast-stats-1 GenericBound             224 ( 3.3%)             4            56\n-ast-stats-1 - Trait                    224 ( 3.3%)             4\n-ast-stats-1 AssocItem                416 ( 6.2%)             4           104\n+ast-stats-1 GenericBound             224 ( 3.4%)             4            56\n+ast-stats-1 - Trait                    224 ( 3.4%)             4\n+ast-stats-1 AssocItem                416 ( 6.3%)             4           104\n ast-stats-1 - Type                     208 ( 3.1%)             2\n ast-stats-1 - Fn                       208 ( 3.1%)             2\n-ast-stats-1 GenericParam             480 ( 7.1%)             5            96\n-ast-stats-1 Expr                     576 ( 8.5%)             8            72\n+ast-stats-1 GenericParam             480 ( 7.2%)             5            96\n+ast-stats-1 Pat                      504 ( 7.6%)             7            72\n+ast-stats-1 - Struct                    72 ( 1.1%)             1\n+ast-stats-1 - Wild                      72 ( 1.1%)             1\n+ast-stats-1 - Ident                    360 ( 5.4%)             5\n+ast-stats-1 Expr                     576 ( 8.7%)             8            72\n ast-stats-1 - Path                      72 ( 1.1%)             1\n ast-stats-1 - Match                     72 ( 1.1%)             1\n ast-stats-1 - Struct                    72 ( 1.1%)             1\n-ast-stats-1 - Lit                      144 ( 2.1%)             2\n-ast-stats-1 - Block                    216 ( 3.2%)             3\n-ast-stats-1 Pat                      616 ( 9.1%)             7            88\n-ast-stats-1 - Struct                    88 ( 1.3%)             1\n-ast-stats-1 - Wild                      88 ( 1.3%)             1\n-ast-stats-1 - Ident                    440 ( 6.5%)             5\n-ast-stats-1 PathSegment              720 (10.7%)            30            24\n-ast-stats-1 Ty                       896 (13.3%)            14            64\n-ast-stats-1 - Ptr                       64 ( 0.9%)             1\n-ast-stats-1 - Ref                       64 ( 0.9%)             1\n+ast-stats-1 - Lit                      144 ( 2.2%)             2\n+ast-stats-1 - Block                    216 ( 3.3%)             3\n+ast-stats-1 PathSegment              720 (10.8%)            30            24\n+ast-stats-1 Ty                       896 (13.5%)            14            64\n+ast-stats-1 - Ptr                       64 ( 1.0%)             1\n+ast-stats-1 - Ref                       64 ( 1.0%)             1\n ast-stats-1 - ImplicitSelf             128 ( 1.9%)             2\n-ast-stats-1 - Path                     640 ( 9.5%)            10\n-ast-stats-1 Item                   1_296 (19.2%)             9           144\n-ast-stats-1 - Trait                    144 ( 2.1%)             1\n-ast-stats-1 - Enum                     144 ( 2.1%)             1\n-ast-stats-1 - ForeignMod               144 ( 2.1%)             1\n-ast-stats-1 - Impl                     144 ( 2.1%)             1\n+ast-stats-1 - Path                     640 ( 9.6%)            10\n+ast-stats-1 Item                   1_296 (19.5%)             9           144\n+ast-stats-1 - Trait                    144 ( 2.2%)             1\n+ast-stats-1 - Enum                     144 ( 2.2%)             1\n+ast-stats-1 - ForeignMod               144 ( 2.2%)             1\n+ast-stats-1 - Impl                     144 ( 2.2%)             1\n ast-stats-1 - Fn                       288 ( 4.3%)             2\n-ast-stats-1 - Use                      432 ( 6.4%)             3\n+ast-stats-1 - Use                      432 ( 6.5%)             3\n ast-stats-1 ----------------------------------------------------------------\n-ast-stats-1 Total                  6_752\n+ast-stats-1 Total                  6_640\n ast-stats-1\n ast-stats-2 POST EXPANSION AST STATS\n ast-stats-2 Name                Accumulated Size         Count     Item Size\n ast-stats-2 ----------------------------------------------------------------\n-ast-stats-2 GenericArgs               40 ( 0.5%)             1            40\n-ast-stats-2 - AngleBracketed            40 ( 0.5%)             1\n+ast-stats-2 GenericArgs               40 ( 0.6%)             1            40\n+ast-stats-2 - AngleBracketed            40 ( 0.6%)             1\n ast-stats-2 ExprField                 48 ( 0.7%)             1            48\n ast-stats-2 WherePredicate            56 ( 0.8%)             1            56\n ast-stats-2 - BoundPredicate            56 ( 0.8%)             1\n@@ -68,9 +68,9 @@ ast-stats-2 Local                     72 ( 1.0%)             1            72\n ast-stats-2 Arm                       96 ( 1.3%)             2            48\n ast-stats-2 ForeignItem               96 ( 1.3%)             1            96\n ast-stats-2 - Fn                        96 ( 1.3%)             1\n-ast-stats-2 InlineAsm                120 ( 1.6%)             1           120\n-ast-stats-2 FnDecl                   120 ( 1.6%)             5            24\n-ast-stats-2 Attribute                128 ( 1.7%)             4            32\n+ast-stats-2 InlineAsm                120 ( 1.7%)             1           120\n+ast-stats-2 FnDecl                   120 ( 1.7%)             5            24\n+ast-stats-2 Attribute                128 ( 1.8%)             4            32\n ast-stats-2 - DocComment                32 ( 0.4%)             1\n ast-stats-2 - Normal                    96 ( 1.3%)             3\n ast-stats-2 FieldDef                 160 ( 2.2%)             2            80\n@@ -80,40 +80,40 @@ ast-stats-2 - Semi                      32 ( 0.4%)             1\n ast-stats-2 - Expr                      96 ( 1.3%)             3\n ast-stats-2 Param                    160 ( 2.2%)             4            40\n ast-stats-2 Block                    192 ( 2.6%)             6            32\n-ast-stats-2 Variant                  208 ( 2.8%)             2           104\n-ast-stats-2 GenericBound             224 ( 3.0%)             4            56\n-ast-stats-2 - Trait                    224 ( 3.0%)             4\n-ast-stats-2 AssocItem                416 ( 5.6%)             4           104\n-ast-stats-2 - Type                     208 ( 2.8%)             2\n-ast-stats-2 - Fn                       208 ( 2.8%)             2\n-ast-stats-2 GenericParam             480 ( 6.5%)             5            96\n-ast-stats-2 Pat                      616 ( 8.4%)             7            88\n-ast-stats-2 - Struct                    88 ( 1.2%)             1\n-ast-stats-2 - Wild                      88 ( 1.2%)             1\n-ast-stats-2 - Ident                    440 ( 6.0%)             5\n-ast-stats-2 Expr                     648 ( 8.8%)             9            72\n+ast-stats-2 Variant                  208 ( 2.9%)             2           104\n+ast-stats-2 GenericBound             224 ( 3.1%)             4            56\n+ast-stats-2 - Trait                    224 ( 3.1%)             4\n+ast-stats-2 AssocItem                416 ( 5.7%)             4           104\n+ast-stats-2 - Type                     208 ( 2.9%)             2\n+ast-stats-2 - Fn                       208 ( 2.9%)             2\n+ast-stats-2 GenericParam             480 ( 6.6%)             5            96\n+ast-stats-2 Pat                      504 ( 6.9%)             7            72\n+ast-stats-2 - Struct                    72 ( 1.0%)             1\n+ast-stats-2 - Wild                      72 ( 1.0%)             1\n+ast-stats-2 - Ident                    360 ( 5.0%)             5\n+ast-stats-2 Expr                     648 ( 8.9%)             9            72\n ast-stats-2 - Path                      72 ( 1.0%)             1\n ast-stats-2 - Match                     72 ( 1.0%)             1\n ast-stats-2 - Struct                    72 ( 1.0%)             1\n ast-stats-2 - InlineAsm                 72 ( 1.0%)             1\n ast-stats-2 - Lit                      144 ( 2.0%)             2\n-ast-stats-2 - Block                    216 ( 2.9%)             3\n-ast-stats-2 PathSegment              792 (10.7%)            33            24\n-ast-stats-2 Ty                       896 (12.2%)            14            64\n+ast-stats-2 - Block                    216 ( 3.0%)             3\n+ast-stats-2 PathSegment              792 (10.9%)            33            24\n+ast-stats-2 Ty                       896 (12.3%)            14            64\n ast-stats-2 - Ptr                       64 ( 0.9%)             1\n ast-stats-2 - Ref                       64 ( 0.9%)             1\n-ast-stats-2 - ImplicitSelf             128 ( 1.7%)             2\n-ast-stats-2 - Path                     640 ( 8.7%)            10\n-ast-stats-2 Item                   1_584 (21.5%)            11           144\n+ast-stats-2 - ImplicitSelf             128 ( 1.8%)             2\n+ast-stats-2 - Path                     640 ( 8.8%)            10\n+ast-stats-2 Item                   1_584 (21.8%)            11           144\n ast-stats-2 - Trait                    144 ( 2.0%)             1\n ast-stats-2 - Enum                     144 ( 2.0%)             1\n ast-stats-2 - ExternCrate              144 ( 2.0%)             1\n ast-stats-2 - ForeignMod               144 ( 2.0%)             1\n ast-stats-2 - Impl                     144 ( 2.0%)             1\n-ast-stats-2 - Fn                       288 ( 3.9%)             2\n-ast-stats-2 - Use                      576 ( 7.8%)             4\n+ast-stats-2 - Fn                       288 ( 4.0%)             2\n+ast-stats-2 - Use                      576 ( 7.9%)             4\n ast-stats-2 ----------------------------------------------------------------\n-ast-stats-2 Total                  7_368\n+ast-stats-2 Total                  7_256\n ast-stats-2\n hir-stats HIR STATS\n hir-stats Name                Accumulated Size         Count     Item Size"}]}