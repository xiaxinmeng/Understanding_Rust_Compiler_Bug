{"sha": "0241ea45b2e71e53921627bc09219653f2629c0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyNDFlYTQ1YjJlNzFlNTM5MjE2MjdiYzA5MjE5NjUzZjI2MjljMGU=", "commit": {"author": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2017-10-06T15:21:06Z"}, "committer": {"name": "Basile Desloges", "email": "basile.desloges@gmail.com", "date": "2017-10-06T15:44:50Z"}, "message": "mir-borrowck: Replace all constant index and sublices output with `[..]` to match the AST borrowck output", "tree": {"sha": "3c4b0aad7afd427e3e827cd673b696f073201904", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c4b0aad7afd427e3e827cd673b696f073201904"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0241ea45b2e71e53921627bc09219653f2629c0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0241ea45b2e71e53921627bc09219653f2629c0e", "html_url": "https://github.com/rust-lang/rust/commit/0241ea45b2e71e53921627bc09219653f2629c0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0241ea45b2e71e53921627bc09219653f2629c0e/comments", "author": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zilbuz", "id": 434964, "node_id": "MDQ6VXNlcjQzNDk2NA==", "avatar_url": "https://avatars.githubusercontent.com/u/434964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zilbuz", "html_url": "https://github.com/zilbuz", "followers_url": "https://api.github.com/users/zilbuz/followers", "following_url": "https://api.github.com/users/zilbuz/following{/other_user}", "gists_url": "https://api.github.com/users/zilbuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zilbuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zilbuz/subscriptions", "organizations_url": "https://api.github.com/users/zilbuz/orgs", "repos_url": "https://api.github.com/users/zilbuz/repos", "events_url": "https://api.github.com/users/zilbuz/events{/privacy}", "received_events_url": "https://api.github.com/users/zilbuz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef2f42d04a4c83dd5b50cd672b8a1b0791e00f98", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef2f42d04a4c83dd5b50cd672b8a1b0791e00f98", "html_url": "https://github.com/rust-lang/rust/commit/ef2f42d04a4c83dd5b50cd672b8a1b0791e00f98"}], "stats": {"total": 60, "additions": 44, "deletions": 16}, "files": [{"sha": "d57bac7c85a523f6a12e71cb2495e1924f33e2fd", "filename": "src/librustc_mir/borrow_check.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0241ea45b2e71e53921627bc09219653f2629c0e/src%2Flibrustc_mir%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0241ea45b2e71e53921627bc09219653f2629c0e/src%2Flibrustc_mir%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check.rs?ref=0241ea45b2e71e53921627bc09219653f2629c0e", "patch": "@@ -1090,20 +1090,13 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n                         autoderef = true;\n                         (\"\",   format!(\"\"), Some(index))\n                     },\n-                    ProjectionElem::ConstantIndex { offset, from_end: false, .. } => {\n+                    ProjectionElem::ConstantIndex { .. } | ProjectionElem::Subslice { .. } => {\n                         autoderef = true;\n-                        (\"\",   format!(\"[{}]\", offset), None)\n+                        // Since it isn't possible to borrow an element on a particular index and\n+                        // then use another while the borrow is held, don't output indices details\n+                        // to avoid confusing the end-user\n+                        (\"\",   format!(\"[..]\"), None)\n                     },\n-                    ProjectionElem::ConstantIndex { offset, from_end: true, .. } => {\n-                        autoderef = true;\n-                        (\"\",   format!(\"[-{}]\", offset), None)\n-                    },\n-                    ProjectionElem::Subslice { from, to: 0 } =>\n-                        (\"\",   format!(\"[{}:]\", from), None),\n-                    ProjectionElem::Subslice { from: 0, to } =>\n-                        (\"\",   format!(\"[:-{}]\", to), None),\n-                    ProjectionElem::Subslice { from, to } =>\n-                        (\"\",   format!(\"[{}:-{}]\", from, to), None),\n                 };\n                 buf.push_str(prefix);\n                 self.append_lvalue_to_string(&proj.base, buf, Some(autoderef));"}, {"sha": "088b678efb5669547aa76cd9b6266c3c0633a389", "filename": "src/test/compile-fail/borrowck/borrowck-describe-lvalue.rs", "status": "modified", "additions": 39, "deletions": 4, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/0241ea45b2e71e53921627bc09219653f2629c0e/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-describe-lvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0241ea45b2e71e53921627bc09219653f2629c0e/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-describe-lvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-describe-lvalue.rs?ref=0241ea45b2e71e53921627bc09219653f2629c0e", "patch": "@@ -8,9 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-tidy-linelength\n // revisions: ast mir\n //[mir]compile-flags: -Z emit-end-regions -Z borrowck-mir\n \n+#![feature(slice_patterns)]\n #![feature(advanced_slice_patterns)]\n \n pub struct Foo {\n@@ -173,29 +175,62 @@ fn main() {\n             &[x, _, .., _, _] => println!(\"{}\", x),\n                 //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n                 //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed (Ast)\n-                //[mir]~| ERROR cannot use `v[0]` because it was mutably borrowed (Mir)\n+                //[mir]~| ERROR cannot use `v[..]` because it was mutably borrowed (Mir)\n                             _ => panic!(\"other case\"),\n         }\n         match v {\n             &[_, x, .., _, _] => println!(\"{}\", x),\n                 //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n                 //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed (Ast)\n-                //[mir]~| ERROR cannot use `v[1]` because it was mutably borrowed (Mir)\n+                //[mir]~| ERROR cannot use `v[..]` because it was mutably borrowed (Mir)\n                             _ => panic!(\"other case\"),\n         }\n         match v {\n             &[_, _, .., x, _] => println!(\"{}\", x),\n                 //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n                 //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed (Ast)\n-                //[mir]~| ERROR cannot use `v[-2]` because it was mutably borrowed (Mir)\n+                //[mir]~| ERROR cannot use `v[..]` because it was mutably borrowed (Mir)\n                             _ => panic!(\"other case\"),\n         }\n         match v {\n             &[_, _, .., _, x] => println!(\"{}\", x),\n                 //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n                 //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed (Ast)\n-                //[mir]~| ERROR cannot use `v[-1]` because it was mutably borrowed (Mir)\n+                //[mir]~| ERROR cannot use `v[..]` because it was mutably borrowed (Mir)\n                             _ => panic!(\"other case\"),\n         }\n     }\n+    // Subslices\n+    {\n+        let mut v = &[1, 2, 3, 4, 5];\n+        let _v = &mut v;\n+        match v {\n+            &[x..] => println!(\"{:?}\", x),\n+                //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n+                //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed (Ast)\n+                //[mir]~| ERROR cannot use `v[..]` because it was mutably borrowed (Mir)\n+            _ => panic!(\"other case\"),\n+        }\n+        match v {\n+            &[_, x..] => println!(\"{:?}\", x),\n+                //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n+                //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed (Ast)\n+                //[mir]~| ERROR cannot use `v[..]` because it was mutably borrowed (Mir)\n+            _ => panic!(\"other case\"),\n+        }\n+        match v {\n+            &[x.., _] => println!(\"{:?}\", x),\n+                //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n+                //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed (Ast)\n+                //[mir]~| ERROR cannot use `v[..]` because it was mutably borrowed (Mir)\n+            _ => panic!(\"other case\"),\n+        }\n+        match v {\n+            &[_, x.., _] => println!(\"{:?}\", x),\n+                //[ast]~^ ERROR cannot use `v[..]` because it was mutably borrowed\n+                //[mir]~^^ ERROR cannot use `v[..]` because it was mutably borrowed (Ast)\n+                //[mir]~| ERROR cannot use `v[..]` because it was mutably borrowed (Mir)\n+            _ => panic!(\"other case\"),\n+        }\n+    }\n }"}]}