{"sha": "ff7967056916f68f2df5214e47e9e72414b44fc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmNzk2NzA1NjkxNmY2OGYyZGY1MjE0ZTQ3ZTllNzI0MTRiNDRmYzM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-19T21:36:59Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-19T21:36:59Z"}, "message": "Remove old tests", "tree": {"sha": "529ac90a3cfcfe6957d39491062f0dc6483da6e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/529ac90a3cfcfe6957d39491062f0dc6483da6e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff7967056916f68f2df5214e47e9e72414b44fc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff7967056916f68f2df5214e47e9e72414b44fc3", "html_url": "https://github.com/rust-lang/rust/commit/ff7967056916f68f2df5214e47e9e72414b44fc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff7967056916f68f2df5214e47e9e72414b44fc3/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e10ffcb81e8f887289904e5aaf272e872a9cb2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e10ffcb81e8f887289904e5aaf272e872a9cb2c", "html_url": "https://github.com/rust-lang/rust/commit/3e10ffcb81e8f887289904e5aaf272e872a9cb2c"}], "stats": {"total": 50, "additions": 0, "deletions": 50}, "files": [{"sha": "a5fa7f0c4d938a96332bc64bf6ee64ad528698a8", "filename": "src/liballoc/tests/str.rs", "status": "modified", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/ff7967056916f68f2df5214e47e9e72414b44fc3/src%2Fliballoc%2Ftests%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff7967056916f68f2df5214e47e9e72414b44fc3/src%2Fliballoc%2Ftests%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstr.rs?ref=ff7967056916f68f2df5214e47e9e72414b44fc3", "patch": "@@ -756,36 +756,6 @@ fn test_trim_end_matches() {\n     assert_eq!(\"123foo1bar123\".trim_end_matches(|c: char| c.is_numeric()), \"123foo1bar\");\n }\n \n-#[test]\n-fn test_trim_left_matches() {\n-    let v: &[char] = &[];\n-    assert_eq!(\" *** foo *** \".trim_left_matches(v), \" *** foo *** \");\n-    let chars: &[char] = &['*', ' '];\n-    assert_eq!(\" *** foo *** \".trim_left_matches(chars), \"foo *** \");\n-    assert_eq!(\" ***  *** \".trim_left_matches(chars), \"\");\n-    assert_eq!(\"foo *** \".trim_left_matches(chars), \"foo *** \");\n-\n-    assert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\n-    let chars: &[char] = &['1', '2'];\n-    assert_eq!(\"12foo1bar12\".trim_left_matches(chars), \"foo1bar12\");\n-    assert_eq!(\"123foo1bar123\".trim_left_matches(|c: char| c.is_numeric()), \"foo1bar123\");\n-}\n-\n-#[test]\n-fn test_trim_right_matches() {\n-    let v: &[char] = &[];\n-    assert_eq!(\" *** foo *** \".trim_right_matches(v), \" *** foo *** \");\n-    let chars: &[char] = &['*', ' '];\n-    assert_eq!(\" *** foo *** \".trim_right_matches(chars), \" *** foo\");\n-    assert_eq!(\" ***  *** \".trim_right_matches(chars), \"\");\n-    assert_eq!(\" *** foo\".trim_right_matches(chars), \" *** foo\");\n-\n-    assert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\n-    let chars: &[char] = &['1', '2'];\n-    assert_eq!(\"12foo1bar12\".trim_right_matches(chars), \"12foo1bar\");\n-    assert_eq!(\"123foo1bar123\".trim_right_matches(|c: char| c.is_numeric()), \"123foo1bar\");\n-}\n-\n #[test]\n fn test_trim_matches() {\n     let v: &[char] = &[];\n@@ -821,26 +791,6 @@ fn test_trim_end() {\n     assert_eq!(\" hey\".trim_end(), \" hey\");\n }\n \n-#[test]\n-fn test_trim_left() {\n-    assert_eq!(\"\".trim_left(), \"\");\n-    assert_eq!(\"a\".trim_left(), \"a\");\n-    assert_eq!(\"    \".trim_left(), \"\");\n-    assert_eq!(\"     blah\".trim_left(), \"blah\");\n-    assert_eq!(\"   \\u{3000}  wut\".trim_left(), \"wut\");\n-    assert_eq!(\"hey \".trim_left(), \"hey \");\n-}\n-\n-#[test]\n-fn test_trim_right() {\n-    assert_eq!(\"\".trim_right(), \"\");\n-    assert_eq!(\"a\".trim_right(), \"a\");\n-    assert_eq!(\"    \".trim_right(), \"\");\n-    assert_eq!(\"blah     \".trim_right(), \"blah\");\n-    assert_eq!(\"wut   \\u{3000}  \".trim_right(), \"wut\");\n-    assert_eq!(\" hey\".trim_right(), \" hey\");\n-}\n-\n #[test]\n fn test_trim() {\n     assert_eq!(\"\".trim(), \"\");"}]}