{"sha": "b03b74734b35649a92500686347a8678b48746e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwM2I3NDczNGIzNTY0OWE5MjUwMDY4NjM0N2E4Njc4YjQ4NzQ2ZTU=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-11T10:00:59Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-12T11:58:42Z"}, "message": "Use () for entry_fn.", "tree": {"sha": "8981ada520142b7b29e601e6d29f0ca8b6eb4e36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8981ada520142b7b29e601e6d29f0ca8b6eb4e36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b03b74734b35649a92500686347a8678b48746e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b03b74734b35649a92500686347a8678b48746e5", "html_url": "https://github.com/rust-lang/rust/commit/b03b74734b35649a92500686347a8678b48746e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b03b74734b35649a92500686347a8678b48746e5/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5a3f1c30633b09db91d7af82141a23641c8a70e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5a3f1c30633b09db91d7af82141a23641c8a70e", "html_url": "https://github.com/rust-lang/rust/commit/c5a3f1c30633b09db91d7af82141a23641c8a70e"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9ac9500b4eb7637208725e9633f18ff793534f02", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b03b74734b35649a92500686347a8678b48746e5/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b03b74734b35649a92500686347a8678b48746e5/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=b03b74734b35649a92500686347a8678b48746e5", "patch": "@@ -60,7 +60,7 @@ use rustc_ast::ast::{self, Attribute, BorrowKind, LitKind};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n-use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n+use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{self, walk_expr, ErasedMap, FnKind, NestedVisitorMap, Visitor};\n use rustc_hir::LangItem::{ResultErr, ResultOk};\n use rustc_hir::{\n@@ -677,7 +677,7 @@ pub fn method_chain_args<'a>(expr: &'a Expr<'_>, methods: &[&str]) -> Option<Vec\n /// Returns `true` if the provided `def_id` is an entrypoint to a program.\n pub fn is_entrypoint_fn(cx: &LateContext<'_>, def_id: DefId) -> bool {\n     cx.tcx\n-        .entry_fn(LOCAL_CRATE)\n+        .entry_fn(())\n         .map_or(false, |(entry_fn_def_id, _)| def_id == entry_fn_def_id)\n }\n "}]}