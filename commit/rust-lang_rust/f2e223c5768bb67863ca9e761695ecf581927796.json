{"sha": "f2e223c5768bb67863ca9e761695ecf581927796", "node_id": "C_kwDOAAsO6NoAKGYyZTIyM2M1NzY4YmI2Nzg2M2NhOWU3NjE2OTVlY2Y1ODE5Mjc3OTY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-04T15:25:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-04T15:25:33Z"}, "message": "Rollup merge of #105224 - cjgillot:issue-104240, r=compiler-errors\n\nProperly substitute inherent associated types.\n\nFixes https://github.com/rust-lang/rust/issues/104240", "tree": {"sha": "6002ca702cf0850fd2485816547fdd34193110e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6002ca702cf0850fd2485816547fdd34193110e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2e223c5768bb67863ca9e761695ecf581927796", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjjLvtCRBK7hj4Ov3rIwAACBYIAAsg/cgTZ1zUfotB6hkakr3d\nU+5J6Pj49G2pL/Y7BOy8NZlGcFBidLVv13TXdgQ8DKOgudcnCw5U7W2K1/+PdWJz\nsC26hXrGRFgNmKpUplxDftLdm4I6tJphQMecfTGt1UXB7yU66qkyPI1frHl9tqje\neZgx/6ieuh8jQMCUvFJu01+2uumJxJVminx21fShSY8u5UbnHSsntcaXSqKfDuWW\n3MAFji8Gq2TfU5wfNuGQW1tSsoIXjTt7/PZPQDY4yOM0L7YqNabim8oeaa1/pztH\nwiPdgURVwQF+cjvq5yoqmpXEyPkmxKnRav/4K0+b8J2WbSv7o331hRjpGRKWj88=\n=e5uj\n-----END PGP SIGNATURE-----\n", "payload": "tree 6002ca702cf0850fd2485816547fdd34193110e6\nparent b1816833bd9f0d38c1866e883c261aafe1767485\nparent 8a7ae23f75953cfb9ba1e07cc37be8455ac979c3\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670167533 +0100\ncommitter GitHub <noreply@github.com> 1670167533 +0100\n\nRollup merge of #105224 - cjgillot:issue-104240, r=compiler-errors\n\nProperly substitute inherent associated types.\n\nFixes https://github.com/rust-lang/rust/issues/104240\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2e223c5768bb67863ca9e761695ecf581927796", "html_url": "https://github.com/rust-lang/rust/commit/f2e223c5768bb67863ca9e761695ecf581927796", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2e223c5768bb67863ca9e761695ecf581927796/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1816833bd9f0d38c1866e883c261aafe1767485", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1816833bd9f0d38c1866e883c261aafe1767485", "html_url": "https://github.com/rust-lang/rust/commit/b1816833bd9f0d38c1866e883c261aafe1767485"}, {"sha": "8a7ae23f75953cfb9ba1e07cc37be8455ac979c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a7ae23f75953cfb9ba1e07cc37be8455ac979c3", "html_url": "https://github.com/rust-lang/rust/commit/8a7ae23f75953cfb9ba1e07cc37be8455ac979c3"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "f204d59d00556b604e432d02c77d120f5513a60f", "filename": "compiler/rustc_hir_analysis/src/astconv/mod.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f2e223c5768bb67863ca9e761695ecf581927796/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2e223c5768bb67863ca9e761695ecf581927796/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs?ref=f2e223c5768bb67863ca9e761695ecf581927796", "patch": "@@ -347,7 +347,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 assert!(self_ty.is_some());\n             }\n         } else {\n-            assert!(self_ty.is_none() && parent_substs.is_empty());\n+            assert!(self_ty.is_none());\n         }\n \n         let arg_count = Self::check_generic_arg_count(\n@@ -1821,7 +1821,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n \n         // Check if we have an enum variant.\n         let mut variant_resolution = None;\n-        if let ty::Adt(adt_def, _) = qself_ty.kind() {\n+        if let ty::Adt(adt_def, adt_substs) = qself_ty.kind() {\n             if adt_def.is_enum() {\n                 let variant_def = adt_def\n                     .variants()\n@@ -1923,8 +1923,13 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 let Some(assoc_ty_did) = self.lookup_assoc_ty(assoc_ident, hir_ref_id, span, impl_) else {\n                     continue;\n                 };\n-                // FIXME(inherent_associated_types): This does not substitute parameters.\n-                let ty = tcx.type_of(assoc_ty_did);\n+                let item_substs = self.create_substs_for_associated_item(\n+                    span,\n+                    assoc_ty_did,\n+                    assoc_segment,\n+                    adt_substs,\n+                );\n+                let ty = tcx.bound_type_of(assoc_ty_did).subst(tcx, item_substs);\n                 return Ok((ty, DefKind::AssocTy, assoc_ty_did));\n             }\n         }"}, {"sha": "8952b379173080a0f6a5bb62ae42c8b91cc9a4d7", "filename": "src/test/ui/associated-inherent-types/struct-generics.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f2e223c5768bb67863ca9e761695ecf581927796/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fstruct-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2e223c5768bb67863ca9e761695ecf581927796/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fstruct-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fstruct-generics.rs?ref=f2e223c5768bb67863ca9e761695ecf581927796", "patch": "@@ -0,0 +1,15 @@\n+// check-pass\n+\n+#![feature(inherent_associated_types)]\n+#![allow(incomplete_features)]\n+\n+struct S<T>(T);\n+\n+impl<T> S<T> {\n+    type P = T;\n+}\n+\n+fn main() {\n+    type A = S<()>::P;\n+    let _: A = ();\n+}"}]}