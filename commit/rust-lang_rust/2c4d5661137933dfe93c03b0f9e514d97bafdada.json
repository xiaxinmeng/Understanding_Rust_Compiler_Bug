{"sha": "2c4d5661137933dfe93c03b0f9e514d97bafdada", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNGQ1NjYxMTM3OTMzZGZlOTNjMDNiMGY5ZTUxNGQ5N2JhZmRhZGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-28T05:36:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-28T05:36:30Z"}, "message": "Auto merge of #5535 - ebroto:issue_5360, r=phansch\n\nused_underscore_binding: do not lint on `await` desugaring\n\nchangelog: used_underscore_binding: do not lint on `await` desugaring\n\nFixes #5360", "tree": {"sha": "32f478812a2481056eb209301fb5f1871d872103", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32f478812a2481056eb209301fb5f1871d872103"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c4d5661137933dfe93c03b0f9e514d97bafdada", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c4d5661137933dfe93c03b0f9e514d97bafdada", "html_url": "https://github.com/rust-lang/rust/commit/2c4d5661137933dfe93c03b0f9e514d97bafdada", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c4d5661137933dfe93c03b0f9e514d97bafdada/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2486b3d35efc551ea0b5b549120c05f3ab1d636", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2486b3d35efc551ea0b5b549120c05f3ab1d636", "html_url": "https://github.com/rust-lang/rust/commit/f2486b3d35efc551ea0b5b549120c05f3ab1d636"}, {"sha": "fc5fc6378cfa384c02020c63cbc1472f0844065d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc5fc6378cfa384c02020c63cbc1472f0844065d", "html_url": "https://github.com/rust-lang/rust/commit/fc5fc6378cfa384c02020c63cbc1472f0844065d"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "e1d524c2231e4841bb1c91366c92a240f1156f0e", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2c4d5661137933dfe93c03b0f9e514d97bafdada/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c4d5661137933dfe93c03b0f9e514d97bafdada/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=2c4d5661137933dfe93c03b0f9e514d97bafdada", "patch": "@@ -9,6 +9,7 @@ use rustc_hir::{\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::hygiene::DesugaringKind;\n use rustc_span::source_map::{ExpnKind, Span};\n \n use crate::consts::{constant, Constant};\n@@ -399,8 +400,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MiscLints {\n             },\n             _ => {},\n         }\n-        if in_attributes_expansion(expr) {\n-            // Don't lint things expanded by #[derive(...)], etc\n+        if in_attributes_expansion(expr) || expr.span.is_desugaring(DesugaringKind::Await) {\n+            // Don't lint things expanded by #[derive(...)], etc or `await` desugaring\n             return;\n         }\n         let binding = match expr.kind {"}, {"sha": "8e0243c49aaa038405796a66695a6f264f38b569", "filename": "tests/ui/used_underscore_binding.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2c4d5661137933dfe93c03b0f9e514d97bafdada/tests%2Fui%2Fused_underscore_binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c4d5661137933dfe93c03b0f9e514d97bafdada/tests%2Fui%2Fused_underscore_binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.rs?ref=2c4d5661137933dfe93c03b0f9e514d97bafdada", "patch": "@@ -1,3 +1,4 @@\n+// edition:2018\n // aux-build:proc_macro_derive.rs\n \n #![feature(rustc_private)]\n@@ -87,6 +88,21 @@ fn non_variables() {\n     f();\n }\n \n+// Tests that we do not lint if the binding comes from await desugaring,\n+// but we do lint the awaited expression. See issue 5360.\n+async fn await_desugaring() {\n+    async fn foo() {}\n+    fn uses_i(_i: i32) {}\n+\n+    foo().await;\n+    ({\n+        let _i = 5;\n+        uses_i(_i);\n+        foo()\n+    })\n+    .await\n+}\n+\n fn main() {\n     let foo = 0u32;\n     // tests of unused_underscore lint\n@@ -99,4 +115,5 @@ fn main() {\n     let _ = unused_underscore_complex(foo);\n     let _ = multiple_underscores(foo);\n     non_variables();\n+    await_desugaring();\n }"}, {"sha": "68e96148093d2ad1bd58bf082d9574e340aa97b7", "filename": "tests/ui/used_underscore_binding.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2c4d5661137933dfe93c03b0f9e514d97bafdada/tests%2Fui%2Fused_underscore_binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2c4d5661137933dfe93c03b0f9e514d97bafdada/tests%2Fui%2Fused_underscore_binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.stderr?ref=2c4d5661137933dfe93c03b0f9e514d97bafdada", "patch": "@@ -1,34 +1,40 @@\n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:25:5\n+  --> $DIR/used_underscore_binding.rs:26:5\n    |\n LL |     _foo + 1\n    |     ^^^^\n    |\n    = note: `-D clippy::used-underscore-binding` implied by `-D warnings`\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:30:20\n+  --> $DIR/used_underscore_binding.rs:31:20\n    |\n LL |     println!(\"{}\", _foo);\n    |                    ^^^^\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:31:16\n+  --> $DIR/used_underscore_binding.rs:32:16\n    |\n LL |     assert_eq!(_foo, _foo);\n    |                ^^^^\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:31:22\n+  --> $DIR/used_underscore_binding.rs:32:22\n    |\n LL |     assert_eq!(_foo, _foo);\n    |                      ^^^^\n \n error: used binding `_underscore_field` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:44:5\n+  --> $DIR/used_underscore_binding.rs:45:5\n    |\n LL |     s._underscore_field += 1;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 5 previous errors\n+error: used binding `_i` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n+  --> $DIR/used_underscore_binding.rs:100:16\n+   |\n+LL |         uses_i(_i);\n+   |                ^^\n+\n+error: aborting due to 6 previous errors\n "}]}