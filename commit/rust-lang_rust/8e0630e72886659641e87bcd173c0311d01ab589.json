{"sha": "8e0630e72886659641e87bcd173c0311d01ab589", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlMDYzMGU3Mjg4NjY1OTY0MWU4N2JjZDE3M2MwMzExZDAxYWI1ODk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-20T14:02:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-20T14:02:37Z"}, "message": "internal: remove one usage of a slow method", "tree": {"sha": "5a3e26610dee2fdb41d695314e8099fbae9d0bc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a3e26610dee2fdb41d695314e8099fbae9d0bc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e0630e72886659641e87bcd173c0311d01ab589", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e0630e72886659641e87bcd173c0311d01ab589", "html_url": "https://github.com/rust-lang/rust/commit/8e0630e72886659641e87bcd173c0311d01ab589", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e0630e72886659641e87bcd173c0311d01ab589/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fee2bef197deb575a70cdd059a474c4832d8caa", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fee2bef197deb575a70cdd059a474c4832d8caa", "html_url": "https://github.com/rust-lang/rust/commit/5fee2bef197deb575a70cdd059a474c4832d8caa"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "b80256f5369a49d8bf4edd3370098642b6f0cec7", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8e0630e72886659641e87bcd173c0311d01ab589/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e0630e72886659641e87bcd173c0311d01ab589/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=8e0630e72886659641e87bcd173c0311d01ab589", "patch": "@@ -436,6 +436,7 @@ impl Module {\n         module_data.visibility\n     }\n \n+    /// XXX: this O(N) rather O(1) method, avoid using it if you can.\n     pub fn visibility_of(self, db: &dyn HirDatabase, def: &ModuleDef) -> Option<Visibility> {\n         let def_map = self.id.def_map(db.upcast());\n         let module_data = &def_map[self.id.local_id];\n@@ -841,6 +842,13 @@ impl Variant {\n     }\n }\n \n+/// Variants inherit visibility from the parent enum.\n+impl HasVisibility for Variant {\n+    fn visibility(&self, db: &dyn HirDatabase) -> Visibility {\n+        self.parent_enum(db).visibility(db)\n+    }\n+}\n+\n /// A Data Type\n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n pub enum Adt {"}, {"sha": "9e4e3f415840d6bd98c6ac1acd9a629f005e3d08", "filename": "crates/ide_assists/src/handlers/fix_visibility.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8e0630e72886659641e87bcd173c0311d01ab589/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e0630e72886659641e87bcd173c0311d01ab589/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs?ref=8e0630e72886659641e87bcd173c0311d01ab589", "patch": "@@ -46,7 +46,17 @@ fn add_vis_to_referenced_module_def(acc: &mut Assists, ctx: &AssistContext) -> O\n     let current_module = ctx.sema.scope(path.syntax()).module()?;\n     let target_module = def.module(ctx.db())?;\n \n-    let vis = target_module.visibility_of(ctx.db(), &def)?;\n+    let vis = match def {\n+        hir::ModuleDef::Module(it) => it.visibility(ctx.db()),\n+        hir::ModuleDef::Function(it) => it.visibility(ctx.db()),\n+        hir::ModuleDef::Adt(it) => it.visibility(ctx.db()),\n+        hir::ModuleDef::Variant(it) => it.visibility(ctx.db()),\n+        hir::ModuleDef::Const(it) => it.visibility(ctx.db()),\n+        hir::ModuleDef::Static(it) => it.visibility(ctx.db()),\n+        hir::ModuleDef::Trait(it) => it.visibility(ctx.db()),\n+        hir::ModuleDef::TypeAlias(it) => it.visibility(ctx.db()),\n+        hir::ModuleDef::BuiltinType(_) => return None,\n+    };\n     if vis.is_visible_from(ctx.db(), current_module.into()) {\n         return None;\n     };"}, {"sha": "147c7c1e596c56bb186f510eb1534cccc80711c5", "filename": "crates/ide_db/src/defs.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e0630e72886659641e87bcd173c0311d01ab589/crates%2Fide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e0630e72886659641e87bcd173c0311d01ab589/crates%2Fide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fdefs.rs?ref=8e0630e72886659641e87bcd173c0311d01ab589", "patch": "@@ -52,9 +52,7 @@ impl Definition {\n                 ModuleDef::Static(it) => Some(it.visibility(db)),\n                 ModuleDef::Trait(it) => Some(it.visibility(db)),\n                 ModuleDef::TypeAlias(it) => Some(it.visibility(db)),\n-                // NB: Variants don't have their own visibility, and just inherit\n-                // one from the parent. Not sure if that's the right thing to do.\n-                ModuleDef::Variant(it) => Some(it.parent_enum(db).visibility(db)),\n+                ModuleDef::Variant(it) => Some(it.visibility(db)),\n                 ModuleDef::BuiltinType(_) => None,\n             },\n             Definition::Macro(_)"}]}