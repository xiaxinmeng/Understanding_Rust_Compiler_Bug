{"sha": "580a740bdd35706e487abd5beb76bd28f2be4012", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4MGE3NDBiZGQzNTcwNmU0ODdhYmQ1YmViNzZiZDI4ZjJiZTQwMTI=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-03-22T06:31:47Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-05T13:46:43Z"}, "message": "Add `download-rustc = \"if-unchanged\"`\n\nThis allows keeping the setting to a fixed value without having to\ntoggle it when you want to work on the compiler instead of on tools.", "tree": {"sha": "935573b39c41531ff59b924c1dda349d5102566a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/935573b39c41531ff59b924c1dda349d5102566a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/580a740bdd35706e487abd5beb76bd28f2be4012", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/580a740bdd35706e487abd5beb76bd28f2be4012", "html_url": "https://github.com/rust-lang/rust/commit/580a740bdd35706e487abd5beb76bd28f2be4012", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/580a740bdd35706e487abd5beb76bd28f2be4012/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35385770ae1ea86a911cc44ac43f856831e44b26", "url": "https://api.github.com/repos/rust-lang/rust/commits/35385770ae1ea86a911cc44ac43f856831e44b26", "html_url": "https://github.com/rust-lang/rust/commit/35385770ae1ea86a911cc44ac43f856831e44b26"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "539ff06c5adc9392b09841d111edd7dcb7afbaa9", "filename": "config.toml.example", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/580a740bdd35706e487abd5beb76bd28f2be4012/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/580a740bdd35706e487abd5beb76bd28f2be4012/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=580a740bdd35706e487abd5beb76bd28f2be4012", "patch": "@@ -372,7 +372,9 @@ changelog-seen = 2\n # Whether to download the stage 1 and 2 compilers from CI.\n # This is mostly useful for tools; if you have changes to `compiler/` they will be ignored.\n #\n-# FIXME: currently, this also uses the downloaded compiler for stage0, but that causes unnecessary rebuilds.\n+# You can set this to \"if-unchanged\" to only download if `compiler/` has not been modified.\n+#\n+# FIXME(#82739): currently, this also uses the downloaded compiler for stage0, but that causes unnecessary rebuilds.\n #download-rustc = false\n \n # Number of codegen units to use for each compiler invocation. A value of 0"}, {"sha": "59f22f3310caabda517afbc0ca923c1d09cc35c1", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/580a740bdd35706e487abd5beb76bd28f2be4012/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/580a740bdd35706e487abd5beb76bd28f2be4012/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=580a740bdd35706e487abd5beb76bd28f2be4012", "patch": "@@ -638,8 +638,10 @@ def fix_bin_or_dylib(self, fname, rpath_libz=False):\n     # Return the stage1 compiler to download, if any.\n     def maybe_download_rustc(self):\n         # If `download-rustc` is not set, default to rebuilding.\n-        if self.get_toml(\"download-rustc\", section=\"rust\") != \"true\":\n+        download_rustc = self.get_toml(\"download-rustc\", section=\"rust\")\n+        if download_rustc is None or download_rustc == \"false\":\n             return None\n+        assert download_rustc == \"true\" or download_rustc == \"if-unchanged\", download_rustc\n \n         # Handle running from a directory other than the top level\n         rev_parse = [\"git\", \"rev-parse\", \"--show-toplevel\"]\n@@ -654,6 +656,8 @@ def maybe_download_rustc(self):\n         # Warn if there were changes to the compiler since the ancestor commit.\n         status = subprocess.call([\"git\", \"diff-index\", \"--quiet\", commit, \"--\", compiler])\n         if status != 0:\n+            if download_rustc == \"if-unchanged\":\n+                return None\n             print(\"warning: `download-rustc` is enabled, but there are changes to compiler/\")\n \n         return commit\n@@ -1158,6 +1162,8 @@ def bootstrap(help_triggered):\n     env[\"RUSTC_BOOTSTRAP\"] = '1'\n     if toml_path:\n         env[\"BOOTSTRAP_CONFIG\"] = toml_path\n+    if build.rustc_commit is not None:\n+        env[\"BOOTSTRAP_DOWNLOAD_RUSTC\"] = '1'\n     run(args, env=env, verbose=build.verbose)\n \n "}, {"sha": "43ae146e86661ea1a7791e148e7b6eb2b02f4b95", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/580a740bdd35706e487abd5beb76bd28f2be4012/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/580a740bdd35706e487abd5beb76bd28f2be4012/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=580a740bdd35706e487abd5beb76bd28f2be4012", "patch": "@@ -510,7 +510,8 @@ struct Rust {\n     new_symbol_mangling: Option<bool>,\n     profile_generate: Option<String>,\n     profile_use: Option<String>,\n-    download_rustc: Option<bool>,\n+    // ignored; this is set from an env var set by bootstrap.py\n+    download_rustc: Option<StringOrBool>,\n }\n \n /// TOML representation of how each build target is configured.\n@@ -897,7 +898,7 @@ impl Config {\n             config.rust_codegen_units_std = rust.codegen_units_std.map(threads_from_config);\n             config.rust_profile_use = flags.rust_profile_use.or(rust.profile_use);\n             config.rust_profile_generate = flags.rust_profile_generate.or(rust.profile_generate);\n-            config.download_rustc = rust.download_rustc.unwrap_or(false);\n+            config.download_rustc = env::var(\"BOOTSTRAP_DOWNLOAD_RUSTC\").as_deref() == Ok(\"1\");\n         } else {\n             config.rust_profile_use = flags.rust_profile_use;\n             config.rust_profile_generate = flags.rust_profile_generate;"}]}