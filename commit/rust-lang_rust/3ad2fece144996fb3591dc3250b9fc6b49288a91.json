{"sha": "3ad2fece144996fb3591dc3250b9fc6b49288a91", "node_id": "C_kwDOAAsO6NoAKDNhZDJmZWNlMTQ0OTk2ZmIzNTkxZGMzMjUwYjlmYzZiNDkyODhhOTE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-15T12:45:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-15T12:45:04Z"}, "message": "Auto merge of #2806 - saethlin:better-install, r=RalfJung\n\nInstall binaries to the miri toolchain's sysroot\n\nThe default install produces this behavior:\n```\n$ cargo +miri miri --version\nmiri 0.1.0 (0ba1f4a0 2023-03-05)\n$ cargo +nightly miri --version\nmiri 0.1.0 (0ba1f4a0 2023-03-05)\n```\nWhich is not good. We've effectively erased the toolchain selection, and users may reasonably conclude that their rustup install is broken.\n\nAfter this change, we now get this:\n```\n$ cargo +miri miri --version\nmiri 0.1.0 (0ba1f4a0 2023-03-05)\n$ cargo +nightly miri --version\nmiri 0.1.0 (f63ccaf 2023-03-06)\n```\n\nThanks `@jyn514` who all but wrote this for me.", "tree": {"sha": "712ef7b95411aff3ba04b268e1924754dcb443db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/712ef7b95411aff3ba04b268e1924754dcb443db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ad2fece144996fb3591dc3250b9fc6b49288a91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ad2fece144996fb3591dc3250b9fc6b49288a91", "html_url": "https://github.com/rust-lang/rust/commit/3ad2fece144996fb3591dc3250b9fc6b49288a91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ad2fece144996fb3591dc3250b9fc6b49288a91/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fde770aec7945a5d551a0ad3357c0fd85eef10c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fde770aec7945a5d551a0ad3357c0fd85eef10c", "html_url": "https://github.com/rust-lang/rust/commit/5fde770aec7945a5d551a0ad3357c0fd85eef10c"}, {"sha": "3aa4de3fa83083fd39469e07432a92759c89d1f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3aa4de3fa83083fd39469e07432a92759c89d1f0", "html_url": "https://github.com/rust-lang/rust/commit/3aa4de3fa83083fd39469e07432a92759c89d1f0"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "b71f48e4644bbe0d4d4cae8e6a68256d9e0d7147", "filename": "src/tools/miri/.github/workflows/ci.yml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ad2fece144996fb3591dc3250b9fc6b49288a91/src%2Ftools%2Fmiri%2F.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/3ad2fece144996fb3591dc3250b9fc6b49288a91/src%2Ftools%2Fmiri%2F.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2F.github%2Fworkflows%2Fci.yml?ref=3ad2fece144996fb3591dc3250b9fc6b49288a91", "patch": "@@ -54,8 +54,8 @@ jobs:\n             # contains package information of crates installed via `cargo install`.\n             ~/.cargo/.crates.toml\n             ~/.cargo/.crates2.json\n-          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}\n-          restore-keys: ${{ runner.os }}-cargo\n+          key: ${{ runner.os }}-cargo-reset20230315-${{ hashFiles('**/Cargo.lock') }}\n+          restore-keys: ${{ runner.os }}-cargo-reset20230315\n \n       - name: Install rustup-toolchain-install-master\n         if: ${{ steps.cache.outputs.cache-hit != 'true' }}\n@@ -106,8 +106,8 @@ jobs:\n             # contains package information of crates installed via `cargo install`.\n             ~/.cargo/.crates.toml\n             ~/.cargo/.crates2.json\n-          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}\n-          restore-keys: ${{ runner.os }}-cargo\n+          key: ${{ runner.os }}-cargo-reset20230315-${{ hashFiles('**/Cargo.lock') }}\n+          restore-keys: ${{ runner.os }}-cargo-reset20230315\n \n       - name: Install rustup-toolchain-install-master\n         if: ${{ steps.cache.outputs.cache-hit != 'true' }}"}, {"sha": "bcdb623b090e4bbb4672d21477c843fe09475bae", "filename": "src/tools/miri/CONTRIBUTING.md", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3ad2fece144996fb3591dc3250b9fc6b49288a91/src%2Ftools%2Fmiri%2FCONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/3ad2fece144996fb3591dc3250b9fc6b49288a91/src%2Ftools%2Fmiri%2FCONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2FCONTRIBUTING.md?ref=3ad2fece144996fb3591dc3250b9fc6b49288a91", "patch": "@@ -129,18 +129,15 @@ development version of Miri using\n ./miri install\n ```\n \n-and then you can use it as if it was installed by `rustup`.  Make sure you use\n-the same toolchain when calling `cargo miri` that you used when installing Miri!\n-Usually this means you have to write `cargo +miri miri ...` to select the `miri`\n-toolchain that was installed by `./miri toolchain`.\n+and then you can use it as if it was installed by `rustup` as a component of the\n+`miri` toolchain. Note that the `miri` and `cargo-miri` executables are placed\n+in the `miri` toolchain's sysroot to prevent conflicts with other toolchains.\n+The Miri binaries in the `cargo` bin directory (usually `~/.cargo/bin`) are managed by rustup.\n \n There's a test for the cargo wrapper in the `test-cargo-miri` directory; run\n `./run-test.py` in there to execute it. Like `./miri test`, this respects the\n `MIRI_TEST_TARGET` environment variable to execute the test for another target.\n \n-Note that installing Miri like this will \"take away\" Miri management from `rustup`.\n-If you want to later go back to a rustup-installed Miri, run `rustup update`.\n-\n ### Using a modified standard library\n \n Miri re-builds the standard library into a custom sysroot, so it is fairly easy"}, {"sha": "ef52a37fe319fd14483a18399f1bd62251370691", "filename": "src/tools/miri/ci.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ad2fece144996fb3591dc3250b9fc6b49288a91/src%2Ftools%2Fmiri%2Fci.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3ad2fece144996fb3591dc3250b9fc6b49288a91/src%2Ftools%2Fmiri%2Fci.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fci.sh?ref=3ad2fece144996fb3591dc3250b9fc6b49288a91", "patch": "@@ -62,8 +62,8 @@ function run_tests {\n   if [ \"$HOST_TARGET\" = x86_64-unknown-linux-gnu ]; then\n     # These act up on Windows (`which miri` produces a filename that does not exist?!?),\n     # so let's do this only on Linux. Also makes sure things work without these set.\n-    export RUSTC=$(which rustc)\n-    export MIRI=$(which miri)\n+    export RUSTC=$(which rustc) # Produces a warning unless we also set MIRI\n+    export MIRI=$(rustc +miri --print sysroot)/bin/miri\n   fi\n   mkdir -p .cargo\n   echo 'build.rustc-wrapper = \"thisdoesnotexist\"' > .cargo/config.toml"}, {"sha": "1073ff499ba037a8a6a31f60bf9a123d7eab441b", "filename": "src/tools/miri/miri", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3ad2fece144996fb3591dc3250b9fc6b49288a91/src%2Ftools%2Fmiri%2Fmiri", "raw_url": "https://github.com/rust-lang/rust/raw/3ad2fece144996fb3591dc3250b9fc6b49288a91/src%2Ftools%2Fmiri%2Fmiri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fmiri?ref=3ad2fece144996fb3591dc3250b9fc6b49288a91", "patch": "@@ -6,8 +6,8 @@ USAGE=$(cat <<\"EOF\"\n ./miri install <flags>:\n Installs the miri driver and cargo-miri. <flags> are passed to `cargo\n install`. Sets up the rpath such that the installed binary should work in any\n-working directory. However, the rustup toolchain when invoking `cargo miri`\n-needs to be the same one used for `./miri install`.\n+working directory. Note that the binaries are placed in the `miri` toolchain\n+sysroot, to prevent conflicts with other toolchains.\n \n ./miri build <flags>:\n Just build miri. <flags> are passed to `cargo build`.\n@@ -281,8 +281,9 @@ find_sysroot() {\n case \"$COMMAND\" in\n install)\n     # \"--locked\" to respect the Cargo.lock file if it exists.\n-    $CARGO install $CARGO_EXTRA_FLAGS --path \"$MIRIDIR\" --force --locked \"$@\"\n-    $CARGO install $CARGO_EXTRA_FLAGS --path \"$MIRIDIR\"/cargo-miri --force --locked \"$@\"\n+    # Install binaries to the miri toolchain's sysroot so they do not interact with other toolchains.\n+    $CARGO install $CARGO_EXTRA_FLAGS --path \"$MIRIDIR\" --force --locked --root \"$SYSROOT\" \"$@\"\n+    $CARGO install $CARGO_EXTRA_FLAGS --path \"$MIRIDIR\"/cargo-miri --force --locked --root \"$SYSROOT\" \"$@\"\n     ;;\n check)\n     # Check, and let caller control flags."}]}