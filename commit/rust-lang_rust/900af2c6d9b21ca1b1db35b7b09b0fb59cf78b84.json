{"sha": "900af2c6d9b21ca1b1db35b7b09b0fb59cf78b84", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwMGFmMmM2ZDliMjFjYTFiMWRiMzViN2IwOWIwZmI1OWNmNzhiODQ=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-06-29T22:56:00Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-06-29T23:00:54Z"}, "message": "lint: default methods must be called on Self to unconditionally recur.\n\nThis catches the case when a trait defines a default method that calls\nitself, but on a type that isn't necessarily `Self`, e.g. there's no\nreason that `T = Self` in the following, so the call isn't necessarily\nrecursive (`T` may override the call).\n\n    trait Bar {\n        fn method<T: Bar>(&self, x: &T) {\n            x.method(x)\n        }\n    }\n\nFixes #26333.", "tree": {"sha": "950dd34f3e2171a26f64072976d5d57ab43e7562", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/950dd34f3e2171a26f64072976d5d57ab43e7562"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/900af2c6d9b21ca1b1db35b7b09b0fb59cf78b84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/900af2c6d9b21ca1b1db35b7b09b0fb59cf78b84", "html_url": "https://github.com/rust-lang/rust/commit/900af2c6d9b21ca1b1db35b7b09b0fb59cf78b84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/900af2c6d9b21ca1b1db35b7b09b0fb59cf78b84/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1931e48a01b418b4b1ba6c747f2c99a5b10d96f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1931e48a01b418b4b1ba6c747f2c99a5b10d96f", "html_url": "https://github.com/rust-lang/rust/commit/b1931e48a01b418b4b1ba6c747f2c99a5b10d96f"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "190e2965e76cec72048074cc0c714698400863aa", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/900af2c6d9b21ca1b1db35b7b09b0fb59cf78b84/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/900af2c6d9b21ca1b1db35b7b09b0fb59cf78b84/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=900af2c6d9b21ca1b1db35b7b09b0fb59cf78b84", "patch": "@@ -2007,6 +2007,15 @@ impl LintPass for UnconditionalRecursion {\n                     // method instead.\n                     ty::MethodTypeParam(\n                         ty::MethodParam { ref trait_ref, method_num, impl_def_id: None, }) => {\n+\n+                        let on_self = m.substs.self_ty().map_or(false, |t| t.is_self());\n+                        if !on_self {\n+                            // we can only be recurring in a default\n+                            // method if we're being called literally\n+                            // on the `Self` type.\n+                            return false\n+                        }\n+\n                         tcx.trait_item(trait_ref.def_id, method_num).def_id()\n                     }\n "}, {"sha": "47bb7f948a786d21260b71da655bc9016304854a", "filename": "src/test/compile-fail/lint-unconditional-recursion.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/900af2c6d9b21ca1b1db35b7b09b0fb59cf78b84/src%2Ftest%2Fcompile-fail%2Flint-unconditional-recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/900af2c6d9b21ca1b1db35b7b09b0fb59cf78b84/src%2Ftest%2Fcompile-fail%2Flint-unconditional-recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-unconditional-recursion.rs?ref=900af2c6d9b21ca1b1db35b7b09b0fb59cf78b84", "patch": "@@ -67,4 +67,11 @@ fn all_fine() {\n     let _f = all_fine;\n }\n \n+// issue 26333\n+trait Bar {\n+    fn method<T: Bar>(&self, x: &T) {\n+        x.method(x)\n+    }\n+}\n+\n fn main() {}"}]}