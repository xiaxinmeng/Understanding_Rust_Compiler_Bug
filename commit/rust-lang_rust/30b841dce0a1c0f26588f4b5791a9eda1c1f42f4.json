{"sha": "30b841dce0a1c0f26588f4b5791a9eda1c1f42f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwYjg0MWRjZTBhMWMwZjI2NTg4ZjRiNTc5MWE5ZWRhMWMxZjQyZjQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-18T14:35:19Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-24T19:32:48Z"}, "message": "parser: improve or-patterns recovery.", "tree": {"sha": "2fad54525e758c9a20d1f84281cf4274123f178f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fad54525e758c9a20d1f84281cf4274123f178f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30b841dce0a1c0f26588f4b5791a9eda1c1f42f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30b841dce0a1c0f26588f4b5791a9eda1c1f42f4", "html_url": "https://github.com/rust-lang/rust/commit/30b841dce0a1c0f26588f4b5791a9eda1c1f42f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30b841dce0a1c0f26588f4b5791a9eda1c1f42f4/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bbea47794d28f78cf313fde475a35a83d0e9842", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bbea47794d28f78cf313fde475a35a83d0e9842", "html_url": "https://github.com/rust-lang/rust/commit/0bbea47794d28f78cf313fde475a35a83d0e9842"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "e52d0bc9d483b7ab54f9ad909bdbd9a88665d154", "filename": "src/libsyntax/parse/parser/pat.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/30b841dce0a1c0f26588f4b5791a9eda1c1f42f4/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30b841dce0a1c0f26588f4b5791a9eda1c1f42f4/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs?ref=30b841dce0a1c0f26588f4b5791a9eda1c1f42f4", "patch": "@@ -110,18 +110,25 @@ impl<'a> Parser<'a> {\n \n         // If the next token is not a `|`,\n         // this is not an or-pattern and we should exit here.\n-        if !self.check(&token::BinOp(token::Or)) {\n+        if !self.check(&token::BinOp(token::Or)) && self.token != token::OrOr {\n             return Ok(first_pat)\n         }\n \n         let lo = first_pat.span;\n-\n         let mut pats = vec![first_pat];\n+        loop {\n+            if self.token == token::OrOr {\n+                // Found `||`; Recover and pretend we parsed `|`.\n+                self.ban_unexpected_or_or();\n+                self.bump();\n+            } else if self.eat(&token::BinOp(token::Or)) {\n+                // Found `|`. Working towards a proper or-pattern.\n+            } else {\n+                break;\n+            }\n \n-        while self.eat(&token::BinOp(token::Or)) {\n             pats.push(self.parse_pat_with_range_pat(true, expected)?);\n         }\n-\n         let or_pattern_span = lo.to(self.prev_span);\n \n         // Feature gate the or-pattern if instructed:"}]}