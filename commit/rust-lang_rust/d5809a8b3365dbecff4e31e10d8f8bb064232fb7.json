{"sha": "d5809a8b3365dbecff4e31e10d8f8bb064232fb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ODA5YThiMzM2NWRiZWNmZjRlMzFlMTBkOGY4YmIwNjQyMzJmYjc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-03T14:25:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-03T14:25:08Z"}, "message": "Rollup merge of #60478 - euclio:doc-fixes, r=cramertj\n\nminor compiler doc tweaks", "tree": {"sha": "43d27e56435c3570beab9e2493b0cb8c357194c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43d27e56435c3570beab9e2493b0cb8c357194c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5809a8b3365dbecff4e31e10d8f8bb064232fb7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJczE9ECRBK7hj4Ov3rIwAAdHIIAAukXba+rtuhuO0EWfbsr51H\nVV1FBWASvdTnQnTjcRTjDfmsX3oMmTkoJm6pWrjzr/57rpAlQ9aXO95EatCS/DCp\nZKJAmmsRqGjHU76iiXbzvKKsZfsXIdLXg71exzKZ379yWOE2AyjuVbzT6JkAnwiI\nTVPfvA98aK7DnVJO22poXOORabqd7TvyjIUOS5Zn7Vd+Cv0w80/jXsnw7amj74Nv\ndDMb1RsVC1+ZuAjIoOomJw6w+UKdV5JIW+Q/ieBgU4jlhZJT1P/A9XmJuyyWuSDp\nOMQAeUQZklRaAfnuIfyHoCE3SnhIB2tGmHGGE/SrhIjl5IDg0t7bhRr3hFnWtZk=\n=MYN4\n-----END PGP SIGNATURE-----\n", "payload": "tree 43d27e56435c3570beab9e2493b0cb8c357194c2\nparent 0784755127ab20dd6e710233768358c2f6821bbc\nparent bbe7b85ef154dad5c7e17e7dc00895ec3bfcd189\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1556893508 +0200\ncommitter GitHub <noreply@github.com> 1556893508 +0200\n\nRollup merge of #60478 - euclio:doc-fixes, r=cramertj\n\nminor compiler doc tweaks\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5809a8b3365dbecff4e31e10d8f8bb064232fb7", "html_url": "https://github.com/rust-lang/rust/commit/d5809a8b3365dbecff4e31e10d8f8bb064232fb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5809a8b3365dbecff4e31e10d8f8bb064232fb7/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0784755127ab20dd6e710233768358c2f6821bbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/0784755127ab20dd6e710233768358c2f6821bbc", "html_url": "https://github.com/rust-lang/rust/commit/0784755127ab20dd6e710233768358c2f6821bbc"}, {"sha": "bbe7b85ef154dad5c7e17e7dc00895ec3bfcd189", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbe7b85ef154dad5c7e17e7dc00895ec3bfcd189", "html_url": "https://github.com/rust-lang/rust/commit/bbe7b85ef154dad5c7e17e7dc00895ec3bfcd189"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "4293019aed56893a08ffe669ffcbacfe408dd49f", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d5809a8b3365dbecff4e31e10d8f8bb064232fb7/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5809a8b3365dbecff4e31e10d8f8bb064232fb7/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=d5809a8b3365dbecff4e31e10d8f8bb064232fb7", "patch": "@@ -1927,6 +1927,9 @@ pub enum ArgSource {\n /// Represents the header (not the body) of a function declaration.\n #[derive(Clone, RustcEncodable, RustcDecodable, Debug, HashStable)]\n pub struct FnDecl {\n+    /// The types of the function's arguments.\n+    ///\n+    /// Additional argument data is stored in the function's [body](Body::arguments).\n     pub inputs: HirVec<Ty>,\n     pub output: FunctionRetTy,\n     pub c_variadic: bool,"}, {"sha": "e713cf8d805531669f4d6a4759d046986e0240f2", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d5809a8b3365dbecff4e31e10d8f8bb064232fb7/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5809a8b3365dbecff4e31e10d8f8bb064232fb7/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=d5809a8b3365dbecff4e31e10d8f8bb064232fb7", "patch": "@@ -757,12 +757,12 @@ impl<'a, 'tcx> LateContext<'a, 'tcx> {\n     /// Check if a `DefId`'s path matches the given absolute type path usage.\n     ///\n     /// # Examples\n-    /// ```rust,ignore (no `cx` or `def_id` available)\n+    ///\n+    /// ```rust,ignore (no context or def id available)\n     /// if cx.match_def_path(def_id, &[\"core\", \"option\", \"Option\"]) {\n     ///     // The given `def_id` is that of an `Option` type\n     /// }\n     /// ```\n-    // Uplifted from rust-lang/rust-clippy\n     pub fn match_def_path(&self, def_id: DefId, path: &[&str]) -> bool {\n         let names = self.get_def_path(def_id);\n \n@@ -772,13 +772,13 @@ impl<'a, 'tcx> LateContext<'a, 'tcx> {\n     /// Gets the absolute path of `def_id` as a vector of `&str`.\n     ///\n     /// # Examples\n-    /// ```rust,ignore (no `cx` or `def_id` available)\n+    ///\n+    /// ```rust,ignore (no context or def id available)\n     /// let def_path = cx.get_def_path(def_id);\n     /// if let &[\"core\", \"option\", \"Option\"] = &def_path[..] {\n     ///     // The given `def_id` is that of an `Option` type\n     /// }\n     /// ```\n-    // Uplifted from rust-lang/rust-clippy\n     pub fn get_def_path(&self, def_id: DefId) -> Vec<LocalInternedString> {\n         pub struct AbsolutePathPrinter<'a, 'tcx> {\n             pub tcx: TyCtxt<'a, 'tcx, 'tcx>,"}]}