{"sha": "3e7da96fd22faf8587c1717e03a988dce6893bdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlN2RhOTZmZDIyZmFmODU4N2MxNzE3ZTAzYTk4OGRjZTY4OTNiZGI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-11T04:09:16Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-11T04:10:10Z"}, "message": "std: Fix pattern match on reference, address an XXX", "tree": {"sha": "7ce24907beb50d51849fa1eb08a5e46ec6afd72c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ce24907beb50d51849fa1eb08a5e46ec6afd72c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e7da96fd22faf8587c1717e03a988dce6893bdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e7da96fd22faf8587c1717e03a988dce6893bdb", "html_url": "https://github.com/rust-lang/rust/commit/3e7da96fd22faf8587c1717e03a988dce6893bdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e7da96fd22faf8587c1717e03a988dce6893bdb/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30c308b952def6b0967c88556e153f1507fb3529", "url": "https://api.github.com/repos/rust-lang/rust/commits/30c308b952def6b0967c88556e153f1507fb3529", "html_url": "https://github.com/rust-lang/rust/commit/30c308b952def6b0967c88556e153f1507fb3529"}], "stats": {"total": 34, "additions": 16, "deletions": 18}, "files": [{"sha": "9a1d7b4a81eca374038a93af5ac09ca92c948135", "filename": "src/libstd/json.rs", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/3e7da96fd22faf8587c1717e03a988dce6893bdb/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e7da96fd22faf8587c1717e03a988dce6893bdb/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=3e7da96fd22faf8587c1717e03a988dce6893bdb", "patch": "@@ -926,22 +926,20 @@ pub impl Decoder: serialize::Decoder {\n \n impl Json : Eq {\n     pure fn eq(&self, other: &Json) -> bool {\n-        // XXX: This is ugly because matching on references is broken, and\n-        // we can't match on dereferenced tuples without a copy.\n-        match (*self) {\n-            Number(f0) =>\n-                match *other { Number(f1) => f0 == f1, _ => false },\n-            String(ref s0) =>\n-                match *other { String(ref s1) => s0 == s1, _ => false },\n-            Boolean(b0) =>\n-                match *other { Boolean(b1) => b0 == b1, _ => false },\n-            Null =>\n-                match *other { Null => true, _ => false },\n-            List(ref v0) =>\n-                match *other { List(ref v1) => v0 == v1, _ => false },\n-            Object(ref d0) => {\n-                match *other {\n-                    Object(ref d1) => {\n+        match (self) {\n+            &Number(f0) =>\n+                match other { &Number(f1) => f0 == f1, _ => false },\n+            &String(ref s0) =>\n+                match other { &String(ref s1) => s0 == s1, _ => false },\n+            &Boolean(b0) =>\n+                match other { &Boolean(b1) => b0 == b1, _ => false },\n+            &Null =>\n+                match other { &Null => true, _ => false },\n+            &List(ref v0) =>\n+                match other { &List(ref v1) => v0 == v1, _ => false },\n+            &Object(ref d0) => {\n+                match other {\n+                    &Object(ref d1) => {\n                         if d0.len() == d1.len() {\n                             let mut equal = true;\n                             for d0.each |k, v0| {\n@@ -960,7 +958,7 @@ impl Json : Eq {\n             }\n         }\n     }\n-    pure fn ne(&self, other: &Json) -> bool { !(*self).eq(other) }\n+    pure fn ne(&self, other: &Json) -> bool { !self.eq(other) }\n }\n \n /// Test if two json values are less than one another\n@@ -1007,7 +1005,7 @@ impl Json : Ord {\n                             let mut d0_flat = ~[];\n                             let mut d1_flat = ~[];\n \n-                            // XXX: this is horribly inefficient...\n+                            // FIXME #4430: this is horribly inefficient...\n                             for d0.each |k, v| {\n                                  d0_flat.push((@copy *k, @copy *v));\n                             }"}]}