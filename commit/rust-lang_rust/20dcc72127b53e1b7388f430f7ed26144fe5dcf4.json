{"sha": "20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwZGNjNzIxMjdiNTNlMWI3Mzg4ZjQzMGY3ZWQyNjE0NGZlNWRjZjQ=", "commit": {"author": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-02-14T03:06:08Z"}, "committer": {"name": "csmoe", "email": "35686186+csmoe@users.noreply.github.com", "date": "2018-02-14T03:06:08Z"}, "message": "inform type annotations", "tree": {"sha": "a12ec4a162a224c9c28a67a59e97992087e6160c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a12ec4a162a224c9c28a67a59e97992087e6160c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "html_url": "https://github.com/rust-lang/rust/commit/20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d2d3fc5dadf894a8ad709a5860a549f2c0b1032", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d2d3fc5dadf894a8ad709a5860a549f2c0b1032", "html_url": "https://github.com/rust-lang/rust/commit/4d2d3fc5dadf894a8ad709a5860a549f2c0b1032"}], "stats": {"total": 58, "additions": 15, "deletions": 43}, "files": [{"sha": "e760636230d1864a9fa570bb54440025eb554225", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "patch": "@@ -5086,9 +5086,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             // If not, error.\n             if alternative.is_ty_var() || alternative.references_error() {\n                 if !self.is_tainted_by_errors() {\n-                    type_error_struct!(self.tcx.sess, sp, ty, E0619,\n-                                       \"the type of this value must be known in this context\")\n-                        .emit();\n+                    self.need_type_info((**self).body_id, sp, ty);\n                 }\n                 self.demand_suptype(sp, self.tcx.types.err, ty);\n                 ty = self.tcx.types.err;"}, {"sha": "1c0e084832ebc9cc0fed91ee4ea1b61e895d3ab3", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "patch": "@@ -4368,12 +4368,13 @@ i_am_a_function();\n \"##,\n \n E0619: r##\"\n+#### Note: this error code is no longer emitted by the compiler.\n The type-checker needed to know the type of an expression, but that type had not\n yet been inferred.\n \n Erroneous code example:\n \n-```compile_fail,E0619\n+```compile_fail\n let mut x = vec![];\n match x.pop() {\n     Some(v) => {"}, {"sha": "6aa83a38b7ee939aa4996d804a9e636dd3cf238a", "filename": "src/test/compile-fail/epoch-raw-pointer-method-2015.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fcompile-fail%2Fepoch-raw-pointer-method-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fcompile-fail%2Fepoch-raw-pointer-method-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fepoch-raw-pointer-method-2015.rs?ref=20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "patch": "@@ -18,6 +18,6 @@ fn main() {\n     let x = 0;\n     let y = &x as *const _;\n     let _ = y.is_null();\n-    //~^ error: the type of this value must be known in this context [tyvar_behind_raw_pointer]\n+    //~^ error: type annotations needed [tyvar_behind_raw_pointer]\n     //~^^ warning: this was previously accepted\n }"}, {"sha": "76ba5a0f4b371f42e7e6c26b70dc76756532e323", "filename": "src/test/compile-fail/issue-15965.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fcompile-fail%2Fissue-15965.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fcompile-fail%2Fissue-15965.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15965.rs?ref=20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "patch": "@@ -11,7 +11,7 @@\n fn main() {\n     return\n         { return () }\n-//~^ ERROR the type of this value must be known in this context\n+//~^ ERROR type annotations needed [E0282]\n     ()\n     ;\n }"}, {"sha": "3cf971f3f8dfb4afe0794e61b7da27576d57b428", "filename": "src/test/compile-fail/issue-2151.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fcompile-fail%2Fissue-2151.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fcompile-fail%2Fissue-2151.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2151.rs?ref=20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "patch": "@@ -10,5 +10,5 @@\n \n fn main() {\n     let x = panic!();\n-    x.clone(); //~ ERROR the type of this value must be known in this context\n+    x.clone(); //~ ERROR type annotations needed\n }"}, {"sha": "998c11979953cfde9c50a8107abf2be55e60e2bc", "filename": "src/test/compile-fail/match-vec-mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fcompile-fail%2Fmatch-vec-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fcompile-fail%2Fmatch-vec-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmatch-vec-mismatch.rs?ref=20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "patch": "@@ -43,6 +43,6 @@ fn main() {\n fn another_fn_to_avoid_suppression() {\n     match Default::default()\n     {\n-        [] => {}  //~ ERROR the type of this value\n+        [] => {}  //~ ERROR type annotations needed\n     };\n }"}, {"sha": "251e7b47dcc99175c738fb3a3ca084bbc70c54ef", "filename": "src/test/compile-fail/pat-tuple-bad-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fcompile-fail%2Fpat-tuple-bad-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fcompile-fail%2Fpat-tuple-bad-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpat-tuple-bad-type.rs?ref=20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "patch": "@@ -12,7 +12,7 @@ fn main() {\n     let x;\n \n     match x {\n-        (..) => {} //~ ERROR the type of this value must be known in this context\n+        (..) => {} //~ ERROR type annotations needed\n         _ => {}\n     }\n "}, {"sha": "8f5bf827fcf1ac801bf026f86e620633ba5c84bf", "filename": "src/test/compile-fail/unboxed-closures-failed-recursive-fn-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fcompile-fail%2Funboxed-closures-failed-recursive-fn-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fcompile-fail%2Funboxed-closures-failed-recursive-fn-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closures-failed-recursive-fn-2.rs?ref=20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "patch": "@@ -24,7 +24,7 @@ fn a() {\n                 match closure0.take() {\n                     Some(c) => {\n                         return c();\n-                        //~^ ERROR the type of this value must be known in this context\n+                        //~^ ERROR type annotations needed\n                     }\n                     None => { }\n                 }"}, {"sha": "a5a5ff7218dcfe26150499924ba76594dfe2fded", "filename": "src/test/ui/error-codes/E0619.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4d2d3fc5dadf894a8ad709a5860a549f2c0b1032/src%2Ftest%2Fui%2Ferror-codes%2FE0619.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d2d3fc5dadf894a8ad709a5860a549f2c0b1032/src%2Ftest%2Fui%2Ferror-codes%2FE0619.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0619.rs?ref=4d2d3fc5dadf894a8ad709a5860a549f2c0b1032", "patch": "@@ -1,19 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-fn main() {\n-    let x;\n-\n-    match x {\n-        (..) => {} //~ ERROR E0619\n-        _ => {}\n-    }\n-}\n-"}, {"sha": "cec336cfcec661f420d67b54ab2d9452907bca1f", "filename": "src/test/ui/error-codes/E0619.stderr", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4d2d3fc5dadf894a8ad709a5860a549f2c0b1032/src%2Ftest%2Fui%2Ferror-codes%2FE0619.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d2d3fc5dadf894a8ad709a5860a549f2c0b1032/src%2Ftest%2Fui%2Ferror-codes%2FE0619.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0619.stderr?ref=4d2d3fc5dadf894a8ad709a5860a549f2c0b1032", "patch": "@@ -1,8 +0,0 @@\n-error[E0619]: the type of this value must be known in this context\n-  --> $DIR/E0619.rs:15:9\n-   |\n-15 |         (..) => {} //~ ERROR E0619\n-   |         ^^^^\n-\n-error: aborting due to previous error\n-"}, {"sha": "bb1d921f1c61c252e8e4cba409be578c21c70f42", "filename": "src/test/ui/inference-variable-behind-raw-pointer.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fui%2Finference-variable-behind-raw-pointer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fui%2Finference-variable-behind-raw-pointer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference-variable-behind-raw-pointer.stderr?ref=20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "patch": "@@ -1,4 +1,4 @@\n-warning: the type of this value must be known in this context\n+warning: type annotations needed\n   --> $DIR/inference-variable-behind-raw-pointer.rs:18:13\n    |\n 18 |     if data.is_null() {}"}, {"sha": "975c81955e0b3c422c3f635c69c631aaca7e824e", "filename": "src/test/ui/span/issue-42234-unknown-receiver-type.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fui%2Fspan%2Fissue-42234-unknown-receiver-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fui%2Fspan%2Fissue-42234-unknown-receiver-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-42234-unknown-receiver-type.rs?ref=20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "patch": "@@ -15,11 +15,11 @@\n fn shines_a_beacon_through_the_darkness() {\n     let x: Option<_> = None;\n     x.unwrap().method_that_could_exist_on_some_type();\n-    //~^ ERROR 17:5: 17:15: the type of this value must be known in this context\n+    //~^ ERROR 17:5: 17:15: type annotations needed\n }\n \n fn courier_to_des_moines_and_points_west(data: &[u32]) -> String {\n-    data.iter() //~ ERROR 22:5: 23:20: the type of this value must be known in this context\n+    data.iter() //~ ERROR 22:5: 23:20: type annotations needed\n         .sum::<_>()\n         .to_string()\n }"}, {"sha": "2a85e1f1c45bae5a208277930ce46b82155dc946", "filename": "src/test/ui/span/issue-42234-unknown-receiver-type.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fui%2Fspan%2Fissue-42234-unknown-receiver-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20dcc72127b53e1b7388f430f7ed26144fe5dcf4/src%2Ftest%2Fui%2Fspan%2Fissue-42234-unknown-receiver-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-42234-unknown-receiver-type.stderr?ref=20dcc72127b53e1b7388f430f7ed26144fe5dcf4", "patch": "@@ -1,13 +1,13 @@\n-error[E0619]: the type of this value must be known in this context\n+error[E0282]: type annotations needed\n   --> $DIR/issue-42234-unknown-receiver-type.rs:17:5\n    |\n 17 |     x.unwrap().method_that_could_exist_on_some_type();\n    |     ^^^^^^^^^^\n \n-error[E0619]: the type of this value must be known in this context\n+error[E0282]: type annotations needed\n   --> $DIR/issue-42234-unknown-receiver-type.rs:22:5\n    |\n-22 | /     data.iter() //~ ERROR 22:5: 23:20: the type of this value must be known in this context\n+22 | /     data.iter() //~ ERROR 22:5: 23:20: type annotations needed\n 23 | |         .sum::<_>()\n    | |___________________^\n "}]}