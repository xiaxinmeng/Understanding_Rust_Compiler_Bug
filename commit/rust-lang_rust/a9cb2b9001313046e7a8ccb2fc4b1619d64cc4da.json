{"sha": "a9cb2b9001313046e7a8ccb2fc4b1619d64cc4da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5Y2IyYjkwMDEzMTMwNDZlN2E4Y2NiMmZjNGIxNjE5ZDY0Y2M0ZGE=", "commit": {"author": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2019-10-18T16:11:15Z"}, "committer": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2019-10-18T16:11:15Z"}, "message": "Fix suggestion for ranges", "tree": {"sha": "c0f9934b32c6418f7916020bfec0ebb08375d9a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0f9934b32c6418f7916020bfec0ebb08375d9a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9cb2b9001313046e7a8ccb2fc4b1619d64cc4da", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFIBAABCAAyFiEE30PRORiHa0gkBHJnH7R33dJ4Ic4FAl2p5DgUHGhtcGVyc29u\nMUBnbWFpbC5jb20ACgkQH7R33dJ4Ic6Ciwf/dWrJDlwQNCjSMMPhpPrEBiKx3W4r\nJCb6WtAI6vy0p0Vrs+tkhXk5NzTWQQzl/5jrbCAOCia0H0RGl2U9v9M48fZyqYOd\n2pLaRiEWwaMJ2XzNbI8l/9WLm4ZiUhvO652DcLtuxE7Yg5pOREXOiuF48jC3pGC7\nW8rO6MVqjBZw3O1xe1OqeQYyNd+xyWaWSxkL1ZsgzGDOtMFZ6lhf6dcfYD5YfU7E\nBsNZ6nguDCnDeam83G8cOU/beQQ+pVqapbh8eKijNk8Fx2fBT7MkC6V3KZ/4pxkj\nzmG2fAQvqTRwY7nGIT8cxOctQDldc6z7dhmXUqZBaXqrEaKsQCpDG4iQIw==\n=S4Bp\n-----END PGP SIGNATURE-----", "payload": "tree c0f9934b32c6418f7916020bfec0ebb08375d9a3\nparent 4578e5e15e79ee800859359672fe0f4db5b164cc\nauthor HMPerson1 <hmperson1@gmail.com> 1571415075 -0400\ncommitter HMPerson1 <hmperson1@gmail.com> 1571415075 -0400\n\nFix suggestion for ranges\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9cb2b9001313046e7a8ccb2fc4b1619d64cc4da", "html_url": "https://github.com/rust-lang/rust/commit/a9cb2b9001313046e7a8ccb2fc4b1619d64cc4da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9cb2b9001313046e7a8ccb2fc4b1619d64cc4da/comments", "author": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4578e5e15e79ee800859359672fe0f4db5b164cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4578e5e15e79ee800859359672fe0f4db5b164cc", "html_url": "https://github.com/rust-lang/rust/commit/4578e5e15e79ee800859359672fe0f4db5b164cc"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "4fe41a880cc7ce8705bf210af0ff3c078ab582e6", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a9cb2b9001313046e7a8ccb2fc4b1619d64cc4da/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9cb2b9001313046e7a8ccb2fc4b1619d64cc4da/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=a9cb2b9001313046e7a8ccb2fc4b1619d64cc4da", "patch": "@@ -46,7 +46,7 @@ impl<'a> Sugg<'a> {\n     pub fn hir_opt(cx: &LateContext<'_, '_>, expr: &hir::Expr) -> Option<Self> {\n         snippet_opt(cx, expr.span).map(|snippet| {\n             let snippet = Cow::Owned(snippet);\n-            Self::hir_from_snippet(expr, snippet)\n+            Self::hir_from_snippet(cx, expr, snippet)\n         })\n     }\n \n@@ -84,12 +84,20 @@ impl<'a> Sugg<'a> {\n     pub fn hir_with_macro_callsite(cx: &LateContext<'_, '_>, expr: &hir::Expr, default: &'a str) -> Self {\n         let snippet = snippet_with_macro_callsite(cx, expr.span, default);\n \n-        Self::hir_from_snippet(expr, snippet)\n+        Self::hir_from_snippet(cx, expr, snippet)\n     }\n \n     /// Generate a suggestion for an expression with the given snippet. This is used by the `hir_*`\n     /// function variants of `Sugg`, since these use different snippet functions.\n-    fn hir_from_snippet(expr: &hir::Expr, snippet: Cow<'a, str>) -> Self {\n+    fn hir_from_snippet(cx: &LateContext<'_, '_>, expr: &hir::Expr, snippet: Cow<'a, str>) -> Self {\n+        if let Some(range) = higher::range(cx, expr) {\n+            let op = match range.limits {\n+                ast::RangeLimits::HalfOpen => AssocOp::DotDot,\n+                ast::RangeLimits::Closed => AssocOp::DotDotEq,\n+            };\n+            return Sugg::BinOp(op, snippet);\n+        }\n+\n         match expr.kind {\n             hir::ExprKind::AddrOf(..)\n             | hir::ExprKind::Box(..)"}, {"sha": "931af46efe663f31ead53ba32bf7d1ce69efaffb", "filename": "tests/ui/explicit_counter_loop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a9cb2b9001313046e7a8ccb2fc4b1619d64cc4da/tests%2Fui%2Fexplicit_counter_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9cb2b9001313046e7a8ccb2fc4b1619d64cc4da/tests%2Fui%2Fexplicit_counter_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_counter_loop.stderr?ref=a9cb2b9001313046e7a8ccb2fc4b1619d64cc4da", "patch": "@@ -40,7 +40,7 @@ error: the variable `count` is used as a loop counter.\n   --> $DIR/explicit_counter_loop.rs:130:9\n    |\n LL |         for _i in 3..10 {\n-   |         ^^^^^^^^^^^^^^^ help: consider using: `for (count, _i) in 3..10.enumerate()`\n+   |         ^^^^^^^^^^^^^^^ help: consider using: `for (count, _i) in (3..10).enumerate()`\n \n error: aborting due to 7 previous errors\n "}]}