{"sha": "8cec88ba76e1d6edc98f30101c40f9247c754898", "node_id": "C_kwDOAAsO6NoAKDhjZWM4OGJhNzZlMWQ2ZWRjOThmMzAxMDFjNDBmOTI0N2M3NTQ4OTg", "commit": {"author": {"name": "Miguel Ojeda", "email": "ojeda@kernel.org", "date": "2022-04-15T15:06:09Z"}, "committer": {"name": "Miguel Ojeda", "email": "ojeda@kernel.org", "date": "2022-04-16T04:31:41Z"}, "message": "`alloc`: make `vec!` unavailable under `no_global_oom_handling`\n\nThe `vec!` macro has 3 rules, but two are not usable under\n`no_global_oom_handling` builds of the standard library\n(even with a zero size):\n\n```rust\nlet _ = vec![42];    // Error: requires `exchange_malloc` lang_item.\nlet _ = vec![42; 0]; // Error: cannot find function `from_elem`.\n```\n\nThus those two rules should not be available to begin with.\n\nThe remaining one, with an empty matcher, is just a shorthand for\n`new()` and may not make as much sense to have alone, since the\nidea behind `vec!` is to enable `Vec`s to be defined with the same\nsyntax as array expressions. Furthermore, the documentation can be\nconfusing since it shows the other rules.\n\nThus perhaps it is better and simpler to disable `vec!` entirely\nunder `no_global_oom_handling` environments, and let users call\n`new()` instead:\n\n```rust\nlet _: Vec<i32> = vec![];\nlet _: Vec<i32> = Vec::new();\n```\n\nNotwithstanding this, a `try_vec!` macro would be useful, such as\nthe one introduced in https://github.com/rust-lang/rust/pull/95051.\n\nIf the shorthand for `new()` is deemed worth keeping on its own,\nthen it may be interesting to have a separate `vec!` macro with\na single rule and different, simpler documentation.\n\nSigned-off-by: Miguel Ojeda <ojeda@kernel.org>", "tree": {"sha": "4a51b2cd8eee69153fffe01a048c6e048db383be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a51b2cd8eee69153fffe01a048c6e048db383be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cec88ba76e1d6edc98f30101c40f9247c754898", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cec88ba76e1d6edc98f30101c40f9247c754898", "html_url": "https://github.com/rust-lang/rust/commit/8cec88ba76e1d6edc98f30101c40f9247c754898", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cec88ba76e1d6edc98f30101c40f9247c754898/comments", "author": {"login": "ojeda", "id": 1054456, "node_id": "MDQ6VXNlcjEwNTQ0NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1054456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ojeda", "html_url": "https://github.com/ojeda", "followers_url": "https://api.github.com/users/ojeda/followers", "following_url": "https://api.github.com/users/ojeda/following{/other_user}", "gists_url": "https://api.github.com/users/ojeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ojeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ojeda/subscriptions", "organizations_url": "https://api.github.com/users/ojeda/orgs", "repos_url": "https://api.github.com/users/ojeda/repos", "events_url": "https://api.github.com/users/ojeda/events{/privacy}", "received_events_url": "https://api.github.com/users/ojeda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ojeda", "id": 1054456, "node_id": "MDQ6VXNlcjEwNTQ0NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1054456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ojeda", "html_url": "https://github.com/ojeda", "followers_url": "https://api.github.com/users/ojeda/followers", "following_url": "https://api.github.com/users/ojeda/following{/other_user}", "gists_url": "https://api.github.com/users/ojeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ojeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ojeda/subscriptions", "organizations_url": "https://api.github.com/users/ojeda/orgs", "repos_url": "https://api.github.com/users/ojeda/repos", "events_url": "https://api.github.com/users/ojeda/events{/privacy}", "received_events_url": "https://api.github.com/users/ojeda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7575f9670f3c837def3d186ae09366c75c7632e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7575f9670f3c837def3d186ae09366c75c7632e", "html_url": "https://github.com/rust-lang/rust/commit/e7575f9670f3c837def3d186ae09366c75c7632e"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "22c19243e7f53fca729e9e75503e51b59802355f", "filename": "library/alloc/src/macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8cec88ba76e1d6edc98f30101c40f9247c754898/library%2Falloc%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cec88ba76e1d6edc98f30101c40f9247c754898/library%2Falloc%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fmacros.rs?ref=8cec88ba76e1d6edc98f30101c40f9247c754898", "patch": "@@ -34,7 +34,7 @@\n /// be mindful of side effects.\n ///\n /// [`Vec`]: crate::vec::Vec\n-#[cfg(not(test))]\n+#[cfg(all(not(no_global_oom_handling), not(test)))]\n #[macro_export]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_diagnostic_item = \"vec_macro\"]\n@@ -55,7 +55,7 @@ macro_rules! vec {\n // required for this macro definition, is not available. Instead use the\n // `slice::into_vec`  function which is only available with cfg(test)\n // NB see the slice::hack module in slice.rs for more information\n-#[cfg(test)]\n+#[cfg(all(not(no_global_oom_handling), test))]\n macro_rules! vec {\n     () => (\n         $crate::vec::Vec::new()"}]}