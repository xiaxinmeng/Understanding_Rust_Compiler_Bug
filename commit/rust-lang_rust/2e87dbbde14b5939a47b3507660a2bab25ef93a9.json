{"sha": "2e87dbbde14b5939a47b3507660a2bab25ef93a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlODdkYmJkZTE0YjU5MzlhNDdiMzUwNzY2MGEyYmFiMjVlZjkzYTk=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-04-09T15:42:17Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-04-09T20:35:28Z"}, "message": "Fix ICE when a borrow is used after drop\n\nht @nickfrostatx for the first initial patch", "tree": {"sha": "baf3e26ed3cc9bbd3d0d66ed3dc35ae2784779c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/baf3e26ed3cc9bbd3d0d66ed3dc35ae2784779c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e87dbbde14b5939a47b3507660a2bab25ef93a9", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAlrLzpEACgkQiMlBzaHU\nZDLheA//f58aKRxa/UEOSSn422eRJK/rJ4ouleTBWTZdbjKJ6r/JNZs+2F3PCoei\nqCmAP4zSbXfSb7m7vsjDcNZstkzWwQBWzrhaylV7/WuQ5Z6GHrFRvRSH581kW1iB\nTnTJtRWFnSbSuZxOhBsodjrJb5ovKs/CENEleJDWsgBFqh/5vcZaJi+Z+iS4k6YA\nWJnvqVkUsNEs5r/QVfGkW8qtrHddixTKXIwGNSILIWonjJk8TrS+QWJiqHoQ1Fym\nXlFu/IdXNr6lEWv6W+xiMLhIqIFmpj0kxqFx/HSWTZFNd+tMK3l6uEyg4r7Ta43I\n8DdInTdDkD3GAcBBsuJ+CrBoQfEgCQINsZzq8fVqpkcQ0Q6UpqjusHr+HyE6iIJ4\nARzMhmTKQDFRyKA9At24jb0Ar+ak+M+y+IxmxOsWB0hc5V8QbLpLtcSjneo998Go\ngym2KY2P1zVKcIhJvrTLO6v7H5uFGU/oXzcTLChcjkgHZrYpPyjdiH6NA73cRlSh\ng929M+vJUiWxtqzfVeVgCWH8TodB5FXnA2Qe1fVP4pM1qhQiAIUz585dc3CCIE1C\naJsUt8400MnuWbMOT2sVr4QKS9dKqQrXT5opZcT2q9wMMxuWuTmskDijpeoujRIK\nU+0y62F74MeH/9p3VazzcgV42gvTCcHrqUn2uEqicPyR4Uvm9Mk=\n=DFWH\n-----END PGP SIGNATURE-----", "payload": "tree baf3e26ed3cc9bbd3d0d66ed3dc35ae2784779c7\nparent 4b9b70c394e7f341b4016fce4cbf763d404b26f9\nauthor Santiago Pastorino <spastorino@gmail.com> 1523288537 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1523306128 -0300\n\nFix ICE when a borrow is used after drop\n\nht @nickfrostatx for the first initial patch\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e87dbbde14b5939a47b3507660a2bab25ef93a9", "html_url": "https://github.com/rust-lang/rust/commit/2e87dbbde14b5939a47b3507660a2bab25ef93a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e87dbbde14b5939a47b3507660a2bab25ef93a9/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b9b70c394e7f341b4016fce4cbf763d404b26f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b9b70c394e7f341b4016fce4cbf763d404b26f9", "html_url": "https://github.com/rust-lang/rust/commit/4b9b70c394e7f341b4016fce4cbf763d404b26f9"}], "stats": {"total": 78, "additions": 67, "deletions": 11}, "files": [{"sha": "b6efe884fc33c642ee21b9365306564da8de2798", "filename": "src/librustc_mir/borrow_check/nll/explain_borrow/mod.rs", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/2e87dbbde14b5939a47b3507660a2bab25ef93a9/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fexplain_borrow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e87dbbde14b5939a47b3507660a2bab25ef93a9/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fexplain_borrow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fexplain_borrow%2Fmod.rs?ref=2e87dbbde14b5939a47b3507660a2bab25ef93a9", "patch": "@@ -59,17 +59,29 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n \n                     Cause::DropVar(local, location) => {\n                         match find_drop_use(mir, regioncx, borrow, location, local) {\n-                            Some(p) => {\n-                                let local_name = mir.local_decls[local].name.unwrap();\n-\n-                                err.span_label(\n-                                    mir.source_info(p).span,\n-                                    format!(\n-                                        \"borrow later used here, when `{}` is dropped\",\n-                                        local_name\n-                                    ),\n-                                );\n-                            }\n+                            Some(p) => match &mir.local_decls[local].name {\n+                                Some(local_name) => {\n+                                    err.span_label(\n+                                        mir.source_info(p).span,\n+                                        format!(\n+                                            \"borrow later used here, when `{}` is dropped\",\n+                                            local_name\n+                                        ),\n+                                    );\n+                                }\n+                                None => {\n+                                    err.span_label(\n+                                        mir.local_decls[local].source_info.span,\n+                                        \"borrow may end up in a temporary, created here\",\n+                                    );\n+\n+                                    err.span_label(\n+                                        mir.source_info(p).span,\n+                                        \"temporary later dropped here, \\\n+                                         potentially using the reference\",\n+                                    );\n+                                }\n+                            },\n \n                             None => {\n                                 span_bug!("}, {"sha": "7a6d6dd3fe1b44d4029a6a4c4cf8bf9252bdc1ca", "filename": "src/test/ui/issue-47646.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2e87dbbde14b5939a47b3507660a2bab25ef93a9/src%2Ftest%2Fui%2Fissue-47646.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e87dbbde14b5939a47b3507660a2bab25ef93a9/src%2Ftest%2Fui%2Fissue-47646.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47646.rs?ref=2e87dbbde14b5939a47b3507660a2bab25ef93a9", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(warnings)]\n+#![feature(nll)]\n+\n+use std::collections::BinaryHeap;\n+\n+fn main() {\n+    let mut heap: BinaryHeap<i32> = BinaryHeap::new();\n+    let borrow = heap.peek_mut();\n+\n+    match (borrow, ()) {\n+        (Some(_), ()) => {\n+            println!(\"{:?}\", heap); //~ ERROR cannot borrow `heap` as immutable\n+        }\n+        _ => {}\n+    };\n+}"}, {"sha": "b1289146e0ea9e12785675f1198dbedf4ea8636f", "filename": "src/test/ui/issue-47646.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2e87dbbde14b5939a47b3507660a2bab25ef93a9/src%2Ftest%2Fui%2Fissue-47646.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2e87dbbde14b5939a47b3507660a2bab25ef93a9/src%2Ftest%2Fui%2Fissue-47646.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47646.stderr?ref=2e87dbbde14b5939a47b3507660a2bab25ef93a9", "patch": "@@ -0,0 +1,18 @@\n+error[E0502]: cannot borrow `heap` as immutable because it is also borrowed as mutable\n+  --> $DIR/issue-47646.rs:22:30\n+   |\n+LL |     let borrow = heap.peek_mut();\n+   |                  ---- mutable borrow occurs here\n+LL | \n+LL |     match (borrow, ()) {\n+   |           ------------ borrow may end up in a temporary, created here\n+LL |         (Some(_), ()) => {\n+LL |             println!(\"{:?}\", heap); //~ ERROR cannot borrow `heap` as immutable\n+   |                              ^^^^ immutable borrow occurs here\n+...\n+LL |     };\n+   |      - temporary later dropped here, potentially using the reference\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0502`."}]}