{"sha": "4e7fc663cc674a33cc7078096ad1b0269618c456", "node_id": "C_kwDOAAsO6NoAKDRlN2ZjNjYzY2M2NzRhMzNjYzcwNzgwOTZhZDFiMDI2OTYxOGM0NTY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-04T21:16:20Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-04T21:35:58Z"}, "message": "Don't silently eat label before block in block-like expr", "tree": {"sha": "c24495e83147d42d40e94f01c2519ce0539d78e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c24495e83147d42d40e94f01c2519ce0539d78e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e7fc663cc674a33cc7078096ad1b0269618c456", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e7fc663cc674a33cc7078096ad1b0269618c456", "html_url": "https://github.com/rust-lang/rust/commit/4e7fc663cc674a33cc7078096ad1b0269618c456", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e7fc663cc674a33cc7078096ad1b0269618c456/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2a5c3a50fc3fb6d16cd140f55f7db61cbf08a01", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2a5c3a50fc3fb6d16cd140f55f7db61cbf08a01", "html_url": "https://github.com/rust-lang/rust/commit/c2a5c3a50fc3fb6d16cd140f55f7db61cbf08a01"}], "stats": {"total": 231, "additions": 227, "deletions": 4}, "files": [{"sha": "c609aa93da3a75b0d9cb50637ef85e18dce8bfe5", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4e7fc663cc674a33cc7078096ad1b0269618c456/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e7fc663cc674a33cc7078096ad1b0269618c456/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=4e7fc663cc674a33cc7078096ad1b0269618c456", "patch": "@@ -2468,11 +2468,15 @@ impl<'a> Parser<'a> {\n     }\n \n     pub(crate) fn maybe_recover_unexpected_block_label(&mut self) -> bool {\n-        let Some(label) = self.eat_label().filter(|_| {\n-            self.eat(&token::Colon) && self.token.kind == token::OpenDelim(Delimiter::Brace)\n-        }) else {\n+        // Check for `'a : {`\n+        if !(self.check_lifetime()\n+            && self.look_ahead(1, |tok| tok.kind == token::Colon)\n+            && self.look_ahead(2, |tok| tok.kind == token::OpenDelim(Delimiter::Brace)))\n+        {\n             return false;\n-        };\n+        }\n+        let label = self.eat_label().expect(\"just checked if a label exists\");\n+        self.bump(); // eat `:`\n         let span = label.ident.span.to(self.prev_token.span);\n         let mut err = self.struct_span_err(span, \"block label not supported here\");\n         err.span_label(span, \"not supported here\");"}, {"sha": "55f3f8f9f5f036fadf7ddd210bd62a75fbede024", "filename": "src/test/ui/parser/label-after-block-like.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/4e7fc663cc674a33cc7078096ad1b0269618c456/src%2Ftest%2Fui%2Fparser%2Flabel-after-block-like.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e7fc663cc674a33cc7078096ad1b0269618c456/src%2Ftest%2Fui%2Fparser%2Flabel-after-block-like.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flabel-after-block-like.rs?ref=4e7fc663cc674a33cc7078096ad1b0269618c456", "patch": "@@ -0,0 +1,43 @@\n+fn a() {\n+    if let () = () 'a {}\n+    //~^ ERROR labeled expression must be followed by `:`\n+    //~| ERROR expected `{`, found `'a`\n+}\n+\n+fn b() {\n+    if true 'a {}\n+    //~^ ERROR labeled expression must be followed by `:`\n+    //~| ERROR expected `{`, found `'a`\n+}\n+\n+fn c() {\n+    loop 'a {}\n+    //~^ ERROR labeled expression must be followed by `:`\n+    //~| ERROR expected `{`, found `'a`\n+}\n+\n+fn d() {\n+    while true 'a {}\n+    //~^ ERROR labeled expression must be followed by `:`\n+    //~| ERROR expected `{`, found `'a`\n+}\n+\n+fn e() {\n+    while let () = () 'a {}\n+    //~^ ERROR labeled expression must be followed by `:`\n+    //~| ERROR expected `{`, found `'a`\n+}\n+\n+fn f() {\n+    for _ in 0..0 'a {}\n+    //~^ ERROR labeled expression must be followed by `:`\n+    //~| ERROR expected `{`, found `'a`\n+}\n+\n+fn g() {\n+    unsafe 'a {}\n+    //~^ ERROR labeled expression must be followed by `:`\n+    //~| ERROR expected `{`, found `'a`\n+}\n+\n+fn main() {}"}, {"sha": "8ff50b124b32bc2c5282a7d08501a48222b2ed46", "filename": "src/test/ui/parser/label-after-block-like.stderr", "status": "added", "additions": 176, "deletions": 0, "changes": 176, "blob_url": "https://github.com/rust-lang/rust/blob/4e7fc663cc674a33cc7078096ad1b0269618c456/src%2Ftest%2Fui%2Fparser%2Flabel-after-block-like.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4e7fc663cc674a33cc7078096ad1b0269618c456/src%2Ftest%2Fui%2Fparser%2Flabel-after-block-like.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flabel-after-block-like.stderr?ref=4e7fc663cc674a33cc7078096ad1b0269618c456", "patch": "@@ -0,0 +1,176 @@\n+error: labeled expression must be followed by `:`\n+  --> $DIR/label-after-block-like.rs:2:20\n+   |\n+LL |     if let () = () 'a {}\n+   |                    ---^^\n+   |                    | |\n+   |                    | help: add `:` after the label\n+   |                    the label\n+   |\n+   = note: labels are used before loops and blocks, allowing e.g., `break 'label` to them\n+\n+error: expected `{`, found `'a`\n+  --> $DIR/label-after-block-like.rs:2:20\n+   |\n+LL |     if let () = () 'a {}\n+   |                    ^^ expected `{`\n+   |\n+note: the `if` expression is missing a block after this condition\n+  --> $DIR/label-after-block-like.rs:2:8\n+   |\n+LL |     if let () = () 'a {}\n+   |        ^^^^^^^^^^^\n+help: try placing this code inside a block\n+   |\n+LL |     if let () = () { 'a {} }\n+   |                    +       +\n+\n+error: labeled expression must be followed by `:`\n+  --> $DIR/label-after-block-like.rs:8:13\n+   |\n+LL |     if true 'a {}\n+   |             ---^^\n+   |             | |\n+   |             | help: add `:` after the label\n+   |             the label\n+   |\n+   = note: labels are used before loops and blocks, allowing e.g., `break 'label` to them\n+\n+error: expected `{`, found `'a`\n+  --> $DIR/label-after-block-like.rs:8:13\n+   |\n+LL |     if true 'a {}\n+   |             ^^ expected `{`\n+   |\n+note: the `if` expression is missing a block after this condition\n+  --> $DIR/label-after-block-like.rs:8:8\n+   |\n+LL |     if true 'a {}\n+   |        ^^^^\n+help: try placing this code inside a block\n+   |\n+LL |     if true { 'a {} }\n+   |             +       +\n+\n+error: labeled expression must be followed by `:`\n+  --> $DIR/label-after-block-like.rs:14:10\n+   |\n+LL |     loop 'a {}\n+   |          ---^^\n+   |          | |\n+   |          | help: add `:` after the label\n+   |          the label\n+   |\n+   = note: labels are used before loops and blocks, allowing e.g., `break 'label` to them\n+\n+error: expected `{`, found `'a`\n+  --> $DIR/label-after-block-like.rs:14:10\n+   |\n+LL |     loop 'a {}\n+   |     ---- ^^ expected `{`\n+   |     |\n+   |     while parsing this `loop` expression\n+   |\n+help: try placing this code inside a block\n+   |\n+LL |     loop { 'a {} }\n+   |          +       +\n+\n+error: labeled expression must be followed by `:`\n+  --> $DIR/label-after-block-like.rs:20:16\n+   |\n+LL |     while true 'a {}\n+   |                ---^^\n+   |                | |\n+   |                | help: add `:` after the label\n+   |                the label\n+   |\n+   = note: labels are used before loops and blocks, allowing e.g., `break 'label` to them\n+\n+error: expected `{`, found `'a`\n+  --> $DIR/label-after-block-like.rs:20:16\n+   |\n+LL |     while true 'a {}\n+   |     ----- ---- ^^ expected `{`\n+   |     |     |\n+   |     |     this `while` condition successfully parsed\n+   |     while parsing the body of this `while` expression\n+   |\n+help: try placing this code inside a block\n+   |\n+LL |     while true { 'a {} }\n+   |                +       +\n+\n+error: labeled expression must be followed by `:`\n+  --> $DIR/label-after-block-like.rs:26:23\n+   |\n+LL |     while let () = () 'a {}\n+   |                       ---^^\n+   |                       | |\n+   |                       | help: add `:` after the label\n+   |                       the label\n+   |\n+   = note: labels are used before loops and blocks, allowing e.g., `break 'label` to them\n+\n+error: expected `{`, found `'a`\n+  --> $DIR/label-after-block-like.rs:26:23\n+   |\n+LL |     while let () = () 'a {}\n+   |     ----- ----------- ^^ expected `{`\n+   |     |     |\n+   |     |     this `while` condition successfully parsed\n+   |     while parsing the body of this `while` expression\n+   |\n+help: try placing this code inside a block\n+   |\n+LL |     while let () = () { 'a {} }\n+   |                       +       +\n+\n+error: labeled expression must be followed by `:`\n+  --> $DIR/label-after-block-like.rs:32:19\n+   |\n+LL |     for _ in 0..0 'a {}\n+   |                   ---^^\n+   |                   | |\n+   |                   | help: add `:` after the label\n+   |                   the label\n+   |\n+   = note: labels are used before loops and blocks, allowing e.g., `break 'label` to them\n+\n+error: expected `{`, found `'a`\n+  --> $DIR/label-after-block-like.rs:32:19\n+   |\n+LL |     for _ in 0..0 'a {}\n+   |                   ^^ expected `{`\n+   |\n+help: try placing this code inside a block\n+   |\n+LL |     for _ in 0..0 { 'a {} }\n+   |                   +       +\n+\n+error: labeled expression must be followed by `:`\n+  --> $DIR/label-after-block-like.rs:38:12\n+   |\n+LL |     unsafe 'a {}\n+   |            ---^^\n+   |            | |\n+   |            | help: add `:` after the label\n+   |            the label\n+   |\n+   = note: labels are used before loops and blocks, allowing e.g., `break 'label` to them\n+\n+error: expected `{`, found `'a`\n+  --> $DIR/label-after-block-like.rs:38:12\n+   |\n+LL |     unsafe 'a {}\n+   |     ------ ^^ expected `{`\n+   |     |\n+   |     while parsing this `unsafe` expression\n+   |\n+help: try placing this code inside a block\n+   |\n+LL |     unsafe { 'a {} }\n+   |            +       +\n+\n+error: aborting due to 14 previous errors\n+"}]}