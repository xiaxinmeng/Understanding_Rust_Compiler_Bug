{"sha": "4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3", "node_id": "C_kwDOAAsO6NoAKDRjNDE1MmIwMWM2YzhlMmYwMzZjYTY1MGNiMGU2YTZjZmMzNzRhZjM", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-19T19:21:14Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-19T19:21:14Z"}, "message": "remove `span_lint_and_sugg_for_edges` from clippy utils", "tree": {"sha": "801f8b72a5665b8d4d724ada777c7f6e2e1f746c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/801f8b72a5665b8d4d724ada777c7f6e2e1f746c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3", "html_url": "https://github.com/rust-lang/rust/commit/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15fc228d0d0a68b5ba565758fab13ed7f863fcea", "url": "https://api.github.com/repos/rust-lang/rust/commits/15fc228d0d0a68b5ba565758fab13ed7f863fcea", "html_url": "https://github.com/rust-lang/rust/commit/15fc228d0d0a68b5ba565758fab13ed7f863fcea"}], "stats": {"total": 184, "additions": 23, "deletions": 161}, "files": [{"sha": "8ae84dbb3dcf432b056e9c9649db60c5a543bfb7", "filename": "src/tools/clippy/clippy_lints/src/methods/map_flatten.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fmap_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fmap_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fmap_flatten.rs?ref=4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3", "patch": "@@ -1,4 +1,4 @@\n-use clippy_utils::diagnostics::span_lint_and_sugg_for_edges;\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::is_trait_method;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::is_type_diagnostic_item;\n@@ -14,17 +14,14 @@ use super::MAP_FLATTEN;\n pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>, recv: &Expr<'_>, map_arg: &Expr<'_>, map_span: Span) {\n     if let Some((caller_ty_name, method_to_use)) = try_get_caller_ty_name_and_method_name(cx, expr, recv, map_arg) {\n         let mut applicability = Applicability::MachineApplicable;\n-        let help_msgs = [\n-            &format!(\"try replacing `map` with `{}`\", method_to_use),\n-            \"and remove the `.flatten()`\",\n-        ];\n+        \n         let closure_snippet = snippet_with_applicability(cx, map_arg.span, \"..\", &mut applicability);\n-        span_lint_and_sugg_for_edges(\n+        span_lint_and_sugg(\n             cx,\n             MAP_FLATTEN,\n             expr.span.with_lo(map_span.lo()),\n             &format!(\"called `map(..).flatten()` on `{}`\", caller_ty_name),\n-            &help_msgs,\n+            &format!(\"try replacing `map` with `{}` and remove the `.flatten()`\", method_to_use),\n             format!(\"{}({})\", method_to_use, closure_snippet),\n             applicability,\n         );"}, {"sha": "2564099f4dbcac56a0d6e78859b255ce531968e7", "filename": "src/tools/clippy/clippy_lints/src/utils/internal_lints/metadata_collector.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs?ref=4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3", "patch": "@@ -112,7 +112,6 @@ const LINT_EMISSION_FUNCTIONS: [&[&str]; 8] = [\n     &[\"clippy_utils\", \"diagnostics\", \"span_lint_and_sugg\"],\n     &[\"clippy_utils\", \"diagnostics\", \"span_lint_and_then\"],\n     &[\"clippy_utils\", \"diagnostics\", \"span_lint_hir_and_then\"],\n-    &[\"clippy_utils\", \"diagnostics\", \"span_lint_and_sugg_for_edges\"],\n ];\n const SUGGESTION_DIAGNOSTIC_BUILDER_METHODS: [(&str, bool); 9] = [\n     (\"span_suggestion\", false),"}, {"sha": "7f55db3b31f7070cdfd74801d2608ec4d6f00f6e", "filename": "src/tools/clippy/clippy_utils/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 90, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fdiagnostics.rs?ref=4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3", "patch": "@@ -8,7 +8,7 @@\n //! Thank you!\n //! ~The `INTERNAL_METADATA_COLLECTOR` lint\n \n-use rustc_errors::{emitter::MAX_SUGGESTION_HIGHLIGHT_LINES, Applicability, Diagnostic, MultiSpan};\n+use rustc_errors::{Applicability, Diagnostic, MultiSpan};\n use rustc_hir::HirId;\n use rustc_lint::{LateContext, Lint, LintContext};\n use rustc_span::source_map::Span;\n@@ -219,95 +219,6 @@ pub fn span_lint_and_sugg<'a, T: LintContext>(\n     });\n }\n \n-/// Like [`span_lint_and_sugg`] with a focus on the edges. The output will either\n-/// emit single span or multispan suggestion depending on the number of its lines.\n-///\n-/// If the given suggestion string has more lines than the maximum display length defined by\n-/// [`MAX_SUGGESTION_HIGHLIGHT_LINES`][`rustc_errors::emitter::MAX_SUGGESTION_HIGHLIGHT_LINES`],\n-/// this function will split the suggestion and span to showcase the change for the top and\n-/// bottom edge of the code. For normal suggestions, in one display window, the help message\n-/// will be combined with a colon.\n-///\n-/// Multipart suggestions like the one being created here currently cannot be\n-/// applied by rustfix (See [rustfix#141](https://github.com/rust-lang/rustfix/issues/141)).\n-/// Testing rustfix with this lint emission function might require a file with\n-/// suggestions that can be fixed and those that can't. See\n-/// [clippy#8520](https://github.com/rust-lang/rust-clippy/pull/8520/files) for\n-/// an example and of this.\n-///\n-/// # Example for a long suggestion\n-///\n-/// ```text\n-/// error: called `map(..).flatten()` on `Option`\n-///   --> $DIR/map_flatten.rs:8:10\n-///    |\n-/// LL |           .map(|x| {\n-///    |  __________^\n-/// LL | |             if x <= 5 {\n-/// LL | |                 Some(x)\n-/// LL | |             } else {\n-/// ...  |\n-/// LL | |         })\n-/// LL | |         .flatten();\n-///    | |__________________^\n-///    |\n-///   = note: `-D clippy::map-flatten` implied by `-D warnings`\n-/// help: try replacing `map` with `and_then`\n-///    |\n-/// LL ~         .and_then(|x| {\n-/// LL +             if x <= 5 {\n-/// LL +                 Some(x)\n-///    |\n-/// help: and remove the `.flatten()`\n-///    |\n-/// LL +                 None\n-/// LL +             }\n-/// LL ~         });\n-///    |\n-/// ```\n-pub fn span_lint_and_sugg_for_edges(\n-    cx: &LateContext<'_>,\n-    lint: &'static Lint,\n-    sp: Span,\n-    msg: &str,\n-    helps: &[&str; 2],\n-    sugg: String,\n-    applicability: Applicability,\n-) {\n-    span_lint_and_then(cx, lint, sp, msg, |diag| {\n-        let sugg_lines_count = sugg.lines().count();\n-        if sugg_lines_count > MAX_SUGGESTION_HIGHLIGHT_LINES {\n-            let sm = cx.sess().source_map();\n-            if let (Ok(line_upper), Ok(line_bottom)) =\n-                (sm.lookup_line(sp.lo()), sm.lookup_line(sp.hi()))\n-            {\n-                let split_idx = MAX_SUGGESTION_HIGHLIGHT_LINES / 2;\n-                let span_upper = sm.span_until_char(\n-                    sp.with_hi(line_upper.sf.lines(|lines| lines[line_upper.line + split_idx])),\n-                    '\\n',\n-                );\n-                let span_bottom = sp.with_lo(line_bottom.sf.lines(|lines| lines[line_bottom.line - split_idx]));\n-\n-                let sugg_lines_vec = sugg.lines().collect::<Vec<&str>>();\n-                let sugg_upper = sugg_lines_vec[..split_idx].join(\"\\n\");\n-                let sugg_bottom = sugg_lines_vec[sugg_lines_count - split_idx..].join(\"\\n\");\n-\n-                diag.span_suggestion(span_upper, helps[0], sugg_upper, applicability);\n-                diag.span_suggestion(span_bottom, helps[1], sugg_bottom, applicability);\n-\n-                return;\n-            }\n-        }\n-        diag.span_suggestion_with_style(\n-            sp,\n-            &helps.join(\", \"),\n-            sugg,\n-            applicability,\n-            rustc_errors::SuggestionStyle::ShowAlways,\n-        );\n-    });\n-}\n-\n /// Create a suggestion made from several `span \u2192 replacement`.\n ///\n /// Note: in the JSON format (used by `compiletest_rs`), the help message will"}, {"sha": "4b2630d6858479b2bafe70e637f53f3ff18ef638", "filename": "src/tools/clippy/tests/ui/map_flatten.stderr", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten.stderr?ref=4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3", "patch": "@@ -12,14 +12,12 @@ LL | |         .flatten();\n    | |__________________^\n    |\n    = note: `-D clippy::map-flatten` implied by `-D warnings`\n-help: try replacing `map` with `and_then`\n+help: try replacing `map` with `and_then` and remove the `.flatten()`\n    |\n LL ~         .and_then(|x| {\n LL +             if x <= 5 {\n LL +                 Some(x)\n-   |\n-help: and remove the `.flatten()`\n-   |\n+LL +             } else {\n LL +                 None\n LL +             }\n LL ~         });\n@@ -38,14 +36,12 @@ LL | |         })\n LL | |         .flatten();\n    | |__________________^\n    |\n-help: try replacing `map` with `and_then`\n+help: try replacing `map` with `and_then` and remove the `.flatten()`\n    |\n LL ~         .and_then(|x| {\n LL +             if x == 1 {\n LL +                 Ok(x)\n-   |\n-help: and remove the `.flatten()`\n-   |\n+LL +             } else {\n LL +                 Err(0)\n LL +             }\n LL ~         });\n@@ -64,14 +60,13 @@ LL | |         })\n LL | |         .flatten();\n    | |__________________^\n    |\n-help: try replacing `map` with `and_then`\n+help: try replacing `map` with `and_then` and remove the `.flatten()`\n    |\n LL ~         .and_then(|res| {\n LL +             if res > 0 {\n LL +                 do_something();\n-   |\n-help: and remove the `.flatten()`\n-   |\n+LL +                 Ok(res)\n+LL +             } else {\n LL +                 Err(0)\n LL +             }\n LL ~         });\n@@ -90,14 +85,12 @@ LL | |         })\n LL | |         .flatten()\n    | |__________________^\n    |\n-help: try replacing `map` with `filter_map`\n+help: try replacing `map` with `filter_map` and remove the `.flatten()`\n    |\n LL ~         .filter_map(|some_value| {\n LL +             if some_value > 3 {\n LL +                 Some(some_value)\n-   |\n-help: and remove the `.flatten()`\n-   |\n+LL +             } else {\n LL +                 None\n LL +             }\n LL +         })"}, {"sha": "e9b41354c58fa50599e93f2b39a5dc015f61646d", "filename": "src/tools/clippy/tests/ui/map_flatten_fixable.fixed", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten_fixable.fixed?ref=4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3", "patch": "@@ -59,8 +59,6 @@ fn issue8878() {\n         .and_then(|_| {\n // we need some newlines\n // so that the span is big enough\n-// we need some newlines\n-// so that the span is big enough\n // for a splitted output of the diagnostic\n             Some(\"\")\n  // whitespace beforehand is important as well"}, {"sha": "f3b82ad08d0fc3c61c31cb53e46c035c06789440", "filename": "src/tools/clippy/tests/ui/map_flatten_fixable.stderr", "status": "modified", "additions": 9, "deletions": 45, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_flatten_fixable.stderr?ref=4c4152b01c6c8e2f036ca650cb0e6a6cfc374af3", "patch": "@@ -2,79 +2,45 @@ error: called `map(..).flatten()` on `Iterator`\n   --> $DIR/map_flatten_fixable.rs:18:47\n    |\n LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(option_id).flatten().collect();\n-   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `filter_map` and remove the `.flatten()`: `filter_map(option_id)`\n    |\n    = note: `-D clippy::map-flatten` implied by `-D warnings`\n-help: try replacing `map` with `filter_map`, and remove the `.flatten()`\n-   |\n-LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().filter_map(option_id).collect();\n-   |                                               ~~~~~~~~~~~~~~~~~~~~~\n \n error: called `map(..).flatten()` on `Iterator`\n   --> $DIR/map_flatten_fixable.rs:19:47\n    |\n LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(option_id_ref).flatten().collect();\n-   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try replacing `map` with `filter_map`, and remove the `.flatten()`\n-   |\n-LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().filter_map(option_id_ref).collect();\n-   |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `filter_map` and remove the `.flatten()`: `filter_map(option_id_ref)`\n \n error: called `map(..).flatten()` on `Iterator`\n   --> $DIR/map_flatten_fixable.rs:20:47\n    |\n LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(option_id_closure).flatten().collect();\n-   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try replacing `map` with `filter_map`, and remove the `.flatten()`\n-   |\n-LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().filter_map(option_id_closure).collect();\n-   |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `filter_map` and remove the `.flatten()`: `filter_map(option_id_closure)`\n \n error: called `map(..).flatten()` on `Iterator`\n   --> $DIR/map_flatten_fixable.rs:21:47\n    |\n LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| x.checked_add(1)).flatten().collect();\n-   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try replacing `map` with `filter_map`, and remove the `.flatten()`\n-   |\n-LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().filter_map(|x| x.checked_add(1)).collect();\n-   |                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `filter_map` and remove the `.flatten()`: `filter_map(|x| x.checked_add(1))`\n \n error: called `map(..).flatten()` on `Iterator`\n   --> $DIR/map_flatten_fixable.rs:24:47\n    |\n LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| 0..x).flatten().collect();\n-   |                                               ^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try replacing `map` with `flat_map`, and remove the `.flatten()`\n-   |\n-LL |     let _: Vec<_> = vec![5_i8; 6].into_iter().flat_map(|x| 0..x).collect();\n-   |                                               ~~~~~~~~~~~~~~~~~~\n+   |                                               ^^^^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `flat_map` and remove the `.flatten()`: `flat_map(|x| 0..x)`\n \n error: called `map(..).flatten()` on `Option`\n   --> $DIR/map_flatten_fixable.rs:27:40\n    |\n LL |     let _: Option<_> = (Some(Some(1))).map(|x| x).flatten();\n-   |                                        ^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try replacing `map` with `and_then`, and remove the `.flatten()`\n-   |\n-LL |     let _: Option<_> = (Some(Some(1))).and_then(|x| x);\n-   |                                        ~~~~~~~~~~~~~~~\n+   |                                        ^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `and_then` and remove the `.flatten()`: `and_then(|x| x)`\n \n error: called `map(..).flatten()` on `Result`\n   --> $DIR/map_flatten_fixable.rs:30:42\n    |\n LL |     let _: Result<_, &str> = (Ok(Ok(1))).map(|x| x).flatten();\n-   |                                          ^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: try replacing `map` with `and_then`, and remove the `.flatten()`\n-   |\n-LL |     let _: Result<_, &str> = (Ok(Ok(1))).and_then(|x| x);\n-   |                                          ~~~~~~~~~~~~~~~\n+   |                                          ^^^^^^^^^^^^^^^^^^^^ help: try replacing `map` with `and_then` and remove the `.flatten()`: `and_then(|x| x)`\n \n error: called `map(..).flatten()` on `Option`\n   --> $DIR/map_flatten_fixable.rs:59:10\n@@ -89,14 +55,12 @@ LL | |         })\n LL | |         .flatten();\n    | |__________________^\n    |\n-help: try replacing `map` with `and_then`\n+help: try replacing `map` with `and_then` and remove the `.flatten()`\n    |\n LL ~         .and_then(|_| {\n LL + // we need some newlines\n LL + // so that the span is big enough\n-   |\n-help: and remove the `.flatten()`\n-   |\n+LL + // for a splitted output of the diagnostic\n LL +             Some(\"\")\n LL +  // whitespace beforehand is important as well\n LL ~         });"}]}