{"sha": "472e6787f03f19c1c2bd1736459d497aacc38a81", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MmU2Nzg3ZjAzZjE5YzFjMmJkMTczNjQ1OWQ0OTdhYWNjMzhhODE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-01T03:15:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-01T03:15:31Z"}, "message": "Auto merge of #65459 - ecstatic-morse:graphviz-subgraph, r=estebank\n\nFix `-Zunpretty=mir-cfg` to render multiple items\n\n`-Zunpretty=mir-cfg` outputs DOT to stdout for all items being compiled. However, it puts all of these items in separate `digraph`s, which means the result of redirecting that output to a file is not valid. Most dot renderers (I have tried `dot` and `xdot`) cannot render the output.\n\nThis PR checks to see if `write_mir_graphviz` will  process multiple items, and writes them each as a `subgraph` in a single, top-level `digraph`. As a result, DOT can be viewed without manually editing the output file. The output is unchanged when printing a single item (e.g.`-Zunpretty=mir-cfg=item_name`).\n\nHere's the output of `xdot` for a rust file containing three items:\n![three-items](https://user-images.githubusercontent.com/29463364/66889712-4bf62200-ef98-11e9-83b5-60faa2a300dd.png)\n\nThe borders are a result of the nonstandard\u2013but well-supported\u2013[`cluster` prefix](https://graphviz.gitlab.io/_pages/doc/info/lang.html) (search for \"Subgraphs and Clusters\"). They will not appear if your renderer does not support this extension, but the graph will still render properly.", "tree": {"sha": "7aad04a70863c24045afe9e670afeafb47eb39f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7aad04a70863c24045afe9e670afeafb47eb39f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/472e6787f03f19c1c2bd1736459d497aacc38a81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/472e6787f03f19c1c2bd1736459d497aacc38a81", "html_url": "https://github.com/rust-lang/rust/commit/472e6787f03f19c1c2bd1736459d497aacc38a81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/472e6787f03f19c1c2bd1736459d497aacc38a81/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa4e57ca8f18b836bf77923cd0d9ad1390f0110b", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa4e57ca8f18b836bf77923cd0d9ad1390f0110b", "html_url": "https://github.com/rust-lang/rust/commit/aa4e57ca8f18b836bf77923cd0d9ad1390f0110b"}, {"sha": "cd3e9c4815c145e2458021ea0ee259dea7b3578c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd3e9c4815c145e2458021ea0ee259dea7b3578c", "html_url": "https://github.com/rust-lang/rust/commit/cd3e9c4815c145e2458021ea0ee259dea7b3578c"}], "stats": {"total": 65, "additions": 45, "deletions": 20}, "files": [{"sha": "ff2946d3a690e1cdbbe56a118d354c5957b34b47", "filename": "src/librustc_mir/util/graphviz.rs", "status": "modified", "additions": 40, "deletions": 12, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/472e6787f03f19c1c2bd1736459d497aacc38a81/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/472e6787f03f19c1c2bd1736459d497aacc38a81/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs?ref=472e6787f03f19c1c2bd1736459d497aacc38a81", "patch": "@@ -16,10 +16,22 @@ pub fn write_mir_graphviz<W>(\n where\n     W: Write,\n {\n-    for def_id in dump_mir_def_ids(tcx, single) {\n+    let def_ids = dump_mir_def_ids(tcx, single);\n+\n+    let use_subgraphs = def_ids.len() > 1;\n+    if use_subgraphs {\n+        writeln!(w, \"digraph __crate__ {{\")?;\n+    }\n+\n+    for def_id in def_ids {\n         let body = &tcx.optimized_mir(def_id);\n-        write_mir_fn_graphviz(tcx, def_id, body, w)?;\n+        write_mir_fn_graphviz(tcx, def_id, body, use_subgraphs, w)?;\n     }\n+\n+    if use_subgraphs {\n+        writeln!(w, \"}}\")?;\n+    }\n+\n     Ok(())\n }\n \n@@ -38,12 +50,16 @@ pub fn write_mir_fn_graphviz<'tcx, W>(\n     tcx: TyCtxt<'tcx>,\n     def_id: DefId,\n     body: &Body<'_>,\n+    subgraph: bool,\n     w: &mut W,\n ) -> io::Result<()>\n where\n     W: Write,\n {\n-    writeln!(w, \"digraph Mir_{} {{\", graphviz_safe_def_name(def_id))?;\n+    let kind = if subgraph { \"subgraph\" } else { \"digraph\" };\n+    let cluster = if subgraph { \"cluster_\" } else { \"\" }; // Prints a border around MIR\n+    let def_name = graphviz_safe_def_name(def_id);\n+    writeln!(w, \"{} {}Mir_{} {{\", kind, cluster, def_name)?;\n \n     // Global graph properties\n     writeln!(w, r#\"    graph [fontname=\"monospace\"];\"#)?;\n@@ -55,12 +71,12 @@ where\n \n     // Nodes\n     for (block, _) in body.basic_blocks().iter_enumerated() {\n-        write_node(block, body, w)?;\n+        write_node(def_id, block, body, w)?;\n     }\n \n     // Edges\n     for (source, _) in body.basic_blocks().iter_enumerated() {\n-        write_edges(source, body, w)?;\n+        write_edges(def_id, source, body, w)?;\n     }\n     writeln!(w, \"}}\")\n }\n@@ -111,25 +127,37 @@ pub fn write_node_label<W: Write, INIT, FINI>(block: BasicBlock,\n     fini(w)?;\n \n     // Close the table\n-    writeln!(w, \"</table>\")\n+    write!(w, \"</table>\")\n }\n \n /// Write a graphviz DOT node for the given basic block.\n-fn write_node<W: Write>(block: BasicBlock, body: &Body<'_>, w: &mut W) -> io::Result<()> {\n+fn write_node<W: Write>(\n+    def_id: DefId,\n+    block: BasicBlock,\n+    body: &Body<'_>,\n+    w: &mut W,\n+) -> io::Result<()> {\n     // Start a new node with the label to follow, in one of DOT's pseudo-HTML tables.\n-    write!(w, r#\"    {} [shape=\"none\", label=<\"#, node(block))?;\n+    write!(w, r#\"    {} [shape=\"none\", label=<\"#, node(def_id, block))?;\n     write_node_label(block, body, w, 1, |_| Ok(()), |_| Ok(()))?;\n     // Close the node label and the node itself.\n     writeln!(w, \">];\")\n }\n \n /// Write graphviz DOT edges with labels between the given basic block and all of its successors.\n-fn write_edges<W: Write>(source: BasicBlock, body: &Body<'_>, w: &mut W) -> io::Result<()> {\n+fn write_edges<W: Write>(\n+    def_id: DefId,\n+    source: BasicBlock,\n+    body: &Body<'_>,\n+    w: &mut W,\n+) -> io::Result<()> {\n     let terminator = body[source].terminator();\n     let labels = terminator.kind.fmt_successor_labels();\n \n     for (&target, label) in terminator.successors().zip(labels) {\n-        writeln!(w, r#\"    {} -> {} [label=\"{}\"];\"#, node(source), node(target), label)?;\n+        let src = node(def_id, source);\n+        let trg = node(def_id, target);\n+        writeln!(w, r#\"    {} -> {} [label=\"{}\"];\"#, src, trg, label)?;\n     }\n \n     Ok(())\n@@ -181,8 +209,8 @@ fn write_graph_label<'tcx, W: Write>(\n     writeln!(w, \">;\")\n }\n \n-fn node(block: BasicBlock) -> String {\n-    format!(\"bb{}\", block.index())\n+fn node(def_id: DefId, block: BasicBlock) -> String {\n+    format!(\"bb{}__{}\", block.index(), graphviz_safe_def_name(def_id))\n }\n \n fn escape<T: Debug>(t: &T) -> String {"}, {"sha": "89f298846d2f5ad6bc909384279d9d7922231d42", "filename": "src/librustc_mir/util/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/472e6787f03f19c1c2bd1736459d497aacc38a81/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/472e6787f03f19c1c2bd1736459d497aacc38a81/src%2Flibrustc_mir%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fpretty.rs?ref=472e6787f03f19c1c2bd1736459d497aacc38a81", "patch": "@@ -145,7 +145,7 @@ fn dump_matched_mir_node<'tcx, F>(\n         let _: io::Result<()> = try {\n             let mut file =\n                 create_dump_file(tcx, \"dot\", pass_num, pass_name, disambiguator, source)?;\n-            write_mir_fn_graphviz(tcx, source.def_id(), body, &mut file)?;\n+            write_mir_fn_graphviz(tcx, source.def_id(), body, false, &mut file)?;\n         };\n     }\n }"}, {"sha": "fdd4e226c5a765a5f6f5d392849b9642bf8bfab3", "filename": "src/test/mir-opt/graphviz.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/472e6787f03f19c1c2bd1736459d497aacc38a81/src%2Ftest%2Fmir-opt%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/472e6787f03f19c1c2bd1736459d497aacc38a81/src%2Ftest%2Fmir-opt%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fgraphviz.rs?ref=472e6787f03f19c1c2bd1736459d497aacc38a81", "patch": "@@ -12,12 +12,9 @@ fn main() {}\n //     node [fontname=\"monospace\"];\n //     edge [fontname=\"monospace\"];\n //     label=<fn main() -&gt; ()<br align=\"left\"/>>;\n-//     bb0 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">0</td></tr><tr><td align=\"left\" balign=\"left\">_0 = ()<br/></td></tr><tr><td align=\"left\">goto</td></tr></table>\n-// >];\n-//     bb1 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">1</td></tr><tr><td align=\"left\">resume</td></tr></table>\n-// >];\n-//     bb2 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">2</td></tr><tr><td align=\"left\">return</td></tr></table>\n-// >];\n-//     bb0 -> bb2 [label=\"\"];\n+//     bb0__0_12 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">0</td></tr><tr><td align=\"left\" balign=\"left\">_0 = ()<br/></td></tr><tr><td align=\"left\">goto</td></tr></table>>];\n+//     bb1__0_12 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">1</td></tr><tr><td align=\"left\">resume</td></tr></table>>];\n+//     bb2__0_12 [shape=\"none\", label=<<table border=\"0\" cellborder=\"1\" cellspacing=\"0\"><tr><td bgcolor=\"gray\" align=\"center\" colspan=\"1\">2</td></tr><tr><td align=\"left\">return</td></tr></table>>];\n+//     bb0__0_12 -> bb2__0_12 [label=\"\"];\n // }\n // END rustc.main.mir_map.0.dot"}]}