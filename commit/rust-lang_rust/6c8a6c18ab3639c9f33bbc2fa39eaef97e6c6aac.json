{"sha": "6c8a6c18ab3639c9f33bbc2fa39eaef97e6c6aac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjOGE2YzE4YWIzNjM5YzlmMzNiYmMyZmEzOWVhZWY5N2U2YzZhYWM=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-02-17T07:49:34Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-02-17T07:49:34Z"}, "message": "deal with binary op short-circuit", "tree": {"sha": "26839318413708c3ef6ced88022cdd2d33ef0e31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26839318413708c3ef6ced88022cdd2d33ef0e31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c8a6c18ab3639c9f33bbc2fa39eaef97e6c6aac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c8a6c18ab3639c9f33bbc2fa39eaef97e6c6aac", "html_url": "https://github.com/rust-lang/rust/commit/6c8a6c18ab3639c9f33bbc2fa39eaef97e6c6aac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c8a6c18ab3639c9f33bbc2fa39eaef97e6c6aac/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "505eb53d2972844efe336a88036fb219341cfc07", "url": "https://api.github.com/repos/rust-lang/rust/commits/505eb53d2972844efe336a88036fb219341cfc07", "html_url": "https://github.com/rust-lang/rust/commit/505eb53d2972844efe336a88036fb219341cfc07"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d7f952255fe283d4273ab0f15c8496a5974b0480", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c8a6c18ab3639c9f33bbc2fa39eaef97e6c6aac/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c8a6c18ab3639c9f33bbc2fa39eaef97e6c6aac/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=6c8a6c18ab3639c9f33bbc2fa39eaef97e6c6aac", "patch": "@@ -448,13 +448,13 @@ fn never_loop_expr(expr: &Expr) -> bool {\n         ExprBreak(..) | ExprRet(..) => true,\n         ExprBox(ref e) |\n         ExprUnary(_, ref e) |\n+        ExprBinary(_, ref e, _) | // because short-circuiting\n         ExprCast(ref e, _) |\n         ExprType(ref e, _) |\n         ExprField(ref e, _) |\n         ExprTupField(ref e, _) |\n         ExprRepeat(ref e, _) |\n         ExprAddrOf(_, ref e) => never_loop_expr(e),\n-        ExprBinary(_, ref e1, ref e2) |\n         ExprAssign(ref e1, ref e2) |\n         ExprAssignOp(_, ref e1, ref e2) |\n         ExprIndex(ref e1, ref e2) => never_loop_expr(e1) || never_loop_expr(e2),"}]}