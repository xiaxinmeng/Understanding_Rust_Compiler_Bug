{"sha": "ddc49966dc4552b77582cf7e5aace8ac97d736fc", "node_id": "C_kwDOAAsO6NoAKGRkYzQ5OTY2ZGM0NTUyYjc3NTgyY2Y3ZTVhYWNlOGFjOTdkNzM2ZmM", "commit": {"author": {"name": "Sosth\u00e8ne Gu\u00e9don", "email": "sosthene@guedon.gdn", "date": "2022-11-01T18:28:06Z"}, "committer": {"name": "Sosth\u00e8ne Gu\u00e9don", "email": "sosthene@guedon.gdn", "date": "2022-11-20T12:45:12Z"}, "message": "Fix suggestion to point to the whole method", "tree": {"sha": "b6e690037d3e1a3e921c8ca099cca1f81c279d8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6e690037d3e1a3e921c8ca099cca1f81c279d8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddc49966dc4552b77582cf7e5aace8ac97d736fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddc49966dc4552b77582cf7e5aace8ac97d736fc", "html_url": "https://github.com/rust-lang/rust/commit/ddc49966dc4552b77582cf7e5aace8ac97d736fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddc49966dc4552b77582cf7e5aace8ac97d736fc/comments", "author": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9891af348c01f8cf14ab1e10754faccad04fcaa5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9891af348c01f8cf14ab1e10754faccad04fcaa5", "html_url": "https://github.com/rust-lang/rust/commit/9891af348c01f8cf14ab1e10754faccad04fcaa5"}], "stats": {"total": 112, "additions": 72, "deletions": 40}, "files": [{"sha": "60922fb4ea4975e67785b0216ddfadf846cfef96", "filename": "clippy_lints/src/functions/missnamed_getters.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ddc49966dc4552b77582cf7e5aace8ac97d736fc/clippy_lints%2Fsrc%2Ffunctions%2Fmissnamed_getters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddc49966dc4552b77582cf7e5aace8ac97d736fc/clippy_lints%2Fsrc%2Ffunctions%2Fmissnamed_getters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions%2Fmissnamed_getters.rs?ref=ddc49966dc4552b77582cf7e5aace8ac97d736fc", "patch": "@@ -1,4 +1,4 @@\n-use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::source::snippet;\n use rustc_errors::Applicability;\n use rustc_hir::{intravisit::FnKind, Body, ExprKind, FnDecl, HirId, ImplicitSelfKind};\n@@ -13,7 +13,7 @@ pub fn check_fn(\n     kind: FnKind<'_>,\n     decl: &FnDecl<'_>,\n     body: &Body<'_>,\n-    _span: Span,\n+    span: Span,\n     _hir_id: HirId,\n ) {\n     let FnKind::Method(ref ident, sig) = kind else {\n@@ -55,14 +55,15 @@ pub fn check_fn(\n     let expr_span = block_expr.span;\n \n     let mut expr = block_expr;\n+    // Accept &<expr>, &mut <expr> and <expr>\n     if let ExprKind::AddrOf(_, _, tmp) = expr.kind {\n         expr = tmp;\n     }\n     let (self_data, used_ident) = if_chain! {\n         if let ExprKind::Field(self_data, ident) = expr.kind;\n         if ident.name.as_str() != name;\n         then {\n-            (self_data,ident)\n+            (self_data, ident)\n         } else {\n             return;\n         }\n@@ -121,16 +122,17 @@ pub fn check_fn(\n         };\n \n     if cx.tcx.type_of(used_field.did) == cx.tcx.type_of(correct_field.did) {\n-        let snippet = snippet(cx, expr_span, \"..\");\n-        let sugg = format!(\"{}{name}\", snippet.strip_suffix(used_field.name.as_str()).unwrap());\n-        span_lint_and_sugg(\n+        let left_span = block_expr.span.until(used_ident.span);\n+        let snippet = snippet(cx, left_span, \"..\");\n+        let sugg = format!(\"{snippet}{name}\");\n+        span_lint_and_then(\n             cx,\n             MISSNAMED_GETTERS,\n-            expr_span,\n+            span,\n             \"getter function appears to return the wrong field\",\n-            \"consider using\",\n-            sugg,\n-            Applicability::MaybeIncorrect,\n+            |diag| {\n+                diag.span_suggestion(expr_span, \"consider using\", sugg, Applicability::MaybeIncorrect);\n+            },\n         );\n     }\n }"}, {"sha": "2e3d9df34f45a65bc7ab7599acff37a9f371ce57", "filename": "tests/ui/missnamed_getters.stderr", "status": "modified", "additions": 60, "deletions": 30, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/ddc49966dc4552b77582cf7e5aace8ac97d736fc/tests%2Fui%2Fmissnamed_getters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ddc49966dc4552b77582cf7e5aace8ac97d736fc/tests%2Fui%2Fmissnamed_getters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissnamed_getters.stderr?ref=ddc49966dc4552b77582cf7e5aace8ac97d736fc", "patch": "@@ -1,64 +1,94 @@\n error: getter function appears to return the wrong field\n-  --> $DIR/missnamed_getters.rs:12:9\n+  --> $DIR/missnamed_getters.rs:11:5\n    |\n-LL |         &self.b\n-   |         ^^^^^^^ help: consider using: `&self.a`\n+LL | /     fn a(&self) -> &u8 {\n+LL | |         &self.b\n+   | |         ------- help: consider using: `&self.a`\n+LL | |     }\n+   | |_____^\n    |\n    = note: `-D clippy::missnamed-getters` implied by `-D warnings`\n \n error: getter function appears to return the wrong field\n-  --> $DIR/missnamed_getters.rs:15:9\n+  --> $DIR/missnamed_getters.rs:14:5\n    |\n-LL |         &mut self.b\n-   |         ^^^^^^^^^^^ help: consider using: `&mut self.a`\n+LL | /     fn a_mut(&mut self) -> &mut u8 {\n+LL | |         &mut self.b\n+   | |         ----------- help: consider using: `&mut self.a`\n+LL | |     }\n+   | |_____^\n \n error: getter function appears to return the wrong field\n-  --> $DIR/missnamed_getters.rs:19:9\n+  --> $DIR/missnamed_getters.rs:18:5\n    |\n-LL |         self.a\n-   |         ^^^^^^ help: consider using: `self.b`\n+LL | /     fn b(self) -> u8 {\n+LL | |         self.a\n+   | |         ------ help: consider using: `self.b`\n+LL | |     }\n+   | |_____^\n \n error: getter function appears to return the wrong field\n-  --> $DIR/missnamed_getters.rs:23:9\n+  --> $DIR/missnamed_getters.rs:22:5\n    |\n-LL |         &mut self.a\n-   |         ^^^^^^^^^^^ help: consider using: `&mut self.b`\n+LL | /     fn b_mut(&mut self) -> &mut u8 {\n+LL | |         &mut self.a\n+   | |         ----------- help: consider using: `&mut self.b`\n+LL | |     }\n+   | |_____^\n \n error: getter function appears to return the wrong field\n-  --> $DIR/missnamed_getters.rs:27:9\n+  --> $DIR/missnamed_getters.rs:26:5\n    |\n-LL |         &self.b\n-   |         ^^^^^^^ help: consider using: `&self.c`\n+LL | /     fn c(&self) -> &u8 {\n+LL | |         &self.b\n+   | |         ------- help: consider using: `&self.c`\n+LL | |     }\n+   | |_____^\n \n error: getter function appears to return the wrong field\n-  --> $DIR/missnamed_getters.rs:31:9\n+  --> $DIR/missnamed_getters.rs:30:5\n    |\n-LL |         &mut self.a\n-   |         ^^^^^^^^^^^ help: consider using: `&mut self.c`\n+LL | /     fn c_mut(&mut self) -> &mut u8 {\n+LL | |         &mut self.a\n+   | |         ----------- help: consider using: `&mut self.c`\n+LL | |     }\n+   | |_____^\n \n error: getter function appears to return the wrong field\n-  --> $DIR/missnamed_getters.rs:42:9\n+  --> $DIR/missnamed_getters.rs:41:5\n    |\n-LL |         &self.b\n-   |         ^^^^^^^ help: consider using: `&self.a`\n+LL | /     unsafe fn a(&self) -> &u8 {\n+LL | |         &self.b\n+   | |         ------- help: consider using: `&self.a`\n+LL | |     }\n+   | |_____^\n \n error: getter function appears to return the wrong field\n-  --> $DIR/missnamed_getters.rs:45:9\n+  --> $DIR/missnamed_getters.rs:44:5\n    |\n-LL |         &mut self.b\n-   |         ^^^^^^^^^^^ help: consider using: `&mut self.a`\n+LL | /     unsafe fn a_mut(&mut self) -> &mut u8 {\n+LL | |         &mut self.b\n+   | |         ----------- help: consider using: `&mut self.a`\n+LL | |     }\n+   | |_____^\n \n error: getter function appears to return the wrong field\n-  --> $DIR/missnamed_getters.rs:49:9\n+  --> $DIR/missnamed_getters.rs:48:5\n    |\n-LL |         self.a\n-   |         ^^^^^^ help: consider using: `self.b`\n+LL | /     unsafe fn b(self) -> u8 {\n+LL | |         self.a\n+   | |         ------ help: consider using: `self.b`\n+LL | |     }\n+   | |_____^\n \n error: getter function appears to return the wrong field\n-  --> $DIR/missnamed_getters.rs:53:9\n+  --> $DIR/missnamed_getters.rs:52:5\n    |\n-LL |         &mut self.a\n-   |         ^^^^^^^^^^^ help: consider using: `&mut self.b`\n+LL | /     unsafe fn b_mut(&mut self) -> &mut u8 {\n+LL | |         &mut self.a\n+   | |         ----------- help: consider using: `&mut self.b`\n+LL | |     }\n+   | |_____^\n \n error: aborting due to 10 previous errors\n "}]}