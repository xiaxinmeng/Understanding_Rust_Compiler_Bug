{"sha": "34cfe383e5ecdea538582bd08736a80f555c0adc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0Y2ZlMzgzZTVlY2RlYTUzODU4MmJkMDg3MzZhODBmNTU1YzBhZGM=", "commit": {"author": {"name": "Count Count", "email": "countvoncount123456@gmail.com", "date": "2021-03-24T09:06:31Z"}, "committer": {"name": "Count Count", "email": "countvoncount123456@gmail.com", "date": "2021-03-24T09:06:31Z"}, "message": "correct comment", "tree": {"sha": "cb466410ef6466a149f93bb31ff400245cf05712", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb466410ef6466a149f93bb31ff400245cf05712"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34cfe383e5ecdea538582bd08736a80f555c0adc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34cfe383e5ecdea538582bd08736a80f555c0adc", "html_url": "https://github.com/rust-lang/rust/commit/34cfe383e5ecdea538582bd08736a80f555c0adc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34cfe383e5ecdea538582bd08736a80f555c0adc/comments", "author": {"login": "Count-Count", "id": 51271955, "node_id": "MDQ6VXNlcjUxMjcxOTU1", "avatar_url": "https://avatars.githubusercontent.com/u/51271955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Count-Count", "html_url": "https://github.com/Count-Count", "followers_url": "https://api.github.com/users/Count-Count/followers", "following_url": "https://api.github.com/users/Count-Count/following{/other_user}", "gists_url": "https://api.github.com/users/Count-Count/gists{/gist_id}", "starred_url": "https://api.github.com/users/Count-Count/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Count-Count/subscriptions", "organizations_url": "https://api.github.com/users/Count-Count/orgs", "repos_url": "https://api.github.com/users/Count-Count/repos", "events_url": "https://api.github.com/users/Count-Count/events{/privacy}", "received_events_url": "https://api.github.com/users/Count-Count/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Count-Count", "id": 51271955, "node_id": "MDQ6VXNlcjUxMjcxOTU1", "avatar_url": "https://avatars.githubusercontent.com/u/51271955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Count-Count", "html_url": "https://github.com/Count-Count", "followers_url": "https://api.github.com/users/Count-Count/followers", "following_url": "https://api.github.com/users/Count-Count/following{/other_user}", "gists_url": "https://api.github.com/users/Count-Count/gists{/gist_id}", "starred_url": "https://api.github.com/users/Count-Count/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Count-Count/subscriptions", "organizations_url": "https://api.github.com/users/Count-Count/orgs", "repos_url": "https://api.github.com/users/Count-Count/repos", "events_url": "https://api.github.com/users/Count-Count/events{/privacy}", "received_events_url": "https://api.github.com/users/Count-Count/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb1fa97fdcad00785cece5fbd9d42157c253e976", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb1fa97fdcad00785cece5fbd9d42157c253e976", "html_url": "https://github.com/rust-lang/rust/commit/fb1fa97fdcad00785cece5fbd9d42157c253e976"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a2def41625d439dfc7642b30f2914b39e08ee943", "filename": "library/std/src/sys/windows/stdio.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/34cfe383e5ecdea538582bd08736a80f555c0adc/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34cfe383e5ecdea538582bd08736a80f555c0adc/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fstdio.rs?ref=34cfe383e5ecdea538582bd08736a80f555c0adc", "patch": "@@ -102,7 +102,7 @@ fn write(\n                 Ok(s) => {\n                     assert_eq!(char_width, s.len());\n                     let written = write_valid_utf8(handle, s)?;\n-                    assert_eq!(written, s.len()); // guaranteed by write0() for single codepoint writes\n+                    assert_eq!(written, s.len()); // guaranteed by write_valid_utf8() for single codepoint writes\n                     return Ok(1);\n                 }\n                 Err(_) => {"}]}