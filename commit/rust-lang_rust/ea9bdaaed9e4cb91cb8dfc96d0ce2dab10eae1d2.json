{"sha": "ea9bdaaed9e4cb91cb8dfc96d0ce2dab10eae1d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhOWJkYWFlZDllNGNiOTFjYjhkZmM5NmQwY2UyZGFiMTBlYWUxZDI=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-12T09:00:53Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-04-12T09:00:53Z"}, "message": "libsyntax: (maybe) fix deriving(TotalOrd) on windows", "tree": {"sha": "e69ca28029bb8b1449cfc5950e4401b530852cba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e69ca28029bb8b1449cfc5950e4401b530852cba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea9bdaaed9e4cb91cb8dfc96d0ce2dab10eae1d2", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea9bdaaed9e4cb91cb8dfc96d0ce2dab10eae1d2", "html_url": "https://github.com/rust-lang/rust/commit/ea9bdaaed9e4cb91cb8dfc96d0ce2dab10eae1d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea9bdaaed9e4cb91cb8dfc96d0ce2dab10eae1d2/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bff374873136bacf8352e05f73cb3252761dc2d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/bff374873136bacf8352e05f73cb3252761dc2d6", "html_url": "https://github.com/rust-lang/rust/commit/bff374873136bacf8352e05f73cb3252761dc2d6"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a098a7463d3e75bdbca81e1e86a9c957924c3c61", "filename": "src/libsyntax/ext/deriving/cmp/totalord.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ea9bdaaed9e4cb91cb8dfc96d0ce2dab10eae1d2/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea9bdaaed9e4cb91cb8dfc96d0ce2dab10eae1d2/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs?ref=ea9bdaaed9e4cb91cb8dfc96d0ce2dab10eae1d2", "patch": "@@ -45,10 +45,10 @@ pub fn ordering_const(cx: @ext_ctxt, span: span, cnst: Ordering) -> @expr {\n         Equal => ~\"Equal\",\n         Greater => ~\"Greater\"\n     };\n-    build::mk_path(cx, span,\n-                   ~[cx.ident_of(~\"core\"),\n-                     cx.ident_of(~\"cmp\"),\n-                     cx.ident_of(cnst)])\n+    build::mk_path_global(cx, span,\n+                          ~[cx.ident_of(~\"core\"),\n+                            cx.ident_of(~\"cmp\"),\n+                            cx.ident_of(cnst)])\n }\n \n pub fn cs_cmp(cx: @ext_ctxt, span: span,\n@@ -61,7 +61,7 @@ pub fn cs_cmp(cx: @ext_ctxt, span: span,\n         // foldr (possibly) nests the matches in lexical_ordering better\n         false,\n         |cx, span, old, new| {\n-            build::mk_call(cx, span, lexical_ord, ~[old, new])\n+            build::mk_call_global(cx, span, lexical_ord, ~[old, new])\n         },\n         ordering_const(cx, span, Equal),\n         |cx, span, list| {\n@@ -70,7 +70,7 @@ pub fn cs_cmp(cx: @ext_ctxt, span: span,\n                 // later one\n                 [(self_var, _, _),\n                  (other_var, _, _)] => ordering_const(cx, span,\n-                                                   self_var.cmp(&other_var)),\n+                                                      self_var.cmp(&other_var)),\n                 _ => cx.span_bug(span, \"Not exactly 2 arguments in `deriving(TotalOrd)`\")\n             }\n         },"}]}