{"sha": "acb5fefd6d9933b345873355c2c0100184c74727", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYjVmZWZkNmQ5OTMzYjM0NTg3MzM1NWMyYzAxMDAxODRjNzQ3Mjc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-10-09T00:24:15Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-11-21T21:17:09Z"}, "message": "core: Rename Char::is_digit_radix to is_digit\n\nThis fits the naming of `to_digit` and `from_digit`. Leave\nthe old name deprecated.", "tree": {"sha": "489e1d4d66c78880d1097926b9343f5e5743cb35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/489e1d4d66c78880d1097926b9343f5e5743cb35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acb5fefd6d9933b345873355c2c0100184c74727", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acb5fefd6d9933b345873355c2c0100184c74727", "html_url": "https://github.com/rust-lang/rust/commit/acb5fefd6d9933b345873355c2c0100184c74727", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acb5fefd6d9933b345873355c2c0100184c74727/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2aff692fa88235d356725f98184a5ea5b52eb88", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2aff692fa88235d356725f98184a5ea5b52eb88", "html_url": "https://github.com/rust-lang/rust/commit/c2aff692fa88235d356725f98184a5ea5b52eb88"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "428a5879b8bc97d5665615a9ab9740788df2b7cd", "filename": "src/libcore/char.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/acb5fefd6d9933b345873355c2c0100184c74727/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acb5fefd6d9933b345873355c2c0100184c74727/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=acb5fefd6d9933b345873355c2c0100184c74727", "patch": "@@ -245,8 +245,24 @@ pub trait Char {\n     /// # Panics\n     ///\n     /// Panics if given a radix > 36.\n+    #[deprecated = \"use is_digit\"]\n     fn is_digit_radix(&self, radix: uint) -> bool;\n \n+    /// Checks if a `char` parses as a numeric digit in the given radix.\n+    ///\n+    /// Compared to `is_digit()`, this function only recognizes the characters\n+    /// `0-9`, `a-z` and `A-Z`.\n+    ///\n+    /// # Return value\n+    ///\n+    /// Returns `true` if `c` is a valid digit under `radix`, and `false`\n+    /// otherwise.\n+    ///\n+    /// # Failure\n+    ///\n+    /// Fails if given a radix > 36.\n+    fn is_digit(&self, radix: uint) -> bool;\n+\n     /// Converts a character to the corresponding digit.\n     ///\n     /// # Return value\n@@ -319,8 +335,11 @@ pub trait Char {\n \n #[experimental = \"trait is experimental\"]\n impl Char for char {\n+    #[deprecated = \"use is_digit\"]\n     fn is_digit_radix(&self, radix: uint) -> bool { is_digit_radix(*self, radix) }\n \n+    fn is_digit(&self, radix: uint) -> bool { is_digit_radix(*self, radix) }\n+\n     fn to_digit(&self, radix: uint) -> Option<uint> { to_digit(*self, radix) }\n \n     fn from_digit(num: uint, radix: uint) -> Option<char> { from_digit(num, radix) }"}]}