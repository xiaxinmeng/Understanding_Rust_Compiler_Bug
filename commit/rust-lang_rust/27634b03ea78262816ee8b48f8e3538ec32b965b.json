{"sha": "27634b03ea78262816ee8b48f8e3538ec32b965b", "node_id": "C_kwDOAAsO6NoAKDI3NjM0YjAzZWE3ODI2MjgxNmVlOGI0OGY4ZTM1MzhlYzMyYjk2NWI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-13T07:50:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-13T07:50:56Z"}, "message": "Auto merge of #94255 - b-naber:use-mir-constant-in-thir, r=oli-obk\n\nUse mir constant in thir instead of ty::Const\n\nThis is blocked on https://github.com/rust-lang/rust/pull/94059 (does include its changes, the first two commits in this PR correspond to those changes) and https://github.com/rust-lang/rust/pull/93800 being reinstated (which had to be reverted). Mainly opening since `@lcnr` offered to give some feedback and maybe also for a perf-run (if necessary).\n\nThis currently contains a lot of duplication since some of the logic of `ty::Const` had to be copied to `mir::ConstantKind`, but with the introduction of valtrees a lot of that functionality will disappear from `ty::Const`.\n\nOnly the last commit contains changes that need to be reviewed here. Did leave some `FIXME` comments regarding future implementation decisions and some things that might be incorrectly implemented.\n\nr? `@oli-obk`", "tree": {"sha": "a12c9edb068825ac97d95c4e8e1b015c6302772a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a12c9edb068825ac97d95c4e8e1b015c6302772a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27634b03ea78262816ee8b48f8e3538ec32b965b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27634b03ea78262816ee8b48f8e3538ec32b965b", "html_url": "https://github.com/rust-lang/rust/commit/27634b03ea78262816ee8b48f8e3538ec32b965b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27634b03ea78262816ee8b48f8e3538ec32b965b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62d912e24dc1ec3816dfcddba96c792b660edc9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/62d912e24dc1ec3816dfcddba96c792b660edc9b", "html_url": "https://github.com/rust-lang/rust/commit/62d912e24dc1ec3816dfcddba96c792b660edc9b"}, {"sha": "2f780758099bd649e8b9434449ec5e303e31e1aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f780758099bd649e8b9434449ec5e303e31e1aa", "html_url": "https://github.com/rust-lang/rust/commit/2f780758099bd649e8b9434449ec5e303e31e1aa"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "c0b3e95b18523fcbd40bb7523be6d0b96d6b6731", "filename": "clippy_lints/src/matches/overlapping_arms.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27634b03ea78262816ee8b48f8e3538ec32b965b/clippy_lints%2Fsrc%2Fmatches%2Foverlapping_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27634b03ea78262816ee8b48f8e3538ec32b965b/clippy_lints%2Fsrc%2Fmatches%2Foverlapping_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Foverlapping_arms.rs?ref=27634b03ea78262816ee8b48f8e3538ec32b965b", "patch": "@@ -40,10 +40,8 @@ fn all_ranges<'tcx>(cx: &LateContext<'tcx>, arms: &'tcx [Arm<'_>], ty: Ty<'tcx>)\n                         Some(rhs) => constant(cx, cx.typeck_results(), rhs)?.0,\n                         None => miri_to_const(ty.numeric_max_val(cx.tcx)?)?,\n                     };\n-\n                     let lhs_val = lhs_const.int_value(cx, ty)?;\n                     let rhs_val = rhs_const.int_value(cx, ty)?;\n-\n                     let rhs_bound = match range_end {\n                         RangeEnd::Included => EndBound::Included(rhs_val),\n                         RangeEnd::Excluded => EndBound::Excluded(rhs_val),"}, {"sha": "6ba9ba0753d49f42e5ac974d10e7c8e0a9e5ce17", "filename": "clippy_lints/src/neg_multiply.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27634b03ea78262816ee8b48f8e3538ec32b965b/clippy_lints%2Fsrc%2Fneg_multiply.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27634b03ea78262816ee8b48f8e3538ec32b965b/clippy_lints%2Fsrc%2Fneg_multiply.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_multiply.rs?ref=27634b03ea78262816ee8b48f8e3538ec32b965b", "patch": "@@ -53,7 +53,7 @@ impl<'tcx> LateLintPass<'tcx> for NegMultiply {\n fn check_mul(cx: &LateContext<'_>, span: Span, lit: &Expr<'_>, exp: &Expr<'_>) {\n     if_chain! {\n         if let ExprKind::Lit(ref l) = lit.kind;\n-        if consts::lit_to_constant(&l.node, cx.typeck_results().expr_ty_opt(lit)) == Constant::Int(1);\n+        if consts::lit_to_mir_constant(&l.node, cx.typeck_results().expr_ty_opt(lit)) == Constant::Int(1);\n         if cx.typeck_results().expr_ty(exp).is_integral();\n \n         then {"}, {"sha": "be46b791aa4b656decb9406aeb5ee275136e8ce1", "filename": "clippy_utils/src/consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/27634b03ea78262816ee8b48f8e3538ec32b965b/clippy_utils%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27634b03ea78262816ee8b48f8e3538ec32b965b/clippy_utils%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fconsts.rs?ref=27634b03ea78262816ee8b48f8e3538ec32b965b", "patch": "@@ -179,7 +179,7 @@ impl Constant {\n }\n \n /// Parses a `LitKind` to a `Constant`.\n-pub fn lit_to_constant(lit: &LitKind, ty: Option<Ty<'_>>) -> Constant {\n+pub fn lit_to_mir_constant(lit: &LitKind, ty: Option<Ty<'_>>) -> Constant {\n     match *lit {\n         LitKind::Str(ref is, _) => Constant::Str(is.to_string()),\n         LitKind::Byte(b) => Constant::Int(u128::from(b)),\n@@ -301,7 +301,7 @@ impl<'a, 'tcx> ConstEvalLateContext<'a, 'tcx> {\n                 if is_direct_expn_of(e.span, \"cfg\").is_some() {\n                     None\n                 } else {\n-                    Some(lit_to_constant(&lit.node, self.typeck_results.expr_ty_opt(e)))\n+                    Some(lit_to_mir_constant(&lit.node, self.typeck_results.expr_ty_opt(e)))\n                 }\n             },\n             ExprKind::Array(vec) => self.multi(vec).map(Constant::Vec),"}]}