{"sha": "9c39992021477740673a5b4982014678743c7fdf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMzk5OTIwMjE0Nzc3NDA2NzNhNWI0OTgyMDE0Njc4NzQzYzdmZGY=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-08-01T10:39:37Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-08-04T23:28:06Z"}, "message": "Add support for vanilla linux on arm.", "tree": {"sha": "8386daaf8bbb31035c7016924bc81ed680e5e1c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8386daaf8bbb31035c7016924bc81ed680e5e1c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c39992021477740673a5b4982014678743c7fdf", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c39992021477740673a5b4982014678743c7fdf", "html_url": "https://github.com/rust-lang/rust/commit/9c39992021477740673a5b4982014678743c7fdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c39992021477740673a5b4982014678743c7fdf/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d14470be4194656e2f71120f232f9349e896711", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d14470be4194656e2f71120f232f9349e896711", "html_url": "https://github.com/rust-lang/rust/commit/3d14470be4194656e2f71120f232f9349e896711"}], "stats": {"total": 52, "additions": 46, "deletions": 6}, "files": [{"sha": "6ee5420664d8e1c819efa0bfe8a000519b6a6a0d", "filename": "mk/platform.mk", "status": "modified", "additions": 31, "deletions": 5, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/9c39992021477740673a5b4982014678743c7fdf/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9c39992021477740673a5b4982014678743c7fdf/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=9c39992021477740673a5b4982014678743c7fdf", "patch": "@@ -241,7 +241,7 @@ CFG_RUN_TARG_i686-apple-darwin=$(call CFG_RUN_i686-apple-darwin,,$(2))\n # arm-linux-androideabi configuration\n CC_arm-linux-androideabi=$(CFG_ANDROID_CROSS_PATH)/bin/arm-linux-androideabi-gcc\n CXX_arm-linux-androideabi=$(CFG_ANDROID_CROSS_PATH)/bin/arm-linux-androideabi-g++\n-CPP_arm-linux-androideabi=$(CFG_ANDROID_CROSS_PATH)/bin/arm-linux-androideabi-gcc\n+CPP_arm-linux-androideabi=$(CFG_ANDROID_CROSS_PATH)/bin/arm-linux-androideabi-gcc -E\n AR_arm-linux-androideabi=$(CFG_ANDROID_CROSS_PATH)/bin/arm-linux-androideabi-ar\n CFG_LIB_NAME_arm-linux-androideabi=lib$(1).so\n CFG_LIB_GLOB_arm-linux-androideabi=lib$(1)-*.so\n@@ -272,7 +272,7 @@ AR_arm-unknown-linux-gnueabihf=arm-linux-gnueabihf-ar\n CFG_LIB_NAME_arm-unknown-linux-gnueabihf=lib$(1).so\n CFG_LIB_GLOB_arm-unknown-linux-gnueabihf=lib$(1)-*.so\n CFG_LIB_DSYM_GLOB_arm-unknown-linux-gnueabihf=lib$(1)-*.dylib.dSYM\n-CFG_GCCISH_CFLAGS_arm-unknown-linux-gnueabihf := -Wall -g -fPIC\n+CFG_GCCISH_CFLAGS_arm-unknown-linux-gnueabihf := -Wall -g -fPIC -D__arm__\n CFG_GCCISH_CXXFLAGS_arm-unknown-linux-gnueabihf := -fno-rtti\n CFG_GCCISH_LINK_FLAGS_arm-unknown-linux-gnueabihf := -shared -fPIC -g\n CFG_GCCISH_DEF_FLAG_arm-unknown-linux-gnueabihf := -Wl,--export-dynamic,--dynamic-list=\n@@ -290,6 +290,32 @@ CFG_RUN_arm-unknown-linux-gnueabihf=\n CFG_RUN_TARG_arm-unknown-linux-gnueabihf=\n RUSTC_FLAGS_arm-unknown-linux-gnueabihf := --linker=$(CC_arm-unknown-linux-gnueabihf)\n \n+# arm-unknown-linux-gnueabi configuration\n+CC_arm-unknown-linux-gnueabi=arm-linux-gnueabi-gcc\n+CXX_arm-unknown-linux-gnueabi=arm-linux-gnueabi-g++\n+CPP_arm-unknown-linux-gnueabi=arm-linux-gnueabi-gcc -E\n+AR_arm-unknown-linux-gnueabi=arm-linux-gnueabi-ar\n+CFG_LIB_NAME_arm-unknown-linux-gnueabi=lib$(1).so\n+CFG_LIB_GLOB_arm-unknown-linux-gnueabi=lib$(1)-*.so\n+CFG_LIB_DSYM_GLOB_arm-unknown-linux-gnueabi=lib$(1)-*.dylib.dSYM\n+CFG_GCCISH_CFLAGS_arm-unknown-linux-gnueabi := -Wall -g -fPIC -D__arm__\n+CFG_GCCISH_CXXFLAGS_arm-unknown-linux-gnueabi := -fno-rtti\n+CFG_GCCISH_LINK_FLAGS_arm-unknown-linux-gnueabi := -shared -fPIC -g\n+CFG_GCCISH_DEF_FLAG_arm-unknown-linux-gnueabi := -Wl,--export-dynamic,--dynamic-list=\n+CFG_GCCISH_PRE_LIB_FLAGS_arm-unknown-linux-gnueabi := -Wl,-whole-archive\n+CFG_GCCISH_POST_LIB_FLAGS_arm-unknown-linux-gnueabi := -Wl,-no-whole-archive\n+CFG_DEF_SUFFIX_arm-unknown-linux-gnueabi := .linux.def\n+CFG_INSTALL_NAME_ar,-unknown-linux-gnueabi =\n+CFG_LIBUV_LINK_FLAGS_arm-unknown-linux-gnueabi =\n+CFG_EXE_SUFFIX_arm-unknown-linux-gnueabi :=\n+CFG_WINDOWSY_arm-unknown-linux-gnueabi :=\n+CFG_UNIXY_arm-unknown-linux-gnueabi := 1\n+CFG_PATH_MUNGE_arm-unknown-linux-gnueabi := true\n+CFG_LDPATH_arm-unknown-linux-gnueabi :=\n+CFG_RUN_arm-unknown-linux-gnueabi=\n+CFG_RUN_TARG_arm-unknown-linux-gnueabi=\n+RUSTC_FLAGS_arm-unknown-linux-gnueabi := --linker=$(CC_arm-unknown-linux-gnueabi)\n+\n # mips-unknown-linux-gnu configuration\n CC_mips-unknown-linux-gnu=mips-linux-gnu-gcc\n CXX_mips-unknown-linux-gnu=mips-linux-gnu-g++\n@@ -450,7 +476,7 @@ define CFG_MAKE_TOOLCHAIN\n         $$(CFG_GCCISH_DEF_FLAG_$(1))$$(3) $$(2)        \\\n         $$(call CFG_INSTALL_NAME_$(1),$$(4))\n \n-  ifneq ($(1),arm-linux-androideabi)\n+  ifneq ($(HOST_$(1)),arm)\n \n   # We're using llvm-mc as our assembler because it supports\n   # .cfi pseudo-ops on mac\n@@ -462,9 +488,9 @@ define CFG_MAKE_TOOLCHAIN\n                     -o=$$(1)\n   else\n \n-  # For the Android cross, use the Android assembler\n+  # For the ARM crosses, use the toolchain assembler\n   # XXX: We should be able to use the LLVM assembler\n-  CFG_ASSEMBLE_$(1)=$$(CPP_$(1)) $$(CFG_DEPEND_FLAGS) $$(2) -c -o $$(1)\n+  CFG_ASSEMBLE_$(1)=$$(CC_$(1)) $$(CFG_DEPEND_FLAGS) $$(2) -c -o $$(1)\n \n   endif\n "}, {"sha": "ea679d19f73b84edea738fed068e6748b38abd6d", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c39992021477740673a5b4982014678743c7fdf/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c39992021477740673a5b4982014678743c7fdf/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=9c39992021477740673a5b4982014678743c7fdf", "patch": "@@ -335,7 +335,7 @@ pub fn phase_5_run_llvm_passes(sess: Session,\n                                outputs: &OutputFilenames) {\n \n     // NB: Android hack\n-    if sess.targ_cfg.arch == abi::Arm &&\n+    if sess.targ_cfg.os == session::os_android &&\n         (sess.opts.output_type == link::output_type_object ||\n          sess.opts.output_type == link::output_type_exe) {\n         let output_type = link::output_type_assembly;"}, {"sha": "3c5c7644bebf7ec00112c794b774cf4a1e9ed3f5", "filename": "src/rt/arch/arm/record_sp.S", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9c39992021477740673a5b4982014678743c7fdf/src%2Frt%2Farch%2Farm%2Frecord_sp.S", "raw_url": "https://github.com/rust-lang/rust/raw/9c39992021477740673a5b4982014678743c7fdf/src%2Frt%2Farch%2Farm%2Frecord_sp.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farm%2Frecord_sp.S?ref=9c39992021477740673a5b4982014678743c7fdf", "patch": "@@ -14,22 +14,36 @@\n .globl get_sp\n \n record_sp_limit:\n+\t// First, try to read TLS address from coprocessor\n \tmrc p15, #0, r3, c13, c0, #3\n+\tcmp r3, #0\n+\t// Otherwise, try to read from magic address 0xFFFF0FF0\n+\tmvneq r3, #0xF000\n+\tldreq r3, [r3, #-15]\n+\n #if __ANDROID__\n \tadd r3, r3, #252\n #elif __linux__\n \tadd r3, r3, #4\n #endif\n+\n \tstr r0, [r3]\n \tmov pc, lr\n \n get_sp_limit:\n+\t// First, try to read TLS address from coprocessor\n \tmrc p15, #0, r3, c13, c0, #3\n+\tcmp r3, #0\n+\t// Otherwise, try to read from magic address 0xFFFF0FF0\n+\tmvneq r3, #0xF000\n+\tldreq r3, [r3, #-15]\n+\n #if __ANDROID__\n \tadd r3, r3, #252\n #elif __linux__\n \tadd r3, r3, #4\n #endif\n+\n \tldr r0, [r3]\n \tmov pc, lr\n "}]}