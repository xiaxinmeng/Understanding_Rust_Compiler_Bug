{"sha": "b35a5da4ea15a826908fc07d0d77ca9ef292ac78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNWE1ZGE0ZWExNWE4MjY5MDhmYzA3ZDBkNzdjYTllZjI5MmFjNzg=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-23T16:19:14Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-25T13:38:51Z"}, "message": "Remove vector support from load_scalar", "tree": {"sha": "39b5911d5ae5352e2a1d75d0f32cc36cabc5cdb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39b5911d5ae5352e2a1d75d0f32cc36cabc5cdb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b35a5da4ea15a826908fc07d0d77ca9ef292ac78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b35a5da4ea15a826908fc07d0d77ca9ef292ac78", "html_url": "https://github.com/rust-lang/rust/commit/b35a5da4ea15a826908fc07d0d77ca9ef292ac78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b35a5da4ea15a826908fc07d0d77ca9ef292ac78/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e984a32d9b8a381d0b7f192f4a915aac59f18db", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e984a32d9b8a381d0b7f192f4a915aac59f18db", "html_url": "https://github.com/rust-lang/rust/commit/5e984a32d9b8a381d0b7f192f4a915aac59f18db"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "8593af61edbcc91af8cd14cc8fe4cddb6e73b0ea", "filename": "src/value_and_place.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b35a5da4ea15a826908fc07d0d77ca9ef292ac78/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b35a5da4ea15a826908fc07d0d77ca9ef292ac78/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=b35a5da4ea15a826908fc07d0d77ca9ef292ac78", "patch": "@@ -122,14 +122,11 @@ impl<'tcx> CValue<'tcx> {\n         let layout = self.1;\n         match self.0 {\n             CValueInner::ByRef(ptr) => {\n-                let clif_ty = match layout.abi {\n-                    layout::Abi::Scalar(ref scalar) => scalar_to_clif_type(fx.tcx, scalar.clone()),\n-                    layout::Abi::Vector { ref element, count } => {\n-                        scalar_to_clif_type(fx.tcx, element.clone())\n-                            .by(u16::try_from(count).unwrap()).unwrap()\n-                    }\n+                let scalar = match layout.abi {\n+                    layout::Abi::Scalar(ref scalar) => scalar.clone(),\n                     _ => unreachable!(),\n                 };\n+                let clif_ty = scalar_to_clif_type(fx.tcx, scalar);\n                 ptr.load(fx, clif_ty, MemFlags::new())\n             }\n             CValueInner::ByVal(value) => value,"}]}