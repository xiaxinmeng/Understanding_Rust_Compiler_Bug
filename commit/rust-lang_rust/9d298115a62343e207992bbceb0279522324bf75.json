{"sha": "9d298115a62343e207992bbceb0279522324bf75", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMjk4MTE1YTYyMzQzZTIwNzk5MmJiY2ViMDI3OTUyMjMyNGJmNzU=", "commit": {"author": {"name": "Matt Hooper", "email": "matthewjhooper94@gmail.com", "date": "2020-03-24T19:31:02Z"}, "committer": {"name": "Matt Hooper", "email": "matthewjhooper94@gmail.com", "date": "2020-03-24T22:22:41Z"}, "message": "Fmt corrections", "tree": {"sha": "3def364d8279d47f3ff73a2b3295cc457dcf6a25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3def364d8279d47f3ff73a2b3295cc457dcf6a25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d298115a62343e207992bbceb0279522324bf75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d298115a62343e207992bbceb0279522324bf75", "html_url": "https://github.com/rust-lang/rust/commit/9d298115a62343e207992bbceb0279522324bf75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d298115a62343e207992bbceb0279522324bf75/comments", "author": {"login": "M-J-Hooper", "id": 13765376, "node_id": "MDQ6VXNlcjEzNzY1Mzc2", "avatar_url": "https://avatars.githubusercontent.com/u/13765376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M-J-Hooper", "html_url": "https://github.com/M-J-Hooper", "followers_url": "https://api.github.com/users/M-J-Hooper/followers", "following_url": "https://api.github.com/users/M-J-Hooper/following{/other_user}", "gists_url": "https://api.github.com/users/M-J-Hooper/gists{/gist_id}", "starred_url": "https://api.github.com/users/M-J-Hooper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M-J-Hooper/subscriptions", "organizations_url": "https://api.github.com/users/M-J-Hooper/orgs", "repos_url": "https://api.github.com/users/M-J-Hooper/repos", "events_url": "https://api.github.com/users/M-J-Hooper/events{/privacy}", "received_events_url": "https://api.github.com/users/M-J-Hooper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "M-J-Hooper", "id": 13765376, "node_id": "MDQ6VXNlcjEzNzY1Mzc2", "avatar_url": "https://avatars.githubusercontent.com/u/13765376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M-J-Hooper", "html_url": "https://github.com/M-J-Hooper", "followers_url": "https://api.github.com/users/M-J-Hooper/followers", "following_url": "https://api.github.com/users/M-J-Hooper/following{/other_user}", "gists_url": "https://api.github.com/users/M-J-Hooper/gists{/gist_id}", "starred_url": "https://api.github.com/users/M-J-Hooper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M-J-Hooper/subscriptions", "organizations_url": "https://api.github.com/users/M-J-Hooper/orgs", "repos_url": "https://api.github.com/users/M-J-Hooper/repos", "events_url": "https://api.github.com/users/M-J-Hooper/events{/privacy}", "received_events_url": "https://api.github.com/users/M-J-Hooper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b70ce559b8d3102c3fed3ecef8edef3038a5ceed", "url": "https://api.github.com/repos/rust-lang/rust/commits/b70ce559b8d3102c3fed3ecef8edef3038a5ceed", "html_url": "https://github.com/rust-lang/rust/commit/b70ce559b8d3102c3fed3ecef8edef3038a5ceed"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "07aab45eea74533469befdf1ff3adc33b9a9d7fa", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9d298115a62343e207992bbceb0279522324bf75/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d298115a62343e207992bbceb0279522324bf75/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=9d298115a62343e207992bbceb0279522324bf75", "patch": "@@ -5,7 +5,7 @@ use ra_ide_db::RootDatabase;\n use ra_prof::profile;\n use ra_syntax::{\n     ast::{self, ArgListOwner, AstNode, TypeAscriptionOwner},\n-    match_ast, SmolStr, TextRange, NodeOrToken, SyntaxKind, Direction\n+    match_ast, Direction, NodeOrToken, SmolStr, SyntaxKind, TextRange,\n };\n \n use crate::{FileId, FunctionSignature};\n@@ -20,12 +20,7 @@ pub struct InlayHintsOptions {\n \n impl Default for InlayHintsOptions {\n     fn default() -> Self {\n-        Self { \n-            type_hints: true, \n-            parameter_hints: true, \n-            chaining_hints: true,\n-            max_length: None \n-        }\n+        Self { type_hints: true, parameter_hints: true, chaining_hints: true, max_length: None }\n     }\n }\n \n@@ -86,7 +81,8 @@ fn get_chaining_hints(\n         return None;\n     }\n \n-    let mut tokens = expr.syntax()\n+    let mut tokens = expr\n+        .syntax()\n         .siblings_with_tokens(Direction::Next)\n         .filter_map(NodeOrToken::into_token)\n         .filter(|t| match t.kind() {\n@@ -99,7 +95,7 @@ fn get_chaining_hints(\n     // Ignoring extra whitespace and comments\n     let next = tokens.next()?.kind();\n     let next_next = tokens.next()?.kind();\n-    if next == SyntaxKind::WHITESPACE && next_next == SyntaxKind::DOT { \n+    if next == SyntaxKind::WHITESPACE && next_next == SyntaxKind::DOT {\n         acc.push(InlayHint {\n             range: expr.syntax().text_range(),\n             kind: InlayKind::ChainingHint,\n@@ -1190,11 +1186,11 @@ fn main() {\n     fn generic_chaining_hints() {\n         let (analysis, file_id) = single_file(\n             r#\"\n-            struct A<T>(T); \n+            struct A<T>(T);\n             struct B<T>(T);\n             struct C<T>(T);\n             struct X<T,R>(T, R);\n-            \n+\n             impl<T> A<T> {\n                 fn new(t: T) -> Self { A(t) }\n                 fn into_b(self) -> B<T> { B(self.0) }\n@@ -1211,12 +1207,12 @@ fn main() {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsOptions{ parameter_hints: false, type_hints: false, chaining_hints: true, max_length: None}).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [416; 465),\n+                range: [403; 452),\n                 kind: ChainingHint,\n                 label: \"B<X<i32, bool>>\",\n             },\n             InlayHint {\n-                range: [416; 435),\n+                range: [403; 422),\n                 kind: ChainingHint,\n                 label: \"A<X<i32, bool>>\",\n             },"}]}