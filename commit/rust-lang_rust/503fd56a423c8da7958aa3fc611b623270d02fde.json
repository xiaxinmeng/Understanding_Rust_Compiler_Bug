{"sha": "503fd56a423c8da7958aa3fc611b623270d02fde", "node_id": "C_kwDOAAsO6NoAKDUwM2ZkNTZhNDIzYzhkYTc5NThhYTNmYzYxMWI2MjMyNzBkMDJmZGU", "commit": {"author": {"name": "timvisee", "email": "tim@visee.me", "date": "2023-04-17T18:25:42Z"}, "committer": {"name": "timvisee", "email": "tim@visee.me", "date": "2023-04-17T18:31:25Z"}, "message": "Suggest applicable expression for manual slice size calculation lint", "tree": {"sha": "77e12436c90ce6246c27c19e90cc0e1ece2ad198", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77e12436c90ce6246c27c19e90cc0e1ece2ad198"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/503fd56a423c8da7958aa3fc611b623270d02fde", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEenLwpVXnt3qRAcU+uNtyC8OD4XIFAmQ9kH4ACgkQuNtyC8OD\n4XLiEQ/+Jv3CkqeAMeLNmBgad6hUR6OMwq06QgNLpPkUx4U1p+YtavytcOHgaza6\n49fiEQ8fqYTvdBmK9Msee+wQ75WVrMarLQTyMOgvTLA8rRjp9yS3fc84O5XsDHNB\nxrZfaQzeDPSio/qpDu3YbHaOUxM7yAkoLGryNo1G4bg02sCv4d1TyHX9j/CNTdD0\nCWDBp0ljy8TcHRaE1C1hTjJSxWM+jG0YqOQlrjit11Ak1JbKlzS9XtuOTxDMTJHY\nQID+x8KkzMTSPM0+UeGGQbUP1ulHW9s6qvgKedx592aZ3dEzKpk+bUMyvddIfGBb\nh/KAnXr+eMwv/Gd+1gHBFQzESaiTsgtarMpNT4h9mP6kg6ob1knTHb6oH2utHRmH\nraiibBL+5zxDHdc8PJsf9nBFERxPbaET41XC+GuRj1GoUwoG4BQPH7pKkqEaowCR\n0ZAY5Y+O4Gy3MzPZLDi1GFy01JCOmwdC1195J3VYWfW0rmX5WZYtRmGbKDGyahZq\nf7lNZ3/8Wte03Ysq3VX96w2T0S8dLk9zK7pvV44fZU4bbJEfysC/CCsjN7/twFIE\nIdawDmdTqs8ZJq+oyBMsPufDQ+ans1PjiDWuEhwAN6DeVPoM30LFMUOtI4dWw7nn\nlmmb+0tF1Ir4h7eIc/5JiBdwRUSgFDei6s2pV8pEQ4DoOJIDhgo=\n=2ZMq\n-----END PGP SIGNATURE-----", "payload": "tree 77e12436c90ce6246c27c19e90cc0e1ece2ad198\nparent e57deaace54648bf4e35bf121f23f92df4e6e0c6\nauthor timvisee <tim@visee.me> 1681755942 +0200\ncommitter timvisee <tim@visee.me> 1681756285 +0200\n\nSuggest applicable expression for manual slice size calculation lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/503fd56a423c8da7958aa3fc611b623270d02fde", "html_url": "https://github.com/rust-lang/rust/commit/503fd56a423c8da7958aa3fc611b623270d02fde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/503fd56a423c8da7958aa3fc611b623270d02fde/comments", "author": {"login": "timvisee", "id": 856222, "node_id": "MDQ6VXNlcjg1NjIyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/856222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timvisee", "html_url": "https://github.com/timvisee", "followers_url": "https://api.github.com/users/timvisee/followers", "following_url": "https://api.github.com/users/timvisee/following{/other_user}", "gists_url": "https://api.github.com/users/timvisee/gists{/gist_id}", "starred_url": "https://api.github.com/users/timvisee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timvisee/subscriptions", "organizations_url": "https://api.github.com/users/timvisee/orgs", "repos_url": "https://api.github.com/users/timvisee/repos", "events_url": "https://api.github.com/users/timvisee/events{/privacy}", "received_events_url": "https://api.github.com/users/timvisee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "timvisee", "id": 856222, "node_id": "MDQ6VXNlcjg1NjIyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/856222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timvisee", "html_url": "https://github.com/timvisee", "followers_url": "https://api.github.com/users/timvisee/followers", "following_url": "https://api.github.com/users/timvisee/following{/other_user}", "gists_url": "https://api.github.com/users/timvisee/gists{/gist_id}", "starred_url": "https://api.github.com/users/timvisee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timvisee/subscriptions", "organizations_url": "https://api.github.com/users/timvisee/orgs", "repos_url": "https://api.github.com/users/timvisee/repos", "events_url": "https://api.github.com/users/timvisee/events{/privacy}", "received_events_url": "https://api.github.com/users/timvisee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e57deaace54648bf4e35bf121f23f92df4e6e0c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e57deaace54648bf4e35bf121f23f92df4e6e0c6", "html_url": "https://github.com/rust-lang/rust/commit/e57deaace54648bf4e35bf121f23f92df4e6e0c6"}], "stats": {"total": 45, "additions": 21, "deletions": 24}, "files": [{"sha": "cef5b8361a4de2d29c60b34bd5e892ba319bf3f9", "filename": "clippy_lints/src/manual_slice_size_calculation.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/503fd56a423c8da7958aa3fc611b623270d02fde/clippy_lints%2Fsrc%2Fmanual_slice_size_calculation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/503fd56a423c8da7958aa3fc611b623270d02fde/clippy_lints%2Fsrc%2Fmanual_slice_size_calculation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_slice_size_calculation.rs?ref=503fd56a423c8da7958aa3fc611b623270d02fde", "patch": "@@ -1,5 +1,7 @@\n-use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::source::snippet_with_context;\n use clippy_utils::{expr_or_init, in_constant};\n+use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty;\n@@ -42,15 +44,21 @@ impl<'tcx> LateLintPass<'tcx> for ManualSliceSizeCalculation {\n         if !in_constant(cx, expr.hir_id)\n             && let ExprKind::Binary(ref op, left, right) = expr.kind\n             && BinOpKind::Mul == op.node\n-            && let Some(_receiver) = simplify(cx, left, right)\n+            && let Some(receiver) = simplify(cx, left, right)\n         {\n-            span_lint_and_help(\n+            let ctxt = expr.span.ctxt();\n+            let mut app = Applicability::MachineApplicable;\n+            let val_name = snippet_with_context(cx, receiver.span, ctxt, \"slice\", &mut app).0;\n+\n+            span_lint_and_sugg(\n                 cx,\n                 MANUAL_SLICE_SIZE_CALCULATION,\n-                expr.span,\n-                \"manual slice size calculation\",\n-                None,\n-                \"consider using std::mem::size_of_val instead\");\n+                    expr.span,\n+                    \"manual slice size calculation\",\n+                    \"try\",\n+                    format!(\"std::mem::size_of_val({val_name})\"),\n+                    Applicability::MachineApplicable,\n+                );\n         }\n     }\n }"}, {"sha": "b88f523ddcfeab7751fcace01a5b745a259f8ef4", "filename": "tests/ui/manual_slice_size_calculation.stderr", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/503fd56a423c8da7958aa3fc611b623270d02fde/tests%2Fui%2Fmanual_slice_size_calculation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/503fd56a423c8da7958aa3fc611b623270d02fde/tests%2Fui%2Fmanual_slice_size_calculation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_slice_size_calculation.stderr?ref=503fd56a423c8da7958aa3fc611b623270d02fde", "patch": "@@ -2,50 +2,39 @@ error: manual slice size calculation\n   --> $DIR/manual_slice_size_calculation.rs:11:13\n    |\n LL |     let _ = s_i32.len() * size_of::<i32>(); // WARNING\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::mem::size_of_val(s_i32)`\n    |\n-   = help: consider using std::mem::size_of_val instead\n    = note: `-D clippy::manual-slice-size-calculation` implied by `-D warnings`\n \n error: manual slice size calculation\n   --> $DIR/manual_slice_size_calculation.rs:12:13\n    |\n LL |     let _ = size_of::<i32>() * s_i32.len(); // WARNING\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using std::mem::size_of_val instead\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::mem::size_of_val(s_i32)`\n \n error: manual slice size calculation\n   --> $DIR/manual_slice_size_calculation.rs:13:13\n    |\n LL |     let _ = size_of::<i32>() * s_i32.len() * 5; // WARNING\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using std::mem::size_of_val instead\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::mem::size_of_val(s_i32)`\n \n error: manual slice size calculation\n   --> $DIR/manual_slice_size_calculation.rs:17:13\n    |\n LL |     let _ = len * size_of::<i32>(); // WARNING\n-   |             ^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using std::mem::size_of_val instead\n+   |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::mem::size_of_val(s_i32)`\n \n error: manual slice size calculation\n   --> $DIR/manual_slice_size_calculation.rs:18:13\n    |\n LL |     let _ = s_i32.len() * size; // WARNING\n-   |             ^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider using std::mem::size_of_val instead\n+   |             ^^^^^^^^^^^^^^^^^^ help: try: `std::mem::size_of_val(s_i32)`\n \n error: manual slice size calculation\n   --> $DIR/manual_slice_size_calculation.rs:19:13\n    |\n LL |     let _ = len * size; // WARNING\n-   |             ^^^^^^^^^^\n-   |\n-   = help: consider using std::mem::size_of_val instead\n+   |             ^^^^^^^^^^ help: try: `std::mem::size_of_val(s_i32)`\n \n error: aborting due to 6 previous errors\n "}]}