{"sha": "f9d65b6356abfc0503046232776cf6fdc43fb578", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZDY1YjYzNTZhYmZjMDUwMzA0NjIzMjc3NmNmNmZkYzQzZmI1Nzg=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-01-14T15:44:10Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-01-29T07:19:05Z"}, "message": "Reorganize conditionals: Run faster checks first", "tree": {"sha": "3a30b10f9ad4cf5826d64a686598c7767a8dc97e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a30b10f9ad4cf5826d64a686598c7767a8dc97e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9d65b6356abfc0503046232776cf6fdc43fb578", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlxP/mkACgkQtvoGpuDi\nZltdoQ/+LlKRp8APkhyJ/5qzU4Z0WiddI+02p5rxrkLWYOiIuNcsb/pzDcGQbz+T\ntovI5Ykk1BJKk06FbPE8yHSgIHomr6C5SBDXW5ymSyUhV6YXLIXcNDtfosH+yhOd\n/QV+Csn6WQuANRWqlyOWzVTQ2x+mjUEVGGphfm3T2rSWqdSJM4OY+dPlvGzLi5m/\nCT2pD4CYw5Sqn6q7goywSlIEGE6M6M52MJLvQ7Asl57HQtVgkF9VldyCR/adRo60\nrpMGe7iZkVzdxgUuiEcuBMU7NsPXOssbZ04EAkOGOsgzgr92qB/MPNHYmZf8kV4V\nAN62bavC0U3o5xx55wPi6vYmV80wAkE9rzleaHlcgtbcIvgVwt7VKbJIPuDXjF0X\ngquesJ/PTt4bzGKY7kPMxFbVRT77hUeZMmLKGrVITKPAgKKjy/NkPqi2P3pXdZvK\nr+C6YIxcoGFm0n62VDqJeRxwmcjeBXzwFpxMpC0JCebPVYx2tWGid33we7+qXuvU\n/6aWhc82xJxL5i5uzFqRX0vKhSX2WGV3MDixfql+A2e00blImOMQcWqy9dSJ1/69\na+8fCEgHfMCd1gBafOazs5e707BjEnD+qwS/LWFmPK5BjwDfhVcL5TQ/IjkOXcwo\nS2w1EE5ALIVYjcDY74B4t6Qzv89SZCvNJlmhPwuRc1QLMEH6kaI=\n=D4cz\n-----END PGP SIGNATURE-----", "payload": "tree 3a30b10f9ad4cf5826d64a686598c7767a8dc97e\nparent 68cc4df551ea289e542910226cd1429ff2310dfa\nauthor Philipp Hansch <dev@phansch.net> 1547480650 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1548746345 +0100\n\nReorganize conditionals: Run faster checks first\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9d65b6356abfc0503046232776cf6fdc43fb578", "html_url": "https://github.com/rust-lang/rust/commit/f9d65b6356abfc0503046232776cf6fdc43fb578", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9d65b6356abfc0503046232776cf6fdc43fb578/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68cc4df551ea289e542910226cd1429ff2310dfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/68cc4df551ea289e542910226cd1429ff2310dfa", "html_url": "https://github.com/rust-lang/rust/commit/68cc4df551ea289e542910226cd1429ff2310dfa"}], "stats": {"total": 58, "additions": 39, "deletions": 19}, "files": [{"sha": "3e5c81484d542eb07b37a821dfb085c9240e3ec0", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 23, "deletions": 17, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f9d65b6356abfc0503046232776cf6fdc43fb578/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9d65b6356abfc0503046232776cf6fdc43fb578/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=f9d65b6356abfc0503046232776cf6fdc43fb578", "patch": "@@ -82,26 +82,32 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingConstForFn {\n         span: Span,\n         node_id: NodeId\n     ) {\n+        // Perform some preliminary checks that rule out constness on the Clippy side. This way we\n+        // can skip the actual const check and return early.\n+        match kind {\n+            FnKind::ItemFn(name, _generics, header, _vis, attrs) => {\n+                if !can_be_const_fn(&name.as_str(), header, attrs) {\n+                    return;\n+                }\n+            },\n+            FnKind::Method(ident, sig, _vis, attrs) => {\n+                let header = sig.header;\n+                let name = ident.name.as_str();\n+                if !can_be_const_fn(&name, header, attrs) {\n+                    return;\n+                }\n+            },\n+            _ => return\n+        }\n+\n         let def_id = cx.tcx.hir().local_def_id(node_id);\n         let mir = cx.tcx.optimized_mir(def_id);\n-        if let Err((span, err) = is_min_const_fn(cx.tcx, def_id, &mir) {\n-            cx.tcx.sess.span_err(span, &err);\n-        } else {\n-            match kind {\n-                FnKind::ItemFn(name, _generics, header, _vis, attrs) => {\n-                    if !can_be_const_fn(&name.as_str(), header, attrs) {\n-                        return;\n-                    }\n-                },\n-                FnKind::Method(ident, sig, _vis, attrs) => {\n-                    let header = sig.header;\n-                    let name = ident.name.as_str();\n-                    if !can_be_const_fn(&name, header, attrs) {\n-                        return;\n-                    }\n-                },\n-                _ => return\n+\n+        if let Err((span, err)) = is_min_const_fn(cx.tcx, def_id, &mir) {\n+            if cx.tcx.is_min_const_fn(def_id) {\n+                cx.tcx.sess.span_err(span, &err);\n             }\n+        } else {\n             span_lint(cx, MISSING_CONST_FOR_FN, span, \"this could be a const_fn\");\n         }\n     }"}, {"sha": "cfaf01cf3c11950e90473c1a4027544a4d04edd8", "filename": "tests/ui/missing_const_for_fn/cant_be_const.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f9d65b6356abfc0503046232776cf6fdc43fb578/tests%2Fui%2Fmissing_const_for_fn%2Fcant_be_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9d65b6356abfc0503046232776cf6fdc43fb578/tests%2Fui%2Fmissing_const_for_fn%2Fcant_be_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_const_for_fn%2Fcant_be_const.rs?ref=f9d65b6356abfc0503046232776cf6fdc43fb578", "patch": "@@ -41,8 +41,13 @@ fn main() {\n \n trait Foo {\n     // This should not be suggested to be made const\n-    // (rustc restriction)\n+    // (rustc doesn't allow const trait methods)\n     fn f() -> u32;\n+\n+    // This should not be suggested to be made const either\n+    fn g() -> u32 {\n+        33\n+    }\n }\n \n // Don't lint custom entrypoints either"}, {"sha": "593f9cf810ac665b1d9e5284d0b59174d8cc5091", "filename": "tests/ui/missing_const_for_fn/could_be_const.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f9d65b6356abfc0503046232776cf6fdc43fb578/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f9d65b6356abfc0503046232776cf6fdc43fb578/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.stderr?ref=f9d65b6356abfc0503046232776cf6fdc43fb578", "patch": "@@ -16,6 +16,15 @@ error: this could be a const_fn\n LL | fn one() -> i32 { 1 }\n    | ^^^^^^^^^^^^^^^^^^^^^\n \n+error: this could be a const_fn\n+  --> $DIR/could_be_const.rs:23:1\n+   |\n+LL | / fn two() -> i32 {\n+LL | |     let abc = 2;\n+LL | |     abc\n+LL | | }\n+   | |_^\n+\n error: this could be a const_fn\n   --> $DIR/could_be_const.rs:30:1\n    |\n@@ -38,5 +47,5 @@ LL | |     t\n LL | | }\n    | |_^\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 6 previous errors\n "}]}