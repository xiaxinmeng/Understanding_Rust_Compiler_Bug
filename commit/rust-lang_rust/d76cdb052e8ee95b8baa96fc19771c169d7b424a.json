{"sha": "d76cdb052e8ee95b8baa96fc19771c169d7b424a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NmNkYjA1MmU4ZWU5NWI4YmFhOTZmYzE5NzcxYzE2OWQ3YjQyNGE=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-11-10T08:29:27Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-11-10T08:51:01Z"}, "message": "const param macro test", "tree": {"sha": "fee03b864115bada2d491cef87f669574bf840ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fee03b864115bada2d491cef87f669574bf840ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d76cdb052e8ee95b8baa96fc19771c169d7b424a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d76cdb052e8ee95b8baa96fc19771c169d7b424a", "html_url": "https://github.com/rust-lang/rust/commit/d76cdb052e8ee95b8baa96fc19771c169d7b424a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d76cdb052e8ee95b8baa96fc19771c169d7b424a/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25f6938da459a57b43bdf16ed6bdad3225b2a3ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/25f6938da459a57b43bdf16ed6bdad3225b2a3ce", "html_url": "https://github.com/rust-lang/rust/commit/25f6938da459a57b43bdf16ed6bdad3225b2a3ce"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "c8cefc36732b278cde4c5171308e8b34dd2e330b", "filename": "src/test/ui/const-generics/const-param-hygiene.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d76cdb052e8ee95b8baa96fc19771c169d7b424a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d76cdb052e8ee95b8baa96fc19771c169d7b424a/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-hygiene.rs?ref=d76cdb052e8ee95b8baa96fc19771c169d7b424a", "patch": "@@ -0,0 +1,22 @@\n+// run-pass\n+// revisions: full min\n+\n+#![cfg_attr(full, feature(const_generics))]\n+#![cfg_attr(full, allow(incomplete_features))]\n+#![cfg_attr(min, feature(min_const_generics))]\n+\n+macro_rules! bar {\n+    ($($t:tt)*) => { impl<const N: usize> $($t)* };\n+}\n+\n+macro_rules! baz {\n+    ($t:tt) => { fn test<const M: usize>(&self) -> usize { $t } };\n+}\n+\n+struct Foo<const N: usize>;\n+\n+bar!(Foo<N> { baz!{ M } });\n+\n+fn main() {\n+    assert_eq!(Foo::<7>.test::<3>(), 3);\n+}"}]}