{"sha": "8366780164d062c6cb69d0243e9fcf85a37d548f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNjY3ODAxNjRkMDYyYzZjYjY5ZDAyNDNlOWZjZjg1YTM3ZDU0OGY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-16T21:22:07Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-05-16T21:22:07Z"}, "message": "Rollup merge of #50170 - burtonageo:more_cow_from, r=alexcrichton\n\nImplement From for more types on Cow\n\nThis is basically https://github.com/rust-lang/rust/pull/48191, except that it should be implemented in a way that doesn't break third party crates.", "tree": {"sha": "4aac4c7cc81b3a3fc94aa9cc69a47c3b52202bcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4aac4c7cc81b3a3fc94aa9cc69a47c3b52202bcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8366780164d062c6cb69d0243e9fcf85a37d548f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlr8oQAACgkQ/vbIBR0O\nATwPIw//aXi64RqZpQ36YIZubRGkQ+e0jcYn1BE6mC8NqkTp5MtXEDU5BZ5D0PJv\n7KL5cJP8MXRvAy8tdCIgAc7Sxbd/qYylGnLpvGEh3zttS5o9ZUEN0h0B9DHWAfQk\nXioBDcfkwaq7eU2ZANVS8dCMf6jEPh1IjeaajDwPheRYaub4CH65lCz+l7vS5P8V\nXoJJ9fmYOjIkVgkizCjCSLjOkcYcHCAhM6zABSZWb/BeaO9Spho2UM8yfUOg9/hc\ncdvX2Nxt5TFOOC13oiXQA07HBocKTJkPvxbiX06cXPkMdVfh/L/qhuG9dlz04dUC\nH5MBSYyu4AZwAXzsC3Hx8tAWJBxy7zh8f5MCrwP8JAnxWJvrJSG3FeqBwYTBPlis\nIVmg+0n6MMw4VVPhDzjhMMcdsxdFx8yveYnvYzQAKUmAa+5g3sYGI9SFkBp+Xh34\nTNED61Re82ZpAIME6muvpKieUOy8J7LRkC4TdoXzX/Dk+HsN5ocaMUdW4WlmjHhj\nfYrSIsmTgiQaxXTPl+Gbng/y293Ny9kUwng3nt1Mm98sUthKWTUaSW9XwSSnhRuq\nJ/GUGonu7U9+4Dq0R7jSTlet/5+bTpKYOkaAPF4lNwWiHNcTAUrlTKxTWDuRnSrQ\nxIbqOF8Jwjr+xA0lgQpfk6NZL2ASGUALo7KuS/u+A0XS6qChSL0=\n=nW9l\n-----END PGP SIGNATURE-----", "payload": "tree 4aac4c7cc81b3a3fc94aa9cc69a47c3b52202bcd\nparent 02aedec72264b76dce679570ea64a799a82ad3ce\nparent 7c0f664f153f4f41f820723c6b2c758ad5286531\nauthor kennytm <kennytm@gmail.com> 1526505727 +0800\ncommitter kennytm <kennytm@gmail.com> 1526505727 +0800\n\nRollup merge of #50170 - burtonageo:more_cow_from, r=alexcrichton\n\nImplement From for more types on Cow\n\nThis is basically https://github.com/rust-lang/rust/pull/48191, except that it should be implemented in a way that doesn't break third party crates.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8366780164d062c6cb69d0243e9fcf85a37d548f", "html_url": "https://github.com/rust-lang/rust/commit/8366780164d062c6cb69d0243e9fcf85a37d548f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8366780164d062c6cb69d0243e9fcf85a37d548f/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02aedec72264b76dce679570ea64a799a82ad3ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/02aedec72264b76dce679570ea64a799a82ad3ce", "html_url": "https://github.com/rust-lang/rust/commit/02aedec72264b76dce679570ea64a799a82ad3ce"}, {"sha": "7c0f664f153f4f41f820723c6b2c758ad5286531", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c0f664f153f4f41f820723c6b2c758ad5286531", "html_url": "https://github.com/rust-lang/rust/commit/7c0f664f153f4f41f820723c6b2c758ad5286531"}], "stats": {"total": 95, "additions": 95, "deletions": 0}, "files": [{"sha": "449e3152d8f13ad06c7a9c6bf82e393525ceda3f", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8366780164d062c6cb69d0243e9fcf85a37d548f/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8366780164d062c6cb69d0243e9fcf85a37d548f/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=8366780164d062c6cb69d0243e9fcf85a37d548f", "patch": "@@ -2240,6 +2240,14 @@ impl<'a> From<String> for Cow<'a, str> {\n     }\n }\n \n+#[stable(feature = \"cow_from_string_ref\", since = \"1.28.0\")]\n+impl<'a> From<&'a String> for Cow<'a, str> {\n+    #[inline]\n+    fn from(s: &'a String) -> Cow<'a, str> {\n+        Cow::Borrowed(s.as_str())\n+    }\n+}\n+\n #[stable(feature = \"cow_str_from_iter\", since = \"1.12.0\")]\n impl<'a> FromIterator<char> for Cow<'a, str> {\n     fn from_iter<I: IntoIterator<Item = char>>(it: I) -> Cow<'a, str> {"}, {"sha": "d30f8cd0fca20fb7f67cd2950a2a28f063d8d668", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8366780164d062c6cb69d0243e9fcf85a37d548f/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8366780164d062c6cb69d0243e9fcf85a37d548f/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=8366780164d062c6cb69d0243e9fcf85a37d548f", "patch": "@@ -2286,6 +2286,13 @@ impl<'a, T: Clone> From<Vec<T>> for Cow<'a, [T]> {\n     }\n }\n \n+#[stable(feature = \"cow_from_vec_ref\", since = \"1.28.0\")]\n+impl<'a, T: Clone> From<&'a Vec<T>> for Cow<'a, [T]> {\n+    fn from(v: &'a Vec<T>) -> Cow<'a, [T]> {\n+        Cow::Borrowed(v.as_slice())\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> FromIterator<T> for Cow<'a, [T]> where T: Clone {\n     fn from_iter<I: IntoIterator<Item = T>>(it: I) -> Cow<'a, [T]> {"}, {"sha": "6513d11dd517c436c25afe16c7def1f54d1cea0c", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/8366780164d062c6cb69d0243e9fcf85a37d548f/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8366780164d062c6cb69d0243e9fcf85a37d548f/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=8366780164d062c6cb69d0243e9fcf85a37d548f", "patch": "@@ -682,6 +682,14 @@ impl Borrow<CStr> for CString {\n     fn borrow(&self) -> &CStr { self }\n }\n \n+#[stable(feature = \"cstring_from_cow_cstr\", since = \"1.28.0\")]\n+impl<'a> From<Cow<'a, CStr>> for CString {\n+    #[inline]\n+    fn from(s: Cow<'a, CStr>) -> Self {\n+        s.into_owned()\n+    }\n+}\n+\n #[stable(feature = \"box_from_c_str\", since = \"1.17.0\")]\n impl<'a> From<&'a CStr> for Box<CStr> {\n     fn from(s: &'a CStr) -> Box<CStr> {\n@@ -706,6 +714,30 @@ impl From<CString> for Box<CStr> {\n     }\n }\n \n+#[stable(feature = \"cow_from_cstr\", since = \"1.28.0\")]\n+impl<'a> From<CString> for Cow<'a, CStr> {\n+    #[inline]\n+    fn from(s: CString) -> Cow<'a, CStr> {\n+        Cow::Owned(s)\n+    }\n+}\n+\n+#[stable(feature = \"cow_from_cstr\", since = \"1.28.0\")]\n+impl<'a> From<&'a CStr> for Cow<'a, CStr> {\n+    #[inline]\n+    fn from(s: &'a CStr) -> Cow<'a, CStr> {\n+        Cow::Borrowed(s)\n+    }\n+}\n+\n+#[stable(feature = \"cow_from_cstr\", since = \"1.28.0\")]\n+impl<'a> From<&'a CString> for Cow<'a, CStr> {\n+    #[inline]\n+    fn from(s: &'a CString) -> Cow<'a, CStr> {\n+        Cow::Borrowed(s.as_c_str())\n+    }\n+}\n+\n #[stable(feature = \"shared_from_slice2\", since = \"1.24.0\")]\n impl From<CString> for Arc<CStr> {\n     #[inline]"}, {"sha": "0a3148029d053ce1fbac909bf77dd0d77fcf3053", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/8366780164d062c6cb69d0243e9fcf85a37d548f/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8366780164d062c6cb69d0243e9fcf85a37d548f/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=8366780164d062c6cb69d0243e9fcf85a37d548f", "patch": "@@ -664,6 +664,38 @@ impl<'a> From<&'a OsStr> for Rc<OsStr> {\n     }\n }\n \n+#[stable(feature = \"cow_from_osstr\", since = \"1.28.0\")]\n+impl<'a> From<OsString> for Cow<'a, OsStr> {\n+    #[inline]\n+    fn from(s: OsString) -> Cow<'a, OsStr> {\n+        Cow::Owned(s)\n+    }\n+}\n+\n+#[stable(feature = \"cow_from_osstr\", since = \"1.28.0\")]\n+impl<'a> From<&'a OsStr> for Cow<'a, OsStr> {\n+    #[inline]\n+    fn from(s: &'a OsStr) -> Cow<'a, OsStr> {\n+        Cow::Borrowed(s)\n+    }\n+}\n+\n+#[stable(feature = \"cow_from_osstr\", since = \"1.28.0\")]\n+impl<'a> From<&'a OsString> for Cow<'a, OsStr> {\n+    #[inline]\n+    fn from(s: &'a OsString) -> Cow<'a, OsStr> {\n+        Cow::Borrowed(s.as_os_str())\n+    }\n+}\n+\n+#[stable(feature = \"osstring_from_cow_osstr\", since = \"1.28.0\")]\n+impl<'a> From<Cow<'a, OsStr>> for OsString {\n+    #[inline]\n+    fn from(s: Cow<'a, OsStr>) -> Self {\n+        s.into_owned()\n+    }\n+}\n+\n #[stable(feature = \"box_default_extra\", since = \"1.17.0\")]\n impl Default for Box<OsStr> {\n     fn default() -> Box<OsStr> {"}, {"sha": "13f55e9261fc2acf9a8a4eb98e2da340ca5bb8d8", "filename": "src/libstd/path.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8366780164d062c6cb69d0243e9fcf85a37d548f/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8366780164d062c6cb69d0243e9fcf85a37d548f/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=8366780164d062c6cb69d0243e9fcf85a37d548f", "patch": "@@ -1504,6 +1504,22 @@ impl<'a> From<PathBuf> for Cow<'a, Path> {\n     }\n }\n \n+#[stable(feature = \"cow_from_pathbuf_ref\", since = \"1.28.0\")]\n+impl<'a> From<&'a PathBuf> for Cow<'a, Path> {\n+    #[inline]\n+    fn from(p: &'a PathBuf) -> Cow<'a, Path> {\n+        Cow::Borrowed(p.as_path())\n+    }\n+}\n+\n+#[stable(feature = \"pathbuf_from_cow_path\", since = \"1.28.0\")]\n+impl<'a> From<Cow<'a, Path>> for PathBuf {\n+    #[inline]\n+    fn from(p: Cow<'a, Path>) -> Self {\n+        p.into_owned()\n+    }\n+}\n+\n #[stable(feature = \"shared_from_slice2\", since = \"1.24.0\")]\n impl From<PathBuf> for Arc<Path> {\n     #[inline]"}]}