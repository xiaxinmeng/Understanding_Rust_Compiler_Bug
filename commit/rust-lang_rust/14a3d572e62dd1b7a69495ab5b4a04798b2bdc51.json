{"sha": "14a3d572e62dd1b7a69495ab5b4a04798b2bdc51", "node_id": "C_kwDOAAsO6NoAKDE0YTNkNTcyZTYyZGQxYjdhNjk0OTVhYjViNGEwNDc5OGIyYmRjNTE", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-11-03T18:06:25Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-11-23T20:17:47Z"}, "message": "Use `type_implements_trait`", "tree": {"sha": "6eb117bb25da5e0e276b9d866876d0ad169e1a2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6eb117bb25da5e0e276b9d866876d0ad169e1a2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14a3d572e62dd1b7a69495ab5b4a04798b2bdc51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14a3d572e62dd1b7a69495ab5b4a04798b2bdc51", "html_url": "https://github.com/rust-lang/rust/commit/14a3d572e62dd1b7a69495ab5b4a04798b2bdc51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14a3d572e62dd1b7a69495ab5b4a04798b2bdc51/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f2f59ba6f3f6960097bf29363de5211cfa6ba7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f2f59ba6f3f6960097bf29363de5211cfa6ba7a", "html_url": "https://github.com/rust-lang/rust/commit/4f2f59ba6f3f6960097bf29363de5211cfa6ba7a"}], "stats": {"total": 25, "additions": 5, "deletions": 20}, "files": [{"sha": "c445ad593ca45063cafc7717edb5036a648cfa49", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 5, "deletions": 20, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/14a3d572e62dd1b7a69495ab5b4a04798b2bdc51/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14a3d572e62dd1b7a69495ab5b4a04798b2bdc51/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=14a3d572e62dd1b7a69495ab5b4a04798b2bdc51", "patch": "@@ -715,28 +715,13 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n \n     fn suggest_cloning(&self, err: &mut Diagnostic, ty: Ty<'tcx>, span: Span) {\n         let tcx = self.infcx.tcx;\n-\n         // Try to find predicates on *generic params* that would allow copying `ty`\n         let infcx = tcx.infer_ctxt().build();\n-        let mut fulfill_cx = <dyn rustc_infer::traits::TraitEngine<'_>>::new(infcx.tcx);\n-\n-        let clone_did = infcx.tcx.lang_items().clone_trait().unwrap();\n-        let cause = ObligationCause::new(\n-            span,\n-            self.mir_hir_id(),\n-            rustc_infer::traits::ObligationCauseCode::MiscObligation,\n-        );\n-        fulfill_cx.register_bound(\n-            &infcx,\n-            self.param_env,\n-            // Erase any region vids from the type, which may not be resolved\n-            infcx.tcx.erase_regions(ty),\n-            clone_did,\n-            cause,\n-        );\n-        // Select all, including ambiguous predicates\n-        let errors = fulfill_cx.select_all_or_error(&infcx);\n-        if errors.is_empty() {\n+        let clone_did = tcx.lang_items().clone_trait().unwrap();\n+        let params = ty::List::empty();\n+        let ty = tcx.erase_regions(ty);\n+        let env = self.param_env;\n+        if infcx.type_implements_trait(clone_did, ty, params, env).must_apply_modulo_regions() {\n             err.span_suggestion_verbose(\n                 span.shrink_to_hi(),\n                 \"consider cloning the value if the performance cost is acceptable\","}]}