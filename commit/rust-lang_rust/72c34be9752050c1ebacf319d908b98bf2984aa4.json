{"sha": "72c34be9752050c1ebacf319d908b98bf2984aa4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyYzM0YmU5NzUyMDUwYzFlYmFjZjMxOWQ5MDhiOThiZjI5ODRhYTQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-13T17:57:59Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-13T17:57:59Z"}, "message": "Implement raw ptr -> int of native pointer size cast", "tree": {"sha": "1823709edeb496021d65bdcd392360fdb10bea88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1823709edeb496021d65bdcd392360fdb10bea88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72c34be9752050c1ebacf319d908b98bf2984aa4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72c34be9752050c1ebacf319d908b98bf2984aa4", "html_url": "https://github.com/rust-lang/rust/commit/72c34be9752050c1ebacf319d908b98bf2984aa4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72c34be9752050c1ebacf319d908b98bf2984aa4/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea113ec82e68164242f576c5af43a3dfc1f92c8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea113ec82e68164242f576c5af43a3dfc1f92c8b", "html_url": "https://github.com/rust-lang/rust/commit/ea113ec82e68164242f576c5af43a3dfc1f92c8b"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "09e78b47f8c9a0f441cfdfb6cd57b6069fc53e1e", "filename": "src/base.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/72c34be9752050c1ebacf319d908b98bf2984aa4/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72c34be9752050c1ebacf319d908b98bf2984aa4/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=72c34be9752050c1ebacf319d908b98bf2984aa4", "patch": "@@ -487,7 +487,8 @@ fn trans_stmt<'a, 'tcx: 'a>(\n                         | (ty::RawPtr(..), ty::Int(_))\n                         | (ty::FnPtr(..), ty::Uint(_))\n                             if to_ty.sty == fx.tcx.types.usize.sty\n-                                || to_ty.sty == fx.tcx.types.isize.sty =>\n+                                || to_ty.sty == fx.tcx.types.isize.sty\n+                                || fx.clif_type(to_ty).unwrap() == pointer_ty(fx.tcx) =>\n                         {\n                             lval.write_cvalue(fx, operand.unchecked_cast_to(dest_layout));\n                         }"}]}