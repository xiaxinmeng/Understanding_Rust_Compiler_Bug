{"sha": "cb2a656cdfb6400ac0200c661267f91fabf237e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMmE2NTZjZGZiNjQwMGFjMDIwMGM2NjEyNjdmOTFmYWJmMjM3ZTI=", "commit": {"author": {"name": "Nikolai Vazquez", "email": "nvazquez1297@gmail.com", "date": "2017-09-28T14:59:12Z"}, "committer": {"name": "Nikolai Vazquez", "email": "nvazquez1297@gmail.com", "date": "2017-09-28T14:59:12Z"}, "message": "Fix errors in Box<Path> conversions", "tree": {"sha": "0292f2e9cc0d872db8ddd74199721699b48332cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0292f2e9cc0d872db8ddd74199721699b48332cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb2a656cdfb6400ac0200c661267f91fabf237e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb2a656cdfb6400ac0200c661267f91fabf237e2", "html_url": "https://github.com/rust-lang/rust/commit/cb2a656cdfb6400ac0200c661267f91fabf237e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb2a656cdfb6400ac0200c661267f91fabf237e2/comments", "author": {"login": "nvzqz", "id": 10367662, "node_id": "MDQ6VXNlcjEwMzY3NjYy", "avatar_url": "https://avatars.githubusercontent.com/u/10367662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvzqz", "html_url": "https://github.com/nvzqz", "followers_url": "https://api.github.com/users/nvzqz/followers", "following_url": "https://api.github.com/users/nvzqz/following{/other_user}", "gists_url": "https://api.github.com/users/nvzqz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvzqz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvzqz/subscriptions", "organizations_url": "https://api.github.com/users/nvzqz/orgs", "repos_url": "https://api.github.com/users/nvzqz/repos", "events_url": "https://api.github.com/users/nvzqz/events{/privacy}", "received_events_url": "https://api.github.com/users/nvzqz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nvzqz", "id": 10367662, "node_id": "MDQ6VXNlcjEwMzY3NjYy", "avatar_url": "https://avatars.githubusercontent.com/u/10367662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvzqz", "html_url": "https://github.com/nvzqz", "followers_url": "https://api.github.com/users/nvzqz/followers", "following_url": "https://api.github.com/users/nvzqz/following{/other_user}", "gists_url": "https://api.github.com/users/nvzqz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvzqz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvzqz/subscriptions", "organizations_url": "https://api.github.com/users/nvzqz/orgs", "repos_url": "https://api.github.com/users/nvzqz/repos", "events_url": "https://api.github.com/users/nvzqz/events{/privacy}", "received_events_url": "https://api.github.com/users/nvzqz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7b4a96909e535cbd61b9357740ed22c9bbb7ea6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7b4a96909e535cbd61b9357740ed22c9bbb7ea6", "html_url": "https://github.com/rust-lang/rust/commit/c7b4a96909e535cbd61b9357740ed22c9bbb7ea6"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "294743ed2cc5414ff4879c35f03af301b7d10a01", "filename": "src/libstd/path.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cb2a656cdfb6400ac0200c661267f91fabf237e2/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb2a656cdfb6400ac0200c661267f91fabf237e2/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=cb2a656cdfb6400ac0200c661267f91fabf237e2", "patch": "@@ -1341,7 +1341,8 @@ impl PathBuf {\n #[stable(feature = \"box_from_path\", since = \"1.17.0\")]\n impl<'a> From<&'a Path> for Box<Path> {\n     fn from(path: &'a Path) -> Box<Path> {\n-        let rw = Box::into_raw(Box::from(&path.inner)) as *mut Path;\n+        let boxed: Box<OsStr> = path.inner.into();\n+        let rw = Box::into_raw(boxed) as *mut Path;\n         unsafe { Box::from_raw(rw) }\n     }\n }\n@@ -2313,7 +2314,8 @@ impl Path {\n     #[stable(feature = \"into_boxed_path\", since = \"1.20.0\")]\n     pub fn into_path_buf(self: Box<Path>) -> PathBuf {\n         let rw = Box::into_raw(self) as *mut OsStr;\n-        unsafe { Box::from_raw(rw) }\n+        let inner = unsafe { Box::from_raw(rw) };\n+        PathBuf { inner: OsString::from(inner) }\n     }\n }\n "}]}