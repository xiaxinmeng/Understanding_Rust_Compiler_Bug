{"sha": "247842b741db380fbd0e0d73f37e86f6c561ca9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0Nzg0MmI3NDFkYjM4MGZiZDBlMGQ3M2YzN2U4NmY2YzU2MWNhOWQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-24T01:41:37Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-28T16:35:22Z"}, "message": "test: Fix some tests to run with musl\n\nThere were a few test cases to fix:\n\n* Dynamic libraries are not supported with MUSL right now, so all of those\n  related test which force or require dylibs are ignored.\n* Looks like the default stack for MUSL is smaller than glibc, so a few stack\n  allocations in benchmarks were boxed up (shouldn't have a perf impact).\n* Some small linkage tweaks here and there\n* Out-of-stack detection does not currently work with MUSL", "tree": {"sha": "dcc21f170f0a25e063605a9a1c24b4a30df84fd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcc21f170f0a25e063605a9a1c24b4a30df84fd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/247842b741db380fbd0e0d73f37e86f6c561ca9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/247842b741db380fbd0e0d73f37e86f6c561ca9d", "html_url": "https://github.com/rust-lang/rust/commit/247842b741db380fbd0e0d73f37e86f6c561ca9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/247842b741db380fbd0e0d73f37e86f6c561ca9d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60f8f6bde9be62554a850c31c770357e7d3e576e", "url": "https://api.github.com/repos/rust-lang/rust/commits/60f8f6bde9be62554a850c31c770357e7d3e576e", "html_url": "https://github.com/rust-lang/rust/commit/60f8f6bde9be62554a850c31c770357e7d3e576e"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "bd6578d3b724b9baeffaab93ac7d40fa81215747", "filename": "mk/rt.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/247842b741db380fbd0e0d73f37e86f6c561ca9d/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/247842b741db380fbd0e0d73f37e86f6c561ca9d/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=247842b741db380fbd0e0d73f37e86f6c561ca9d", "patch": "@@ -113,7 +113,7 @@ $$(RT_OUTPUT_DIR_$(1))/$$(NATIVE_$(2)_$(1)): $$(OBJS_$(2)_$(1))\n \n ifeq ($$(findstring windows,$(1)),windows)\n $$(RT_OUTPUT_DIR_$(1))/lib$(2).a: $$(RT_OUTPUT_DIR_$(1))/$$(NATIVE_$(2)_$(1))\n-\t$$(Q)cp $$< $$^\n+\t$$(Q)cp $$^ $$@\n endif\n \n endef\n@@ -227,7 +227,7 @@ COMPRT_DEPS := $(wildcard \\\n               $(S)src/compiler-rt/*/*/*/*)\n endif\n \n-COMPRT_NAME_$(1) := $$(call CFG_STATIC_LIB_NAME_$(1),compiler-rt)\n+COMPRT_NAME_$(1) := libcompiler-rt.a\n COMPRT_LIB_$(1) := $$(RT_OUTPUT_DIR_$(1))/$$(COMPRT_NAME_$(1))\n COMPRT_BUILD_DIR_$(1) := $$(RT_OUTPUT_DIR_$(1))/compiler-rt\n "}, {"sha": "81a6fb8ff6debbe064207a60c21b646d9973d258", "filename": "src/test/bench/noise.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/247842b741db380fbd0e0d73f37e86f6c561ca9d/src%2Ftest%2Fbench%2Fnoise.rs", "raw_url": "https://github.com/rust-lang/rust/raw/247842b741db380fbd0e0d73f37e86f6c561ca9d/src%2Ftest%2Fbench%2Fnoise.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fnoise.rs?ref=247842b741db380fbd0e0d73f37e86f6c561ca9d", "patch": "@@ -101,8 +101,8 @@ impl Noise2DContext {\n \n fn main() {\n     let symbols = [' ', '\u2591', '\u2592', '\u2593', '\u2588', '\u2588'];\n-    let mut pixels = [0f32; 256*256];\n-    let n2d = Noise2DContext::new();\n+    let mut pixels = Box::new([0f32; 256*256]);\n+    let n2d = Box::new(Noise2DContext::new());\n \n     for _ in 0..100 {\n         for y in 0..256 {"}, {"sha": "55b2b1e2e324f600aa671bd9a98771b188ccefc4", "filename": "src/test/bench/shootout-reverse-complement.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/247842b741db380fbd0e0d73f37e86f6c561ca9d/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/247842b741db380fbd0e0d73f37e86f6c561ca9d/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs?ref=247842b741db380fbd0e0d73f37e86f6c561ca9d", "patch": "@@ -50,17 +50,17 @@ use std::ptr::copy;\n use std::thread;\n \n struct Tables {\n-    table8: [u8; 1 << 8],\n-    table16: [u16; 1 << 16]\n+    table8: Box<[u8; 1 << 8]>,\n+    table16: Box<[u16; 1 << 16]>,\n }\n \n impl Tables {\n     fn new() -> Tables {\n-        let mut table8 = [0;1 << 8];\n+        let mut table8 = Box::new([0;1 << 8]);\n         for (i, v) in table8.iter_mut().enumerate() {\n             *v = Tables::computed_cpl8(i as u8);\n         }\n-        let mut table16 = [0;1 << 16];\n+        let mut table16 = Box::new([0;1 << 16]);\n         for (i, v) in table16.iter_mut().enumerate() {\n             *v = (table8[i & 255] as u16) << 8 |\n                  table8[i >> 8]  as u16;"}, {"sha": "fc9f241af7f10279671b309896ba0b64bd0ce085", "filename": "src/test/run-pass-fulldeps/issue-13560.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/247842b741db380fbd0e0d73f37e86f6c561ca9d/src%2Ftest%2Frun-pass-fulldeps%2Fissue-13560.rs", "raw_url": "https://github.com/rust-lang/rust/raw/247842b741db380fbd0e0d73f37e86f6c561ca9d/src%2Ftest%2Frun-pass-fulldeps%2Fissue-13560.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-13560.rs?ref=247842b741db380fbd0e0d73f37e86f6c561ca9d", "patch": "@@ -12,6 +12,7 @@\n // aux-build:issue-13560-2.rs\n // aux-build:issue-13560-3.rs\n // ignore-stage1\n+// ignore-musl\n \n // Regression test for issue #13560, the test itself is all in the dependent\n // libraries. The fail which previously failed to compile is the one numbered 3."}, {"sha": "66201ff901f309ce702e706b0e312be280919d48", "filename": "src/test/run-pass/issue-12133-3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/247842b741db380fbd0e0d73f37e86f6c561ca9d/src%2Ftest%2Frun-pass%2Fissue-12133-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/247842b741db380fbd0e0d73f37e86f6c561ca9d/src%2Ftest%2Frun-pass%2Fissue-12133-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-12133-3.rs?ref=247842b741db380fbd0e0d73f37e86f6c561ca9d", "patch": "@@ -11,6 +11,7 @@\n // aux-build:issue-12133-rlib.rs\n // aux-build:issue-12133-dylib.rs\n // aux-build:issue-12133-dylib2.rs\n+// ignore-musl\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "98a7ce55540d163a46f53ec203cb1a31cef0ca40", "filename": "src/test/run-pass/linkage-visibility.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/247842b741db380fbd0e0d73f37e86f6c561ca9d/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/247842b741db380fbd0e0d73f37e86f6c561ca9d/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinkage-visibility.rs?ref=247842b741db380fbd0e0d73f37e86f6c561ca9d", "patch": "@@ -11,6 +11,7 @@\n // aux-build:linkage-visibility.rs\n // ignore-android: FIXME(#10379)\n // ignore-windows: std::dynamic_lib does not work on Windows well\n+// ignore-musl\n \n #![feature(std_misc)]\n "}, {"sha": "2c6e55b57b066a5be9c766243ec93ffff9d5b3a0", "filename": "src/test/run-pass/out-of-stack-new-thread-no-split.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/247842b741db380fbd0e0d73f37e86f6c561ca9d/src%2Ftest%2Frun-pass%2Fout-of-stack-new-thread-no-split.rs", "raw_url": "https://github.com/rust-lang/rust/raw/247842b741db380fbd0e0d73f37e86f6c561ca9d/src%2Ftest%2Frun-pass%2Fout-of-stack-new-thread-no-split.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fout-of-stack-new-thread-no-split.rs?ref=247842b741db380fbd0e0d73f37e86f6c561ca9d", "patch": "@@ -8,11 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//ignore-android\n-//ignore-freebsd\n-//ignore-ios\n-//ignore-dragonfly\n-//ignore-bitrig\n+// ignore-android\n+// ignore-freebsd\n+// ignore-ios\n+// ignore-dragonfly\n+// ignore-bitrig\n+// ignore-musl\n \n #![feature(asm)]\n "}, {"sha": "f21b787dab72f052c2bee89a6d38d4fe10b7af41", "filename": "src/test/run-pass/sepcomp-extern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/247842b741db380fbd0e0d73f37e86f6c561ca9d/src%2Ftest%2Frun-pass%2Fsepcomp-extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/247842b741db380fbd0e0d73f37e86f6c561ca9d/src%2Ftest%2Frun-pass%2Fsepcomp-extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-extern.rs?ref=247842b741db380fbd0e0d73f37e86f6c561ca9d", "patch": "@@ -14,8 +14,8 @@\n \n // Test accessing external items from multiple compilation units.\n \n+extern crate sepcomp_extern_lib;\n \n-#[link(name = \"sepcomp_extern_lib\")]\n extern {\n     #[allow(ctypes)]\n     fn foo() -> usize;"}]}