{"sha": "0bf75fbfc8812ed0c7dc827def29c9d65a438eac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiZjc1ZmJmYzg4MTJlZDBjN2RjODI3ZGVmMjljOWQ2NWE0MzhlYWM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-12-12T15:51:11Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-12-12T17:28:08Z"}, "message": "Use better symbol names for the drop glue", "tree": {"sha": "066f561c1087a76015610c82164f123a6a54f98e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/066f561c1087a76015610c82164f123a6a54f98e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bf75fbfc8812ed0c7dc827def29c9d65a438eac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bf75fbfc8812ed0c7dc827def29c9d65a438eac", "html_url": "https://github.com/rust-lang/rust/commit/0bf75fbfc8812ed0c7dc827def29c9d65a438eac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bf75fbfc8812ed0c7dc827def29c9d65a438eac/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f2088aa603d2cd3f43c20795872de9cd6ec7735", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f2088aa603d2cd3f43c20795872de9cd6ec7735", "html_url": "https://github.com/rust-lang/rust/commit/3f2088aa603d2cd3f43c20795872de9cd6ec7735"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "60b60db649395257430871b00e671258cb6aa945", "filename": "compiler/rustc_symbol_mangling/src/legacy.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0bf75fbfc8812ed0c7dc827def29c9d65a438eac/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bf75fbfc8812ed0c7dc827def29c9d65a438eac/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs?ref=0bf75fbfc8812ed0c7dc827def29c9d65a438eac", "patch": "@@ -55,6 +55,26 @@ pub(super) fn mangle(\n \n     let hash = get_symbol_hash(tcx, instance, instance_ty, instantiating_crate);\n \n+    if let ty::InstanceDef::DropGlue(_drop_in_place, ty) = instance.def {\n+        // Use `{{drop}}::<$TYPE>::$hash` as name for the drop glue instead of\n+        // `core::mem::drop_in_place::$hash`.\n+        let mut printer =\n+            SymbolPrinter { tcx, path: SymbolPath::new(), keep_within_component: false };\n+        printer.write_str(\"{{drop}}\").unwrap();\n+        printer.path.finalize_pending_component();\n+        let printer = printer\n+            .generic_delimiters(|mut printer| {\n+                if let Some(ty) = ty {\n+                    printer.print_type(ty)\n+                } else {\n+                    printer.write_str(\"_\")?;\n+                    Ok(printer)\n+                }\n+            })\n+            .unwrap();\n+        return printer.path.finish(hash);\n+    }\n+\n     let mut printer = SymbolPrinter { tcx, path: SymbolPath::new(), keep_within_component: false }\n         .print_def_path(def_id, &[])\n         .unwrap();"}]}