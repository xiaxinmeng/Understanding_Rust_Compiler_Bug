{"sha": "57ee34c2bf66a26527959b0a1dc2b7e23638e67b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZWUzNGMyYmY2NmEyNjUyNzk1OWIwYTFkYzJiN2UyMzYzOGU2N2I=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2013-06-22T22:49:41Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2013-06-28T23:12:08Z"}, "message": "Actually resolve trait bounds on impls. Closes #7266.", "tree": {"sha": "d1963c2ee650a1deee8310e8ca53b154e6365819", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1963c2ee650a1deee8310e8ca53b154e6365819"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57ee34c2bf66a26527959b0a1dc2b7e23638e67b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57ee34c2bf66a26527959b0a1dc2b7e23638e67b", "html_url": "https://github.com/rust-lang/rust/commit/57ee34c2bf66a26527959b0a1dc2b7e23638e67b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57ee34c2bf66a26527959b0a1dc2b7e23638e67b/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "817f98085f2332b604f0a2da5127f29c8fabc41f", "url": "https://api.github.com/repos/rust-lang/rust/commits/817f98085f2332b604f0a2da5127f29c8fabc41f", "html_url": "https://github.com/rust-lang/rust/commit/817f98085f2332b604f0a2da5127f29c8fabc41f"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "23266767124c89ead730d5c6202e2dc275ae78bb", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/57ee34c2bf66a26527959b0a1dc2b7e23638e67b/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee34c2bf66a26527959b0a1dc2b7e23638e67b/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=57ee34c2bf66a26527959b0a1dc2b7e23638e67b", "patch": "@@ -609,6 +609,7 @@ pub fn check_item(ccx: @mut CrateCtxt, it: @ast::item) {\n         for ms.iter().advance |m| {\n             check_method(ccx, *m);\n         }\n+        vtable::resolve_impl(ccx, it);\n       }\n       ast::item_trait(_, _, ref trait_methods) => {\n         for (*trait_methods).iter().advance |trait_method| {"}, {"sha": "03348d5a1dc01e60c9e02a4554061e35043b07b0", "filename": "src/librustc/middle/typeck/check/vtable.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/57ee34c2bf66a26527959b0a1dc2b7e23638e67b/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee34c2bf66a26527959b0a1dc2b7e23638e67b/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable.rs?ref=57ee34c2bf66a26527959b0a1dc2b7e23638e67b", "patch": "@@ -478,6 +478,12 @@ pub fn location_info_for_expr(expr: @ast::expr) -> LocationInfo {\n         id: expr.id\n     }\n }\n+pub fn location_info_for_item(item: @ast::item) -> LocationInfo {\n+    LocationInfo {\n+        span: item.span,\n+        id: item.id\n+    }\n+}\n \n pub fn early_resolve_expr(ex: @ast::expr,\n                           fcx: @mut FnCtxt,\n@@ -661,6 +667,27 @@ fn resolve_expr(ex: @ast::expr,\n     visit::visit_expr(ex, (fcx, v));\n }\n \n+pub fn resolve_impl(ccx: @mut CrateCtxt, impl_item: @ast::item) {\n+    let def_id = ast_util::local_def(impl_item.id);\n+    match ty::impl_trait_ref(ccx.tcx, def_id) {\n+        None => {},\n+        Some(trait_ref) => {\n+            let infcx = infer::new_infer_ctxt(ccx.tcx);\n+            let vcx = VtableContext { ccx: ccx, infcx: infcx };\n+            let trait_def = ty::lookup_trait_def(ccx.tcx, trait_ref.def_id);\n+\n+            let vtbls = lookup_vtables(&vcx,\n+                                       &location_info_for_item(impl_item),\n+                                       *trait_def.generics.type_param_defs,\n+                                       &trait_ref.substs,\n+                                       false);\n+\n+            // FIXME(#7450): Doesn't work cross crate\n+            ccx.vtable_map.insert(impl_item.id, vtbls);\n+        }\n+    }\n+}\n+\n // Detect points where a trait-bounded type parameter is\n // instantiated, resolve the impls for the parameters.\n pub fn resolve_in_block(fcx: @mut FnCtxt, bl: &ast::blk) {"}]}