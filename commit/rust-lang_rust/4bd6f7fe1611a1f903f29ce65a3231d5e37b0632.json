{"sha": "4bd6f7fe1611a1f903f29ce65a3231d5e37b0632", "node_id": "C_kwDOAAsO6NoAKDRiZDZmN2ZlMTYxMWExZjkwM2YyOWNlNjVhMzIzMWQ1ZTM3YjA2MzI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-06T15:41:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-06T15:41:58Z"}, "message": "Rollup merge of #108786 - saethlin:free-regions-check, r=oli-obk\n\nCheck for free regions in MIR validation\n\nThis turns https://github.com/rust-lang/rust/issues/108720 into a MIR validation failure that will reproduce without debug-assertions enabled.\n\n```\nerror: internal compiler error: broken MIR in Item(WithOptConstParam { did: DefId(0:296 ~ futures_util[3805]::future::future::remote_handle::{impl#3}::poll), const_param_did: None }) (after pass ScalarReplacementOfAggregates) at bb0[0]:\n                                Free regions in optimized runtime-post-cleanup MIR\n  --> /home/ben/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.26/src/future/future/remote_handle.rs:96:13\n   |\n96 |         let this = self.project();\n   |             ^^^^\n```", "tree": {"sha": "61ee2cb08083e24a08deb98864c6098412b21c04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61ee2cb08083e24a08deb98864c6098412b21c04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bd6f7fe1611a1f903f29ce65a3231d5e37b0632", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkBgnGCRBK7hj4Ov3rIwAAxYkIAAxV1szHanP0g5YoyMNwi9vz\nSqejS0OEui8jJ+zkZUufTl5+jWT3Qf778QhJmO3Bl2CzpIsSiOMfLXKjdGdOLXAG\nwdH0i6fwnaGYYBNWplOiwfA4B4b8m+jL3iA37sefxRT0MtLwCpfoi6s0KTJcZr2F\nTJe8u2GyclLpg5ozQf6diNeU7NMwyaOe4ulew/61R+abjlebqBLEvdvdD0Qv+Ekw\nnta0bnN5qr62aUBeE6i861vtcSLIjfGu/yZQBLZmPBKm3Ovf3FFSiXvtpnbJpFsJ\nUwBKzdqQB+zevUaoUw8MFj8qSah+WP/gz39am65UEmhpCl1E0+4naXNExd3hbIk=\n=GD5j\n-----END PGP SIGNATURE-----\n", "payload": "tree 61ee2cb08083e24a08deb98864c6098412b21c04\nparent 1866ea136ce36ee780e1d59bcba9b34f7fd6f13d\nparent cb4ebc1453a69145d6602de798dc704871a200da\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678117318 +0100\ncommitter GitHub <noreply@github.com> 1678117318 +0100\n\nRollup merge of #108786 - saethlin:free-regions-check, r=oli-obk\n\nCheck for free regions in MIR validation\n\nThis turns https://github.com/rust-lang/rust/issues/108720 into a MIR validation failure that will reproduce without debug-assertions enabled.\n\n```\nerror: internal compiler error: broken MIR in Item(WithOptConstParam { did: DefId(0:296 ~ futures_util[3805]::future::future::remote_handle::{impl#3}::poll), const_param_did: None }) (after pass ScalarReplacementOfAggregates) at bb0[0]:\n                                Free regions in optimized runtime-post-cleanup MIR\n  --> /home/ben/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.26/src/future/future/remote_handle.rs:96:13\n   |\n96 |         let this = self.project();\n   |             ^^^^\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd6f7fe1611a1f903f29ce65a3231d5e37b0632", "html_url": "https://github.com/rust-lang/rust/commit/4bd6f7fe1611a1f903f29ce65a3231d5e37b0632", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bd6f7fe1611a1f903f29ce65a3231d5e37b0632/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1866ea136ce36ee780e1d59bcba9b34f7fd6f13d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1866ea136ce36ee780e1d59bcba9b34f7fd6f13d", "html_url": "https://github.com/rust-lang/rust/commit/1866ea136ce36ee780e1d59bcba9b34f7fd6f13d"}, {"sha": "cb4ebc1453a69145d6602de798dc704871a200da", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb4ebc1453a69145d6602de798dc704871a200da", "html_url": "https://github.com/rust-lang/rust/commit/cb4ebc1453a69145d6602de798dc704871a200da"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "272fe3d1b31092cc848195ea95e49a75c27f940b", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4bd6f7fe1611a1f903f29ce65a3231d5e37b0632/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bd6f7fe1611a1f903f29ce65a3231d5e37b0632/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=4bd6f7fe1611a1f903f29ce65a3231d5e37b0632", "patch": "@@ -72,6 +72,17 @@ impl<'tcx> MirPass<'tcx> for Validator {\n         };\n         checker.visit_body(body);\n         checker.check_cleanup_control_flow();\n+\n+        if let MirPhase::Runtime(_) = body.phase {\n+            if let ty::InstanceDef::Item(_) = body.source.instance {\n+                if body.has_free_regions() {\n+                    checker.fail(\n+                        Location::START,\n+                        format!(\"Free regions in optimized {} MIR\", body.phase.name()),\n+                    );\n+                }\n+            }\n+        }\n     }\n }\n "}, {"sha": "5fd923190ef591e72a5770a427c7ef0b4ca02b89", "filename": "compiler/rustc_mir_transform/src/lib.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4bd6f7fe1611a1f903f29ce65a3231d5e37b0632/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bd6f7fe1611a1f903f29ce65a3231d5e37b0632/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs?ref=4bd6f7fe1611a1f903f29ce65a3231d5e37b0632", "patch": "@@ -416,8 +416,6 @@ fn inner_mir_for_ctfe(tcx: TyCtxt<'_>, def: ty::WithOptConstParam<LocalDefId>) -\n \n     pm::run_passes(tcx, &mut body, &[&ctfe_limit::CtfeLimit], None);\n \n-    debug_assert!(!body.has_free_regions(), \"Free regions in MIR for CTFE\");\n-\n     body\n }\n \n@@ -626,8 +624,6 @@ fn inner_optimized_mir(tcx: TyCtxt<'_>, did: LocalDefId) -> Body<'_> {\n     debug!(\"body: {:#?}\", body);\n     run_optimization_passes(tcx, &mut body);\n \n-    debug_assert!(!body.has_free_regions(), \"Free regions in optimized MIR\");\n-\n     body\n }\n \n@@ -651,7 +647,5 @@ fn promoted_mir(\n         run_analysis_to_runtime_passes(tcx, body);\n     }\n \n-    debug_assert!(!promoted.has_free_regions(), \"Free regions in promoted MIR\");\n-\n     tcx.arena.alloc(promoted)\n }"}]}