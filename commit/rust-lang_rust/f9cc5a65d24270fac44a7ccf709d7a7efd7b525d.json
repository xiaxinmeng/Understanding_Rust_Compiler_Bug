{"sha": "f9cc5a65d24270fac44a7ccf709d7a7efd7b525d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5Y2M1YTY1ZDI0MjcwZmFjNDRhN2NjZjcwOWQ3YTdlZmQ3YjUyNWQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-10T17:55:52Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-10T17:55:52Z"}, "message": "check_match: add FIXME for removing of hack.", "tree": {"sha": "44641f7c9aa9c02fad97915203418e2a216bf05a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44641f7c9aa9c02fad97915203418e2a216bf05a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9cc5a65d24270fac44a7ccf709d7a7efd7b525d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9cc5a65d24270fac44a7ccf709d7a7efd7b525d", "html_url": "https://github.com/rust-lang/rust/commit/f9cc5a65d24270fac44a7ccf709d7a7efd7b525d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9cc5a65d24270fac44a7ccf709d7a7efd7b525d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efd3733f9d33e814629c6d14ddee92d44f62205c", "url": "https://api.github.com/repos/rust-lang/rust/commits/efd3733f9d33e814629c6d14ddee92d44f62205c", "html_url": "https://github.com/rust-lang/rust/commit/efd3733f9d33e814629c6d14ddee92d44f62205c"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "a69f639e8941f51d3aca9290fd553f7b7e27551b", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9cc5a65d24270fac44a7ccf709d7a7efd7b525d/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9cc5a65d24270fac44a7ccf709d7a7efd7b525d/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=f9cc5a65d24270fac44a7ccf709d7a7efd7b525d", "patch": "@@ -615,6 +615,8 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n             //    `if` expression. E.g. given `fn foo() -> &bool;` we reject `if foo() { .. }`.\n             //\n             // 2. By expecting `bool` for `expr` we get nice diagnostics for e.g. `if x = y { .. }`.\n+            //\n+            // FIXME(60707): Consider removing hack with principled solution.\n             self.check_expr_has_type_or_error(discrim, self.tcx.types.bool)\n         } else {\n             self.demand_discriminant_type(arms, discrim)"}]}