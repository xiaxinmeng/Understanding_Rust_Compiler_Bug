{"sha": "06b2905ee1cea6a693d45de74971e8431cec693f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2YjI5MDVlZTFjZWE2YTY5M2Q0NWRlNzQ5NzFlODQzMWNlYzY5M2Y=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-11-09T00:20:25Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-11-09T00:20:25Z"}, "message": "extra / rustpkg: Make getopts::opt_val private again\n\nand use opt_str instead of opt_val in rustpkg\n\nCloses #9311", "tree": {"sha": "dff0707202285813bfd64e24565db99cff45e43e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dff0707202285813bfd64e24565db99cff45e43e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06b2905ee1cea6a693d45de74971e8431cec693f", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06b2905ee1cea6a693d45de74971e8431cec693f", "html_url": "https://github.com/rust-lang/rust/commit/06b2905ee1cea6a693d45de74971e8431cec693f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06b2905ee1cea6a693d45de74971e8431cec693f/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a594a999fbccf04710c9dfea3ef3d231c14e1bd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a594a999fbccf04710c9dfea3ef3d231c14e1bd1", "html_url": "https://github.com/rust-lang/rust/commit/a594a999fbccf04710c9dfea3ef3d231c14e1bd1"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "e2ace841dec83944c2d8b7b7caaea1c9a87989ba", "filename": "src/libextra/getopts.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/06b2905ee1cea6a693d45de74971e8431cec693f/src%2Flibextra%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06b2905ee1cea6a693d45de74971e8431cec693f/src%2Flibextra%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fgetopts.rs?ref=06b2905ee1cea6a693d45de74971e8431cec693f", "patch": "@@ -185,18 +185,14 @@ impl Name {\n }\n \n impl Matches {\n-    /// FIXME: #9311 This used to be private, but rustpkg somehow managed to depend on it.\n-    /// No idea what this does.\n-    pub fn opt_vals(&self, nm: &str) -> ~[Optval] {\n+    fn opt_vals(&self, nm: &str) -> ~[Optval] {\n         match find_opt(self.opts, Name::from_str(nm)) {\n             Some(id) => self.vals[id].clone(),\n             None => fail!(\"No option '{}' defined\", nm)\n         }\n     }\n \n-    /// FIXME: #9311 This used to be private, but rustpkg somehow managed to depend on it.\n-    /// No idea what this does.\n-    pub fn opt_val(&self, nm: &str) -> Option<Optval> {\n+    fn opt_val(&self, nm: &str) -> Option<Optval> {\n         let vals = self.opt_vals(nm);\n         if (vals.is_empty()) {\n             None"}, {"sha": "55b52a012c93e9bd512c275cf29d7a8e15fdb769", "filename": "src/librustpkg/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/06b2905ee1cea6a693d45de74971e8431cec693f/src%2Flibrustpkg%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06b2905ee1cea6a693d45de74971e8431cec693f/src%2Flibrustpkg%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Flib.rs?ref=06b2905ee1cea6a693d45de74971e8431cec693f", "patch": "@@ -762,7 +762,7 @@ pub fn main_args(args: &[~str]) -> int {\n                    matches.opt_present(\"help\");\n     let no_link = matches.opt_present(\"no-link\");\n     let no_trans = matches.opt_present(\"no-trans\");\n-    let supplied_sysroot = matches.opt_val(\"sysroot\");\n+    let supplied_sysroot = matches.opt_str(\"sysroot\");\n     let generate_asm = matches.opt_present(\"S\") ||\n         matches.opt_present(\"assembly\");\n     let parse_only = matches.opt_present(\"parse-only\");\n@@ -894,7 +894,7 @@ pub fn main_args(args: &[~str]) -> int {\n     let mut remaining_args: ~[~str] = remaining_args.map(|s| (*s).clone()).collect();\n     remaining_args.shift();\n     let sroot = match supplied_sysroot {\n-        Some(getopts::Val(s)) => Path::new(s),\n+        Some(s) => Path::new(s),\n         _ => filesearch::get_or_default_sysroot()\n     };\n "}]}