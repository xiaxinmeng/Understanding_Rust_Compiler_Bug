{"sha": "84c0d8638ebf766cc4f6e442bbd4f01c5810795a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0YzBkODYzOGViZjc2NmNjNGY2ZTQ0MmJiZDRmMDFjNTgxMDc5NWE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-21T18:44:08Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-21T18:44:08Z"}, "message": "rustc: Update type serialization and deserialization for the \"mutable?\" change", "tree": {"sha": "916d6c4b84efd58682e323e773f782117fcff628", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/916d6c4b84efd58682e323e773f782117fcff628"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84c0d8638ebf766cc4f6e442bbd4f01c5810795a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84c0d8638ebf766cc4f6e442bbd4f01c5810795a", "html_url": "https://github.com/rust-lang/rust/commit/84c0d8638ebf766cc4f6e442bbd4f01c5810795a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84c0d8638ebf766cc4f6e442bbd4f01c5810795a/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86d05655b48af5aa2bea7c0e191d0cbe22810e29", "url": "https://api.github.com/repos/rust-lang/rust/commits/86d05655b48af5aa2bea7c0e191d0cbe22810e29", "html_url": "https://github.com/rust-lang/rust/commit/86d05655b48af5aa2bea7c0e191d0cbe22810e29"}], "stats": {"total": 40, "additions": 30, "deletions": 10}, "files": [{"sha": "8ef75e5460adfc073d64d7cf926cebd171e3ade8", "filename": "src/comp/front/creader.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/84c0d8638ebf766cc4f6e442bbd4f01c5810795a/src%2Fcomp%2Ffront%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84c0d8638ebf766cc4f6e442bbd4f01c5810795a/src%2Fcomp%2Ffront%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fcreader.rs?ref=84c0d8638ebf766cc4f6e442bbd4f01c5810795a", "patch": "@@ -59,6 +59,16 @@ impure fn parse_ty(@pstate st, str_def sd) -> @ty.t {\n              cname=option.none[str]);\n }\n \n+impure fn parse_mt(@pstate st, str_def sd) -> ty.mt {\n+    auto mut;\n+    alt (peek(st)) {\n+        case ('m') {next(st); mut = ast.mut;}\n+        case ('?') {next(st); mut = ast.maybe_mut;}\n+        case (_)   {mut=ast.imm;}\n+    }\n+    ret rec(ty=parse_ty(st, sd), mut=mut);\n+}\n+\n impure fn parse_sty(@pstate st, str_def sd) -> ty.sty {\n     alt (next(st)) {\n         case ('n') {ret ty.ty_nil;}\n@@ -93,15 +103,15 @@ impure fn parse_sty(@pstate st, str_def sd) -> ty.sty {\n             st.pos = st.pos + 1u;\n             ret ty.ty_tag(sd(def), params);\n         }      \n-        case ('@') {ret ty.ty_box(parse_ty(st, sd));}\n-        case ('V') {ret ty.ty_vec(parse_ty(st, sd));}\n+        case ('@') {ret ty.ty_box(parse_mt(st, sd));}\n+        case ('V') {ret ty.ty_vec(parse_mt(st, sd));}\n         case ('P') {ret ty.ty_port(parse_ty(st, sd));}\n         case ('C') {ret ty.ty_chan(parse_ty(st, sd));}\n         case ('T') {\n             check(next(st) == '[');\n-            let vec[@ty.t] params = vec();\n+            let vec[ty.mt] params = vec();\n             while (peek(st) != ']') {\n-                params = _vec.push[@ty.t](params, parse_ty(st, sd));\n+                params = _vec.push[ty.mt](params, parse_mt(st, sd));\n             }\n             st.pos = st.pos + 1u;\n             ret ty.ty_tup(params);\n@@ -114,7 +124,7 @@ impure fn parse_sty(@pstate st, str_def sd) -> ty.sty {\n                 while (peek(st) != '=') {name += _str.from_char(next(st));}\n                 st.pos = st.pos + 1u;\n                 fields = _vec.push[ty.field]\n-                    (fields, rec(ident=name, ty=parse_ty(st, sd)));\n+                    (fields, rec(ident=name, mt=parse_mt(st, sd)));\n             }\n             st.pos = st.pos + 1u;\n             ret ty.ty_rec(fields);"}, {"sha": "06b527de89e0362cef9254cda190c42e826edddb", "filename": "src/comp/middle/metadata.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/84c0d8638ebf766cc4f6e442bbd4f01c5810795a/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84c0d8638ebf766cc4f6e442bbd4f01c5810795a/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fmetadata.rs?ref=84c0d8638ebf766cc4f6e442bbd4f01c5810795a", "patch": "@@ -26,6 +26,16 @@ fn ty_str(@ty.t t, def_str ds) -> str {\n     ret sty_str(t.struct, ds);\n }\n \n+fn mt_str(&ty.mt mt, def_str ds) -> str {\n+    auto mut_str;\n+    alt (mt.mut) {\n+        case (ast.imm)       { mut_str = \"\";  }\n+        case (ast.mut)       { mut_str = \"m\"; }\n+        case (ast.maybe_mut) { mut_str = \"?\"; }\n+    }\n+    ret mut_str + ty_str(mt.ty, ds);\n+}\n+\n fn sty_str(ty.sty st, def_str ds) -> str {\n     alt (st) {\n         case (ty.ty_nil) {ret \"n\";}\n@@ -53,20 +63,20 @@ fn sty_str(ty.sty st, def_str ds) -> str {\n             for (@ty.t t in tys) {acc += ty_str(t, ds);}\n             ret acc + \"]\";\n         }\n-        case (ty.ty_box(?t)) {ret \"@\" + ty_str(t, ds);}\n-        case (ty.ty_vec(?t)) {ret \"V\" + ty_str(t, ds);}\n+        case (ty.ty_box(?mt)) {ret \"@\" + mt_str(mt, ds);}\n+        case (ty.ty_vec(?mt)) {ret \"V\" + mt_str(mt, ds);}\n         case (ty.ty_port(?t)) {ret \"P\" + ty_str(t, ds);}\n         case (ty.ty_chan(?t)) {ret \"C\" + ty_str(t, ds);}\n-        case (ty.ty_tup(?tys)) {\n+        case (ty.ty_tup(?mts)) {\n             auto acc = \"T[\";\n-            for (@ty.t t in tys) {acc += ty_str(t, ds);}\n+            for (ty.mt mt in mts) {acc += mt_str(mt, ds);}\n             ret acc + \"]\";\n         }\n         case (ty.ty_rec(?fields)) {\n             auto acc = \"R[\";\n             for (ty.field field in fields) {\n                 acc += field.ident + \"=\";\n-                acc += ty_str(field.ty, ds);\n+                acc += mt_str(field.mt, ds);\n             }\n             ret acc + \"]\";\n         }"}]}