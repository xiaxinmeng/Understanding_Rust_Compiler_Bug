{"sha": "ba1249465c036b2ccc6daf34749ea9d5df77f358", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMTI0OTQ2NWMwMzZiMmNjYzZkYWYzNDc0OWVhOWQ1ZGY3N2YzNTg=", "commit": {"author": {"name": "Takayuki Nakata", "email": "f.seasons017@gmail.com", "date": "2020-12-07T07:45:10Z"}, "committer": {"name": "Takayuki Nakata", "email": "f.seasons017@gmail.com", "date": "2020-12-07T07:45:10Z"}, "message": "cargo dev fmt", "tree": {"sha": "0740413740a5ff44fe3f4c113f6e245b597bf56c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0740413740a5ff44fe3f4c113f6e245b597bf56c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba1249465c036b2ccc6daf34749ea9d5df77f358", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba1249465c036b2ccc6daf34749ea9d5df77f358", "html_url": "https://github.com/rust-lang/rust/commit/ba1249465c036b2ccc6daf34749ea9d5df77f358", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba1249465c036b2ccc6daf34749ea9d5df77f358/comments", "author": {"login": "giraffate", "id": 17407489, "node_id": "MDQ6VXNlcjE3NDA3NDg5", "avatar_url": "https://avatars.githubusercontent.com/u/17407489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giraffate", "html_url": "https://github.com/giraffate", "followers_url": "https://api.github.com/users/giraffate/followers", "following_url": "https://api.github.com/users/giraffate/following{/other_user}", "gists_url": "https://api.github.com/users/giraffate/gists{/gist_id}", "starred_url": "https://api.github.com/users/giraffate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giraffate/subscriptions", "organizations_url": "https://api.github.com/users/giraffate/orgs", "repos_url": "https://api.github.com/users/giraffate/repos", "events_url": "https://api.github.com/users/giraffate/events{/privacy}", "received_events_url": "https://api.github.com/users/giraffate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "giraffate", "id": 17407489, "node_id": "MDQ6VXNlcjE3NDA3NDg5", "avatar_url": "https://avatars.githubusercontent.com/u/17407489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giraffate", "html_url": "https://github.com/giraffate", "followers_url": "https://api.github.com/users/giraffate/followers", "following_url": "https://api.github.com/users/giraffate/following{/other_user}", "gists_url": "https://api.github.com/users/giraffate/gists{/gist_id}", "starred_url": "https://api.github.com/users/giraffate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giraffate/subscriptions", "organizations_url": "https://api.github.com/users/giraffate/orgs", "repos_url": "https://api.github.com/users/giraffate/repos", "events_url": "https://api.github.com/users/giraffate/events{/privacy}", "received_events_url": "https://api.github.com/users/giraffate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e90b977a082eac4283a52b53d4da3a507a8ee9a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e90b977a082eac4283a52b53d4da3a507a8ee9a0", "html_url": "https://github.com/rust-lang/rust/commit/e90b977a082eac4283a52b53d4da3a507a8ee9a0"}], "stats": {"total": 39, "additions": 26, "deletions": 13}, "files": [{"sha": "55e4755c278a05df449c899cba206db9615626d8", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=ba1249465c036b2ccc6daf34749ea9d5df77f358", "patch": "@@ -480,7 +480,7 @@ fn check_code(cx: &LateContext<'_>, text: &str, span: Span) {\n                     | ItemKind::ForeignMod(..) => return false,\n                     // We found a main function ...\n                     ItemKind::Fn(_, sig, _, Some(block)) if item.ident.name == sym::main => {\n-                        let is_async = matches!(sig.header.asyncness, Async::Yes{..});\n+                        let is_async = matches!(sig.header.asyncness, Async::Yes { .. });\n                         let returns_nothing = match &sig.decl.output {\n                             FnRetTy::Default(..) => true,\n                             FnRetTy::Ty(ty) if ty.kind.is_unit() => true,"}, {"sha": "38e2ce563eeb2951feda3de9b0ae55633230111c", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=ba1249465c036b2ccc6daf34749ea9d5df77f358", "patch": "@@ -99,7 +99,7 @@ impl<'tcx> LateLintPass<'tcx> for MissingConstForFn {\n                 let has_const_generic_params = generics\n                     .params\n                     .iter()\n-                    .any(|param| matches!(param.kind, GenericParamKind::Const{ .. }));\n+                    .any(|param| matches!(param.kind, GenericParamKind::Const { .. }));\n \n                 if already_const(header) || has_const_generic_params {\n                     return;"}, {"sha": "5043b7b1fc3c1858743ee4862127e67aed09a4a0", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=ba1249465c036b2ccc6daf34749ea9d5df77f358", "patch": "@@ -90,9 +90,10 @@ impl<'tcx> LateLintPass<'tcx> for NeedlessPassByValue {\n \n         // Exclude non-inherent impls\n         if let Some(Node::Item(item)) = cx.tcx.hir().find(cx.tcx.hir().get_parent_node(hir_id)) {\n-            if matches!(item.kind, ItemKind::Impl{ of_trait: Some(_), .. } |\n-                ItemKind::Trait(..))\n-            {\n+            if matches!(\n+                item.kind,\n+                ItemKind::Impl { of_trait: Some(_), .. } | ItemKind::Trait(..)\n+            ) {\n                 return;\n             }\n         }"}, {"sha": "6a17d654ac943e55f3964cfd9a8b7865c296b53e", "filename": "clippy_lints/src/pass_by_ref_or_value.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs?ref=ba1249465c036b2ccc6daf34749ea9d5df77f358", "patch": "@@ -244,9 +244,10 @@ impl<'tcx> LateLintPass<'tcx> for PassByRefOrValue {\n \n         // Exclude non-inherent impls\n         if let Some(Node::Item(item)) = cx.tcx.hir().find(cx.tcx.hir().get_parent_node(hir_id)) {\n-            if matches!(item.kind, ItemKind::Impl{ of_trait: Some(_), .. } |\n-            ItemKind::Trait(..))\n-            {\n+            if matches!(\n+                item.kind,\n+                ItemKind::Impl { of_trait: Some(_), .. } | ItemKind::Trait(..)\n+            ) {\n                 return;\n             }\n         }"}, {"sha": "06adbb523d706288c4e1a98b8a990fb188af7313", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=ba1249465c036b2ccc6daf34749ea9d5df77f358", "patch": "@@ -390,7 +390,10 @@ impl<'tcx> mir::visit::Visitor<'tcx> for LocalUseVisitor {\n         let local = place.local;\n \n         if local == self.used.0\n-            && !matches!(ctx, PlaceContext::MutatingUse(MutatingUseContext::Drop) | PlaceContext::NonUse(_))\n+            && !matches!(\n+                ctx,\n+                PlaceContext::MutatingUse(MutatingUseContext::Drop) | PlaceContext::NonUse(_)\n+            )\n         {\n             self.used.1 = true;\n         }"}, {"sha": "fd74783335d57599bd57b3a1fd4d1fc9b7f75e31", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=ba1249465c036b2ccc6daf34749ea9d5df77f358", "patch": "@@ -1104,7 +1104,9 @@ fn is_empty_block(expr: &Expr<'_>) -> bool {\n         expr.kind,\n         ExprKind::Block(\n             Block {\n-                stmts: &[], expr: None, ..\n+                stmts: &[],\n+                expr: None,\n+                ..\n             },\n             _,\n         )"}, {"sha": "e763da593d49bd8be4bc1185621f1291cfbbc4a7", "filename": "clippy_lints/src/unnecessary_wraps.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Funnecessary_wraps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Funnecessary_wraps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_wraps.rs?ref=ba1249465c036b2ccc6daf34749ea9d5df77f358", "patch": "@@ -74,7 +74,10 @@ impl<'tcx> LateLintPass<'tcx> for UnnecessaryWraps {\n         }\n \n         if let Some(Node::Item(item)) = cx.tcx.hir().find(cx.tcx.hir().get_parent_node(hir_id)) {\n-            if matches!(item.kind, ItemKind::Impl{ of_trait: Some(_), ..} | ItemKind::Trait(..)) {\n+            if matches!(\n+                item.kind,\n+                ItemKind::Impl { of_trait: Some(_), .. } | ItemKind::Trait(..)\n+            ) {\n                 return;\n             }\n         }"}, {"sha": "f0267e4c792893b36869f19ed32f5103c8c5569b", "filename": "clippy_lints/src/utils/ast_utils.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Futils%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Futils%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fast_utils.rs?ref=ba1249465c036b2ccc6daf34749ea9d5df77f358", "patch": "@@ -408,7 +408,10 @@ pub fn eq_use_tree_kind(l: &UseTreeKind, r: &UseTreeKind) -> bool {\n }\n \n pub fn eq_defaultness(l: Defaultness, r: Defaultness) -> bool {\n-    matches!((l, r), (Defaultness::Final, Defaultness::Final) | (Defaultness::Default(_), Defaultness::Default(_)))\n+    matches!(\n+        (l, r),\n+        (Defaultness::Final, Defaultness::Final) | (Defaultness::Default(_), Defaultness::Default(_))\n+    )\n }\n \n pub fn eq_vis(l: &Visibility, r: &Visibility) -> bool {"}, {"sha": "007e72d129f75673a8c05988133a36b2cb7aacf0", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba1249465c036b2ccc6daf34749ea9d5df77f358/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=ba1249465c036b2ccc6daf34749ea9d5df77f358", "patch": "@@ -1500,7 +1500,7 @@ pub fn is_no_std_crate(krate: &Crate<'_>) -> bool {\n /// ```\n pub fn is_trait_impl_item(cx: &LateContext<'_>, hir_id: HirId) -> bool {\n     if let Some(Node::Item(item)) = cx.tcx.hir().find(cx.tcx.hir().get_parent_node(hir_id)) {\n-        matches!(item.kind, ItemKind::Impl{ of_trait: Some(_), .. })\n+        matches!(item.kind, ItemKind::Impl { of_trait: Some(_), .. })\n     } else {\n         false\n     }"}]}