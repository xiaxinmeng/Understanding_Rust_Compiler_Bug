{"sha": "e6e61d9dff939c1c4ebbae0006efe2a7ac038ff6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ZTYxZDlkZmY5MzljMWM0ZWJiYWUwMDA2ZWZlMmE3YWMwMzhmZjY=", "commit": {"author": {"name": "Markus Westerlind", "email": "markus.westerlind@imperva.com", "date": "2020-01-02T11:14:23Z"}, "committer": {"name": "Markus Westerlind", "email": "markus.westerlind@imperva.com", "date": "2020-01-02T11:14:23Z"}, "message": "perf: Don't recurse into types that do not need normalizing\n\nA bit speculative at this stage but profiling shows that type folding\ntakes up a substantial amount of time during normalization which may\nindicate that many types may be folded despite there being nothing to\nnormalize", "tree": {"sha": "c2e3a08113692a51ed85322b799ba0a7938ed63a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2e3a08113692a51ed85322b799ba0a7938ed63a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6e61d9dff939c1c4ebbae0006efe2a7ac038ff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e61d9dff939c1c4ebbae0006efe2a7ac038ff6", "html_url": "https://github.com/rust-lang/rust/commit/e6e61d9dff939c1c4ebbae0006efe2a7ac038ff6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6e61d9dff939c1c4ebbae0006efe2a7ac038ff6/comments", "author": {"login": "Marwes", "id": 957312, "node_id": "MDQ6VXNlcjk1NzMxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/957312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Marwes", "html_url": "https://github.com/Marwes", "followers_url": "https://api.github.com/users/Marwes/followers", "following_url": "https://api.github.com/users/Marwes/following{/other_user}", "gists_url": "https://api.github.com/users/Marwes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Marwes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Marwes/subscriptions", "organizations_url": "https://api.github.com/users/Marwes/orgs", "repos_url": "https://api.github.com/users/Marwes/repos", "events_url": "https://api.github.com/users/Marwes/events{/privacy}", "received_events_url": "https://api.github.com/users/Marwes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Marwes", "id": 957312, "node_id": "MDQ6VXNlcjk1NzMxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/957312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Marwes", "html_url": "https://github.com/Marwes", "followers_url": "https://api.github.com/users/Marwes/followers", "following_url": "https://api.github.com/users/Marwes/following{/other_user}", "gists_url": "https://api.github.com/users/Marwes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Marwes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Marwes/subscriptions", "organizations_url": "https://api.github.com/users/Marwes/orgs", "repos_url": "https://api.github.com/users/Marwes/repos", "events_url": "https://api.github.com/users/Marwes/events{/privacy}", "received_events_url": "https://api.github.com/users/Marwes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "766fba3fdca8fe075c370a63d2f76f8407483af5", "url": "https://api.github.com/repos/rust-lang/rust/commits/766fba3fdca8fe075c370a63d2f76f8407483af5", "html_url": "https://github.com/rust-lang/rust/commit/766fba3fdca8fe075c370a63d2f76f8407483af5"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "4b59521a348ef7ecc3b12b24b2f5974d6350a1f6", "filename": "src/librustc/traits/project.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e6e61d9dff939c1c4ebbae0006efe2a7ac038ff6/src%2Flibrustc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e61d9dff939c1c4ebbae0006efe2a7ac038ff6/src%2Flibrustc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fproject.rs?ref=e6e61d9dff939c1c4ebbae0006efe2a7ac038ff6", "patch": "@@ -316,6 +316,9 @@ impl<'a, 'b, 'tcx> TypeFolder<'tcx> for AssocTypeNormalizer<'a, 'b, 'tcx> {\n     }\n \n     fn fold_ty(&mut self, ty: Ty<'tcx>) -> Ty<'tcx> {\n+        if !ty.has_projections() {\n+            return ty;\n+        }\n         // We don't want to normalize associated types that occur inside of region\n         // binders, because they may contain bound regions, and we can't cope with that.\n         //"}]}