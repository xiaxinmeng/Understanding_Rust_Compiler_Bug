{"sha": "578692d9b0205102968032bd4a63c3b262c43b63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ODY5MmQ5YjAyMDUxMDI5NjgwMzJiZDRhNjNjM2IyNjJjNDNiNjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-26T11:42:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-26T11:42:15Z"}, "message": "Auto merge of #5562 - flip1995:clippyup_up, r=phansch\n\nUpdate contributing section about syncing Clippy\n\n[Rendered](https://github.com/flip1995/rust-clippy/blob/clippyup_up/CONTRIBUTING.md#fixing-build-failures-caused-by-rust)\n\nr? @oli-obk Did I get the sync process right?\n\nchangelog: none", "tree": {"sha": "d7d9cc9a81dbec00971c5318dee6d036d0da0fa2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7d9cc9a81dbec00971c5318dee6d036d0da0fa2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/578692d9b0205102968032bd4a63c3b262c43b63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/578692d9b0205102968032bd4a63c3b262c43b63", "html_url": "https://github.com/rust-lang/rust/commit/578692d9b0205102968032bd4a63c3b262c43b63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/578692d9b0205102968032bd4a63c3b262c43b63/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "182ac89f16ff2594eaa1e3e899fa4d228a3539c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/182ac89f16ff2594eaa1e3e899fa4d228a3539c3", "html_url": "https://github.com/rust-lang/rust/commit/182ac89f16ff2594eaa1e3e899fa4d228a3539c3"}, {"sha": "7a83eafd44b57196a454d10628d1cce1bfd60bd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a83eafd44b57196a454d10628d1cce1bfd60bd2", "html_url": "https://github.com/rust-lang/rust/commit/7a83eafd44b57196a454d10628d1cce1bfd60bd2"}], "stats": {"total": 100, "additions": 65, "deletions": 35}, "files": [{"sha": "0f47ac98fd20ab25bcab738968d3558e70ab5f4d", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 65, "deletions": 35, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/578692d9b0205102968032bd4a63c3b262c43b63/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/578692d9b0205102968032bd4a63c3b262c43b63/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=578692d9b0205102968032bd4a63c3b262c43b63", "patch": "@@ -155,47 +155,77 @@ That's why the `else_if_without_else` example uses the `register_early_pass` fun\n \n ## Fixing build failures caused by Rust\n \n-Clippy will sometimes fail to build from source because building it depends on unstable internal Rust features. Most of\n-the times we have to adapt to the changes and only very rarely there's an actual bug in Rust. Fixing build failures\n-caused by Rust updates, can be a good way to learn about Rust internals.\n+Clippy currently gets built with `rustc` of the `rust-lang/rust` `master`\n+branch. Most of the times we have to adapt to the changes and only very rarely\n+there's an actual bug in Rust.\n+\n+If you decide to make Clippy work again with a Rust commit that breaks it, you\n+have to sync the `rust-lang/rust-clippy` repository with the `subtree` copy of\n+Clippy in the `rust-lang/rust` repository.\n+\n+For general information about `subtree`s in the Rust repository see [Rust's\n+`CONTRIBUTING.md`][subtree].\n+\n+Here is a TL;DR version of the sync process (all of the following commands have\n+to be run inside the `rust` directory):\n+\n+1. Clone the [`rust-lang/rust`] repository\n+2. Sync the changes to the rust-copy of Clippy to your Clippy fork:\n+    ```bash\n+    # Make sure to change `your-github-name` to your github name in the following command\n+    git subtree push -P src/tools/clippy git@github.com:your-github-name/rust-clippy sync-from-rust\n+    ```\n+    _Note:_ This will directly push to the remote repository. You can also push\n+    to your local copy by replacing the remote address with `/path/to/rust-clippy`\n+    directory.\n+\n+    _Note:_ Most of the time you have to create a merge commit in the\n+    `rust-clippy` repo (this has to be done in the Clippy repo, not in the\n+    rust-copy of Clippy):\n+    ```bash\n+    git fetch origin && git fetch upstream\n+    git checkout sync-from-rust\n+    git merge upstream/master\n+    ```\n+3. Open a PR to `rust-lang/rust-clippy` and wait for it to get merged (to\n+   accelerate the process ping the `@rust-lang/clippy` team in your PR and/or\n+   ~~annoy~~ ask them in the [Discord] channel.)\n+4. Sync the `rust-lang/rust-clippy` master to the rust-copy of Clippy:\n+    ```bash\n+    git checkout -b sync-from-clippy\n+    git subtree pull -P src/tools/clippy https://github.com/rust-lang/rust-clippy master\n+    ```\n+5. Open a PR to [`rust-lang/rust`]\n+\n+Also, you may want to define remotes, so you don't have to type out the remote\n+addresses on every sync. You can do this with the following commands (these\n+commands still have to be run inside the `rust` directory):\n \n-In order to find out why Clippy does not work properly with a new Rust commit, you can use the [rust-toolstate commit\n-history][toolstate_commit_history]. You will then have to look for the last commit that contains\n-`test-pass -> build-fail` or `test-pass -> test-fail` for the `clippy-driver` component.\n-[Here][toolstate_commit] is an example.\n-\n-The commit message contains a link to the PR. The PRs are usually small enough to discover the breaking API change and\n-if they are bigger, they likely include some discussion that may help you to fix Clippy.\n-\n-To check if Clippy is available for a specific target platform, you can check\n-the [rustup component history][rustup_component_history].\n-\n-If you decide to make Clippy work again with a Rust commit that breaks it,\n-you probably want to install the latest Rust from master locally and run Clippy\n-using that version of Rust.\n-\n-You can set up the master toolchain by running `./setup-toolchain.sh`. That script will install\n-[rustup-toolchain-install-master][rtim] and master toolchain, then run `rustup override set master`.\n-\n-After fixing the build failure on this repository, we can submit a pull request\n-to [`rust-lang/rust`] to fix the toolstate.\n+```bash\n+# Set clippy-upstream remote for pulls\n+$ git remote add clippy-upstream https://github.com/rust-lang/rust-clippy\n+# Make sure to not push to the upstream repo\n+$ git remote set-url --push clippy-upstream DISABLED\n+# Set clippy-origin remote to your fork for pushes\n+$ git remote add clippy-origin git@github.com:your-github-name/rust-clippy\n+# Set a local remote\n+$ git remote add clippy-local /path/to/rust-clippy\n+```\n \n-To submit a pull request, you should follow these steps:\n+You can then sync with the remote names from above, e.g.:\n \n ```bash\n-# Assuming you already cloned the rust-lang/rust repo and you're in the correct directory\n-git submodule update --remote src/tools/clippy\n-cargo update -p clippy\n-git add -u\n-git commit -m \"Update Clippy\"\n-./x.py test -i --stage 1 src/tools/clippy # This is optional and should succeed anyway\n-# Open a PR in rust-lang/rust\n+$ git subtree push -P src/tools/clippy clippy-local sync-from-rust\n ```\n \n-[rustup_component_history]: https://rust-lang.github.io/rustup-components-history\n-[toolstate_commit_history]: https://github.com/rust-lang-nursery/rust-toolstate/commits/master\n-[toolstate_commit]: https://github.com/rust-lang-nursery/rust-toolstate/commit/aad74d8294e198a7cf8ac81a91aebb7f3bbcf727\n-[rtim]: https://github.com/kennytm/rustup-toolchain-install-master\n+_Note:_ The first time running `git subtree push` a cache has to be built. This\n+involves going through the complete Clippy history once. For this you have to\n+increase the stack limit though, which you can do with `ulimit -s 60000`. For\n+this to work, you will need the fix of `git subtree` available\n+[here][gitgitgadget-pr].\n+\n+[gitgitgadget-pr]: https://github.com/gitgitgadget/git/pull/493\n+[subtree]: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#external-dependencies-subtree\n [`rust-lang/rust`]: https://github.com/rust-lang/rust\n \n ## Issue and PR triage"}]}