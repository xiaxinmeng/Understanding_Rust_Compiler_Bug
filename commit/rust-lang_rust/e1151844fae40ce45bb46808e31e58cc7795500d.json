{"sha": "e1151844fae40ce45bb46808e31e58cc7795500d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxMTUxODQ0ZmFlNDBjZTQ1YmI0NjgwOGUzMWU1OGNjNzc5NTUwMGQ=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2019-11-27T21:19:15Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:22Z"}, "message": "bench larger allocations", "tree": {"sha": "896a9cb9f0b34b1f5587202b6e67e6d541cf6049", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/896a9cb9f0b34b1f5587202b6e67e6d541cf6049"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1151844fae40ce45bb46808e31e58cc7795500d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1151844fae40ce45bb46808e31e58cc7795500d", "html_url": "https://github.com/rust-lang/rust/commit/e1151844fae40ce45bb46808e31e58cc7795500d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1151844fae40ce45bb46808e31e58cc7795500d/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd16202e36f1d4568550eb9022a43842b93fff6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd16202e36f1d4568550eb9022a43842b93fff6e", "html_url": "https://github.com/rust-lang/rust/commit/fd16202e36f1d4568550eb9022a43842b93fff6e"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "1ae72a24709bfbe180e72dabe17896426c448d61", "filename": "library/alloc/benches/vec.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e1151844fae40ce45bb46808e31e58cc7795500d/library%2Falloc%2Fbenches%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1151844fae40ce45bb46808e31e58cc7795500d/library%2Falloc%2Fbenches%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fbenches%2Fvec.rs?ref=e1151844fae40ce45bb46808e31e58cc7795500d", "patch": "@@ -504,10 +504,10 @@ fn bench_in_place_recycle(b: &mut test::Bencher) {\n \n #[bench]\n fn bench_in_place_zip_recycle(b: &mut test::Bencher) {\n-    let mut data = vec![0u8; 256];\n+    let mut data = vec![0u8; 1000];\n     let mut rng = rand::thread_rng();\n-    let mut subst = (0..=255u8).collect::<Vec<_>>();\n-    subst.shuffle(&mut rng);\n+    let mut subst = vec![0u8; 1000];\n+    rng.fill_bytes(&mut subst[..]);\n \n     b.iter(|| {\n         let tmp = std::mem::replace(&mut data, Vec::new());\n@@ -517,7 +517,7 @@ fn bench_in_place_zip_recycle(b: &mut test::Bencher) {\n             .enumerate()\n             .map(|(i, (d, s))| d.wrapping_add(i as u8) ^ s)\n             .collect::<Vec<_>>();\n-        assert_eq!(mangled.len(), 256);\n+        assert_eq!(mangled.len(), 1000);\n         std::mem::replace(&mut data, black_box(mangled));\n     });\n }\n@@ -526,8 +526,8 @@ fn bench_in_place_zip_recycle(b: &mut test::Bencher) {\n fn bench_in_place_zip_iter_mut(b: &mut test::Bencher) {\n     let mut data = vec![0u8; 256];\n     let mut rng = rand::thread_rng();\n-    let mut subst = (0..=255u8).collect::<Vec<_>>();\n-    subst.shuffle(&mut rng);\n+    let mut subst = vec![0u8; 1000];\n+    rng.fill_bytes(&mut subst[..]);\n \n     b.iter(|| {\n         data.iter_mut().enumerate().for_each(|(i, d)| {"}]}