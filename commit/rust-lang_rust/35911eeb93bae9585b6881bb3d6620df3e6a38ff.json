{"sha": "35911eeb93bae9585b6881bb3d6620df3e6a38ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1OTExZWViOTNiYWU5NTg1YjY4ODFiYjNkNjYyMGRmM2U2YTM4ZmY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-24T07:03:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-24T07:03:01Z"}, "message": "reduce sanity check in debug mode", "tree": {"sha": "b094a1a91146d586954b248a501bf334edc0c3b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b094a1a91146d586954b248a501bf334edc0c3b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35911eeb93bae9585b6881bb3d6620df3e6a38ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35911eeb93bae9585b6881bb3d6620df3e6a38ff", "html_url": "https://github.com/rust-lang/rust/commit/35911eeb93bae9585b6881bb3d6620df3e6a38ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35911eeb93bae9585b6881bb3d6620df3e6a38ff/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a593728fc753f85df575b54aadc64c3fd2c06d11", "url": "https://api.github.com/repos/rust-lang/rust/commits/a593728fc753f85df575b54aadc64c3fd2c06d11", "html_url": "https://github.com/rust-lang/rust/commit/a593728fc753f85df575b54aadc64c3fd2c06d11"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "ec792d5b224147a43cb103f98092a4c6d3f9ba92", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/35911eeb93bae9585b6881bb3d6620df3e6a38ff/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35911eeb93bae9585b6881bb3d6620df3e6a38ff/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=35911eeb93bae9585b6881bb3d6620df3e6a38ff", "patch": "@@ -230,8 +230,14 @@ pub(super) fn mir_assign_valid_types<'tcx>(\n     // late-bound lifetimes are still around and can lead to type\n     // differences. So we compare ignoring lifetimes.\n     if equal_up_to_regions(tcx, param_env, src.ty, dest.ty) {\n-        // Make sure the layout is equal, too -- just to be safe. Miri really needs layout equality.\n-        assert_eq!(src.layout, dest.layout);\n+        // Make sure the layout is equal, too -- just to be safe. Miri really\n+        // needs layout equality. For performance reason we skip this check when\n+        // the types are equal. Equal types *can* have different layouts when\n+        // enum downcast is involved (as enum variants carry the type of the\n+        // enum), but those should never occur in assignments.\n+        if cfg!(debug_assertions) || src.ty != dest.ty {\n+            assert_eq!(src.layout, dest.layout);\n+        }\n         true\n     } else {\n         false"}]}