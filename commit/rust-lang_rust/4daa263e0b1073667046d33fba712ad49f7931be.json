{"sha": "4daa263e0b1073667046d33fba712ad49f7931be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYWEyNjNlMGIxMDczNjY3MDQ2ZDMzZmJhNzEyYWQ0OWY3OTMxYmU=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-10-07T13:35:21Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2020-11-24T09:37:15Z"}, "message": "Always print lints from plugins, if they're available\n\nCurrently you can get a list of lints and lint groups by running `rustc\n-Whelp`. This prints an additional line at the end:\n```\nCompiler plugins can provide additional lints and lint groups. To see a\nlisting of these, re-run `rustc -W help` with a crate filename.\n```\n\nClippy is such a \"compiler plugin\", that provides additional lints.\nRunning `clippy-driver -Whelp` (`rustc` wrapper) still only prints the\nrustc lints with the above message at the end. But when running\n`clippy-driver -Whelp main.rs`, where `main.rs` is any rust file, it\nalso prints Clippy lints. I don't think this is a good approach from a\nUX perspective: Why is a random file necessary to print a help message?\n\nThis commit changes this behavior: Whenever a compiler callback\nregisters lints, it is assumed that these lints come from a plugin and\nare printed without having to specify a Rust source file.", "tree": {"sha": "de73bd801c81a4c191fc0b95c9304ecea9910a14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de73bd801c81a4c191fc0b95c9304ecea9910a14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4daa263e0b1073667046d33fba712ad49f7931be", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAl+81EsACgkQHKDfKvWd\naKUQLw/+LETc40LSB/Tq/Sg2lETfcpIMXxPxgjyX0afChT+seXS1W5o5YcCJTmC+\no00Zo9hKp00Cpj5sSiI1ur53mpKFeYVBRKKEURHcpXnnI/d1OGFC3q/aXNlhT+bZ\npcX9tB333zxeXKr4RQdXLnrJjnmPLszeW2i/UpOjhP7qcODL6Ju7HPnbIKTk/iQp\noZDLOLpEWkHEQS+02s8q/7VWFNR6nXcYv3tGxEsJtGK27RZQeD+6D234/E1Hwo+t\nGv/GqwrGBK/QZwrtuMUBQmqDOZehsJqytPkDL18Erl8aUf57ssVcUHEYy9aUeBoH\nSioFnLNviJnrUmssi5wDQO7zZlGtmPkFBWrcZuPwr1TbPyCgTMA5nogE2XSWQfug\ny6pzrLoqSX7Cta6NYR+p1opih8fUjYLehghEQedEtUmYEqrNu2xScR3iei1sdOii\nDCKvJZfX44rybfoWhFE+1OJISG73EiBTZddLwTC2H+rqNwCdEC2W1d7MJ2KfzTCI\nsa6wt4dO8na5bdTW/BIPWL2swrY+Gp/TmgOV71zfJFpo7+tXGA2qiSh12ZSpysFL\nyV7dZFiVDNGbCOJLOvgseUg6zbif8x+XLFru9oeEy7gK0woBLIeS8uKBgy2pdf4e\n+tLAjsbZALVZVz66WXB/zelRAHX9IB8MG8+o43ev4dxSE/R6pNg=\n=ahWz\n-----END PGP SIGNATURE-----", "payload": "tree de73bd801c81a4c191fc0b95c9304ecea9910a14\nparent be1e502cef3bb756c388c0b4f8d4bba73458e2b0\nauthor flip1995 <hello@philkrones.com> 1602077721 +0200\ncommitter flip1995 <philipp.krones@embecosm.com> 1606210635 +0100\n\nAlways print lints from plugins, if they're available\n\nCurrently you can get a list of lints and lint groups by running `rustc\n-Whelp`. This prints an additional line at the end:\n```\nCompiler plugins can provide additional lints and lint groups. To see a\nlisting of these, re-run `rustc -W help` with a crate filename.\n```\n\nClippy is such a \"compiler plugin\", that provides additional lints.\nRunning `clippy-driver -Whelp` (`rustc` wrapper) still only prints the\nrustc lints with the above message at the end. But when running\n`clippy-driver -Whelp main.rs`, where `main.rs` is any rust file, it\nalso prints Clippy lints. I don't think this is a good approach from a\nUX perspective: Why is a random file necessary to print a help message?\n\nThis commit changes this behavior: Whenever a compiler callback\nregisters lints, it is assumed that these lints come from a plugin and\nare printed without having to specify a Rust source file.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4daa263e0b1073667046d33fba712ad49f7931be", "html_url": "https://github.com/rust-lang/rust/commit/4daa263e0b1073667046d33fba712ad49f7931be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4daa263e0b1073667046d33fba712ad49f7931be/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be1e502cef3bb756c388c0b4f8d4bba73458e2b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/be1e502cef3bb756c388c0b4f8d4bba73458e2b0", "html_url": "https://github.com/rust-lang/rust/commit/be1e502cef3bb756c388c0b4f8d4bba73458e2b0"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "014007fc13bb83b3cc427d11bd3e56ae6a58dacd", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4daa263e0b1073667046d33fba712ad49f7931be/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4daa263e0b1073667046d33fba712ad49f7931be/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=4daa263e0b1073667046d33fba712ad49f7931be", "patch": "@@ -248,11 +248,18 @@ fn run_compiler(\n                 interface::run_compiler(config, |compiler| {\n                     let sopts = &compiler.session().opts;\n                     if sopts.describe_lints {\n-                        let lint_store = rustc_lint::new_lint_store(\n+                        let mut lint_store = rustc_lint::new_lint_store(\n                             sopts.debugging_opts.no_interleave_lints,\n                             compiler.session().unstable_options(),\n                         );\n-                        describe_lints(compiler.session(), &lint_store, false);\n+                        let registered_lints =\n+                            if let Some(register_lints) = compiler.register_lints() {\n+                                register_lints(compiler.session(), &mut lint_store);\n+                                true\n+                            } else {\n+                                false\n+                            };\n+                        describe_lints(compiler.session(), &lint_store, registered_lints);\n                         return;\n                     }\n                     let should_stop = RustcDefaultCalls::print_crate_info("}]}