{"sha": "3a8bad98d71448290c58913bc42dfbea49855aad", "node_id": "C_kwDOAAsO6NoAKDNhOGJhZDk4ZDcxNDQ4MjkwYzU4OTEzYmM0MmRmYmVhNDk4NTVhYWQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-23T13:40:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-23T13:40:22Z"}, "message": "Rollup merge of #102137 - b-naber:lazy-const-val-conversion, r=lcnr\n\nDon't convert valtree to constvalue during normalization\n\nr? ``@lcnr``", "tree": {"sha": "2ef8ccfda83e29bed99a59671dea05bbbb0a22db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ef8ccfda83e29bed99a59671dea05bbbb0a22db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a8bad98d71448290c58913bc42dfbea49855aad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjLbdGCRBK7hj4Ov3rIwAA8tcIAA+gauZvVzaTQxhTGivuqKXF\neKZBYY+ykiirlmC+x3euzYtQeLrDt6Zb/l4cJ7v9a1Wrb7vaj0Kiiz37OoUI3WDm\nOY1lkSEiZs/4z7uanKoeQV6liywLIZE1tHGIJdOki/wnsna9Chh+MxixdFob6inw\n8I9ZHvugVDtNQNPCvfJ1ZBX2j4RItQy5M0TW/1hcVRzp/kaax55SaAuC/DT8NvF5\nibnTixg/MzWOvIKHk61IzvPEENkCaZ4KM6TtHEPpsnsdQXMPoGJKzwq7vdi5xCuT\nRP1YC6htOWb8UjV74r/X2BWLY97gYMR7B46q2lHig3x+WvHI6Usf6gpcl10i4MA=\n=AgyH\n-----END PGP SIGNATURE-----\n", "payload": "tree 2ef8ccfda83e29bed99a59671dea05bbbb0a22db\nparent 3de0d678f81b852bae74dc327e4443f8367bbaf1\nparent ded3edac9ad2dd014eed22d5c9050af6eb22882f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1663940422 +0200\ncommitter GitHub <noreply@github.com> 1663940422 +0200\n\nRollup merge of #102137 - b-naber:lazy-const-val-conversion, r=lcnr\n\nDon't convert valtree to constvalue during normalization\n\nr? ``@lcnr``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a8bad98d71448290c58913bc42dfbea49855aad", "html_url": "https://github.com/rust-lang/rust/commit/3a8bad98d71448290c58913bc42dfbea49855aad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a8bad98d71448290c58913bc42dfbea49855aad/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3de0d678f81b852bae74dc327e4443f8367bbaf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3de0d678f81b852bae74dc327e4443f8367bbaf1", "html_url": "https://github.com/rust-lang/rust/commit/3de0d678f81b852bae74dc327e4443f8367bbaf1"}, {"sha": "ded3edac9ad2dd014eed22d5c9050af6eb22882f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ded3edac9ad2dd014eed22d5c9050af6eb22882f", "html_url": "https://github.com/rust-lang/rust/commit/ded3edac9ad2dd014eed22d5c9050af6eb22882f"}], "stats": {"total": 61, "additions": 7, "deletions": 54}, "files": [{"sha": "31e7fb67f0ef98d469916831c37747935e896a32", "filename": "compiler/rustc_trait_selection/src/traits/query/normalize.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3a8bad98d71448290c58913bc42dfbea49855aad/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a8bad98d71448290c58913bc42dfbea49855aad/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs?ref=3a8bad98d71448290c58913bc42dfbea49855aad", "patch": "@@ -351,25 +351,7 @@ impl<'cx, 'tcx> FallibleTypeFolder<'tcx> for QueryNormalizer<'cx, 'tcx> {\n         &mut self,\n         constant: mir::ConstantKind<'tcx>,\n     ) -> Result<mir::ConstantKind<'tcx>, Self::Error> {\n-        Ok(match constant {\n-            mir::ConstantKind::Ty(c) => {\n-                let const_folded = c.try_super_fold_with(self)?;\n-                match const_folded.kind() {\n-                    ty::ConstKind::Value(valtree) => {\n-                        let tcx = self.infcx.tcx;\n-                        let ty = const_folded.ty();\n-                        let const_val = tcx.valtree_to_const_val((ty, valtree));\n-                        debug!(?ty, ?valtree, ?const_val);\n-\n-                        mir::ConstantKind::Val(const_val, ty)\n-                    }\n-                    _ => mir::ConstantKind::Ty(const_folded),\n-                }\n-            }\n-            mir::ConstantKind::Val(_, _) | mir::ConstantKind::Unevaluated(..) => {\n-                constant.try_super_fold_with(self)?\n-            }\n-        })\n+        constant.try_super_fold_with(self)\n     }\n \n     #[inline]"}, {"sha": "52aa4bb31016c0b3aba2d0a22aacc3ec616a5212", "filename": "src/test/ui/transmutability/malformed-program-gracefulness/wrong-type-assume.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a8bad98d71448290c58913bc42dfbea49855aad/src%2Ftest%2Fui%2Ftransmutability%2Fmalformed-program-gracefulness%2Fwrong-type-assume.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a8bad98d71448290c58913bc42dfbea49855aad/src%2Ftest%2Fui%2Ftransmutability%2Fmalformed-program-gracefulness%2Fwrong-type-assume.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmutability%2Fmalformed-program-gracefulness%2Fwrong-type-assume.rs?ref=3a8bad98d71448290c58913bc42dfbea49855aad", "patch": "@@ -24,10 +24,6 @@ mod assert {\n             Src,\n             Context,\n             { from_options(ASSUME_ALIGNMENT, ASSUME_LIFETIMES, ASSUME_SAFETY, ASSUME_VALIDITY) }\n-            //~^ ERROR E0080\n-            //~| ERROR E0080\n-            //~| ERROR E0080\n-            //~| ERROR E0080\n         >,\n     {}\n "}, {"sha": "c6d93876cfafab10c0704588aec42a9e3747e59d", "filename": "src/test/ui/transmutability/malformed-program-gracefulness/wrong-type-assume.stderr", "status": "modified", "additions": 6, "deletions": 31, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/3a8bad98d71448290c58913bc42dfbea49855aad/src%2Ftest%2Fui%2Ftransmutability%2Fmalformed-program-gracefulness%2Fwrong-type-assume.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a8bad98d71448290c58913bc42dfbea49855aad/src%2Ftest%2Fui%2Ftransmutability%2Fmalformed-program-gracefulness%2Fwrong-type-assume.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmutability%2Fmalformed-program-gracefulness%2Fwrong-type-assume.stderr?ref=3a8bad98d71448290c58913bc42dfbea49855aad", "patch": "@@ -1,52 +1,27 @@\n error[E0308]: mismatched types\n-  --> $DIR/wrong-type-assume.rs:53:51\n+  --> $DIR/wrong-type-assume.rs:49:51\n    |\n LL |     assert::is_transmutable::<Src, Dst, Context, {0u8}, false, false, false>();\n    |                                                   ^^^ expected `bool`, found `u8`\n \n-error[E0080]: evaluation of `assert::is_transmutable::<test::Src, test::Dst, test::Context, {0u8}, false, false, false>::{constant#0}` failed\n-  --> $DIR/wrong-type-assume.rs:26:15\n-   |\n-LL |             { from_options(ASSUME_ALIGNMENT, ASSUME_LIFETIMES, ASSUME_SAFETY, ASSUME_VALIDITY) }\n-   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n-\n error[E0308]: mismatched types\n-  --> $DIR/wrong-type-assume.rs:54:58\n+  --> $DIR/wrong-type-assume.rs:50:58\n    |\n LL |     assert::is_transmutable::<Src, Dst, Context, false, {0u8}, false, false>();\n    |                                                          ^^^ expected `bool`, found `u8`\n \n-error[E0080]: evaluation of `assert::is_transmutable::<test::Src, test::Dst, test::Context, false, {0u8}, false, false>::{constant#0}` failed\n-  --> $DIR/wrong-type-assume.rs:26:15\n-   |\n-LL |             { from_options(ASSUME_ALIGNMENT, ASSUME_LIFETIMES, ASSUME_SAFETY, ASSUME_VALIDITY) }\n-   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n-\n error[E0308]: mismatched types\n-  --> $DIR/wrong-type-assume.rs:55:65\n+  --> $DIR/wrong-type-assume.rs:51:65\n    |\n LL |     assert::is_transmutable::<Src, Dst, Context, false, false, {0u8}, false>();\n    |                                                                 ^^^ expected `bool`, found `u8`\n \n-error[E0080]: evaluation of `assert::is_transmutable::<test::Src, test::Dst, test::Context, false, false, {0u8}, false>::{constant#0}` failed\n-  --> $DIR/wrong-type-assume.rs:26:15\n-   |\n-LL |             { from_options(ASSUME_ALIGNMENT, ASSUME_LIFETIMES, ASSUME_SAFETY, ASSUME_VALIDITY) }\n-   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n-\n error[E0308]: mismatched types\n-  --> $DIR/wrong-type-assume.rs:56:72\n+  --> $DIR/wrong-type-assume.rs:52:72\n    |\n LL |     assert::is_transmutable::<Src, Dst, Context, false, false, false, {0u8}>();\n    |                                                                        ^^^ expected `bool`, found `u8`\n \n-error[E0080]: evaluation of `assert::is_transmutable::<test::Src, test::Dst, test::Context, false, false, false, {0u8}>::{constant#0}` failed\n-  --> $DIR/wrong-type-assume.rs:26:15\n-   |\n-LL |             { from_options(ASSUME_ALIGNMENT, ASSUME_LIFETIMES, ASSUME_SAFETY, ASSUME_VALIDITY) }\n-   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n-\n-error: aborting due to 8 previous errors\n+error: aborting due to 4 previous errors\n \n-Some errors have detailed explanations: E0080, E0308.\n-For more information about an error, try `rustc --explain E0080`.\n+For more information about this error, try `rustc --explain E0308`."}]}