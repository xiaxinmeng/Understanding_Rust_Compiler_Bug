{"sha": "5885e6d45358139d74c8b2a52df01708fac6bbc8", "node_id": "C_kwDOAAsO6NoAKDU4ODVlNmQ0NTM1ODEzOWQ3NGM4YjJhNTJkZjAxNzA4ZmFjNmJiYzg", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-05-31T05:57:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-31T05:57:36Z"}, "message": "Rollup merge of #97565 - lukas-code:patch-1, r=thomcc\n\nAdd doc alias `memset` to `write_bytes`\n\nI were looking for `memset` in rust, but the docs only pointed me to `slice::fill`.\n\nWith only the old aliases, one might write code like this, which is incorrect if the memory is uninitialized.\n``` Rust\ncore::slice::from_raw_parts(ptr, len).fill(0)\n```", "tree": {"sha": "a238b1166c7d6a2950e4cd64d15664d2874a44d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a238b1166c7d6a2950e4cd64d15664d2874a44d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5885e6d45358139d74c8b2a52df01708fac6bbc8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJila5QCRBK7hj4Ov3rIwAAwQ0IAD0WKnIuHOLaySdGEVz4tYVI\n9tWyloACZ4sjFytX4FqxxoqLlsmbL96qEj/8Me9VevAKCJZCx19EFt3Cc/i4B4Bw\nBRJell6LvJ/tHJZp9Ib+qfd305VQCPVVFJQ1d8NjgpOr4VuG0DZfnUEDq7aaF2p+\nC20s0+04fZm8PBWgPBlin6+T3oZpV7YTFT/LMGI3MwweCXxTUnI1/lZvK4wATd2s\n8YHtoJunJHc/oWQBJ7uD5hbaM5FJCkP2uXM+mK4fFxqdi1zWIM2nMXpconnIPxMx\nITGq60QAOCkd3VewVYNjUPOPSGiq22POqadkqvBqZOR+/OVjPAVlHuV+6CSaPPM=\n=lm43\n-----END PGP SIGNATURE-----\n", "payload": "tree a238b1166c7d6a2950e4cd64d15664d2874a44d2\nparent bf248c82e86f0205d953a04b0ed07e67c7109895\nparent e565bb0326108534fab12aa9cfc7d56f2eb97aec\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1653976656 +0200\ncommitter GitHub <noreply@github.com> 1653976656 +0200\n\nRollup merge of #97565 - lukas-code:patch-1, r=thomcc\n\nAdd doc alias `memset` to `write_bytes`\n\nI were looking for `memset` in rust, but the docs only pointed me to `slice::fill`.\n\nWith only the old aliases, one might write code like this, which is incorrect if the memory is uninitialized.\n``` Rust\ncore::slice::from_raw_parts(ptr, len).fill(0)\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5885e6d45358139d74c8b2a52df01708fac6bbc8", "html_url": "https://github.com/rust-lang/rust/commit/5885e6d45358139d74c8b2a52df01708fac6bbc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5885e6d45358139d74c8b2a52df01708fac6bbc8/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf248c82e86f0205d953a04b0ed07e67c7109895", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf248c82e86f0205d953a04b0ed07e67c7109895", "html_url": "https://github.com/rust-lang/rust/commit/bf248c82e86f0205d953a04b0ed07e67c7109895"}, {"sha": "e565bb0326108534fab12aa9cfc7d56f2eb97aec", "url": "https://api.github.com/repos/rust-lang/rust/commits/e565bb0326108534fab12aa9cfc7d56f2eb97aec", "html_url": "https://github.com/rust-lang/rust/commit/e565bb0326108534fab12aa9cfc7d56f2eb97aec"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "0b76790c0097e05ca2d136b4503b3b0022349ed1", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5885e6d45358139d74c8b2a52df01708fac6bbc8/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5885e6d45358139d74c8b2a52df01708fac6bbc8/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=5885e6d45358139d74c8b2a52df01708fac6bbc8", "patch": "@@ -2287,6 +2287,7 @@ pub const unsafe fn copy<T>(src: *const T, dst: *mut T, count: usize) {\n /// // Now the box is fine\n /// assert_eq!(*v, 42);\n /// ```\n+#[doc(alias = \"memset\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_const_unstable(feature = \"const_ptr_write\", issue = \"86302\")]\n #[inline]"}, {"sha": "1aaa274a054345e2b43d6a6ac88a22705a4b0ef9", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5885e6d45358139d74c8b2a52df01708fac6bbc8/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5885e6d45358139d74c8b2a52df01708fac6bbc8/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=5885e6d45358139d74c8b2a52df01708fac6bbc8", "patch": "@@ -1412,6 +1412,7 @@ impl<T: ?Sized> *mut T {\n     /// See [`ptr::write_bytes`] for safety concerns and examples.\n     ///\n     /// [`ptr::write_bytes`]: crate::ptr::write_bytes()\n+    #[doc(alias = \"memset\")]\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n     #[rustc_const_unstable(feature = \"const_ptr_write\", issue = \"86302\")]\n     #[inline(always)]"}]}