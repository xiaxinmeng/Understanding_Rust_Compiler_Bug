{"sha": "84a8f8dedf0b16561c1f0992f8d251185c4409f9", "node_id": "C_kwDOAAsO6NoAKDg0YThmOGRlZGYwYjE2NTYxYzFmMDk5MmY4ZDI1MTE4NWM0NDA5Zjk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-05-09T16:45:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-09T16:45:38Z"}, "message": "Rollup merge of #96844 - Badel2:actually-fix-96583, r=compiler-errors\n\nActually fix ICE from #96583\n\nPR #96746 fixed a very similar bug, so the same logic is used in a different place.\n\nI originally concluded that the two issues (#96583 and #96738) were identical by comparing the backtrace, but I didn't look close enough.", "tree": {"sha": "329e29fdc1c6a6f0dc4cfbda7f6f975a5c5c03d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/329e29fdc1c6a6f0dc4cfbda7f6f975a5c5c03d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84a8f8dedf0b16561c1f0992f8d251185c4409f9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJieUUyCRBK7hj4Ov3rIwAAFrEIAFd+qp43t36GiopFlk2Ki9KJ\nwEkk5UuyL0CnCnYHBSx0p/hr5ErzG/gDKIfab4iIWfefVwr5zoI0vp/oWpOKrZ/g\nVNMaclK9kpzJp6osS6QxH5539sIt++DbSjbMJXFPW/b+MehVOGybQNgoqWGvs7aT\n4wi5e4VYEHO3X6CEdV8kasvoyuuixpJbmAw82HXNkN8kG6W2uZphWC6qsABesKd3\nUixdgA8UQBFjJEubYkI3wsWuLshulYSVeHw9VD5doZhK96gOJLWf5ooaQBQnn7ny\nhqwiOI5tj+bCRMQZ2vJELTLOdbK608eRN4aL0x/c8O15IJpAFJAJuc+My+md8G4=\n=TdWu\n-----END PGP SIGNATURE-----\n", "payload": "tree 329e29fdc1c6a6f0dc4cfbda7f6f975a5c5c03d0\nparent f4bef2e41caf1cd1f7d0f48688499c8607de286e\nparent 84adf0d8dd5fa68050ef0f3684ab701f5fc5a4cf\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1652114738 +0200\ncommitter GitHub <noreply@github.com> 1652114738 +0200\n\nRollup merge of #96844 - Badel2:actually-fix-96583, r=compiler-errors\n\nActually fix ICE from #96583\n\nPR #96746 fixed a very similar bug, so the same logic is used in a different place.\n\nI originally concluded that the two issues (#96583 and #96738) were identical by comparing the backtrace, but I didn't look close enough.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84a8f8dedf0b16561c1f0992f8d251185c4409f9", "html_url": "https://github.com/rust-lang/rust/commit/84a8f8dedf0b16561c1f0992f8d251185c4409f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84a8f8dedf0b16561c1f0992f8d251185c4409f9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4bef2e41caf1cd1f7d0f48688499c8607de286e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4bef2e41caf1cd1f7d0f48688499c8607de286e", "html_url": "https://github.com/rust-lang/rust/commit/f4bef2e41caf1cd1f7d0f48688499c8607de286e"}, {"sha": "84adf0d8dd5fa68050ef0f3684ab701f5fc5a4cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/84adf0d8dd5fa68050ef0f3684ab701f5fc5a4cf", "html_url": "https://github.com/rust-lang/rust/commit/84adf0d8dd5fa68050ef0f3684ab701f5fc5a4cf"}], "stats": {"total": 50, "additions": 37, "deletions": 13}, "files": [{"sha": "f3a5b9f13dd1bac3c123a487f1b366e178bfa2bf", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/84a8f8dedf0b16561c1f0992f8d251185c4409f9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a8f8dedf0b16561c1f0992f8d251185c4409f9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=84a8f8dedf0b16561c1f0992f8d251185c4409f9", "patch": "@@ -44,7 +44,7 @@ use rustc_middle::ty::adjustment::{Adjust, Adjustment, AllowTwoPhase};\n use rustc_middle::ty::error::ExpectedFound;\n use rustc_middle::ty::error::TypeError::{FieldMisMatch, Sorts};\n use rustc_middle::ty::subst::SubstsRef;\n-use rustc_middle::ty::{self, AdtKind, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, AdtKind, DefIdTree, Ty, TypeFoldable};\n use rustc_session::parse::feature_err;\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::lev_distance::find_best_match_for_name;\n@@ -2034,17 +2034,26 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         base: &'tcx hir::Expr<'tcx>,\n         def_id: DefId,\n     ) {\n-        let local_id = def_id.expect_local();\n-        let hir_id = self.tcx.hir().local_def_id_to_hir_id(local_id);\n-        let node = self.tcx.hir().get(hir_id);\n-\n-        if let Some(fields) = node.tuple_fields() {\n-            let kind = match self.tcx.opt_def_kind(local_id) {\n-                Some(DefKind::Ctor(of, _)) => of,\n-                _ => return,\n-            };\n+        if let Some(local_id) = def_id.as_local() {\n+            let hir_id = self.tcx.hir().local_def_id_to_hir_id(local_id);\n+            let node = self.tcx.hir().get(hir_id);\n+\n+            if let Some(fields) = node.tuple_fields() {\n+                let kind = match self.tcx.opt_def_kind(local_id) {\n+                    Some(DefKind::Ctor(of, _)) => of,\n+                    _ => return,\n+                };\n \n-            suggest_call_constructor(base.span, kind, fields.len(), err);\n+                suggest_call_constructor(base.span, kind, fields.len(), err);\n+            }\n+        } else {\n+            // The logic here isn't smart but `associated_item_def_ids`\n+            // doesn't work nicely on local.\n+            if let DefKind::Ctor(of, _) = self.tcx.def_kind(def_id) {\n+                let parent_def_id = self.tcx.parent(def_id);\n+                let fields = self.tcx.associated_item_def_ids(parent_def_id);\n+                suggest_call_constructor(base.span, of, fields.len(), err);\n+            }\n         }\n     }\n "}, {"sha": "ce2556f869c7c13e942e64c3017813f30a60cbed", "filename": "src/test/ui/typeck/issue-96738.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/84a8f8dedf0b16561c1f0992f8d251185c4409f9/src%2Ftest%2Fui%2Ftypeck%2Fissue-96738.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a8f8dedf0b16561c1f0992f8d251185c4409f9/src%2Ftest%2Fui%2Ftypeck%2Fissue-96738.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-96738.rs?ref=84a8f8dedf0b16561c1f0992f8d251185c4409f9", "patch": "@@ -1,3 +1,4 @@\n fn main() {\n     Some.nonexistent_method(); //~ ERROR: no method named `nonexistent_method` found\n+    Some.nonexistent_field; //~ ERROR: no field `nonexistent_field`\n }"}, {"sha": "32f53849848c75abd5e599818799c2fa87215c99", "filename": "src/test/ui/typeck/issue-96738.stderr", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/84a8f8dedf0b16561c1f0992f8d251185c4409f9/src%2Ftest%2Fui%2Ftypeck%2Fissue-96738.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/84a8f8dedf0b16561c1f0992f8d251185c4409f9/src%2Ftest%2Fui%2Ftypeck%2Fissue-96738.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-96738.stderr?ref=84a8f8dedf0b16561c1f0992f8d251185c4409f9", "patch": "@@ -11,6 +11,20 @@ help: call the constructor\n LL |     (Some)(_).nonexistent_method();\n    |     +    ++++\n \n-error: aborting due to previous error\n+error[E0609]: no field `nonexistent_field` on type `fn(_) -> Option<_> {Option::<_>::Some}`\n+  --> $DIR/issue-96738.rs:3:10\n+   |\n+LL |     Some.nonexistent_field;\n+   |     ---- ^^^^^^^^^^^^^^^^^\n+   |     |\n+   |     this is the constructor of an enum variant\n+   |\n+help: call the constructor\n+   |\n+LL |     (Some)(_).nonexistent_field;\n+   |     +    ++++\n+\n+error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0599`.\n+Some errors have detailed explanations: E0599, E0609.\n+For more information about an error, try `rustc --explain E0599`."}]}