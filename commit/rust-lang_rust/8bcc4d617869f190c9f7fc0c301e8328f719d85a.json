{"sha": "8bcc4d617869f190c9f7fc0c301e8328f719d85a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiY2M0ZDYxNzg2OWYxOTBjOWY3ZmMwYzMwMWU4MzI4ZjcxOWQ4NWE=", "commit": {"author": {"name": "Ryan Levick", "email": "ryan.levick@gmail.com", "date": "2020-08-28T09:22:16Z"}, "committer": {"name": "Ryan Levick", "email": "ryan.levick@gmail.com", "date": "2020-08-28T09:22:21Z"}, "message": "Switch to asm! macro and use brk instruction on ARM", "tree": {"sha": "50c158ee96ea3ff471bf321ba3b461d09c4e23ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50c158ee96ea3ff471bf321ba3b461d09c4e23ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bcc4d617869f190c9f7fc0c301e8328f719d85a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bcc4d617869f190c9f7fc0c301e8328f719d85a", "html_url": "https://github.com/rust-lang/rust/commit/8bcc4d617869f190c9f7fc0c301e8328f719d85a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bcc4d617869f190c9f7fc0c301e8328f719d85a/comments", "author": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "970e7793bfefd3d93034869ef8672affa02fff24", "url": "https://api.github.com/repos/rust-lang/rust/commits/970e7793bfefd3d93034869ef8672affa02fff24", "html_url": "https://github.com/rust-lang/rust/commit/970e7793bfefd3d93034869ef8672affa02fff24"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "a09234e09ff9bdf0ba87e32f2d5e7bc9d30896c7", "filename": "library/panic_abort/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8bcc4d617869f190c9f7fc0c301e8328f719d85a/library%2Fpanic_abort%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bcc4d617869f190c9f7fc0c301e8328f719d85a/library%2Fpanic_abort%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_abort%2Fsrc%2Flib.rs?ref=8bcc4d617869f190c9f7fc0c301e8328f719d85a", "patch": "@@ -17,7 +17,7 @@\n #![feature(panic_runtime)]\n #![feature(staged_api)]\n #![feature(rustc_attrs)]\n-#![feature(llvm_asm)]\n+#![feature(asm)]\n \n use core::any::Any;\n \n@@ -62,11 +62,11 @@ pub unsafe extern \"C\" fn __rust_start_panic(_payload: usize) -> u32 {\n                 const FAST_FAIL_FATAL_APP_EXIT: usize = 7;\n                 cfg_if::cfg_if! {\n                     if #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))] {\n-                        llvm_asm!(\"int $$0x29\" :: \"{ecx}\"(FAST_FAIL_FATAL_APP_EXIT) ::: volatile);\n+                        asm!(\"int $$0x29\", in(\"ecx\") FAST_FAIL_FATAL_APP_EXIT);\n                     } else if #[cfg(target_arch = \"arm\")] {\n-                        llvm_asm!(\".inst 0xDEFB\" :: \"{r0}\"(FAST_FAIL_FATAL_APP_EXIT) ::: volatile);\n+                        asm!(\"brk 0xDEFB\", in(\"r0\") FAST_FAIL_FATAL_APP_EXIT);\n                     } else if #[cfg(target_arch = \"aarch64\")] {\n-                        llvm_asm!(\".inst 0xF003\" :: \"{x0}\"(FAST_FAIL_FATAL_APP_EXIT) ::: volatile);\n+                        asm!(\"brk 0xF003\", in(\"x0\") FAST_FAIL_FATAL_APP_EXIT);\n                     } else {\n                         core::intrinsics::abort();\n                     }"}, {"sha": "03ddc3e646180d97643a3ee57bd4c4c46e524d9b", "filename": "library/std/src/sys/windows/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8bcc4d617869f190c9f7fc0c301e8328f719d85a/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bcc4d617869f190c9f7fc0c301e8328f719d85a/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs?ref=8bcc4d617869f190c9f7fc0c301e8328f719d85a", "patch": "@@ -310,13 +310,13 @@ pub fn abort_internal() -> ! {\n     unsafe {\n         cfg_if::cfg_if! {\n             if #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))] {\n-                llvm_asm!(\"int $$0x29\" :: \"{ecx}\"(FAST_FAIL_FATAL_APP_EXIT) ::: volatile);\n+                asm!(\"int $$0x29\", in(\"ecx\") FAST_FAIL_FATAL_APP_EXIT);\n                 crate::intrinsics::unreachable();\n             } else if #[cfg(target_arch = \"arm\")] {\n-                llvm_asm!(\".inst 0xDEFB\" :: \"{r0}\"(FAST_FAIL_FATAL_APP_EXIT) ::: volatile);\n+                asm!(\"brk 0xDEFB\", in(\"r0\") FAST_FAIL_FATAL_APP_EXIT);\n                 crate::intrinsics::unreachable();\n             } else if #[cfg(target_arch = \"aarch64\")] {\n-                llvm_asm!(\".inst 0xF003\" :: \"{x0}\"(FAST_FAIL_FATAL_APP_EXIT) ::: volatile);\n+                asm!(\"brk 0xF003\", in(\"x0\") FAST_FAIL_FATAL_APP_EXIT);\n                 crate::intrinsics::unreachable();\n             }\n         }"}]}