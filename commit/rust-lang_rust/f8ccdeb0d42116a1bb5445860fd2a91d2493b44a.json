{"sha": "f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4Y2NkZWIwZDQyMTE2YTFiYjU0NDU4NjBmZDJhOTFkMjQ5M2I0NGE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-16T06:15:04Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-17T06:52:21Z"}, "message": "Rollup merge of #57929 - GuillaumeGomez:rustodc-remove-old-style-files, r=ollie27\n\nRustdoc remove old style files\n\nReopening of #56577 (which I can't seem to reopen...).\n\nI made the flag unstable so with this change, what was blocking the PR is now gone I assume.", "tree": {"sha": "e71a5b269da2e592141988229a5bb7f1505c5e95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e71a5b269da2e592141988229a5bb7f1505c5e95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlxpBKYACgkQ/vbIBR0O\nATx7Ug//XCi/IQQ1sQO8hva25NIYAqcX+hdfU4I9qcbVcZ4ap78LMWXZu9a4P4JD\nwPpi77rhieOKUIV5t+cu8JceI/t4lklt277hPbaB6EDhBNUhcNlf4LORklDxagej\nafUk3+bYdK0a3HCSxY6pWSuHux50vfMt90UQzxQFR0q+xpq8JUNA5DFQaAas6zZS\nCRjBbSuKEuTeA0Rc1OwM+8tJj+5QsxjKByScilvkaAnnwmTURaTXnhAswOgjzVG/\nWtOv6MgzbPdn9N5xXYvuHdj1g1ylajelmMlhKwC7JKgYaKDkUUWH/2lgpP3F/TH7\nv28bQ7eJ+N7B0SbZADqnx3Vo6jcwE5JGF7DbhkK9lvV9c2xH2B4YYDvNjoLksQci\ntx5W3Ogox44h3/zgUZGROBgqtpRAd/U/CFnQTKvr3YiIeCH15pxRupHNl06SWZde\nP74GUxBoA5IXUEqaw47ZS91M5TARPcrh0YlHRwP0kChVz3TesTwQKP40AVlf/968\nQjIZGBh0Og+bDrOuYbYCa7Fr/YfhzShcW96c6fPxXjXz1Y71xgjKBR1uLgJceowC\n8o60aQMDeTIHzge6NegUb3teIziWQ1+KqPgmayLyzJhnmyvaxP8PySFk9SCiq5fC\nsgELS4aQL4Cy4x/cutLzCbahxaV0X7m+2xGDpvyh2Xas+Ism2Bs=\n=IDUB\n-----END PGP SIGNATURE-----", "payload": "tree e71a5b269da2e592141988229a5bb7f1505c5e95\nparent 4739cd8fea1cb3d729bb5d8899b9831424dd19d2\nparent d26475505b4c2bfc6299d3c6c38b1963c3bd86e0\nauthor kennytm <kennytm@gmail.com> 1550297704 +0800\ncommitter kennytm <kennytm@gmail.com> 1550386341 +0800\n\nRollup merge of #57929 - GuillaumeGomez:rustodc-remove-old-style-files, r=ollie27\n\nRustdoc remove old style files\n\nReopening of #56577 (which I can't seem to reopen...).\n\nI made the flag unstable so with this change, what was blocking the PR is now gone I assume.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "html_url": "https://github.com/rust-lang/rust/commit/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4739cd8fea1cb3d729bb5d8899b9831424dd19d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4739cd8fea1cb3d729bb5d8899b9831424dd19d2", "html_url": "https://github.com/rust-lang/rust/commit/4739cd8fea1cb3d729bb5d8899b9831424dd19d2"}, {"sha": "d26475505b4c2bfc6299d3c6c38b1963c3bd86e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d26475505b4c2bfc6299d3c6c38b1963c3bd86e0", "html_url": "https://github.com/rust-lang/rust/commit/d26475505b4c2bfc6299d3c6c38b1963c3bd86e0"}], "stats": {"total": 87, "additions": 64, "deletions": 23}, "files": [{"sha": "aeb15821b0bb742c32e35d8cccb2e70fd048f675", "filename": "src/bootstrap/bin/rustdoc.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustdoc.rs?ref=f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "patch": "@@ -16,6 +16,7 @@ fn main() {\n     let libdir = env::var_os(\"RUSTDOC_LIBDIR\").expect(\"RUSTDOC_LIBDIR was not set\");\n     let stage = env::var(\"RUSTC_STAGE\").expect(\"RUSTC_STAGE was not set\");\n     let sysroot = env::var_os(\"RUSTC_SYSROOT\").expect(\"RUSTC_SYSROOT was not set\");\n+    let mut has_unstable = false;\n \n     use std::str::FromStr;\n \n@@ -54,9 +55,22 @@ fn main() {\n     // it up so we can make rustdoc print this into the docs\n     if let Some(version) = env::var_os(\"RUSTDOC_CRATE_VERSION\") {\n         // This \"unstable-options\" can be removed when `--crate-version` is stabilized\n-        cmd.arg(\"-Z\")\n-           .arg(\"unstable-options\")\n-           .arg(\"--crate-version\").arg(version);\n+        if !has_unstable {\n+            cmd.arg(\"-Z\")\n+               .arg(\"unstable-options\");\n+        }\n+        cmd.arg(\"--crate-version\").arg(version);\n+        has_unstable = true;\n+    }\n+\n+    // Needed to be able to run all rustdoc tests.\n+    if let Some(_) = env::var_os(\"RUSTDOC_GENERATE_REDIRECT_PAGES\") {\n+        // This \"unstable-options\" can be removed when `--generate-redirect-pages` is stabilized\n+        if !has_unstable {\n+            cmd.arg(\"-Z\")\n+               .arg(\"unstable-options\");\n+        }\n+        cmd.arg(\"--generate-redirect-pages\");\n     }\n \n     if verbose > 1 {"}, {"sha": "660f9b9ef578adeecd41f28f0798aa03c1c771a2", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "patch": "@@ -517,6 +517,7 @@ impl Step for Std {\n             cargo.arg(\"--\")\n                  .arg(\"--markdown-css\").arg(\"rust.css\")\n                  .arg(\"--markdown-no-toc\")\n+                 .arg(\"--generate-redirect-pages\")\n                  .arg(\"--index-page\").arg(&builder.src.join(\"src/doc/index.md\"));\n \n             builder.run(&mut cargo);\n@@ -581,7 +582,9 @@ impl Step for Test {\n         let mut cargo = builder.cargo(compiler, Mode::Test, target, \"doc\");\n         compile::test_cargo(builder, &compiler, target, &mut cargo);\n \n-        cargo.arg(\"--no-deps\").arg(\"-p\").arg(\"test\");\n+        cargo.arg(\"--no-deps\")\n+             .arg(\"-p\").arg(\"test\")\n+             .env(\"RUSTDOC_GENERATE_REDIRECT_PAGES\", \"1\");\n \n         builder.run(&mut cargo);\n         builder.cp_r(&my_out, &out);\n@@ -650,9 +653,9 @@ impl Step for WhitelistedRustc {\n         // We don't want to build docs for internal compiler dependencies in this\n         // step (there is another step for that). Therefore, we whitelist the crates\n         // for which docs must be built.\n-        cargo.arg(\"--no-deps\");\n         for krate in &[\"proc_macro\"] {\n-            cargo.arg(\"-p\").arg(krate);\n+            cargo.arg(\"-p\").arg(krate)\n+                 .env(\"RUSTDOC_GENERATE_REDIRECT_PAGES\", \"1\");\n         }\n \n         builder.run(&mut cargo);"}, {"sha": "91fbe877cb7d9f7fa661e60c0fa4b29d9e65646e", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "patch": "@@ -192,6 +192,8 @@ pub struct RenderOptions {\n     /// If false, the `select` element to have search filtering by crates on rendered docs\n     /// won't be generated.\n     pub generate_search_filter: bool,\n+    /// Option (disabled by default) to generate files used by RLS and some other tools.\n+    pub generate_redirect_pages: bool,\n }\n \n impl Options {\n@@ -436,6 +438,7 @@ impl Options {\n         let static_root_path = matches.opt_str(\"static-root-path\");\n         let generate_search_filter = !matches.opt_present(\"disable-per-crate-search\");\n         let persist_doctests = matches.opt_str(\"persist-doctests\").map(PathBuf::from);\n+        let generate_redirect_pages = matches.opt_present(\"generate-redirect-pages\");\n \n         let (lint_opts, describe_lints, lint_cap) = get_cmd_lint_options(matches, error_format);\n \n@@ -480,6 +483,7 @@ impl Options {\n                 markdown_css,\n                 markdown_playground_url,\n                 generate_search_filter,\n+                generate_redirect_pages,\n             }\n         })\n     }"}, {"sha": "692d87966887729890da288a4f8a6aa78fc02bf6", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "patch": "@@ -148,6 +148,8 @@ struct SharedContext {\n     /// If false, the `select` element to have search filtering by crates on rendered docs\n     /// won't be generated.\n     pub generate_search_filter: bool,\n+    /// Option disabled by default to generate files used by RLS and some other tools.\n+    pub generate_redirect_pages: bool,\n }\n \n impl SharedContext {\n@@ -516,6 +518,7 @@ pub fn run(mut krate: clean::Crate,\n         resource_suffix,\n         static_root_path,\n         generate_search_filter,\n+        generate_redirect_pages,\n         ..\n     } = options;\n \n@@ -545,6 +548,7 @@ pub fn run(mut krate: clean::Crate,\n         resource_suffix,\n         static_root_path,\n         generate_search_filter,\n+        generate_redirect_pages,\n     };\n \n     // If user passed in `--playground-url` arg, we fill in crate name here\n@@ -2246,17 +2250,18 @@ impl Context {\n                 if !self.render_redirect_pages {\n                     all.append(full_path(self, &item), &item_type);\n                 }\n-                // Redirect from a sane URL using the namespace to Rustdoc's\n-                // URL for the page.\n-                let redir_name = format!(\"{}.{}.html\", name, item_type.name_space());\n-                let redir_dst = self.dst.join(redir_name);\n-                if let Ok(redirect_out) = OpenOptions::new().create_new(true)\n-                                                            .write(true)\n-                                                            .open(&redir_dst) {\n-                    let mut redirect_out = BufWriter::new(redirect_out);\n-                    try_err!(layout::redirect(&mut redirect_out, file_name), &redir_dst);\n+                if self.shared.generate_redirect_pages {\n+                    // Redirect from a sane URL using the namespace to Rustdoc's\n+                    // URL for the page.\n+                    let redir_name = format!(\"{}.{}.html\", name, item_type.name_space());\n+                    let redir_dst = self.dst.join(redir_name);\n+                    if let Ok(redirect_out) = OpenOptions::new().create_new(true)\n+                                                                .write(true)\n+                                                                .open(&redir_dst) {\n+                        let mut redirect_out = BufWriter::new(redirect_out);\n+                        try_err!(layout::redirect(&mut redirect_out, file_name), &redir_dst);\n+                    }\n                 }\n-\n                 // If the item is a macro, redirect from the old macro URL (with !)\n                 // to the new one (without).\n                 if item_type == ItemType::Macro {"}, {"sha": "43b366535159ce468a075f512c9888107267a36d", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "patch": "@@ -345,6 +345,11 @@ fn opts() -> Vec<RustcOptGroup> {\n                        \"Directory to persist doctest executables into\",\n                        \"PATH\")\n         }),\n+        unstable(\"generate-redirect-pages\", |o| {\n+            o.optflag(\"\",\n+                      \"generate-redirect-pages\",\n+                      \"Generate extra pages to support legacy URLs and tool links\")\n+        }),\n     ]\n }\n "}, {"sha": "c6bac51c5740dcd6da42b9af545f843a53724fcd", "filename": "src/test/rustdoc/issue-19190.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fissue-19190.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fissue-19190.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-19190.rs?ref=f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "patch": "@@ -1,3 +1,5 @@\n+// compile-flags:-Z unstable-options --generate-redirect-pages\n+\n use std::ops::Deref;\n \n pub struct Foo;"}, {"sha": "b054145a4831a6d681516b560c1c19ec072162bb", "filename": "src/test/rustdoc/issue-21092.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fissue-21092.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fissue-21092.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-21092.rs?ref=f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "patch": "@@ -3,7 +3,6 @@\n \n extern crate issue_21092;\n \n-// @has issue_21092/Bar.t.html\n // @has issue_21092/struct.Bar.html\n // @has - '//*[@id=\"associatedtype.Bar\"]' 'type Bar = i32'\n pub use issue_21092::{Foo, Bar};"}, {"sha": "33f7646ced68b4ef1f13442ff2b4cd3f23edc2cc", "filename": "src/test/rustdoc/issue-35169-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fissue-35169-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fissue-35169-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-35169-2.rs?ref=f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "patch": "@@ -23,7 +23,6 @@ impl DerefMut for Bar {\n     fn deref_mut(&mut self) -> &mut Foo { loop {} }\n }\n \n-// @has issue_35169_2/Bar.t.html\n // @has issue_35169_2/struct.Bar.html\n // @has - '//*[@id=\"by_ref.v\"]' 'fn by_ref(&self)'\n // @has - '//*[@id=\"method.by_ref\"]' 'fn by_ref(&self)'"}, {"sha": "04fffc40572a6b5515cfad66c6f99b924c78261f", "filename": "src/test/rustdoc/issue-35169.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fissue-35169.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fissue-35169.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-35169.rs?ref=f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "patch": "@@ -18,7 +18,6 @@ impl Deref for Bar {\n     fn deref(&self) -> &Foo { loop {} }\n }\n \n-// @has issue_35169/Bar.t.html\n // @has issue_35169/struct.Bar.html\n // @has - '//*[@id=\"by_ref.v\"]' 'fn by_ref(&self)'\n // @has - '//*[@id=\"method.by_ref\"]' 'fn by_ref(&self)'"}, {"sha": "fb4f02ad16052a8bc3f0c746733f9df62fdd14e7", "filename": "src/test/rustdoc/macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmacros.rs?ref=f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "patch": "@@ -2,8 +2,6 @@\n // @has - //pre '() => { ... };'\n // @has - //pre '($a:tt) => { ... };'\n // @has - //pre '($e:expr) => { ... };'\n-// @has macros/macro.my_macro!.html\n-// @has - //a 'macro.my_macro.html'\n #[macro_export]\n macro_rules! my_macro {\n     () => [];"}, {"sha": "353ce10243e0055d8ee570b77bf4d9f8e786d076", "filename": "src/test/rustdoc/src-links.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fsrc-links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fsrc-links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsrc-links.rs?ref=f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "patch": "@@ -14,13 +14,11 @@ pub mod bar {\n     // @has foo/bar/baz/index.html '//a/@href' '../../../src/foo/src-links.rs.html'\n     pub mod baz {\n         /// Dox\n-        // @has foo/bar/baz/baz.v.html\n         // @has foo/bar/baz/fn.baz.html '//a/@href' '../../../src/foo/src-links.rs.html'\n         pub fn baz() { }\n     }\n \n     /// Dox\n-    // @has foo/bar/Foobar.t.html\n     // @has foo/bar/trait.Foobar.html '//a/@href' '../../src/foo/src-links.rs.html'\n     pub trait Foobar { fn dummy(&self) { } }\n "}, {"sha": "235f0e852da2ca9dd4bb49bb34a8877de71c7406", "filename": "src/test/rustdoc/structfields.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fstructfields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fstructfields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstructfields.rs?ref=f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "patch": "@@ -1,3 +1,5 @@\n+// compile-flags:-Z unstable-options --generate-redirect-pages\n+\n // @has structfields/Foo.t.html\n // @has - struct.Foo.html\n // @has structfields/struct.Foo.html"}, {"sha": "a076f8a3c5ec799a319797deec73ca4ec208fa98", "filename": "src/test/rustdoc/without-redirect.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fwithout-redirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ccdeb0d42116a1bb5445860fd2a91d2493b44a/src%2Ftest%2Frustdoc%2Fwithout-redirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fwithout-redirect.rs?ref=f8ccdeb0d42116a1bb5445860fd2a91d2493b44a", "patch": "@@ -0,0 +1,13 @@\n+#![crate_name = \"foo\"]\n+\n+// @has foo/macro.bar.html\n+// @has foo/macro.bar!.html\n+// @!has foo/bar.m.html\n+#[macro_export]\n+macro_rules! bar {\n+    () => {}\n+}\n+\n+// @has foo/struct.Bar.html\n+// @!has foo/Bar.t.html\n+pub struct Bar;"}]}