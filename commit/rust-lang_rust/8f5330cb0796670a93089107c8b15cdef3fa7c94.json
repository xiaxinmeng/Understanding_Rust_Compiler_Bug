{"sha": "8f5330cb0796670a93089107c8b15cdef3fa7c94", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNTMzMGNiMDc5NjY3MGE5MzA4OTEwN2M4YjE1Y2RlZjNmYTdjOTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-27T21:20:59Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-27T21:20:59Z"}, "message": "More robust highlighting", "tree": {"sha": "02ce05a2222adb4ab1fb3464da926ec0fd0fb234", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02ce05a2222adb4ab1fb3464da926ec0fd0fb234"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f5330cb0796670a93089107c8b15cdef3fa7c94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f5330cb0796670a93089107c8b15cdef3fa7c94", "html_url": "https://github.com/rust-lang/rust/commit/8f5330cb0796670a93089107c8b15cdef3fa7c94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f5330cb0796670a93089107c8b15cdef3fa7c94/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "010075be6a6b866f6a3f981a61ad2e746cb44f00", "url": "https://api.github.com/repos/rust-lang/rust/commits/010075be6a6b866f6a3f981a61ad2e746cb44f00", "html_url": "https://github.com/rust-lang/rust/commit/010075be6a6b866f6a3f981a61ad2e746cb44f00"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "81153b7e62de83f5312ec59d58ed21b342bcd215", "filename": "code/src/extension.ts", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8f5330cb0796670a93089107c8b15cdef3fa7c94/code%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/8f5330cb0796670a93089107c8b15cdef3fa7c94/code%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/code%2Fsrc%2Fextension.ts?ref=8f5330cb0796670a93089107c8b15cdef3fa7c94", "patch": "@@ -134,6 +134,14 @@ export function activate(context: vscode.ExtensionContext) {\n             textDocumentContentProvider.eventEmitter.fire(uris.syntaxTree)\n         })\n     }, null, context.subscriptions)\n+    vscode.window.onDidChangeActiveTextEditor(async (editor) => {\n+        if (!editor || editor.document.languageId != 'rust') return\n+        let params: lc.TextDocumentIdentifier = {\n+            uri: editor.document.uri.toString()\n+        }\n+        let decorations = await client.sendRequest<Decoration[]>(\"m/decorationsRequest\", params)\n+        setHighlights(editor, decorations)\n+    })\n }\n \n // We need to order this after LS updates, but there's no API for that."}, {"sha": "ec5421f06a42f9d315a436b6dbbd66e1c8a51d3e", "filename": "crates/server/src/main_loop/handlers.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8f5330cb0796670a93089107c8b15cdef3fa7c94/crates%2Fserver%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f5330cb0796670a93089107c8b15cdef3fa7c94/crates%2Fserver%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=8f5330cb0796670a93089107c8b15cdef3fa7c94", "patch": "@@ -7,7 +7,7 @@ use languageserver_types::{\n     CompletionItem,\n };\n use serde_json::{to_value, from_value};\n-use libanalysis::{Query, QuickFix};\n+use libanalysis::{Query, QuickFix, FileId};\n use libeditor;\n use libsyntax2::{\n     TextUnit,\n@@ -401,18 +401,33 @@ pub fn publish_diagnostics(\n     Ok(req::PublishDiagnosticsParams { uri, diagnostics })\n }\n \n+pub fn handle_decorations(\n+    world: ServerWorld,\n+    params: TextDocumentIdentifier,\n+) -> Result<Vec<Decoration>> {\n+    let file_id = params.try_conv_with(&world)?;\n+    highlight(&world, file_id)\n+}\n+\n pub fn publish_decorations(\n     world: ServerWorld,\n     uri: Url\n ) -> Result<req::PublishDecorationsParams> {\n     let file_id = world.uri_to_file_id(&uri)?;\n+    Ok(req::PublishDecorationsParams {\n+        uri,\n+        decorations: highlight(&world, file_id)?\n+    })\n+}\n+\n+fn highlight(world: &ServerWorld, file_id: FileId) -> Result<Vec<Decoration>> {\n     let file = world.analysis().file_syntax(file_id)?;\n     let line_index = world.analysis().file_line_index(file_id)?;\n-    let decorations = libeditor::highlight(&file)\n+    let res = libeditor::highlight(&file)\n         .into_iter()\n         .map(|h| Decoration {\n             range: h.range.conv_with(&line_index),\n             tag: h.tag,\n         }).collect();\n-    Ok(req::PublishDecorationsParams { uri, decorations })\n+    Ok(res)\n }"}, {"sha": "da1121cb44f1e856989cf949012c5d23d209cbb9", "filename": "crates/server/src/main_loop/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8f5330cb0796670a93089107c8b15cdef3fa7c94/crates%2Fserver%2Fsrc%2Fmain_loop%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f5330cb0796670a93089107c8b15cdef3fa7c94/crates%2Fserver%2Fsrc%2Fmain_loop%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2Fsrc%2Fmain_loop%2Fmod.rs?ref=8f5330cb0796670a93089107c8b15cdef3fa7c94", "patch": "@@ -30,6 +30,7 @@ use {\n         handle_join_lines,\n         handle_completion,\n         handle_runnables,\n+        handle_decorations,\n     },\n };\n \n@@ -157,6 +158,9 @@ fn on_request(\n     handle_request_on_threadpool::<req::JoinLines>(\n         &mut req, pool, world, sender, handle_join_lines,\n     )?;\n+    handle_request_on_threadpool::<req::DecorationsRequest>(\n+        &mut req, pool, world, sender, handle_decorations,\n+    )?;\n     dispatch::handle_request::<req::ExecuteCommand, _>(&mut req, |params, resp| {\n         io.send(RawMsg::Response(resp.into_response(Ok(None))?));\n "}, {"sha": "999fdb7c23570beb615fef12e1cb9297219742c5", "filename": "crates/server/src/req.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8f5330cb0796670a93089107c8b15cdef3fa7c94/crates%2Fserver%2Fsrc%2Freq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f5330cb0796670a93089107c8b15cdef3fa7c94/crates%2Fserver%2Fsrc%2Freq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2Fsrc%2Freq.rs?ref=8f5330cb0796670a93089107c8b15cdef3fa7c94", "patch": "@@ -84,6 +84,14 @@ pub struct FindMatchingBraceParams {\n     pub offsets: Vec<Position>,\n }\n \n+pub enum DecorationsRequest {}\n+\n+impl Request for DecorationsRequest {\n+    type Params = TextDocumentIdentifier;\n+    type Result = Vec<Decoration>;\n+    const METHOD: &'static str = \"m/decorationsRequest\";\n+}\n+\n pub enum PublishDecorations {}\n \n impl Notification for PublishDecorations {"}]}