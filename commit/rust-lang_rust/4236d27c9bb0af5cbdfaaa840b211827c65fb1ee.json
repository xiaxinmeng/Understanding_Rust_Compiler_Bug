{"sha": "4236d27c9bb0af5cbdfaaa840b211827c65fb1ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMzZkMjdjOWJiMGFmNWNiZGZhYWE4NDBiMjExODI3YzY1ZmIxZWU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-26T23:45:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-26T23:45:30Z"}, "message": "Rollup merge of #78412 - camelid:cleanup-hash-docs, r=jonas-schievink\n\nImprove formatting of hash collections docs", "tree": {"sha": "f59af68727324057f7cf49b2b9fafface6d64b65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f59af68727324057f7cf49b2b9fafface6d64b65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4236d27c9bb0af5cbdfaaa840b211827c65fb1ee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfl1+bCRBK7hj4Ov3rIwAAdHIIALHw6nB1C7RcjJyzYXAiVAKI\n6oeN7pjQt3YCDHaMvDCYc+Ojlk8FtuAMkZgXQWXV2qEAXo2qbzvK5JmuHakZEzNl\njl328n1ta7CFR7kiQRA38NYmEtX1dXbBuIjb9yB4b/JyjpRewR2iF52BPIYKqGAX\n3FaRks1X2224AX81oVpgmmQHog9MRRbsFhCau6aFIl7yEblhNLZVbBKFbnw2OhVt\nGpIm5fdmmwSfCUxZJbGmTD4JQzTkN6eM7yfVL0VbJYdun5UXkEG4OqaqdzAwjgTp\n//+v6/Ps7sVEItgatcQFN9K0qt0CdU/yVRB4LPcXXyk+Tg9HSn41Pgb3/EoYkrY=\n=5aI8\n-----END PGP SIGNATURE-----\n", "payload": "tree f59af68727324057f7cf49b2b9fafface6d64b65\nparent 7824d9abbd06b212a45d79bf2dea6d24b3509eb9\nparent 59f108885ed38c7f7049a1830b7c50205989cb17\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1603755930 +0900\ncommitter GitHub <noreply@github.com> 1603755930 +0900\n\nRollup merge of #78412 - camelid:cleanup-hash-docs, r=jonas-schievink\n\nImprove formatting of hash collections docs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4236d27c9bb0af5cbdfaaa840b211827c65fb1ee", "html_url": "https://github.com/rust-lang/rust/commit/4236d27c9bb0af5cbdfaaa840b211827c65fb1ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4236d27c9bb0af5cbdfaaa840b211827c65fb1ee/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7824d9abbd06b212a45d79bf2dea6d24b3509eb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7824d9abbd06b212a45d79bf2dea6d24b3509eb9", "html_url": "https://github.com/rust-lang/rust/commit/7824d9abbd06b212a45d79bf2dea6d24b3509eb9"}, {"sha": "59f108885ed38c7f7049a1830b7c50205989cb17", "url": "https://api.github.com/repos/rust-lang/rust/commits/59f108885ed38c7f7049a1830b7c50205989cb17", "html_url": "https://github.com/rust-lang/rust/commit/59f108885ed38c7f7049a1830b7c50205989cb17"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "d1244c2ca538c8b633b2098ac586b2b75e1f2173", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4236d27c9bb0af5cbdfaaa840b211827c65fb1ee/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4236d27c9bb0af5cbdfaaa840b211827c65fb1ee/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=4236d27c9bb0af5cbdfaaa840b211827c65fb1ee", "patch": "@@ -606,7 +606,7 @@ where\n     }\n \n     /// Tries to reserve capacity for at least `additional` more elements to be inserted\n-    /// in the given `HashMap<K,V>`. The collection may reserve more space to avoid\n+    /// in the given `HashMap<K, V>`. The collection may reserve more space to avoid\n     /// frequent reallocations.\n     ///\n     /// # Errors\n@@ -619,6 +619,7 @@ where\n     /// ```\n     /// #![feature(try_reserve)]\n     /// use std::collections::HashMap;\n+    ///\n     /// let mut map: HashMap<&str, isize> = HashMap::new();\n     /// map.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");\n     /// ```\n@@ -898,14 +899,14 @@ where\n \n     /// Retains only the elements specified by the predicate.\n     ///\n-    /// In other words, remove all pairs `(k, v)` such that `f(&k,&mut v)` returns `false`.\n+    /// In other words, remove all pairs `(k, v)` such that `f(&k, &mut v)` returns `false`.\n     ///\n     /// # Examples\n     ///\n     /// ```\n     /// use std::collections::HashMap;\n     ///\n-    /// let mut map: HashMap<i32, i32> = (0..8).map(|x|(x, x*10)).collect();\n+    /// let mut map: HashMap<i32, i32> = (0..8).map(|x| (x, x*10)).collect();\n     /// map.retain(|&k, _| k % 2 == 0);\n     /// assert_eq!(map.len(), 4);\n     /// ```"}, {"sha": "3299fd12e024e97e8f60f0d9cd13650e8f80eedc", "filename": "library/std/src/collections/hash/set.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4236d27c9bb0af5cbdfaaa840b211827c65fb1ee/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4236d27c9bb0af5cbdfaaa840b211827c65fb1ee/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs?ref=4236d27c9bb0af5cbdfaaa840b211827c65fb1ee", "patch": "@@ -412,7 +412,7 @@ where\n     }\n \n     /// Tries to reserve capacity for at least `additional` more elements to be inserted\n-    /// in the given `HashSet<K,V>`. The collection may reserve more space to avoid\n+    /// in the given `HashSet<K, V>`. The collection may reserve more space to avoid\n     /// frequent reallocations.\n     ///\n     /// # Errors\n@@ -918,7 +918,7 @@ where\n     /// ```\n     /// use std::collections::HashSet;\n     ///\n-    /// let xs = [1,2,3,4,5,6];\n+    /// let xs = [1, 2, 3, 4, 5, 6];\n     /// let mut set: HashSet<i32> = xs.iter().cloned().collect();\n     /// set.retain(|&k| k % 2 == 0);\n     /// assert_eq!(set.len(), 3);"}]}