{"sha": "6be61bcdd6252b529f5a14765fb7cb01be943f66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiZTYxYmNkZDYyNTJiNTI5ZjVhMTQ3NjVmYjdjYjAxYmU5NDNmNjY=", "commit": {"author": {"name": "C4K3", "email": "github25b@c4k3.net", "date": "2017-03-26T05:12:56Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-03-26T05:12:56Z"}, "message": "Warn on unused config options (#1402)\n\nThis will make it clear if a user has misspelled a config option, or if\r\nan option has been changed/removed.", "tree": {"sha": "40d81c5030a5f86bf2985d31328cd9ace76ab02b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40d81c5030a5f86bf2985d31328cd9ace76ab02b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6be61bcdd6252b529f5a14765fb7cb01be943f66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6be61bcdd6252b529f5a14765fb7cb01be943f66", "html_url": "https://github.com/rust-lang/rust/commit/6be61bcdd6252b529f5a14765fb7cb01be943f66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6be61bcdd6252b529f5a14765fb7cb01be943f66/comments", "author": {"login": "C4K3", "id": 4582830, "node_id": "MDQ6VXNlcjQ1ODI4MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4582830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/C4K3", "html_url": "https://github.com/C4K3", "followers_url": "https://api.github.com/users/C4K3/followers", "following_url": "https://api.github.com/users/C4K3/following{/other_user}", "gists_url": "https://api.github.com/users/C4K3/gists{/gist_id}", "starred_url": "https://api.github.com/users/C4K3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/C4K3/subscriptions", "organizations_url": "https://api.github.com/users/C4K3/orgs", "repos_url": "https://api.github.com/users/C4K3/repos", "events_url": "https://api.github.com/users/C4K3/events{/privacy}", "received_events_url": "https://api.github.com/users/C4K3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "488c0b9546ff32234ae5b4d3463ec579e337020b", "url": "https://api.github.com/repos/rust-lang/rust/commits/488c0b9546ff32234ae5b4d3463ec579e337020b", "html_url": "https://github.com/rust-lang/rust/commit/488c0b9546ff32234ae5b4d3463ec579e337020b"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "78c6b91526f040fb4341682fbef39eb8c4511c9f", "filename": "src/config.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6be61bcdd6252b529f5a14765fb7cb01be943f66/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6be61bcdd6252b529f5a14765fb7cb01be943f66/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=6be61bcdd6252b529f5a14765fb7cb01be943f66", "patch": "@@ -238,7 +238,15 @@ macro_rules! create_config {\n             }\n \n             pub fn from_toml(toml: &str) -> Config {\n-                let parsed = toml.parse().expect(\"Could not parse TOML\");\n+                let parsed: toml::Value = toml.parse().expect(\"Could not parse TOML\");\n+                for (key, _) in parsed.as_table().expect(\"Parsed config was not table\") {\n+                    match &**key {\n+                        $(\n+                            stringify!($i) => (),\n+                        )+\n+                        _ => msg!(\"Warning: Unused configuration option {}\", key),\n+                    }\n+                }\n                 let parsed_config:ParsedConfig = match toml::decode(parsed) {\n                     Some(decoded) => decoded,\n                     None => {"}]}