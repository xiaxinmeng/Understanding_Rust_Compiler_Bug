{"sha": "c06f5517dc00798c85ecad37504ebd0b29ede35a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNmY1NTE3ZGMwMDc5OGM4NWVjYWQzNzUwNGViZDBiMjllZGUzNWE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-30T15:37:58Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-30T15:37:58Z"}, "message": "improve volatile comments", "tree": {"sha": "77f7dc6faa122e2ee9c9f533936f3800bde7e1ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77f7dc6faa122e2ee9c9f533936f3800bde7e1ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c06f5517dc00798c85ecad37504ebd0b29ede35a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c06f5517dc00798c85ecad37504ebd0b29ede35a", "html_url": "https://github.com/rust-lang/rust/commit/c06f5517dc00798c85ecad37504ebd0b29ede35a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c06f5517dc00798c85ecad37504ebd0b29ede35a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d97f61f10ebfaa57f5010301ebfb60e0701e904f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d97f61f10ebfaa57f5010301ebfb60e0701e904f", "html_url": "https://github.com/rust-lang/rust/commit/d97f61f10ebfaa57f5010301ebfb60e0701e904f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6e664faa730650ef106659ec4f62cadb194f13bc", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c06f5517dc00798c85ecad37504ebd0b29ede35a/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c06f5517dc00798c85ecad37504ebd0b29ede35a/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=c06f5517dc00798c85ecad37504ebd0b29ede35a", "patch": "@@ -774,8 +774,8 @@ pub unsafe fn write_unaligned<T>(dst: *mut T, src: T) {\n /// to not be elided or reordered by the compiler across other volatile\n /// operations.\n ///\n-/// Memory read with `read_volatile` should almost always be written to using\n-/// [`write_volatile`].\n+/// Memory accessed with `read_volatile` or [`write_volatile`] should not be\n+/// accessed with non-volatile operations.\n ///\n /// [`write_volatile`]: ./fn.write_volatile.html\n ///\n@@ -844,8 +844,8 @@ pub unsafe fn read_volatile<T>(src: *const T) -> T {\n /// to not be elided or reordered by the compiler across other volatile\n /// operations.\n ///\n-/// Memory written with `write_volatile` should almost always be read from using\n-/// [`read_volatile`].\n+/// Memory accessed with [`read_volatile`] or `write_volatile` should not be\n+/// accessed with non-volatile operations.\n ///\n /// `write_volatile` does not drop the contents of `dst`. This is safe, but it\n /// could leak allocations or resources, so care should be taken not to overwrite"}]}