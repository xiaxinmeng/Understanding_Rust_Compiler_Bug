{"sha": "31aecccbcd8c043bfe249cfae9e7c6ef6ffd46fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxYWVjY2NiY2Q4YzA0M2JmZTI0OWNmYWU5ZTdjNmVmNmZmZDQ2ZmQ=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2019-12-31T14:18:53Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2020-01-07T20:28:22Z"}, "message": "Auto-upgrade data layouts for X86 address spaces\n\nThis is similar to the autoupdate LLVM performs internally.", "tree": {"sha": "bbe7bb082cbb0928b08073636c9068adbedd58b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbe7bb082cbb0928b08073636c9068adbedd58b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31aecccbcd8c043bfe249cfae9e7c6ef6ffd46fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31aecccbcd8c043bfe249cfae9e7c6ef6ffd46fd", "html_url": "https://github.com/rust-lang/rust/commit/31aecccbcd8c043bfe249cfae9e7c6ef6ffd46fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31aecccbcd8c043bfe249cfae9e7c6ef6ffd46fd/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3ab84bb4f26d813c53336014ef08573a9d3018a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3ab84bb4f26d813c53336014ef08573a9d3018a", "html_url": "https://github.com/rust-lang/rust/commit/c3ab84bb4f26d813c53336014ef08573a9d3018a"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "ad8aac3ea7f169c9878edfc2db23d53c992cfa05", "filename": "src/librustc_codegen_llvm/context.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/31aecccbcd8c043bfe249cfae9e7c6ef6ffd46fd/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31aecccbcd8c043bfe249cfae9e7c6ef6ffd46fd/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcontext.rs?ref=31aecccbcd8c043bfe249cfae9e7c6ef6ffd46fd", "patch": "@@ -143,6 +143,22 @@ fn strip_function_ptr_alignment(data_layout: String) -> String {\n     data_layout.replace(\"-Fi8-\", \"-\")\n }\n \n+fn strip_x86_address_spaces(data_layout: String) -> String {\n+    data_layout.replace(\"-p270:32:32-p271:32:32-p272:64:64-\", \"-\")\n+}\n+\n+fn add_x86_address_spaces(mut data_layout: String) -> String {\n+    let address_spaces = \"-p270:32:32-p271:32:32-p272:64:64\";\n+    if !data_layout.contains(address_spaces) && data_layout.starts_with(\"e-m:\") {\n+        let mut insert_pos = \"e-m:?\".len();\n+        if data_layout[insert_pos..].starts_with(\"-p:32:32\") {\n+            insert_pos += \"-p:32:32\".len();\n+        }\n+        data_layout.insert_str(insert_pos, address_spaces);\n+    }\n+    data_layout\n+}\n+\n pub unsafe fn create_module(\n     tcx: TyCtxt<'_>,\n     llcx: &'ll llvm::Context,\n@@ -156,6 +172,13 @@ pub unsafe fn create_module(\n     if llvm_util::get_major_version() < 9 {\n         target_data_layout = strip_function_ptr_alignment(target_data_layout);\n     }\n+    if sess.target.target.arch == \"x86\" || sess.target.target.arch == \"x86_64\" {\n+        if llvm_util::get_major_version() < 10 {\n+            target_data_layout = strip_x86_address_spaces(target_data_layout);\n+        } else {\n+            target_data_layout = add_x86_address_spaces(target_data_layout);\n+        }\n+    }\n \n     // Ensure the data-layout values hardcoded remain the defaults.\n     if sess.target.target.options.is_builtin {"}]}