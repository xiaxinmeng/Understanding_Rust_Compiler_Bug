{"sha": "df307c0ce73552045e81ee8237d3cb582af0e7e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMzA3YzBjZTczNTUyMDQ1ZTgxZWU4MjM3ZDNjYjU4MmFmMGU3ZTc=", "commit": {"author": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-02-11T08:32:46Z"}, "committer": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-03-08T15:36:46Z"}, "message": "Move box_vec to its own module", "tree": {"sha": "b4bfdb81b30a6cc6ec53855711fca4d9bd79cd50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4bfdb81b30a6cc6ec53855711fca4d9bd79cd50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df307c0ce73552045e81ee8237d3cb582af0e7e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df307c0ce73552045e81ee8237d3cb582af0e7e7", "html_url": "https://github.com/rust-lang/rust/commit/df307c0ce73552045e81ee8237d3cb582af0e7e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df307c0ce73552045e81ee8237d3cb582af0e7e7/comments", "author": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "714a826439b4e61485e3afdfae8c08924120960a", "url": "https://api.github.com/repos/rust-lang/rust/commits/714a826439b4e61485e3afdfae8c08924120960a", "html_url": "https://github.com/rust-lang/rust/commit/714a826439b4e61485e3afdfae8c08924120960a"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "14f09ab837f34d5a282fec1621c7bdfde85fdf5d", "filename": "clippy_lints/src/types/box_vec.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/df307c0ce73552045e81ee8237d3cb582af0e7e7/clippy_lints%2Fsrc%2Ftypes%2Fbox_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df307c0ce73552045e81ee8237d3cb582af0e7e7/clippy_lints%2Fsrc%2Ftypes%2Fbox_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fbox_vec.rs?ref=df307c0ce73552045e81ee8237d3cb582af0e7e7", "patch": "@@ -0,0 +1,22 @@\n+use rustc_hir::{self as hir, def_id::DefId, QPath};\n+use rustc_lint::LateContext;\n+use rustc_span::symbol::sym;\n+\n+use crate::utils::{is_ty_param_diagnostic_item, span_lint_and_help};\n+\n+use super::BOX_VEC;\n+\n+pub(super) fn check(cx: &LateContext<'_>, hir_ty: &hir::Ty<'_>, qpath: &QPath<'_>, def_id: DefId) {\n+    if Some(def_id) == cx.tcx.lang_items().owned_box() {\n+        if is_ty_param_diagnostic_item(cx, qpath, sym::vec_type).is_some() {\n+            span_lint_and_help(\n+                cx,\n+                BOX_VEC,\n+                hir_ty.span,\n+                \"you seem to be trying to use `Box<Vec<T>>`. Consider using just `Vec<T>`\",\n+                None,\n+                \"`Vec<T>` is already on the heap, `Box<Vec<T>>` makes an extra allocation\",\n+            );\n+        }\n+    }\n+}"}, {"sha": "b5ba2c58a81c37f43429b68ab2283215ebe4d2b9", "filename": "clippy_lints/src/types/mod.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/df307c0ce73552045e81ee8237d3cb582af0e7e7/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df307c0ce73552045e81ee8237d3cb582af0e7e7/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs?ref=df307c0ce73552045e81ee8237d3cb582af0e7e7", "patch": "@@ -1,5 +1,7 @@\n #![allow(rustc::default_hash_types)]\n \n+mod box_vec;\n+\n use std::borrow::Cow;\n use std::cmp::Ordering;\n use std::collections::BTreeMap;\n@@ -346,6 +348,7 @@ impl Types {\n                 let hir_id = hir_ty.hir_id;\n                 let res = cx.qpath_res(qpath, hir_id);\n                 if let Some(def_id) = res.opt_def_id() {\n+                    box_vec::check(cx, hir_ty, qpath, def_id);\n                     if Some(def_id) == cx.tcx.lang_items().owned_box() {\n                         if let Some(span) = match_borrows_parameter(cx, qpath) {\n                             let mut applicability = Applicability::MachineApplicable;\n@@ -360,17 +363,6 @@ impl Types {\n                             );\n                             return; // don't recurse into the type\n                         }\n-                        if is_ty_param_diagnostic_item(cx, qpath, sym::vec_type).is_some() {\n-                            span_lint_and_help(\n-                                cx,\n-                                BOX_VEC,\n-                                hir_ty.span,\n-                                \"you seem to be trying to use `Box<Vec<T>>`. Consider using just `Vec<T>`\",\n-                                None,\n-                                \"`Vec<T>` is already on the heap, `Box<Vec<T>>` makes an extra allocation\",\n-                            );\n-                            return; // don't recurse into the type\n-                        }\n                     } else if cx.tcx.is_diagnostic_item(sym::Rc, def_id) {\n                         if let Some(ty) = is_ty_param_diagnostic_item(cx, qpath, sym::Rc) {\n                             let mut applicability = Applicability::MachineApplicable;"}]}