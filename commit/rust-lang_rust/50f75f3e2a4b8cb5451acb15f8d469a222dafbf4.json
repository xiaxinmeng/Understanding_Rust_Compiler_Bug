{"sha": "50f75f3e2a4b8cb5451acb15f8d469a222dafbf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwZjc1ZjNlMmE0YjhjYjU0NTFhY2IxNWY4ZDQ2OWEyMjJkYWZiZjQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2015-04-15T10:31:56Z"}, "committer": {"name": "Michael Sproul", "email": "micsproul@gmail.com", "date": "2015-04-17T22:45:50Z"}, "message": "Add long diagnostics for \"bind by-ref and by-move\"", "tree": {"sha": "cc54c898a3ae9371e625130bbd4d9d9e6c7cbbbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc54c898a3ae9371e625130bbd4d9d9e6c7cbbbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50f75f3e2a4b8cb5451acb15f8d469a222dafbf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50f75f3e2a4b8cb5451acb15f8d469a222dafbf4", "html_url": "https://github.com/rust-lang/rust/commit/50f75f3e2a4b8cb5451acb15f8d469a222dafbf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50f75f3e2a4b8cb5451acb15f8d469a222dafbf4/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelsproul", "id": 4452260, "node_id": "MDQ6VXNlcjQ0NTIyNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/4452260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelsproul", "html_url": "https://github.com/michaelsproul", "followers_url": "https://api.github.com/users/michaelsproul/followers", "following_url": "https://api.github.com/users/michaelsproul/following{/other_user}", "gists_url": "https://api.github.com/users/michaelsproul/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelsproul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelsproul/subscriptions", "organizations_url": "https://api.github.com/users/michaelsproul/orgs", "repos_url": "https://api.github.com/users/michaelsproul/repos", "events_url": "https://api.github.com/users/michaelsproul/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelsproul/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "017bc44712b94d22165672fd546b7e084fc3b404", "url": "https://api.github.com/repos/rust-lang/rust/commits/017bc44712b94d22165672fd546b7e084fc3b404", "html_url": "https://github.com/rust-lang/rust/commit/017bc44712b94d22165672fd546b7e084fc3b404"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "306d2cd102fdb8f2456acbf068d3d27b9a041d8f", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 48, "deletions": 1, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/50f75f3e2a4b8cb5451acb15f8d469a222dafbf4/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50f75f3e2a4b8cb5451acb15f8d469a222dafbf4/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=50f75f3e2a4b8cb5451acb15f8d469a222dafbf4", "patch": "@@ -114,6 +114,54 @@ reference when using guards or refactor the entire expression, perhaps by\n putting the condition inside the body of the arm.\n \"##,\n \n+E0009: r##\"\n+In a pattern, all values that don't implement the `Copy` trait have to be bound\n+the same way. The goal here is to avoid binding simultaneously by-move and\n+by-ref.\n+\n+This limitation may be removed in a future version of Rust.\n+\n+Wrong example:\n+\n+```\n+struct X { x: (), }\n+\n+let x = Some((X { x: () }, X { x: () }));\n+match x {\n+    Some((y, ref z)) => {},\n+    None => panic!()\n+}\n+```\n+\n+You have two solutions:\n+1. Bind the pattern's values the same way:\n+\n+```\n+struct X { x: (), }\n+\n+let x = Some((X { x: () }, X { x: () }));\n+match x {\n+    Some((ref y, ref z)) => {},\n+    // or Some((y, z)) => {}\n+    None => panic!()\n+}\n+```\n+\n+2. Implement the `Copy` trait for the X structure (however, please\n+keep in mind that the first solution should be preferred!):\n+\n+```\n+#[derive(Clone, Copy)]\n+struct X { x: (), }\n+\n+let x = Some((X { x: () }, X { x: () }));\n+match x {\n+    Some((y, ref z)) => {},\n+    None => panic!()\n+}\n+```\n+\"##,\n+\n E0015: r##\"\n The only function calls allowed in static or constant expressions are enum\n variant constructors or struct constructors (for unit or tuple structs). This\n@@ -343,7 +391,6 @@ a compile-time constant.\n }\n \n register_diagnostics! {\n-    E0009,\n     E0010,\n     E0011,\n     E0012,"}]}