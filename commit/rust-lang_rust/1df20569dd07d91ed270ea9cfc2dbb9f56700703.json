{"sha": "1df20569dd07d91ed270ea9cfc2dbb9f56700703", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkZjIwNTY5ZGQwN2Q5MWVkMjcwZWE5Y2ZjMmRiYjlmNTY3MDA3MDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-28T03:51:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-28T03:51:22Z"}, "message": "Auto merge of #81354 - SkiFire13:binary-search-assume, r=nagisa\n\nInstruct LLVM that binary_search returns a valid index\n\nThis allows removing bound checks when the return value of `binary_search` is used to index into the slice it was call on. I also added a codegen test for this, not sure if it's the right thing to do (I didn't find anything on the dev guide), but it felt so.", "tree": {"sha": "7bfa02c3ae5addd0148397f4ff82bdab22d91ef1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bfa02c3ae5addd0148397f4ff82bdab22d91ef1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1df20569dd07d91ed270ea9cfc2dbb9f56700703", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1df20569dd07d91ed270ea9cfc2dbb9f56700703", "html_url": "https://github.com/rust-lang/rust/commit/1df20569dd07d91ed270ea9cfc2dbb9f56700703", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1df20569dd07d91ed270ea9cfc2dbb9f56700703/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bfc85149e9620b029fd5c85b02abcbf7ab1a64e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bfc85149e9620b029fd5c85b02abcbf7ab1a64e", "html_url": "https://github.com/rust-lang/rust/commit/3bfc85149e9620b029fd5c85b02abcbf7ab1a64e"}, {"sha": "c9d04c2b238dc5ab51bd8a92c41ba17bb5b00ed7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9d04c2b238dc5ab51bd8a92c41ba17bb5b00ed7", "html_url": "https://github.com/rust-lang/rust/commit/c9d04c2b238dc5ab51bd8a92c41ba17bb5b00ed7"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "d7a28c8d08f7834026fb5c2a34c2dfa7657a78a4", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1df20569dd07d91ed270ea9cfc2dbb9f56700703/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1df20569dd07d91ed270ea9cfc2dbb9f56700703/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=1df20569dd07d91ed270ea9cfc2dbb9f56700703", "patch": "@@ -2204,6 +2204,8 @@ impl<T> [T] {\n             } else if cmp == Greater {\n                 right = mid;\n             } else {\n+                // SAFETY: same as the `get_unchecked` above\n+                unsafe { crate::intrinsics::assume(mid < self.len()) };\n                 return Ok(mid);\n             }\n "}, {"sha": "110d1d55626f120cabf0f9f581fdc9b2da3564a3", "filename": "src/test/codegen/binary-search-index-no-bound-check.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1df20569dd07d91ed270ea9cfc2dbb9f56700703/src%2Ftest%2Fcodegen%2Fbinary-search-index-no-bound-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1df20569dd07d91ed270ea9cfc2dbb9f56700703/src%2Ftest%2Fcodegen%2Fbinary-search-index-no-bound-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fbinary-search-index-no-bound-check.rs?ref=1df20569dd07d91ed270ea9cfc2dbb9f56700703", "patch": "@@ -0,0 +1,19 @@\n+// min-llvm-version: 11.0.0\n+// compile-flags: -O\n+// ignore-debug: the debug assertions get in the way\n+#![crate_type = \"lib\"]\n+\n+// Make sure no bounds checks are emitted when slicing or indexing\n+// with an index from `binary_search`.\n+\n+// CHECK-LABEL: @binary_search_index_no_bounds_check\n+#[no_mangle]\n+pub fn binary_search_index_no_bounds_check(s: &[u8]) -> u8 {\n+    // CHECK-NOT: panic\n+    // CHECK-NOT: slice_index_len_fail\n+    if let Ok(idx) = s.binary_search(&b'\\\\') {\n+        s[idx]\n+    } else {\n+        42\n+    }\n+}"}]}