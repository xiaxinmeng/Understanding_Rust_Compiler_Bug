{"sha": "a8d5c00d4667b3765ba5fd9670a3343072529a5d", "node_id": "C_kwDOAAsO6NoAKGE4ZDVjMDBkNDY2N2IzNzY1YmE1ZmQ5NjcwYTMzNDMwNzI1MjlhNWQ", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-28T04:45:31Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-28T21:05:34Z"}, "message": "Inline two `Ident` methods.", "tree": {"sha": "6e73ae56f663153598c1fc0e93337b7757c7e0cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e73ae56f663153598c1fc0e93337b7757c7e0cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8d5c00d4667b3765ba5fd9670a3343072529a5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8d5c00d4667b3765ba5fd9670a3343072529a5d", "html_url": "https://github.com/rust-lang/rust/commit/a8d5c00d4667b3765ba5fd9670a3343072529a5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8d5c00d4667b3765ba5fd9670a3343072529a5d/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2aa028d30d1e59c3c4bf9c5bf31e9d9f8ec80273", "url": "https://api.github.com/repos/rust-lang/rust/commits/2aa028d30d1e59c3c4bf9c5bf31e9d9f8ec80273", "html_url": "https://github.com/rust-lang/rust/commit/2aa028d30d1e59c3c4bf9c5bf31e9d9f8ec80273"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "b8c0275ea576dca9552bca2f02ee1ae9d3a57e99", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8d5c00d4667b3765ba5fd9670a3343072529a5d/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8d5c00d4667b3765ba5fd9670a3343072529a5d/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=a8d5c00d4667b3765ba5fd9670a3343072529a5d", "patch": "@@ -1703,6 +1703,7 @@ impl Ident {\n     /// macro (e.g., `macro` or `macro_rules!` items) and stay different if they came from different\n     /// non-transparent macros.\n     /// Technically, this operation strips all transparent marks from ident's syntactic context.\n+    #[inline]\n     pub fn normalize_to_macro_rules(self) -> Ident {\n         Ident::new(self.name, self.span.normalize_to_macro_rules())\n     }\n@@ -1718,6 +1719,7 @@ impl Ident {\n }\n \n impl PartialEq for Ident {\n+    #[inline]\n     fn eq(&self, rhs: &Self) -> bool {\n         self.name == rhs.name && self.span.eq_ctxt(rhs.span)\n     }"}]}