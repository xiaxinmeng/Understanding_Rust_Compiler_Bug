{"sha": "594685b5a2f35e2ff4fc01aca2ae91de92ed0993", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NDY4NWI1YTJmMzVlMmZmNGZjMDFhY2EyYWU5MWRlOTJlZDA5OTM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-06T16:00:01Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-06T16:00:01Z"}, "message": "`token::LArrow` can begin arguments\n\n`<-` may indicate the start of a negative const argument.", "tree": {"sha": "1acec67c4d1e186d0ec58e70e29411a7b38c13ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1acec67c4d1e186d0ec58e70e29411a7b38c13ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/594685b5a2f35e2ff4fc01aca2ae91de92ed0993", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/594685b5a2f35e2ff4fc01aca2ae91de92ed0993", "html_url": "https://github.com/rust-lang/rust/commit/594685b5a2f35e2ff4fc01aca2ae91de92ed0993", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/594685b5a2f35e2ff4fc01aca2ae91de92ed0993/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ac02005f3d7ac4b2c32b82dde365107aa2aafdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ac02005f3d7ac4b2c32b82dde365107aa2aafdf", "html_url": "https://github.com/rust-lang/rust/commit/7ac02005f3d7ac4b2c32b82dde365107aa2aafdf"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "2f7b6f9fa664f09c88fe83e4ec41c6472937f29a", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/594685b5a2f35e2ff4fc01aca2ae91de92ed0993/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594685b5a2f35e2ff4fc01aca2ae91de92ed0993/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=594685b5a2f35e2ff4fc01aca2ae91de92ed0993", "patch": "@@ -2319,7 +2319,8 @@ impl<'a> Parser<'a> {\n         let ident = self.parse_path_segment_ident()?;\n \n         let is_args_start = |token: &token::Token| match *token {\n-            token::Lt | token::BinOp(token::Shl) | token::OpenDelim(token::Paren) => true,\n+            token::Lt | token::BinOp(token::Shl) | token::OpenDelim(token::Paren)\n+            | token::LArrow => true,\n             _ => false,\n         };\n         let check_args_start = |this: &mut Self| {"}, {"sha": "22c6c351622817fd29a28338b59add36ffe24858", "filename": "src/test/ui/const-generics/const-expression-parameter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/594685b5a2f35e2ff4fc01aca2ae91de92ed0993/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/594685b5a2f35e2ff4fc01aca2ae91de92ed0993/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.rs?ref=594685b5a2f35e2ff4fc01aca2ae91de92ed0993", "patch": "@@ -6,7 +6,7 @@ fn i32_identity<const X: i32>() -> i32 {\n }\n \n fn foo_a() {\n-    i32_identity::<-1>(); //~ ERROR expected identifier, found `<-`\n+    i32_identity::<-1>(); // ok\n }\n \n fn foo_b() {"}, {"sha": "c255127c28079a436c170b36b02dd120ebbbeca1", "filename": "src/test/ui/const-generics/const-expression-parameter.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/594685b5a2f35e2ff4fc01aca2ae91de92ed0993/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/594685b5a2f35e2ff4fc01aca2ae91de92ed0993/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr?ref=594685b5a2f35e2ff4fc01aca2ae91de92ed0993", "patch": "@@ -1,9 +1,3 @@\n-error: expected identifier, found `<-`\n-  --> $DIR/const-expression-parameter.rs:9:19\n-   |\n-LL |     i32_identity::<-1>();\n-   |                   ^^ expected identifier\n-\n error: expected one of `,` or `>`, found `+`\n   --> $DIR/const-expression-parameter.rs:13:22\n    |\n@@ -16,5 +10,5 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n "}]}