{"sha": "7da9eeeaa7e3095420c24377d9ad612b8ad321ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkYTllZWVhYTdlMzA5NTQyMGMyNDM3N2Q5YWQ2MTJiOGFkMzIxZWQ=", "commit": {"author": {"name": "Christopher Vittal", "email": "christopher.vittal@gmail.com", "date": "2019-03-25T08:09:52Z"}, "committer": {"name": "Christopher Vittal", "email": "christopher.vittal@gmail.com", "date": "2019-05-02T19:35:49Z"}, "message": "Remove BorrowckMode::Compare", "tree": {"sha": "51cf73ab95fed4e32ff3c9ab853cb786a13e27a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51cf73ab95fed4e32ff3c9ab853cb786a13e27a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7da9eeeaa7e3095420c24377d9ad612b8ad321ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7da9eeeaa7e3095420c24377d9ad612b8ad321ed", "html_url": "https://github.com/rust-lang/rust/commit/7da9eeeaa7e3095420c24377d9ad612b8ad321ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7da9eeeaa7e3095420c24377d9ad612b8ad321ed/comments", "author": {"login": "chrisvittal", "id": 15916123, "node_id": "MDQ6VXNlcjE1OTE2MTIz", "avatar_url": "https://avatars.githubusercontent.com/u/15916123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisvittal", "html_url": "https://github.com/chrisvittal", "followers_url": "https://api.github.com/users/chrisvittal/followers", "following_url": "https://api.github.com/users/chrisvittal/following{/other_user}", "gists_url": "https://api.github.com/users/chrisvittal/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisvittal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisvittal/subscriptions", "organizations_url": "https://api.github.com/users/chrisvittal/orgs", "repos_url": "https://api.github.com/users/chrisvittal/repos", "events_url": "https://api.github.com/users/chrisvittal/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisvittal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chrisvittal", "id": 15916123, "node_id": "MDQ6VXNlcjE1OTE2MTIz", "avatar_url": "https://avatars.githubusercontent.com/u/15916123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisvittal", "html_url": "https://github.com/chrisvittal", "followers_url": "https://api.github.com/users/chrisvittal/followers", "following_url": "https://api.github.com/users/chrisvittal/following{/other_user}", "gists_url": "https://api.github.com/users/chrisvittal/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisvittal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisvittal/subscriptions", "organizations_url": "https://api.github.com/users/chrisvittal/orgs", "repos_url": "https://api.github.com/users/chrisvittal/repos", "events_url": "https://api.github.com/users/chrisvittal/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisvittal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d15fc173818ccea6f8d97af13a30d454f9e4b35c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d15fc173818ccea6f8d97af13a30d454f9e4b35c", "html_url": "https://github.com/rust-lang/rust/commit/d15fc173818ccea6f8d97af13a30d454f9e4b35c"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "fc209df8516ca72c1a17b1d6420390a887bb25d3", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7da9eeeaa7e3095420c24377d9ad612b8ad321ed/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7da9eeeaa7e3095420c24377d9ad612b8ad321ed/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=7da9eeeaa7e3095420c24377d9ad612b8ad321ed", "patch": "@@ -97,9 +97,8 @@ impl SuppressRegionErrors {\n             // If we're on Migrate mode, report AST region errors\n             BorrowckMode::Migrate => SuppressRegionErrors { suppressed: false },\n \n-            // If we're on MIR or Compare mode, don't report AST region errors as they should\n-            // be reported by NLL\n-            BorrowckMode::Compare | BorrowckMode::Mir => SuppressRegionErrors { suppressed: true },\n+            // If we're on MIR don't report AST region errors as they should be reported by NLL\n+            BorrowckMode::Mir => SuppressRegionErrors { suppressed: true },\n         }\n     }\n }"}, {"sha": "4577c06fc68d689ff87a780e787ac9e7aa483429", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7da9eeeaa7e3095420c24377d9ad612b8ad321ed/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7da9eeeaa7e3095420c24377d9ad612b8ad321ed/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=7da9eeeaa7e3095420c24377d9ad612b8ad321ed", "patch": "@@ -462,7 +462,6 @@ pub enum PrintRequest {\n #[derive(Copy, Clone, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub enum BorrowckMode {\n     Mir,\n-    Compare,\n     Migrate,\n }\n \n@@ -471,7 +470,6 @@ impl BorrowckMode {\n     /// on the AST borrow check if the MIR-based one errors.\n     pub fn migrate(self) -> bool {\n         match self {\n-            BorrowckMode::Compare => false,\n             BorrowckMode::Mir => false,\n             BorrowckMode::Migrate => true,\n         }\n@@ -480,7 +478,6 @@ impl BorrowckMode {\n     /// Should we emit the AST-based borrow checker errors?\n     pub fn use_ast(self) -> bool {\n         match self {\n-            BorrowckMode::Compare => true,\n             BorrowckMode::Mir => false,\n             BorrowckMode::Migrate => false,\n         }\n@@ -2315,7 +2312,6 @@ pub fn build_session_options_and_crate_config(\n     let borrowck_mode = match debugging_opts.borrowck.as_ref().map(|s| &s[..]) {\n         None | Some(\"migrate\") => BorrowckMode::Migrate,\n         Some(\"mir\") => BorrowckMode::Mir,\n-        Some(\"compare\") => BorrowckMode::Compare,\n         Some(m) => early_error(error_format, &format!(\"unknown borrowck mode `{}`\", m)),\n     };\n "}]}