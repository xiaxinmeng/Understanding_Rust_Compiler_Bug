{"sha": "326331c34f70617c3e779c6bf8227d0dcd75bad5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNjMzMWMzNGY3MDYxN2MzZTc3OWM2YmY4MjI3ZDBkY2Q3NWJhZDU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-06-07T23:05:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-07T23:05:44Z"}, "message": "Rollup merge of #51399 - ngg:nll-performance, r=nikomatsakis\n\nNLL performance boost\n\nThis makes compilation of the [inflate](https://github.com/rust-lang-nursery/rustc-perf/tree/master/collector/benchmarks/inflate) benchmark compile 2 times faster on my computer when NLL is enabled.\nThis does not fix the #51377 perfectly, it's still 4-5 times slower than without NLL, but it's a start.", "tree": {"sha": "70eef9380cdce82cbf943fb5bcc387aaf3d857fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70eef9380cdce82cbf943fb5bcc387aaf3d857fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/326331c34f70617c3e779c6bf8227d0dcd75bad5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbGbpICRBK7hj4Ov3rIwAAdHIIAITvKglcuIUe1QrIUb+15AZz\nCn9wmcbK+2ulCW8SbLQVi/HreW59L3V2cFzmq0rSmlYFZUed9fTzjxFwIg3hcjwb\nwI7uyu/U+5lv7uYPINprQ8EORR4z2rbr1QHX/3zY7dC+pJ4biTa/VkpLfdPfkxug\nEhoo4rqAx76xSP99nExMtqzIU7dTLK+vvUaVrA71hoG4mIlaqDgLodK5QldG+wZ6\nC+YuTAPth8RmCK4B5l5TzxDMMKtvKla12ycB1ZwIoshpfajlWa5VP/aVI1LRwqWv\n3VPEdqyYwv+lmzlvL4kPnt25qJV6czlgyVu/kw7HWPmUVEbzGumW8dGFQjGOqfg=\n=LnlK\n-----END PGP SIGNATURE-----\n", "payload": "tree 70eef9380cdce82cbf943fb5bcc387aaf3d857fe\nparent d5759daf643272fed402cfe27a7ebdf487c323bd\nparent f1c92476634485c6a2fb17d33046cedddaa150a2\nauthor kennytm <kennytm@gmail.com> 1528412744 +0800\ncommitter GitHub <noreply@github.com> 1528412744 +0800\n\nRollup merge of #51399 - ngg:nll-performance, r=nikomatsakis\n\nNLL performance boost\n\nThis makes compilation of the [inflate](https://github.com/rust-lang-nursery/rustc-perf/tree/master/collector/benchmarks/inflate) benchmark compile 2 times faster on my computer when NLL is enabled.\nThis does not fix the #51377 perfectly, it's still 4-5 times slower than without NLL, but it's a start.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/326331c34f70617c3e779c6bf8227d0dcd75bad5", "html_url": "https://github.com/rust-lang/rust/commit/326331c34f70617c3e779c6bf8227d0dcd75bad5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/326331c34f70617c3e779c6bf8227d0dcd75bad5/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5759daf643272fed402cfe27a7ebdf487c323bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5759daf643272fed402cfe27a7ebdf487c323bd", "html_url": "https://github.com/rust-lang/rust/commit/d5759daf643272fed402cfe27a7ebdf487c323bd"}, {"sha": "f1c92476634485c6a2fb17d33046cedddaa150a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1c92476634485c6a2fb17d33046cedddaa150a2", "html_url": "https://github.com/rust-lang/rust/commit/f1c92476634485c6a2fb17d33046cedddaa150a2"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "76320c6a2eacc96912c70f3ae3579ebb474bad0f", "filename": "src/librustc_mir/borrow_check/nll/type_check/liveness.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/326331c34f70617c3e779c6bf8227d0dcd75bad5/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/326331c34f70617c3e779c6bf8227d0dcd75bad5/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness.rs?ref=326331c34f70617c3e779c6bf8227d0dcd75bad5", "patch": "@@ -104,13 +104,15 @@ impl<'gen, 'typeck, 'flow, 'gcx, 'tcx> TypeLivenessGenerator<'gen, 'typeck, 'flo\n                     location, live_local\n                 );\n \n-                self.flow_inits.each_state_bit(|mpi_init| {\n-                    debug!(\n-                        \"add_liveness_constraints: location={:?} initialized={:?}\",\n-                        location,\n-                        &self.flow_inits.operator().move_data().move_paths[mpi_init]\n-                    );\n-                });\n+                if log_enabled!(::log::Level::Debug) {\n+                    self.flow_inits.each_state_bit(|mpi_init| {\n+                        debug!(\n+                            \"add_liveness_constraints: location={:?} initialized={:?}\",\n+                            location,\n+                            &self.flow_inits.operator().move_data().move_paths[mpi_init]\n+                        );\n+                    });\n+                }\n \n                 let mpi = self.move_data.rev_lookup.find_local(live_local);\n                 if let Some(initialized_child) = self.flow_inits.has_any_child_of(mpi) {"}]}