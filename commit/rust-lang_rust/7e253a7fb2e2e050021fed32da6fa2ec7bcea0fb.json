{"sha": "7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb", "node_id": "C_kwDOAAsO6NoAKDdlMjUzYTdmYjJlMmUwNTAwMjFmZWQzMmRhNmZhMmVjN2JjZWEwZmI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-20T06:37:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-20T06:37:58Z"}, "message": "Auto merge of #106316 - camelid:rustdoc-all-only-stable, r=GuillaumeGomez\n\nOnly include stable lints in `rustdoc::all` group\n\nFixes #106289.\n\nIncluding unstable lints in the lint group produces unintuitive behavior\non stable (see #106289). Meanwhile, if we only included unstable lints\non nightly and not on stable, we could end up with confusing bugs that\nwere hard to compare across versions of Rust that lacked code changes.\n\nI think that only including stable lints in `rustdoc::all`, no matter\nthe release channel, is the most intuitive option. Users can then\ncontrol unstable lints individually, which is reasonable since they have\nto enable the feature gates individually anyway.\n\nr? `@GuillaumeGomez`", "tree": {"sha": "5517431d3727a235fec8d254e29c7ca35fecdcf4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5517431d3727a235fec8d254e29c7ca35fecdcf4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb", "html_url": "https://github.com/rust-lang/rust/commit/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "824f915cbc32c0942122389274a1b6fbe2ffc51e", "url": "https://api.github.com/repos/rust-lang/rust/commits/824f915cbc32c0942122389274a1b6fbe2ffc51e", "html_url": "https://github.com/rust-lang/rust/commit/824f915cbc32c0942122389274a1b6fbe2ffc51e"}, {"sha": "fbd548acc3120bc7790f96134b7d6da5236933fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbd548acc3120bc7790f96134b7d6da5236933fd", "html_url": "https://github.com/rust-lang/rust/commit/fbd548acc3120bc7790f96134b7d6da5236933fd"}], "stats": {"total": 65, "additions": 45, "deletions": 20}, "files": [{"sha": "6d289eb996de701705fee3dcc587cec7cfb7c259", "filename": "src/librustdoc/lint.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/src%2Flibrustdoc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/src%2Flibrustdoc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flint.rs?ref=7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb", "patch": "@@ -194,7 +194,11 @@ pub(crate) fn register_lints(_sess: &Session, lint_store: &mut LintStore) {\n         true,\n         \"rustdoc::all\",\n         Some(\"rustdoc\"),\n-        RUSTDOC_LINTS.iter().map(|&lint| LintId::of(lint)).collect(),\n+        RUSTDOC_LINTS\n+            .iter()\n+            .filter(|lint| lint.feature_gate.is_none()) // only include stable lints\n+            .map(|&lint| LintId::of(lint))\n+            .collect(),\n     );\n     for lint in &*RUSTDOC_LINTS {\n         let name = lint.name_lower();"}, {"sha": "02632b4ce7d3cb3ca6768acca5a96d10205154db", "filename": "tests/rustdoc-ui/check-fail.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/tests%2Frustdoc-ui%2Fcheck-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/tests%2Frustdoc-ui%2Fcheck-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fcheck-fail.rs?ref=7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb", "patch": "@@ -2,6 +2,7 @@\n \n #![feature(rustdoc_missing_doc_code_examples)]\n #![deny(missing_docs)]\n+#![deny(rustdoc::missing_doc_code_examples)]\n #![deny(rustdoc::all)]\n \n //! ```rust,testharness"}, {"sha": "f05e457af6452fd5789f87550bf3b21a5834b366", "filename": "tests/rustdoc-ui/check-fail.stderr", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/tests%2Frustdoc-ui%2Fcheck-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/tests%2Frustdoc-ui%2Fcheck-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fcheck-fail.stderr?ref=7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb", "patch": "@@ -1,5 +1,5 @@\n error: missing documentation for a function\n-  --> $DIR/check-fail.rs:12:1\n+  --> $DIR/check-fail.rs:13:1\n    |\n LL | pub fn foo() {}\n    | ^^^^^^^^^^^^\n@@ -11,20 +11,19 @@ LL | #![deny(missing_docs)]\n    |         ^^^^^^^^^^^^\n \n error: missing code example in this documentation\n-  --> $DIR/check-fail.rs:12:1\n+  --> $DIR/check-fail.rs:13:1\n    |\n LL | pub fn foo() {}\n    | ^^^^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/check-fail.rs:5:9\n    |\n-LL | #![deny(rustdoc::all)]\n-   |         ^^^^^^^^^^^^\n-   = note: `#[deny(rustdoc::missing_doc_code_examples)]` implied by `#[deny(rustdoc::all)]`\n+LL | #![deny(rustdoc::missing_doc_code_examples)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: unknown attribute `testharness`. Did you mean `test_harness`?\n-  --> $DIR/check-fail.rs:7:1\n+  --> $DIR/check-fail.rs:8:1\n    |\n LL | / //! ```rust,testharness\n LL | |\n@@ -33,10 +32,15 @@ LL | | //! ```\n    | |_______^\n    |\n    = help: the code block will either not be tested if not marked as a rust one or the code will be wrapped inside a main function\n+note: the lint level is defined here\n+  --> $DIR/check-fail.rs:6:9\n+   |\n+LL | #![deny(rustdoc::all)]\n+   |         ^^^^^^^^^^^^\n    = note: `#[deny(rustdoc::invalid_codeblock_attributes)]` implied by `#[deny(rustdoc::all)]`\n \n error: unknown attribute `testharness`. Did you mean `test_harness`?\n-  --> $DIR/check-fail.rs:16:1\n+  --> $DIR/check-fail.rs:17:1\n    |\n LL | / /// hello\n LL | |"}, {"sha": "e389a81bb33cc93fae6a4591317d53b54c677ff8", "filename": "tests/rustdoc-ui/check.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/tests%2Frustdoc-ui%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/tests%2Frustdoc-ui%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fcheck.rs?ref=7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb", "patch": "@@ -7,6 +7,7 @@\n //~^^ WARN\n \n #![warn(missing_docs)]\n+#![warn(rustdoc::missing_doc_code_examples)]\n #![warn(rustdoc::all)]\n \n pub fn foo() {}"}, {"sha": "c5ed5d0c3efbe214732794e9d812d74eb2b9304e", "filename": "tests/rustdoc-ui/check.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/tests%2Frustdoc-ui%2Fcheck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/tests%2Frustdoc-ui%2Fcheck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fcheck.stderr?ref=7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb", "patch": "@@ -17,7 +17,7 @@ LL | #![warn(missing_docs)]\n    |         ^^^^^^^^^^^^\n \n warning: missing documentation for a function\n-  --> $DIR/check.rs:12:1\n+  --> $DIR/check.rs:13:1\n    |\n LL | pub fn foo() {}\n    | ^^^^^^^^^^^^\n@@ -27,7 +27,7 @@ warning: no documentation found for this crate's top-level module\n    = help: The following guide may be of use:\n            https://doc.rust-lang.org/$CHANNEL/rustdoc/how-to-write-documentation.html\n note: the lint level is defined here\n-  --> $DIR/check.rs:10:9\n+  --> $DIR/check.rs:11:9\n    |\n LL | #![warn(rustdoc::all)]\n    |         ^^^^^^^^^^^^\n@@ -45,10 +45,14 @@ LL | |\n LL | | pub fn foo() {}\n    | |_______________^\n    |\n-   = note: `#[warn(rustdoc::missing_doc_code_examples)]` implied by `#[warn(rustdoc::all)]`\n+note: the lint level is defined here\n+  --> $DIR/check.rs:10:9\n+   |\n+LL | #![warn(rustdoc::missing_doc_code_examples)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: missing code example in this documentation\n-  --> $DIR/check.rs:12:1\n+  --> $DIR/check.rs:13:1\n    |\n LL | pub fn foo() {}\n    | ^^^^^^^^^^^^^^^"}, {"sha": "ad88157f64f7920dc04cb6f856d988c30c4dd97e", "filename": "tests/rustdoc-ui/lint-group.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/tests%2Frustdoc-ui%2Flint-group.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/tests%2Frustdoc-ui%2Flint-group.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flint-group.rs?ref=7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb", "patch": "@@ -6,6 +6,7 @@\n //! println!(\"sup\");\n //! ```\n \n+#![deny(rustdoc::missing_doc_code_examples)]\n #![deny(rustdoc::all)]\n \n /// what up, let's make an [error]"}, {"sha": "7ff09fcc45a1243660ab5f3892f7545850432d10", "filename": "tests/rustdoc-ui/lint-group.stderr", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/tests%2Frustdoc-ui%2Flint-group.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/tests%2Frustdoc-ui%2Flint-group.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Flint-group.stderr?ref=7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb", "patch": "@@ -1,18 +1,17 @@\n error: missing code example in this documentation\n-  --> $DIR/lint-group.rs:18:1\n+  --> $DIR/lint-group.rs:19:1\n    |\n LL | /// wait, this doesn't have a doctest?\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/lint-group.rs:9:9\n    |\n-LL | #![deny(rustdoc::all)]\n-   |         ^^^^^^^^^^^^\n-   = note: `#[deny(rustdoc::missing_doc_code_examples)]` implied by `#[deny(rustdoc::all)]`\n+LL | #![deny(rustdoc::missing_doc_code_examples)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: documentation test in private item\n-  --> $DIR/lint-group.rs:21:1\n+  --> $DIR/lint-group.rs:22:1\n    |\n LL | / /// wait, this *does* have a doctest?\n LL | | ///\n@@ -21,16 +20,21 @@ LL | | /// println!(\"sup\");\n LL | | /// ```\n    | |_______^\n    |\n+note: the lint level is defined here\n+  --> $DIR/lint-group.rs:10:9\n+   |\n+LL | #![deny(rustdoc::all)]\n+   |         ^^^^^^^^^^^^\n    = note: `#[deny(rustdoc::private_doc_tests)]` implied by `#[deny(rustdoc::all)]`\n \n error: missing code example in this documentation\n-  --> $DIR/lint-group.rs:28:1\n+  --> $DIR/lint-group.rs:29:1\n    |\n LL | /// <unknown>\n    | ^^^^^^^^^^^^^\n \n error: unresolved link to `error`\n-  --> $DIR/lint-group.rs:11:29\n+  --> $DIR/lint-group.rs:12:29\n    |\n LL | /// what up, let's make an [error]\n    |                             ^^^^^ no item named `error` in scope\n@@ -39,7 +43,7 @@ LL | /// what up, let's make an [error]\n    = note: `#[deny(rustdoc::broken_intra_doc_links)]` implied by `#[deny(rustdoc::all)]`\n \n error: unclosed HTML tag `unknown`\n-  --> $DIR/lint-group.rs:28:5\n+  --> $DIR/lint-group.rs:29:5\n    |\n LL | /// <unknown>\n    |     ^^^^^^^^^"}, {"sha": "e106d06aff592dd2e9e97b272336d2511df709b2", "filename": "tests/rustdoc-ui/rustdoc-all-only-stable-lints.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/tests%2Frustdoc-ui%2Frustdoc-all-only-stable-lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb/tests%2Frustdoc-ui%2Frustdoc-all-only-stable-lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Frustdoc-all-only-stable-lints.rs?ref=7e253a7fb2e2e050021fed32da6fa2ec7bcea0fb", "patch": "@@ -0,0 +1,6 @@\n+// check-pass\n+\n+// Ensure `rustdoc::all` only affects stable lints. See #106289.\n+\n+#![deny(unknown_lints)]\n+#![allow(rustdoc::all)]"}]}