{"sha": "9c64bb1de14c58c76bbbcd0a5c1791e8d23b6443", "node_id": "C_kwDOAAsO6NoAKDljNjRiYjFkZTE0YzU4Yzc2YmJiY2QwYTVjMTc5MWU4ZDIzYjY0NDM", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-08-25T10:03:13Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-09T13:07:21Z"}, "message": "Fix clippy tests that trigger `for_loop_over_fallibles` lint", "tree": {"sha": "1bca084fd683381b63ce64c3304d0bda95f78163", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bca084fd683381b63ce64c3304d0bda95f78163"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c64bb1de14c58c76bbbcd0a5c1791e8d23b6443", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c64bb1de14c58c76bbbcd0a5c1791e8d23b6443", "html_url": "https://github.com/rust-lang/rust/commit/9c64bb1de14c58c76bbbcd0a5c1791e8d23b6443", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c64bb1de14c58c76bbbcd0a5c1791e8d23b6443/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98e0c4df7384ca02f1d5c4dc5dc15de8b3418ce1", "url": "https://api.github.com/repos/rust-lang/rust/commits/98e0c4df7384ca02f1d5c4dc5dc15de8b3418ce1", "html_url": "https://github.com/rust-lang/rust/commit/98e0c4df7384ca02f1d5c4dc5dc15de8b3418ce1"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "203656fa4d6c2a891b72f98aa6d7a4da49d5acfc", "filename": "src/tools/clippy/tests/ui/for_loop_unfixable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9c64bb1de14c58c76bbbcd0a5c1791e8d23b6443/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loop_unfixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c64bb1de14c58c76bbbcd0a5c1791e8d23b6443/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loop_unfixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loop_unfixable.rs?ref=9c64bb1de14c58c76bbbcd0a5c1791e8d23b6443", "patch": "@@ -8,6 +8,7 @@\n     clippy::for_kv_map\n )]\n #[allow(clippy::linkedlist, clippy::unnecessary_mut_passed, clippy::similar_names)]\n+#[allow(for_loop_over_fallibles)]\n fn main() {\n     let vec = vec![1, 2, 3, 4];\n "}, {"sha": "50a86eaa68f7dffe5e4f632aea276cf3463a49bb", "filename": "src/tools/clippy/tests/ui/for_loop_unfixable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c64bb1de14c58c76bbbcd0a5c1791e8d23b6443/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loop_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c64bb1de14c58c76bbbcd0a5c1791e8d23b6443/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loop_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loop_unfixable.stderr?ref=9c64bb1de14c58c76bbbcd0a5c1791e8d23b6443", "patch": "@@ -1,5 +1,5 @@\n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n-  --> $DIR/for_loop_unfixable.rs:14:15\n+  --> $DIR/for_loop_unfixable.rs:15:15\n    |\n LL |     for _v in vec.iter().next() {}\n    |               ^^^^^^^^^^^^^^^^^"}, {"sha": "54661ff94f2434a47580568b82a5ed977519129b", "filename": "src/tools/clippy/tests/ui/for_loops_over_fallibles.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9c64bb1de14c58c76bbbcd0a5c1791e8d23b6443/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loops_over_fallibles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c64bb1de14c58c76bbbcd0a5c1791e8d23b6443/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loops_over_fallibles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffor_loops_over_fallibles.rs?ref=9c64bb1de14c58c76bbbcd0a5c1791e8d23b6443", "patch": "@@ -1,5 +1,6 @@\n #![warn(clippy::for_loops_over_fallibles)]\n #![allow(clippy::uninlined_format_args)]\n+#![allow(for_loop_over_fallibles)]\n \n fn for_loops_over_fallibles() {\n     let option = Some(1);"}]}