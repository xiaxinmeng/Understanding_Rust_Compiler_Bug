{"sha": "1c36e767514f7b44060134f09a98bf4c6d19acfe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMzZlNzY3NTE0ZjdiNDQwNjAxMzRmMDlhOThiZjRjNmQxOWFjZmU=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-08-30T18:15:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-30T18:15:31Z"}, "message": "Rollup merge of #53513 - nnethercote:inline-shallow_resolve, r=varkor\n\nForce-inline `shallow_resolve` at its hottest call site.\n\nIt's a ~1% win on `keccak` and `inflate`.", "tree": {"sha": "24933fcae63dfb5aed4dd15cbcd28ffdddd85c80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24933fcae63dfb5aed4dd15cbcd28ffdddd85c80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c36e767514f7b44060134f09a98bf4c6d19acfe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbiDRECRBK7hj4Ov3rIwAAdHIIAFIHkyNAzk8hnosgCY/VxiI3\n/Bc3qwQ6MvxBlTwEMScUOc12oerJ4NDEQvnmb/qziahTzXP/sStdHB285WEl7WEE\nVEtxtQSXhs4MZo/hlPdxwopEviDLgf81gnCljhmdU6yalBtJn1TqDzlWlodvYwsy\nlNiJdwNz0uPG0pglvyN5YBBMD1eq0N6p8DiDXtNnFV0K6LII4R362Zvd/6QJ/xgf\nKpWbgpuIs5+EEGwyDdT5BLQVrYXlwRyJCw9XASG0Rw358134A5RD6XJbM8q0V4Nb\ntb5RKJdkjyBko83QTjFgEE1A6Hb4UDQ6z/OYhKprd1S1HTmvan8ksTTar8He6Kw=\n=c64S\n-----END PGP SIGNATURE-----\n", "payload": "tree 24933fcae63dfb5aed4dd15cbcd28ffdddd85c80\nparent a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb\nparent b73843f9422fb487b2d26ac2d65f79f73a4c9ae3\nauthor Pietro Albini <pietro@pietroalbini.org> 1535652931 +0200\ncommitter GitHub <noreply@github.com> 1535652931 +0200\n\nRollup merge of #53513 - nnethercote:inline-shallow_resolve, r=varkor\n\nForce-inline `shallow_resolve` at its hottest call site.\n\nIt's a ~1% win on `keccak` and `inflate`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c36e767514f7b44060134f09a98bf4c6d19acfe", "html_url": "https://github.com/rust-lang/rust/commit/1c36e767514f7b44060134f09a98bf4c6d19acfe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c36e767514f7b44060134f09a98bf4c6d19acfe/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb", "html_url": "https://github.com/rust-lang/rust/commit/a245d9bbcabd4e4593c8e5d7fedc36249d9e98bb"}, {"sha": "b73843f9422fb487b2d26ac2d65f79f73a4c9ae3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b73843f9422fb487b2d26ac2d65f79f73a4c9ae3", "html_url": "https://github.com/rust-lang/rust/commit/b73843f9422fb487b2d26ac2d65f79f73a4c9ae3"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "a379438275d897f5b2e7079ed3ca31027be9c220", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1c36e767514f7b44060134f09a98bf4c6d19acfe/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c36e767514f7b44060134f09a98bf4c6d19acfe/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=1c36e767514f7b44060134f09a98bf4c6d19acfe", "patch": "@@ -1116,7 +1116,11 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n         self.resolve_type_vars_if_possible(t).to_string()\n     }\n \n-    pub fn shallow_resolve(&self, typ: Ty<'tcx>) -> Ty<'tcx> {\n+    // We have this force-inlined variant of shallow_resolve() for the one\n+    // callsite that is extremely hot. All other callsites use the normal\n+    // variant.\n+    #[inline(always)]\n+    pub fn inlined_shallow_resolve(&self, typ: Ty<'tcx>) -> Ty<'tcx> {\n         match typ.sty {\n             ty::Infer(ty::TyVar(v)) => {\n                 // Not entirely obvious: if `typ` is a type variable,\n@@ -1157,6 +1161,10 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n         }\n     }\n \n+    pub fn shallow_resolve(&self, typ: Ty<'tcx>) -> Ty<'tcx> {\n+        self.inlined_shallow_resolve(typ)\n+    }\n+\n     pub fn resolve_type_vars_if_possible<T>(&self, value: &T) -> T\n         where T: TypeFoldable<'tcx>\n     {"}, {"sha": "9998db4ad1d48569f8ce45bd488d949a5f3b2467", "filename": "src/librustc/traits/fulfill.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1c36e767514f7b44060134f09a98bf4c6d19acfe/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c36e767514f7b44060134f09a98bf4c6d19acfe/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ffulfill.rs?ref=1c36e767514f7b44060134f09a98bf4c6d19acfe", "patch": "@@ -269,7 +269,8 @@ impl<'a, 'b, 'gcx, 'tcx> ObligationProcessor for FulfillProcessor<'a, 'b, 'gcx,\n         // doing more work yet\n         if !pending_obligation.stalled_on.is_empty() {\n             if pending_obligation.stalled_on.iter().all(|&ty| {\n-                let resolved_ty = self.selcx.infcx().shallow_resolve(&ty);\n+                // Use the force-inlined variant of shallow_resolve() because this code is hot.\n+                let resolved_ty = self.selcx.infcx().inlined_shallow_resolve(&ty);\n                 resolved_ty == ty // nothing changed here\n             }) {\n                 debug!(\"process_predicate: pending obligation {:?} still stalled on {:?}\","}]}