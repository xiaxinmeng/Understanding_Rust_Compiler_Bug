{"sha": "bac8b2e557109b24277d28a00aea5448fc6933f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYzhiMmU1NTcxMDliMjQyNzdkMjhhMDBhZWE1NDQ4ZmM2OTMzZjY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-27T21:22:57Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T22:01:57Z"}, "message": "libsyntax: De-`@mut` `TtReader::repeat_len`", "tree": {"sha": "76e46cbf7dc1cb05f41be7fe76658036f8ccbdcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76e46cbf7dc1cb05f41be7fe76658036f8ccbdcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bac8b2e557109b24277d28a00aea5448fc6933f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bac8b2e557109b24277d28a00aea5448fc6933f6", "html_url": "https://github.com/rust-lang/rust/commit/bac8b2e557109b24277d28a00aea5448fc6933f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bac8b2e557109b24277d28a00aea5448fc6933f6/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db21387ad0465323d4d5171f15d9989944d32603", "url": "https://api.github.com/repos/rust-lang/rust/commits/db21387ad0465323d4d5171f15d9989944d32603", "html_url": "https://github.com/rust-lang/rust/commit/db21387ad0465323d4d5171f15d9989944d32603"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "53ee114e806fa56f6a1c2e79ca57c45f059483a5", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bac8b2e557109b24277d28a00aea5448fc6933f6/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bac8b2e557109b24277d28a00aea5448fc6933f6/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=bac8b2e557109b24277d28a00aea5448fc6933f6", "patch": "@@ -37,7 +37,7 @@ pub struct TtReader {\n     /* for MBE-style macro transcription */\n     priv interpolations: RefCell<HashMap<Ident, @named_match>>,\n     priv repeat_idx: RefCell<~[uint]>,\n-    repeat_len: ~[uint],\n+    priv repeat_len: RefCell<~[uint]>,\n     /* cached: */\n     cur_tok: Token,\n     cur_span: Span\n@@ -64,7 +64,7 @@ pub fn new_tt_reader(sp_diag: @mut SpanHandler,\n             Some(x) => RefCell::new(x),\n         },\n         repeat_idx: RefCell::new(~[]),\n-        repeat_len: ~[],\n+        repeat_len: RefCell::new(~[]),\n         /* dummy values, never read: */\n         cur_tok: EOF,\n         cur_span: DUMMY_SP\n@@ -189,7 +189,8 @@ pub fn tt_next_token(r: &mut TtReader) -> TokenAndSpan {\n         /* done with this set; pop or repeat? */\n         if ! r.stack.dotdotdoted || {\n                 let repeat_idx = r.repeat_idx.borrow();\n-                *repeat_idx.get().last() == *r.repeat_len.last() - 1\n+                let repeat_len = r.repeat_len.borrow();\n+                *repeat_idx.get().last() == *repeat_len.get().last() - 1\n             } {\n \n             match r.stack.up {\n@@ -201,8 +202,9 @@ pub fn tt_next_token(r: &mut TtReader) -> TokenAndSpan {\n                 if r.stack.dotdotdoted {\n                     {\n                         let mut repeat_idx = r.repeat_idx.borrow_mut();\n+                        let mut repeat_len = r.repeat_len.borrow_mut();\n                         repeat_idx.get().pop();\n-                        r.repeat_len.pop();\n+                        repeat_len.get().pop();\n                     }\n                 }\n \n@@ -275,7 +277,8 @@ pub fn tt_next_token(r: &mut TtReader) -> TokenAndSpan {\n                 } else {\n                     {\n                         let mut repeat_idx = r.repeat_idx.borrow_mut();\n-                        r.repeat_len.push(len);\n+                        let mut repeat_len = r.repeat_len.borrow_mut();\n+                        repeat_len.get().push(len);\n                         repeat_idx.get().push(0u);\n                         r.stack = @mut TtFrame {\n                             forest: tts,"}]}