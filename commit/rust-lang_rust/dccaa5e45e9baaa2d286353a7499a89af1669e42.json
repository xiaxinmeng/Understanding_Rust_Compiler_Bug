{"sha": "dccaa5e45e9baaa2d286353a7499a89af1669e42", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjY2FhNWU0NWU5YmFhYTJkMjg2MzUzYTc0OTlhODlhZjE2NjllNDI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-02T14:50:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-02T14:50:56Z"}, "message": "use aliases", "tree": {"sha": "e2add892ee4324dcb5b6e7f370b5e27b0199d9da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2add892ee4324dcb5b6e7f370b5e27b0199d9da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dccaa5e45e9baaa2d286353a7499a89af1669e42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dccaa5e45e9baaa2d286353a7499a89af1669e42", "html_url": "https://github.com/rust-lang/rust/commit/dccaa5e45e9baaa2d286353a7499a89af1669e42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dccaa5e45e9baaa2d286353a7499a89af1669e42/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ffc114dab6d1e25ead195a5937cd4f9ca51ef2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ffc114dab6d1e25ead195a5937cd4f9ca51ef2c", "html_url": "https://github.com/rust-lang/rust/commit/7ffc114dab6d1e25ead195a5937cd4f9ca51ef2c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2c57d8b418c873790d3d7cf40797ce764ed054b3", "filename": "crates/ra_syntax/src/yellow/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dccaa5e45e9baaa2d286353a7499a89af1669e42/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dccaa5e45e9baaa2d286353a7499a89af1669e42/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fyellow%2Fmod.rs?ref=dccaa5e45e9baaa2d286353a7499a89af1669e42", "patch": "@@ -53,12 +53,12 @@ impl<R: TreeRoot<RaTypes>> Hash for SyntaxNode<R> {\n     }\n }\n \n-impl SyntaxNode<OwnedRoot> {\n+impl SyntaxNode {\n     pub(crate) fn new(green: GreenNode, errors: Vec<SyntaxError>) -> SyntaxNode {\n         SyntaxNode(::rowan::SyntaxNode::new(green, errors))\n     }\n }\n-impl<'a> SyntaxNode<RefRoot<'a>> {\n+impl<'a> SyntaxNodeRef<'a> {\n     pub fn leaf_text(self) -> Option<&'a SmolStr> {\n         self.0.leaf_text()\n     }"}]}