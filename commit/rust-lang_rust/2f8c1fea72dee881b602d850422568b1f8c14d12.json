{"sha": "2f8c1fea72dee881b602d850422568b1f8c14d12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmOGMxZmVhNzJkZWU4ODFiNjAyZDg1MDQyMjU2OGIxZjhjMTRkMTI=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-10-14T19:57:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-14T19:57:39Z"}, "message": "Merge pull request #3093 from scampi/issue2633\n\ndo not vertically align list items in case the tactic is Horizontal", "tree": {"sha": "af47fc352359642017759b46e99973ff0d1e3207", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af47fc352359642017759b46e99973ff0d1e3207"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f8c1fea72dee881b602d850422568b1f8c14d12", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbw5+zCRBK7hj4Ov3rIwAAdHIIAAOJNvdtYE5IZ+NzgexlwbAz\nnDoPauaW0gFLe/x9ZqFZre56XtwSTZlFkFnDpOFQ34LTBe1AHEyp0kcu+O2II7WJ\nC51Xgrq9yt1Ka8Ao0Q2N+p0SyhdvWYSakyVD6kyKKFSXRDIGR1vyssvfwhOfD8It\nEbVlXC++oR4D9XapuMdHm/duG1/oQGVpJ+NJPf+5Kjsh09mN602MvqYIs2r4p/if\nA8ColszMZGdxJ8e8Am32cnanSQ5jZbau0+ytoo+3RMgW3qZ9WNoWwGUbZeMz5Xcj\n01qVsDcPDviuwhOckmUYWZn+D8TjtDlHhj/h6QjMn0Lhy8ocNjuc2yw/QTythYk=\n=gkU2\n-----END PGP SIGNATURE-----\n", "payload": "tree af47fc352359642017759b46e99973ff0d1e3207\nparent 945fb504b1b48ffc42656388ada4c661086565fe\nparent 8f7a0470b073803317e85e306308a4b9457dc5cd\nauthor Nick Cameron <nrc@ncameron.org> 1539547059 +1200\ncommitter GitHub <noreply@github.com> 1539547059 +1200\n\nMerge pull request #3093 from scampi/issue2633\n\ndo not vertically align list items in case the tactic is Horizontal"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f8c1fea72dee881b602d850422568b1f8c14d12", "html_url": "https://github.com/rust-lang/rust/commit/2f8c1fea72dee881b602d850422568b1f8c14d12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f8c1fea72dee881b602d850422568b1f8c14d12/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "945fb504b1b48ffc42656388ada4c661086565fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/945fb504b1b48ffc42656388ada4c661086565fe", "html_url": "https://github.com/rust-lang/rust/commit/945fb504b1b48ffc42656388ada4c661086565fe"}, {"sha": "8f7a0470b073803317e85e306308a4b9457dc5cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f7a0470b073803317e85e306308a4b9457dc5cd", "html_url": "https://github.com/rust-lang/rust/commit/8f7a0470b073803317e85e306308a4b9457dc5cd"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "c946cc6e1c013e0a534b2408186a8cf84e7ca8ce", "filename": "src/comment.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2f8c1fea72dee881b602d850422568b1f8c14d12/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f8c1fea72dee881b602d850422568b1f8c14d12/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=2f8c1fea72dee881b602d850422568b1f8c14d12", "patch": "@@ -752,9 +752,16 @@ fn trim_custom_comment_prefix(s: &str) -> String {\n         .map(|line| {\n             let left_trimmed = line.trim_left();\n             if left_trimmed.starts_with(RUSTFMT_CUSTOM_COMMENT_PREFIX) {\n-                left_trimmed.trim_left_matches(RUSTFMT_CUSTOM_COMMENT_PREFIX)\n+                let orig = left_trimmed.trim_left_matches(RUSTFMT_CUSTOM_COMMENT_PREFIX);\n+                // due to comment wrapping, a line that was originaly behind `#` is split over\n+                // multiple lines, which needs then to be prefixed with a `#`\n+                if !orig.trim_left().starts_with(\"# \") {\n+                    format!(\"# {}\", orig)\n+                } else {\n+                    orig.to_string()\n+                }\n             } else {\n-                line\n+                line.to_string()\n             }\n         })\n         .collect::<Vec<_>>()"}, {"sha": "dbb3e732d6268477a186f478316c8c9020c50c52", "filename": "src/vertical.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2f8c1fea72dee881b602d850422568b1f8c14d12/src%2Fvertical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f8c1fea72dee881b602d850422568b1f8c14d12/src%2Fvertical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvertical.rs?ref=2f8c1fea72dee881b602d850422568b1f8c14d12", "patch": "@@ -19,7 +19,7 @@ use syntax::source_map::{BytePos, Span};\n use comment::{combine_strs_with_missing_comments, contains_comment};\n use expr::rewrite_field;\n use items::{rewrite_struct_field, rewrite_struct_field_prefix};\n-use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, Separator};\n+use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListItem, Separator};\n use rewrite::{Rewrite, RewriteContext};\n use shape::{Indent, Shape};\n use source_map::SpanUtils;\n@@ -227,7 +227,7 @@ fn rewrite_aligned_items_inner<T: AlignedItem>(\n         field_prefix_max_width = 0;\n     }\n \n-    let items = itemize_list(\n+    let mut items = itemize_list(\n         context.snippet_provider,\n         fields.iter(),\n         \"}\",\n@@ -248,6 +248,20 @@ fn rewrite_aligned_items_inner<T: AlignedItem>(\n         one_line_width,\n     );\n \n+    if tactic == DefinitiveListTactic::Horizontal {\n+        // since the items fits on a line, there is no need to align them\n+        let do_rewrite =\n+            |field: &T| -> Option<String> { field.rewrite_aligned_item(context, item_shape, 0) };\n+        fields\n+            .iter()\n+            .zip(items.iter_mut())\n+            .for_each(|(field, list_item): (&T, &mut ListItem)| {\n+                if list_item.item.is_some() {\n+                    list_item.item = do_rewrite(field);\n+                }\n+            });\n+    }\n+\n     let fmt = ListFormatting::new(item_shape, context.config)\n         .tactic(tactic)\n         .trailing_separator(context.config.trailing_comma())"}, {"sha": "d8de8443812e4d81f977e8716f4d5589a0ea4e82", "filename": "tests/source/wrapped_hidden_code_block.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2f8c1fea72dee881b602d850422568b1f8c14d12/tests%2Fsource%2Fwrapped_hidden_code_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f8c1fea72dee881b602d850422568b1f8c14d12/tests%2Fsource%2Fwrapped_hidden_code_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fwrapped_hidden_code_block.rs?ref=2f8c1fea72dee881b602d850422568b1f8c14d12", "patch": "@@ -0,0 +1,10 @@\n+// rustfmt-max_width: 79\n+// rustfmt-wrap_comments: true\n+\n+/// ```rust\n+/// # #![cfg_attr(not(dox), feature(cfg_target_feature, target_feature, stdsimd)not(dox), feature(cfg_target_feature, target_feature, stdsimd))]\n+///\n+/// // Est lectus hendrerit lorem, eget dignissim orci nisl sit amet massa. Etiam volutpat lobortis eros.\n+/// let x = 42;\n+/// ```\n+fn func() {}"}, {"sha": "a381945fd8b8fd5fd8aef4b45e67250e2709d881", "filename": "tests/target/issue-2633.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2f8c1fea72dee881b602d850422568b1f8c14d12/tests%2Ftarget%2Fissue-2633.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f8c1fea72dee881b602d850422568b1f8c14d12/tests%2Ftarget%2Fissue-2633.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2633.rs?ref=2f8c1fea72dee881b602d850422568b1f8c14d12", "patch": "@@ -0,0 +1,13 @@\n+// rustfmt-struct_field_align_threshold: 5\n+\n+#[derive(Fail, Debug, Clone)]\n+pub enum BuildError {\n+    LineTooLong { length: usize, limit: usize },\n+    DisallowedByte { b: u8, pos: usize },\n+    ContainsNewLine { pos: usize },\n+}\n+\n+enum Foo {\n+    A { a: usize, bbbbb: () },\n+    B { a: (), bbbbb: () },\n+}"}, {"sha": "572f448c4e7ce3cd96a03557048a71db259a3bfd", "filename": "tests/target/wrapped_hidden_code_block.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2f8c1fea72dee881b602d850422568b1f8c14d12/tests%2Ftarget%2Fwrapped_hidden_code_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f8c1fea72dee881b602d850422568b1f8c14d12/tests%2Ftarget%2Fwrapped_hidden_code_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fwrapped_hidden_code_block.rs?ref=2f8c1fea72dee881b602d850422568b1f8c14d12", "patch": "@@ -0,0 +1,13 @@\n+// rustfmt-max_width: 79\n+// rustfmt-wrap_comments: true\n+\n+/// ```rust\n+/// # #![cfg_attr(not(dox), feature(cfg_target_feature, target_feature,\n+/// # stdsimd)not(dox), feature(cfg_target_feature, target_feature,\n+/// # stdsimd))]\n+///\n+/// // Est lectus hendrerit lorem, eget dignissim orci nisl sit amet massa.\n+/// // Etiam volutpat lobortis eros.\n+/// let x = 42;\n+/// ```\n+fn func() {}"}]}