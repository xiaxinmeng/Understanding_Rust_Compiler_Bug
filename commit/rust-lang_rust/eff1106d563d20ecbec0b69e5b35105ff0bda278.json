{"sha": "eff1106d563d20ecbec0b69e5b35105ff0bda278", "node_id": "C_kwDOAAsO6NoAKGVmZjExMDZkNTYzZDIwZWNiZWMwYjY5ZTViMzUxMDVmZjBiZGEyNzg", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-12T03:23:26Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-12T03:44:27Z"}, "message": "Remove unused span argument from `check_mod` and `process_mod`.", "tree": {"sha": "bd176b9e0a69dd7462c710c91e13e3440fc53a95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd176b9e0a69dd7462c710c91e13e3440fc53a95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eff1106d563d20ecbec0b69e5b35105ff0bda278", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eff1106d563d20ecbec0b69e5b35105ff0bda278", "html_url": "https://github.com/rust-lang/rust/commit/eff1106d563d20ecbec0b69e5b35105ff0bda278", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eff1106d563d20ecbec0b69e5b35105ff0bda278/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "925363f13d0027d12d5a92eae6e5950beb293950", "url": "https://api.github.com/repos/rust-lang/rust/commits/925363f13d0027d12d5a92eae6e5950beb293950", "html_url": "https://github.com/rust-lang/rust/commit/925363f13d0027d12d5a92eae6e5950beb293950"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "a2a028a05082059dea115c3c9bae3dbf22373a10", "filename": "compiler/rustc_lint/src/late.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eff1106d563d20ecbec0b69e5b35105ff0bda278/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eff1106d563d20ecbec0b69e5b35105ff0bda278/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flate.rs?ref=eff1106d563d20ecbec0b69e5b35105ff0bda278", "patch": "@@ -76,8 +76,8 @@ impl<'tcx, T: LateLintPass<'tcx>> LateContextAndPass<'tcx, T> {\n         self.context.param_env = old_param_env;\n     }\n \n-    fn process_mod(&mut self, m: &'tcx hir::Mod<'tcx>, s: Span, n: hir::HirId) {\n-        lint_callback!(self, check_mod, m, s, n);\n+    fn process_mod(&mut self, m: &'tcx hir::Mod<'tcx>, n: hir::HirId) {\n+        lint_callback!(self, check_mod, m, n);\n         hir_visit::walk_mod(self, m, n);\n     }\n }\n@@ -220,9 +220,9 @@ impl<'tcx, T: LateLintPass<'tcx>> hir_visit::Visitor<'tcx> for LateContextAndPas\n         hir_visit::walk_inf(self, inf);\n     }\n \n-    fn visit_mod(&mut self, m: &'tcx hir::Mod<'tcx>, s: Span, n: hir::HirId) {\n+    fn visit_mod(&mut self, m: &'tcx hir::Mod<'tcx>, _: Span, n: hir::HirId) {\n         if !self.context.only_module {\n-            self.process_mod(m, s, n);\n+            self.process_mod(m, n);\n         }\n     }\n \n@@ -358,8 +358,8 @@ fn late_lint_mod_pass<'tcx, T: LateLintPass<'tcx>>(\n \n     let mut cx = LateContextAndPass { context, pass };\n \n-    let (module, span, hir_id) = tcx.hir().get_module(module_def_id);\n-    cx.process_mod(module, span, hir_id);\n+    let (module, _span, hir_id) = tcx.hir().get_module(module_def_id);\n+    cx.process_mod(module, hir_id);\n \n     // Visit the crate attributes\n     if hir_id == hir::CRATE_HIR_ID {"}, {"sha": "768ad84838b154cb0e8ceebc91d323ab72ca74e5", "filename": "compiler/rustc_lint/src/nonstandard_style.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eff1106d563d20ecbec0b69e5b35105ff0bda278/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eff1106d563d20ecbec0b69e5b35105ff0bda278/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs?ref=eff1106d563d20ecbec0b69e5b35105ff0bda278", "patch": "@@ -327,13 +327,7 @@ impl NonSnakeCase {\n }\n \n impl<'tcx> LateLintPass<'tcx> for NonSnakeCase {\n-    fn check_mod(\n-        &mut self,\n-        cx: &LateContext<'_>,\n-        _: &'tcx hir::Mod<'tcx>,\n-        _: Span,\n-        id: hir::HirId,\n-    ) {\n+    fn check_mod(&mut self, cx: &LateContext<'_>, _: &'tcx hir::Mod<'tcx>, id: hir::HirId) {\n         if id != hir::CRATE_HIR_ID {\n             return;\n         }"}, {"sha": "4e86746b7ab3cc2e4b041bfc67d7f8d85de081cd", "filename": "compiler/rustc_lint/src/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eff1106d563d20ecbec0b69e5b35105ff0bda278/compiler%2Frustc_lint%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eff1106d563d20ecbec0b69e5b35105ff0bda278/compiler%2Frustc_lint%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fpasses.rs?ref=eff1106d563d20ecbec0b69e5b35105ff0bda278", "patch": "@@ -16,7 +16,7 @@ macro_rules! late_lint_methods {\n             fn check_body_post(a: &$hir hir::Body<$hir>);\n             fn check_crate();\n             fn check_crate_post();\n-            fn check_mod(a: &$hir hir::Mod<$hir>, b: Span, c: hir::HirId);\n+            fn check_mod(a: &$hir hir::Mod<$hir>, b: hir::HirId);\n             fn check_foreign_item(a: &$hir hir::ForeignItem<$hir>);\n             fn check_item(a: &$hir hir::Item<$hir>);\n             fn check_item_post(a: &$hir hir::Item<$hir>);"}]}