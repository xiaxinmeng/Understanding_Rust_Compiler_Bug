{"sha": "5edc55f99fdd850f5e3c4168c917517d6afa0e07", "node_id": "C_kwDOAAsO6NoAKDVlZGM1NWY5OWZkZDg1MGY1ZTNjNDE2OGM5MTc1MTdkNmFmYTBlMDc", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-06-27T05:33:19Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-07T07:27:44Z"}, "message": "Fix borrowck closure span.", "tree": {"sha": "5ef0eb2821ff79e8be598b753ede0ea76f418140", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ef0eb2821ff79e8be598b753ede0ea76f418140"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5edc55f99fdd850f5e3c4168c917517d6afa0e07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5edc55f99fdd850f5e3c4168c917517d6afa0e07", "html_url": "https://github.com/rust-lang/rust/commit/5edc55f99fdd850f5e3c4168c917517d6afa0e07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5edc55f99fdd850f5e3c4168c917517d6afa0e07/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a950aa24bc8a63bb986c5e619cf0948969a4954a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a950aa24bc8a63bb986c5e619cf0948969a4954a", "html_url": "https://github.com/rust-lang/rust/commit/a950aa24bc8a63bb986c5e619cf0948969a4954a"}], "stats": {"total": 121, "additions": 83, "deletions": 38}, "files": [{"sha": "8134e1226628fa2aef91e132497f0b4599ce6d98", "filename": "compiler/rustc_borrowck/src/diagnostics/mutability_errors.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5edc55f99fdd850f5e3c4168c917517d6afa0e07/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5edc55f99fdd850f5e3c4168c917517d6afa0e07/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs?ref=5edc55f99fdd850f5e3c4168c917517d6afa0e07", "patch": "@@ -903,9 +903,7 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                 if let Some(span) = arg {\n                     err.span_label(span, \"change this to accept `FnMut` instead of `Fn`\");\n                     err.span_label(func.span, \"expects `Fn` instead of `FnMut`\");\n-                    if self.infcx.tcx.sess.source_map().is_multiline(self.body.span) {\n-                        err.span_label(self.body.span, \"in this closure\");\n-                    }\n+                    err.span_label(self.body.span, \"in this closure\");\n                     look_at_return = false;\n                 }\n             }"}, {"sha": "093589ed0921fced630d1efa12a21bdcf80fc161", "filename": "src/test/ui/borrowck/borrow-immutable-upvar-mutation.stderr", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Fborrowck%2Fborrow-immutable-upvar-mutation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Fborrowck%2Fborrow-immutable-upvar-mutation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrow-immutable-upvar-mutation.stderr?ref=5edc55f99fdd850f5e3c4168c917517d6afa0e07", "patch": "@@ -5,8 +5,9 @@ LL | fn to_fn<A, F: Fn<A>>(f: F) -> F {\n    |                          - change this to accept `FnMut` instead of `Fn`\n ...\n LL |         let _f = to_fn(|| x = 42);\n-   |                  -----    ^^^^^^ cannot assign\n-   |                  |\n+   |                  ----- -- ^^^^^^ cannot assign\n+   |                  |     |\n+   |                  |     in this closure\n    |                  expects `Fn` instead of `FnMut`\n \n error[E0596]: cannot borrow `y` as mutable, as it is a captured variable in a `Fn` closure\n@@ -16,8 +17,9 @@ LL | fn to_fn<A, F: Fn<A>>(f: F) -> F {\n    |                          - change this to accept `FnMut` instead of `Fn`\n ...\n LL |         let _g = to_fn(|| set(&mut y));\n-   |                  -----        ^^^^^^ cannot borrow as mutable\n-   |                  |\n+   |                  ----- --     ^^^^^^ cannot borrow as mutable\n+   |                  |     |\n+   |                  |     in this closure\n    |                  expects `Fn` instead of `FnMut`\n \n error[E0594]: cannot assign to `z`, as it is a captured variable in a `Fn` closure\n@@ -27,8 +29,9 @@ LL | fn to_fn<A, F: Fn<A>>(f: F) -> F {\n    |                          - change this to accept `FnMut` instead of `Fn`\n ...\n LL |             to_fn(|| z = 42);\n-   |             -----    ^^^^^^ cannot assign\n-   |             |\n+   |             ----- -- ^^^^^^ cannot assign\n+   |             |     |\n+   |             |     in this closure\n    |             expects `Fn` instead of `FnMut`\n \n error[E0594]: cannot assign to `x`, as it is a captured variable in a `Fn` closure\n@@ -38,8 +41,9 @@ LL | fn to_fn<A, F: Fn<A>>(f: F) -> F {\n    |                          - change this to accept `FnMut` instead of `Fn`\n ...\n LL |         let _f = to_fn(move || x = 42);\n-   |                  -----         ^^^^^^ cannot assign\n-   |                  |\n+   |                  ----- ------- ^^^^^^ cannot assign\n+   |                  |     |\n+   |                  |     in this closure\n    |                  expects `Fn` instead of `FnMut`\n \n error[E0596]: cannot borrow `y` as mutable, as it is a captured variable in a `Fn` closure\n@@ -49,8 +53,9 @@ LL | fn to_fn<A, F: Fn<A>>(f: F) -> F {\n    |                          - change this to accept `FnMut` instead of `Fn`\n ...\n LL |         let _g = to_fn(move || set(&mut y));\n-   |                  -----             ^^^^^^ cannot borrow as mutable\n-   |                  |\n+   |                  ----- -------     ^^^^^^ cannot borrow as mutable\n+   |                  |     |\n+   |                  |     in this closure\n    |                  expects `Fn` instead of `FnMut`\n \n error[E0594]: cannot assign to `z`, as it is a captured variable in a `Fn` closure\n@@ -60,8 +65,9 @@ LL | fn to_fn<A, F: Fn<A>>(f: F) -> F {\n    |                          - change this to accept `FnMut` instead of `Fn`\n ...\n LL |             to_fn(move || z = 42);\n-   |             -----         ^^^^^^ cannot assign\n-   |             |\n+   |             ----- ------- ^^^^^^ cannot assign\n+   |             |     |\n+   |             |     in this closure\n    |             expects `Fn` instead of `FnMut`\n \n error[E0594]: cannot assign to `x`, as it is a captured variable in a `Fn` closure"}, {"sha": "869375cb2c61be2a0911f28e05e42e2c409b3cd2", "filename": "src/test/ui/borrowck/borrow-raw-address-of-mutability.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Fborrowck%2Fborrow-raw-address-of-mutability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Fborrowck%2Fborrow-raw-address-of-mutability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrow-raw-address-of-mutability.stderr?ref=5edc55f99fdd850f5e3c4168c917517d6afa0e07", "patch": "@@ -33,7 +33,9 @@ LL | fn make_fn<F: Fn()>(f: F) -> F { f }\n    |                        - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     let f = make_fn(|| {\n-   |             ------- expects `Fn` instead of `FnMut`\n+   |             ------- -- in this closure\n+   |             |\n+   |             expects `Fn` instead of `FnMut`\n LL |         let y = &raw mut x;\n    |                 ^^^^^^^^^^ cannot borrow as mutable\n \n@@ -44,7 +46,9 @@ LL | fn make_fn<F: Fn()>(f: F) -> F { f }\n    |                        - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     let f = make_fn(move || {\n-   |             ------- expects `Fn` instead of `FnMut`\n+   |             ------- ------- in this closure\n+   |             |\n+   |             expects `Fn` instead of `FnMut`\n LL |         let y = &raw mut x;\n    |                 ^^^^^^^^^^ cannot borrow as mutable\n "}, {"sha": "dd29ae492d604fa758dfc593df29f24f0f969942", "filename": "src/test/ui/borrowck/mutability-errors.stderr", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Fborrowck%2Fmutability-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Fborrowck%2Fmutability-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmutability-errors.stderr?ref=5edc55f99fdd850f5e3c4168c917517d6afa0e07", "patch": "@@ -123,7 +123,9 @@ LL | fn fn_ref<F: Fn()>(f: F) -> F { f }\n    |                       - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     fn_ref(|| {\n-   |     ------ expects `Fn` instead of `FnMut`\n+   |     ------ -- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n LL |         x = (1,);\n    |         ^^^^^^^^ cannot assign\n \n@@ -134,7 +136,9 @@ LL | fn fn_ref<F: Fn()>(f: F) -> F { f }\n    |                       - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     fn_ref(|| {\n-   |     ------ expects `Fn` instead of `FnMut`\n+   |     ------ -- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n LL |         x = (1,);\n LL |         x.0 = 1;\n    |         ^^^^^^^ cannot assign\n@@ -146,7 +150,9 @@ LL | fn fn_ref<F: Fn()>(f: F) -> F { f }\n    |                       - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     fn_ref(|| {\n-   |     ------ expects `Fn` instead of `FnMut`\n+   |     ------ -- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n ...\n LL |         &mut x;\n    |         ^^^^^^ cannot borrow as mutable\n@@ -158,7 +164,9 @@ LL | fn fn_ref<F: Fn()>(f: F) -> F { f }\n    |                       - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     fn_ref(|| {\n-   |     ------ expects `Fn` instead of `FnMut`\n+   |     ------ -- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n ...\n LL |         &mut x.0;\n    |         ^^^^^^^^ cannot borrow as mutable\n@@ -170,7 +178,9 @@ LL | fn fn_ref<F: Fn()>(f: F) -> F { f }\n    |                       - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     fn_ref(move || {\n-   |     ------ expects `Fn` instead of `FnMut`\n+   |     ------ ------- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n LL |         x = (1,);\n    |         ^^^^^^^^ cannot assign\n \n@@ -181,7 +191,9 @@ LL | fn fn_ref<F: Fn()>(f: F) -> F { f }\n    |                       - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     fn_ref(move || {\n-   |     ------ expects `Fn` instead of `FnMut`\n+   |     ------ ------- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n LL |         x = (1,);\n LL |         x.0 = 1;\n    |         ^^^^^^^ cannot assign\n@@ -193,7 +205,9 @@ LL | fn fn_ref<F: Fn()>(f: F) -> F { f }\n    |                       - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     fn_ref(move || {\n-   |     ------ expects `Fn` instead of `FnMut`\n+   |     ------ ------- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n ...\n LL |         &mut x;\n    |         ^^^^^^ cannot borrow as mutable\n@@ -205,7 +219,9 @@ LL | fn fn_ref<F: Fn()>(f: F) -> F { f }\n    |                       - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     fn_ref(move || {\n-   |     ------ expects `Fn` instead of `FnMut`\n+   |     ------ ------- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n ...\n LL |         &mut x.0;\n    |         ^^^^^^^^ cannot borrow as mutable"}, {"sha": "97141886fe7381a314b521b104ecf7ecc1e72002", "filename": "src/test/ui/fn/fn-closure-mutable-capture.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Ffn%2Ffn-closure-mutable-capture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Ffn%2Ffn-closure-mutable-capture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffn%2Ffn-closure-mutable-capture.rs?ref=5edc55f99fdd850f5e3c4168c917517d6afa0e07", "patch": "@@ -6,6 +6,7 @@ pub fn foo() {\n     //~^ ERROR cannot assign to `x`, as it is a captured variable in a `Fn` closure\n     //~| NOTE cannot assign\n     //~| NOTE expects `Fn` instead of `FnMut`\n+    //~| NOTE in this closure\n }\n \n fn main() {}"}, {"sha": "03e3d545a99198a3750f9ef88b7b5d6354eef400", "filename": "src/test/ui/fn/fn-closure-mutable-capture.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Ffn%2Ffn-closure-mutable-capture.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Ffn%2Ffn-closure-mutable-capture.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffn%2Ffn-closure-mutable-capture.stderr?ref=5edc55f99fdd850f5e3c4168c917517d6afa0e07", "patch": "@@ -5,8 +5,9 @@ LL | pub fn bar<F: Fn()>(_f: F) {}\n    |                         - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     bar(move || x = 1);\n-   |     ---         ^^^^^ cannot assign\n-   |     |\n+   |     --- ------- ^^^^^ cannot assign\n+   |     |   |\n+   |     |   in this closure\n    |     expects `Fn` instead of `FnMut`\n \n error: aborting due to previous error"}, {"sha": "ea304f9367b05305991a0c267e252192e9dabf27", "filename": "src/test/ui/issues/issue-21600.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Fissues%2Fissue-21600.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Fissues%2Fissue-21600.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21600.stderr?ref=5edc55f99fdd850f5e3c4168c917517d6afa0e07", "patch": "@@ -5,8 +5,9 @@ LL | fn call_it<F>(f: F) where F: Fn() { f(); }\n    |                  - change this to accept `FnMut` instead of `Fn`\n ...\n LL |         call_it(|| x.gen_mut());\n-   |         -------    ^^^^^^^^^^^ cannot borrow as mutable\n-   |         |\n+   |         ------- -- ^^^^^^^^^^^ cannot borrow as mutable\n+   |         |       |\n+   |         |       in this closure\n    |         expects `Fn` instead of `FnMut`\n \n error[E0596]: cannot borrow `x` as mutable, as it is a captured variable in a `Fn` closure\n@@ -16,7 +17,9 @@ LL | fn call_it<F>(f: F) where F: Fn() { f(); }\n    |                  - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     call_it(|| {\n-   |     ------- expects `Fn` instead of `FnMut`\n+   |     ------- -- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n LL |         call_it(|| x.gen());\n LL |         call_it(|| x.gen_mut());\n    |                 ^^ - mutable borrow occurs due to use of `x` in closure"}, {"sha": "5233f0b246261378bd26cab860c12453ab1117e5", "filename": "src/test/ui/nll/closure-captures.stderr", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Fnll%2Fclosure-captures.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Fnll%2Fclosure-captures.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-captures.stderr?ref=5edc55f99fdd850f5e3c4168c917517d6afa0e07", "patch": "@@ -41,7 +41,9 @@ LL | fn fn_ref<F: Fn()>(f: F) -> F { f }\n    |                       - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     fn_ref(|| {\n-   |     ------ expects `Fn` instead of `FnMut`\n+   |     ------ -- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n LL |         ||\n    |         ^^ cannot borrow as mutable\n LL |          x = 1;}\n@@ -54,7 +56,9 @@ LL | fn fn_ref<F: Fn()>(f: F) -> F { f }\n    |                       - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     fn_ref(move || {\n-   |     ------ expects `Fn` instead of `FnMut`\n+   |     ------ ------- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n LL |         ||\n    |         ^^ cannot borrow as mutable\n LL |     x = 1;});\n@@ -76,7 +80,9 @@ LL | fn fn_ref<F: Fn()>(f: F) -> F { f }\n    |                       - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     fn_ref(|| {\n-   |     ------ expects `Fn` instead of `FnMut`\n+   |     ------ -- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n LL |         ||\n    |         ^^ cannot borrow as mutable\n LL |          x = 1;}\n@@ -98,7 +104,9 @@ LL | fn fn_ref<F: Fn()>(f: F) -> F { f }\n    |                       - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     fn_ref(move || {\n-   |     ------ expects `Fn` instead of `FnMut`\n+   |     ------ ------- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n LL |         ||\n    |         ^^ cannot borrow as mutable\n LL |     x = 1;});\n@@ -111,7 +119,9 @@ LL | fn fn_ref<F: Fn()>(f: F) -> F { f }\n    |                       - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     fn_ref(|| {\n-   |     ------ expects `Fn` instead of `FnMut`\n+   |     ------ -- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n LL |         ||\n    |         ^^ cannot borrow as mutable\n LL |         *x = 1;});\n@@ -124,7 +134,9 @@ LL | fn fn_ref<F: Fn()>(f: F) -> F { f }\n    |                       - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     fn_ref(move || {\n-   |     ------ expects `Fn` instead of `FnMut`\n+   |     ------ ------- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n LL |         ||\n    |         ^^ cannot borrow as mutable\n LL |         *x = 1;});"}, {"sha": "d6e74b5b8b91413bac7326ea736a8300b4eaf411", "filename": "src/test/ui/unboxed-closures/unboxed-closures-mutate-upvar.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-mutate-upvar.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-mutate-upvar.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-mutate-upvar.stderr?ref=5edc55f99fdd850f5e3c4168c917517d6afa0e07", "patch": "@@ -32,7 +32,9 @@ LL | fn to_fn<A,F:Fn<A>>(f: F) -> F { f }\n    |                        - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     let mut f = to_fn(move || {\n-   |                 ----- expects `Fn` instead of `FnMut`\n+   |                 ----- ------- in this closure\n+   |                 |\n+   |                 expects `Fn` instead of `FnMut`\n LL |         n += 1;\n    |         ^^^^^^ cannot assign\n "}, {"sha": "7d15cd0c882a58edfa9845b1ff6427bae5706acf", "filename": "src/test/ui/unboxed-closures/unboxed-closures-mutated-upvar-from-fn-closure.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-mutated-upvar-from-fn-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5edc55f99fdd850f5e3c4168c917517d6afa0e07/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-mutated-upvar-from-fn-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-mutated-upvar-from-fn-closure.stderr?ref=5edc55f99fdd850f5e3c4168c917517d6afa0e07", "patch": "@@ -5,7 +5,9 @@ LL | fn call<F>(f: F) where F : Fn() {\n    |               - change this to accept `FnMut` instead of `Fn`\n ...\n LL |     call(|| {\n-   |     ---- expects `Fn` instead of `FnMut`\n+   |     ---- -- in this closure\n+   |     |\n+   |     expects `Fn` instead of `FnMut`\n LL |         counter += 1;\n    |         ^^^^^^^^^^^^ cannot assign\n "}]}