{"sha": "f86615299190b77fd5890ee3951ed85e36d829df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NjYxNTI5OTE5MGI3N2ZkNTg5MGVlMzk1MWVkODVlMzZkODI5ZGY=", "commit": {"author": {"name": "Matt Ickstadt", "email": "mattico8@gmail.com", "date": "2017-08-26T22:09:31Z"}, "committer": {"name": "Matt Ickstadt", "email": "mattico8@gmail.com", "date": "2017-09-01T17:46:37Z"}, "message": "Implement RFC 1925", "tree": {"sha": "5a0f7f160bb0ad56786454d03222fee0fad8768c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a0f7f160bb0ad56786454d03222fee0fad8768c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f86615299190b77fd5890ee3951ed85e36d829df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f86615299190b77fd5890ee3951ed85e36d829df", "html_url": "https://github.com/rust-lang/rust/commit/f86615299190b77fd5890ee3951ed85e36d829df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f86615299190b77fd5890ee3951ed85e36d829df/comments", "author": {"login": "mattico", "id": 853158, "node_id": "MDQ6VXNlcjg1MzE1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/853158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattico", "html_url": "https://github.com/mattico", "followers_url": "https://api.github.com/users/mattico/followers", "following_url": "https://api.github.com/users/mattico/following{/other_user}", "gists_url": "https://api.github.com/users/mattico/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattico/subscriptions", "organizations_url": "https://api.github.com/users/mattico/orgs", "repos_url": "https://api.github.com/users/mattico/repos", "events_url": "https://api.github.com/users/mattico/events{/privacy}", "received_events_url": "https://api.github.com/users/mattico/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mattico", "id": 853158, "node_id": "MDQ6VXNlcjg1MzE1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/853158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattico", "html_url": "https://github.com/mattico", "followers_url": "https://api.github.com/users/mattico/followers", "following_url": "https://api.github.com/users/mattico/following{/other_user}", "gists_url": "https://api.github.com/users/mattico/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattico/subscriptions", "organizations_url": "https://api.github.com/users/mattico/orgs", "repos_url": "https://api.github.com/users/mattico/repos", "events_url": "https://api.github.com/users/mattico/events{/privacy}", "received_events_url": "https://api.github.com/users/mattico/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed532c0d933aaae45e6804efc5936bea078bbaad", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed532c0d933aaae45e6804efc5936bea078bbaad", "html_url": "https://github.com/rust-lang/rust/commit/ed532c0d933aaae45e6804efc5936bea078bbaad"}], "stats": {"total": 83, "additions": 81, "deletions": 2}, "files": [{"sha": "6ef1ab38e8d242ffc7e02a6961f05343fcb2081f", "filename": "src/doc/unstable-book/src/language-features/match-beginning-vert.md", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f86615299190b77fd5890ee3951ed85e36d829df/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fmatch-beginning-vert.md", "raw_url": "https://github.com/rust-lang/rust/raw/f86615299190b77fd5890ee3951ed85e36d829df/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fmatch-beginning-vert.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fmatch-beginning-vert.md?ref=f86615299190b77fd5890ee3951ed85e36d829df", "patch": "@@ -0,0 +1,21 @@\n+# `match_beginning_vert`\n+\n+The tracking issue for this feature is [#44101].\n+\n+With this feature enabled, you are allowed to add a '|' to the beginning of a\n+match arm:\n+\n+```rust\n+#![feature(match_beginning_vert)]\n+\n+enum Foo { A, B }\n+\n+fn main() {\n+    let x = Foo::A;\n+    match x {\n+        | A | B => {},\n+    }\n+}\n+```\n+\n+[#44101]: https://github.com/rust-lang/rust/issues/44101\n\\ No newline at end of file"}, {"sha": "720f6cd32bdf86a52ceb889379ef1446d5c178de", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f86615299190b77fd5890ee3951ed85e36d829df/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86615299190b77fd5890ee3951ed85e36d829df/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=f86615299190b77fd5890ee3951ed85e36d829df", "patch": "@@ -810,6 +810,7 @@ pub struct Arm {\n     pub pats: Vec<P<Pat>>,\n     pub guard: Option<P<Expr>>,\n     pub body: P<Expr>,\n+    pub beginning_vert: Option<Span>, // For RFC 1925 feature gate\n }\n \n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]"}, {"sha": "48d789372a07b7ae70a592fdcb1d3cb8e013a17c", "filename": "src/libsyntax/ext/build.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f86615299190b77fd5890ee3951ed85e36d829df/src%2Flibsyntax%2Fext%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86615299190b77fd5890ee3951ed85e36d829df/src%2Flibsyntax%2Fext%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbuild.rs?ref=f86615299190b77fd5890ee3951ed85e36d829df", "patch": "@@ -878,7 +878,8 @@ impl<'a> AstBuilder for ExtCtxt<'a> {\n             attrs: vec![],\n             pats,\n             guard: None,\n-            body: expr\n+            body: expr,\n+            beginning_vert: None,\n         }\n     }\n "}, {"sha": "adef4942b67836c0588236b480b95b519b01c2f5", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f86615299190b77fd5890ee3951ed85e36d829df/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86615299190b77fd5890ee3951ed85e36d829df/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=f86615299190b77fd5890ee3951ed85e36d829df", "patch": "@@ -379,6 +379,9 @@ declare_features! (\n \n     // allow `#[must_use]` on functions (RFC 1940)\n     (active, fn_must_use, \"1.21.0\", Some(43302)),\n+\n+    // allow '|' at beginning of match arms (RFC 1925)\n+    (active, match_beginning_vert, \"1.21.0\", Some(44101)),\n );\n \n declare_features! (\n@@ -1435,6 +1438,14 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n         visit::walk_expr(self, e);\n     }\n \n+    fn visit_arm(&mut self, arm: &'a ast::Arm) {\n+        if let Some(span) = arm.beginning_vert {\n+            gate_feature_post!(&self, match_beginning_vert,\n+                               span,\n+                               \"Use of a '|' at the beginning of a match arm is experimental\")\n+        }\n+    }\n+\n     fn visit_pat(&mut self, pattern: &'a ast::Pat) {\n         match pattern.node {\n             PatKind::Slice(_, Some(_), ref last) if !last.is_empty() => {"}, {"sha": "03c47b71d02d717c223ec953233e6b8a309e6a8c", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f86615299190b77fd5890ee3951ed85e36d829df/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86615299190b77fd5890ee3951ed85e36d829df/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=f86615299190b77fd5890ee3951ed85e36d829df", "patch": "@@ -344,12 +344,14 @@ pub fn fold_thin_attrs<T: Folder>(attrs: ThinVec<Attribute>, fld: &mut T) -> Thi\n     fold_attrs(attrs.into(), fld).into()\n }\n \n-pub fn noop_fold_arm<T: Folder>(Arm {attrs, pats, guard, body}: Arm, fld: &mut T) -> Arm {\n+pub fn noop_fold_arm<T: Folder>(Arm {attrs, pats, guard, body, beginning_vert}: Arm,\n+    fld: &mut T) -> Arm {\n     Arm {\n         attrs: fold_attrs(attrs, fld),\n         pats: pats.move_map(|x| fld.fold_pat(x)),\n         guard: guard.map(|x| fld.fold_expr(x)),\n         body: fld.fold_expr(body),\n+        beginning_vert,\n     }\n }\n "}, {"sha": "1f033b25fe4f61bae67a3aacc8f97bb81b07564c", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f86615299190b77fd5890ee3951ed85e36d829df/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86615299190b77fd5890ee3951ed85e36d829df/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f86615299190b77fd5890ee3951ed85e36d829df", "patch": "@@ -3155,6 +3155,12 @@ impl<'a> Parser<'a> {\n         maybe_whole!(self, NtArm, |x| x);\n \n         let attrs = self.parse_outer_attributes()?;\n+        // Allow a '|' before the pats (RFC 1925)\n+        let beginning_vert = if self.eat(&token::BinOp(token::Or)) {\n+            Some(self.prev_span)\n+        } else {\n+            None\n+        };\n         let pats = self.parse_pats()?;\n         let guard = if self.eat_keyword(keywords::If) {\n             Some(self.parse_expr()?)\n@@ -3178,6 +3184,7 @@ impl<'a> Parser<'a> {\n             pats,\n             guard,\n             body: expr,\n+            beginning_vert,\n         })\n     }\n "}, {"sha": "9085563c99d6d5db3c0cd289a4f162e6f4c69cc7", "filename": "src/test/compile-fail/feature-gate-match_beginning_vert.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f86615299190b77fd5890ee3951ed85e36d829df/src%2Ftest%2Fcompile-fail%2Ffeature-gate-match_beginning_vert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86615299190b77fd5890ee3951ed85e36d829df/src%2Ftest%2Fcompile-fail%2Ffeature-gate-match_beginning_vert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-match_beginning_vert.rs?ref=f86615299190b77fd5890ee3951ed85e36d829df", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[allow(dead_code)]\n+enum Foo {\n+    A,\n+    B,\n+    C,\n+    D,\n+    E,\n+}\n+use Foo::*;\n+\n+fn main() {\n+    let x = Foo::A;\n+    match x {\n+        | A => println!(\"A\"),\n+        //~^ ERROR: Use of a '|' at the beginning of a match arm is experimental (see issue #44101)\n+        | B | C => println!(\"BC!\"),\n+        //~^ ERROR: Use of a '|' at the beginning of a match arm is experimental (see issue #44101)\n+        | _ => {},\n+        //~^ ERROR: Use of a '|' at the beginning of a match arm is experimental (see issue #44101)\n+    };\n+    match x {\n+        A | B | C => println!(\"ABC!\"),\n+        _ => {},\n+    };\n+}\n+"}]}