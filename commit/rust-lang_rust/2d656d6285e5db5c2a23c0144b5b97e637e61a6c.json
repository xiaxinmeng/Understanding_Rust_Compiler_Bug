{"sha": "2d656d6285e5db5c2a23c0144b5b97e637e61a6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNjU2ZDYyODVlNWRiNWMyYTIzYzAxNDRiNWI5N2U2MzdlNjFhNmM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-01-19T02:23:46Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-01-19T02:23:46Z"}, "message": "Pass the correct --target flag when type checking pretty-printed code in tests\n\nThis makes pretty print tests that have aux crates work correctly on Android.\nWithout they generate errors ICEs about incorrect node ids. Not sure why.", "tree": {"sha": "9c3c672520277ff0bb4d21a260dea16bb3c43601", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c3c672520277ff0bb4d21a260dea16bb3c43601"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d656d6285e5db5c2a23c0144b5b97e637e61a6c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d656d6285e5db5c2a23c0144b5b97e637e61a6c", "html_url": "https://github.com/rust-lang/rust/commit/2d656d6285e5db5c2a23c0144b5b97e637e61a6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d656d6285e5db5c2a23c0144b5b97e637e61a6c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ff5963b9da3a0be40d3ea56cf9d4063fc5ac32d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ff5963b9da3a0be40d3ea56cf9d4063fc5ac32d", "html_url": "https://github.com/rust-lang/rust/commit/2ff5963b9da3a0be40d3ea56cf9d4063fc5ac32d"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "9ebc8236f6fec84b279e99adbd1eab8f68a05ee5", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2d656d6285e5db5c2a23c0144b5b97e637e61a6c/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d656d6285e5db5c2a23c0144b5b97e637e61a6c/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=2d656d6285e5db5c2a23c0144b5b97e637e61a6c", "patch": "@@ -237,9 +237,15 @@ actual:\\n\\\n \n     fn make_typecheck_args(config: &config, props: &TestProps, testfile: &Path) -> ProcArgs {\n         let aux_dir = aux_output_dir_name(config, testfile);\n+        let target = if props.force_host {\n+            config.host.as_slice()\n+        } else {\n+            config.target.as_slice()\n+        };\n         // FIXME (#9639): This needs to handle non-utf8 paths\n         let mut args = ~[~\"-\",\n                          ~\"--no-trans\", ~\"--lib\",\n+                         ~\"--target=\" + target,\n                          ~\"-L\", config.build_base.as_str().unwrap().to_owned(),\n                          ~\"-L\",\n                          aux_dir.as_str().unwrap().to_owned()];"}]}