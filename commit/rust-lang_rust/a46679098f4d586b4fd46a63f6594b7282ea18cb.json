{"sha": "a46679098f4d586b4fd46a63f6594b7282ea18cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0NjY3OTA5OGY0ZDU4NmI0ZmQ0NmE2M2Y2NTk0YjcyODJlYTE4Y2I=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-18T20:24:15Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-18T20:24:15Z"}, "message": "Add lint to warn about braces in a panic message.", "tree": {"sha": "f29a2b6cc45c194953685082a20dee1242a1885a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f29a2b6cc45c194953685082a20dee1242a1885a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a46679098f4d586b4fd46a63f6594b7282ea18cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a46679098f4d586b4fd46a63f6594b7282ea18cb", "html_url": "https://github.com/rust-lang/rust/commit/a46679098f4d586b4fd46a63f6594b7282ea18cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a46679098f4d586b4fd46a63f6594b7282ea18cb/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e2032390cf34f3ffa726b7bd890141e2684ba63", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e2032390cf34f3ffa726b7bd890141e2684ba63", "html_url": "https://github.com/rust-lang/rust/commit/7e2032390cf34f3ffa726b7bd890141e2684ba63"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "81549be4b09151ca000bce483b63e3fc02f40d30", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a46679098f4d586b4fd46a63f6594b7282ea18cb/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a46679098f4d586b4fd46a63f6594b7282ea18cb/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=a46679098f4d586b4fd46a63f6594b7282ea18cb", "patch": "@@ -55,6 +55,7 @@ mod levels;\n mod methods;\n mod non_ascii_idents;\n mod nonstandard_style;\n+mod panic_fmt;\n mod passes;\n mod redundant_semicolon;\n mod traits;\n@@ -80,6 +81,7 @@ use internal::*;\n use methods::*;\n use non_ascii_idents::*;\n use nonstandard_style::*;\n+use panic_fmt::PanicFmt;\n use redundant_semicolon::*;\n use traits::*;\n use types::*;\n@@ -166,6 +168,7 @@ macro_rules! late_lint_passes {\n                 ClashingExternDeclarations: ClashingExternDeclarations::new(),\n                 DropTraitConstraints: DropTraitConstraints,\n                 TemporaryCStringAsPtr: TemporaryCStringAsPtr,\n+                PanicFmt: PanicFmt,\n             ]\n         );\n     };"}, {"sha": "0d3649ec543b9abac6ff7151327b12a7da162c60", "filename": "compiler/rustc_lint/src/panic_fmt.rs", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/a46679098f4d586b4fd46a63f6594b7282ea18cb/compiler%2Frustc_lint%2Fsrc%2Fpanic_fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a46679098f4d586b4fd46a63f6594b7282ea18cb/compiler%2Frustc_lint%2Fsrc%2Fpanic_fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fpanic_fmt.rs?ref=a46679098f4d586b4fd46a63f6594b7282ea18cb", "patch": "@@ -0,0 +1,57 @@\n+use crate::{LateContext, LateLintPass, LintContext};\n+use rustc_ast as ast;\n+use rustc_hir as hir;\n+use rustc_middle::ty;\n+\n+declare_lint! {\n+    /// The `panic_fmt` lint detects `panic!(\"..\")` with `{` or `}` in the string literal.\n+    ///\n+    /// ### Example\n+    ///\n+    /// ```rust,no_run\n+    /// panic!(\"{}\");\n+    /// ```\n+    ///\n+    /// {{produces}}\n+    ///\n+    /// ### Explanation\n+    ///\n+    /// `panic!(\"{}\")` panics with the message `\"{}\"`, as a `panic!()` invocation\n+    /// with a single argument does not use `format_args!()`.\n+    /// A future version of Rust will interpret this string as format string,\n+    /// which would break this.\n+    PANIC_FMT,\n+    Warn,\n+    \"detect braces in single-argument panic!() invocations\",\n+    report_in_external_macro\n+}\n+\n+declare_lint_pass!(PanicFmt => [PANIC_FMT]);\n+\n+impl<'tcx> LateLintPass<'tcx> for PanicFmt {\n+    fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx hir::Expr<'tcx>) {\n+        if let hir::ExprKind::Call(f, [arg]) = &expr.kind {\n+            if let &ty::FnDef(def_id, _) = cx.typeck_results().expr_ty(f).kind() {\n+                if Some(def_id) == cx.tcx.lang_items().begin_panic_fn()\n+                    || Some(def_id) == cx.tcx.lang_items().panic_fn()\n+                {\n+                    check_panic(cx, f, arg);\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+fn check_panic<'tcx>(cx: &LateContext<'tcx>, f: &'tcx hir::Expr<'tcx>, arg: &'tcx hir::Expr<'tcx>) {\n+    if let hir::ExprKind::Lit(lit) = &arg.kind {\n+        if let ast::LitKind::Str(sym, _) = lit.node {\n+            if sym.as_str().contains(&['{', '}'][..]) {\n+                cx.struct_span_lint(PANIC_FMT, f.span, |lint| {\n+                    lint.build(\"Panic message contains a brace\")\n+                    .note(\"This message is not used as a format string, but will be in a future Rust version\")\n+                    .emit();\n+                });\n+            }\n+        }\n+    }\n+}"}]}