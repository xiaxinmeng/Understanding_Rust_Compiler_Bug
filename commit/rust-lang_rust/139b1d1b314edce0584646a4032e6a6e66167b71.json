{"sha": "139b1d1b314edce0584646a4032e6a6e66167b71", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzOWIxZDFiMzE0ZWRjZTA1ODQ2NDZhNDAzMmU2YTZlNjYxNjdiNzE=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-09T12:02:07Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-09T12:02:07Z"}, "message": "Get rid of some unused upcalls\n\nI guess these became obsolete when the communication stuff moved into\nthe stdlib.", "tree": {"sha": "39a1820719e94748a82545ea8fbef49610252e46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39a1820719e94748a82545ea8fbef49610252e46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/139b1d1b314edce0584646a4032e6a6e66167b71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/139b1d1b314edce0584646a4032e6a6e66167b71", "html_url": "https://github.com/rust-lang/rust/commit/139b1d1b314edce0584646a4032e6a6e66167b71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/139b1d1b314edce0584646a4032e6a6e66167b71/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd2ec03771fcc589772a0b42ff9a76ec81e0f993", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd2ec03771fcc589772a0b42ff9a76ec81e0f993", "html_url": "https://github.com/rust-lang/rust/commit/bd2ec03771fcc589772a0b42ff9a76ec81e0f993"}], "stats": {"total": 69, "additions": 3, "deletions": 66}, "files": [{"sha": "774cb30c001e32434d68e7b8be3e0d13dfd2dd3e", "filename": "src/comp/back/upcall.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/139b1d1b314edce0584646a4032e6a6e66167b71/src%2Fcomp%2Fback%2Fupcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139b1d1b314edce0584646a4032e6a6e66167b71/src%2Fcomp%2Fback%2Fupcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Fupcall.rs?ref=139b1d1b314edce0584646a4032e6a6e66167b71", "patch": "@@ -24,12 +24,7 @@ import lib::llvm::llvm::ValueRef;\n import lib::llvm::llvm::TypeRef;\n \n type upcalls =\n-    {grow_task: ValueRef,\n-     _yield: ValueRef,\n-     sleep: ValueRef,\n-     _fail: ValueRef,\n-     kill: ValueRef,\n-     exit: ValueRef,\n+    {_fail: ValueRef,\n      malloc: ValueRef,\n      free: ValueRef,\n      shared_malloc: ValueRef,\n@@ -61,13 +56,7 @@ fn declare_upcalls(_tn: type_names, tydesc_type: TypeRef,\n     let d = bind decl_with_taskptr(taskptr_type, llmod, _, _, _);\n     let dr = bind decl(llmod, _, _, _);\n \n-    let empty_vec: [TypeRef] = [];\n-    ret @{grow_task: dv(\"grow_task\", [T_size_t()]),\n-          _yield: dv(\"yield\", empty_vec),\n-          sleep: dv(\"sleep\", [T_size_t()]),\n-          _fail: dv(\"fail\", [T_ptr(T_i8()), T_ptr(T_i8()), T_size_t()]),\n-          kill: dv(\"kill\", [taskptr_type]),\n-          exit: dv(\"exit\", empty_vec),\n+    ret @{_fail: dv(\"fail\", [T_ptr(T_i8()), T_ptr(T_i8()), T_size_t()]),\n           malloc:\n               d(\"malloc\", [T_size_t(), T_ptr(tydesc_type)], T_ptr(T_i8())),\n           free: dv(\"free\", [T_ptr(T_i8()), T_int()]),"}, {"sha": "5e0c9dbf4c2dd22d9e4b65e285176913bca9209b", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/139b1d1b314edce0584646a4032e6a6e66167b71/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/139b1d1b314edce0584646a4032e6a6e66167b71/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=139b1d1b314edce0584646a4032e6a6e66167b71", "patch": "@@ -160,11 +160,9 @@ rand_free(rust_task *task, randctx *rctx)\n     task->free(rctx);\n }\n \n-extern \"C\" CDECL void upcall_sleep(rust_task *task, size_t time_in_us);\n-\n extern \"C\" CDECL void\n task_sleep(rust_task *task, size_t time_in_us) {\n-    upcall_sleep(task, time_in_us);\n+    task->yield(time_in_us);\n }\n \n extern \"C\" CDECL void"}, {"sha": "2d7791e876f32881a428f6ad60b21d411cb66256", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/139b1d1b314edce0584646a4032e6a6e66167b71/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/139b1d1b314edce0584646a4032e6a6e66167b71/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=139b1d1b314edce0584646a4032e6a6e66167b71", "patch": "@@ -20,20 +20,6 @@ check_stack(rust_task *task) {\n }\n #endif\n \n-extern \"C\" void\n-upcall_grow_task(rust_task *task, size_t n_frame_bytes) {\n-    I(task->sched, false);\n-    LOG_UPCALL_ENTRY(task);\n-    task->grow(n_frame_bytes);\n-}\n-\n-extern \"C\" CDECL void\n-upcall_yield(rust_task *task) {\n-    LOG_UPCALL_ENTRY(task);\n-    LOG(task, comm, \"upcall yield()\");\n-    task->yield(1);\n-}\n-\n // Copy elements from one vector to another,\n // dealing with reference counts\n static inline void\n@@ -54,15 +40,6 @@ copy_elements(rust_task *task, type_desc *elem_t,\n     }\n }\n \n-extern \"C\" CDECL void\n-upcall_sleep(rust_task *task, size_t time_in_us) {\n-    LOG_UPCALL_ENTRY(task);\n-    LOG(task, task, \"elapsed %\" PRIu64 \" us\",\n-              task->yield_timer.elapsed_us());\n-    LOG(task, task, \"sleep %d us\", time_in_us);\n-    task->yield(time_in_us);\n-}\n-\n extern \"C\" CDECL void\n upcall_fail(rust_task *task,\n             char const *expr,\n@@ -73,28 +50,6 @@ upcall_fail(rust_task *task,\n     task->fail();\n }\n \n-/**\n- * Called whenever a task's ref count drops to zero.\n- */\n-extern \"C\" CDECL void\n-upcall_kill(rust_task *task, rust_task_id tid) {\n-    LOG_UPCALL_ENTRY(task);\n-    rust_task *target = task->kernel->get_task_by_id(tid);\n-    target->kill();\n-    target->deref();\n-}\n-\n-/**\n- * Called by the exit glue when the task terminates.\n- */\n-extern \"C\" CDECL void\n-upcall_exit(rust_task *task) {\n-    LOG_UPCALL_ENTRY(task);\n-    task->die();\n-    task->notify_tasks_waiting_to_join();\n-    task->yield(1);\n-}\n-\n extern \"C\" CDECL uintptr_t\n upcall_malloc(rust_task *task, size_t nbytes, type_desc *td) {\n     LOG_UPCALL_ENTRY(task);"}, {"sha": "a0e7c972eebe56924e9d06d60ff54d71cb6567de", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/139b1d1b314edce0584646a4032e6a6e66167b71/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/139b1d1b314edce0584646a4032e6a6e66167b71/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=139b1d1b314edce0584646a4032e6a6e66167b71", "patch": "@@ -71,17 +71,12 @@ upcall_dynastack_alloc\n upcall_dynastack_alloc_2\n upcall_dynastack_free\n upcall_dynastack_mark\n-upcall_exit\n upcall_fail\n upcall_free\n upcall_get_type_desc\n-upcall_grow_task\n upcall_vec_grow\n upcall_vec_push\n-upcall_kill\n upcall_log_type\n upcall_malloc\n upcall_shared_malloc\n upcall_shared_free\n-upcall_sleep\n-upcall_yield"}]}