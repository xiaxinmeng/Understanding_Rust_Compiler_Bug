{"sha": "e1aa297b8be571eb3b9bf936d9de9ecb13b3eace", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYWEyOTdiOGJlNTcxZWIzYjliZjkzNmQ5ZGU5ZWNiMTNiM2VhY2U=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "matti@marinelayer.io", "date": "2019-09-05T11:38:00Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2019-10-22T17:23:10Z"}, "message": "Apply clippy::redundant_pattern_matching suggestion", "tree": {"sha": "f8dce1865eb0f03c28da5d64e3c389925ece581f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8dce1865eb0f03c28da5d64e3c389925ece581f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1aa297b8be571eb3b9bf936d9de9ecb13b3eace", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1aa297b8be571eb3b9bf936d9de9ecb13b3eace", "html_url": "https://github.com/rust-lang/rust/commit/e1aa297b8be571eb3b9bf936d9de9ecb13b3eace", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1aa297b8be571eb3b9bf936d9de9ecb13b3eace/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95c06a29707c8b2f811495c05b0cd009743e29de", "url": "https://api.github.com/repos/rust-lang/rust/commits/95c06a29707c8b2f811495c05b0cd009743e29de", "html_url": "https://github.com/rust-lang/rust/commit/95c06a29707c8b2f811495c05b0cd009743e29de"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0e83a282b18f717d056b70a3efbccc24b2e56da4", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1aa297b8be571eb3b9bf936d9de9ecb13b3eace/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1aa297b8be571eb3b9bf936d9de9ecb13b3eace/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=e1aa297b8be571eb3b9bf936d9de9ecb13b3eace", "patch": "@@ -2025,7 +2025,7 @@ impl<T: ?Sized> Pointer for *const T {\n         if f.alternate() {\n             f.flags |= 1 << (FlagV1::SignAwareZeroPad as u32);\n \n-            if let None = f.width {\n+            if f.width.is_none() {\n                 f.width = Some(((mem::size_of::<usize>() * 8) / 4) + 2);\n             }\n         }"}]}