{"sha": "07c693b7646ed57fc7a061cc5b13886815527a8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3YzY5M2I3NjQ2ZWQ1N2ZjN2EwNjFjYzViMTM4ODY4MTU1MjdhOGQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-02-03T10:26:44Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-02-03T10:26:44Z"}, "message": "Add some patches for libstd", "tree": {"sha": "5861527e34e18ac14b1aa6aa9fa32c96b1506697", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5861527e34e18ac14b1aa6aa9fa32c96b1506697"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07c693b7646ed57fc7a061cc5b13886815527a8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07c693b7646ed57fc7a061cc5b13886815527a8d", "html_url": "https://github.com/rust-lang/rust/commit/07c693b7646ed57fc7a061cc5b13886815527a8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07c693b7646ed57fc7a061cc5b13886815527a8d/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed9528a104bf5a18dc37f1da5f4c2a1edf33ce49", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed9528a104bf5a18dc37f1da5f4c2a1edf33ce49", "html_url": "https://github.com/rust-lang/rust/commit/ed9528a104bf5a18dc37f1da5f4c2a1edf33ce49"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "14d05a325835d8cb68c8b1049b1a055b181e65d2", "filename": "patches/0013-Patch-away-bswap-usage.patch", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/07c693b7646ed57fc7a061cc5b13886815527a8d/patches%2F0013-Patch-away-bswap-usage.patch", "raw_url": "https://github.com/rust-lang/rust/raw/07c693b7646ed57fc7a061cc5b13886815527a8d/patches%2F0013-Patch-away-bswap-usage.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0013-Patch-away-bswap-usage.patch?ref=07c693b7646ed57fc7a061cc5b13886815527a8d", "patch": "@@ -0,0 +1,25 @@\n+From da996dae0b95f986de46a916aca00e03257ba4f9 Mon Sep 17 00:00:00 2001\n+From: bjorn3 <bjorn3@users.noreply.github.com>\n+Date: Wed, 30 Jan 2019 14:51:57 +0100\n+Subject: [PATCH] Patch away bswap usage\n+\n+---\n+ src/libcore/num/mod.rs | 2 +-\n+ 1 file changed, 1 insertion(+), 1 deletion(-)\n+\n+diff --git a/src/libcore/num/mod.rs b/src/libcore/num/mod.rs\n+index f928d40..6a146f5 100644\n+--- a/src/libcore/num/mod.rs\n++++ b/src/libcore/num/mod.rs\n+@@ -2303,7 +2303,7 @@ assert_eq!(m, \", $swapped, \");\n+             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+             #[inline]\n+             pub const fn swap_bytes(self) -> Self {\n+-                intrinsics::bswap(self as $ActualT) as Self\n++                0 // bswap is unsupported by cg_clif\n+             }\n+         }\n+ \n+-- \n+2.11.0\n+"}, {"sha": "01c959c8ae838d0a7207965372b2ffb9c7131a79", "filename": "patches/0014-Don-t-use-OS-TLS.patch", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/07c693b7646ed57fc7a061cc5b13886815527a8d/patches%2F0014-Don-t-use-OS-TLS.patch", "raw_url": "https://github.com/rust-lang/rust/raw/07c693b7646ed57fc7a061cc5b13886815527a8d/patches%2F0014-Don-t-use-OS-TLS.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0014-Don-t-use-OS-TLS.patch?ref=07c693b7646ed57fc7a061cc5b13886815527a8d", "patch": "@@ -0,0 +1,57 @@\n+From 1ad7a849f9ff845f676d4625ba71d1060039c0de Mon Sep 17 00:00:00 2001\n+From: bjorn3 <bjorn3@users.noreply.github.com>\n+Date: Thu, 31 Jan 2019 20:11:56 +0100\n+Subject: [PATCH] Don't use OS TLS\n+\n+---\n+ src/libstd/thread/local.rs | 4 ++--\n+ src/libstd/thread/mod.rs   | 1 -\n+ 2 files changed, 2 insertions(+), 3 deletions(-)\n+\n+diff --git a/src/libstd/thread/local.rs b/src/libstd/thread/local.rs\n+index 5d2eb5f..39513b6 100644\n+--- a/src/libstd/thread/local.rs\n++++ b/src/libstd/thread/local.rs\n+@@ -160,10 +160,10 @@ macro_rules! __thread_local_inner {\n+                 &'static $crate::cell::UnsafeCell<\n+                     $crate::option::Option<$t>>>\n+             {\n+-                #[cfg(all(target_arch = \"wasm32\", not(target_feature = \"atomics\")))]\n+                 static __KEY: $crate::thread::__StaticLocalKeyInner<$t> =\n+                     $crate::thread::__StaticLocalKeyInner::new();\n+ \n++                /*\n+                 #[thread_local]\n+                 #[cfg(all(\n+                     target_thread_local,\n+@@ -178,6 +178,7 @@ macro_rules! __thread_local_inner {\n+                 ))]\n+                 static __KEY: $crate::thread::__OsLocalKeyInner<$t> =\n+                     $crate::thread::__OsLocalKeyInner::new();\n++                */\n+ \n+                 __KEY.get()\n+             }\n+@@ -304,7 +305,6 @@ impl<T: 'static> LocalKey<T> {\n+ /// On some platforms like wasm32 there's no threads, so no need to generate\n+ /// thread locals and we can instead just use plain statics!\n+ #[doc(hidden)]\n+-#[cfg(all(target_arch = \"wasm32\", not(target_feature = \"atomics\")))]\n+ pub mod statik {\n+     use cell::UnsafeCell;\n+     use fmt;\n+diff --git a/src/libstd/thread/mod.rs b/src/libstd/thread/mod.rs\n+index eb8e0c1..b44d737 100644\n+--- a/src/libstd/thread/mod.rs\n++++ b/src/libstd/thread/mod.rs\n+@@ -195,7 +195,6 @@ pub use self::local::{LocalKey, AccessError};\n+ // where available, but both are needed.\n+ \n+ #[unstable(feature = \"libstd_thread_internals\", issue = \"0\")]\n+-#[cfg(all(target_arch = \"wasm32\", not(target_feature = \"atomics\")))]\n+ #[doc(hidden)] pub use self::local::statik::Key as __StaticLocalKeyInner;\n+ #[unstable(feature = \"libstd_thread_internals\", issue = \"0\")]\n+ #[cfg(target_thread_local)]\n+-- \n+2.11.0\n+"}]}