{"sha": "f3c00a447c4d67053746bbfc40b41c0225f4b5dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYzAwYTQ0N2M0ZDY3MDUzNzQ2YmJmYzQwYjQxYzAyMjVmNGI1ZGQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-02T08:05:35Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-02T08:05:35Z"}, "message": "use new MachineStop error variant", "tree": {"sha": "229bb5507f011f596ebcfdaa374852254aaa840d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/229bb5507f011f596ebcfdaa374852254aaa840d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3c00a447c4d67053746bbfc40b41c0225f4b5dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3c00a447c4d67053746bbfc40b41c0225f4b5dd", "html_url": "https://github.com/rust-lang/rust/commit/f3c00a447c4d67053746bbfc40b41c0225f4b5dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3c00a447c4d67053746bbfc40b41c0225f4b5dd/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cde718f083dc299ed2abf9cbdb11284b203776bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/cde718f083dc299ed2abf9cbdb11284b203776bf", "html_url": "https://github.com/rust-lang/rust/commit/cde718f083dc299ed2abf9cbdb11284b203776bf"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "3a0cf96e132750c618127f839b3d28ac9efc6235", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3c00a447c4d67053746bbfc40b41c0225f4b5dd/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/f3c00a447c4d67053746bbfc40b41c0225f4b5dd/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=f3c00a447c4d67053746bbfc40b41c0225f4b5dd", "patch": "@@ -1 +1 @@\n-4007d4ef26eab44bdabc2b7574d032152264d3ad\n+f5c81e0a986e4285d3d0fd781a1bd475753eb12c"}, {"sha": "2c165760418f46c4f6ccd46ea1e265e8f854121f", "filename": "src/eval.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f3c00a447c4d67053746bbfc40b41c0225f4b5dd/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3c00a447c4d67053746bbfc40b41c0225f4b5dd/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=f3c00a447c4d67053746bbfc40b41c0225f4b5dd", "patch": "@@ -24,6 +24,12 @@ pub struct MiriConfig {\n     pub seed: Option<u64>,\n }\n \n+/// Details of premature program termination.\n+pub enum TerminationInfo {\n+    Exit(i64),\n+    Abort,\n+}\n+\n /// Returns a freshly created `InterpCx`, along with an `MPlaceTy` representing\n /// the location where the return value of the `start` lang item will be\n /// written to.\n@@ -200,7 +206,15 @@ pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) ->\n         Err(mut e) => {\n             // Special treatment for some error kinds\n             let msg = match e.kind {\n-                InterpError::Exit(code) => return Some(code.into()),\n+                InterpError::MachineStop(ref info) => {\n+                    let info = info.downcast_ref::<TerminationInfo>()\n+                        .expect(\"invalid MachineStop payload\");\n+                    match info {\n+                        TerminationInfo::Exit(code) => return Some(*code),\n+                        TerminationInfo::Abort =>\n+                            format!(\"The program aborted execution\")\n+                    }\n+                }\n                 err_unsup!(NoMirFor(..)) =>\n                     format!(\"{}. Did you set `MIRI_SYSROOT` to a Miri-enabled sysroot? You can prepare one with `cargo miri setup`.\", e),\n                 _ => e.to_string()"}, {"sha": "05234e880f58cd961685f3624b3b50bab0afcacd", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3c00a447c4d67053746bbfc40b41c0225f4b5dd/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3c00a447c4d67053746bbfc40b41c0225f4b5dd/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=f3c00a447c4d67053746bbfc40b41c0225f4b5dd", "patch": "@@ -47,7 +47,7 @@ pub use crate::machine::{\n     PAGE_SIZE, STACK_ADDR, STACK_SIZE, NUM_CPUS,\n     MemoryExtra, AllocExtra, MiriMemoryKind, Evaluator, MiriEvalContext, MiriEvalContextExt,\n };\n-pub use crate::eval::{eval_main, create_ecx, MiriConfig};\n+pub use crate::eval::{eval_main, create_ecx, MiriConfig, TerminationInfo};\n \n /// Insert rustc arguments at the beginning of the argument list that Miri wants to be\n /// set per default, for maximal validation power."}, {"sha": "114931e435a4c6e982fbb116b387a6117ff409b3", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f3c00a447c4d67053746bbfc40b41c0225f4b5dd/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3c00a447c4d67053746bbfc40b41c0225f4b5dd/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=f3c00a447c4d67053746bbfc40b41c0225f4b5dd", "patch": "@@ -152,9 +152,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             }\n \n             \"exit\" | \"ExitProcess\" => {\n-                // it's really u32 for ExitProcess, but we have to put it into the `Exit` error variant anyway\n+                // it's really u32 for ExitProcess, but we have to put it into the `Exit` variant anyway\n                 let code = this.read_scalar(args[0])?.to_i32()?;\n-                return Err(InterpError::Exit(code).into());\n+                let ti = Box::new(TerminationInfo::Exit(code.into()));\n+                return Err(InterpError::MachineStop(ti).into());\n             }\n             _ => {\n                 if let Some(p) = ret {"}]}