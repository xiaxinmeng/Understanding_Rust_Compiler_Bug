{"sha": "31e09f740a376a6ffd1b137e665a69f9b9436e1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxZTA5Zjc0MGEzNzZhNmZmZDFiMTM3ZTY2NWE2OWY5Yjk0MzZlMWY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-18T16:02:06Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-24T21:27:23Z"}, "message": "Add handy switch `-Z treat-err-as-bug` -- it often happens that I am\ncompiling something I expect to succeed, and this lets me get\nstacktraces and also abort compilation faster.", "tree": {"sha": "c040b48bf6ef707f9a4c568a21471202606d835e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c040b48bf6ef707f9a4c568a21471202606d835e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31e09f740a376a6ffd1b137e665a69f9b9436e1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31e09f740a376a6ffd1b137e665a69f9b9436e1f", "html_url": "https://github.com/rust-lang/rust/commit/31e09f740a376a6ffd1b137e665a69f9b9436e1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31e09f740a376a6ffd1b137e665a69f9b9436e1f/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf73e36ab01f48c883808cf58af5baed8d697538", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf73e36ab01f48c883808cf58af5baed8d697538", "html_url": "https://github.com/rust-lang/rust/commit/cf73e36ab01f48c883808cf58af5baed8d697538"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "efcde8b2fa1ac94cb00bb44c1dbc19616da14561", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/31e09f740a376a6ffd1b137e665a69f9b9436e1f/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31e09f740a376a6ffd1b137e665a69f9b9436e1f/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=31e09f740a376a6ffd1b137e665a69f9b9436e1f", "patch": "@@ -99,6 +99,7 @@ pub struct Options {\n     pub test: bool,\n     pub parse_only: bool,\n     pub no_trans: bool,\n+    pub treat_err_as_bug: bool,\n     pub no_analysis: bool,\n     pub debugging_opts: DebuggingOptions,\n     /// Whether to write dependency files. It's (enabled, optional filename).\n@@ -223,6 +224,7 @@ pub fn basic_options() -> Options {\n         test: false,\n         parse_only: false,\n         no_trans: false,\n+        treat_err_as_bug: false,\n         no_analysis: false,\n         debugging_opts: basic_debugging_options(),\n         write_dependency_info: (false, None),\n@@ -573,6 +575,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"Parse only; do not compile, assemble, or link\"),\n     no_trans: bool = (false, parse_bool,\n           \"Run all passes except translation; no output\"),\n+    treat_err_as_bug: bool = (false, parse_bool,\n+          \"Treat all errors that occur as bugs\"),\n     no_analysis: bool = (false, parse_bool,\n           \"Parse and expand the source, but run no analysis\"),\n     extra_plugins: Vec<String> = (Vec::new(), parse_list,\n@@ -843,6 +847,7 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n \n     let parse_only = debugging_opts.parse_only;\n     let no_trans = debugging_opts.no_trans;\n+    let treat_err_as_bug = debugging_opts.treat_err_as_bug;\n     let no_analysis = debugging_opts.no_analysis;\n \n     if debugging_opts.debug_llvm {\n@@ -1030,6 +1035,7 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n         test: test,\n         parse_only: parse_only,\n         no_trans: no_trans,\n+        treat_err_as_bug: treat_err_as_bug,\n         no_analysis: no_analysis,\n         debugging_opts: debugging_opts,\n         write_dependency_info: write_dependency_info,"}, {"sha": "324ce1d66d007db4ee06d9afa89041360cd64c2c", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/31e09f740a376a6ffd1b137e665a69f9b9436e1f/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31e09f740a376a6ffd1b137e665a69f9b9436e1f/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=31e09f740a376a6ffd1b137e665a69f9b9436e1f", "patch": "@@ -74,18 +74,27 @@ impl Session {\n         self.diagnostic().handler().fatal(msg)\n     }\n     pub fn span_err(&self, sp: Span, msg: &str) {\n+        if self.opts.treat_err_as_bug {\n+            self.span_bug(sp, msg);\n+        }\n         match split_msg_into_multilines(msg) {\n             Some(msg) => self.diagnostic().span_err(sp, &msg[..]),\n             None => self.diagnostic().span_err(sp, msg)\n         }\n     }\n     pub fn span_err_with_code(&self, sp: Span, msg: &str, code: &str) {\n+        if self.opts.treat_err_as_bug {\n+            self.span_bug(sp, msg);\n+        }\n         match split_msg_into_multilines(msg) {\n             Some(msg) => self.diagnostic().span_err_with_code(sp, &msg[..], code),\n             None => self.diagnostic().span_err_with_code(sp, msg, code)\n         }\n     }\n     pub fn err(&self, msg: &str) {\n+        if self.opts.treat_err_as_bug {\n+            self.bug(msg);\n+        }\n         self.diagnostic().handler().err(msg)\n     }\n     pub fn err_count(&self) -> uint {"}]}