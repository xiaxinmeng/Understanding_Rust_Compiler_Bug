{"sha": "d49d5222a9212cdcda35498383d651872d34a825", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0OWQ1MjIyYTkyMTJjZGNkYTM1NDk4MzgzZDY1MTg3MmQzNGE4MjU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-27T10:53:23Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-27T10:53:54Z"}, "message": "merge all the `type_op_foo` modules into one as they are so trivial", "tree": {"sha": "db4286d58ba575ffa0429c7807053631a2467ac2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db4286d58ba575ffa0429c7807053631a2467ac2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d49d5222a9212cdcda35498383d651872d34a825", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d49d5222a9212cdcda35498383d651872d34a825", "html_url": "https://github.com/rust-lang/rust/commit/d49d5222a9212cdcda35498383d651872d34a825", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d49d5222a9212cdcda35498383d651872d34a825/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66c88392b4594507b8b0282d8a3de5f43922acc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/66c88392b4594507b8b0282d8a3de5f43922acc4", "html_url": "https://github.com/rust-lang/rust/commit/66c88392b4594507b8b0282d8a3de5f43922acc4"}], "stats": {"total": 173, "additions": 62, "deletions": 111}, "files": [{"sha": "b02d7f6c3f7b647bb3aa209df42ee7dd6b9e8648", "filename": "src/librustc_traits/lib.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d49d5222a9212cdcda35498383d651872d34a825/src%2Flibrustc_traits%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d49d5222a9212cdcda35498383d651872d34a825/src%2Flibrustc_traits%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flib.rs?ref=d49d5222a9212cdcda35498383d651872d34a825", "patch": "@@ -34,10 +34,7 @@ mod evaluate_obligation;\n mod normalize_projection_ty;\n mod normalize_erasing_regions;\n pub mod lowering;\n-mod type_op_eq;\n-mod type_op_normalize;\n-mod type_op_prove_predicate;\n-mod type_op_subtype;\n+mod type_op;\n \n use rustc::ty::query::Providers;\n \n@@ -51,13 +48,13 @@ pub fn provide(p: &mut Providers) {\n         program_clauses_for: lowering::program_clauses_for,\n         program_clauses_for_env: lowering::program_clauses_for_env,\n         evaluate_obligation: evaluate_obligation::evaluate_obligation,\n-        type_op_eq: type_op_eq::type_op_eq,\n-        type_op_prove_predicate: type_op_prove_predicate::type_op_prove_predicate,\n-        type_op_subtype: type_op_subtype::type_op_subtype,\n-        type_op_normalize_ty: type_op_normalize::type_op_normalize_ty,\n-        type_op_normalize_predicate: type_op_normalize::type_op_normalize_predicate,\n-        type_op_normalize_fn_sig: type_op_normalize::type_op_normalize_fn_sig,\n-        type_op_normalize_poly_fn_sig: type_op_normalize::type_op_normalize_poly_fn_sig,\n+        type_op_eq: type_op::type_op_eq,\n+        type_op_prove_predicate: type_op::type_op_prove_predicate,\n+        type_op_subtype: type_op::type_op_subtype,\n+        type_op_normalize_ty: type_op::type_op_normalize_ty,\n+        type_op_normalize_predicate: type_op::type_op_normalize_predicate,\n+        type_op_normalize_fn_sig: type_op::type_op_normalize_fn_sig,\n+        type_op_normalize_poly_fn_sig: type_op::type_op_normalize_poly_fn_sig,\n         ..*p\n     };\n }"}, {"sha": "f44cd686b40a342b1dfac01734b8ad829038d57c", "filename": "src/librustc_traits/type_op.rs", "status": "renamed", "additions": 54, "deletions": 1, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/d49d5222a9212cdcda35498383d651872d34a825/src%2Flibrustc_traits%2Ftype_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d49d5222a9212cdcda35498383d651872d34a825/src%2Flibrustc_traits%2Ftype_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Ftype_op.rs?ref=d49d5222a9212cdcda35498383d651872d34a825", "patch": "@@ -10,13 +10,26 @@\n \n use rustc::infer::canonical::{Canonical, QueryResult};\n use rustc::infer::{InferCtxt, InferOk};\n+use rustc::traits::query::type_op::eq::Eq;\n use rustc::traits::query::type_op::normalize::Normalize;\n+use rustc::traits::query::type_op::prove_predicate::ProvePredicate;\n+use rustc::traits::query::type_op::subtype::Subtype;\n use rustc::traits::query::{Fallible, NoSolution};\n-use rustc::traits::{Normalized, ObligationCause};\n+use rustc::traits::{Obligation, Normalized, ObligationCause};\n use rustc::ty::{FnSig, Lift, PolyFnSig, Predicate, Ty, TyCtxt, TypeFoldable};\n use rustc_data_structures::sync::Lrc;\n use std::fmt;\n \n+crate fn type_op_eq<'tcx>(\n+    tcx: TyCtxt<'_, 'tcx, 'tcx>,\n+    canonicalized: Canonical<'tcx, Eq<'tcx>>,\n+) -> Result<Lrc<Canonical<'tcx, QueryResult<'tcx, ()>>>, NoSolution> {\n+    tcx.infer_ctxt()\n+        .enter_canonical_trait_query(&canonicalized, |infcx, Eq { param_env, a, b }| {\n+            Ok(infcx.at(&ObligationCause::dummy(), param_env).eq(a, b)?)\n+        })\n+}\n+\n fn type_op_normalize<T>(\n     infcx: &InferCtxt<'_, 'gcx, 'tcx>,\n     key: Normalize<'tcx, T>,\n@@ -62,3 +75,43 @@ crate fn type_op_normalize_poly_fn_sig(\n     tcx.infer_ctxt()\n         .enter_canonical_trait_query(&canonicalized, type_op_normalize)\n }\n+\n+crate fn type_op_subtype<'tcx>(\n+    tcx: TyCtxt<'_, 'tcx, 'tcx>,\n+    canonicalized: Canonical<'tcx, Subtype<'tcx>>,\n+) -> Result<Lrc<Canonical<'tcx, QueryResult<'tcx, ()>>>, NoSolution> {\n+    tcx.infer_ctxt().enter_canonical_trait_query(\n+        &canonicalized,\n+        |infcx,\n+         Subtype {\n+             param_env,\n+             sub,\n+             sup,\n+         }| {\n+            Ok(infcx\n+                .at(&ObligationCause::dummy(), param_env)\n+                .sup(sup, sub)?)\n+        },\n+    )\n+}\n+\n+crate fn type_op_prove_predicate<'tcx>(\n+    tcx: TyCtxt<'_, 'tcx, 'tcx>,\n+    canonicalized: Canonical<'tcx, ProvePredicate<'tcx>>,\n+) -> Result<Lrc<Canonical<'tcx, QueryResult<'tcx, ()>>>, NoSolution> {\n+    tcx.infer_ctxt()\n+        .enter_canonical_trait_query(&canonicalized, |_infcx, key| {\n+            let ProvePredicate {\n+                param_env,\n+                predicate,\n+            } = key;\n+            Ok(InferOk {\n+                value: (),\n+                obligations: vec![Obligation::new(\n+                    ObligationCause::dummy(),\n+                    param_env,\n+                    predicate,\n+                )],\n+            })\n+        })\n+}", "previous_filename": "src/librustc_traits/type_op_normalize.rs"}, {"sha": "511203bf2fc9d46e102d25368e9fb37eaeed7ab6", "filename": "src/librustc_traits/type_op_eq.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/66c88392b4594507b8b0282d8a3de5f43922acc4/src%2Flibrustc_traits%2Ftype_op_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66c88392b4594507b8b0282d8a3de5f43922acc4/src%2Flibrustc_traits%2Ftype_op_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Ftype_op_eq.rs?ref=66c88392b4594507b8b0282d8a3de5f43922acc4", "patch": "@@ -1,26 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-use rustc::infer::canonical::{Canonical, QueryResult};\n-use rustc::traits::query::type_op::eq::Eq;\n-use rustc::traits::query::NoSolution;\n-use rustc::traits::ObligationCause;\n-use rustc::ty::TyCtxt;\n-use rustc_data_structures::sync::Lrc;\n-\n-crate fn type_op_eq<'tcx>(\n-    tcx: TyCtxt<'_, 'tcx, 'tcx>,\n-    canonicalized: Canonical<'tcx, Eq<'tcx>>,\n-) -> Result<Lrc<Canonical<'tcx, QueryResult<'tcx, ()>>>, NoSolution> {\n-    tcx.infer_ctxt()\n-        .enter_canonical_trait_query(&canonicalized, |infcx, Eq { param_env, a, b }| {\n-            Ok(infcx.at(&ObligationCause::dummy(), param_env).eq(a, b)?)\n-        })\n-}"}, {"sha": "7210d43d9f75ed6de4c830ca1dbbdecfd7225dce", "filename": "src/librustc_traits/type_op_prove_predicate.rs", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/66c88392b4594507b8b0282d8a3de5f43922acc4/src%2Flibrustc_traits%2Ftype_op_prove_predicate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66c88392b4594507b8b0282d8a3de5f43922acc4/src%2Flibrustc_traits%2Ftype_op_prove_predicate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Ftype_op_prove_predicate.rs?ref=66c88392b4594507b8b0282d8a3de5f43922acc4", "patch": "@@ -1,38 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-use rustc::infer::InferOk;\n-use rustc::infer::canonical::{Canonical, QueryResult};\n-use rustc::traits::query::type_op::prove_predicate::ProvePredicate;\n-use rustc::traits::query::NoSolution;\n-use rustc::traits::{Obligation, ObligationCause};\n-use rustc::ty::TyCtxt;\n-use rustc_data_structures::sync::Lrc;\n-\n-crate fn type_op_prove_predicate<'tcx>(\n-    tcx: TyCtxt<'_, 'tcx, 'tcx>,\n-    canonicalized: Canonical<'tcx, ProvePredicate<'tcx>>,\n-) -> Result<Lrc<Canonical<'tcx, QueryResult<'tcx, ()>>>, NoSolution> {\n-    tcx.infer_ctxt()\n-        .enter_canonical_trait_query(&canonicalized, |_infcx, key| {\n-            let ProvePredicate {\n-                param_env,\n-                predicate,\n-            } = key;\n-            Ok(InferOk {\n-                value: (),\n-                obligations: vec![Obligation::new(\n-                    ObligationCause::dummy(),\n-                    param_env,\n-                    predicate,\n-                )],\n-            })\n-        })\n-}"}, {"sha": "30a8550f107b2333157f82c55a45644265f0ad37", "filename": "src/librustc_traits/type_op_subtype.rs", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/66c88392b4594507b8b0282d8a3de5f43922acc4/src%2Flibrustc_traits%2Ftype_op_subtype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66c88392b4594507b8b0282d8a3de5f43922acc4/src%2Flibrustc_traits%2Ftype_op_subtype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Ftype_op_subtype.rs?ref=66c88392b4594507b8b0282d8a3de5f43922acc4", "patch": "@@ -1,35 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-use rustc::infer::canonical::{Canonical, QueryResult};\n-use rustc::traits::query::type_op::subtype::Subtype;\n-use rustc::traits::query::NoSolution;\n-use rustc::traits::ObligationCause;\n-use rustc::ty::TyCtxt;\n-use rustc_data_structures::sync::Lrc;\n-\n-crate fn type_op_subtype<'tcx>(\n-    tcx: TyCtxt<'_, 'tcx, 'tcx>,\n-    canonicalized: Canonical<'tcx, Subtype<'tcx>>,\n-) -> Result<Lrc<Canonical<'tcx, QueryResult<'tcx, ()>>>, NoSolution> {\n-    tcx.infer_ctxt().enter_canonical_trait_query(\n-        &canonicalized,\n-        |infcx,\n-         Subtype {\n-             param_env,\n-             sub,\n-             sup,\n-         }| {\n-            Ok(infcx\n-                .at(&ObligationCause::dummy(), param_env)\n-                .sup(sup, sub)?)\n-        },\n-    )\n-}"}]}