{"sha": "0cd9c1623fb5858990892fed2fbf7c06e7b25f22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjZDljMTYyM2ZiNTg1ODk5MDg5MmZlZDJmYmY3YzA2ZTdiMjVmMjI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-09-01T18:40:35Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-09-01T18:40:35Z"}, "message": "Fix condition and tests' flags", "tree": {"sha": "97f6d149739dff08788bf77dfe9ef993c4a38b64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97f6d149739dff08788bf77dfe9ef993c4a38b64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cd9c1623fb5858990892fed2fbf7c06e7b25f22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cd9c1623fb5858990892fed2fbf7c06e7b25f22", "html_url": "https://github.com/rust-lang/rust/commit/0cd9c1623fb5858990892fed2fbf7c06e7b25f22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e9825aeb9bce905ed230733bf2a5b4b07f25eb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e9825aeb9bce905ed230733bf2a5b4b07f25eb9", "html_url": "https://github.com/rust-lang/rust/commit/8e9825aeb9bce905ed230733bf2a5b4b07f25eb9"}], "stats": {"total": 216, "additions": 75, "deletions": 141}, "files": [{"sha": "e4b186736e2a199e822868d3519abab101e553bc", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=0cd9c1623fb5858990892fed2fbf7c06e7b25f22", "patch": "@@ -413,6 +413,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n                             // We check overflow in debug mode already\n                             // so should only check in release mode.\n                             if !oflo_check\n+                            && prim.layout.ty.is_signed()\n                             && prim.to_bits()? == (1 << (prim.layout.size.bits() - 1)) {\n                                 throw_panic!(OverflowNeg)\n                             }"}, {"sha": "cd6ac47bd92a850a34338f599528bbf5286cb8d2", "filename": "src/test/ui/consts/const-err2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.rs?ref=0cd9c1623fb5858990892fed2fbf7c06e7b25f22", "patch": "@@ -5,6 +5,8 @@\n \n #![feature(rustc_attrs)]\n #![allow(exceeding_bitshifts)]\n+// compile-flags: -C overflow-checks=on -O\n+\n #![deny(const_err)]\n \n fn black_box<T>(_: T) {"}, {"sha": "ecfced7f0db8b3bf63d302f0158519b863bec168", "filename": "src/test/ui/consts/const-err2.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.stderr?ref=0cd9c1623fb5858990892fed2fbf7c06e7b25f22", "patch": "@@ -1,35 +1,35 @@\n-error: this expression will panic at runtime\n-  --> $DIR/const-err2.rs:15:13\n+error: attempt to negate with overflow\n+  --> $DIR/const-err2.rs:17:13\n    |\n LL |     let a = -std::i8::MIN;\n-   |             ^^^^^^^^^^^^^ attempt to negate with overflow\n+   |             ^^^^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/const-err2.rs:8:9\n+  --> $DIR/const-err2.rs:10:9\n    |\n LL | #![deny(const_err)]\n    |         ^^^^^^^^^\n \n-error: this expression will panic at runtime\n-  --> $DIR/const-err2.rs:17:13\n+error: attempt to add with overflow\n+  --> $DIR/const-err2.rs:19:13\n    |\n LL |     let b = 200u8 + 200u8 + 200u8;\n-   |             ^^^^^^^^^^^^^ attempt to add with overflow\n+   |             ^^^^^^^^^^^^^\n \n-error: this expression will panic at runtime\n-  --> $DIR/const-err2.rs:19:13\n+error: attempt to multiply with overflow\n+  --> $DIR/const-err2.rs:21:13\n    |\n LL |     let c = 200u8 * 4;\n-   |             ^^^^^^^^^ attempt to multiply with overflow\n+   |             ^^^^^^^^^\n \n-error: this expression will panic at runtime\n-  --> $DIR/const-err2.rs:21:13\n+error: attempt to subtract with overflow\n+  --> $DIR/const-err2.rs:23:13\n    |\n LL |     let d = 42u8 - (42u8 + 1);\n-   |             ^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n+   |             ^^^^^^^^^^^^^^^^^\n \n error: index out of bounds: the len is 1 but the index is 1\n-  --> $DIR/const-err2.rs:23:14\n+  --> $DIR/const-err2.rs:25:14\n    |\n LL |     let _e = [5u8][1];\n    |              ^^^^^^^^"}, {"sha": "7adb394144bdd93bc5eea640da8fdd8c3d0a3178", "filename": "src/test/ui/consts/const-eval/promoted_errors.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.rs?ref=0cd9c1623fb5858990892fed2fbf7c06e7b25f22", "patch": "@@ -1,11 +1,12 @@\n-// compile-flags: -O\n+// compile-flags: -C overflow-checks=on -O\n \n #![deny(const_err)]\n \n fn main() {\n     println!(\"{}\", 0u32 - 1);\n+    //~^ ERROR attempt to subtract with overflow\n     let _x = 0u32 - 1;\n-    //~^ ERROR this expression will panic at runtime [const_err]\n+    //~^ ERROR attempt to subtract with overflow\n     println!(\"{}\", 1/(1-1));\n     //~^ ERROR attempt to divide by zero [const_err]\n     //~| ERROR reaching this expression at runtime will panic or abort [const_err]"}, {"sha": "fe63d0800dd7cbcc9bc585969f78ff33f0d92bd0", "filename": "src/test/ui/consts/const-eval/promoted_errors.stderr", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.stderr?ref=0cd9c1623fb5858990892fed2fbf7c06e7b25f22", "patch": "@@ -1,62 +1,68 @@\n-error: this expression will panic at runtime\n-  --> $DIR/promoted_errors.rs:7:14\n+error: attempt to subtract with overflow\n+  --> $DIR/promoted_errors.rs:6:20\n    |\n-LL |     let _x = 0u32 - 1;\n-   |              ^^^^^^^^ attempt to subtract with overflow\n+LL |     println!(\"{}\", 0u32 - 1);\n+   |                    ^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/promoted_errors.rs:3:9\n    |\n LL | #![deny(const_err)]\n    |         ^^^^^^^^^\n \n+error: attempt to subtract with overflow\n+  --> $DIR/promoted_errors.rs:8:14\n+   |\n+LL |     let _x = 0u32 - 1;\n+   |              ^^^^^^^^\n+\n error: attempt to divide by zero\n-  --> $DIR/promoted_errors.rs:9:20\n+  --> $DIR/promoted_errors.rs:10:20\n    |\n LL |     println!(\"{}\", 1/(1-1));\n    |                    ^^^^^^^\n \n error: reaching this expression at runtime will panic or abort\n-  --> $DIR/promoted_errors.rs:9:20\n+  --> $DIR/promoted_errors.rs:10:20\n    |\n LL |     println!(\"{}\", 1/(1-1));\n    |                    ^^^^^^^ attempt to divide by zero\n \n error: attempt to divide by zero\n-  --> $DIR/promoted_errors.rs:12:14\n+  --> $DIR/promoted_errors.rs:13:14\n    |\n LL |     let _x = 1/(1-1);\n    |              ^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/promoted_errors.rs:12:14\n+  --> $DIR/promoted_errors.rs:13:14\n    |\n LL |     let _x = 1/(1-1);\n    |              ^^^^^^^ attempt to divide by zero\n \n error: attempt to divide by zero\n-  --> $DIR/promoted_errors.rs:15:20\n+  --> $DIR/promoted_errors.rs:16:20\n    |\n LL |     println!(\"{}\", 1/(false as u32));\n    |                    ^^^^^^^^^^^^^^^^\n \n error: reaching this expression at runtime will panic or abort\n-  --> $DIR/promoted_errors.rs:15:20\n+  --> $DIR/promoted_errors.rs:16:20\n    |\n LL |     println!(\"{}\", 1/(false as u32));\n    |                    ^^^^^^^^^^^^^^^^ attempt to divide by zero\n \n error: attempt to divide by zero\n-  --> $DIR/promoted_errors.rs:18:14\n+  --> $DIR/promoted_errors.rs:19:14\n    |\n LL |     let _x = 1/(false as u32);\n    |              ^^^^^^^^^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/promoted_errors.rs:18:14\n+  --> $DIR/promoted_errors.rs:19:14\n    |\n LL |     let _x = 1/(false as u32);\n    |              ^^^^^^^^^^^^^^^^ attempt to divide by zero\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 10 previous errors\n "}, {"sha": "38911c3dcf69298c4dc2c21a2018865d4a0a3e6d", "filename": "src/test/ui/consts/issue-64059.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Ftest%2Fui%2Fconsts%2Fissue-64059.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Ftest%2Fui%2Fconsts%2Fissue-64059.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-64059.rs?ref=0cd9c1623fb5858990892fed2fbf7c06e7b25f22", "patch": "@@ -1,4 +1,6 @@\n+// compile-flags: -C overflow-checks=on -O\n+// run-pass\n+\n fn main() {\n     let _ = -(-0.0);\n-    //~^ ERROR: this expression will panic at runtime\n }"}, {"sha": "6f27653421bd6830639793e6d7610c5cc4a299fd", "filename": "src/test/ui/consts/issue-64059.stderr", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8e9825aeb9bce905ed230733bf2a5b4b07f25eb9/src%2Ftest%2Fui%2Fconsts%2Fissue-64059.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e9825aeb9bce905ed230733bf2a5b4b07f25eb9/src%2Ftest%2Fui%2Fconsts%2Fissue-64059.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-64059.stderr?ref=8e9825aeb9bce905ed230733bf2a5b4b07f25eb9", "patch": "@@ -1,10 +0,0 @@\n-error: this expression will panic at runtime\n-  --> $DIR/issue-64059.rs:2:13\n-   |\n-LL |     let _ = -(-0.0);\n-   |             ^^^^^^^ attempt to negate with overflow\n-   |\n-   = note: `#[deny(const_err)]` on by default\n-\n-error: aborting due to previous error\n-"}, {"sha": "c3f53e3298b2b40eb4c68c2d2d2499a20aad6459", "filename": "src/test/ui/issues/issue-8460-const.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.rs?ref=0cd9c1623fb5858990892fed2fbf7c06e7b25f22", "patch": "@@ -1,3 +1,5 @@\n+// compile-flags: -C overflow-checks=on -O\n+\n #![deny(const_err)]\n \n use std::{isize, i8, i16, i32, i64};\n@@ -6,19 +8,14 @@ use std::thread;\n fn main() {\n     assert!(thread::spawn(move|| { isize::MIN / -1; }).join().is_err());\n     //~^ ERROR attempt to divide with overflow\n-    //~| ERROR this expression will panic at runtime\n     assert!(thread::spawn(move|| { i8::MIN / -1; }).join().is_err());\n     //~^ ERROR attempt to divide with overflow\n-    //~| ERROR this expression will panic at runtime\n     assert!(thread::spawn(move|| { i16::MIN / -1; }).join().is_err());\n     //~^ ERROR attempt to divide with overflow\n-    //~| ERROR this expression will panic at runtime\n     assert!(thread::spawn(move|| { i32::MIN / -1; }).join().is_err());\n     //~^ ERROR attempt to divide with overflow\n-    //~| ERROR this expression will panic at runtime\n     assert!(thread::spawn(move|| { i64::MIN / -1; }).join().is_err());\n     //~^ ERROR attempt to divide with overflow\n-    //~| ERROR this expression will panic at runtime\n     assert!(thread::spawn(move|| { 1isize / 0; }).join().is_err());\n     //~^ ERROR attempt to divide by zero\n     //~| ERROR this expression will panic at runtime\n@@ -36,19 +33,14 @@ fn main() {\n     //~| ERROR this expression will panic at runtime\n     assert!(thread::spawn(move|| { isize::MIN % -1; }).join().is_err());\n     //~^ ERROR attempt to calculate the remainder with overflow\n-    //~| ERROR this expression will panic at runtime\n     assert!(thread::spawn(move|| { i8::MIN % -1; }).join().is_err());\n     //~^ ERROR attempt to calculate the remainder with overflow\n-    //~| ERROR this expression will panic at runtime\n     assert!(thread::spawn(move|| { i16::MIN % -1; }).join().is_err());\n     //~^ ERROR attempt to calculate the remainder with overflow\n-    //~| ERROR this expression will panic at runtime\n     assert!(thread::spawn(move|| { i32::MIN % -1; }).join().is_err());\n     //~^ ERROR attempt to calculate the remainder with overflow\n-    //~| ERROR this expression will panic at runtime\n     assert!(thread::spawn(move|| { i64::MIN % -1; }).join().is_err());\n     //~^ ERROR attempt to calculate the remainder with overflow\n-    //~| ERROR this expression will panic at runtime\n     assert!(thread::spawn(move|| { 1isize % 0; }).join().is_err());\n     //~^ ERROR attempt to calculate the remainder with a divisor of zero\n     //~| ERROR this expression will panic at runtime"}, {"sha": "914323227ddd2530b3bd691b03ed2309110cae63", "filename": "src/test/ui/issues/issue-8460-const.stderr", "status": "modified", "additions": 31, "deletions": 91, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0cd9c1623fb5858990892fed2fbf7c06e7b25f22/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.stderr?ref=0cd9c1623fb5858990892fed2fbf7c06e7b25f22", "patch": "@@ -1,248 +1,188 @@\n error: attempt to divide with overflow\n-  --> $DIR/issue-8460-const.rs:7:36\n+  --> $DIR/issue-8460-const.rs:9:36\n    |\n LL |     assert!(thread::spawn(move|| { isize::MIN / -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/issue-8460-const.rs:1:9\n+  --> $DIR/issue-8460-const.rs:3:9\n    |\n LL | #![deny(const_err)]\n    |         ^^^^^^^^^\n \n-error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:7:36\n-   |\n-LL |     assert!(thread::spawn(move|| { isize::MIN / -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^^^ attempt to divide with overflow\n-\n error: attempt to divide with overflow\n-  --> $DIR/issue-8460-const.rs:10:36\n+  --> $DIR/issue-8460-const.rs:11:36\n    |\n LL |     assert!(thread::spawn(move|| { i8::MIN / -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^\n \n-error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:10:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i8::MIN / -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^ attempt to divide with overflow\n-\n error: attempt to divide with overflow\n   --> $DIR/issue-8460-const.rs:13:36\n    |\n LL |     assert!(thread::spawn(move|| { i16::MIN / -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^\n \n-error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:13:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i16::MIN / -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^ attempt to divide with overflow\n-\n error: attempt to divide with overflow\n-  --> $DIR/issue-8460-const.rs:16:36\n+  --> $DIR/issue-8460-const.rs:15:36\n    |\n LL |     assert!(thread::spawn(move|| { i32::MIN / -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^\n \n-error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:16:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i32::MIN / -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^ attempt to divide with overflow\n-\n error: attempt to divide with overflow\n-  --> $DIR/issue-8460-const.rs:19:36\n+  --> $DIR/issue-8460-const.rs:17:36\n    |\n LL |     assert!(thread::spawn(move|| { i64::MIN / -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^\n \n-error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:19:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i64::MIN / -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^ attempt to divide with overflow\n-\n error: attempt to divide by zero\n-  --> $DIR/issue-8460-const.rs:22:36\n+  --> $DIR/issue-8460-const.rs:19:36\n    |\n LL |     assert!(thread::spawn(move|| { 1isize / 0; }).join().is_err());\n    |                                    ^^^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:22:36\n+  --> $DIR/issue-8460-const.rs:19:36\n    |\n LL |     assert!(thread::spawn(move|| { 1isize / 0; }).join().is_err());\n    |                                    ^^^^^^^^^^ attempt to divide by zero\n \n error: attempt to divide by zero\n-  --> $DIR/issue-8460-const.rs:25:36\n+  --> $DIR/issue-8460-const.rs:22:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i8 / 0; }).join().is_err());\n    |                                    ^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:25:36\n+  --> $DIR/issue-8460-const.rs:22:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i8 / 0; }).join().is_err());\n    |                                    ^^^^^^^ attempt to divide by zero\n \n error: attempt to divide by zero\n-  --> $DIR/issue-8460-const.rs:28:36\n+  --> $DIR/issue-8460-const.rs:25:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i16 / 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:28:36\n+  --> $DIR/issue-8460-const.rs:25:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i16 / 0; }).join().is_err());\n    |                                    ^^^^^^^^ attempt to divide by zero\n \n error: attempt to divide by zero\n-  --> $DIR/issue-8460-const.rs:31:36\n+  --> $DIR/issue-8460-const.rs:28:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i32 / 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:31:36\n+  --> $DIR/issue-8460-const.rs:28:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i32 / 0; }).join().is_err());\n    |                                    ^^^^^^^^ attempt to divide by zero\n \n error: attempt to divide by zero\n-  --> $DIR/issue-8460-const.rs:34:36\n+  --> $DIR/issue-8460-const.rs:31:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i64 / 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:34:36\n+  --> $DIR/issue-8460-const.rs:31:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i64 / 0; }).join().is_err());\n    |                                    ^^^^^^^^ attempt to divide by zero\n \n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const.rs:37:36\n+  --> $DIR/issue-8460-const.rs:34:36\n    |\n LL |     assert!(thread::spawn(move|| { isize::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^^^\n \n-error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:37:36\n-   |\n-LL |     assert!(thread::spawn(move|| { isize::MIN % -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n-\n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const.rs:40:36\n+  --> $DIR/issue-8460-const.rs:36:36\n    |\n LL |     assert!(thread::spawn(move|| { i8::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^\n \n-error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:40:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i8::MIN % -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n-\n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const.rs:43:36\n+  --> $DIR/issue-8460-const.rs:38:36\n    |\n LL |     assert!(thread::spawn(move|| { i16::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^\n \n-error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:43:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i16::MIN % -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n-\n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const.rs:46:36\n+  --> $DIR/issue-8460-const.rs:40:36\n    |\n LL |     assert!(thread::spawn(move|| { i32::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^\n \n-error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:46:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i32::MIN % -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n-\n error: attempt to calculate the remainder with overflow\n-  --> $DIR/issue-8460-const.rs:49:36\n+  --> $DIR/issue-8460-const.rs:42:36\n    |\n LL |     assert!(thread::spawn(move|| { i64::MIN % -1; }).join().is_err());\n    |                                    ^^^^^^^^^^^^^\n \n-error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:49:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i64::MIN % -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n-\n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const.rs:52:36\n+  --> $DIR/issue-8460-const.rs:44:36\n    |\n LL |     assert!(thread::spawn(move|| { 1isize % 0; }).join().is_err());\n    |                                    ^^^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:52:36\n+  --> $DIR/issue-8460-const.rs:44:36\n    |\n LL |     assert!(thread::spawn(move|| { 1isize % 0; }).join().is_err());\n    |                                    ^^^^^^^^^^ attempt to calculate the remainder with a divisor of zero\n \n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const.rs:55:36\n+  --> $DIR/issue-8460-const.rs:47:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i8 % 0; }).join().is_err());\n    |                                    ^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:55:36\n+  --> $DIR/issue-8460-const.rs:47:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i8 % 0; }).join().is_err());\n    |                                    ^^^^^^^ attempt to calculate the remainder with a divisor of zero\n \n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const.rs:58:36\n+  --> $DIR/issue-8460-const.rs:50:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i16 % 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:58:36\n+  --> $DIR/issue-8460-const.rs:50:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i16 % 0; }).join().is_err());\n    |                                    ^^^^^^^^ attempt to calculate the remainder with a divisor of zero\n \n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const.rs:61:36\n+  --> $DIR/issue-8460-const.rs:53:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i32 % 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:61:36\n+  --> $DIR/issue-8460-const.rs:53:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i32 % 0; }).join().is_err());\n    |                                    ^^^^^^^^ attempt to calculate the remainder with a divisor of zero\n \n error: attempt to calculate the remainder with a divisor of zero\n-  --> $DIR/issue-8460-const.rs:64:36\n+  --> $DIR/issue-8460-const.rs:56:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i64 % 0; }).join().is_err());\n    |                                    ^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/issue-8460-const.rs:64:36\n+  --> $DIR/issue-8460-const.rs:56:36\n    |\n LL |     assert!(thread::spawn(move|| { 1i64 % 0; }).join().is_err());\n    |                                    ^^^^^^^^ attempt to calculate the remainder with a divisor of zero\n \n-error: aborting due to 40 previous errors\n+error: aborting due to 30 previous errors\n "}]}