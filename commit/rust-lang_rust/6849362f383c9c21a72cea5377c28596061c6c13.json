{"sha": "6849362f383c9c21a72cea5377c28596061c6c13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4NDkzNjJmMzgzYzljMjFhNzJjZWE1Mzc3YzI4NTk2MDYxYzZjMTM=", "commit": {"author": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-16T22:40:20Z"}, "committer": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-16T22:40:20Z"}, "message": "Remove the last actual usage of RestrictionSet\n\nSwitch to checking BorrowKind values of loans instead of their\nRestrictionSet values. This was the last code that made a decision\nbased on a RestrictionSet.", "tree": {"sha": "05790298781b7a2e74c92fe84570f2e3bbd1eb37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05790298781b7a2e74c92fe84570f2e3bbd1eb37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6849362f383c9c21a72cea5377c28596061c6c13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6849362f383c9c21a72cea5377c28596061c6c13", "html_url": "https://github.com/rust-lang/rust/commit/6849362f383c9c21a72cea5377c28596061c6c13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6849362f383c9c21a72cea5377c28596061c6c13/comments", "author": null, "committer": null, "parents": [{"sha": "6ca8dbfaedc9d37b9b40fd562755a358e7810266", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ca8dbfaedc9d37b9b40fd562755a358e7810266", "html_url": "https://github.com/rust-lang/rust/commit/6ca8dbfaedc9d37b9b40fd562755a358e7810266"}], "stats": {"total": 20, "additions": 3, "deletions": 17}, "files": [{"sha": "20c0f8f78665601f30ace09570615ba445111dc9", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6849362f383c9c21a72cea5377c28596061c6c13/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6849362f383c9c21a72cea5377c28596061c6c13/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=6849362f383c9c21a72cea5377c28596061c6c13", "patch": "@@ -294,25 +294,11 @@ impl<'a> CheckLoanCtxt<'a> {\n                loan1.repr(self.tcx()),\n                loan2.repr(self.tcx()));\n \n-        // Restrictions that would cause the new loan to be illegal:\n-        let illegal_if = match loan2.kind {\n-            // Look for restrictions against mutation. These are\n-            // generated by all other borrows.\n-            ty::MutBorrow => RESTR_MUTATE,\n-\n-            // Look for restrictions against freezing (immutable borrows).\n-            // These are generated by `&mut` borrows.\n-            ty::ImmBorrow => RESTR_FREEZE,\n-\n-            // No matter how the data is borrowed (as `&`, as `&mut`,\n-            // or as `&unique imm`) it will always generate a\n-            // restriction against mutating the data. So look for those.\n-            ty::UniqueImmBorrow => RESTR_MUTATE,\n-        };\n-        debug!(\"illegal_if={:?}\", illegal_if);\n+        if compatible_borrow_kinds(loan1.kind, loan2.kind) {\n+            return true;\n+        }\n \n         for restr in loan1.restrictions.iter() {\n-            if !restr.set.intersects(illegal_if) { continue; }\n             if restr.loan_path != loan2.loan_path { continue; }\n \n             let old_pronoun = if new_loan.loan_path == old_loan.loan_path {"}]}