{"sha": "b04fda8b6971c5a2541b02e0498196beb4642728", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNGZkYThiNjk3MWM1YTI1NDFiMDJlMDQ5ODE5NmJlYjQ2NDI3Mjg=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-07-23T19:04:54Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-08-11T21:21:05Z"}, "message": "Add doc(alias) attribute checks for associated consts and associated types", "tree": {"sha": "d2c068cbcfa8522b5a73917e8f4e3e2b5fc57c70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2c068cbcfa8522b5a73917e8f4e3e2b5fc57c70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b04fda8b6971c5a2541b02e0498196beb4642728", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b04fda8b6971c5a2541b02e0498196beb4642728", "html_url": "https://github.com/rust-lang/rust/commit/b04fda8b6971c5a2541b02e0498196beb4642728", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b04fda8b6971c5a2541b02e0498196beb4642728/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23a2ba6e53cd5cd8c4cc2f75cc1e7d2ac20d9cbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/23a2ba6e53cd5cd8c4cc2f75cc1e7d2ac20d9cbc", "html_url": "https://github.com/rust-lang/rust/commit/23a2ba6e53cd5cd8c4cc2f75cc1e7d2ac20d9cbc"}], "stats": {"total": 66, "additions": 57, "deletions": 9}, "files": [{"sha": "4f347f2055e895446b7a84cd741a6df06a09e792", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b04fda8b6971c5a2541b02e0498196beb4642728/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b04fda8b6971c5a2541b02e0498196beb4642728/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=b04fda8b6971c5a2541b02e0498196beb4642728", "patch": "@@ -591,8 +591,14 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                 // Don't duplicate impls when inlining or if it's implementing a trait, we'll pick\n                 // them up regardless of where they're located.\n                 if !self.inlining && of_trait.is_none() {\n-                    let items =\n-                        items.iter().map(|item| self.cx.tcx.hir().impl_item(item.id)).collect();\n+                    let items = items\n+                        .iter()\n+                        .map(|item| {\n+                            let item = self.cx.tcx.hir().impl_item(item.id);\n+                            self.check_impl_doc_alias_attr(item);\n+                            item\n+                        })\n+                        .collect();\n                     let i = Impl {\n                         unsafety,\n                         polarity,\n@@ -608,11 +614,31 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                         vis: &item.vis,\n                     };\n                     om.impls.push(i);\n+                } else if of_trait.is_some() {\n+                    for item in items.iter() {\n+                        self.check_impl_doc_alias_attr(self.cx.tcx.hir().impl_item(item.id));\n+                    }\n                 }\n             }\n         }\n     }\n \n+    fn check_impl_doc_alias_attr(&self, item: &hir::ImplItem<'_>) {\n+        match item.kind {\n+            hir::ImplItemKind::Const(_, _) => check_doc_alias_attrs(\n+                &item.attrs,\n+                \"const in implementation block\",\n+                self.cx.sess().diagnostic(),\n+            ),\n+            hir::ImplItemKind::TyAlias(_) => check_doc_alias_attrs(\n+                &item.attrs,\n+                \"type alias in implementation block\",\n+                self.cx.sess().diagnostic(),\n+            ),\n+            hir::ImplItemKind::Fn(_, _) => {}\n+        }\n+    }\n+\n     fn visit_foreign_item(\n         &mut self,\n         item: &'tcx hir::ForeignItem<'_>,"}, {"sha": "8a97cf7f8e89250e752b4dccaad34fb3c93d94ed", "filename": "src/test/rustdoc-ui/check-doc-alias-attr-location.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b04fda8b6971c5a2541b02e0498196beb4642728/src%2Ftest%2Frustdoc-ui%2Fcheck-doc-alias-attr-location.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b04fda8b6971c5a2541b02e0498196beb4642728/src%2Ftest%2Frustdoc-ui%2Fcheck-doc-alias-attr-location.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-doc-alias-attr-location.rs?ref=b04fda8b6971c5a2541b02e0498196beb4642728", "patch": "@@ -1,13 +1,23 @@\n #![feature(doc_alias)]\n \n pub struct Bar;\n-pub trait Foo {}\n+pub trait Foo {\n+    type X;\n+    fn foo() -> Self::X;\n+}\n \n #[doc(alias = \"foo\")] //~ ERROR\n extern {}\n \n #[doc(alias = \"bar\")] //~ ERROR\n-impl Bar {}\n+impl Bar {\n+    #[doc(alias = \"const\")] //~ ERROR\n+    const A: u32 = 0;\n+}\n \n #[doc(alias = \"foobar\")] //~ ERROR\n-impl Foo for Bar {}\n+impl Foo for Bar {\n+    #[doc(alias = \"assoc\")] //~ ERROR\n+    type X = i32;\n+    fn foo() -> Self::X { 0 }\n+}"}, {"sha": "5fe943debdeb04c2d06f3704871fed92a082348e", "filename": "src/test/rustdoc-ui/check-doc-alias-attr-location.stderr", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b04fda8b6971c5a2541b02e0498196beb4642728/src%2Ftest%2Frustdoc-ui%2Fcheck-doc-alias-attr-location.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b04fda8b6971c5a2541b02e0498196beb4642728/src%2Ftest%2Frustdoc-ui%2Fcheck-doc-alias-attr-location.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-doc-alias-attr-location.stderr?ref=b04fda8b6971c5a2541b02e0498196beb4642728", "patch": "@@ -1,20 +1,32 @@\n error: `#[doc(alias = \"...\")]` isn't allowed on extern block\n-  --> $DIR/check-doc-alias-attr-location.rs:6:7\n+  --> $DIR/check-doc-alias-attr-location.rs:9:7\n    |\n LL | #[doc(alias = \"foo\")]\n    |       ^^^^^^^^^^^^^\n \n error: `#[doc(alias = \"...\")]` isn't allowed on implementation block\n-  --> $DIR/check-doc-alias-attr-location.rs:9:7\n+  --> $DIR/check-doc-alias-attr-location.rs:12:7\n    |\n LL | #[doc(alias = \"bar\")]\n    |       ^^^^^^^^^^^^^\n \n+error: `#[doc(alias = \"...\")]` isn't allowed on const in implementation block\n+  --> $DIR/check-doc-alias-attr-location.rs:14:11\n+   |\n+LL |     #[doc(alias = \"const\")]\n+   |           ^^^^^^^^^^^^^^^\n+\n error: `#[doc(alias = \"...\")]` isn't allowed on implementation block\n-  --> $DIR/check-doc-alias-attr-location.rs:12:7\n+  --> $DIR/check-doc-alias-attr-location.rs:18:7\n    |\n LL | #[doc(alias = \"foobar\")]\n    |       ^^^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: `#[doc(alias = \"...\")]` isn't allowed on type alias in implementation block\n+  --> $DIR/check-doc-alias-attr-location.rs:20:11\n+   |\n+LL |     #[doc(alias = \"assoc\")]\n+   |           ^^^^^^^^^^^^^^^\n+\n+error: aborting due to 5 previous errors\n "}]}