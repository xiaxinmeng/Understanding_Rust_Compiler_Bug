{"sha": "f6dd332820f802ff346ad5937580c952532df718", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ZGQzMzI4MjBmODAyZmYzNDZhZDU5Mzc1ODBjOTUyNTMyZGY3MTg=", "commit": {"author": {"name": "hi-rustin", "email": "rustin.liu@gmail.com", "date": "2021-05-07T02:41:04Z"}, "committer": {"name": "hi-rustin", "email": "rustin.liu@gmail.com", "date": "2021-05-07T02:41:04Z"}, "message": "shrinking the deprecated method span", "tree": {"sha": "79066bfa456f187ecb7195e0bc33abffc89a1895", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79066bfa456f187ecb7195e0bc33abffc89a1895"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6dd332820f802ff346ad5937580c952532df718", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6dd332820f802ff346ad5937580c952532df718", "html_url": "https://github.com/rust-lang/rust/commit/f6dd332820f802ff346ad5937580c952532df718", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6dd332820f802ff346ad5937580c952532df718/comments", "author": {"login": "hi-rustin", "id": 29879298, "node_id": "MDQ6VXNlcjI5ODc5Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/29879298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi-rustin", "html_url": "https://github.com/hi-rustin", "followers_url": "https://api.github.com/users/hi-rustin/followers", "following_url": "https://api.github.com/users/hi-rustin/following{/other_user}", "gists_url": "https://api.github.com/users/hi-rustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi-rustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi-rustin/subscriptions", "organizations_url": "https://api.github.com/users/hi-rustin/orgs", "repos_url": "https://api.github.com/users/hi-rustin/repos", "events_url": "https://api.github.com/users/hi-rustin/events{/privacy}", "received_events_url": "https://api.github.com/users/hi-rustin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hi-rustin", "id": 29879298, "node_id": "MDQ6VXNlcjI5ODc5Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/29879298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi-rustin", "html_url": "https://github.com/hi-rustin", "followers_url": "https://api.github.com/users/hi-rustin/followers", "following_url": "https://api.github.com/users/hi-rustin/following{/other_user}", "gists_url": "https://api.github.com/users/hi-rustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi-rustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi-rustin/subscriptions", "organizations_url": "https://api.github.com/users/hi-rustin/orgs", "repos_url": "https://api.github.com/users/hi-rustin/repos", "events_url": "https://api.github.com/users/hi-rustin/events{/privacy}", "received_events_url": "https://api.github.com/users/hi-rustin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d11e257945c710d406e77903764ad4b7a52bda5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d11e257945c710d406e77903764ad4b7a52bda5", "html_url": "https://github.com/rust-lang/rust/commit/2d11e257945c710d406e77903764ad4b7a52bda5"}], "stats": {"total": 257, "additions": 159, "deletions": 98}, "files": [{"sha": "1bb427d8a675d32a4dc306b7bf15a29cff2ae97e", "filename": "compiler/rustc_middle/src/middle/stability.rs", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f6dd332820f802ff346ad5937580c952532df718/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6dd332820f802ff346ad5937580c952532df718/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fstability.rs?ref=f6dd332820f802ff346ad5937580c952532df718", "patch": "@@ -281,7 +281,13 @@ impl<'tcx> TyCtxt<'tcx> {\n     /// If `id` is `Some(_)`, this function will also check if the item at `def_id` has been\n     /// deprecated. If the item is indeed deprecated, we will emit a deprecation lint attached to\n     /// `id`.\n-    pub fn eval_stability(self, def_id: DefId, id: Option<HirId>, span: Span) -> EvalResult {\n+    pub fn eval_stability(\n+        self,\n+        def_id: DefId,\n+        id: Option<HirId>,\n+        span: Span,\n+        method_span: Option<Span>,\n+    ) -> EvalResult {\n         // Deprecated attributes apply in-crate and cross-crate.\n         if let Some(id) = id {\n             if let Some(depr_entry) = self.lookup_deprecation_entry(def_id) {\n@@ -300,6 +306,10 @@ impl<'tcx> TyCtxt<'tcx> {\n                     let path = &with_no_trimmed_paths(|| self.def_path_str(def_id));\n                     let kind = self.def_kind(def_id).descr(def_id);\n                     let (message, lint) = deprecation_message(&depr_entry.attr, kind, path);\n+                    let span = match method_span {\n+                        None => span,\n+                        Some(method_span) => method_span,\n+                    };\n                     late_report_deprecation(\n                         self,\n                         &message,\n@@ -382,8 +392,14 @@ impl<'tcx> TyCtxt<'tcx> {\n     ///\n     /// This function will also check if the item is deprecated.\n     /// If so, and `id` is not `None`, a deprecated lint attached to `id` will be emitted.\n-    pub fn check_stability(self, def_id: DefId, id: Option<HirId>, span: Span) {\n-        self.check_optional_stability(def_id, id, span, |span, def_id| {\n+    pub fn check_stability(\n+        self,\n+        def_id: DefId,\n+        id: Option<HirId>,\n+        span: Span,\n+        method_span: Option<Span>,\n+    ) {\n+        self.check_optional_stability(def_id, id, span, method_span, |span, def_id| {\n             // The API could be uncallable for other reasons, for example when a private module\n             // was referenced.\n             self.sess.delay_span_bug(span, &format!(\"encountered unmarked API: {:?}\", def_id));\n@@ -399,14 +415,15 @@ impl<'tcx> TyCtxt<'tcx> {\n         def_id: DefId,\n         id: Option<HirId>,\n         span: Span,\n+        method_span: Option<Span>,\n         unmarked: impl FnOnce(Span, DefId),\n     ) {\n         let soft_handler = |lint, span, msg: &_| {\n             self.struct_span_lint_hir(lint, id.unwrap_or(hir::CRATE_HIR_ID), span, |lint| {\n                 lint.build(msg).emit()\n             })\n         };\n-        match self.eval_stability(def_id, id, span) {\n+        match self.eval_stability(def_id, id, span, method_span) {\n             EvalResult::Allow => {}\n             EvalResult::Deny { feature, reason, issue, is_soft } => {\n                 report_unstable(self.sess, feature, reason, issue, is_soft, span, soft_handler)"}, {"sha": "6b1813fba7600db946f8a9710605de147162a399", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f6dd332820f802ff346ad5937580c952532df718/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6dd332820f802ff346ad5937580c952532df718/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=f6dd332820f802ff346ad5937580c952532df718", "patch": "@@ -739,7 +739,7 @@ impl Visitor<'tcx> for Checker<'tcx> {\n                     None => return,\n                 };\n                 let def_id = DefId { krate: cnum, index: CRATE_DEF_INDEX };\n-                self.tcx.check_stability(def_id, Some(item.hir_id()), item.span);\n+                self.tcx.check_stability(def_id, Some(item.hir_id()), item.span, None);\n             }\n \n             // For implementations of traits, check the stability of each item\n@@ -783,7 +783,7 @@ impl Visitor<'tcx> for Checker<'tcx> {\n                             .map(|item| item.def_id);\n                         if let Some(def_id) = trait_item_def_id {\n                             // Pass `None` to skip deprecation warnings.\n-                            self.tcx.check_stability(def_id, None, impl_item.span);\n+                            self.tcx.check_stability(def_id, None, impl_item.span, None);\n                         }\n                     }\n                 }\n@@ -832,7 +832,7 @@ impl Visitor<'tcx> for Checker<'tcx> {\n \n     fn visit_path(&mut self, path: &'tcx hir::Path<'tcx>, id: hir::HirId) {\n         if let Some(def_id) = path.res.opt_def_id() {\n-            self.tcx.check_stability(def_id, Some(id), path.span)\n+            self.tcx.check_stability(def_id, Some(id), path.span, None)\n         }\n         intravisit::walk_path(self, path)\n     }"}, {"sha": "fcae995b8d4849dbb256303fc575d98d861105f2", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f6dd332820f802ff346ad5937580c952532df718/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6dd332820f802ff346ad5937580c952532df718/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=f6dd332820f802ff346ad5937580c952532df718", "patch": "@@ -431,6 +431,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                                 param.def_id,\n                                 Some(arg.id()),\n                                 arg.span(),\n+                                None,\n                                 |_, _| {\n                                     // Default generic parameters may not be marked\n                                     // with stability attributes, i.e. when the\n@@ -1053,7 +1054,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 .span_label(binding.span, \"private associated type\")\n                 .emit();\n         }\n-        tcx.check_stability(assoc_ty.def_id, Some(hir_ref_id), binding.span);\n+        tcx.check_stability(assoc_ty.def_id, Some(hir_ref_id), binding.span, None);\n \n         if !speculative {\n             dup_bindings\n@@ -1659,7 +1660,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     .find(|vd| tcx.hygienic_eq(assoc_ident, vd.ident, adt_def.did));\n                 if let Some(variant_def) = variant_def {\n                     if permit_variants {\n-                        tcx.check_stability(variant_def.def_id, Some(hir_ref_id), span);\n+                        tcx.check_stability(variant_def.def_id, Some(hir_ref_id), span, None);\n                         self.prohibit_generics(slice::from_ref(assoc_segment));\n                         return Ok((qself_ty, DefKind::Variant, variant_def.def_id));\n                     } else {\n@@ -1779,7 +1780,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 .span_label(span, &format!(\"private {}\", kind))\n                 .emit();\n         }\n-        tcx.check_stability(item.def_id, Some(hir_ref_id), span);\n+        tcx.check_stability(item.def_id, Some(hir_ref_id), span, None);\n \n         if let Some(variant_def_id) = variant_resolution {\n             tcx.struct_span_lint_hir(AMBIGUOUS_ASSOCIATED_ITEMS, hir_ref_id, span, |lint| {"}, {"sha": "d0cbb58fb10eb8d5cecf377d5bd4c9e652426508", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6dd332820f802ff346ad5937580c952532df718/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6dd332820f802ff346ad5937580c952532df718/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=f6dd332820f802ff346ad5937580c952532df718", "patch": "@@ -1230,7 +1230,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 // struct-like enums (yet...), but it's definitely not\n                 // a bug to have constructed one.\n                 if adt_kind != AdtKind::Enum {\n-                    tcx.check_stability(v_field.did, Some(expr_id), field.span);\n+                    tcx.check_stability(v_field.did, Some(expr_id), field.span, None);\n                 }\n \n                 self.field_ty(field.span, v_field, substs)\n@@ -1571,7 +1571,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             self.apply_adjustments(base, adjustments);\n                             self.register_predicates(autoderef.into_obligations());\n \n-                            self.tcx.check_stability(field.did, Some(expr.hir_id), expr.span);\n+                            self.tcx.check_stability(field.did, Some(expr.hir_id), expr.span, None);\n                             return field_ty;\n                         }\n                         private_candidate = Some((base_def.did, field_ty));"}, {"sha": "0b1129a6312498a975f1c3f79c98d6ef2656d3e9", "filename": "compiler/rustc_typeck/src/check/method/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f6dd332820f802ff346ad5937580c952532df718/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6dd332820f802ff346ad5937580c952532df718/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs?ref=f6dd332820f802ff346ad5937580c952532df718", "patch": "@@ -205,7 +205,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 .insert(*import_id);\n         }\n \n-        self.tcx.check_stability(pick.item.def_id, Some(call_expr.hir_id), span);\n+        self.tcx.check_stability(pick.item.def_id, Some(call_expr.hir_id), span, None);\n \n         let result =\n             self.confirm_method(span, self_expr, call_expr, self_ty, pick.clone(), segment);\n@@ -445,7 +445,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     // them as well. It's ok to use the variant's id as a ctor id since an\n                     // error will be reported on any use of such resolution anyway.\n                     let ctor_def_id = variant_def.ctor_def_id.unwrap_or(variant_def.def_id);\n-                    tcx.check_stability(ctor_def_id, Some(expr_id), span);\n+                    tcx.check_stability(ctor_def_id, Some(expr_id), span, Some(method_name.span));\n                     return Ok((\n                         DefKind::Ctor(CtorOf::Variant, variant_def.ctor_kind),\n                         ctor_def_id,\n@@ -475,7 +475,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         let def_kind = pick.item.kind.as_def_kind();\n         debug!(\"resolve_ufcs: def_kind={:?}, def_id={:?}\", def_kind, pick.item.def_id);\n-        tcx.check_stability(pick.item.def_id, Some(expr_id), span);\n+        tcx.check_stability(pick.item.def_id, Some(expr_id), span, Some(method_name.span));\n         Ok((def_kind, pick.item.def_id))\n     }\n "}, {"sha": "440e0f4e1a2acfbbaf27c96a01fe94cf766a7db6", "filename": "compiler/rustc_typeck/src/check/method/probe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6dd332820f802ff346ad5937580c952532df718/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6dd332820f802ff346ad5937580c952532df718/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs?ref=f6dd332820f802ff346ad5937580c952532df718", "patch": "@@ -1286,7 +1286,7 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n         if let Some(uc) = unstable_candidates {\n             applicable_candidates.retain(|&(p, _)| {\n                 if let stability::EvalResult::Deny { feature, .. } =\n-                    self.tcx.eval_stability(p.item.def_id, None, self.span)\n+                    self.tcx.eval_stability(p.item.def_id, None, self.span, None)\n                 {\n                     uc.push((p, feature));\n                     return false;"}, {"sha": "3ac760e23634e33f0d57142d4148e99602b84724", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f6dd332820f802ff346ad5937580c952532df718/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6dd332820f802ff346ad5937580c952532df718/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=f6dd332820f802ff346ad5937580c952532df718", "patch": "@@ -958,7 +958,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 let field_ty = self.field_ty(subpat.span, &variant.fields[i], substs);\n                 self.check_pat(&subpat, field_ty, def_bm, TopInfo { parent_pat: Some(&pat), ..ti });\n \n-                self.tcx.check_stability(variant.fields[i].did, Some(pat.hir_id), subpat.span);\n+                self.tcx.check_stability(\n+                    variant.fields[i].did,\n+                    Some(pat.hir_id),\n+                    subpat.span,\n+                    None,\n+                );\n             }\n         } else {\n             // Pattern has wrong number of fields.\n@@ -1192,7 +1197,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         .get(&ident)\n                         .map(|(i, f)| {\n                             self.write_field_index(field.hir_id, *i);\n-                            self.tcx.check_stability(f.did, Some(pat.hir_id), span);\n+                            self.tcx.check_stability(f.did, Some(pat.hir_id), span, None);\n                             self.field_ty(span, f, substs)\n                         })\n                         .unwrap_or_else(|| {"}, {"sha": "3699a939e27882e21e5a0a5363b9461f21cff183", "filename": "src/test/ui/deprecation/deprecation-lint.stderr", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/f6dd332820f802ff346ad5937580c952532df718/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6dd332820f802ff346ad5937580c952532df718/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr?ref=f6dd332820f802ff346ad5937580c952532df718", "patch": "@@ -359,16 +359,16 @@ LL |         foo.method_deprecated();\n    |             ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:18:9\n+  --> $DIR/deprecation-lint.rs:18:14\n    |\n LL |         Foo::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:19:9\n+  --> $DIR/deprecation-lint.rs:19:16\n    |\n LL |         <Foo>::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n   --> $DIR/deprecation-lint.rs:20:13\n@@ -377,10 +377,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:22:9\n+  --> $DIR/deprecation-lint.rs:22:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated_text`: text\n   --> $DIR/deprecation-lint.rs:26:13\n@@ -389,16 +389,16 @@ LL | ...   foo.method_deprecated_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:27:9\n+  --> $DIR/deprecation-lint.rs:27:14\n    |\n LL | ...   Foo::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:28:9\n+  --> $DIR/deprecation-lint.rs:28:16\n    |\n LL | ...   <Foo>::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n   --> $DIR/deprecation-lint.rs:29:13\n@@ -407,10 +407,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:31:9\n+  --> $DIR/deprecation-lint.rs:31:16\n    |\n LL | ...   <Foo>::trait_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated field `deprecation_lint::DeprecatedStruct::i`: text\n   --> $DIR/deprecation-lint.rs:35:13\n@@ -431,10 +431,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:66:9\n+  --> $DIR/deprecation-lint.rs:66:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n   --> $DIR/deprecation-lint.rs:68:13\n@@ -443,10 +443,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:70:9\n+  --> $DIR/deprecation-lint.rs:70:16\n    |\n LL | ...   <Foo>::trait_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n   --> $DIR/deprecation-lint.rs:75:13\n@@ -551,16 +551,16 @@ LL |         foo.method_deprecated();\n    |             ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:247:9\n+  --> $DIR/deprecation-lint.rs:247:14\n    |\n LL |         Foo::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:248:9\n+  --> $DIR/deprecation-lint.rs:248:16\n    |\n LL |         <Foo>::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n   --> $DIR/deprecation-lint.rs:249:13\n@@ -569,10 +569,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:251:9\n+  --> $DIR/deprecation-lint.rs:251:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n   --> $DIR/deprecation-lint.rs:255:13\n@@ -581,16 +581,16 @@ LL | ...   foo.method_deprecated_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:256:9\n+  --> $DIR/deprecation-lint.rs:256:14\n    |\n LL | ...   Foo::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:257:9\n+  --> $DIR/deprecation-lint.rs:257:16\n    |\n LL | ...   <Foo>::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n   --> $DIR/deprecation-lint.rs:258:13\n@@ -599,10 +599,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:260:9\n+  --> $DIR/deprecation-lint.rs:260:16\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::DeprecatedStruct::i`: text\n   --> $DIR/deprecation-lint.rs:269:13\n@@ -623,10 +623,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:293:9\n+  --> $DIR/deprecation-lint.rs:293:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n   --> $DIR/deprecation-lint.rs:295:13\n@@ -635,10 +635,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:297:9\n+  --> $DIR/deprecation-lint.rs:297:16\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n   --> $DIR/deprecation-lint.rs:302:13"}, {"sha": "99a2b09614fd99495f8b71da07d66a67b6c26ebd", "filename": "src/test/ui/deprecation/issue-84637-deprecated-associated-function.fixed", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f6dd332820f802ff346ad5937580c952532df718/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f6dd332820f802ff346ad5937580c952532df718/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.fixed?ref=f6dd332820f802ff346ad5937580c952532df718", "patch": "@@ -0,0 +1,9 @@\n+// run-rustfix\n+\n+#![deny(deprecated)]\n+\n+fn main() {\n+    let _foo = str::trim_start(\"   aoeu\"); //~ ERROR use of deprecated associated function `core::str::<impl str>::trim_left`: superseded by `trim_start` [deprecated]\n+\n+    let _bar = \"   aoeu\".trim_start(); //~ ERROR use of deprecated associated function `core::str::<impl str>::trim_left`: superseded by `trim_start` [deprecated]\n+}"}, {"sha": "62bf84aa3ea28ed7287d1b5c877aa66f5de620a5", "filename": "src/test/ui/deprecation/issue-84637-deprecated-associated-function.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f6dd332820f802ff346ad5937580c952532df718/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6dd332820f802ff346ad5937580c952532df718/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.rs?ref=f6dd332820f802ff346ad5937580c952532df718", "patch": "@@ -0,0 +1,9 @@\n+// run-rustfix\n+\n+#![deny(deprecated)]\n+\n+fn main() {\n+    let _foo = str::trim_left(\"   aoeu\"); //~ ERROR use of deprecated associated function `core::str::<impl str>::trim_left`: superseded by `trim_start` [deprecated]\n+\n+    let _bar = \"   aoeu\".trim_left(); //~ ERROR use of deprecated associated function `core::str::<impl str>::trim_left`: superseded by `trim_start` [deprecated]\n+}"}, {"sha": "e65d21bb09bbe7a154332a55bc258c487eefc25d", "filename": "src/test/ui/deprecation/issue-84637-deprecated-associated-function.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f6dd332820f802ff346ad5937580c952532df718/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6dd332820f802ff346ad5937580c952532df718/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fissue-84637-deprecated-associated-function.stderr?ref=f6dd332820f802ff346ad5937580c952532df718", "patch": "@@ -0,0 +1,20 @@\n+error: use of deprecated associated function `core::str::<impl str>::trim_left`: superseded by `trim_start`\n+  --> $DIR/issue-84637-deprecated-associated-function.rs:6:21\n+   |\n+LL |     let _foo = str::trim_left(\"   aoeu\");\n+   |                     ^^^^^^^^^ help: replace the use of the deprecated associated function: `trim_start`\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-84637-deprecated-associated-function.rs:3:9\n+   |\n+LL | #![deny(deprecated)]\n+   |         ^^^^^^^^^^\n+\n+error: use of deprecated associated function `core::str::<impl str>::trim_left`: superseded by `trim_start`\n+  --> $DIR/issue-84637-deprecated-associated-function.rs:8:26\n+   |\n+LL |     let _bar = \"   aoeu\".trim_left();\n+   |                          ^^^^^^^^^ help: replace the use of the deprecated associated function: `trim_start`\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "94fc1a7b46dbaf85e1234f8e109091572ad66541", "filename": "src/test/ui/lint/lint-stability-deprecated.stderr", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/f6dd332820f802ff346ad5937580c952532df718/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6dd332820f802ff346ad5937580c952532df718/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr?ref=f6dd332820f802ff346ad5937580c952532df718", "patch": "@@ -335,16 +335,16 @@ LL |         foo.method_deprecated();\n    |             ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:26:9\n+  --> $DIR/lint-stability-deprecated.rs:26:14\n    |\n LL |         Foo::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:27:9\n+  --> $DIR/lint-stability-deprecated.rs:27:16\n    |\n LL |         <Foo>::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n   --> $DIR/lint-stability-deprecated.rs:28:13\n@@ -353,10 +353,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:30:9\n+  --> $DIR/lint-stability-deprecated.rs:30:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_text`: text\n   --> $DIR/lint-stability-deprecated.rs:34:13\n@@ -365,16 +365,16 @@ LL | ...   foo.method_deprecated_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:35:9\n+  --> $DIR/lint-stability-deprecated.rs:35:14\n    |\n LL | ...   Foo::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:36:9\n+  --> $DIR/lint-stability-deprecated.rs:36:16\n    |\n LL | ...   <Foo>::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n   --> $DIR/lint-stability-deprecated.rs:37:13\n@@ -383,10 +383,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:39:9\n+  --> $DIR/lint-stability-deprecated.rs:39:16\n    |\n LL | ...   <Foo>::trait_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable`: text\n   --> $DIR/lint-stability-deprecated.rs:43:13\n@@ -395,16 +395,16 @@ LL | ...   foo.method_deprecated_unstable();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:44:9\n+  --> $DIR/lint-stability-deprecated.rs:44:14\n    |\n LL | ...   Foo::method_deprecated_unstable(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:45:9\n+  --> $DIR/lint-stability-deprecated.rs:45:16\n    |\n LL | ...   <Foo>::method_deprecated_unstable(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n   --> $DIR/lint-stability-deprecated.rs:46:13\n@@ -413,10 +413,10 @@ LL |         foo.trait_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:48:9\n+  --> $DIR/lint-stability-deprecated.rs:48:16\n    |\n LL | ...   <Foo>::trait_deprecated_unstable(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable_text`: text\n   --> $DIR/lint-stability-deprecated.rs:52:13\n@@ -425,16 +425,16 @@ LL | ...   foo.method_deprecated_unstable_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:53:9\n+  --> $DIR/lint-stability-deprecated.rs:53:14\n    |\n LL | ...   Foo::method_deprecated_unstable_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:54:9\n+  --> $DIR/lint-stability-deprecated.rs:54:16\n    |\n LL | ...   <Foo>::method_deprecated_unstable_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n   --> $DIR/lint-stability-deprecated.rs:55:13\n@@ -443,10 +443,10 @@ LL | ...   foo.trait_deprecated_unstable_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:57:9\n+  --> $DIR/lint-stability-deprecated.rs:57:16\n    |\n LL | ...   <Foo>::trait_deprecated_unstable_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated field `lint_stability::DeprecatedStruct::i`: text\n   --> $DIR/lint-stability-deprecated.rs:109:13\n@@ -467,10 +467,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:146:9\n+  --> $DIR/lint-stability-deprecated.rs:146:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n   --> $DIR/lint-stability-deprecated.rs:148:13\n@@ -479,10 +479,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:150:9\n+  --> $DIR/lint-stability-deprecated.rs:150:16\n    |\n LL | ...   <Foo>::trait_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n   --> $DIR/lint-stability-deprecated.rs:152:13\n@@ -491,10 +491,10 @@ LL |         foo.trait_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:154:9\n+  --> $DIR/lint-stability-deprecated.rs:154:16\n    |\n LL | ...   <Foo>::trait_deprecated_unstable(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n   --> $DIR/lint-stability-deprecated.rs:156:13\n@@ -503,10 +503,10 @@ LL | ...   foo.trait_deprecated_unstable_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:158:9\n+  --> $DIR/lint-stability-deprecated.rs:158:16\n    |\n LL | ...   <Foo>::trait_deprecated_unstable_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n   --> $DIR/lint-stability-deprecated.rs:175:13\n@@ -539,16 +539,16 @@ LL |         foo.method_deprecated();\n    |             ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:332:9\n+  --> $DIR/lint-stability-deprecated.rs:332:14\n    |\n LL |         Foo::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:333:9\n+  --> $DIR/lint-stability-deprecated.rs:333:16\n    |\n LL |         <Foo>::method_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n   --> $DIR/lint-stability-deprecated.rs:334:13\n@@ -557,10 +557,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:336:9\n+  --> $DIR/lint-stability-deprecated.rs:336:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n   --> $DIR/lint-stability-deprecated.rs:340:13\n@@ -569,16 +569,16 @@ LL | ...   foo.method_deprecated_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:341:9\n+  --> $DIR/lint-stability-deprecated.rs:341:14\n    |\n LL | ...   Foo::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:342:9\n+  --> $DIR/lint-stability-deprecated.rs:342:16\n    |\n LL | ...   <Foo>::method_deprecated_text(&foo);\n-   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n   --> $DIR/lint-stability-deprecated.rs:343:13\n@@ -587,10 +587,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:345:9\n+  --> $DIR/lint-stability-deprecated.rs:345:16\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated field `this_crate::DeprecatedStruct::i`: text\n   --> $DIR/lint-stability-deprecated.rs:386:13\n@@ -605,10 +605,10 @@ LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:407:9\n+  --> $DIR/lint-stability-deprecated.rs:407:16\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n   --> $DIR/lint-stability-deprecated.rs:409:13\n@@ -617,10 +617,10 @@ LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:411:9\n+  --> $DIR/lint-stability-deprecated.rs:411:16\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n   --> $DIR/lint-stability-deprecated.rs:428:13"}]}