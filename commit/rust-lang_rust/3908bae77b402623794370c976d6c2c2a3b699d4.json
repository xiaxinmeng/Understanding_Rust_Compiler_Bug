{"sha": "3908bae77b402623794370c976d6c2c2a3b699d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MDhiYWU3N2I0MDI2MjM3OTQzNzBjOTc2ZDZjMmMyYTNiNjk5ZDQ=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2015-04-16T15:53:17Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-17T02:23:37Z"}, "message": "Indicate None is code-like in doc comments", "tree": {"sha": "aba05641c1026ad3780d257ace771d966efc197e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aba05641c1026ad3780d257ace771d966efc197e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3908bae77b402623794370c976d6c2c2a3b699d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3908bae77b402623794370c976d6c2c2a3b699d4", "html_url": "https://github.com/rust-lang/rust/commit/3908bae77b402623794370c976d6c2c2a3b699d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3908bae77b402623794370c976d6c2c2a3b699d4/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35a4100af0df17436fcb29c7862145c669620eea", "url": "https://api.github.com/repos/rust-lang/rust/commits/35a4100af0df17436fcb29c7862145c669620eea", "html_url": "https://github.com/rust-lang/rust/commit/35a4100af0df17436fcb29c7862145c669620eea"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "16ee38898803fd0bb0194c9fdf61f80ca570638b", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3908bae77b402623794370c976d6c2c2a3b699d4/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3908bae77b402623794370c976d6c2c2a3b699d4/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=3908bae77b402623794370c976d6c2c2a3b699d4", "patch": "@@ -179,8 +179,8 @@ pub trait Iterator {\n \n     /// Creates an iterator that iterates over both this and the specified\n     /// iterators simultaneously, yielding the two elements as pairs. When\n-    /// either iterator returns None, all further invocations of next() will\n-    /// return None.\n+    /// either iterator returns `None`, all further invocations of next() will\n+    /// return `None`.\n     ///\n     /// # Examples\n     ///\n@@ -254,7 +254,7 @@ pub trait Iterator {\n     }\n \n     /// Creates an iterator that both filters and maps elements.\n-    /// If the specified function returns None, the element is skipped.\n+    /// If the specified function returns `None`, the element is skipped.\n     /// Otherwise the option is unwrapped and the new value is yielded.\n     ///\n     /// # Examples\n@@ -403,7 +403,7 @@ pub trait Iterator {\n     /// Creates a new iterator that behaves in a similar fashion to fold.\n     /// There is a state which is passed between each iteration and can be\n     /// mutated as necessary. The yielded values from the closure are yielded\n-    /// from the Scan instance when not None.\n+    /// from the Scan instance when not `None`.\n     ///\n     /// # Examples\n     ///\n@@ -701,7 +701,7 @@ pub trait Iterator {\n \n     /// Returns the index of the last element satisfying the specified predicate\n     ///\n-    /// If no element matches, None is returned.\n+    /// If no element matches, `None` is returned.\n     ///\n     /// Does not consume the iterator *before* the first found element.\n     ///"}]}