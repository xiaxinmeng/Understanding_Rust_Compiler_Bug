{"sha": "4bcf013438711aaeaa00ed0424a05e13d129b74b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiY2YwMTM0Mzg3MTFhYWVhYTAwZWQwNDI0YTA1ZTEzZDEyOWI3NGI=", "commit": {"author": {"name": "Masood Malekghassemi", "email": "atash@google.com", "date": "2016-07-26T00:46:01Z"}, "committer": {"name": "Masood Malekghassemi", "email": "atash@google.com", "date": "2016-07-26T00:46:01Z"}, "message": "Tidy up", "tree": {"sha": "daac4741a38d31f8cb0535fe84d9a963c3da2980", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/daac4741a38d31f8cb0535fe84d9a963c3da2980"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bcf013438711aaeaa00ed0424a05e13d129b74b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bcf013438711aaeaa00ed0424a05e13d129b74b", "html_url": "https://github.com/rust-lang/rust/commit/4bcf013438711aaeaa00ed0424a05e13d129b74b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bcf013438711aaeaa00ed0424a05e13d129b74b/comments", "author": {"login": "soltanmm-google", "id": 21180148, "node_id": "MDQ6VXNlcjIxMTgwMTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/21180148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soltanmm-google", "html_url": "https://github.com/soltanmm-google", "followers_url": "https://api.github.com/users/soltanmm-google/followers", "following_url": "https://api.github.com/users/soltanmm-google/following{/other_user}", "gists_url": "https://api.github.com/users/soltanmm-google/gists{/gist_id}", "starred_url": "https://api.github.com/users/soltanmm-google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soltanmm-google/subscriptions", "organizations_url": "https://api.github.com/users/soltanmm-google/orgs", "repos_url": "https://api.github.com/users/soltanmm-google/repos", "events_url": "https://api.github.com/users/soltanmm-google/events{/privacy}", "received_events_url": "https://api.github.com/users/soltanmm-google/received_events", "type": "User", "site_admin": false}, "committer": {"login": "soltanmm-google", "id": 21180148, "node_id": "MDQ6VXNlcjIxMTgwMTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/21180148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soltanmm-google", "html_url": "https://github.com/soltanmm-google", "followers_url": "https://api.github.com/users/soltanmm-google/followers", "following_url": "https://api.github.com/users/soltanmm-google/following{/other_user}", "gists_url": "https://api.github.com/users/soltanmm-google/gists{/gist_id}", "starred_url": "https://api.github.com/users/soltanmm-google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soltanmm-google/subscriptions", "organizations_url": "https://api.github.com/users/soltanmm-google/orgs", "repos_url": "https://api.github.com/users/soltanmm-google/repos", "events_url": "https://api.github.com/users/soltanmm-google/events{/privacy}", "received_events_url": "https://api.github.com/users/soltanmm-google/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e88df943dd7d8dba40d1bfadec5740309f6bb6e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e88df943dd7d8dba40d1bfadec5740309f6bb6e9", "html_url": "https://github.com/rust-lang/rust/commit/e88df943dd7d8dba40d1bfadec5740309f6bb6e9"}], "stats": {"total": 51, "additions": 38, "deletions": 13}, "files": [{"sha": "125f815feda6fa6d902bea13a91be128cb1a603c", "filename": "src/librustc/infer/bivariate.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4bcf013438711aaeaa00ed0424a05e13d129b74b/src%2Flibrustc%2Finfer%2Fbivariate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bcf013438711aaeaa00ed0424a05e13d129b74b/src%2Flibrustc%2Finfer%2Fbivariate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fbivariate.rs?ref=4bcf013438711aaeaa00ed0424a05e13d129b74b", "patch": "@@ -38,12 +38,16 @@ pub struct Bivariate<'combine, 'infcx: 'combine, 'gcx: 'infcx+'tcx, 'tcx: 'infcx\n }\n \n impl<'combine, 'infcx, 'gcx, 'tcx> Bivariate<'combine, 'infcx, 'gcx, 'tcx> {\n-    pub fn new(fields: &'combine mut CombineFields<'infcx, 'gcx, 'tcx>, a_is_expected: bool) -> Bivariate<'combine, 'infcx, 'gcx, 'tcx> {\n+    pub fn new(fields: &'combine mut CombineFields<'infcx, 'gcx, 'tcx>, a_is_expected: bool)\n+        -> Bivariate<'combine, 'infcx, 'gcx, 'tcx>\n+    {\n         Bivariate { fields: fields, a_is_expected: a_is_expected }\n     }\n }\n \n-impl<'combine, 'infcx, 'gcx, 'tcx> TypeRelation<'infcx, 'gcx, 'tcx> for Bivariate<'combine, 'infcx, 'gcx, 'tcx> {\n+impl<'combine, 'infcx, 'gcx, 'tcx> TypeRelation<'infcx, 'gcx, 'tcx>\n+    for Bivariate<'combine, 'infcx, 'gcx, 'tcx>\n+{\n     fn tag(&self) -> &'static str { \"Bivariate\" }\n \n     fn tcx(&self) -> TyCtxt<'infcx, 'gcx, 'tcx> { self.fields.tcx() }"}, {"sha": "b4818f963b3ba76e4b6ae71f2ad4f381dbbd1616", "filename": "src/librustc/infer/combine.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4bcf013438711aaeaa00ed0424a05e13d129b74b/src%2Flibrustc%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bcf013438711aaeaa00ed0424a05e13d129b74b/src%2Flibrustc%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcombine.rs?ref=4bcf013438711aaeaa00ed0424a05e13d129b74b", "patch": "@@ -251,7 +251,8 @@ impl<'infcx, 'gcx, 'tcx> CombineFields<'infcx, 'gcx, 'tcx> {\n                 BiTo => self.bivariate(a_is_expected).relate(&a_ty, &b_ty),\n                 EqTo => self.equate(a_is_expected).relate(&a_ty, &b_ty),\n                 SubtypeOf => self.sub(a_is_expected).relate(&a_ty, &b_ty),\n-                SupertypeOf => self.sub(a_is_expected).relate_with_variance(ty::Contravariant, &a_ty, &b_ty),\n+                SupertypeOf => self.sub(a_is_expected).relate_with_variance(\n+                    ty::Contravariant, &a_ty, &b_ty),\n             }?;\n         }\n "}, {"sha": "e06f7303acb2927ac99950a43b087c39f9c6c7ac", "filename": "src/librustc/infer/equate.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4bcf013438711aaeaa00ed0424a05e13d129b74b/src%2Flibrustc%2Finfer%2Fequate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bcf013438711aaeaa00ed0424a05e13d129b74b/src%2Flibrustc%2Finfer%2Fequate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fequate.rs?ref=4bcf013438711aaeaa00ed0424a05e13d129b74b", "patch": "@@ -23,12 +23,16 @@ pub struct Equate<'combine, 'infcx: 'combine, 'gcx: 'infcx+'tcx, 'tcx: 'infcx> {\n }\n \n impl<'combine, 'infcx, 'gcx, 'tcx> Equate<'combine, 'infcx, 'gcx, 'tcx> {\n-    pub fn new(fields: &'combine mut CombineFields<'infcx, 'gcx, 'tcx>, a_is_expected: bool) -> Equate<'combine, 'infcx, 'gcx, 'tcx> {\n+    pub fn new(fields: &'combine mut CombineFields<'infcx, 'gcx, 'tcx>, a_is_expected: bool)\n+        -> Equate<'combine, 'infcx, 'gcx, 'tcx>\n+    {\n         Equate { fields: fields, a_is_expected: a_is_expected }\n     }\n }\n \n-impl<'combine, 'infcx, 'gcx, 'tcx> TypeRelation<'infcx, 'gcx, 'tcx> for Equate<'combine, 'infcx, 'gcx, 'tcx> {\n+impl<'combine, 'infcx, 'gcx, 'tcx> TypeRelation<'infcx, 'gcx, 'tcx>\n+    for Equate<'combine, 'infcx, 'gcx, 'tcx>\n+{\n     fn tag(&self) -> &'static str { \"Equate\" }\n \n     fn tcx(&self) -> TyCtxt<'infcx, 'gcx, 'tcx> { self.fields.tcx() }"}, {"sha": "5dd85a31a9a2087effd0487c3e1393c0b058107c", "filename": "src/librustc/infer/glb.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4bcf013438711aaeaa00ed0424a05e13d129b74b/src%2Flibrustc%2Finfer%2Fglb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bcf013438711aaeaa00ed0424a05e13d129b74b/src%2Flibrustc%2Finfer%2Fglb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fglb.rs?ref=4bcf013438711aaeaa00ed0424a05e13d129b74b", "patch": "@@ -23,12 +23,16 @@ pub struct Glb<'combine, 'infcx: 'combine, 'gcx: 'infcx+'tcx, 'tcx: 'infcx> {\n }\n \n impl<'combine, 'infcx, 'gcx, 'tcx> Glb<'combine, 'infcx, 'gcx, 'tcx> {\n-    pub fn new(fields: &'combine mut CombineFields<'infcx, 'gcx, 'tcx>, a_is_expected: bool) -> Glb<'combine, 'infcx, 'gcx, 'tcx> {\n+    pub fn new(fields: &'combine mut CombineFields<'infcx, 'gcx, 'tcx>, a_is_expected: bool)\n+        -> Glb<'combine, 'infcx, 'gcx, 'tcx>\n+    {\n         Glb { fields: fields, a_is_expected: a_is_expected }\n     }\n }\n \n-impl<'combine, 'infcx, 'gcx, 'tcx> TypeRelation<'infcx, 'gcx, 'tcx> for Glb<'combine, 'infcx, 'gcx, 'tcx> {\n+impl<'combine, 'infcx, 'gcx, 'tcx> TypeRelation<'infcx, 'gcx, 'tcx>\n+    for Glb<'combine, 'infcx, 'gcx, 'tcx>\n+{\n     fn tag(&self) -> &'static str { \"Glb\" }\n \n     fn tcx(&self) -> TyCtxt<'infcx, 'gcx, 'tcx> { self.fields.tcx() }\n@@ -71,7 +75,9 @@ impl<'combine, 'infcx, 'gcx, 'tcx> TypeRelation<'infcx, 'gcx, 'tcx> for Glb<'com\n     }\n }\n \n-impl<'combine, 'infcx, 'gcx, 'tcx> LatticeDir<'infcx, 'gcx, 'tcx> for Glb<'combine, 'infcx, 'gcx, 'tcx> {\n+impl<'combine, 'infcx, 'gcx, 'tcx> LatticeDir<'infcx, 'gcx, 'tcx>\n+    for Glb<'combine, 'infcx, 'gcx, 'tcx>\n+{\n     fn infcx(&self) -> &'infcx InferCtxt<'infcx, 'gcx, 'tcx> {\n         self.fields.infcx\n     }"}, {"sha": "ad1b32ffaeb320ac18159277ee07d34df3a016c7", "filename": "src/librustc/infer/lub.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4bcf013438711aaeaa00ed0424a05e13d129b74b/src%2Flibrustc%2Finfer%2Flub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bcf013438711aaeaa00ed0424a05e13d129b74b/src%2Flibrustc%2Finfer%2Flub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Flub.rs?ref=4bcf013438711aaeaa00ed0424a05e13d129b74b", "patch": "@@ -23,12 +23,16 @@ pub struct Lub<'combine, 'infcx: 'combine, 'gcx: 'infcx+'tcx, 'tcx: 'infcx> {\n }\n \n impl<'combine, 'infcx, 'gcx, 'tcx> Lub<'combine, 'infcx, 'gcx, 'tcx> {\n-    pub fn new(fields: &'combine mut CombineFields<'infcx, 'gcx, 'tcx>, a_is_expected: bool) -> Lub<'combine, 'infcx, 'gcx, 'tcx> {\n+    pub fn new(fields: &'combine mut CombineFields<'infcx, 'gcx, 'tcx>, a_is_expected: bool)\n+        -> Lub<'combine, 'infcx, 'gcx, 'tcx>\n+    {\n         Lub { fields: fields, a_is_expected: a_is_expected }\n     }\n }\n \n-impl<'combine, 'infcx, 'gcx, 'tcx> TypeRelation<'infcx, 'gcx, 'tcx> for Lub<'combine, 'infcx, 'gcx, 'tcx> {\n+impl<'combine, 'infcx, 'gcx, 'tcx> TypeRelation<'infcx, 'gcx, 'tcx>\n+    for Lub<'combine, 'infcx, 'gcx, 'tcx>\n+{\n     fn tag(&self) -> &'static str { \"Lub\" }\n \n     fn tcx(&self) -> TyCtxt<'infcx, 'gcx, 'tcx> { self.fields.tcx() }\n@@ -71,7 +75,9 @@ impl<'combine, 'infcx, 'gcx, 'tcx> TypeRelation<'infcx, 'gcx, 'tcx> for Lub<'com\n     }\n }\n \n-impl<'combine, 'infcx, 'gcx, 'tcx> LatticeDir<'infcx, 'gcx, 'tcx> for Lub<'combine, 'infcx, 'gcx, 'tcx> {\n+impl<'combine, 'infcx, 'gcx, 'tcx> LatticeDir<'infcx, 'gcx, 'tcx>\n+    for Lub<'combine, 'infcx, 'gcx, 'tcx>\n+{\n     fn infcx(&self) -> &'infcx InferCtxt<'infcx, 'gcx, 'tcx> {\n         self.fields.infcx\n     }"}, {"sha": "2f7f5254727db15d1f245be227498b046bc307fc", "filename": "src/librustc/infer/sub.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4bcf013438711aaeaa00ed0424a05e13d129b74b/src%2Flibrustc%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bcf013438711aaeaa00ed0424a05e13d129b74b/src%2Flibrustc%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fsub.rs?ref=4bcf013438711aaeaa00ed0424a05e13d129b74b", "patch": "@@ -24,7 +24,9 @@ pub struct Sub<'combine, 'infcx: 'combine, 'gcx: 'infcx+'tcx, 'tcx: 'infcx> {\n }\n \n impl<'combine, 'infcx, 'gcx, 'tcx> Sub<'combine, 'infcx, 'gcx, 'tcx> {\n-    pub fn new(f: &'combine mut CombineFields<'infcx, 'gcx, 'tcx>, a_is_expected: bool) -> Sub<'combine, 'infcx, 'gcx, 'tcx> {\n+    pub fn new(f: &'combine mut CombineFields<'infcx, 'gcx, 'tcx>, a_is_expected: bool)\n+        -> Sub<'combine, 'infcx, 'gcx, 'tcx>\n+    {\n         Sub { fields: f, a_is_expected: a_is_expected }\n     }\n \n@@ -36,7 +38,9 @@ impl<'combine, 'infcx, 'gcx, 'tcx> Sub<'combine, 'infcx, 'gcx, 'tcx> {\n     }\n }\n \n-impl<'combine, 'infcx, 'gcx, 'tcx> TypeRelation<'infcx, 'gcx, 'tcx> for Sub<'combine, 'infcx, 'gcx, 'tcx> {\n+impl<'combine, 'infcx, 'gcx, 'tcx> TypeRelation<'infcx, 'gcx, 'tcx>\n+    for Sub<'combine, 'infcx, 'gcx, 'tcx>\n+{\n     fn tag(&self) -> &'static str { \"Sub\" }\n     fn tcx(&self) -> TyCtxt<'infcx, 'gcx, 'tcx> { self.fields.infcx.tcx }\n     fn a_is_expected(&self) -> bool { self.a_is_expected }"}]}