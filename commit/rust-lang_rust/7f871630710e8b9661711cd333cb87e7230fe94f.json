{"sha": "7f871630710e8b9661711cd333cb87e7230fe94f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmODcxNjMwNzEwZThiOTY2MTcxMWNkMzMzY2I4N2U3MjMwZmU5NGY=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-19T15:00:46Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-21T03:03:35Z"}, "message": "Simplify funclets creation.", "tree": {"sha": "4b19e2e3da387b3865bf4de770007348aa5d0fb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b19e2e3da387b3865bf4de770007348aa5d0fb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f871630710e8b9661711cd333cb87e7230fe94f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f871630710e8b9661711cd333cb87e7230fe94f", "html_url": "https://github.com/rust-lang/rust/commit/7f871630710e8b9661711cd333cb87e7230fe94f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f871630710e8b9661711cd333cb87e7230fe94f/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5301d380b66066f71b3eabe1408f88cda348f084", "url": "https://api.github.com/repos/rust-lang/rust/commits/5301d380b66066f71b3eabe1408f88cda348f084", "html_url": "https://github.com/rust-lang/rust/commit/5301d380b66066f71b3eabe1408f88cda348f084"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "2cb181340405e34b1c1828089981b8667c93f5db", "filename": "src/librustc_trans/mir/mod.rs", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7f871630710e8b9661711cd333cb87e7230fe94f/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f871630710e8b9661711cd333cb87e7230fe94f/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fmod.rs?ref=7f871630710e8b9661711cd333cb87e7230fe94f", "patch": "@@ -300,25 +300,23 @@ pub fn trans_mir<'a, 'tcx: 'a>(\n     // emitting should be enabled.\n     debuginfo::start_emitting_source_locations(&mircx.debug_context);\n \n-    let mut funclets: IndexVec<mir::BasicBlock, Option<Funclet>> =\n-        IndexVec::from_elem(None, mir.basic_blocks());\n-\n     // If false, all funclets should be None (which is the default)\n-    if base::wants_msvc_seh(fcx.ccx.sess()) {\n-        for (bb, cleanup_kind) in mircx.cleanup_kinds.iter_enumerated() {\n-            let bcx = mircx.build_block(bb);\n-            match *cleanup_kind {\n-                CleanupKind::Internal { .. } => {\n-                    bcx.set_personality_fn(fcx.eh_personality());\n-                }\n-                CleanupKind::Funclet => {\n-                    bcx.set_personality_fn(fcx.eh_personality());\n-                    funclets[bb] = Funclet::msvc(bcx.cleanup_pad(None, &[]));\n-                }\n-                _ => {}\n+    let funclets: IndexVec<mir::BasicBlock, Option<Funclet>> =\n+    mircx.cleanup_kinds.iter_enumerated().map(|(bb, cleanup_kind)| {\n+        let bcx = mircx.build_block(bb);\n+        match *cleanup_kind {\n+            _ if !base::wants_msvc_seh(fcx.ccx.sess()) => None,\n+            CleanupKind::Internal { .. } => {\n+                bcx.set_personality_fn(fcx.eh_personality());\n+                None\n             }\n+            CleanupKind::Funclet => {\n+                bcx.set_personality_fn(fcx.eh_personality());\n+                Funclet::msvc(bcx.cleanup_pad(None, &[]))\n+            }\n+            _ => None\n         }\n-    }\n+    }).collect();\n \n     let rpo = traversal::reverse_postorder(&mir);\n     let mut visited = BitVector::new(mir.basic_blocks().len());"}]}