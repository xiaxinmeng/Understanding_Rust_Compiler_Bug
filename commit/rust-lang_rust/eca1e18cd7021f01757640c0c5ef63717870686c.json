{"sha": "eca1e18cd7021f01757640c0c5ef63717870686c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYTFlMThjZDcwMjFmMDE3NTc2NDBjMGM1ZWY2MzcxNzg3MDY4NmM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-19T00:11:47Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-19T00:11:47Z"}, "message": "Add stability test for sort_by_cached_key", "tree": {"sha": "fac87195e2b2d01f1719b6301f142ec0e5efd77c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fac87195e2b2d01f1719b6301f142ec0e5efd77c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eca1e18cd7021f01757640c0c5ef63717870686c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eca1e18cd7021f01757640c0c5ef63717870686c", "html_url": "https://github.com/rust-lang/rust/commit/eca1e18cd7021f01757640c0c5ef63717870686c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eca1e18cd7021f01757640c0c5ef63717870686c/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "785e3c38fe6c49e39aec145c81e463ceb60d179e", "url": "https://api.github.com/repos/rust-lang/rust/commits/785e3c38fe6c49e39aec145c81e463ceb60d179e", "html_url": "https://github.com/rust-lang/rust/commit/785e3c38fe6c49e39aec145c81e463ceb60d179e"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "66c7dd75c874059c936af58ccf46b578e07d17f2", "filename": "src/liballoc/tests/slice.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/eca1e18cd7021f01757640c0c5ef63717870686c/src%2Fliballoc%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eca1e18cd7021f01757640c0c5ef63717870686c/src%2Fliballoc%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fslice.rs?ref=eca1e18cd7021f01757640c0c5ef63717870686c", "patch": "@@ -485,24 +485,29 @@ fn test_sort_stability() {\n             // the second item represents which occurrence of that\n             // number this element is, i.e. the second elements\n             // will occur in sorted order.\n-            let mut v: Vec<_> = (0..len)\n+            let mut orig: Vec<_> = (0..len)\n                 .map(|_| {\n                     let n = thread_rng().gen::<usize>() % 10;\n                     counts[n] += 1;\n                     (n, counts[n])\n                 })\n                 .collect();\n \n-            // only sort on the first element, so an unstable sort\n+            let mut v = orig.clone();\n+            // Only sort on the first element, so an unstable sort\n             // may mix up the counts.\n             v.sort_by(|&(a, _), &(b, _)| a.cmp(&b));\n \n-            // this comparison includes the count (the second item\n+            // This comparison includes the count (the second item\n             // of the tuple), so elements with equal first items\n             // will need to be ordered with increasing\n             // counts... i.e. exactly asserting that this sort is\n             // stable.\n             assert!(v.windows(2).all(|w| w[0] <= w[1]));\n+\n+            let mut v = orig.clone();\n+            v.sort_by_cached_key(|&(x, _)| x);\n+            assert!(v.windows(2).all(|w| w[0] <= w[1]));\n         }\n     }\n }"}]}