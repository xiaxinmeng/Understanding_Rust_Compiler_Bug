{"sha": "0da75bcc9cdb3e9986fcf870e52a2303e5a29b7e", "node_id": "C_kwDOAAsO6NoAKDBkYTc1YmNjOWNkYjNlOTk4NmZjZjg3MGU1MmEyMzAzZTVhMjliN2U", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-30T22:33:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-30T22:33:25Z"}, "message": "Rollup merge of #90401 - mkroening:hermit-condvar, r=joshtriplett\n\nhermit: Implement Condvar::wait_timeout\n\nThis implements `Condvar::wait_timeout` for the `hermit` target.\n\nSee\n* https://github.com/hermitcore/rust/pull/2\n* https://github.com/hermitcore/rust/pull/5\n\nCC: `@stlankes`", "tree": {"sha": "f6a2763ba66a56542591e56564cdf0db2f0f87f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6a2763ba66a56542591e56564cdf0db2f0f87f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0da75bcc9cdb3e9986fcf870e52a2303e5a29b7e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhfcg1CRBK7hj4Ov3rIwAAbsUIAKzNjje5XnoWbksDWQvtamBK\nTzYOFfIEZZKss8hOdxjVzkYe8vwJbgBg+8jaWQI6/TgUxGckEn2A07rhx3/d3+bF\nURNKgGIrkEBjveTL6dtG9AhqWfpPaBlFD6VfLRd2JFU2lMMwsbsocuSbhxotGchb\nMDZBoKvJVYyQQXFqsK0cB2kxPsrukYmjkhM4W80ABhjMED0qrPmYVytVjy5kGKcp\n7nz2sFwAgISbidzg+uvzzgmz8Txue6e6Zk1/o2L5Ds3eijIxjERmfRrJNf2bmiLe\nOCtNCZ2NjkNm0ou2PHuGXdyFUF/2rNOUkwv+kvvkyZ8T7Q2aalfyyeb858rO++c=\n=Quxy\n-----END PGP SIGNATURE-----\n", "payload": "tree f6a2763ba66a56542591e56564cdf0db2f0f87f6\nparent 1adb6643928dd3bacdd079f87f7f4cdacf510823\nparent 42cab439f564812be0c3957edcc57140aac5a4c7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635633205 +0200\ncommitter GitHub <noreply@github.com> 1635633205 +0200\n\nRollup merge of #90401 - mkroening:hermit-condvar, r=joshtriplett\n\nhermit: Implement Condvar::wait_timeout\n\nThis implements `Condvar::wait_timeout` for the `hermit` target.\n\nSee\n* https://github.com/hermitcore/rust/pull/2\n* https://github.com/hermitcore/rust/pull/5\n\nCC: `@stlankes`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0da75bcc9cdb3e9986fcf870e52a2303e5a29b7e", "html_url": "https://github.com/rust-lang/rust/commit/0da75bcc9cdb3e9986fcf870e52a2303e5a29b7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0da75bcc9cdb3e9986fcf870e52a2303e5a29b7e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1adb6643928dd3bacdd079f87f7f4cdacf510823", "url": "https://api.github.com/repos/rust-lang/rust/commits/1adb6643928dd3bacdd079f87f7f4cdacf510823", "html_url": "https://github.com/rust-lang/rust/commit/1adb6643928dd3bacdd079f87f7f4cdacf510823"}, {"sha": "42cab439f564812be0c3957edcc57140aac5a4c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/42cab439f564812be0c3957edcc57140aac5a4c7", "html_url": "https://github.com/rust-lang/rust/commit/42cab439f564812be0c3957edcc57140aac5a4c7"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "b62f21a9dac02d705989c77295020fe630da2cc7", "filename": "library/std/src/sys/hermit/condvar.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0da75bcc9cdb3e9986fcf870e52a2303e5a29b7e/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0da75bcc9cdb3e9986fcf870e52a2303e5a29b7e/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fcondvar.rs?ref=0da75bcc9cdb3e9986fcf870e52a2303e5a29b7e", "patch": "@@ -55,8 +55,20 @@ impl Condvar {\n         mutex.lock();\n     }\n \n-    pub unsafe fn wait_timeout(&self, _mutex: &Mutex, _dur: Duration) -> bool {\n-        panic!(\"wait_timeout not supported on hermit\");\n+    pub unsafe fn wait_timeout(&self, mutex: &Mutex, dur: Duration) -> bool {\n+        self.counter.fetch_add(1, SeqCst);\n+        mutex.unlock();\n+        let millis = dur.as_millis().min(u32::MAX as u128) as u32;\n+\n+        let res = if millis > 0 {\n+            abi::sem_timedwait(self.sem1, millis)\n+        } else {\n+            abi::sem_trywait(self.sem1)\n+        };\n+\n+        abi::sem_post(self.sem2);\n+        mutex.lock();\n+        res == 0\n     }\n \n     pub unsafe fn destroy(&self) {"}]}