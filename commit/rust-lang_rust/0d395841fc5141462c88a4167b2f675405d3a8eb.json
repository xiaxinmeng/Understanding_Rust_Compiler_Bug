{"sha": "0d395841fc5141462c88a4167b2f675405d3a8eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkMzk1ODQxZmM1MTQxNDYyYzg4YTQxNjdiMmY2NzU0MDVkM2E4ZWI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2016-06-23T01:29:16Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-01-03T15:05:20Z"}, "message": "Detect double reference when applying binary op\n\n```rust\nlet vr = v.iter().filter(|x| {\n    x % 2 == 0\n});\n```\n\nwill now yield the following compiler output:\n\n```bash\nERROR binary operation `%` cannot be applied to type `&&_`\nNOTE this is a reference of a reference to a type that `%` can be applied to,\nyou need to dereference this variable once for this operation to work\nNOTE an implementation of `std::ops::Rem` might be missing for `&&_`\n```\n\nThe first NOTE is new.\n\nBug #33877", "tree": {"sha": "5727fbea89c31e0ed9681c89f3e4fd442e220ab7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5727fbea89c31e0ed9681c89f3e4fd442e220ab7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d395841fc5141462c88a4167b2f675405d3a8eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d395841fc5141462c88a4167b2f675405d3a8eb", "html_url": "https://github.com/rust-lang/rust/commit/0d395841fc5141462c88a4167b2f675405d3a8eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d395841fc5141462c88a4167b2f675405d3a8eb/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f62c2920077eb5cb81323142fc5dbe6ae8813c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f62c2920077eb5cb81323142fc5dbe6ae8813c0", "html_url": "https://github.com/rust-lang/rust/commit/8f62c2920077eb5cb81323142fc5dbe6ae8813c0"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "4202f65c44d4f1eba7b7bdd30b1522e410c2ad2b", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0d395841fc5141462c88a4167b2f675405d3a8eb/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d395841fc5141462c88a4167b2f675405d3a8eb/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=0d395841fc5141462c88a4167b2f675405d3a8eb", "patch": "@@ -12,7 +12,7 @@\n \n use super::FnCtxt;\n use hir::def_id::DefId;\n-use rustc::ty::{Ty, TypeFoldable, PreferMutLvalue};\n+use rustc::ty::{Ty, TypeFoldable, PreferMutLvalue, TypeVariants};\n use rustc::infer::type_variable::TypeVariableOrigin;\n use syntax::ast;\n use syntax::symbol::Symbol;\n@@ -204,6 +204,21 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                             \"binary operation `{}` cannot be applied to type `{}`\",\n                             op.node.as_str(),\n                             lhs_ty);\n+\n+                        if let TypeVariants::TyRef(_, ref ty_mut) = lhs_ty.sty {\n+                            if self.lookup_op_method(expr, ty_mut.ty, vec![rhs_ty_var],\n+                                    token::intern(name), trait_def_id,\n+                                    lhs_expr).is_ok() {\n+                                err.span_note(\n+                                    lhs_expr.span,\n+                                    &format!(\n+                                        \"this is a reference of type that `{}` can be applied to, \\\n+                                        you need to dereference this variable once for this \\\n+                                        operation to work\",\n+                                    op.node.as_str()));\n+                            }\n+                        }\n+\n                         let missing_trait = match op.node {\n                             hir::BiAdd    => Some(\"std::ops::Add\"),\n                             hir::BiSub    => Some(\"std::ops::Sub\"),"}, {"sha": "5cc8e0f9988fcc3ab8f9dd2430dc2221d460ce22", "filename": "src/test/compile-fail/binary-op-on-double-ref.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0d395841fc5141462c88a4167b2f675405d3a8eb/src%2Ftest%2Fcompile-fail%2Fbinary-op-on-double-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d395841fc5141462c88a4167b2f675405d3a8eb/src%2Ftest%2Fcompile-fail%2Fbinary-op-on-double-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinary-op-on-double-ref.rs?ref=0d395841fc5141462c88a4167b2f675405d3a8eb", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2012-2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let v = vec![1, 2, 3, 4, 5, 6, 7, 8, 9];\n+    let vr = v.iter().filter(|x| {\n+        x % 2 == 0\n+        //~^ ERROR binary operation `%` cannot be applied to type `&&_`\n+        //~| NOTE this is a reference of type that `%` can be applied to\n+        //~| NOTE an implementation of `std::ops::Rem` might be missing for `&&_`\n+    });\n+    println!(\"{:?}\", vr);\n+}"}, {"sha": "d79ab6b805c8248d75f3b8b57544d6330c3208a1", "filename": "src/test/compile-fail/str-concat-on-double-ref.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0d395841fc5141462c88a4167b2f675405d3a8eb/src%2Ftest%2Fcompile-fail%2Fstr-concat-on-double-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d395841fc5141462c88a4167b2f675405d3a8eb/src%2Ftest%2Fcompile-fail%2Fstr-concat-on-double-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstr-concat-on-double-ref.rs?ref=0d395841fc5141462c88a4167b2f675405d3a8eb", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2012-2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let a: &String = &\"1\".to_owned();\n+    let b: &str = &\"2\";\n+    let c = a + b;\n+    //~^ ERROR binary operation `+` cannot be applied to type `&std::string::String`\n+    //~| NOTE this is a reference of type that `+` can be applied to\n+    //~| NOTE an implementation of `std::ops::Add` might be missing for `&std::string::String`\n+    println!(\"{:?}\", c);\n+}"}]}