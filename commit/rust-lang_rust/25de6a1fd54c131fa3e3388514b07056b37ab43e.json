{"sha": "25de6a1fd54c131fa3e3388514b07056b37ab43e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ZGU2YTFmZDU0YzEzMWZhM2UzMzg4NTE0YjA3MDU2YjM3YWI0M2U=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2016-03-12T21:36:45Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2016-03-12T21:36:45Z"}, "message": "Merge pull request #760 from mcarton/small-fix\n\nSmall fix \u00d7 2", "tree": {"sha": "c97edaf182bea7ed8505259929436e72e604cc87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c97edaf182bea7ed8505259929436e72e604cc87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25de6a1fd54c131fa3e3388514b07056b37ab43e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25de6a1fd54c131fa3e3388514b07056b37ab43e", "html_url": "https://github.com/rust-lang/rust/commit/25de6a1fd54c131fa3e3388514b07056b37ab43e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25de6a1fd54c131fa3e3388514b07056b37ab43e/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eba41430ce04ef64689acd1b991610076a3305db", "url": "https://api.github.com/repos/rust-lang/rust/commits/eba41430ce04ef64689acd1b991610076a3305db", "html_url": "https://github.com/rust-lang/rust/commit/eba41430ce04ef64689acd1b991610076a3305db"}, {"sha": "0774b203f4a9a46d91ea4edfab89e7552382c2c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0774b203f4a9a46d91ea4edfab89e7552382c2c6", "html_url": "https://github.com/rust-lang/rust/commit/0774b203f4a9a46d91ea4edfab89e7552382c2c6"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "e61c77adf24534ff28d5c73a4fafb5eb104c4ae3", "filename": "src/len_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25de6a1fd54c131fa3e3388514b07056b37ab43e/src%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25de6a1fd54c131fa3e3388514b07056b37ab43e/src%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flen_zero.rs?ref=25de6a1fd54c131fa3e3388514b07056b37ab43e", "patch": "@@ -198,7 +198,7 @@ fn has_is_empty(cx: &LateContext, expr: &Expr) -> bool {\n         }\n         ty::TyProjection(_) => ty.ty_to_def_id().map_or(false, |id| has_is_empty_impl(cx, &id)),\n         ty::TyEnum(ref id, _) | ty::TyStruct(ref id, _) => has_is_empty_impl(cx, &id.did),\n-        ty::TyArray(..) => true,\n+        ty::TyArray(..) | ty::TyStr => true,\n         _ => false,\n     }\n }"}, {"sha": "7dbcf2a5b30f0cfce336444d8968bb3cc72e02a6", "filename": "src/panic.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/25de6a1fd54c131fa3e3388514b07056b37ab43e/src%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25de6a1fd54c131fa3e3388514b07056b37ab43e/src%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpanic.rs?ref=25de6a1fd54c131fa3e3388514b07056b37ab43e", "patch": "@@ -37,7 +37,8 @@ impl LateLintPass for PanicPass {\n             match_path(path, &BEGIN_UNWIND),\n             let ExprLit(ref lit) = params[0].node,\n             let LitKind::Str(ref string, _) = lit.node,\n-            string.contains('{'),\n+            let Some(par) = string.find('{'),\n+            string[par..].contains('}'),\n             let Some(sp) = cx.sess().codemap()\n                              .with_expn_info(expr.span.expn_id,\n                                              |info| info.map(|i| i.call_site))"}, {"sha": "ee2e2d7206f8d6c0b1b117725f17d9b2a6eeaf84", "filename": "src/utils/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/25de6a1fd54c131fa3e3388514b07056b37ab43e/src%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25de6a1fd54c131fa3e3388514b07056b37ab43e/src%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils%2Fmod.rs?ref=25de6a1fd54c131fa3e3388514b07056b37ab43e", "patch": "@@ -383,14 +383,14 @@ fn trim_multiline_inner(s: Cow<str>, ignore_first: bool, ch: char) -> Cow<str> {\n     let x = s.lines()\n              .skip(ignore_first as usize)\n              .filter_map(|l| {\n-                 if l.len() > 0 {\n+                 if l.is_empty() {\n+                     None\n+                 } else {\n                      // ignore empty lines\n                      Some(l.char_indices()\n                            .find(|&(_, x)| x != ch)\n                            .unwrap_or((l.len(), ch))\n                            .0)\n-                 } else {\n-                     None\n                  }\n              })\n              .min()\n@@ -399,7 +399,7 @@ fn trim_multiline_inner(s: Cow<str>, ignore_first: bool, ch: char) -> Cow<str> {\n         Cow::Owned(s.lines()\n                     .enumerate()\n                     .map(|(i, l)| {\n-                        if (ignore_first && i == 0) || l.len() == 0 {\n+                        if (ignore_first && i == 0) || l.is_empty() {\n                             l\n                         } else {\n                             l.split_at(x).1"}, {"sha": "5168f80b8560fd95674a82e94279be011f6dd9fc", "filename": "tests/compile-fail/len_zero.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/25de6a1fd54c131fa3e3388514b07056b37ab43e/tests%2Fcompile-fail%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25de6a1fd54c131fa3e3388514b07056b37ab43e/tests%2Fcompile-fail%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Flen_zero.rs?ref=25de6a1fd54c131fa3e3388514b07056b37ab43e", "patch": "@@ -76,6 +76,12 @@ fn main() {\n         println!(\"This should not happen!\");\n     }\n \n+    if \"\".len() == 0 {\n+        //~^ERROR length comparison to zero\n+        //~|HELP consider using `is_empty`\n+        //~|SUGGESTION \"\".is_empty()\n+    }\n+\n     let y = One;\n     if y.len()  == 0 { //no error because One does not have .is_empty()\n         println!(\"This should not happen either!\");"}, {"sha": "38fe5aa2c0f39702b97ebdea2e211f7ec8811e34", "filename": "tests/compile-fail/panic.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/25de6a1fd54c131fa3e3388514b07056b37ab43e/tests%2Fcompile-fail%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25de6a1fd54c131fa3e3388514b07056b37ab43e/tests%2Fcompile-fail%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fpanic.rs?ref=25de6a1fd54c131fa3e3388514b07056b37ab43e", "patch": "@@ -4,19 +4,33 @@\n #[deny(panic_params)]\n \n fn missing() {\n-    panic!(\"{}\"); //~ERROR: You probably are missing some parameter\n+    if true {\n+        panic!(\"{}\"); //~ERROR: You probably are missing some parameter\n+    } else {\n+        panic!(\"{:?}\"); //~ERROR: You probably are missing some parameter\n+    }\n }\n \n-fn ok_sigle() {\n+fn ok_single() {\n     panic!(\"foo bar\");\n }\n \n fn ok_multiple() {\n     panic!(\"{}\", \"This is {ok}\");\n }\n \n+fn ok_bracket() {\n+    // the match is just here because of #759, it serves no other purpose for the lint\n+    match 42 {\n+        1337 => panic!(\"{so is this\"),\n+        666 => panic!(\"so is this}\"),\n+        _ => panic!(\"}so is that{\"),\n+    }\n+}\n+\n fn main() {\n     missing();\n-    ok_sigle();\n+    ok_single();\n     ok_multiple();\n+    ok_bracket();\n }"}]}