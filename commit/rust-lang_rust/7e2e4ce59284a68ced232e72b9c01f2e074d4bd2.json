{"sha": "7e2e4ce59284a68ced232e72b9c01f2e074d4bd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlMmU0Y2U1OTI4NGE2OGNlZDIzMmU3MmI5YzAxZjJlMDc0ZDRiZDI=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-10-27T20:31:41Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-10-27T20:37:31Z"}, "message": "return &mut T from the arenas, not &T\n\nThe arenas write the value to memory and then return a non-aliasing\nreference to it. The returned reference can be mutable and can be\ncoerced to an immutable one.\n\n[breaking-change]", "tree": {"sha": "6364dbf65e4215d69ac049a6b744b972168c4c90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6364dbf65e4215d69ac049a6b744b972168c4c90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e2e4ce59284a68ced232e72b9c01f2e074d4bd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e2e4ce59284a68ced232e72b9c01f2e074d4bd2", "html_url": "https://github.com/rust-lang/rust/commit/7e2e4ce59284a68ced232e72b9c01f2e074d4bd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e2e4ce59284a68ced232e72b9c01f2e074d4bd2/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e05c3b7799b45b78baf49f05763865be838f5b43", "url": "https://api.github.com/repos/rust-lang/rust/commits/e05c3b7799b45b78baf49f05763865be838f5b43", "html_url": "https://github.com/rust-lang/rust/commit/e05c3b7799b45b78baf49f05763865be838f5b43"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "5682bb76d55605ffe7a8bf12b3fda4a81d79abaf", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7e2e4ce59284a68ced232e72b9c01f2e074d4bd2/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e2e4ce59284a68ced232e72b9c01f2e074d4bd2/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=7e2e4ce59284a68ced232e72b9c01f2e074d4bd2", "patch": "@@ -208,13 +208,13 @@ impl Arena {\n     }\n \n     #[inline]\n-    fn alloc_copy<T>(&self, op: || -> T) -> &T {\n+    fn alloc_copy<T>(&self, op: || -> T) -> &mut T {\n         unsafe {\n             let ptr = self.alloc_copy_inner(mem::size_of::<T>(),\n                                             mem::min_align_of::<T>());\n             let ptr = ptr as *mut T;\n             ptr::write(&mut (*ptr), op());\n-            return &*ptr;\n+            return &mut *ptr;\n         }\n     }\n \n@@ -262,7 +262,7 @@ impl Arena {\n     }\n \n     #[inline]\n-    fn alloc_noncopy<T>(&self, op: || -> T) -> &T {\n+    fn alloc_noncopy<T>(&self, op: || -> T) -> &mut T {\n         unsafe {\n             let tydesc = get_tydesc::<T>();\n             let (ty_ptr, ptr) =\n@@ -279,14 +279,14 @@ impl Arena {\n             // the object is there.\n             *ty_ptr = bitpack_tydesc_ptr(tydesc, true);\n \n-            return &*ptr;\n+            return &mut *ptr;\n         }\n     }\n \n     /// Allocates a new item in the arena, using `op` to initialize the value,\n     /// and returns a reference to it.\n     #[inline]\n-    pub fn alloc<T>(&self, op: || -> T) -> &T {\n+    pub fn alloc<T>(&self, op: || -> T) -> &mut T {\n         unsafe {\n             if intrinsics::needs_drop::<T>() {\n                 self.alloc_noncopy(op)\n@@ -459,12 +459,12 @@ impl<T> TypedArena<T> {\n \n     /// Allocates an object in the `TypedArena`, returning a reference to it.\n     #[inline]\n-    pub fn alloc(&self, object: T) -> &T {\n+    pub fn alloc(&self, object: T) -> &mut T {\n         if self.ptr == self.end {\n             self.grow()\n         }\n \n-        let ptr: &T = unsafe {\n+        let ptr: &mut T = unsafe {\n             let ptr: &mut T = mem::transmute(self.ptr);\n             ptr::write(ptr, object);\n             self.ptr.set(self.ptr.get().offset(1));"}, {"sha": "1b64d90427bd08be618b90ac6bbb9e63bd3f9dd9", "filename": "src/librustc/middle/typeck/variance.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e2e4ce59284a68ced232e72b9c01f2e074d4bd2/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fvariance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e2e4ce59284a68ced232e72b9c01f2e074d4bd2/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fvariance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fvariance.rs?ref=7e2e4ce59284a68ced232e72b9c01f2e074d4bd2", "patch": "@@ -715,7 +715,7 @@ impl<'a, 'tcx> ConstraintContext<'a, 'tcx> {\n             }\n \n             _ => {\n-                self.terms_cx.arena.alloc(|| TransformTerm(v1, v2))\n+                &*self.terms_cx.arena.alloc(|| TransformTerm(v1, v2))\n             }\n         }\n     }"}]}