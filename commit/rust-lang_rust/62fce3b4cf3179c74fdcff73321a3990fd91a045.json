{"sha": "62fce3b4cf3179c74fdcff73321a3990fd91a045", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZmNlM2I0Y2YzMTc5Yzc0ZmRjZmY3MzMyMWEzOTkwZmQ5MWEwNDU=", "commit": {"author": {"name": "Marco A L Barbosa", "email": "malbarbo@gmail.com", "date": "2017-11-09T20:49:29Z"}, "committer": {"name": "Marco A L Barbosa", "email": "malbarbo@gmail.com", "date": "2017-11-09T21:06:17Z"}, "message": "Use getrandom syscall for all Linux and Android targets.", "tree": {"sha": "721cff9063c6a7d5fd20b154e573e39d2ed52ebc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/721cff9063c6a7d5fd20b154e573e39d2ed52ebc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62fce3b4cf3179c74fdcff73321a3990fd91a045", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62fce3b4cf3179c74fdcff73321a3990fd91a045", "html_url": "https://github.com/rust-lang/rust/commit/62fce3b4cf3179c74fdcff73321a3990fd91a045", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62fce3b4cf3179c74fdcff73321a3990fd91a045/comments", "author": {"login": "malbarbo", "id": 1678126, "node_id": "MDQ6VXNlcjE2NzgxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1678126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malbarbo", "html_url": "https://github.com/malbarbo", "followers_url": "https://api.github.com/users/malbarbo/followers", "following_url": "https://api.github.com/users/malbarbo/following{/other_user}", "gists_url": "https://api.github.com/users/malbarbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/malbarbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malbarbo/subscriptions", "organizations_url": "https://api.github.com/users/malbarbo/orgs", "repos_url": "https://api.github.com/users/malbarbo/repos", "events_url": "https://api.github.com/users/malbarbo/events{/privacy}", "received_events_url": "https://api.github.com/users/malbarbo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "malbarbo", "id": 1678126, "node_id": "MDQ6VXNlcjE2NzgxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1678126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malbarbo", "html_url": "https://github.com/malbarbo", "followers_url": "https://api.github.com/users/malbarbo/followers", "following_url": "https://api.github.com/users/malbarbo/following{/other_user}", "gists_url": "https://api.github.com/users/malbarbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/malbarbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malbarbo/subscriptions", "organizations_url": "https://api.github.com/users/malbarbo/orgs", "repos_url": "https://api.github.com/users/malbarbo/repos", "events_url": "https://api.github.com/users/malbarbo/events{/privacy}", "received_events_url": "https://api.github.com/users/malbarbo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1ea23e2cc72cafad1dc25a06c09ec2de8e323eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1ea23e2cc72cafad1dc25a06c09ec2de8e323eb", "html_url": "https://github.com/rust-lang/rust/commit/f1ea23e2cc72cafad1dc25a06c09ec2de8e323eb"}], "stats": {"total": 57, "additions": 6, "deletions": 51}, "files": [{"sha": "ecc3e010646ee6cde2cd0a4e70496507281400a3", "filename": "src/liblibc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc?ref=62fce3b4cf3179c74fdcff73321a3990fd91a045", "patch": "@@ -1 +1 @@\n-Subproject commit 68f9959e53da6c70bed7119cd09342859d431266\n+Subproject commit ecc3e010646ee6cde2cd0a4e70496507281400a3"}, {"sha": "caa189457655230e1a47094fe73b054a308cdf2f", "filename": "src/libstd/sys/unix/rand.rs", "status": "modified", "additions": 5, "deletions": 50, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/62fce3b4cf3179c74fdcff73321a3990fd91a045/src%2Flibstd%2Fsys%2Funix%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62fce3b4cf3179c74fdcff73321a3990fd91a045/src%2Flibstd%2Fsys%2Funix%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Frand.rs?ref=62fce3b4cf3179c74fdcff73321a3990fd91a045", "patch": "@@ -32,45 +32,14 @@ mod imp {\n     use libc;\n     use sys::os::errno;\n \n-    #[cfg(all(target_os = \"linux\",\n-              any(target_arch = \"x86_64\",\n-                  target_arch = \"x86\",\n-                  target_arch = \"arm\",\n-                  target_arch = \"aarch64\",\n-                  target_arch = \"powerpc\",\n-                  target_arch = \"powerpc64\",\n-                  target_arch = \"s390x\")))]\n+    #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n     fn getrandom(buf: &mut [u8]) -> libc::c_long {\n-        #[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"32\"))]\n-        const NR_GETRANDOM: libc::c_long = 0x40000000 + 318;\n-        #[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n-        const NR_GETRANDOM: libc::c_long = 318;\n-        #[cfg(target_arch = \"x86\")]\n-        const NR_GETRANDOM: libc::c_long = 355;\n-        #[cfg(target_arch = \"arm\")]\n-        const NR_GETRANDOM: libc::c_long = 384;\n-        #[cfg(target_arch = \"s390x\")]\n-        const NR_GETRANDOM: libc::c_long = 349;\n-        #[cfg(any(target_arch = \"powerpc\", target_arch = \"powerpc64\"))]\n-        const NR_GETRANDOM: libc::c_long = 359;\n-        #[cfg(target_arch = \"aarch64\")]\n-        const NR_GETRANDOM: libc::c_long = 278;\n-\n-        const GRND_NONBLOCK: libc::c_uint = 0x0001;\n-\n         unsafe {\n-            libc::syscall(NR_GETRANDOM, buf.as_mut_ptr(), buf.len(), GRND_NONBLOCK)\n+            libc::syscall(libc::SYS_getrandom, buf.as_mut_ptr(), buf.len(), libc::GRND_NONBLOCK)\n         }\n     }\n \n-    #[cfg(not(all(target_os = \"linux\",\n-                  any(target_arch = \"x86_64\",\n-                      target_arch = \"x86\",\n-                      target_arch = \"arm\",\n-                      target_arch = \"aarch64\",\n-                      target_arch = \"powerpc\",\n-                      target_arch = \"powerpc64\",\n-                      target_arch = \"s390x\"))))]\n+    #[cfg(not(any(target_os = \"linux\", target_os = \"android\")))]\n     fn getrandom(_buf: &mut [u8]) -> libc::c_long { -1 }\n \n     fn getrandom_fill_bytes(v: &mut [u8]) -> bool {\n@@ -94,14 +63,7 @@ mod imp {\n         return true\n     }\n \n-    #[cfg(all(target_os = \"linux\",\n-              any(target_arch = \"x86_64\",\n-                  target_arch = \"x86\",\n-                  target_arch = \"arm\",\n-                  target_arch = \"aarch64\",\n-                  target_arch = \"powerpc\",\n-                  target_arch = \"powerpc64\",\n-                  target_arch = \"s390x\")))]\n+    #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n     fn is_getrandom_available() -> bool {\n         use io;\n         use sync::atomic::{AtomicBool, Ordering};\n@@ -125,14 +87,7 @@ mod imp {\n         AVAILABLE.load(Ordering::Relaxed)\n     }\n \n-    #[cfg(not(all(target_os = \"linux\",\n-                  any(target_arch = \"x86_64\",\n-                      target_arch = \"x86\",\n-                      target_arch = \"arm\",\n-                      target_arch = \"aarch64\",\n-                      target_arch = \"powerpc\",\n-                      target_arch = \"powerpc64\",\n-                      target_arch = \"s390x\"))))]\n+    #[cfg(not(any(target_os = \"linux\", target_os = \"android\")))]\n     fn is_getrandom_available() -> bool { false }\n \n     pub fn fill_bytes(v: &mut [u8]) {"}]}