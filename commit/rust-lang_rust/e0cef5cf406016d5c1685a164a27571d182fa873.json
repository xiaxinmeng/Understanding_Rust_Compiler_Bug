{"sha": "e0cef5cf406016d5c1685a164a27571d182fa873", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwY2VmNWNmNDA2MDE2ZDVjMTY4NWExNjRhMjc1NzFkMTgyZmE4NzM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-05-02T22:53:09Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-05-02T22:53:09Z"}, "message": "fix typo", "tree": {"sha": "7ebf57ed10c0ed920b95dbca54f324012546b1a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ebf57ed10c0ed920b95dbca54f324012546b1a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0cef5cf406016d5c1685a164a27571d182fa873", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0cef5cf406016d5c1685a164a27571d182fa873", "html_url": "https://github.com/rust-lang/rust/commit/e0cef5cf406016d5c1685a164a27571d182fa873", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0cef5cf406016d5c1685a164a27571d182fa873/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "617ce2b7ee330bbcc7ce8eb87160c71ad995639b", "url": "https://api.github.com/repos/rust-lang/rust/commits/617ce2b7ee330bbcc7ce8eb87160c71ad995639b", "html_url": "https://github.com/rust-lang/rust/commit/617ce2b7ee330bbcc7ce8eb87160c71ad995639b"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "a0050b1359679e1024e6079b3fd8ed815e2008fa", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=e0cef5cf406016d5c1685a164a27571d182fa873", "patch": "@@ -4182,7 +4182,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                     {\n                                         err.span_suggestion(\n                                             *sp,\n-                                            \"parenthesis are required to parse this \\\n+                                            \"parentheses are required to parse this \\\n                                              as an expression\",\n                                             format!(\"({})\", snippet),\n                                             Applicability::MachineApplicable,"}, {"sha": "02e6c5e1c8dbf04b8d827c17e95028daf33592ef", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=e0cef5cf406016d5c1685a164a27571d182fa873", "patch": "@@ -2934,7 +2934,7 @@ impl<'a> Parser<'a> {\n                                 if let Ok(snippet) = self.sess.source_map().span_to_snippet(*sp) {\n                                     err.span_suggestion(\n                                         *sp,\n-                                        \"parenthesis are required to parse this as an expression\",\n+                                        \"parentheses are required to parse this as an expression\",\n                                         format!(\"({})\", snippet),\n                                         Applicability::MachineApplicable,\n                                     );\n@@ -2979,7 +2979,7 @@ impl<'a> Parser<'a> {\n                     \"struct literals are not allowed here\",\n                 );\n                 err.multipart_suggestion(\n-                    \"surround the struct literal with parenthesis\",\n+                    \"surround the struct literal with parentheses\",\n                     vec![\n                         (lo.shrink_to_lo(), \"(\".to_string()),\n                         (expr.span.shrink_to_hi(), \")\".to_string()),\n@@ -3661,7 +3661,7 @@ impl<'a> Parser<'a> {\n                     .unwrap_or_else(|_| pprust::expr_to_string(&lhs));\n                 err.span_suggestion(\n                     lhs.span,\n-                    \"parenthesis are required to parse this as an expression\",\n+                    \"parentheses are required to parse this as an expression\",\n                     format!(\"({})\", snippet),\n                     Applicability::MachineApplicable,\n                 );\n@@ -4982,7 +4982,7 @@ impl<'a> Parser<'a> {\n                             if let Ok(snippet) = self.sess.source_map().span_to_snippet(*sp) {\n                                 err.span_suggestion(\n                                     *sp,\n-                                    \"parenthesis are required to parse this as an expression\",\n+                                    \"parentheses are required to parse this as an expression\",\n                                     format!(\"({})\", snippet),\n                                     Applicability::MachineApplicable,\n                                 );"}, {"sha": "ec240003f91822e6eaa23e120aa98e854bf1800f", "filename": "src/test/ui/error-codes/E0423.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr?ref=e0cef5cf406016d5c1685a164a27571d182fa873", "patch": "@@ -3,7 +3,7 @@ error: struct literals are not allowed here\n    |\n LL |     if let S { x: _x, y: 2 } = S { x: 1, y: 2 } { println!(\"Ok\"); }\n    |                                ^^^^^^^^^^^^^^^^\n-help: surround the struct literal with parenthesis\n+help: surround the struct literal with parentheses\n    |\n LL |     if let S { x: _x, y: 2 } = (S { x: 1, y: 2 }) { println!(\"Ok\"); }\n    |                                ^                ^\n@@ -19,7 +19,7 @@ error: struct literals are not allowed here\n    |\n LL |     for _ in std::ops::Range { start: 0, end: 10 } {}\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-help: surround the struct literal with parenthesis\n+help: surround the struct literal with parentheses\n    |\n LL |     for _ in (std::ops::Range { start: 0, end: 10 }) {}\n    |              ^                                     ^"}, {"sha": "a11209998a7d50b0e7ffdc2653df794f0ea175da", "filename": "src/test/ui/parser/expr-as-stmt.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr?ref=e0cef5cf406016d5c1685a164a27571d182fa873", "patch": "@@ -4,29 +4,29 @@ error: expected expression, found `+`\n LL |     {2} + {2}\n    |     --- ^ expected expression\n    |     |\n-   |     help: parenthesis are required to parse this as an expression: `({2})`\n+   |     help: parentheses are required to parse this as an expression: `({2})`\n \n error: expected expression, found `+`\n   --> $DIR/expr-as-stmt.rs:12:9\n    |\n LL |     {2} + 2\n    |     --- ^ expected expression\n    |     |\n-   |     help: parenthesis are required to parse this as an expression: `({2})`\n+   |     help: parentheses are required to parse this as an expression: `({2})`\n \n error: expected expression, found `+`\n   --> $DIR/expr-as-stmt.rs:18:12\n    |\n LL |     { 42 } + foo;\n    |     ------ ^ expected expression\n    |     |\n-   |     help: parenthesis are required to parse this as an expression: `({ 42 })`\n+   |     help: parentheses are required to parse this as an expression: `({ 42 })`\n \n error: expected expression, found `&&`\n   --> $DIR/expr-as-stmt.rs:30:5\n    |\n LL |     if let Some(x) = a { true } else { false }\n-   |     ------------------------------------------ help: parenthesis are required to parse this as an expression: `(if let Some(x) = a { true } else { false })`\n+   |     ------------------------------------------ help: parentheses are required to parse this as an expression: `(if let Some(x) = a { true } else { false })`\n LL |     &&\n    |     ^^ expected expression\n \n@@ -35,7 +35,7 @@ error: expected expression, found `>`\n    |\n LL |     } > 0\n    |       ^ expected expression\n-help: parenthesis are required to parse this as an expression\n+help: parentheses are required to parse this as an expression\n    |\n LL |     (match x {\n LL |         _ => 1,\n@@ -84,7 +84,7 @@ error[E0614]: type `{integer}` cannot be dereferenced\n LL |     { 3 } * 3\n    |     ----- ^^^\n    |     |\n-   |     help: parenthesis are required to parse this as an expression: `({ 3 })`\n+   |     help: parentheses are required to parse this as an expression: `({ 3 })`\n \n error: aborting due to 10 previous errors\n "}, {"sha": "bb7df30783acd40945491941e974d3bbb1be50b5", "filename": "src/test/ui/parser/match-arrows-block-then-binop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fparser%2Fmatch-arrows-block-then-binop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fparser%2Fmatch-arrows-block-then-binop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmatch-arrows-block-then-binop.stderr?ref=e0cef5cf406016d5c1685a164a27571d182fa873", "patch": "@@ -3,7 +3,7 @@ error: expected pattern, found `+`\n    |\n LL |       } + 5\n    |         ^ expected pattern\n-help: parenthesis are required to parse this as an expression\n+help: parentheses are required to parse this as an expression\n    |\n LL |       0 => ({\n LL |         0"}, {"sha": "29af72a5d23d0ae06c8f2a5a1874dea3db4383b9", "filename": "src/test/ui/parser/struct-literal-in-for.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-for.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-for.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-for.stderr?ref=e0cef5cf406016d5c1685a164a27571d182fa873", "patch": "@@ -6,7 +6,7 @@ LL |       for x in Foo {\n LL | |         x: 3\n LL | |     }.hi() {\n    | |_____^\n-help: surround the struct literal with parenthesis\n+help: surround the struct literal with parentheses\n    |\n LL |     for x in (Foo {\n LL |         x: 3"}, {"sha": "e76c1cb45dd4e0e8bdf03ad5c74d27e6df032a5e", "filename": "src/test/ui/parser/struct-literal-in-if.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-if.stderr?ref=e0cef5cf406016d5c1685a164a27571d182fa873", "patch": "@@ -6,7 +6,7 @@ LL |       if Foo {\n LL | |         x: 3\n LL | |     }.hi() {\n    | |_____^\n-help: surround the struct literal with parenthesis\n+help: surround the struct literal with parentheses\n    |\n LL |     if (Foo {\n LL |         x: 3"}, {"sha": "95b0882b7aeb5ec466533ac0eb8f77d71963e314", "filename": "src/test/ui/parser/struct-literal-in-match-discriminant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-match-discriminant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-match-discriminant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-match-discriminant.stderr?ref=e0cef5cf406016d5c1685a164a27571d182fa873", "patch": "@@ -6,7 +6,7 @@ LL |       match Foo {\n LL | |         x: 3\n LL | |     } {\n    | |_____^\n-help: surround the struct literal with parenthesis\n+help: surround the struct literal with parentheses\n    |\n LL |     match (Foo {\n LL |         x: 3"}, {"sha": "acd31b477dc27d7f431cb6045f45c0ac76f97ab1", "filename": "src/test/ui/parser/struct-literal-in-while.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-while.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-while.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-in-while.stderr?ref=e0cef5cf406016d5c1685a164a27571d182fa873", "patch": "@@ -6,7 +6,7 @@ LL |       while Foo {\n LL | |         x: 3\n LL | |     }.hi() {\n    | |_____^\n-help: surround the struct literal with parenthesis\n+help: surround the struct literal with parentheses\n    |\n LL |     while (Foo {\n LL |         x: 3"}, {"sha": "24078074161e6f08744e7d7bbf46c7a24c53c4b5", "filename": "src/test/ui/parser/struct-literal-restrictions-in-lamda.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-restrictions-in-lamda.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-restrictions-in-lamda.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fstruct-literal-restrictions-in-lamda.stderr?ref=e0cef5cf406016d5c1685a164a27571d182fa873", "patch": "@@ -6,7 +6,7 @@ LL |       while || Foo {\n LL | |         x: 3\n LL | |     }.hi() {\n    | |_____^\n-help: surround the struct literal with parenthesis\n+help: surround the struct literal with parentheses\n    |\n LL |     while || (Foo {\n LL |         x: 3"}, {"sha": "f91b9d7dce60fda07a9042bbf9b8ab9e0b4e61e8", "filename": "src/test/ui/struct-literal-variant-in-if.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fstruct-literal-variant-in-if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e0cef5cf406016d5c1685a164a27571d182fa873/src%2Ftest%2Fui%2Fstruct-literal-variant-in-if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstruct-literal-variant-in-if.stderr?ref=e0cef5cf406016d5c1685a164a27571d182fa873", "patch": "@@ -3,7 +3,7 @@ error: struct literals are not allowed here\n    |\n LL |     if x == E::I { field1: true, field2: 42 } {}\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-help: surround the struct literal with parenthesis\n+help: surround the struct literal with parentheses\n    |\n LL |     if x == (E::I { field1: true, field2: 42 }) {}\n    |             ^                                 ^\n@@ -13,7 +13,7 @@ error: struct literals are not allowed here\n    |\n LL |     if x == E::V { field: false } {}\n    |             ^^^^^^^^^^^^^^^^^^^^^\n-help: surround the struct literal with parenthesis\n+help: surround the struct literal with parentheses\n    |\n LL |     if x == (E::V { field: false }) {}\n    |             ^                     ^\n@@ -23,7 +23,7 @@ error: struct literals are not allowed here\n    |\n LL |     if x == E::J { field: -42 } {}\n    |             ^^^^^^^^^^^^^^^^^^^\n-help: surround the struct literal with parenthesis\n+help: surround the struct literal with parentheses\n    |\n LL |     if x == (E::J { field: -42 }) {}\n    |             ^                   ^\n@@ -33,7 +33,7 @@ error: struct literals are not allowed here\n    |\n LL |     if x == E::K { field: \"\" } {}\n    |             ^^^^^^^^^^^^^^^^^^\n-help: surround the struct literal with parenthesis\n+help: surround the struct literal with parentheses\n    |\n LL |     if x == (E::K { field: \"\" }) {}\n    |             ^                  ^"}]}