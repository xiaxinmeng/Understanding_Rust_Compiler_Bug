{"sha": "eab4c9063ec63bf484347cbd6b21117d336db4a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhYjRjOTA2M2VjNjNiZjQ4NDM0N2NiZDZiMjExMTdkMzM2ZGI0YTU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-04-18T13:42:49Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-04-18T13:45:42Z"}, "message": "Sync fn_sig_for_fn_abi with upstream for generator resume args\n\nFixes #970", "tree": {"sha": "e71172dd5840de1ca9448a3076c1a97c9e37d8f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e71172dd5840de1ca9448a3076c1a97c9e37d8f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eab4c9063ec63bf484347cbd6b21117d336db4a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eab4c9063ec63bf484347cbd6b21117d336db4a5", "html_url": "https://github.com/rust-lang/rust/commit/eab4c9063ec63bf484347cbd6b21117d336db4a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eab4c9063ec63bf484347cbd6b21117d336db4a5/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a802c7f2927cceb6bc87bf456bd9bee472218e27", "url": "https://api.github.com/repos/rust-lang/rust/commits/a802c7f2927cceb6bc87bf456bd9bee472218e27", "html_url": "https://github.com/rust-lang/rust/commit/a802c7f2927cceb6bc87bf456bd9bee472218e27"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "d7e8cf73ea8f14f7b3aff0ab54379578ba66cc1f", "filename": "example/std_example.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eab4c9063ec63bf484347cbd6b21117d336db4a5/example%2Fstd_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eab4c9063ec63bf484347cbd6b21117d336db4a5/example%2Fstd_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fstd_example.rs?ref=eab4c9063ec63bf484347cbd6b21117d336db4a5", "patch": "@@ -1,8 +1,8 @@\n-#![feature(core_intrinsics)]\n-#![feature(is_sorted)]\n+#![feature(core_intrinsics, generators, generator_trait, is_sorted)]\n \n use std::arch::x86_64::*;\n use std::io::Write;\n+use std::ops::Generator;\n \n fn main() {\n     let mutex = std::sync::Mutex::new(());\n@@ -89,6 +89,10 @@ fn main() {\n     unsafe {\n         test_simd();\n     }\n+\n+    Box::pin(move |mut _task_context| {\n+        yield ();\n+    }).as_mut().resume(0);\n }\n \n #[target_feature(enable = \"sse2\")]"}, {"sha": "dabb2b6e010c27b768c5f7cd8e1527eacd6da1b6", "filename": "src/abi/mod.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/eab4c9063ec63bf484347cbd6b21117d336db4a5/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eab4c9063ec63bf484347cbd6b21117d336db4a5/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=eab4c9063ec63bf484347cbd6b21117d336db4a5", "patch": "@@ -12,7 +12,7 @@ use crate::prelude::*;\n \n pub(crate) use self::returning::{can_return_to_ssa_var, codegen_return};\n \n-// Copied from https://github.com/rust-lang/rust/blob/c2f4c57296f0d929618baed0b0d6eb594abf01eb/src/librustc/ty/layout.rs#L2349\n+// Copied from https://github.com/rust-lang/rust/blob/b2c1a606feb1fbdb0ac0acba76f881ef172ed474/src/librustc_middle/ty/layout.rs#L2287\n pub(crate) fn fn_sig_for_fn_abi<'tcx>(tcx: TyCtxt<'tcx>, instance: Instance<'tcx>) -> ty::PolyFnSig<'tcx> {\n     let ty = instance.monomorphic_ty(tcx);\n     match ty.kind {\n@@ -43,7 +43,7 @@ pub(crate) fn fn_sig_for_fn_abi<'tcx>(tcx: TyCtxt<'tcx>, instance: Instance<'tcx\n                 sig.abi\n             ))\n         }\n-        ty::Generator(_def_id, substs, _) => {\n+        ty::Generator(_, substs, _) => {\n             let sig = substs.as_generator().poly_sig();\n \n             let env_region = ty::ReLateBound(ty::INNERMOST, ty::BrEnv);\n@@ -63,8 +63,9 @@ pub(crate) fn fn_sig_for_fn_abi<'tcx>(tcx: TyCtxt<'tcx>, instance: Instance<'tcx\n                 ]);\n                 let ret_ty = tcx.mk_adt(state_adt_ref, state_substs);\n \n-                tcx.mk_fn_sig(std::iter::once(env_ty),\n-                    ret_ty,\n+                tcx.mk_fn_sig(\n+                    [env_ty, sig.resume_ty].iter(),\n+                    &ret_ty,\n                     false,\n                     rustc_hir::Unsafety::Normal,\n                     rustc_target::spec::abi::Abi::Rust"}]}