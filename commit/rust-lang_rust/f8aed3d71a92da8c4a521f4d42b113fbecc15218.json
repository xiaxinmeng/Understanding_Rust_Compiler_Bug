{"sha": "f8aed3d71a92da8c4a521f4d42b113fbecc15218", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YWVkM2Q3MWE5MmRhOGM0YTUyMWY0ZDQyYjExM2ZiZWNjMTUyMTg=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-05-08T20:54:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-08T20:54:11Z"}, "message": "Merge pull request #2685 from alexcrichton/fix-tests\n\nFix rustfmt tests in the Rust repo", "tree": {"sha": "bfc38b61cb6d302fc73e451d65a1c8bad930778f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfc38b61cb6d302fc73e451d65a1c8bad930778f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8aed3d71a92da8c4a521f4d42b113fbecc15218", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa8g5zCRBK7hj4Ov3rIwAAdHIIAF2o50hGkCJrAVCw/bK4IoAy\nZXv1pR6a0RRwkzZtFCurCwwrIRh71xQkk37qYO5pbYZpMw+DNodD0BLCU0S034sU\nJcw8am6F9EVPZL4ft//09V2HjqD5o+ZBS+gPghsn/rQwXwnfntToIdJ78YJM73HH\nIh9euIclUWb45iRgrIHkajvFuiDUUGtrJZuFtFo44YU8nlx7xPhLkB/Dv0i3iuHu\nluMFUtYL9pBIn+fYZvOKwAwIgSerPPByzuVRYl/WNnvaty3D/Uki3VhkcUAe1qGD\nujYco//Y9g02ANPCuzERPYnSIgOb2SffY+BgEhav9rOwqkHCKDvNoDyV/o+HTcI=\n=Gyjt\n-----END PGP SIGNATURE-----\n", "payload": "tree bfc38b61cb6d302fc73e451d65a1c8bad930778f\nparent f46f4b5f665675826bf9756c0e0896d5a5ef92d1\nparent a72be170d7048e4f9d8c14d35b93b05f1cb98dd1\nauthor Nick Cameron <nrc@ncameron.org> 1525812851 +1200\ncommitter GitHub <noreply@github.com> 1525812851 +1200\n\nMerge pull request #2685 from alexcrichton/fix-tests\n\nFix rustfmt tests in the Rust repo"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8aed3d71a92da8c4a521f4d42b113fbecc15218", "html_url": "https://github.com/rust-lang/rust/commit/f8aed3d71a92da8c4a521f4d42b113fbecc15218", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8aed3d71a92da8c4a521f4d42b113fbecc15218/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f46f4b5f665675826bf9756c0e0896d5a5ef92d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f46f4b5f665675826bf9756c0e0896d5a5ef92d1", "html_url": "https://github.com/rust-lang/rust/commit/f46f4b5f665675826bf9756c0e0896d5a5ef92d1"}, {"sha": "a72be170d7048e4f9d8c14d35b93b05f1cb98dd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a72be170d7048e4f9d8c14d35b93b05f1cb98dd1", "html_url": "https://github.com/rust-lang/rust/commit/a72be170d7048e4f9d8c14d35b93b05f1cb98dd1"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "e2b371c611d6ab1cafc0410bd2a1b3706185784f", "filename": "src/test/mod.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f8aed3d71a92da8c4a521f4d42b113fbecc15218/src%2Ftest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8aed3d71a92da8c4a521f4d42b113fbecc15218/src%2Ftest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmod.rs?ref=f8aed3d71a92da8c4a521f4d42b113fbecc15218", "patch": "@@ -11,6 +11,7 @@\n extern crate assert_cli;\n \n use std::collections::{HashMap, HashSet};\n+use std::env;\n use std::fs;\n use std::io::{self, BufRead, BufReader, Read};\n use std::iter::{Enumerate, Peekable};\n@@ -892,14 +893,19 @@ impl Drop for TempFile {\n     }\n }\n \n+fn rustfmt() -> PathBuf {\n+    let mut me = env::current_exe().expect(\"failed to get current executable\");\n+    me.pop(); // chop of the test name\n+    me.pop(); // chop off `deps`\n+    me.push(\"rustfmt\");\n+    return me;\n+}\n+\n #[test]\n fn verify_check_works() {\n     let temp_file = make_temp_file(\"temp_check.rs\");\n     assert_cli::Assert::command(&[\n-        \"cargo\",\n-        \"run\",\n-        \"--bin=rustfmt\",\n-        \"--\",\n+        rustfmt().to_str().unwrap(),\n         \"--write-mode=check\",\n         temp_file.path.to_str().unwrap(),\n     ]).succeeds()\n@@ -910,10 +916,7 @@ fn verify_check_works() {\n fn verify_diff_works() {\n     let temp_file = make_temp_file(\"temp_diff.rs\");\n     assert_cli::Assert::command(&[\n-        \"cargo\",\n-        \"run\",\n-        \"--bin=rustfmt\",\n-        \"--\",\n+        rustfmt().to_str().unwrap(),\n         \"--write-mode=diff\",\n         temp_file.path.to_str().unwrap(),\n     ]).succeeds()"}]}