{"sha": "1c97510a1677a93fea9d893325c828daee833b1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjOTc1MTBhMTY3N2E5M2ZlYTlkODkzMzI1YzgyOGRhZWU4MzNiMWU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-07-26T22:37:36Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-07-26T22:41:42Z"}, "message": "Improve printing of mod and native mod.", "tree": {"sha": "ea9f69667520dcd339cde1ec4f694c90af443231", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea9f69667520dcd339cde1ec4f694c90af443231"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c97510a1677a93fea9d893325c828daee833b1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c97510a1677a93fea9d893325c828daee833b1e", "html_url": "https://github.com/rust-lang/rust/commit/1c97510a1677a93fea9d893325c828daee833b1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c97510a1677a93fea9d893325c828daee833b1e/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69f8d0e7873ef1f1de30416aed45a706fc11457d", "url": "https://api.github.com/repos/rust-lang/rust/commits/69f8d0e7873ef1f1de30416aed45a706fc11457d", "html_url": "https://github.com/rust-lang/rust/commit/69f8d0e7873ef1f1de30416aed45a706fc11457d"}], "stats": {"total": 80, "additions": 47, "deletions": 33}, "files": [{"sha": "e73546b3cc43a60d2ec43344cd6d8b8a962f4077", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 47, "deletions": 33, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/1c97510a1677a93fea9d893325c828daee833b1e/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c97510a1677a93fea9d893325c828daee833b1e/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=1c97510a1677a93fea9d893325c828daee833b1e", "patch": "@@ -246,17 +246,27 @@ fn commasep_exprs(&ps s, breaks b, &(@ast::expr)[] exprs) {\n     commasep_cmnt(s, b, exprs, print_expr, expr_span);\n }\n \n-fn print_mod(&ps s, ast::_mod _mod, &ast::attribute[] attrs) {\n+fn print_mod(&ps s, &ast::_mod _mod, &ast::attribute[] attrs) {\n     print_inner_attributes(s, attrs);\n     for (@ast::view_item vitem in _mod.view_items) {\n         print_view_item(s, vitem);\n     }\n     for (@ast::item item in _mod.items) {\n-        hardbreak_if_not_bol(s);\n         print_item(s, item);\n     }\n }\n \n+fn print_native_mod(&ps s, &ast::native_mod nmod,\n+                    &ast::attribute[] attrs) {\n+    print_inner_attributes(s, attrs);\n+    for (@ast::view_item vitem in nmod.view_items) {\n+        print_view_item(s, vitem);\n+    }\n+    for (@ast::native_item item in nmod.items) {\n+        print_native_item(s, item);\n+    }\n+}\n+\n fn print_boxed_type(&ps s, &@ast::ty ty) { print_type(s, *ty); }\n \n fn print_type(&ps s, &ast::ty ty) {\n@@ -347,6 +357,40 @@ fn print_type(&ps s, &ast::ty ty) {\n     end(s);\n }\n \n+fn print_native_item(&ps s, &@ast::native_item item) {\n+    hardbreak_if_not_bol(s);\n+    maybe_print_comment(s, item.span.lo);\n+    print_outer_attributes(s, item.attrs);\n+    alt (item.node) {\n+      ast::native_item_ty {\n+        ibox(s, indent_unit);\n+        ibox(s, 0u);\n+        word_nbsp(s, \"type\");\n+        word(s.s, item.ident);\n+        end(s); // end the inner ibox\n+        word(s.s, \";\");\n+        end(s); // end the outer ibox\n+\n+      }\n+\n+      ast::native_item_fn(?lname, ?decl, ?typarams) {\n+        print_fn(s, decl, ast::proto_fn, item.ident,\n+                 typarams);\n+        alt (lname) {\n+          none { }\n+          some(?ss) {\n+            space(s.s);\n+            word_space(s, \"=\");\n+            print_string(s, ss);\n+          }\n+        }\n+        end(s); // end head-ibox\n+        word(s.s, \";\");\n+        end(s); // end the outer fn box\n+      }\n+    }\n+}\n+\n fn print_item(&ps s, &@ast::item item) {\n     hardbreak_if_not_bol(s);\n     maybe_print_comment(s, item.span.lo);\n@@ -392,37 +436,7 @@ fn print_item(&ps s, &@ast::item item) {\n             word_nbsp(s, \"mod\");\n             word_nbsp(s, item.ident);\n             bopen(s);\n-            print_inner_attributes(s, item.attrs);\n-            for (@ast::native_item item in nmod.items) {\n-                hardbreak_if_not_bol(s);\n-                print_outer_attributes(s, item.attrs);\n-                ibox(s, indent_unit);\n-                maybe_print_comment(s, item.span.lo);\n-                alt (item.node) {\n-                    case (ast::native_item_ty) {\n-                        word_nbsp(s, \"type\");\n-                        word(s.s, item.ident);\n-                    }\n-                    case (ast::native_item_fn(?lname, ?decl, ?typarams)) {\n-                        print_fn(s, decl, ast::proto_fn, item.ident,\n-                                 typarams);\n-                        alt (lname) {\n-                            case (none) { }\n-                            case (some(?ss)) {\n-                                space(s.s);\n-                                word_space(s, \"=\");\n-                                print_string(s, ss);\n-                            }\n-                        }\n-                        end(s); // end head-ibox\n-\n-                        end(s); // end the outer fn box\n-\n-                    }\n-                }\n-                word(s.s, \";\");\n-                end(s);\n-            }\n+            print_native_mod(s, nmod, item.attrs);\n             bclose(s, item.span);\n         }\n         case (ast::item_ty(?ty, ?params)) {"}]}