{"sha": "a2a2b7b7495701d326b16a53706319f529ebcd78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYTJiN2I3NDk1NzAxZDMyNmIxNmE1MzcwNjMxOWY1MjllYmNkNzg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-22T13:58:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-22T13:58:14Z"}, "message": "Rollup merge of #58620 - ssomers:btreeset_intersection_benchmarks, r=KodrAus\n\nintroduce benchmarks of BTreeSet.intersection\n\n16 tests combining 4 kinds of contents with different sizes exposing edge cases.\nThe ones with asymmetric sizes are addressed by https://github.com/rust-lang/rust/pull/58577.\nThe pos_vs_neg cases seems (are were meant to be) the same as the neg_vs_pos case (same thing, reverse order) but reality shows a surprsing 25% difference.", "tree": {"sha": "e5eec886e13f07a302116e1cc266844f32f59c01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5eec886e13f07a302116e1cc266844f32f59c01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2a2b7b7495701d326b16a53706319f529ebcd78", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcb//2CRBK7hj4Ov3rIwAAdHIIAKt3ZYj8QiTiQzsfal/+rClv\nVef2PxhA0AdP3eDLpPJPg6PGiKmYYlg7/RsGSnlV/l39W6YpGooRz8s9DkzuhFOV\nkBy63eG/I/hsTdHfxZynyuuZxeCAaSbYud0YWUejzxqxaZWgp8e1NMAw8eN4ZDYB\nGCryHCxW5YhYpZONrgbaHJRJisnmbp5/19jiqiWSqpJS0x6lcd5funluTk4Augzs\n6NFtHhHXqCayZnCFNffJGAVhFv+0vYtdX9Exs+GigF4CrBdzWDSoIk5asfSAKadG\ndFg2JkRmc6pvkC7YtsTDaVSwstappKqc2pOPIcMr9mPexOuHOoPAmF0fKgS/3oo=\n=EATu\n-----END PGP SIGNATURE-----\n", "payload": "tree e5eec886e13f07a302116e1cc266844f32f59c01\nparent 9695b806472998c107ce2247a543365c3aa100d4\nparent 09a24545a848f0d89bb6464c2af730095b816618\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1550843894 +0100\ncommitter GitHub <noreply@github.com> 1550843894 +0100\n\nRollup merge of #58620 - ssomers:btreeset_intersection_benchmarks, r=KodrAus\n\nintroduce benchmarks of BTreeSet.intersection\n\n16 tests combining 4 kinds of contents with different sizes exposing edge cases.\nThe ones with asymmetric sizes are addressed by https://github.com/rust-lang/rust/pull/58577.\nThe pos_vs_neg cases seems (are were meant to be) the same as the neg_vs_pos case (same thing, reverse order) but reality shows a surprsing 25% difference.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2a2b7b7495701d326b16a53706319f529ebcd78", "html_url": "https://github.com/rust-lang/rust/commit/a2a2b7b7495701d326b16a53706319f529ebcd78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2a2b7b7495701d326b16a53706319f529ebcd78/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9695b806472998c107ce2247a543365c3aa100d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9695b806472998c107ce2247a543365c3aa100d4", "html_url": "https://github.com/rust-lang/rust/commit/9695b806472998c107ce2247a543365c3aa100d4"}, {"sha": "09a24545a848f0d89bb6464c2af730095b816618", "url": "https://api.github.com/repos/rust-lang/rust/commits/09a24545a848f0d89bb6464c2af730095b816618", "html_url": "https://github.com/rust-lang/rust/commit/09a24545a848f0d89bb6464c2af730095b816618"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "095ca5dd2e21b4598ffff106e6576273494822be", "filename": "src/liballoc/benches/btree/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a2a2b7b7495701d326b16a53706319f529ebcd78/src%2Fliballoc%2Fbenches%2Fbtree%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2a2b7b7495701d326b16a53706319f529ebcd78/src%2Fliballoc%2Fbenches%2Fbtree%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Fbtree%2Fmod.rs?ref=a2a2b7b7495701d326b16a53706319f529ebcd78", "patch": "@@ -1 +1,2 @@\n mod map;\n+mod set;"}, {"sha": "08e1db5fbb74d01bf47784c61c0daf507355cfd7", "filename": "src/liballoc/benches/btree/set.rs", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/a2a2b7b7495701d326b16a53706319f529ebcd78/src%2Fliballoc%2Fbenches%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2a2b7b7495701d326b16a53706319f529ebcd78/src%2Fliballoc%2Fbenches%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbenches%2Fbtree%2Fset.rs?ref=a2a2b7b7495701d326b16a53706319f529ebcd78", "patch": "@@ -0,0 +1,88 @@\n+use std::collections::BTreeSet;\n+\n+use rand::{thread_rng, Rng};\n+use test::{black_box, Bencher};\n+\n+fn random(n1: u32, n2: u32) -> [BTreeSet<usize>; 2] {\n+    let mut rng = thread_rng();\n+    let mut set1 = BTreeSet::new();\n+    let mut set2 = BTreeSet::new();\n+    for _ in 0..n1 {\n+        let i = rng.gen::<usize>();\n+        set1.insert(i);\n+    }\n+    for _ in 0..n2 {\n+        let i = rng.gen::<usize>();\n+        set2.insert(i);\n+    }\n+    [set1, set2]\n+}\n+\n+fn staggered(n1: u32, n2: u32) -> [BTreeSet<u32>; 2] {\n+    let mut even = BTreeSet::new();\n+    let mut odd = BTreeSet::new();\n+    for i in 0..n1 {\n+        even.insert(i * 2);\n+    }\n+    for i in 0..n2 {\n+        odd.insert(i * 2 + 1);\n+    }\n+    [even, odd]\n+}\n+\n+fn neg_vs_pos(n1: u32, n2: u32) -> [BTreeSet<i32>; 2] {\n+    let mut neg = BTreeSet::new();\n+    let mut pos = BTreeSet::new();\n+    for i in -(n1 as i32)..=-1 {\n+        neg.insert(i);\n+    }\n+    for i in 1..=(n2 as i32) {\n+        pos.insert(i);\n+    }\n+    [neg, pos]\n+}\n+\n+fn pos_vs_neg(n1: u32, n2: u32) -> [BTreeSet<i32>; 2] {\n+    let mut neg = BTreeSet::new();\n+    let mut pos = BTreeSet::new();\n+    for i in -(n1 as i32)..=-1 {\n+        neg.insert(i);\n+    }\n+    for i in 1..=(n2 as i32) {\n+        pos.insert(i);\n+    }\n+    [pos, neg]\n+}\n+\n+macro_rules! set_intersection_bench {\n+    ($name: ident, $sets: expr) => {\n+        #[bench]\n+        pub fn $name(b: &mut Bencher) {\n+            // setup\n+            let sets = $sets;\n+\n+            // measure\n+            b.iter(|| {\n+                let x = sets[0].intersection(&sets[1]).count();\n+                black_box(x);\n+            })\n+        }\n+    };\n+}\n+\n+set_intersection_bench! {intersect_random_100,          random(100, 100)}\n+set_intersection_bench! {intersect_random_10k,          random(10_000, 10_000)}\n+set_intersection_bench! {intersect_random_10_vs_10k,    random(10, 10_000)}\n+set_intersection_bench! {intersect_random_10k_vs_10,    random(10_000, 10)}\n+set_intersection_bench! {intersect_staggered_100,       staggered(100, 100)}\n+set_intersection_bench! {intersect_staggered_10k,       staggered(10_000, 10_000)}\n+set_intersection_bench! {intersect_staggered_10_vs_10k, staggered(10, 10_000)}\n+set_intersection_bench! {intersect_staggered_10k_vs_10, staggered(10_000, 10)}\n+set_intersection_bench! {intersect_neg_vs_pos_100,      neg_vs_pos(100, 100)}\n+set_intersection_bench! {intersect_neg_vs_pos_10k,      neg_vs_pos(10_000, 10_000)}\n+set_intersection_bench! {intersect_neg_vs_pos_10_vs_10k,neg_vs_pos(10, 10_000)}\n+set_intersection_bench! {intersect_neg_vs_pos_10k_vs_10,neg_vs_pos(10_000, 10)}\n+set_intersection_bench! {intersect_pos_vs_neg_100,      pos_vs_neg(100, 100)}\n+set_intersection_bench! {intersect_pos_vs_neg_10k,      pos_vs_neg(10_000, 10_000)}\n+set_intersection_bench! {intersect_pos_vs_neg_10_vs_10k,pos_vs_neg(10, 10_000)}\n+set_intersection_bench! {intersect_pos_vs_neg_10k_vs_10,pos_vs_neg(10_000, 10)}"}]}