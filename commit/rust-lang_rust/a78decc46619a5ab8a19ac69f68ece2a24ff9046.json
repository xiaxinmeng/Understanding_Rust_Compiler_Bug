{"sha": "a78decc46619a5ab8a19ac69f68ece2a24ff9046", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3OGRlY2M0NjYxOWE1YWI4YTE5YWM2OWY2OGVjZTJhMjRmZjkwNDY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-14T15:28:38Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-14T15:39:56Z"}, "message": "internal: make assist naming consistent", "tree": {"sha": "9a56e4cf212b71d7d4bd3ed08ade2fb8b8304a14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a56e4cf212b71d7d4bd3ed08ade2fb8b8304a14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a78decc46619a5ab8a19ac69f68ece2a24ff9046", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a78decc46619a5ab8a19ac69f68ece2a24ff9046", "html_url": "https://github.com/rust-lang/rust/commit/a78decc46619a5ab8a19ac69f68ece2a24ff9046", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a78decc46619a5ab8a19ac69f68ece2a24ff9046/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc17b35e6211b1d217d28b517406baf8775a9ace", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc17b35e6211b1d217d28b517406baf8775a9ace", "html_url": "https://github.com/rust-lang/rust/commit/dc17b35e6211b1d217d28b517406baf8775a9ace"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "1b3fa898bb71491abcf95baca074c67136a3b513", "filename": "crates/ide_assists/src/handlers/convert_to_guarded_return.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a78decc46619a5ab8a19ac69f68ece2a24ff9046/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_to_guarded_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a78decc46619a5ab8a19ac69f68ece2a24ff9046/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_to_guarded_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_to_guarded_return.rs?ref=a78decc46619a5ab8a19ac69f68ece2a24ff9046", "previous_filename": "crates/ide_assists/src/handlers/early_return.rs"}, {"sha": "98a9085a51edf5b9afb3cce995f414ffcbe4ea71", "filename": "crates/ide_assists/src/lib.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a78decc46619a5ab8a19ac69f68ece2a24ff9046/crates%2Fide_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a78decc46619a5ab8a19ac69f68ece2a24ff9046/crates%2Fide_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Flib.rs?ref=a78decc46619a5ab8a19ac69f68ece2a24ff9046", "patch": "@@ -61,7 +61,7 @@ mod handlers {\n     mod convert_into_to_from;\n     mod convert_iter_for_each_to_for;\n     mod convert_tuple_struct_to_named_struct;\n-    mod early_return;\n+    mod convert_to_guarded_return;\n     mod expand_glob_import;\n     mod extract_function;\n     mod extract_struct_from_enum_variant;\n@@ -126,14 +126,14 @@ mod handlers {\n             apply_demorgan::apply_demorgan,\n             auto_import::auto_import,\n             change_visibility::change_visibility,\n-            convert_bool_then::convert_if_to_bool_then,\n             convert_bool_then::convert_bool_then_to_if,\n+            convert_bool_then::convert_if_to_bool_then,\n             convert_comment_block::convert_comment_block,\n             convert_integer_literal::convert_integer_literal,\n             convert_into_to_from::convert_into_to_from,\n             convert_iter_for_each_to_for::convert_iter_for_each_to_for,\n+            convert_to_guarded_return::convert_to_guarded_return,\n             convert_tuple_struct_to_named_struct::convert_tuple_struct_to_named_struct,\n-            early_return::convert_to_guarded_return,\n             expand_glob_import::expand_glob_import,\n             extract_struct_from_enum_variant::extract_struct_from_enum_variant,\n             extract_type_alias::extract_type_alias,\n@@ -144,19 +144,16 @@ mod handlers {\n             flip_trait_bound::flip_trait_bound,\n             generate_default_from_enum_variant::generate_default_from_enum_variant,\n             generate_default_from_new::generate_default_from_new,\n-            generate_is_empty_from_len::generate_is_empty_from_len,\n             generate_deref::generate_deref,\n             generate_derive::generate_derive,\n             generate_enum_is_method::generate_enum_is_method,\n             generate_enum_projection_method::generate_enum_as_method,\n             generate_enum_projection_method::generate_enum_try_into_method,\n             generate_from_impl_for_enum::generate_from_impl_for_enum,\n             generate_function::generate_function,\n-            generate_getter::generate_getter,\n-            generate_getter::generate_getter_mut,\n             generate_impl::generate_impl,\n+            generate_is_empty_from_len::generate_is_empty_from_len,\n             generate_new::generate_new,\n-            generate_setter::generate_setter,\n             infer_function_return_type::infer_function_return_type,\n             inline_call::inline_call,\n             inline_local_variable::inline_local_variable,\n@@ -204,6 +201,10 @@ mod handlers {\n             //\n             extract_variable::extract_variable,\n             extract_function::extract_function,\n+            //\n+            generate_getter::generate_getter,\n+            generate_getter::generate_getter_mut,\n+            generate_setter::generate_setter,\n             // Are you sure you want to add new assist here, and not to the\n             // sorted list above?\n         ]"}]}