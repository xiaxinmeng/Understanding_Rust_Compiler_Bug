{"sha": "eb679c9c5d57c88deaa313608af4011befc69605", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNjc5YzljNWQ1N2M4OGRlYWEzMTM2MDhhZjQwMTFiZWZjNjk2MDU=", "commit": {"author": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-11-14T15:47:35Z"}, "committer": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-12-06T05:08:43Z"}, "message": "Add test for Location::caller in a macro.", "tree": {"sha": "0659c6d9755764453e431662fa42c7ed765a7b75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0659c6d9755764453e431662fa42c7ed765a7b75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb679c9c5d57c88deaa313608af4011befc69605", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb679c9c5d57c88deaa313608af4011befc69605", "html_url": "https://github.com/rust-lang/rust/commit/eb679c9c5d57c88deaa313608af4011befc69605", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb679c9c5d57c88deaa313608af4011befc69605/comments", "author": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc6e66eb3aa432f422bc61cdb6f0e9c61025a6d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc6e66eb3aa432f422bc61cdb6f0e9c61025a6d5", "html_url": "https://github.com/rust-lang/rust/commit/bc6e66eb3aa432f422bc61cdb6f0e9c61025a6d5"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "76e62b89ab818d34f5d85a4ee50530aa2530c1fa", "filename": "src/test/ui/rfc-2091-track-caller/intrinsic-wrapper.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/eb679c9c5d57c88deaa313608af4011befc69605/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fintrinsic-wrapper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb679c9c5d57c88deaa313608af4011befc69605/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fintrinsic-wrapper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fintrinsic-wrapper.rs?ref=eb679c9c5d57c88deaa313608af4011befc69605", "patch": "@@ -0,0 +1,21 @@\n+// run-pass\n+\n+#![feature(track_caller)]\n+\n+macro_rules! caller_location_from_macro {\n+    () => (core::panic::Location::caller());\n+}\n+\n+fn main() {\n+    let loc = core::panic::Location::caller();\n+    assert_eq!(loc.file(), file!());\n+    assert_eq!(loc.line(), 10);\n+    assert_eq!(loc.column(), 15);\n+\n+    // `Location::caller()` in a macro should behave similarly to `file!` and `line!`,\n+    // i.e. point to where the macro was invoked, instead of the macro itself.\n+    let loc2 = caller_location_from_macro!();\n+    assert_eq!(loc2.file(), file!());\n+    assert_eq!(loc2.line(), 17);\n+    assert_eq!(loc2.column(), 16);\n+}"}]}