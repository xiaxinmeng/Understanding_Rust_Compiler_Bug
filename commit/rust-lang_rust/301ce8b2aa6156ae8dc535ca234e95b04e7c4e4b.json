{"sha": "301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMWNlOGIyYWE2MTU2YWU4ZGM1MzVjYTIzNGU5NWIwNGU3YzRlNGI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-21T09:37:18Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-21T09:37:18Z"}, "message": "Properly assign to aggregate fields", "tree": {"sha": "e25b0f8b90b0f01151ae9c76662395c6316dd443", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e25b0f8b90b0f01151ae9c76662395c6316dd443"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b", "html_url": "https://github.com/rust-lang/rust/commit/301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37fcd5cad5c314632aede576ae5fbbb1c3ede228", "url": "https://api.github.com/repos/rust-lang/rust/commits/37fcd5cad5c314632aede576ae5fbbb1c3ede228", "html_url": "https://github.com/rust-lang/rust/commit/37fcd5cad5c314632aede576ae5fbbb1c3ede228"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "51e590fe292914c78966ba5cff27acf6a46d0ad1", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b", "patch": "@@ -267,7 +267,12 @@ impl<'a, 'tcx> Qualifier<'a, 'tcx, 'tcx> {\n                 }\n             };\n             debug!(\"store to var {:?}\", index);\n-            self.local_qualif[index] = Some(self.qualif);\n+            match &mut self.local_qualif[index] {\n+                // update\n+                Some(ref mut qualif) => *qualif = *qualif | self.qualif,\n+                // or insert\n+                qualif @ None => *qualif = Some(self.qualif),\n+            }\n             return;\n         }\n "}, {"sha": "bb3fc92d4fb4e33fac2a04ee293b163ab4f093e0", "filename": "src/test/ui/consts/partial_qualif.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b/src%2Ftest%2Fui%2Fconsts%2Fpartial_qualif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b/src%2Ftest%2Fui%2Fconsts%2Fpartial_qualif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpartial_qualif.rs?ref=301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b", "patch": "@@ -0,0 +1,11 @@\n+#![feature(const_let)]\n+\n+use std::cell::Cell;\n+\n+const FOO: &(Cell<usize>, bool) = {\n+    let mut a = (Cell::new(0), false);\n+    a.1 = true; // resets `qualif(a)` to `qualif(true)`\n+    &{a} //~ ERROR cannot borrow a constant which may contain interior mutability\n+};\n+\n+fn main() {}\n\\ No newline at end of file"}, {"sha": "d695f64e2c3b55a6a1d9fddf1372cfc6f9ba6856", "filename": "src/test/ui/consts/partial_qualif.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b/src%2Ftest%2Fui%2Fconsts%2Fpartial_qualif.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b/src%2Ftest%2Fui%2Fconsts%2Fpartial_qualif.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpartial_qualif.stderr?ref=301ce8b2aa6156ae8dc535ca234e95b04e7c4e4b", "patch": "@@ -0,0 +1,9 @@\n+error[E0492]: cannot borrow a constant which may contain interior mutability, create a static instead\n+  --> $DIR/partial_qualif.rs:8:5\n+   |\n+LL |     &{a} //~ ERROR cannot borrow a constant which may contain interior mutability\n+   |     ^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0492`."}]}