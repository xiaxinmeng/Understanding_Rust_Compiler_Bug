{"sha": "eb683e6070f1a402d06e365432c5b9a675b96493", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNjgzZTYwNzBmMWE0MDJkMDZlMzY1NDMyYzViOWE2NzViOTY0OTM=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-10-16T05:13:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-16T05:13:45Z"}, "message": "Merge pull request #3320 from phansch/riir_update_lints_use_walkdir\n\nRIIR update_lints: use WalkDir instead of read_dir", "tree": {"sha": "d6caa0f2ac8a1c633fdb33f9fbf7e7b96c2906a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6caa0f2ac8a1c633fdb33f9fbf7e7b96c2906a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb683e6070f1a402d06e365432c5b9a675b96493", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbxXOJCRBK7hj4Ov3rIwAAdHIIADbyre13RKinTiJu2OtXk5WM\nY50gER1HtIG09/2TgG9YdH3OtKoZrV2Og71Pd03VhCHTc1d0Di9P6I/Azxcw2Es9\nilMKdD+HWtzvIPuhlrqioAl/xMnWsFAeGlF8+kUeesNhwMKG3hia1tfAppvpaTMl\nZObIE/xfjiCVLRlAsrW9Rj/tQMyWCTDqQaAGa/1sHhI5qz/YxjtY92J6k7sTnLZm\nkPLfSyctQDpACS4dFuV+8JZRTuBq5X3A86cpod1ADfE8U2AHbkvUjkepNPDCJi+O\nKvkzRwRIR0DY6m6MbciE0Av0fD5H4ErebD53eL2NgmWbAS+PAN0Lm6yoJhMfwx4=\n=NFNv\n-----END PGP SIGNATURE-----\n", "payload": "tree d6caa0f2ac8a1c633fdb33f9fbf7e7b96c2906a8\nparent 78cd2c8545e65900b8d92911f643885f9880aa23\nparent b5dd8f17d12ec6ccc96910c07f930e340fafeb3b\nauthor Philipp Hansch <dev@phansch.net> 1539666825 +0200\ncommitter GitHub <noreply@github.com> 1539666825 +0200\n\nMerge pull request #3320 from phansch/riir_update_lints_use_walkdir\n\nRIIR update_lints: use WalkDir instead of read_dir"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb683e6070f1a402d06e365432c5b9a675b96493", "html_url": "https://github.com/rust-lang/rust/commit/eb683e6070f1a402d06e365432c5b9a675b96493", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb683e6070f1a402d06e365432c5b9a675b96493/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78cd2c8545e65900b8d92911f643885f9880aa23", "url": "https://api.github.com/repos/rust-lang/rust/commits/78cd2c8545e65900b8d92911f643885f9880aa23", "html_url": "https://github.com/rust-lang/rust/commit/78cd2c8545e65900b8d92911f643885f9880aa23"}, {"sha": "b5dd8f17d12ec6ccc96910c07f930e340fafeb3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5dd8f17d12ec6ccc96910c07f930e340fafeb3b", "html_url": "https://github.com/rust-lang/rust/commit/b5dd8f17d12ec6ccc96910c07f930e340fafeb3b"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "5380ecd9814eaa6694d701342e56f3a0464e3595", "filename": "clippy_dev/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb683e6070f1a402d06e365432c5b9a675b96493/clippy_dev%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/eb683e6070f1a402d06e365432c5b9a675b96493/clippy_dev%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.toml?ref=eb683e6070f1a402d06e365432c5b9a675b96493", "patch": "@@ -9,3 +9,4 @@ clap = \"~2.32\"\n itertools = \"0.7\"\n regex = \"1\"\n lazy_static = \"1.0\"\n+walkdir = \"2\""}, {"sha": "8477183ae56c1442f420f28280272514a41e35ed", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/eb683e6070f1a402d06e365432c5b9a675b96493/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb683e6070f1a402d06e365432c5b9a675b96493/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=eb683e6070f1a402d06e365432c5b9a675b96493", "patch": "@@ -14,6 +14,7 @@\n use itertools::Itertools;\n use lazy_static::lazy_static;\n use regex::Regex;\n+use walkdir::WalkDir;\n use std::collections::HashMap;\n use std::ffi::OsStr;\n use std::fs;\n@@ -35,6 +36,7 @@ lazy_static! {\n     pub static ref DOCS_LINK: String = \"https://rust-lang-nursery.github.io/rust-clippy/master/index.html\".to_string();\n }\n \n+/// Lint data parsed from the Clippy source code.\n #[derive(Clone, PartialEq, Debug)]\n pub struct Lint {\n     pub name: String,\n@@ -66,11 +68,12 @@ impl Lint {\n     }\n }\n \n+/// Gathers all files in `src/clippy_lints` and gathers all lints inside\n pub fn gather_all() -> impl Iterator<Item=Lint> {\n     lint_files().flat_map(|f| gather_from_file(&f))\n }\n \n-fn gather_from_file(dir_entry: &fs::DirEntry) -> impl Iterator<Item=Lint> {\n+fn gather_from_file(dir_entry: &walkdir::DirEntry) -> impl Iterator<Item=Lint> {\n     let mut file = fs::File::open(dir_entry.path()).unwrap();\n     let mut content = String::new();\n     file.read_to_string(&mut content).unwrap();\n@@ -89,9 +92,11 @@ fn parse_contents(content: &str, filename: &str) -> impl Iterator<Item=Lint> {\n }\n \n /// Collects all .rs files in the `clippy_lints/src` directory\n-fn lint_files() -> impl Iterator<Item=fs::DirEntry> {\n-    fs::read_dir(\"../clippy_lints/src\")\n-        .unwrap()\n+fn lint_files() -> impl Iterator<Item=walkdir::DirEntry> {\n+    // We use `WalkDir` instead of `fs::read_dir` here in order to recurse into subdirectories.\n+    // Otherwise we would not collect all the lints, for example in `clippy_lints/src/methods/`.\n+    WalkDir::new(\"../clippy_lints/src\")\n+        .into_iter()\n         .filter_map(|f| f.ok())\n         .filter(|f| f.path().extension() == Some(OsStr::new(\"rs\")))\n }"}, {"sha": "9e78def78fe4077f06fb16ef1c7857ddd6edf7ab", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb683e6070f1a402d06e365432c5b9a675b96493/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb683e6070f1a402d06e365432c5b9a675b96493/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=eb683e6070f1a402d06e365432c5b9a675b96493", "patch": "@@ -44,7 +44,7 @@ fn print_lints() {\n         if lint_group == \"Deprecated\" { continue; }\n         println!(\"\\n## {}\", lint_group);\n \n-        lints.sort_by(|a, b| a.name.cmp(&b.name));\n+        lints.sort_by_key(|l| l.name.clone());\n \n         for lint in lints {\n             println!(\"* [{}]({}#{}) ({})\", lint.name, clippy_dev::DOCS_LINK.clone(), lint.name, lint.desc);"}]}