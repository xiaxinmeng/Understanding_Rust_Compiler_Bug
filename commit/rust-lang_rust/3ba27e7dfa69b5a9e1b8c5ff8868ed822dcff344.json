{"sha": "3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344", "node_id": "C_kwDOAAsO6NoAKDNiYTI3ZTdkZmE2OWI1YTllMWI4YzVmZjg4NjhlZDgyMmRjZmYzNDQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2021-11-19T23:22:44Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2021-11-21T01:22:18Z"}, "message": "Use same_type_modulo_infer in more places", "tree": {"sha": "97372fa61d6228b56f7627841b865277c1382dec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97372fa61d6228b56f7627841b865277c1382dec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344", "html_url": "https://github.com/rust-lang/rust/commit/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bc98076f37dd8c1476de4bbe0515c55a65332b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bc98076f37dd8c1476de4bbe0515c55a65332b7", "html_url": "https://github.com/rust-lang/rust/commit/5bc98076f37dd8c1476de4bbe0515c55a65332b7"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "640300c2d45548aa9f6595bcb9056fe654d5581c", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344", "patch": "@@ -1879,7 +1879,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                 .iter()\n                 .filter(|field| field.vis.is_accessible_from(field.did, self.tcx))\n                 .map(|field| (field.ident.name, field.ty(self.tcx, expected_substs)))\n-                .find(|(_, ty)| ty::TyS::same_type(ty, exp_found.found))\n+                .find(|(_, ty)| same_type_modulo_infer(ty, exp_found.found))\n             {\n                 if let ObligationCauseCode::Pattern { span: Some(span), .. } = cause.code {\n                     if let Ok(snippet) = self.tcx.sess.source_map().span_to_snippet(span) {\n@@ -1944,7 +1944,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                                         | (_, ty::Infer(_))\n                                         | (ty::Param(_), _)\n                                         | (ty::Infer(_), _) => {}\n-                                        _ if ty::TyS::same_type(exp_ty, found_ty) => {}\n+                                        _ if same_type_modulo_infer(exp_ty, found_ty) => {}\n                                         _ => show_suggestion = false,\n                                     };\n                                 }"}, {"sha": "1df7fd59f57b25cc2932825c526a1f25ff33798f", "filename": "src/test/ui/half-open-range-patterns/exclusive_range_pattern_syntax_collision.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision.stderr?ref=3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344", "patch": "@@ -8,6 +8,10 @@ LL |         [_, 99.., _] => {},\n    |\n    = note: expected struct `std::ops::Range<{integer}>`\n                 found type `{integer}`\n+help: you might have meant to use field `start` whose type is `{integer}`\n+   |\n+LL |     match [5..4, 99..105, 43..44].start {\n+   |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "87484c1072dd0f80ec34f9756cdc91a69c384455", "filename": "src/test/ui/half-open-range-patterns/exclusive_range_pattern_syntax_collision2.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision2.stderr?ref=3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344", "patch": "@@ -14,6 +14,10 @@ LL |         [_, 99..] => {},\n    |\n    = note: expected struct `std::ops::Range<{integer}>`\n                 found type `{integer}`\n+help: you might have meant to use field `start` whose type is `{integer}`\n+   |\n+LL |     match [5..4, 99..105, 43..44].start {\n+   |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 2 previous errors\n "}, {"sha": "c48f6cce93c2f4de1d2ba2bf6e6fd2bdd7623d70", "filename": "src/test/ui/half-open-range-patterns/exclusive_range_pattern_syntax_collision3.stderr", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fexclusive_range_pattern_syntax_collision3.stderr?ref=3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344", "patch": "@@ -8,6 +8,10 @@ LL |         [..9, 99..100, _] => {},\n    |\n    = note: expected struct `std::ops::Range<{integer}>`\n                 found type `{integer}`\n+help: you might have meant to use field `start` whose type is `{integer}`\n+   |\n+LL |     match [5..4, 99..105, 43..44].start {\n+   |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0308]: mismatched types\n   --> $DIR/exclusive_range_pattern_syntax_collision3.rs:6:15\n@@ -21,6 +25,10 @@ LL |         [..9, 99..100, _] => {},\n    |\n    = note: expected struct `std::ops::Range<{integer}>`\n                 found type `{integer}`\n+help: you might have meant to use field `start` whose type is `{integer}`\n+   |\n+LL |     match [5..4, 99..105, 43..44].start {\n+   |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0308]: mismatched types\n   --> $DIR/exclusive_range_pattern_syntax_collision3.rs:6:19\n@@ -34,6 +42,10 @@ LL |         [..9, 99..100, _] => {},\n    |\n    = note: expected struct `std::ops::Range<{integer}>`\n                 found type `{integer}`\n+help: you might have meant to use field `start` whose type is `{integer}`\n+   |\n+LL |     match [5..4, 99..105, 43..44].start {\n+   |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 3 previous errors\n "}, {"sha": "d1bc279c7589a6c5eb5bd2b126fb33ef84a0ef8c", "filename": "src/test/ui/issues/issue-5358-1.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344/src%2Ftest%2Fui%2Fissues%2Fissue-5358-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344/src%2Ftest%2Fui%2Fissues%2Fissue-5358-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5358-1.stderr?ref=3ba27e7dfa69b5a9e1b8c5ff8868ed822dcff344", "patch": "@@ -8,6 +8,10 @@ LL |         Either::Right(_) => {}\n    |\n    = note: expected struct `S`\n                 found enum `Either<_, _>`\n+help: you might have meant to use field `0` whose type is `Either<usize, usize>`\n+   |\n+LL |     match S(Either::Left(5)).0 {\n+   |           ~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}]}