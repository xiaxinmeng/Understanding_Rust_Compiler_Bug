{"sha": "70d2be0cec5b61dec30677654123044b50bb11f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwZDJiZTBjZWM1YjYxZGVjMzA2Nzc2NTQxMjMwNDRiNTBiYjExZjc=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-08-02T01:23:30Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-08-03T04:18:32Z"}, "message": "Revert \"std::rt: Use a constant 4 threads for multithreaded sched tests\"\n\nThis workaround was less than ideal. A better solution is to raise the\nfd limit.\n\nThis reverts commit 49b72bdd77916e27aaf95909516702c1450f11ac.", "tree": {"sha": "66b9d3839140ad9be9cc31ad2e7b93704b7ed5b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66b9d3839140ad9be9cc31ad2e7b93704b7ed5b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70d2be0cec5b61dec30677654123044b50bb11f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70d2be0cec5b61dec30677654123044b50bb11f7", "html_url": "https://github.com/rust-lang/rust/commit/70d2be0cec5b61dec30677654123044b50bb11f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70d2be0cec5b61dec30677654123044b50bb11f7/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ddc72f69be4d0a2027ff598ad262ea2b2ca3812", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ddc72f69be4d0a2027ff598ad262ea2b2ca3812", "html_url": "https://github.com/rust-lang/rust/commit/3ddc72f69be4d0a2027ff598ad262ea2b2ca3812"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "387ea3c62aad80e8a11126222568d85f6bb12e00", "filename": "src/libstd/rt/test.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/70d2be0cec5b61dec30677654123044b50bb11f7/src%2Flibstd%2Frt%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70d2be0cec5b61dec30677654123044b50bb11f7/src%2Flibstd%2Frt%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Ftest.rs?ref=70d2be0cec5b61dec30677654123044b50bb11f7", "patch": "@@ -70,17 +70,18 @@ pub fn run_in_mt_newsched_task(f: ~fn()) {\n     use os;\n     use from_str::FromStr;\n     use rt::sched::Shutdown;\n+    use rt::util;\n \n     let f = Cell::new(f);\n \n     do run_in_bare_thread {\n         let nthreads = match os::getenv(\"RUST_RT_TEST_THREADS\") {\n             Some(nstr) => FromStr::from_str(nstr).get(),\n             None => {\n-                // A reasonable number of threads for testing\n-                // multithreading. NB: It's easy to exhaust OS X's\n-                // low maximum fd limit by setting this too high (#7772)\n-                4\n+                // Using more threads than cores in test code\n+                // to force the OS to preempt them frequently.\n+                // Assuming that this help stress test concurrent types.\n+                util::num_cpus() * 2\n             }\n         };\n "}]}