{"sha": "4bd61430622fcd289de1374c9e7c8d9260f38cf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZDYxNDMwNjIyZmNkMjg5ZGUxMzc0YzllN2M4ZDkyNjBmMzhjZjM=", "commit": {"author": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-03-18T20:13:49Z"}, "committer": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-03-18T20:13:49Z"}, "message": "Prefer installing `cargo-watch` via Task API\n\nThis gives us much more fine-grained stdout buffering and ANSI terminal colors.", "tree": {"sha": "06db4faf928ebe8ac2414bd80115c9fc0c718242", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06db4faf928ebe8ac2414bd80115c9fc0c718242"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bd61430622fcd289de1374c9e7c8d9260f38cf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd61430622fcd289de1374c9e7c8d9260f38cf3", "html_url": "https://github.com/rust-lang/rust/commit/4bd61430622fcd289de1374c9e7c8d9260f38cf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bd61430622fcd289de1374c9e7c8d9260f38cf3/comments", "author": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21b73f984433ca6ca1500826af59f8dd8bc22618", "url": "https://api.github.com/repos/rust-lang/rust/commits/21b73f984433ca6ca1500826af59f8dd8bc22618", "html_url": "https://github.com/rust-lang/rust/commit/21b73f984433ca6ca1500826af59f8dd8bc22618"}], "stats": {"total": 37, "additions": 14, "deletions": 23}, "files": [{"sha": "f06c5445d4c815d7fdba3235aac383e83124419e", "filename": "editors/code/src/extension.ts", "status": "modified", "additions": 14, "deletions": 23, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/4bd61430622fcd289de1374c9e7c8d9260f38cf3/editors%2Fcode%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4bd61430622fcd289de1374c9e7c8d9260f38cf3/editors%2Fcode%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fextension.ts?ref=4bd61430622fcd289de1374c9e7c8d9260f38cf3", "patch": "@@ -155,30 +155,21 @@ async function askToCargoWatch() {\n             return;\n         }\n \n-        try {\n-            // await vscode.tasks.executeTask(createTask({label: '', bin: 'cargo', args: ['install', 'cargo-watch'], env: {}}));\n-\n-            const channel = vscode.window.createOutputChannel('cargo-watch');\n-            channel.show(false);\n-            const sup = spawn('cargo', ['install', 'cargo-watch']);\n-            sup.stderr.on('data', chunk => {\n-                const output = new TextDecoder().decode(chunk);\n-                channel.append(output);\n-            });\n-            await new Promise((resolve, reject) => {\n-                sup.on('close', (code, signal) => {\n-                    if (code === 0) {\n-                        resolve(code);\n-                    } else {\n-                        reject(code);\n-                    }\n-                });\n+        const label = 'install-cargo-watch';\n+        const taskFinished = new Promise((resolve, reject) => {\n+            let disposable = vscode.tasks.onDidEndTask(({ execution }) => {\n+                if (execution.task.name === label) {\n+                    disposable.dispose();\n+                    resolve();\n+                };\n             });\n-            channel.dispose();\n-        } catch (err) {\n-            vscode.window.showErrorMessage(\n-                `Couldn't install \\`cargo-watch\\`: ${err.message}`\n-            );\n+        });\n+\n+        vscode.tasks.executeTask(createTask({ label, bin: 'cargo', args: ['install', 'cargo-watch'], env: {} }));\n+        await taskFinished;\n+        const { stderr } = await util.promisify(exec)('cargo watch --version').catch(e => e);\n+        if (stderr !== '') {\n+            vscode.window.showErrorMessage(`Couldn't install \\`cargo-\\`watch: ${stderr}`);\n             return;\n         }\n     }"}]}