{"sha": "677381a0c1788d459c010b891fbf21e80b4a28a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NzM4MWEwYzE3ODhkNDU5YzAxMGI4OTFmYmYyMWU4MGI0YTI4YTM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-11-28T19:25:40Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-11-28T19:25:40Z"}, "message": "On type mismatch error highlight `&` when type matches\n\nWhen the only difference between the two types in a type error is that\none is a reference to the other type (`T` vs `&T`) or both are\nreferences differing only in their mutability (`&T` vs `&mut T`), don't\nhighlight the type (`T`).", "tree": {"sha": "4a7682a8f270a05a07e2fb218316f463f83fa85b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a7682a8f270a05a07e2fb218316f463f83fa85b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/677381a0c1788d459c010b891fbf21e80b4a28a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/677381a0c1788d459c010b891fbf21e80b4a28a3", "html_url": "https://github.com/rust-lang/rust/commit/677381a0c1788d459c010b891fbf21e80b4a28a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/677381a0c1788d459c010b891fbf21e80b4a28a3/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea51b19dc7587bac0011282506ad4678cca9c1eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea51b19dc7587bac0011282506ad4678cca9c1eb", "html_url": "https://github.com/rust-lang/rust/commit/ea51b19dc7587bac0011282506ad4678cca9c1eb"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "5ef1c37135b4c919738d0c322fa27d68e44f9743", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/677381a0c1788d459c010b891fbf21e80b4a28a3/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/677381a0c1788d459c010b891fbf21e80b4a28a3/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=677381a0c1788d459c010b891fbf21e80b4a28a3", "patch": "@@ -555,6 +555,20 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n     fn cmp(&self, t1: Ty<'tcx>, t2: Ty<'tcx>)\n         -> (DiagnosticStyledString, DiagnosticStyledString)\n     {\n+        fn equals<'tcx>(a: &Ty<'tcx>, b: &Ty<'tcx>) -> bool {\n+            match (&a.sty, &b.sty) {\n+                (a, b) if *a == *b => true,\n+                (&ty::TyInt(_), &ty::TyInfer(ty::InferTy::IntVar(_))) |\n+                (&ty::TyInfer(ty::InferTy::IntVar(_)), &ty::TyInt(_)) |\n+                (&ty::TyInfer(ty::InferTy::IntVar(_)), &ty::TyInfer(ty::InferTy::IntVar(_))) |\n+                (&ty::TyFloat(_), &ty::TyInfer(ty::InferTy::FloatVar(_))) |\n+                (&ty::TyInfer(ty::InferTy::FloatVar(_)), &ty::TyFloat(_)) |\n+                (&ty::TyInfer(ty::InferTy::FloatVar(_)),\n+                 &ty::TyInfer(ty::InferTy::FloatVar(_))) => true,\n+                _ => false,\n+            }\n+        }\n+\n         match (&t1.sty, &t2.sty) {\n             (&ty::TyAdt(def1, sub1), &ty::TyAdt(def2, sub2)) => {\n                 let mut values = (DiagnosticStyledString::new(), DiagnosticStyledString::new());\n@@ -672,6 +686,50 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                      DiagnosticStyledString::highlighted(format!(\"{}\", t2)))\n                 }\n             }\n+\n+            // When finding T != &T, hightlight only the borrow\n+            (&ty::TyRef(_, ref tnm1), _) if equals(&tnm1.ty, &t2) => {\n+                let mut values = (DiagnosticStyledString::new(), DiagnosticStyledString::new());\n+                values.0.push_highlighted(format!(\"&{}\", if tnm1.mutbl == hir::MutMutable {\n+                    \"mut \"\n+                 } else {\n+                     \"\"\n+                 }));\n+                values.0.push_normal(format!(\"{}\", tnm1.ty));\n+                values.1.push_normal(format!(\"{}\", t2));\n+                values\n+            }\n+            (_, &ty::TyRef(_, ref tnm2)) if equals(&t1, &tnm2.ty) => {\n+                let mut values = (DiagnosticStyledString::new(), DiagnosticStyledString::new());\n+                values.1.push_highlighted(format!(\"&{}\", if tnm2.mutbl == hir::MutMutable {\n+                    \"mut \"\n+                 } else {\n+                     \"\"\n+                 }));\n+                values.0.push_normal(format!(\"{}\", t1));\n+                values.1.push_normal(format!(\"{}\", tnm2.ty));\n+                values\n+            }\n+\n+            // When encountering &T != &mut T, highlight only the borrow\n+            (&ty::TyRef(_, ref tnm1), &ty::TyRef(_, ref tnm2)) if equals(&tnm1.ty, &tnm2.ty) => {\n+                let mut values = (DiagnosticStyledString::new(), DiagnosticStyledString::new());\n+                values.0.push_highlighted(format!(\"&{}\", if tnm1.mutbl == hir::MutMutable {\n+                    \"mut \"\n+                 } else {\n+                     \"\"\n+                 }));\n+                values.1.push_highlighted(format!(\"&{}\", if tnm2.mutbl == hir::MutMutable {\n+                    \"mut \"\n+                 } else {\n+                     \"\"\n+                 }));\n+\n+                values.0.push_normal(format!(\"{}\", tnm1.ty));\n+                values.1.push_normal(format!(\"{}\", tnm2.ty));\n+                values\n+            }\n+\n             _ => {\n                 if t1 == t2 {\n                     // The two types are the same, elide and don't highlight."}]}