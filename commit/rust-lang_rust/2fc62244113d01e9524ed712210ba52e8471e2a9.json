{"sha": "2fc62244113d01e9524ed712210ba52e8471e2a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmYzYyMjQ0MTEzZDAxZTk1MjRlZDcxMjIxMGJhNTJlODQ3MWUyYTk=", "commit": {"author": {"name": "Ivan Petkov", "email": "ivanppetkov@gmail.com", "date": "2015-02-28T21:56:37Z"}, "committer": {"name": "Ivan Petkov", "email": "ivanppetkov@gmail.com", "date": "2015-02-28T21:56:37Z"}, "message": "Rename LintPass::check_trait_method to check_trait_item\n\nTraits can have associated types and not just methods. This\nclarification reflects the the type of the input the method accepts.\n\n[breaking-change]", "tree": {"sha": "642c2b1f9d2327410afd551e912a61065674abe9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/642c2b1f9d2327410afd551e912a61065674abe9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fc62244113d01e9524ed712210ba52e8471e2a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fc62244113d01e9524ed712210ba52e8471e2a9", "html_url": "https://github.com/rust-lang/rust/commit/2fc62244113d01e9524ed712210ba52e8471e2a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fc62244113d01e9524ed712210ba52e8471e2a9/comments", "author": {"login": "ipetkov", "id": 1638690, "node_id": "MDQ6VXNlcjE2Mzg2OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1638690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ipetkov", "html_url": "https://github.com/ipetkov", "followers_url": "https://api.github.com/users/ipetkov/followers", "following_url": "https://api.github.com/users/ipetkov/following{/other_user}", "gists_url": "https://api.github.com/users/ipetkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ipetkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ipetkov/subscriptions", "organizations_url": "https://api.github.com/users/ipetkov/orgs", "repos_url": "https://api.github.com/users/ipetkov/repos", "events_url": "https://api.github.com/users/ipetkov/events{/privacy}", "received_events_url": "https://api.github.com/users/ipetkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ipetkov", "id": 1638690, "node_id": "MDQ6VXNlcjE2Mzg2OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1638690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ipetkov", "html_url": "https://github.com/ipetkov", "followers_url": "https://api.github.com/users/ipetkov/followers", "following_url": "https://api.github.com/users/ipetkov/following{/other_user}", "gists_url": "https://api.github.com/users/ipetkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ipetkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ipetkov/subscriptions", "organizations_url": "https://api.github.com/users/ipetkov/orgs", "repos_url": "https://api.github.com/users/ipetkov/repos", "events_url": "https://api.github.com/users/ipetkov/events{/privacy}", "received_events_url": "https://api.github.com/users/ipetkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "890293655251c372ea99694c0c9f0795e2663286", "url": "https://api.github.com/repos/rust-lang/rust/commits/890293655251c372ea99694c0c9f0795e2663286", "html_url": "https://github.com/rust-lang/rust/commit/890293655251c372ea99694c0c9f0795e2663286"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f635c77af9b2a1053bbc5d05f619b81d8ab60ae8", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2fc62244113d01e9524ed712210ba52e8471e2a9/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fc62244113d01e9524ed712210ba52e8471e2a9/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=2fc62244113d01e9524ed712210ba52e8471e2a9", "patch": "@@ -612,7 +612,7 @@ impl<'a, 'tcx, 'v> Visitor<'v> for Context<'a, 'tcx> {\n     }\n \n     fn visit_trait_item(&mut self, m: &ast::TraitItem) {\n-        run_lints!(self, check_trait_method, m);\n+        run_lints!(self, check_trait_item, m);\n         visit::walk_trait_item(self, m);\n     }\n "}, {"sha": "506d20133bdc78e8679f1dd8253b7284cedea232", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2fc62244113d01e9524ed712210ba52e8471e2a9/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fc62244113d01e9524ed712210ba52e8471e2a9/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=2fc62244113d01e9524ed712210ba52e8471e2a9", "patch": "@@ -144,7 +144,7 @@ pub trait LintPass {\n     fn check_fn(&mut self, _: &Context,\n         _: FnKind, _: &ast::FnDecl, _: &ast::Block, _: Span, _: ast::NodeId) { }\n     fn check_ty_method(&mut self, _: &Context, _: &ast::TypeMethod) { }\n-    fn check_trait_method(&mut self, _: &Context, _: &ast::TraitItem) { }\n+    fn check_trait_item(&mut self, _: &Context, _: &ast::TraitItem) { }\n     fn check_struct_def(&mut self, _: &Context,\n         _: &ast::StructDef, _: ast::Ident, _: &ast::Generics, _: ast::NodeId) { }\n     fn check_struct_def_post(&mut self, _: &Context,"}, {"sha": "4785cde1456180f76703e07b23fc06dcc5e390d2", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2fc62244113d01e9524ed712210ba52e8471e2a9/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fc62244113d01e9524ed712210ba52e8471e2a9/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=2fc62244113d01e9524ed712210ba52e8471e2a9", "patch": "@@ -1577,7 +1577,7 @@ impl LintPass for MissingDoc {\n                                      tm.span, \"a type method\");\n     }\n \n-    fn check_trait_method(&mut self, cx: &Context, it: &ast::TraitItem) {\n+    fn check_trait_item(&mut self, cx: &Context, it: &ast::TraitItem) {\n         if let ast::TraitItem::TypeTraitItem(ref ty) = *it {\n             let assoc_ty = &ty.ty_param;\n             self.check_missing_docs_attrs(cx, Some(assoc_ty.id), &ty.attrs,"}]}