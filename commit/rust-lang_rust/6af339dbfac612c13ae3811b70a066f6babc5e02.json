{"sha": "6af339dbfac612c13ae3811b70a066f6babc5e02", "node_id": "C_kwDOAAsO6NoAKDZhZjMzOWRiZmFjNjEyYzEzYWUzODExYjcwYTA2NmY2YmFiYzVlMDI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-03T07:31:33Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-04T00:43:13Z"}, "message": "rename find_parent_node to opt_parent_id", "tree": {"sha": "b374cbdd0fa418aa5f0ac12ed0eafe0a86f70f2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b374cbdd0fa418aa5f0ac12ed0eafe0a86f70f2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6af339dbfac612c13ae3811b70a066f6babc5e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6af339dbfac612c13ae3811b70a066f6babc5e02", "html_url": "https://github.com/rust-lang/rust/commit/6af339dbfac612c13ae3811b70a066f6babc5e02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6af339dbfac612c13ae3811b70a066f6babc5e02/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a313ef05a78330ac342cddf819214cb6414164e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a313ef05a78330ac342cddf819214cb6414164e2", "html_url": "https://github.com/rust-lang/rust/commit/a313ef05a78330ac342cddf819214cb6414164e2"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "0a90572d39e30cec6545b4124ea30dd5820e3cba", "filename": "compiler/rustc_const_eval/src/transform/check_consts/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6af339dbfac612c13ae3811b70a066f6babc5e02/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af339dbfac612c13ae3811b70a066f6babc5e02/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs?ref=6af339dbfac612c13ae3811b70a066f6babc5e02", "patch": "@@ -115,7 +115,7 @@ fn is_parent_const_stable_trait(tcx: TyCtxt<'_>, def_id: DefId) -> bool {\n     let local_def_id = def_id.expect_local();\n     let hir_id = tcx.local_def_id_to_hir_id(local_def_id);\n \n-    let Some(parent) = tcx.hir().find_parent_node(hir_id) else { return false };\n+    let Some(parent) = tcx.hir().opt_parent_id(hir_id) else { return false };\n     let parent_def = tcx.hir().get(parent);\n \n     if !matches!("}, {"sha": "3df8f776eded66e41a1024e1162d2aa7b0318329", "filename": "compiler/rustc_hir_analysis/src/structured_errors/wrong_number_of_generic_args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6af339dbfac612c13ae3811b70a066f6babc5e02/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af339dbfac612c13ae3811b70a066f6babc5e02/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs?ref=6af339dbfac612c13ae3811b70a066f6babc5e02", "patch": "@@ -716,7 +716,7 @@ impl<'a, 'tcx> WrongNumberOfGenericArgs<'a, 'tcx> {\n             num = num_trait_generics_except_self,\n         );\n \n-        if let Some(parent_node) = self.tcx.hir().find_parent_node(self.path_segment.hir_id)\n+        if let Some(parent_node) = self.tcx.hir().opt_parent_id(self.path_segment.hir_id)\n         && let Some(parent_node) = self.tcx.hir().find(parent_node)\n         && let hir::Node::Expr(expr) = parent_node {\n             match expr.kind {"}, {"sha": "7b66422cce67495222f76cc538eec151c56a614e", "filename": "compiler/rustc_hir_typeck/src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6af339dbfac612c13ae3811b70a066f6babc5e02/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af339dbfac612c13ae3811b70a066f6babc5e02/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs?ref=6af339dbfac612c13ae3811b70a066f6babc5e02", "patch": "@@ -943,7 +943,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 }) => {\n                     // Check if our original expression is a child of the condition of a while loop\n                     let expr_is_ancestor = std::iter::successors(Some(original_expr_id), |id| {\n-                        self.tcx.hir().find_parent_node(*id)\n+                        self.tcx.hir().opt_parent_id(*id)\n                     })\n                     .take_while(|id| *id != parent)\n                     .any(|id| id == expr.hir_id);"}, {"sha": "472205be7b5e3e81a96f1438b97d6865a691786c", "filename": "compiler/rustc_hir_typeck/src/generator_interior/drop_ranges/record_consumed_borrow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6af339dbfac612c13ae3811b70a066f6babc5e02/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af339dbfac612c13ae3811b70a066f6babc5e02/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs?ref=6af339dbfac612c13ae3811b70a066f6babc5e02", "patch": "@@ -140,7 +140,7 @@ impl<'tcx> expr_use_visitor::Delegate<'tcx> for ExprUseDelegate<'tcx> {\n         diag_expr_id: HirId,\n     ) {\n         let hir = self.tcx.hir();\n-        let parent = match hir.find_parent_node(place_with_id.hir_id) {\n+        let parent = match hir.opt_parent_id(place_with_id.hir_id) {\n             Some(parent) => parent,\n             None => place_with_id.hir_id,\n         };"}, {"sha": "65a49a5fe85eea1e66c84ce4dd17d041719f640b", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6af339dbfac612c13ae3811b70a066f6babc5e02/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af339dbfac612c13ae3811b70a066f6babc5e02/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=6af339dbfac612c13ae3811b70a066f6babc5e02", "patch": "@@ -298,7 +298,7 @@ impl<'hir> Map<'hir> {\n     /// Finds the id of the parent node to this one.\n     ///\n     /// If calling repeatedly and iterating over parents, prefer [`Map::parent_iter`].\n-    pub fn find_parent_node(self, id: HirId) -> Option<HirId> {\n+    pub fn opt_parent_id(self, id: HirId) -> Option<HirId> {\n         if id.local_id == ItemLocalId::from_u32(0) {\n             Some(self.tcx.hir_owner_parent(id.owner))\n         } else {\n@@ -313,7 +313,7 @@ impl<'hir> Map<'hir> {\n \n     #[track_caller]\n     pub fn parent_id(self, hir_id: HirId) -> HirId {\n-        self.find_parent_node(hir_id)\n+        self.opt_parent_id(hir_id)\n             .unwrap_or_else(|| bug!(\"No parent for node {:?}\", self.node_to_string(hir_id)))\n     }\n "}, {"sha": "14bdff4568f5e65f8e1fd4c6355bdaf89a4ae4d2", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6af339dbfac612c13ae3811b70a066f6babc5e02/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af339dbfac612c13ae3811b70a066f6babc5e02/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=6af339dbfac612c13ae3811b70a066f6babc5e02", "patch": "@@ -2506,7 +2506,7 @@ impl<'tcx> ConstantKind<'tcx> {\n         }\n \n         let hir_id = tcx.hir().local_def_id_to_hir_id(def.did);\n-        let parent_substs = if let Some(parent_hir_id) = tcx.hir().find_parent_node(hir_id) {\n+        let parent_substs = if let Some(parent_hir_id) = tcx.hir().opt_parent_id(hir_id) {\n             if let Some(parent_did) = tcx.hir().opt_local_def_id(parent_hir_id) {\n                 InternalSubsts::identity_for_item(tcx, parent_did.to_def_id())\n             } else {"}, {"sha": "6aa2dda980cf31a14a41f014c76805a3c7692eeb", "filename": "src/librustdoc/passes/check_doc_test_visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6af339dbfac612c13ae3811b70a066f6babc5e02/src%2Flibrustdoc%2Fpasses%2Fcheck_doc_test_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af339dbfac612c13ae3811b70a066f6babc5e02/src%2Flibrustdoc%2Fpasses%2Fcheck_doc_test_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcheck_doc_test_visibility.rs?ref=6af339dbfac612c13ae3811b70a066f6babc5e02", "patch": "@@ -82,7 +82,7 @@ pub(crate) fn should_have_doc_example(cx: &DocContext<'_>, item: &clean::Item) -\n     let hir_id = cx.tcx.hir().local_def_id_to_hir_id(item.item_id.expect_def_id().expect_local());\n \n     // check if parent is trait impl\n-    if let Some(parent_hir_id) = cx.tcx.hir().find_parent_node(hir_id) {\n+    if let Some(parent_hir_id) = cx.tcx.hir().opt_parent_id(hir_id) {\n         if let Some(parent_node) = cx.tcx.hir().find(parent_hir_id) {\n             if matches!(\n                 parent_node,"}, {"sha": "27cc5a1c3f04c5e53fc4008a18e611a2677035e2", "filename": "src/tools/clippy/clippy_lints/src/casts/cast_slice_different_sizes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6af339dbfac612c13ae3811b70a066f6babc5e02/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fcasts%2Fcast_slice_different_sizes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af339dbfac612c13ae3811b70a066f6babc5e02/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fcasts%2Fcast_slice_different_sizes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fcasts%2Fcast_slice_different_sizes.rs?ref=6af339dbfac612c13ae3811b70a066f6babc5e02", "patch": "@@ -68,7 +68,7 @@ pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &Expr<'tcx>, msrv: &Msrv\n fn is_child_of_cast(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n     let map = cx.tcx.hir();\n     if_chain! {\n-        if let Some(parent_id) = map.find_parent_node(expr.hir_id);\n+        if let Some(parent_id) = map.opt_parent_id(expr.hir_id);\n         if let Some(parent) = map.find(parent_id);\n         then {\n             let expr = match parent {"}]}