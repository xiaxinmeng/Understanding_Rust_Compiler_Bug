{"sha": "4a8b0ca2748509d7a5156a5ac30ccccab7cdd906", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhOGIwY2EyNzQ4NTA5ZDdhNTE1NmE1YWMzMGNjY2NhYjdjZGQ5MDY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-11-24T13:56:51Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-11-24T13:56:51Z"}, "message": "Correctly align returned addr for to_addr on NoPlace", "tree": {"sha": "5f13b3f6d11de2062d839e1a8573a38ee1f1767c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f13b3f6d11de2062d839e1a8573a38ee1f1767c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a8b0ca2748509d7a5156a5ac30ccccab7cdd906", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a8b0ca2748509d7a5156a5ac30ccccab7cdd906", "html_url": "https://github.com/rust-lang/rust/commit/4a8b0ca2748509d7a5156a5ac30ccccab7cdd906", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a8b0ca2748509d7a5156a5ac30ccccab7cdd906/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc826a75257b528d0a555d470c8abb0aadc84da0", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc826a75257b528d0a555d470c8abb0aadc84da0", "html_url": "https://github.com/rust-lang/rust/commit/fc826a75257b528d0a555d470c8abb0aadc84da0"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "142795a91eb5013a2f2d902ed8c71e80e7f22166", "filename": "src/value_and_place.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4a8b0ca2748509d7a5156a5ac30ccccab7cdd906/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a8b0ca2748509d7a5156a5ac30ccccab7cdd906/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=4a8b0ca2748509d7a5156a5ac30ccccab7cdd906", "patch": "@@ -334,7 +334,15 @@ impl<'tcx> CPlace<'tcx> {\n                 fx.bcx.ins().stack_addr(fx.pointer_type, stack_slot, 0),\n                 None,\n             ),\n-            CPlaceInner::NoPlace => (fx.bcx.ins().iconst(fx.pointer_type, 45), None),\n+            CPlaceInner::NoPlace => {\n+                (\n+                    fx.bcx.ins().iconst(\n+                        fx.pointer_type,\n+                        i64::try_from(self.layout.align.pref.bytes()).unwrap(),\n+                    ),\n+                    None\n+                )\n+            }\n             CPlaceInner::Var(_) => bug!(\"Expected CPlace::Addr, found CPlace::Var\"),\n         }\n     }"}]}