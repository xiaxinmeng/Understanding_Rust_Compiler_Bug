{"sha": "1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExMDNmZThjYTA1ZjkwNDg1OTliNTZhYjJkOWI5OWJhNmRlOGExZjI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-07T23:14:10Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-07T23:14:10Z"}, "message": "Remove native \"rust\" ABI", "tree": {"sha": "f4c93dd891519ff151c7ba1ec5f86aa1d89892be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4c93dd891519ff151c7ba1ec5f86aa1d89892be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2", "html_url": "https://github.com/rust-lang/rust/commit/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0c2416270502c124e031b5e86a74cb14eff7662", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0c2416270502c124e031b5e86a74cb14eff7662", "html_url": "https://github.com/rust-lang/rust/commit/b0c2416270502c124e031b5e86a74cb14eff7662"}], "stats": {"total": 15, "additions": 2, "deletions": 13}, "files": [{"sha": "0764d54d616a7f7234a48785bca7adf743010764", "filename": "src/comp/metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Fcomp%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Fcomp%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcreader.rs?ref=1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2", "patch": "@@ -51,7 +51,7 @@ fn visit_view_item(e: env, i: @ast::view_item) {\n fn visit_item(e: env, i: @ast::item) {\n     alt i.node {\n       ast::item_native_mod(m) {\n-        if m.abi != ast::native_abi_rust && m.abi != ast::native_abi_cdecl &&\n+        if m.abi != ast::native_abi_cdecl &&\n                 m.abi != ast::native_abi_c_stack_cdecl &&\n                 m.abi != ast::native_abi_c_stack_stdcall {\n             ret;"}, {"sha": "d6aa9e5d25a66a21abc72c0a2367e59ea2216650", "filename": "src/comp/metadata/tydecode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftydecode.rs?ref=1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2", "patch": "@@ -259,7 +259,6 @@ fn parse_ty(st: @pstate, sd: str_def) -> ty::t {\n       'N' {\n         let abi;\n         alt next(st) as char {\n-          'r' { abi = ast::native_abi_rust; }\n           'i' { abi = ast::native_abi_rust_intrinsic; }\n           'c' { abi = ast::native_abi_cdecl; }\n           'l' { abi = ast::native_abi_llvm; }"}, {"sha": "b074b878876e2e190114217fbb31dd860e75361a", "filename": "src/comp/metadata/tyencode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftyencode.rs?ref=1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2", "patch": "@@ -142,7 +142,6 @@ fn enc_sty(w: io::writer, cx: @ctxt, st: ty::sty) {\n       ty::ty_native_fn(abi, args, out) {\n         w.write_char('N');\n         alt abi {\n-          native_abi_rust. { w.write_char('r'); }\n           native_abi_rust_intrinsic. { w.write_char('i'); }\n           native_abi_cdecl. { w.write_char('c'); }\n           native_abi_llvm. { w.write_char('l'); }"}, {"sha": "779ea48672c6d9331b9f8012eb955d72a44cfa7e", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2", "patch": "@@ -5531,7 +5531,7 @@ fn native_fn_ty_param_count(cx: @crate_ctxt, id: ast::node_id) -> uint {\n \n pure fn native_abi_requires_pair(abi: ast::native_abi) -> bool {\n     alt abi {\n-        ast::native_abi_rust. | ast::native_abi_cdecl. |\n+        ast::native_abi_cdecl. |\n         ast::native_abi_llvm. | ast::native_abi_rust_intrinsic. |\n         ast::native_abi_x86stdcall. { ret true; }\n         ast::native_abi_c_stack_cdecl. |\n@@ -5571,11 +5571,6 @@ fn register_native_fn(ccx: @crate_ctxt, sp: span, path: [str], name: str,\n     let uses_retptr;\n     let cast_to_i32;\n     alt abi {\n-      ast::native_abi_rust. {\n-        pass_task = false;\n-        uses_retptr = false;\n-        cast_to_i32 = true;\n-      }\n       ast::native_abi_rust_intrinsic. {\n         pass_task = true;\n         uses_retptr = true;"}, {"sha": "03b8872adc7e7ffa5271d70ed3fe27bbf1ba6c4e", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2", "patch": "@@ -426,7 +426,6 @@ type anon_obj =\n type _mod = {view_items: [@view_item], items: [@item]};\n \n tag native_abi {\n-    native_abi_rust;\n     native_abi_cdecl;\n     native_abi_llvm;\n     native_abi_rust_intrinsic;"}, {"sha": "3fff03addfd479e61953fd59ced75ef1c499e1dd", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2", "patch": "@@ -2007,8 +2007,6 @@ fn parse_item_native_mod(p: parser, attrs: [ast::attribute]) -> @ast::item {\n     if !is_word(p, \"mod\") {\n         let t = parse_str(p);\n         if str::eq(t, \"cdecl\") {\n-        } else if str::eq(t, \"rust\") {\n-            abi = ast::native_abi_rust;\n         } else if str::eq(t, \"llvm\") {\n             abi = ast::native_abi_llvm;\n         } else if str::eq(t, \"rust-intrinsic\") {"}, {"sha": "9e447b5c4bfd0fc01d1caa5515ba35371f3b0d80", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=1103fe8ca05f9048599b56ab2d9b99ba6de8a1f2", "patch": "@@ -402,7 +402,6 @@ fn print_item(s: ps, &&item: @ast::item) {\n         head(s, \"native\");\n         alt nmod.abi {\n           ast::native_abi_llvm. { word_nbsp(s, \"\\\"llvm\\\"\"); }\n-          ast::native_abi_rust. { word_nbsp(s, \"\\\"rust\\\"\"); }\n           ast::native_abi_cdecl. { word_nbsp(s, \"\\\"cdecl\\\"\"); }\n           ast::native_abi_rust_intrinsic. {\n             word_nbsp(s, \"\\\"rust-intrinsic\\\"\");"}]}