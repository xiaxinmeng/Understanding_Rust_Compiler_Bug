{"sha": "4befde1eee5b1e2b7ddc9bf764b77f82b792c318", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZWZkZTFlZWU1YjFlMmI3ZGRjOWJmNzY0Yjc3ZjgyYjc5MmMzMTg=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2018-12-24T14:36:54Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2018-12-24T14:36:54Z"}, "message": "Change inference tests to have one per file", "tree": {"sha": "1183f4812a9f98b3df5a936b49e09f639ea309b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1183f4812a9f98b3df5a936b49e09f639ea309b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4befde1eee5b1e2b7ddc9bf764b77f82b792c318", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4befde1eee5b1e2b7ddc9bf764b77f82b792c318", "html_url": "https://github.com/rust-lang/rust/commit/4befde1eee5b1e2b7ddc9bf764b77f82b792c318", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4befde1eee5b1e2b7ddc9bf764b77f82b792c318/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "655f5bc26190b94e237dcc485e405de0d192e6ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/655f5bc26190b94e237dcc485e405de0d192e6ab", "html_url": "https://github.com/rust-lang/rust/commit/655f5bc26190b94e237dcc485e405de0d192e6ab"}], "stats": {"total": 147, "additions": 92, "deletions": 55}, "files": [{"sha": "b6c02cd80c2bbed09c6f33578e92fc65fdf18cde", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 76, "deletions": 13, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/4befde1eee5b1e2b7ddc9bf764b77f82b792c318/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4befde1eee5b1e2b7ddc9bf764b77f82b792c318/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=4befde1eee5b1e2b7ddc9bf764b77f82b792c318", "patch": "@@ -1,19 +1,74 @@\n use std::fmt::Write;\n-use std::path::{PathBuf};\n-use std::sync::Once;\n-\n-use flexi_logger::Logger;\n+use std::path::{PathBuf, Path};\n+use std::fs;\n \n use ra_db::{SyntaxDatabase};\n use ra_syntax::ast::{self, AstNode};\n-use test_utils::{project_dir, dir_tests};\n+use test_utils::{project_dir, assert_eq_text, read_text};\n \n use crate::{\n     source_binder,\n     mock::MockDatabase,\n };\n \n-fn infer_file(content: &str) -> String {\n+// These tests compare the inference results for all expressions in a file\n+// against snapshots of the current results. If you change something and these\n+// tests fail expectedly, you can update the comparison files by deleting them\n+// and running the tests again. Similarly, to add a new test, just write the\n+// test here in the same pattern and it will automatically write the snapshot.\n+\n+#[test]\n+fn infer_basics() {\n+    check_inference(\n+        r#\"\n+fn test(a: u32, b: isize, c: !, d: &str) {\n+    a;\n+    b;\n+    c;\n+    d;\n+    1usize;\n+    1isize;\n+    \"test\";\n+    1.0f32;\n+}\"#,\n+        \"0001_basics.txt\",\n+    );\n+}\n+\n+#[test]\n+fn infer_let() {\n+    check_inference(\n+        r#\"\n+fn test() {\n+    let a = 1isize;\n+    let b: usize = 1;\n+    let c = b;\n+}\n+}\"#,\n+        \"0002_let.txt\",\n+    );\n+}\n+\n+#[test]\n+fn infer_paths() {\n+    check_inference(\n+        r#\"\n+fn a() -> u32 { 1 }\n+\n+mod b {\n+    fn c() -> u32 { 1 }\n+}\n+\n+fn test() {\n+    a();\n+    b::c();\n+}\n+}\"#,\n+        \"0003_paths.txt\",\n+    );\n+}\n+\n+fn infer(content: &str) -> String {\n     let (db, _, file_id) = MockDatabase::with_single_file(content);\n     let source_file = db.source_file(file_id);\n     let mut acc = String::new();\n@@ -41,6 +96,21 @@ fn infer_file(content: &str) -> String {\n     acc\n }\n \n+fn check_inference(content: &str, data_file: impl AsRef<Path>) {\n+    let data_file_path = test_data_dir().join(data_file);\n+    let result = infer(content);\n+\n+    if !data_file_path.exists() {\n+        println!(\"File with expected result doesn't exist, creating...\\n\");\n+        println!(\"{}\\n{}\", content, result);\n+        fs::write(&data_file_path, &result).unwrap();\n+        panic!(\"File {:?} with expected result was created\", data_file_path);\n+    }\n+\n+    let expected = read_text(&data_file_path);\n+    assert_eq_text!(&expected, &result);\n+}\n+\n fn ellipsize(mut text: String, max_len: usize) -> String {\n     if text.len() <= max_len {\n         return text;\n@@ -59,13 +129,6 @@ fn ellipsize(mut text: String, max_len: usize) -> String {\n     text\n }\n \n-#[test]\n-pub fn infer_tests() {\n-    static INIT: Once = Once::new();\n-    INIT.call_once(|| Logger::with_env().start().unwrap());\n-    dir_tests(&test_data_dir(), &[\".\"], |text, _path| infer_file(text));\n-}\n-\n fn test_data_dir() -> PathBuf {\n     project_dir().join(\"crates/ra_hir/src/ty/tests/data\")\n }"}, {"sha": "59a60d0313da7f3d11b7d74a96af31f245ed36e0", "filename": "crates/ra_hir/src/ty/tests/data/0001_basics.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/655f5bc26190b94e237dcc485e405de0d192e6ab/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0001_basics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/655f5bc26190b94e237dcc485e405de0d192e6ab/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0001_basics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0001_basics.rs?ref=655f5bc26190b94e237dcc485e405de0d192e6ab", "patch": "@@ -1,11 +0,0 @@\n-\n-fn test(a: u32, b: isize, c: !, d: &str) {\n-    a;\n-    b;\n-    c;\n-    d;\n-    1usize;\n-    1isize;\n-    \"test\";\n-    1.0f32;\n-}"}, {"sha": "5641da75b708932a58a742d112eaee82a75a4ba9", "filename": "crates/ra_hir/src/ty/tests/data/0002_let.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/655f5bc26190b94e237dcc485e405de0d192e6ab/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0002_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/655f5bc26190b94e237dcc485e405de0d192e6ab/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0002_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0002_let.rs?ref=655f5bc26190b94e237dcc485e405de0d192e6ab", "patch": "@@ -1,5 +0,0 @@\n-fn test() {\n-    let a = 1isize;\n-    let b: usize = 1;\n-    let c = b;\n-}"}, {"sha": "2d0d1f57b3fad925721bd7a7eed828a84171ce08", "filename": "crates/ra_hir/src/ty/tests/data/0002_let.txt", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4befde1eee5b1e2b7ddc9bf764b77f82b792c318/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0002_let.txt", "raw_url": "https://github.com/rust-lang/rust/raw/4befde1eee5b1e2b7ddc9bf764b77f82b792c318/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0002_let.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0002_let.txt?ref=4befde1eee5b1e2b7ddc9bf764b77f82b792c318", "patch": "@@ -1,7 +1,7 @@\n-[51; 52) '1': [unknown]\n-[10; 70) '{     ...= b; }': ()\n-[24; 30) '1isize': [unknown]\n-[20; 21) 'a': [unknown]\n-[62; 63) 'c': usize\n-[66; 67) 'b': usize\n-[40; 41) 'b': usize\n+[21; 22) 'a': [unknown]\n+[52; 53) '1': [unknown]\n+[11; 71) '{     ...= b; }': ()\n+[63; 64) 'c': usize\n+[25; 31) '1isize': [unknown]\n+[41; 42) 'b': usize\n+[67; 68) 'b': usize"}, {"sha": "e8b11198bbca03f8d613427aa7da05e3a15dde71", "filename": "crates/ra_hir/src/ty/tests/data/0003_paths.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/655f5bc26190b94e237dcc485e405de0d192e6ab/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0003_paths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/655f5bc26190b94e237dcc485e405de0d192e6ab/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0003_paths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0003_paths.rs?ref=655f5bc26190b94e237dcc485e405de0d192e6ab", "patch": "@@ -1,10 +0,0 @@\n-fn a() -> u32 { 1 }\n-\n-mod b {\n-    fn c() -> u32 { 1 }\n-}\n-\n-fn test() {\n-    a();\n-    b::c();\n-}"}, {"sha": "dcb5456ae36d2b6254a35504c01fadc01e5381e8", "filename": "crates/ra_hir/src/ty/tests/data/0003_paths.txt", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4befde1eee5b1e2b7ddc9bf764b77f82b792c318/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0003_paths.txt", "raw_url": "https://github.com/rust-lang/rust/raw/4befde1eee5b1e2b7ddc9bf764b77f82b792c318/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0003_paths.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests%2Fdata%2F0003_paths.txt?ref=4befde1eee5b1e2b7ddc9bf764b77f82b792c318", "patch": "@@ -1,9 +1,9 @@\n-[16; 17) '1': [unknown]\n-[14; 19) '{ 1 }': [unknown]\n-[47; 52) '{ 1 }': [unknown]\n-[49; 50) '1': [unknown]\n-[81; 87) 'b::c()': u32\n-[66; 90) '{     ...c(); }': ()\n-[72; 73) 'a': fn() -> u32\n-[72; 75) 'a()': u32\n-[81; 85) 'b::c': fn() -> u32\n+[15; 20) '{ 1 }': [unknown]\n+[17; 18) '1': [unknown]\n+[50; 51) '1': [unknown]\n+[48; 53) '{ 1 }': [unknown]\n+[82; 88) 'b::c()': u32\n+[67; 91) '{     ...c(); }': ()\n+[73; 74) 'a': fn() -> u32\n+[73; 76) 'a()': u32\n+[82; 86) 'b::c': fn() -> u32"}]}