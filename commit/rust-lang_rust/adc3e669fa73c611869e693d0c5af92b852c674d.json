{"sha": "adc3e669fa73c611869e693d0c5af92b852c674d", "node_id": "C_kwDOAAsO6NoAKGFkYzNlNjY5ZmE3M2M2MTE4NjllNjkzZDBjNWFmOTJiODUyYzY3NGQ", "commit": {"author": {"name": "Andrew Archibald", "email": "andrew@aarchibald.com", "date": "2022-01-13T20:20:30Z"}, "committer": {"name": "Andrew Archibald", "email": "andrew@aarchibald.com", "date": "2022-01-13T20:20:30Z"}, "message": "Escape pipes in Markdown tables", "tree": {"sha": "dff3f628e24f53fdb3332652b15cf1a455b9ef81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dff3f628e24f53fdb3332652b15cf1a455b9ef81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adc3e669fa73c611869e693d0c5af92b852c674d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adc3e669fa73c611869e693d0c5af92b852c674d", "html_url": "https://github.com/rust-lang/rust/commit/adc3e669fa73c611869e693d0c5af92b852c674d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adc3e669fa73c611869e693d0c5af92b852c674d/comments", "author": {"login": "thaliaarchi", "id": 8071784, "node_id": "MDQ6VXNlcjgwNzE3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8071784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thaliaarchi", "html_url": "https://github.com/thaliaarchi", "followers_url": "https://api.github.com/users/thaliaarchi/followers", "following_url": "https://api.github.com/users/thaliaarchi/following{/other_user}", "gists_url": "https://api.github.com/users/thaliaarchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/thaliaarchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thaliaarchi/subscriptions", "organizations_url": "https://api.github.com/users/thaliaarchi/orgs", "repos_url": "https://api.github.com/users/thaliaarchi/repos", "events_url": "https://api.github.com/users/thaliaarchi/events{/privacy}", "received_events_url": "https://api.github.com/users/thaliaarchi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thaliaarchi", "id": 8071784, "node_id": "MDQ6VXNlcjgwNzE3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8071784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thaliaarchi", "html_url": "https://github.com/thaliaarchi", "followers_url": "https://api.github.com/users/thaliaarchi/followers", "following_url": "https://api.github.com/users/thaliaarchi/following{/other_user}", "gists_url": "https://api.github.com/users/thaliaarchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/thaliaarchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thaliaarchi/subscriptions", "organizations_url": "https://api.github.com/users/thaliaarchi/orgs", "repos_url": "https://api.github.com/users/thaliaarchi/repos", "events_url": "https://api.github.com/users/thaliaarchi/events{/privacy}", "received_events_url": "https://api.github.com/users/thaliaarchi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cada57f306ee47ee4e9a78008798d734ff7b9d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cada57f306ee47ee4e9a78008798d734ff7b9d7", "html_url": "https://github.com/rust-lang/rust/commit/5cada57f306ee47ee4e9a78008798d734ff7b9d7"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "ca4af66cad16bd48d474490af53d9c06ffc82a87", "filename": "clippy_lints/src/bit_mask.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/adc3e669fa73c611869e693d0c5af92b852c674d/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adc3e669fa73c611869e693d0c5af92b852c674d/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=adc3e669fa73c611869e693d0c5af92b852c674d", "patch": "@@ -18,14 +18,14 @@ declare_clippy_lint! {\n     /// {`!=`, `>=`, `>`, `!=`, `>=`, `>`}) can be determined from the following\n     /// table:\n     ///\n-    /// |Comparison  |Bit Op|Example     |is always|Formula               |\n-    /// |------------|------|------------|---------|----------------------|\n-    /// |`==` or `!=`| `&`  |`x & 2 == 3`|`false`  |`c & m != c`          |\n-    /// |`<`  or `>=`| `&`  |`x & 2 < 3` |`true`   |`m < c`               |\n-    /// |`>`  or `<=`| `&`  |`x & 1 > 1` |`false`  |`m <= c`              |\n-    /// |`==` or `!=`| `|`  |`x | 1 == 0`|`false`  |`c | m != c`          |\n-    /// |`<`  or `>=`| `|`  |`x | 1 < 1` |`false`  |`m >= c`              |\n-    /// |`<=` or `>` | `|`  |`x | 1 > 0` |`true`   |`m > c`               |\n+    /// |Comparison  |Bit Op|Example      |is always|Formula               |\n+    /// |------------|------|-------------|---------|----------------------|\n+    /// |`==` or `!=`| `&`  |`x & 2 == 3` |`false`  |`c & m != c`          |\n+    /// |`<`  or `>=`| `&`  |`x & 2 < 3`  |`true`   |`m < c`               |\n+    /// |`>`  or `<=`| `&`  |`x & 1 > 1`  |`false`  |`m <= c`              |\n+    /// |`==` or `!=`| `\\|` |`x \\| 1 == 0`|`false`  |`c \\| m != c`         |\n+    /// |`<`  or `>=`| `\\|` |`x \\| 1 < 1` |`false`  |`m >= c`              |\n+    /// |`<=` or `>` | `\\|` |`x \\| 1 > 0` |`true`   |`m > c`               |\n     ///\n     /// ### Why is this bad?\n     /// If the bits that the comparison cares about are always\n@@ -53,10 +53,10 @@ declare_clippy_lint! {\n     /// without changing the outcome. The basic structure can be seen in the\n     /// following table:\n     ///\n-    /// |Comparison| Bit Op  |Example    |equals |\n-    /// |----------|---------|-----------|-------|\n-    /// |`>` / `<=`|`|` / `^`|`x | 2 > 3`|`x > 3`|\n-    /// |`<` / `>=`|`|` / `^`|`x ^ 1 < 4`|`x < 4`|\n+    /// |Comparison| Bit Op   |Example     |equals |\n+    /// |----------|----------|------------|-------|\n+    /// |`>` / `<=`|`\\|` / `^`|`x \\| 2 > 3`|`x > 3`|\n+    /// |`<` / `>=`|`\\|` / `^`|`x ^ 1 < 4` |`x < 4`|\n     ///\n     /// ### Why is this bad?\n     /// Not equally evil as [`bad_bit_mask`](#bad_bit_mask),"}]}