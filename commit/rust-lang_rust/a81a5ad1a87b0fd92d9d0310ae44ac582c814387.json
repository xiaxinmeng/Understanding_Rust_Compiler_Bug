{"sha": "a81a5ad1a87b0fd92d9d0310ae44ac582c814387", "node_id": "C_kwDOAAsO6NoAKGE4MWE1YWQxYTg3YjBmZDkyZDlkMDMxMGFlNDRhYzU4MmM4MTQzODc", "commit": {"author": {"name": "Yechan Bae", "email": "yechan@gatech.edu", "date": "2021-09-28T17:46:13Z"}, "committer": {"name": "Yechan Bae", "email": "yechan@gatech.edu", "date": "2021-10-01T18:04:20Z"}, "message": "Update documentation", "tree": {"sha": "38c78ad6ea4722a7e2cc3527a5b90d4229286b06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38c78ad6ea4722a7e2cc3527a5b90d4229286b06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a81a5ad1a87b0fd92d9d0310ae44ac582c814387", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a81a5ad1a87b0fd92d9d0310ae44ac582c814387", "html_url": "https://github.com/rust-lang/rust/commit/a81a5ad1a87b0fd92d9d0310ae44ac582c814387", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a81a5ad1a87b0fd92d9d0310ae44ac582c814387/comments", "author": {"login": "Qwaz", "id": 5073807, "node_id": "MDQ6VXNlcjUwNzM4MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5073807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qwaz", "html_url": "https://github.com/Qwaz", "followers_url": "https://api.github.com/users/Qwaz/followers", "following_url": "https://api.github.com/users/Qwaz/following{/other_user}", "gists_url": "https://api.github.com/users/Qwaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qwaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qwaz/subscriptions", "organizations_url": "https://api.github.com/users/Qwaz/orgs", "repos_url": "https://api.github.com/users/Qwaz/repos", "events_url": "https://api.github.com/users/Qwaz/events{/privacy}", "received_events_url": "https://api.github.com/users/Qwaz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Qwaz", "id": 5073807, "node_id": "MDQ6VXNlcjUwNzM4MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5073807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qwaz", "html_url": "https://github.com/Qwaz", "followers_url": "https://api.github.com/users/Qwaz/followers", "following_url": "https://api.github.com/users/Qwaz/following{/other_user}", "gists_url": "https://api.github.com/users/Qwaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qwaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qwaz/subscriptions", "organizations_url": "https://api.github.com/users/Qwaz/orgs", "repos_url": "https://api.github.com/users/Qwaz/repos", "events_url": "https://api.github.com/users/Qwaz/events{/privacy}", "received_events_url": "https://api.github.com/users/Qwaz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6458630e1aad3ef325b5839f5c3af665d837fa84", "url": "https://api.github.com/repos/rust-lang/rust/commits/6458630e1aad3ef325b5839f5c3af665d837fa84", "html_url": "https://github.com/rust-lang/rust/commit/6458630e1aad3ef325b5839f5c3af665d837fa84"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "d141cd2199f46d67e21cd7f7c550618abeaa683e", "filename": "clippy_lints/src/non_send_field_in_send_ty.rs", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a81a5ad1a87b0fd92d9d0310ae44ac582c814387/clippy_lints%2Fsrc%2Fnon_send_field_in_send_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a81a5ad1a87b0fd92d9d0310ae44ac582c814387/clippy_lints%2Fsrc%2Fnon_send_field_in_send_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_send_field_in_send_ty.rs?ref=a81a5ad1a87b0fd92d9d0310ae44ac582c814387", "patch": "@@ -12,31 +12,34 @@ declare_clippy_lint! {\n     /// Warns about a field in a `Send` struct that is neither `Send` nor `Copy`.\n     ///\n     /// ### Why is this bad?\n-    /// Sending the struct to another thread and drops it there will also drop\n-    /// the field in the new thread. This effectively changes the ownership of\n-    /// the field type to the new thread and creates a soundness issue by\n-    /// breaking the non-`Send` invariant.\n+    /// Sending the struct to another thread will transfer the ownership to\n+    /// the new thread by dropping in the current thread during the transfer.\n+    /// This causes soundness issues for non-`Send` fields, as they are also\n+    /// dropped and might not be set up to handle this.\n+    ///\n+    /// See:\n+    /// * [*The Rustonomicon* about *Send and Sync*](https://doc.rust-lang.org/nomicon/send-and-sync.html)\n+    /// * [The documentation of `Send`](https://doc.rust-lang.org/std/marker/trait.Send.html)\n     ///\n     /// ### Known Problems\n     /// Data structures that contain raw pointers may cause false positives.\n     /// They are sometimes safe to be sent across threads but do not implement\n     /// the `Send` trait. This lint has a heuristic to filter out basic cases\n-    /// such as `Vec<*const T>`, but it's not perfect.\n+    /// such as `Vec<*const T>`, but it's not perfect. Feel free to create an\n+    /// issue if you have a suggestion on how this heuristic can be improved.\n     ///\n     /// ### Example\n-    /// ```rust\n-    /// use std::sync::Arc;\n-    ///\n-    /// // There is no `RC: Send` bound here\n-    /// unsafe impl<RC, T: Send> Send for ArcGuard<RC, T> {}\n-    ///\n-    /// #[derive(Debug, Clone)]\n-    /// pub struct ArcGuard<RC, T> {\n-    ///     inner: T,\n-    ///     // Possibly drops `Arc<RC>` (and in turn `RC`) on a wrong thread\n-    ///     head: Arc<RC>\n+    /// ```rust,ignore\n+    /// struct ExampleStruct<T> {\n+    ///     rc_is_not_send: Rc<String>,\n+    ///     unbounded_generic_field: T,\n     /// }\n+    ///\n+    /// // This impl is unsound because it allows sending `!Send` types through `ExampleStruct`\n+    /// unsafe impl<T> Send for ExampleStruct<T> {}\n     /// ```\n+    /// Use thread-safe types like [`std::sync::Arc`](https://doc.rust-lang.org/std/sync/struct.Arc.html)\n+    /// and specify correct bounds on generic type parameters (`T: Send`).\n     pub NON_SEND_FIELD_IN_SEND_TY,\n     nursery,\n     \"there is field that does not implement `Send` in a `Send` struct\""}]}