{"sha": "90fdb8bf98c2491bcbaf72e0b1b3c27bdd9415d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwZmRiOGJmOThjMjQ5MWJjYmFmNzJlMGIxYjNjMjdiZGQ5NDE1ZDU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-26T15:28:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-26T15:28:26Z"}, "message": "Merge #5079\n\n5079: Fix config switching r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "b0ab4365f16a7ce628bf797d8ca8f0ee0c948791", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0ab4365f16a7ce628bf797d8ca8f0ee0c948791"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90fdb8bf98c2491bcbaf72e0b1b3c27bdd9415d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe9hQaCRBK7hj4Ov3rIwAAdHIIAC0gdkik5wTF5wC/4+dsYNom\nEvzi9tsuc51isMn7YtP0N+J46qK1m9dLyK1TbDoFZCjTlriDzNxPDeOSdznhAXG3\nt90KRfb6WBwxVxzO6HCDhOyKsNv2t9IylJHauM2FRXObWgV485bxDU344r8huiTI\naycPiT7SOnswMvw18VgyhBAq9m8Z0BpQgEwoqYVXridnq6092uh07h8qIhpKKnKU\nf8V+4pceT+ctEwOpgBnLXkB0kT4FrCHMHGqr1icStgJuzSeyYF1FC7ya0pjTILHy\nbvIilm+Q1QQafFvVXQpBmRIn2jbD3IN9QJDIL02v5pC5SDH2H1dgvD8nvMFEUs8=\n=W9XI\n-----END PGP SIGNATURE-----\n", "payload": "tree b0ab4365f16a7ce628bf797d8ca8f0ee0c948791\nparent a0a475546b6f50644a1fa2a1e8586afde1ec82eb\nparent 5a18734338518dbb749ec89a261dffc296a979dc\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593185306 +0000\ncommitter GitHub <noreply@github.com> 1593185306 +0000\n\nMerge #5079\n\n5079: Fix config switching r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90fdb8bf98c2491bcbaf72e0b1b3c27bdd9415d5", "html_url": "https://github.com/rust-lang/rust/commit/90fdb8bf98c2491bcbaf72e0b1b3c27bdd9415d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90fdb8bf98c2491bcbaf72e0b1b3c27bdd9415d5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0a475546b6f50644a1fa2a1e8586afde1ec82eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0a475546b6f50644a1fa2a1e8586afde1ec82eb", "html_url": "https://github.com/rust-lang/rust/commit/a0a475546b6f50644a1fa2a1e8586afde1ec82eb"}, {"sha": "5a18734338518dbb749ec89a261dffc296a979dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a18734338518dbb749ec89a261dffc296a979dc", "html_url": "https://github.com/rust-lang/rust/commit/5a18734338518dbb749ec89a261dffc296a979dc"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "ec71f8b29185e3675665bf0adb2a76e79012b33f", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/90fdb8bf98c2491bcbaf72e0b1b3c27bdd9415d5/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90fdb8bf98c2491bcbaf72e0b1b3c27bdd9415d5/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=90fdb8bf98c2491bcbaf72e0b1b3c27bdd9415d5", "patch": "@@ -1,5 +1,5 @@\n //! Project loading & configuration updates\n-use std::sync::Arc;\n+use std::{mem, sync::Arc};\n \n use crossbeam_channel::unbounded;\n use flycheck::FlycheckHandle;\n@@ -14,12 +14,14 @@ use crate::{\n };\n \n impl GlobalState {\n-    pub(crate) fn update_configuration(&mut self, new_config: Config) {\n-        self.analysis_host.update_lru_capacity(new_config.lru_capacity);\n-        if new_config.flycheck != self.config.flycheck {\n+    pub(crate) fn update_configuration(&mut self, config: Config) {\n+        let old_config = mem::replace(&mut self.config, config);\n+        if self.config.lru_capacity != old_config.lru_capacity {\n+            self.analysis_host.update_lru_capacity(old_config.lru_capacity);\n+        }\n+        if self.config.flycheck != old_config.flycheck {\n             self.reload_flycheck();\n         }\n-        self.config = new_config;\n     }\n     pub(crate) fn reload(&mut self) {\n         let workspaces = {"}]}