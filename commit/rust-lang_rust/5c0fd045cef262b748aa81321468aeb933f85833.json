{"sha": "5c0fd045cef262b748aa81321468aeb933f85833", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjMGZkMDQ1Y2VmMjYyYjc0OGFhODEzMjE0NjhhZWI5MzNmODU4MzM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-28T04:18:22Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-28T19:53:44Z"}, "message": "Fiddle with the locking around channel disassociation\n\nThis still looks a bit sketchy to me (why isn't there locking in\nport::destroy?) but this manages to get rid of a problem with channels\naccessing their task after it's NULL.", "tree": {"sha": "e1ac66b8960a46ef378751cd37c1d832eec6f4d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1ac66b8960a46ef378751cd37c1d832eec6f4d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c0fd045cef262b748aa81321468aeb933f85833", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c0fd045cef262b748aa81321468aeb933f85833", "html_url": "https://github.com/rust-lang/rust/commit/5c0fd045cef262b748aa81321468aeb933f85833", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c0fd045cef262b748aa81321468aeb933f85833/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b54eb0480d3869e7ca09dcacd7a4d96b30b7b5b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b54eb0480d3869e7ca09dcacd7a4d96b30b7b5b1", "html_url": "https://github.com/rust-lang/rust/commit/b54eb0480d3869e7ca09dcacd7a4d96b30b7b5b1"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "44d45f693e73f7cd6a21362504eb7aef92dd34ea", "filename": "src/rt/rust_chan.cpp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5c0fd045cef262b748aa81321468aeb933f85833/src%2Frt%2Frust_chan.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5c0fd045cef262b748aa81321468aeb933f85833/src%2Frt%2Frust_chan.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_chan.cpp?ref=5c0fd045cef262b748aa81321468aeb933f85833", "patch": "@@ -53,9 +53,8 @@ bool rust_chan::is_associated() {\n void rust_chan::disassociate() {\n     A(kernel, is_associated(),\n       \"Channel must be associated with a port.\");\n-\n+    scoped_lock with(port->referent()->lock);\n     if (port->is_proxy() == false) {\n-        scoped_lock with(port->referent()->lock);\n         KLOG(kernel, task,\n              \"disassociating chan: 0x%\" PRIxPTR \" from port: 0x%\" PRIxPTR,\n              this, port->referent());"}]}