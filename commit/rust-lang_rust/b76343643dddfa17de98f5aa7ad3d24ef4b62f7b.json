{"sha": "b76343643dddfa17de98f5aa7ad3d24ef4b62f7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NjM0MzY0M2RkZGZhMTdkZTk4ZjVhYTdhZDNkMjRlZjRiNjJmN2I=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-09-23T12:54:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-23T12:54:10Z"}, "message": "Rollup merge of #77017 - GuillaumeGomez:vec-missing-examples-iter, r=Dylan-DPC\n\nAdd missing examples on Vec iter types\n\nr? @Dylan-DPC", "tree": {"sha": "5d2352ecd7c6cf6d38d2a5ed5ac5b698c19ad6e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d2352ecd7c6cf6d38d2a5ed5ac5b698c19ad6e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b76343643dddfa17de98f5aa7ad3d24ef4b62f7b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfa0VyCRBK7hj4Ov3rIwAAdHIIABnS8hjbn8nuL3KnFPbplYRV\nMpkDtJ6Uba95IXw+jHAjoBo3G+Rg1Ywo4DbngNl1JW6Kttfakpv/q8wPKt/mcQmL\niTo/JKUpF75g8QcPV0dODKLlybWolzzg/sczKNOYjolJd4UiK5rhT6u15ADxyf4l\nYh/X+jJfsr7NVC19PRJnxEJtjXnOd2hOv/cynnr/dM0mq855/U3imcn3Nvwtx1lt\nXQHB9xp/0YzT5CVGOLkL/c9RutOwuS8/4vRfCfe6fc17l/TDLew4Zf4qH/0iuQwd\n0t5HCxi+sQnanUvYFgdU7udFNQpqPl4utZVAX5tmz1c3ZRPjBvtU0JAD7sK+GC4=\n=dtrE\n-----END PGP SIGNATURE-----\n", "payload": "tree 5d2352ecd7c6cf6d38d2a5ed5ac5b698c19ad6e1\nparent bcdbe79f0c3597849eb12617b9df4aab860a8ccf\nparent 143557ec56124c246d6cf4c37398e657f84536e1\nauthor Dylan DPC <dylan.dpc@gmail.com> 1600865650 +0200\ncommitter GitHub <noreply@github.com> 1600865650 +0200\n\nRollup merge of #77017 - GuillaumeGomez:vec-missing-examples-iter, r=Dylan-DPC\n\nAdd missing examples on Vec iter types\n\nr? @Dylan-DPC\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b76343643dddfa17de98f5aa7ad3d24ef4b62f7b", "html_url": "https://github.com/rust-lang/rust/commit/b76343643dddfa17de98f5aa7ad3d24ef4b62f7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b76343643dddfa17de98f5aa7ad3d24ef4b62f7b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcdbe79f0c3597849eb12617b9df4aab860a8ccf", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcdbe79f0c3597849eb12617b9df4aab860a8ccf", "html_url": "https://github.com/rust-lang/rust/commit/bcdbe79f0c3597849eb12617b9df4aab860a8ccf"}, {"sha": "143557ec56124c246d6cf4c37398e657f84536e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/143557ec56124c246d6cf4c37398e657f84536e1", "html_url": "https://github.com/rust-lang/rust/commit/143557ec56124c246d6cf4c37398e657f84536e1"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "8a9463cb518280934ffc2ab75ebac7b31bf66ff8", "filename": "library/alloc/src/vec.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b76343643dddfa17de98f5aa7ad3d24ef4b62f7b/library%2Falloc%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b76343643dddfa17de98f5aa7ad3d24ef4b62f7b/library%2Falloc%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec.rs?ref=b76343643dddfa17de98f5aa7ad3d24ef4b62f7b", "patch": "@@ -2849,6 +2849,13 @@ where\n ///\n /// This `struct` is created by the `into_iter` method on [`Vec`] (provided\n /// by the [`IntoIterator`] trait).\n+///\n+/// # Example\n+///\n+/// ```\n+/// let v = vec![0, 1, 2];\n+/// let iter: std::vec::IntoIter<_> = v.into_iter();\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct IntoIter<T> {\n     buf: NonNull<T>,\n@@ -3092,6 +3099,13 @@ impl<T> AsIntoIter for IntoIter<T> {\n ///\n /// This `struct` is created by [`Vec::drain`].\n /// See its documentation for more.\n+///\n+/// # Example\n+///\n+/// ```\n+/// let mut v = vec![0, 1, 2];\n+/// let iter: std::vec::Drain<_> = v.drain(..);\n+/// ```\n #[stable(feature = \"drain\", since = \"1.6.0\")]\n pub struct Drain<'a, T: 'a> {\n     /// Index of tail to preserve\n@@ -3221,6 +3235,14 @@ impl<T> FusedIterator for Drain<'_, T> {}\n ///\n /// This struct is created by [`Vec::splice()`].\n /// See its documentation for more.\n+///\n+/// # Example\n+///\n+/// ```\n+/// let mut v = vec![0, 1, 2];\n+/// let new = [7, 8];\n+/// let iter: std::vec::Splice<_> = v.splice(1.., new.iter().cloned());\n+/// ```\n #[derive(Debug)]\n #[stable(feature = \"vec_splice\", since = \"1.21.0\")]\n pub struct Splice<'a, I: Iterator + 'a> {\n@@ -3337,6 +3359,15 @@ impl<T> Drain<'_, T> {\n ///\n /// This struct is created by [`Vec::drain_filter`].\n /// See its documentation for more.\n+///\n+/// # Example\n+///\n+/// ```\n+/// #![feature(drain_filter)]\n+///\n+/// let mut v = vec![0, 1, 2];\n+/// let iter: std::vec::DrainFilter<_, _> = v.drain_filter(|x| *x % 2 == 0);\n+/// ```\n #[unstable(feature = \"drain_filter\", reason = \"recently added\", issue = \"43244\")]\n #[derive(Debug)]\n pub struct DrainFilter<'a, T, F>"}]}