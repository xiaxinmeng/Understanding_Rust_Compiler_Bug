{"sha": "973aa054ee0fe229786415de2d46bba195f6c148", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3M2FhMDU0ZWUwZmUyMjk3ODY0MTVkZTJkNDZiYmExOTVmNmMxNDg=", "commit": {"author": {"name": "Giles Cope", "email": "gilescope@gmail.com", "date": "2020-01-09T20:21:07Z"}, "committer": {"name": "Giles Cope", "email": "gilescope@gmail.com", "date": "2020-01-09T20:21:07Z"}, "message": "Split out into a release build as bins were not getting generated as cargo build wasn't run", "tree": {"sha": "944dfd7806e5031bc65cea74f7c1ca8271d030ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/944dfd7806e5031bc65cea74f7c1ca8271d030ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/973aa054ee0fe229786415de2d46bba195f6c148", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/973aa054ee0fe229786415de2d46bba195f6c148", "html_url": "https://github.com/rust-lang/rust/commit/973aa054ee0fe229786415de2d46bba195f6c148", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/973aa054ee0fe229786415de2d46bba195f6c148/comments", "author": {"login": "gilescope", "id": 803976, "node_id": "MDQ6VXNlcjgwMzk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/803976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilescope", "html_url": "https://github.com/gilescope", "followers_url": "https://api.github.com/users/gilescope/followers", "following_url": "https://api.github.com/users/gilescope/following{/other_user}", "gists_url": "https://api.github.com/users/gilescope/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilescope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilescope/subscriptions", "organizations_url": "https://api.github.com/users/gilescope/orgs", "repos_url": "https://api.github.com/users/gilescope/repos", "events_url": "https://api.github.com/users/gilescope/events{/privacy}", "received_events_url": "https://api.github.com/users/gilescope/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gilescope", "id": 803976, "node_id": "MDQ6VXNlcjgwMzk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/803976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilescope", "html_url": "https://github.com/gilescope", "followers_url": "https://api.github.com/users/gilescope/followers", "following_url": "https://api.github.com/users/gilescope/following{/other_user}", "gists_url": "https://api.github.com/users/gilescope/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilescope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilescope/subscriptions", "organizations_url": "https://api.github.com/users/gilescope/orgs", "repos_url": "https://api.github.com/users/gilescope/repos", "events_url": "https://api.github.com/users/gilescope/events{/privacy}", "received_events_url": "https://api.github.com/users/gilescope/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45b0e7ad7d7b747632ec574a360227cf78d121d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/45b0e7ad7d7b747632ec574a360227cf78d121d4", "html_url": "https://github.com/rust-lang/rust/commit/45b0e7ad7d7b747632ec574a360227cf78d121d4"}], "stats": {"total": 163, "additions": 131, "deletions": 32}, "files": [{"sha": "3a2bdb4a6f6387f1a20ef700f6fa0e8e108b724b", "filename": ".github/workflows/ci.yaml", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/973aa054ee0fe229786415de2d46bba195f6c148/.github%2Fworkflows%2Fci.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/973aa054ee0fe229786415de2d46bba195f6c148/.github%2Fworkflows%2Fci.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yaml?ref=973aa054ee0fe229786415de2d46bba195f6c148", "patch": "@@ -78,23 +78,6 @@ jobs:\n         if: matrix.os == 'windows-latest'\n         run: Remove-Item ./target/${{ env.PROFILE }}/xtask.exe\n \n-      - name: Creat distribution dir\n-        run: mkdir ./dist\n-\n-      - name: Copy binaries (non-win)\n-        if: matrix.os != 'windows-latest'\n-        run: cp ./target/${{ env.PROFILE }}/ra_lsp_server* ./dist\n-\n-      - name: Copy binaries (win)\n-        if: matrix.os == 'windows-latest'\n-        run: copy ./target/${{ env.PROFILE }}/ra_lsp_server.* ./dist\n-\n-      - name: Upload artifacts\n-        uses: actions/upload-artifact@v1\n-        with:\n-          name: executables-${{ matrix.os }}\n-          path: ./dist\n-\n   type-script:\n     name: TypeScript\n     runs-on: ubuntu-latest\n@@ -114,18 +97,3 @@ jobs:\n         working-directory: ./editors/code\n       - run: npm run package --scripts-prepend-node-path\n         working-directory: ./editors/code\n-\n-      - name: Create distribution directory\n-        run: mkdir ./dist\n-\n-      - name: Copy vscode extension\n-        run: mkdir ./dist/code && cp ./editors/code/*.vsix ./dist/code/\n-\n-      - name: Copy emacs mode\n-        run: cp -R ./editors/emacs ./dist/\n-\n-      - name: Upload artifacts\n-        uses: actions/upload-artifact@v1\n-        with:\n-          name: editors\n-          path: ./dist"}, {"sha": "278f5a5867587a30f55316c441b2daa870373417", "filename": ".github/workflows/release.yaml", "status": "added", "additions": 131, "deletions": 0, "changes": 131, "blob_url": "https://github.com/rust-lang/rust/blob/973aa054ee0fe229786415de2d46bba195f6c148/.github%2Fworkflows%2Frelease.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/973aa054ee0fe229786415de2d46bba195f6c148/.github%2Fworkflows%2Frelease.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Frelease.yaml?ref=973aa054ee0fe229786415de2d46bba195f6c148", "patch": "@@ -0,0 +1,131 @@\n+name: CI\n+on:\n+  pull_request:\n+  push:\n+    branches:\n+      - master\n+      - staging\n+      - trying\n+\n+jobs:\n+  rust:\n+    name: Rust\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      matrix:\n+        os: [ubuntu-latest, windows-latest, macos-latest]\n+    env:\n+      RUSTFLAGS: -D warnings\n+      CARGO_INCREMENTAL: 0\n+      RUN_SLOW_TESTS: 1\n+      RUSTUP_MAX_RETRIES: 10\n+      CARGO_NET_RETRY: 10\n+      PROFILE: release\n+    steps:\n+\n+      - name: Checkout repository\n+        uses: actions/checkout@v1\n+\n+      # We need to disable the existing toolchain to avoid updating rust-docs\n+      # which takes a long time. The fastest way to do this is to rename the\n+      # existing folder, as deleting it takes about as much time as not doing\n+      # anything and just updating rust-docs.\n+      - name: Rename existing rust toolchain (Windows)\n+        if: matrix.os == 'windows-latest'\n+        run: Rename-Item C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc.old\n+\n+      - name: Install Rust toolchain\n+        uses: actions-rs/toolchain@v1\n+        with:\n+          toolchain: stable\n+          profile: minimal\n+          override: true\n+          components: rustfmt, rust-src\n+\n+      - name: Cache cargo registry\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.cargo/registry\n+          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}\n+\n+      - name: Cache cargo index\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.cargo/git\n+          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}\n+\n+      - name: Cache cargo target dir\n+        uses: actions/cache@v1\n+        with:\n+          path: target\n+          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}\n+\n+      - name: Compile\n+        uses: actions-rs/cargo@v1\n+        with:\n+          command: build\n+          args: --release\n+\n+      - name: Test\n+        uses: actions-rs/cargo@v1\n+        with:\n+          command: test\n+\n+      - name: Prepare cache\n+        run: cargo xtask pre-cache\n+\n+      - name: Prepare cache 2\n+        if: matrix.os == 'windows-latest'\n+        run: Remove-Item ./target/${{ env.PROFILE }}/xtask.exe\n+\n+      - name: Creat distribution dir\n+        run: mkdir ./dist\n+\n+      - name: Copy binaries (non-win)\n+        if: matrix.os != 'windows-latest'\n+        run: cp ./target/${{ env.PROFILE }}/ra_lsp_server* ./dist\n+\n+      - name: Copy binaries (win)\n+        if: matrix.os == 'windows-latest'\n+        run: copy ./target/${{ env.PROFILE }}/ra_lsp_server.* ./dist\n+\n+      - name: Upload artifacts\n+        uses: actions/upload-artifact@v1\n+        with:\n+          name: executables-${{ matrix.os }}\n+          path: ./dist\n+\n+  type-script:\n+    name: TypeScript\n+    runs-on: ubuntu-latest\n+    env:\n+      CXX: g++-4.9\n+      CC: gcc-4.9\n+    steps:\n+      - name: Checkout repository\n+        uses: actions/checkout@v1\n+\n+      - name: Install Nodejs\n+        uses: actions/setup-node@v1\n+        with:\n+          node-version: 12.x\n+\n+      - run: npm ci\n+        working-directory: ./editors/code\n+      - run: npm run package --scripts-prepend-node-path\n+        working-directory: ./editors/code\n+\n+      - name: Create distribution directory\n+        run: mkdir ./dist\n+\n+      - name: Copy vscode extension\n+        run: mkdir ./dist/code && cp ./editors/code/*.vsix ./dist/code/\n+\n+      - name: Copy emacs mode\n+        run: cp -R ./editors/emacs ./dist/\n+\n+      - name: Upload artifacts\n+        uses: actions/upload-artifact@v1\n+        with:\n+          name: editors\n+          path: ./dist"}]}