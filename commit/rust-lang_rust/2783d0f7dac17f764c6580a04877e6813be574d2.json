{"sha": "2783d0f7dac17f764c6580a04877e6813be574d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3ODNkMGY3ZGFjMTdmNzY0YzY1ODBhMDQ4NzdlNjgxM2JlNTc0ZDI=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2017-06-28T11:43:56Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2017-06-28T11:43:56Z"}, "message": "Add links to the `ErrorKind` variants in errors of `open`", "tree": {"sha": "8bc5e8c703bf42b43f98d0db590cd1604be82af1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bc5e8c703bf42b43f98d0db590cd1604be82af1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2783d0f7dac17f764c6580a04877e6813be574d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2783d0f7dac17f764c6580a04877e6813be574d2", "html_url": "https://github.com/rust-lang/rust/commit/2783d0f7dac17f764c6580a04877e6813be574d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2783d0f7dac17f764c6580a04877e6813be574d2/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71252d9b80020d932aa7960a3930684489a6e167", "url": "https://api.github.com/repos/rust-lang/rust/commits/71252d9b80020d932aa7960a3930684489a6e167", "html_url": "https://github.com/rust-lang/rust/commit/71252d9b80020d932aa7960a3930684489a6e167"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "88994b284c90dced81a4592873f405756d2c82d6", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/2783d0f7dac17f764c6580a04877e6813be574d2/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2783d0f7dac17f764c6580a04877e6813be574d2/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=2783d0f7dac17f764c6580a04877e6813be574d2", "patch": "@@ -654,25 +654,25 @@ impl OpenOptions {\n     ///\n     /// This function will return an error under a number of different\n     /// circumstances. Some of these error conditions are listed here, together\n-    /// with their [`ErrorKind`]. The mapping to `ErrorKind`s is not part of\n+    /// with their [`ErrorKind`]. The mapping to [`ErrorKind`]s is not part of\n     /// the compatiblity contract of the function, especially the `Other` kind\n     /// might change to more specific kinds in the future.\n     ///\n-    /// * `NotFound`: The specified file does not exist and neither `create` or\n-    ///   `create_new` is set,\n-    /// * `NotFound`: One of the directory components of the file path does not\n-    ///   exist.\n-    /// * `PermissionDenied`: The user lacks permission to get the specified\n+    /// * [`NotFound`]: The specified file does not exist and neither `create`\n+    ///   or `create_new` is set.\n+    /// * [`NotFound`]: One of the directory components of the file path does\n+    ///   not exist.\n+    /// * [`PermissionDenied`]: The user lacks permission to get the specified\n     ///   access rights for the file.\n-    /// * `PermissionDenied`: The user lacks permission to open one of the\n+    /// * [`PermissionDenied`]: The user lacks permission to open one of the\n     ///   directory components of the specified path.\n-    /// * `AlreadyExists`: `create_new` was specified and the file already\n+    /// * [`AlreadyExists`]: `create_new` was specified and the file already\n     ///   exists.\n-    /// * `InvalidInput`: Invalid combinations of open options (truncate\n+    /// * [`InvalidInput`]: Invalid combinations of open options (truncate\n     ///   without write access, no access mode set, etc.).\n-    /// * `Other`: One of the directory components of the specified file path\n+    /// * [`Other`]: One of the directory components of the specified file path\n     ///   was not, in fact, a directory.\n-    /// * `Other`: Filesystem-level errors: full disk, write permission\n+    /// * [`Other`]: Filesystem-level errors: full disk, write permission\n     ///   requested on a read-only file system, exceeded disk quota, too many\n     ///   open files, too long filename, too many symbolic links in the\n     ///   specified path (Unix-like systems only), etc.\n@@ -686,6 +686,11 @@ impl OpenOptions {\n     /// ```\n     ///\n     /// [`ErrorKind`]: ../io/enum.ErrorKind.html\n+    /// [`AlreadyExists`]: ../io/enum.ErrorKind.html#variant.AlreadyExists\n+    /// [`InvalidInput`]: ../io/enum.ErrorKind.html#variant.InvalidInput\n+    /// [`NotFound`]: ../io/enum.ErrorKind.html#variant.NotFound\n+    /// [`Other`]: ../io/enum.ErrorKind.html#variant.Other\n+    /// [`PermissionDenied`]: ../io/enum.ErrorKind.html#variant.PermissionDenied\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn open<P: AsRef<Path>>(&self, path: P) -> io::Result<File> {\n         self._open(path.as_ref())"}]}