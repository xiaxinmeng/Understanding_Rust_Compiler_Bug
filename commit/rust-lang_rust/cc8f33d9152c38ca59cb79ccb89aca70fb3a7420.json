{"sha": "cc8f33d9152c38ca59cb79ccb89aca70fb3a7420", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjOGYzM2Q5MTUyYzM4Y2E1OWNiNzljY2I4OWFjYTcwZmIzYTc0MjA=", "commit": {"author": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2015-08-23T14:34:23Z"}, "committer": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2015-08-23T14:34:23Z"}, "message": "ranges: remove unneeded as_str()", "tree": {"sha": "95a809a9a2183fac1cbeb52c1cc610e1637bf503", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95a809a9a2183fac1cbeb52c1cc610e1637bf503"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc8f33d9152c38ca59cb79ccb89aca70fb3a7420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc8f33d9152c38ca59cb79ccb89aca70fb3a7420", "html_url": "https://github.com/rust-lang/rust/commit/cc8f33d9152c38ca59cb79ccb89aca70fb3a7420", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc8f33d9152c38ca59cb79ccb89aca70fb3a7420/comments", "author": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8a2e848ab249758f79ca048a5b06b8fef56cd87", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8a2e848ab249758f79ca048a5b06b8fef56cd87", "html_url": "https://github.com/rust-lang/rust/commit/c8a2e848ab249758f79ca048a5b06b8fef56cd87"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "914b4daa6bea66e3f97bcd11abb355a0daad8bf5", "filename": "src/ranges.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc8f33d9152c38ca59cb79ccb89aca70fb3a7420/src%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc8f33d9152c38ca59cb79ccb89aca70fb3a7420/src%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Franges.rs?ref=cc8f33d9152c38ca59cb79ccb89aca70fb3a7420", "patch": "@@ -20,7 +20,7 @@ impl LintPass for StepByZero {\n         if let ExprMethodCall(Spanned { node: ref ident, .. }, _,\n                               ref args) = expr.node {\n             // Only warn on literal ranges.\n-            if ident.name.as_str() == \"step_by\" && args.len() == 2 &&\n+            if ident.name == \"step_by\" && args.len() == 2 &&\n                 is_range(cx, &args[0]) && is_lit_zero(&args[1]) {\n                 cx.span_lint(RANGE_STEP_BY_ZERO, expr.span,\n                              \"Range::step_by(0) produces an infinite iterator. \\"}]}