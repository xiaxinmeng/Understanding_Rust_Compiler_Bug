{"sha": "493544a1f9009c794015697440093f59ab1856c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5MzU0NGExZjkwMDljNzk0MDE1Njk3NDQwMDkzZjU5YWIxODU2Yzc=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-09-07T15:31:11Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-09-07T18:03:56Z"}, "message": "save-analysis: only emit type in the value for variables", "tree": {"sha": "75f9fe037625012e985626db7fbdeab3e83feae4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75f9fe037625012e985626db7fbdeab3e83feae4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/493544a1f9009c794015697440093f59ab1856c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/493544a1f9009c794015697440093f59ab1856c7", "html_url": "https://github.com/rust-lang/rust/commit/493544a1f9009c794015697440093f59ab1856c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/493544a1f9009c794015697440093f59ab1856c7/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce413e0da234ecc68648c81d7c476da3a8d68b9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce413e0da234ecc68648c81d7c476da3a8d68b9e", "html_url": "https://github.com/rust-lang/rust/commit/ce413e0da234ecc68648c81d7c476da3a8d68b9e"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "05859a63c5d31a1eb332f9e4d02a7d1fffea27e2", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/493544a1f9009c794015697440093f59ab1856c7/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/493544a1f9009c794015697440093f59ab1856c7/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=493544a1f9009c794015697440093f59ab1856c7", "patch": "@@ -1427,11 +1427,15 @@ impl<'l, 'tcx: 'l, 'll, D: Dump +'ll> Visitor for DumpVisitor<'l, 'tcx, 'll, D>\n         for &(id, ref p, immut, ref_kind) in &collector.collected_paths {\n             match self.tcx.expect_def(id) {\n                 Def::Local(_, id) => {\n-                    let value = if immut == ast::Mutability::Immutable {\n+                    let mut value = if immut == ast::Mutability::Immutable {\n                         self.span.snippet(p.span).to_string()\n                     } else {\n                         \"<mutable>\".to_string()\n                     };\n+                    let typ = self.tcx.node_types()\n+                                  .get(&id).map(|t| t.to_string()).unwrap_or(String::new());\n+                    value.push_str(\": \");\n+                    value.push_str(&typ);\n \n                     assert!(p.segments.len() == 1,\n                             \"qualified path for local variable def in arm\");\n@@ -1443,7 +1447,7 @@ impl<'l, 'tcx: 'l, 'll, D: Dump +'ll> Visitor for DumpVisitor<'l, 'tcx, 'll, D>\n                             name: path_to_string(p),\n                             qualname: format!(\"{}${}\", path_to_string(p), id),\n                             value: value,\n-                            type_value: String::new(),\n+                            type_value: typ,\n                             scope: 0,\n                             parent: None,\n                             visibility: Visibility::Inherited,"}, {"sha": "75abff8d37edb9160bc3c4d55fdd0ebe266a6f61", "filename": "src/librustc_save_analysis/json_dumper.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/493544a1f9009c794015697440093f59ab1856c7/src%2Flibrustc_save_analysis%2Fjson_dumper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/493544a1f9009c794015697440093f59ab1856c7/src%2Flibrustc_save_analysis%2Fjson_dumper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fjson_dumper.rs?ref=493544a1f9009c794015697440093f59ab1856c7", "patch": "@@ -380,7 +380,7 @@ impl From<VariableData> for Def {\n             span: data.span,\n             name: data.name,\n             qualname: data.qualname,\n-            value: data.value,\n+            value: data.type_value,\n             children: vec![],\n             decl_id: None,\n             docs: data.docs,"}, {"sha": "3c0f10755089ba358e2fb2127141bc79f51b5a67", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/493544a1f9009c794015697440093f59ab1856c7/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/493544a1f9009c794015697440093f59ab1856c7/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=493544a1f9009c794015697440093f59ab1856c7", "patch": "@@ -749,7 +749,6 @@ impl Visitor for PathCollector {\n     }\n }\n \n-\n fn docs_for_attrs(attrs: &[Attribute]) -> String {\n     let doc = InternedString::new(\"doc\");\n     let mut result = String::new();"}]}