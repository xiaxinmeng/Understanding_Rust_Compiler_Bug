{"sha": "f473ba8f87a8397e358a79f8ccae2d944f7bee95", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NzNiYThmODdhODM5N2UzNThhNzlmOGNjYWUyZDk0NGY3YmVlOTU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-04-28T18:37:44Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-04-28T18:37:44Z"}, "message": "Rustup to rustc 1.36.0-nightly (938d4ffe1 2019-04-27)", "tree": {"sha": "6580027d0d39ab626664ac999acd4d63d042a4f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6580027d0d39ab626664ac999acd4d63d042a4f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f473ba8f87a8397e358a79f8ccae2d944f7bee95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f473ba8f87a8397e358a79f8ccae2d944f7bee95", "html_url": "https://github.com/rust-lang/rust/commit/f473ba8f87a8397e358a79f8ccae2d944f7bee95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f473ba8f87a8397e358a79f8ccae2d944f7bee95/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27ea27e2e3e77f82cc470dd695f54ececa16cb4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/27ea27e2e3e77f82cc470dd695f54ececa16cb4b", "html_url": "https://github.com/rust-lang/rust/commit/27ea27e2e3e77f82cc470dd695f54ececa16cb4b"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "74b373276cb708c601db9893793e658458ad5680", "filename": "src/abi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f473ba8f87a8397e358a79f8ccae2d944f7bee95/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f473ba8f87a8397e358a79f8ccae2d944f7bee95/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=f473ba8f87a8397e358a79f8ccae2d944f7bee95", "patch": "@@ -87,7 +87,7 @@ fn clif_sig_from_fn_sig<'a, 'tcx: 'a>(tcx: TyCtxt<'a, 'tcx, 'tcx>, sig: FnSig<'t\n                 _ => bug!(\"argument to function with \\\"rust-call\\\" ABI is not a tuple\"),\n             };\n             let mut inputs: Vec<Ty> = vec![sig.inputs()[0]];\n-            inputs.extend(extra_args.into_iter());\n+            inputs.extend(extra_args.types());\n             (CallConv::SystemV, inputs, sig.output())\n         }\n         Abi::System => bug!(\"system abi should be selected elsewhere\"),\n@@ -434,7 +434,7 @@ pub fn codegen_fn_prelude<'a, 'tcx: 'a>(\n                 };\n \n                 let mut params = Vec::new();\n-                for (i, arg_ty) in tupled_arg_tys.iter().enumerate() {\n+                for (i, arg_ty) in tupled_arg_tys.types().enumerate() {\n                     let param = cvalue_for_param(\n                         fx,\n                         start_ebb,"}]}