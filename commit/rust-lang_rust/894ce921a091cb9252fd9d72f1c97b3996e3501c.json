{"sha": "894ce921a091cb9252fd9d72f1c97b3996e3501c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5NGNlOTIxYTA5MWNiOTI1MmZkOWQ3MmYxYzk3YjM5OTZlMzUwMWM=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-09-01T13:07:49Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-09-09T05:21:30Z"}, "message": "better test", "tree": {"sha": "5bdff1a8c2fbb3f0eb922b00edb18a0bc34ccabe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bdff1a8c2fbb3f0eb922b00edb18a0bc34ccabe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/894ce921a091cb9252fd9d72f1c97b3996e3501c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEQ7Fl7qPq2YcWF1dqAn35M4hird0FAmE5mdoACgkQAn35M4hi\nrd1e4BAAm/oMAlQr7M5M+ptPzJVl+tEczVJ/OzBsbP5L2jBn/3mroNLZRL3QfB5A\nWbWLAnQoRKBzQmjlnhC4nergL2GBZy3b2uyXKRaQSzk297mE4kZYqTixKeMqIdao\nMrubtxc57B4uwzVTZrbFoRG3cPZlcGwUt6iYjwi8gFhjAG9gFLh13Lt2fBU/v+ip\n2p1wrYbvMvYHj0b+c2bo2Pu9Aw2IQpAUHoin3xRlZH61jZMIwXCBAx0KXMPTODzI\nV61eBSew/r+iwX3s3tzl6nOIjjw3uS/VCv0+MZQeutqW5Mpg6muoVF6pok8tW2fx\naUGNwkIv4LJwubsb1FbUeflFH1XUM0O556Wwq/E3HfIHDC/419Do6yXpp8CTTyeH\nY89xAKim3Tjctj7ZIsw1PxSCh+FwOIhBUZ8Y6CxHwFz3vhY63ZyIGmUNZXO8M6X7\nHmNUe7IdpbKSIsxkzBvtquQ9Nibuotw33BXcYoCZUxh/tK912BJMWAyLY18Z8Fv2\npW2ygyP1CG8IJKSx6VAcAXqkAxGj0Sg1RudGcoKfWCrLqEtb77+45sWc5cDpkV8u\nh7n1tKsjHYYM4yzkHeRyUMF/ygRoRfkLrVpvi0LQvDuRZmdLhQTQw1aU15B4e21e\nx9n3dlk/g83OKE/sUKdFb+6eLh3snaxzLIapJBcMH+kW53bbmB4=\n=VpD9\n-----END PGP SIGNATURE-----", "payload": "tree 5bdff1a8c2fbb3f0eb922b00edb18a0bc34ccabe\nparent 48a3ba9a335987cfae90dec92b08a8833e12ba07\nauthor Deadbeef <ent3rm4n@gmail.com> 1630501669 +0000\ncommitter Deadbeef <ent3rm4n@gmail.com> 1631164890 +0000\n\nbetter test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/894ce921a091cb9252fd9d72f1c97b3996e3501c", "html_url": "https://github.com/rust-lang/rust/commit/894ce921a091cb9252fd9d72f1c97b3996e3501c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/894ce921a091cb9252fd9d72f1c97b3996e3501c/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48a3ba9a335987cfae90dec92b08a8833e12ba07", "url": "https://api.github.com/repos/rust-lang/rust/commits/48a3ba9a335987cfae90dec92b08a8833e12ba07", "html_url": "https://github.com/rust-lang/rust/commit/48a3ba9a335987cfae90dec92b08a8833e12ba07"}], "stats": {"total": 50, "additions": 15, "deletions": 35}, "files": [{"sha": "24b0d53b6c3e7a0d5ac22faa2e6eeb5a11067a8f", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-drop.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/894ce921a091cb9252fd9d72f1c97b3996e3501c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/894ce921a091cb9252fd9d72f1c97b3996e3501c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop.rs?ref=894ce921a091cb9252fd9d72f1c97b3996e3501c", "patch": "@@ -1,23 +1,28 @@\n+// run-pass\n #![feature(const_trait_impl)]\n #![feature(const_fn_trait_bound)]\n #![feature(const_mut_refs)]\n #![feature(const_panic)]\n \n-struct S;\n+struct S<'a>(&'a mut u8);\n \n-impl const Drop for S {\n+impl<'a> const Drop for S<'a> {\n     fn drop(&mut self) {\n-        // NB: There is no way to tell that a const destructor is ran,\n-        // because even if we can operate on mutable variables, it will\n-        // not be reflected because everything is `const`. So we panic\n-        // here, attempting to make the CTFE engine error.\n-        panic!(\"much const drop\")\n-        //~^ ERROR evaluation of constant value failed\n+        *self.0 += 1;\n     }\n }\n \n const fn a<T: ~const Drop>(_: T) {}\n \n-const _: () = a(S);\n+const fn b() -> u8 {\n+    let mut c = 0;\n+    let _ = S(&mut c);\n+    a(S(&mut c));\n+    c\n+}\n+\n+const C: u8 = b();\n \n-fn main() {}\n+fn main() {\n+    assert_eq!(C, 2);\n+}"}, {"sha": "33eba4f4d25e9fff02c983a3669a4543e2b9e24f", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-drop.stderr", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/48a3ba9a335987cfae90dec92b08a8833e12ba07/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48a3ba9a335987cfae90dec92b08a8833e12ba07/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop.stderr?ref=48a3ba9a335987cfae90dec92b08a8833e12ba07", "patch": "@@ -1,25 +0,0 @@\n-error[E0080]: evaluation of constant value failed\n-  --> $DIR/const-drop.rs:14:9\n-   |\n-LL |         panic!(\"much const drop\")\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |         |\n-   |         the evaluated program panicked at 'much const drop', $DIR/const-drop.rs:14:9\n-   |         inside `<S as Drop>::drop` at $SRC_DIR/std/src/panic.rs:LL:COL\n-...\n-LL | const fn a<T: ~const Drop>(_: T) {}\n-   |                                   - inside `a::<S>` at $DIR/const-drop.rs:19:35\n-LL | \n-LL | const _: () = a(S);\n-   |               ---- inside `_` at $DIR/const-drop.rs:21:15\n-   |\n-  ::: $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n-   |\n-LL | pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {\n-   | ------------------------------------------------------- inside `std::ptr::drop_in_place::<S> - shim(Some(S))` at $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n-   |\n-   = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0080`."}]}