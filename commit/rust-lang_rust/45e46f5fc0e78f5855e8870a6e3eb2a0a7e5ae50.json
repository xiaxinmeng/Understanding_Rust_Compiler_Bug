{"sha": "45e46f5fc0e78f5855e8870a6e3eb2a0a7e5ae50", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZTQ2ZjVmYzBlNzhmNTg1NWU4ODcwYTZlM2ViMmEwYTdlNWFlNTA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-30T17:14:54Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-30T17:14:54Z"}, "message": "libcore: Add missing unit.rs", "tree": {"sha": "51159a6eed80e917f337be24050a1c7e197bb012", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51159a6eed80e917f337be24050a1c7e197bb012"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45e46f5fc0e78f5855e8870a6e3eb2a0a7e5ae50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45e46f5fc0e78f5855e8870a6e3eb2a0a7e5ae50", "html_url": "https://github.com/rust-lang/rust/commit/45e46f5fc0e78f5855e8870a6e3eb2a0a7e5ae50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45e46f5fc0e78f5855e8870a6e3eb2a0a7e5ae50/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1c11cab2dc56483cf9fe6d25af43b2f602d5155", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1c11cab2dc56483cf9fe6d25af43b2f602d5155", "html_url": "https://github.com/rust-lang/rust/commit/a1c11cab2dc56483cf9fe6d25af43b2f602d5155"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "e4ca11bbd8af0b4dfafa0f24ae68740a75a2b619", "filename": "src/libcore/unit.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/45e46f5fc0e78f5855e8870a6e3eb2a0a7e5ae50/src%2Flibcore%2Funit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45e46f5fc0e78f5855e8870a6e3eb2a0a7e5ae50/src%2Flibcore%2Funit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funit.rs?ref=45e46f5fc0e78f5855e8870a6e3eb2a0a7e5ae50", "patch": "@@ -0,0 +1,17 @@\n+/**\n+ * Functions for the unit type.\n+ */\n+\n+use cmp::{Eq, Ord};\n+\n+impl () : Eq {\n+    pure fn eq(&&_other: ()) -> bool { true }\n+}\n+\n+impl () : Ord {\n+    pure fn lt(&&_other: ()) -> bool { false }\n+    pure fn le(&&_other: ()) -> bool { true }\n+    pure fn ge(&&_other: ()) -> bool { true }\n+    pure fn gt(&&_other: ()) -> bool { false }\n+}\n+"}]}