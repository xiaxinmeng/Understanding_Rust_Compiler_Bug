{"sha": "0ee2f4c3e050234ac977fdc8e44a43eb8e3c95a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlZTJmNGMzZTA1MDIzNGFjOTc3ZmRjOGU0NGE0M2ViOGUzYzk1YTI=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-03-08T19:09:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-08T19:09:01Z"}, "message": "Rollup merge of #82829 - JohnTitor:handle-neg-val, r=estebank\n\nHandle negative literals in cast overflow warning\n\nCloses #48535\nr? `@estebank`", "tree": {"sha": "66812d4d0ab61ed355a90e95e40560ed74f5772e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66812d4d0ab61ed355a90e95e40560ed74f5772e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ee2f4c3e050234ac977fdc8e44a43eb8e3c95a2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgRnZNCRBK7hj4Ov3rIwAAdHIIADvDQmRsZVLwTsIsHb/vvi/x\nSd/0FvvkToLbK34OHvpEpMIPAMi9OBumqJjNf0zfeV+b8sNDXYY0q5pD5ZIZzC8v\n1emCknKLpDbZ4WWo5cEfA72gvSob8soKzEcgs3VsvSSxyc0JDzvyi+P5IJijaRXC\nePfXnIKlbQzta4rB8i9WC2G6PtPHs4yiQl23aShIAtb2pHZmpjMS2rZS7zJ3JW/E\nhhnTU4d7Ql3e7fpdHEDEJRHI6mXDdoDCFOyd4CORaJiEZMXzz5+WAWTbB1gSxt8X\nOUM2WUcBVhGj//m6Waz9Ua+VtiaxfulZJxGpYzGBsZERSGuw+YnBotJKdInk9Ps=\n=VTFv\n-----END PGP SIGNATURE-----\n", "payload": "tree 66812d4d0ab61ed355a90e95e40560ed74f5772e\nparent 09b17a1c2dfc3853931e223bf1871655af7800f1\nparent 6e4dcea0d92e83bbcd983b525abf2a87971a9fe8\nauthor Mara Bos <m-ou.se@m-ou.se> 1615230541 +0100\ncommitter GitHub <noreply@github.com> 1615230541 +0100\n\nRollup merge of #82829 - JohnTitor:handle-neg-val, r=estebank\n\nHandle negative literals in cast overflow warning\n\nCloses #48535\nr? `@estebank`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ee2f4c3e050234ac977fdc8e44a43eb8e3c95a2", "html_url": "https://github.com/rust-lang/rust/commit/0ee2f4c3e050234ac977fdc8e44a43eb8e3c95a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ee2f4c3e050234ac977fdc8e44a43eb8e3c95a2/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09b17a1c2dfc3853931e223bf1871655af7800f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/09b17a1c2dfc3853931e223bf1871655af7800f1", "html_url": "https://github.com/rust-lang/rust/commit/09b17a1c2dfc3853931e223bf1871655af7800f1"}, {"sha": "6e4dcea0d92e83bbcd983b525abf2a87971a9fe8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e4dcea0d92e83bbcd983b525abf2a87971a9fe8", "html_url": "https://github.com/rust-lang/rust/commit/6e4dcea0d92e83bbcd983b525abf2a87971a9fe8"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "2d311cc32f8b7ba869a08aa1a1487734880afc2c", "filename": "compiler/rustc_lint/src/types.rs", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/0ee2f4c3e050234ac977fdc8e44a43eb8e3c95a2/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ee2f4c3e050234ac977fdc8e44a43eb8e3c95a2/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs?ref=0ee2f4c3e050234ac977fdc8e44a43eb8e3c95a2", "patch": "@@ -217,7 +217,11 @@ fn report_bin_hex_error(\n     cx.struct_span_lint(OVERFLOWING_LITERALS, expr.span, |lint| {\n         let (t, actually) = match ty {\n             attr::IntType::SignedInt(t) => {\n-                let actually = size.sign_extend(val) as i128;\n+                let actually = if negative {\n+                    -(size.sign_extend(val) as i128)\n+                } else {\n+                    size.sign_extend(val) as i128\n+                };\n                 (t.name_str(), actually.to_string())\n             }\n             attr::IntType::UnsignedInt(t) => {\n@@ -226,11 +230,22 @@ fn report_bin_hex_error(\n             }\n         };\n         let mut err = lint.build(&format!(\"literal out of range for `{}`\", t));\n-        err.note(&format!(\n-            \"the literal `{}` (decimal `{}`) does not fit into \\\n-             the type `{}` and will become `{}{}`\",\n-            repr_str, val, t, actually, t\n-        ));\n+        if negative {\n+            // If the value is negative,\n+            // emits a note about the value itself, apart from the literal.\n+            err.note(&format!(\n+                \"the literal `{}` (decimal `{}`) does not fit into \\\n+                 the type `{}`\",\n+                repr_str, val, t\n+            ));\n+            err.note(&format!(\"and the value `-{}` will become `{}{}`\", repr_str, actually, t));\n+        } else {\n+            err.note(&format!(\n+                \"the literal `{}` (decimal `{}`) does not fit into \\\n+                 the type `{}` and will become `{}{}`\",\n+                repr_str, val, t, actually, t\n+            ));\n+        }\n         if let Some(sugg_ty) =\n             get_type_suggestion(&cx.typeck_results().node_type(expr.hir_id), val, negative)\n         {"}, {"sha": "8a31fd4474614fa021ff7f3dea980fab2f6cf0a8", "filename": "src/test/ui/lint/type-overflow.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0ee2f4c3e050234ac977fdc8e44a43eb8e3c95a2/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0ee2f4c3e050234ac977fdc8e44a43eb8e3c95a2/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ftype-overflow.stderr?ref=0ee2f4c3e050234ac977fdc8e44a43eb8e3c95a2", "patch": "@@ -60,7 +60,8 @@ warning: literal out of range for `i8`\n LL |     let fail = -0b1111_1111i8;\n    |                 ^^^^^^^^^^^^^ help: consider using the type `i16` instead: `0b1111_1111i16`\n    |\n-   = note: the literal `0b1111_1111i8` (decimal `255`) does not fit into the type `i8` and will become `-1i8`\n+   = note: the literal `0b1111_1111i8` (decimal `255`) does not fit into the type `i8`\n+   = note: and the value `-0b1111_1111i8` will become `1i8`\n \n warning: 7 warnings emitted\n "}]}