{"sha": "1f420b9891c962656eac16831c772cbd56afff24", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNDIwYjk4OTFjOTYyNjU2ZWFjMTY4MzFjNzcyY2JkNTZhZmZmMjQ=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-11-21T19:33:39Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-12-02T14:03:41Z"}, "message": "Allow mutable borrows in constant bodies", "tree": {"sha": "fd20e9fb7a16a2965e29a295b70a3e901fd556fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd20e9fb7a16a2965e29a295b70a3e901fd556fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f420b9891c962656eac16831c772cbd56afff24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f420b9891c962656eac16831c772cbd56afff24", "html_url": "https://github.com/rust-lang/rust/commit/1f420b9891c962656eac16831c772cbd56afff24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f420b9891c962656eac16831c772cbd56afff24/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d24ae2577fad83d581d090816303b0f1842f1514", "url": "https://api.github.com/repos/rust-lang/rust/commits/d24ae2577fad83d581d090816303b0f1842f1514", "html_url": "https://github.com/rust-lang/rust/commit/d24ae2577fad83d581d090816303b0f1842f1514"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "117d628af257fce2e7ad7bc416c24aedfbb09ec2", "filename": "src/librustc_mir/transform/check_consts/ops.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f420b9891c962656eac16831c772cbd56afff24/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f420b9891c962656eac16831c772cbd56afff24/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs?ref=1f420b9891c962656eac16831c772cbd56afff24", "patch": "@@ -183,6 +183,10 @@ impl NonConstOp for Loop {\n #[derive(Debug)]\n pub struct MutBorrow(pub BorrowKind);\n impl NonConstOp for MutBorrow {\n+    fn feature_gate(tcx: TyCtxt<'_>) -> Option<bool> {\n+        Some(tcx.features().const_mut_refs)\n+    }\n+\n     fn emit_error(&self, item: &Item<'_, '_>, span: Span) {\n         let kind = self.0;\n         if let BorrowKind::Mut { .. } = kind {"}]}