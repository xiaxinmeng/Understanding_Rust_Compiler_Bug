{"sha": "a56f21466e09a247e33660d4745963faba56654e", "node_id": "C_kwDOAAsO6NoAKGE1NmYyMTQ2NmUwOWEyNDdlMzM2NjBkNDc0NTk2M2ZhYmE1NjY1NGU", "commit": {"author": {"name": "Takayuki Maeda", "email": "41065217+TaKO8Ki@users.noreply.github.com", "date": "2022-04-04T03:49:02Z"}, "committer": {"name": "Takayuki Maeda", "email": "41065217+TaKO8Ki@users.noreply.github.com", "date": "2022-04-04T03:49:02Z"}, "message": "format cond", "tree": {"sha": "4704cd426181eab467d6d25140e065df56131f8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4704cd426181eab467d6d25140e065df56131f8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a56f21466e09a247e33660d4745963faba56654e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a56f21466e09a247e33660d4745963faba56654e", "html_url": "https://github.com/rust-lang/rust/commit/a56f21466e09a247e33660d4745963faba56654e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a56f21466e09a247e33660d4745963faba56654e/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0919de0fdfede34fb85f452ddf2754b5768e4f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0919de0fdfede34fb85f452ddf2754b5768e4f0", "html_url": "https://github.com/rust-lang/rust/commit/e0919de0fdfede34fb85f452ddf2754b5768e4f0"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "6fedabc816cff938087550a356adfb38f81119b8", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a56f21466e09a247e33660d4745963faba56654e/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a56f21466e09a247e33660d4745963faba56654e/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=a56f21466e09a247e33660d4745963faba56654e", "patch": "@@ -2296,14 +2296,16 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n \n         let prev = self.diagnostic_metadata.current_block_could_be_bare_struct_literal.take();\n         if let (true, [Stmt { kind: StmtKind::Expr(expr), .. }]) =\n-            (block.could_be_bare_literal, &block.stmts[..]) && let ExprKind::Type(..) = expr.kind\n+            (block.could_be_bare_literal, &block.stmts[..])\n+            && let ExprKind::Type(..) = expr.kind\n         {\n             self.diagnostic_metadata.current_block_could_be_bare_struct_literal =\n             Some(block.span);\n         }\n         // Descend into the block.\n         for stmt in &block.stmts {\n-            if let StmtKind::Item(ref item) = stmt.kind && let ItemKind::MacroDef(..) = item.kind {\n+            if let StmtKind::Item(ref item) = stmt.kind\n+                && let ItemKind::MacroDef(..) = item.kind {\n                 num_macro_definition_ribs += 1;\n                 let res = self.r.local_def_id(item.id).to_def_id();\n                 self.ribs[ValueNS].push(Rib::new(MacroDefinition(res)));"}]}