{"sha": "de7845ac72e01b491b4ed352f23c2c9a73efc45b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlNzg0NWFjNzJlMDFiNDkxYjRlZDM1MmYyM2MyYzlhNzNlZmM0NWI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-15T14:25:22Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-23T17:04:29Z"}, "message": "rustc: Fix passing errors from LLVM to rustc\n\nMany of the instances of setting a global error variable ended up leaving a\ndangling pointer into free'd memory. This changes the method of error\ntransmission to strdup any error and \"relinquish ownership\" to rustc when it\ngets an error. The corresponding Rust code will then free the error as\nnecessary.\n\nCloses #12865", "tree": {"sha": "1b834db9811246cc36ac73f64a0584ac07702019", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b834db9811246cc36ac73f64a0584ac07702019"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de7845ac72e01b491b4ed352f23c2c9a73efc45b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de7845ac72e01b491b4ed352f23c2c9a73efc45b", "html_url": "https://github.com/rust-lang/rust/commit/de7845ac72e01b491b4ed352f23c2c9a73efc45b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de7845ac72e01b491b4ed352f23c2c9a73efc45b/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb580f1a56138bd5a96ccc95c0f61caab72cf975", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb580f1a56138bd5a96ccc95c0f61caab72cf975", "html_url": "https://github.com/rust-lang/rust/commit/bb580f1a56138bd5a96ccc95c0f61caab72cf975"}], "stats": {"total": 44, "additions": 27, "deletions": 17}, "files": [{"sha": "f6846acaa99188b787aa63efa786119a1e38ae34", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de7845ac72e01b491b4ed352f23c2c9a73efc45b/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de7845ac72e01b491b4ed352f23c2c9a73efc45b/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=de7845ac72e01b491b4ed352f23c2c9a73efc45b", "patch": "@@ -60,7 +60,7 @@ pub fn llvm_err(sess: &Session, msg: ~str) -> ! {\n         if cstr == ptr::null() {\n             sess.fatal(msg);\n         } else {\n-            let err = CString::new(cstr, false);\n+            let err = CString::new(cstr, true);\n             let err = str::from_utf8_lossy(err.as_bytes());\n             sess.fatal(msg + \": \" + err.as_slice());\n         }"}, {"sha": "021dda497655039d165990077012ed929f4fcf06", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/de7845ac72e01b491b4ed352f23c2c9a73efc45b/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/de7845ac72e01b491b4ed352f23c2c9a73efc45b/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=de7845ac72e01b491b4ed352f23c2c9a73efc45b", "patch": "@@ -75,7 +75,7 @@ LLVMRustCreateTargetMachine(const char *triple,\n     const llvm::Target *TheTarget = TargetRegistry::lookupTarget(Trip.getTriple(),\n                                                                  Error);\n     if (TheTarget == NULL) {\n-        LLVMRustError = Error.c_str();\n+        LLVMRustSetLastError(Error.c_str());\n         return NULL;\n     }\n \n@@ -178,7 +178,7 @@ LLVMRustWriteOutputFile(LLVMTargetMachineRef Target,\n   raw_fd_ostream OS(path, ErrorInfo, raw_fd_ostream::F_Binary);\n #endif\n   if (ErrorInfo != \"\") {\n-    LLVMRustError = ErrorInfo.c_str();\n+    LLVMRustSetLastError(ErrorInfo.c_str());\n     return false;\n   }\n   formatted_raw_ostream FOS(OS);"}, {"sha": "ec33b750358bbb857f963157322136a7d8234cbb", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/de7845ac72e01b491b4ed352f23c2c9a73efc45b/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/de7845ac72e01b491b4ed352f23c2c9a73efc45b/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=de7845ac72e01b491b4ed352f23c2c9a73efc45b", "patch": "@@ -23,18 +23,28 @@ using namespace llvm;\n using namespace llvm::sys;\n using namespace llvm::object;\n \n-const char *LLVMRustError;\n+static char *LastError;\n \n extern \"C\" LLVMMemoryBufferRef\n LLVMRustCreateMemoryBufferWithContentsOfFile(const char *Path) {\n   LLVMMemoryBufferRef MemBuf = NULL;\n-  LLVMCreateMemoryBufferWithContentsOfFile(Path, &MemBuf,\n-    const_cast<char **>(&LLVMRustError));\n+  char *err = NULL;\n+  LLVMCreateMemoryBufferWithContentsOfFile(Path, &MemBuf, &err);\n+  if (err != NULL) {\n+    LLVMRustSetLastError(err);\n+  }\n   return MemBuf;\n }\n \n-extern \"C\" const char *LLVMRustGetLastError(void) {\n-  return LLVMRustError;\n+extern \"C\" char *LLVMRustGetLastError(void) {\n+  char *ret = LastError;\n+  LastError = NULL;\n+  return ret;\n+}\n+\n+void LLVMRustSetLastError(const char *err) {\n+  free((void*) LastError);\n+  LastError = strdup(err);\n }\n \n extern \"C\" void\n@@ -609,14 +619,14 @@ LLVMRustLinkInExternalBitcode(LLVMModuleRef dst, char *bc, size_t len) {\n     MemoryBuffer* buf = MemoryBuffer::getMemBufferCopy(StringRef(bc, len));\n     ErrorOr<Module *> Src = llvm::getLazyBitcodeModule(buf, Dst->getContext());\n     if (!Src) {\n-        LLVMRustError = Src.getError().message().c_str();\n+        LLVMRustSetLastError(Src.getError().message().c_str());\n         delete buf;\n         return false;\n     }\n \n     std::string Err;\n     if (Linker::LinkModules(Dst, *Src, Linker::DestroySource, &Err)) {\n-        LLVMRustError = Err.c_str();\n+        LLVMRustSetLastError(Err.c_str());\n         return false;\n     }\n     return true;\n@@ -629,13 +639,13 @@ LLVMRustLinkInExternalBitcode(LLVMModuleRef dst, char *bc, size_t len) {\n     std::string Err;\n     Module *Src = llvm::getLazyBitcodeModule(buf, Dst->getContext(), &Err);\n     if (!Src) {\n-        LLVMRustError = Err.c_str();\n+        LLVMRustSetLastError(Err.c_str());\n         delete buf;\n         return false;\n     }\n \n     if (Linker::LinkModules(Dst, Src, Linker::DestroySource, &Err)) {\n-        LLVMRustError = Err.c_str();\n+        LLVMRustSetLastError(Err.c_str());\n         return false;\n     }\n     return true;\n@@ -648,12 +658,12 @@ LLVMRustOpenArchive(char *path) {\n     std::unique_ptr<MemoryBuffer> buf;\n     error_code err = MemoryBuffer::getFile(path, buf);\n     if (err) {\n-        LLVMRustError = err.message().c_str();\n+        LLVMRustSetLastError(err.message().c_str());\n         return NULL;\n     }\n     Archive *ret = new Archive(buf.release(), err);\n     if (err) {\n-        LLVMRustError = err.message().c_str();\n+        LLVMRustSetLastError(err.message().c_str());\n         return NULL;\n     }\n     return ret;\n@@ -664,12 +674,12 @@ LLVMRustOpenArchive(char *path) {\n     OwningPtr<MemoryBuffer> buf;\n     error_code err = MemoryBuffer::getFile(path, buf);\n     if (err) {\n-        LLVMRustError = err.message().c_str();\n+        LLVMRustSetLastError(err.message().c_str());\n         return NULL;\n     }\n     Archive *ret = new Archive(buf.take(), err);\n     if (err) {\n-        LLVMRustError = err.message().c_str();\n+        LLVMRustSetLastError(err.message().c_str());\n         return NULL;\n     }\n     return ret;"}, {"sha": "5722eea48d7d83e56c9f27fcc888c0707ba70152", "filename": "src/rustllvm/rustllvm.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de7845ac72e01b491b4ed352f23c2c9a73efc45b/src%2Frustllvm%2Frustllvm.h", "raw_url": "https://github.com/rust-lang/rust/raw/de7845ac72e01b491b4ed352f23c2c9a73efc45b/src%2Frustllvm%2Frustllvm.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Frustllvm.h?ref=de7845ac72e01b491b4ed352f23c2c9a73efc45b", "patch": "@@ -68,4 +68,4 @@\n #include <unistd.h>\n #endif\n \n-extern const char* LLVMRustError;\n+void LLVMRustSetLastError(const char*);"}]}