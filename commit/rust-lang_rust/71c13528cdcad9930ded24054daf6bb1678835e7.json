{"sha": "71c13528cdcad9930ded24054daf6bb1678835e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxYzEzNTI4Y2RjYWQ5OTMwZGVkMjQwNTRkYWY2YmIxNjc4ODM1ZTc=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-05-01T14:09:44Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-05-01T14:09:44Z"}, "message": "Merge #1220\n\n1220: Add macro pat parsing r=matklad a=edwin0cheng\n\nThis PR add support to parsing macro call in pattern , e.g :\r\n```\r\nlet m!(x) = 0;\r\n```\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "701ee4bd27cfae3421c059d064db6f9ab1f9b9f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/701ee4bd27cfae3421c059d064db6f9ab1f9b9f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71c13528cdcad9930ded24054daf6bb1678835e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71c13528cdcad9930ded24054daf6bb1678835e7", "html_url": "https://github.com/rust-lang/rust/commit/71c13528cdcad9930ded24054daf6bb1678835e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71c13528cdcad9930ded24054daf6bb1678835e7/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "c368b147e339e7c1a5eca9c6f56fb897f72781cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/c368b147e339e7c1a5eca9c6f56fb897f72781cf", "html_url": "https://github.com/rust-lang/rust/commit/c368b147e339e7c1a5eca9c6f56fb897f72781cf"}, {"sha": "b454eb5a600779a9ab6f7bea251772bdd98b81b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b454eb5a600779a9ab6f7bea251772bdd98b81b9", "html_url": "https://github.com/rust-lang/rust/commit/b454eb5a600779a9ab6f7bea251772bdd98b81b9"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "12dd22bde1c077174cc05d7b754693486cf1e025", "filename": "crates/ra_parser/src/grammar/patterns.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/71c13528cdcad9930ded24054daf6bb1678835e7/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71c13528cdcad9930ded24054daf6bb1678835e7/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=71c13528cdcad9930ded24054daf6bb1678835e7", "patch": "@@ -40,6 +40,15 @@ pub(super) fn pattern_r(p: &mut Parser, recovery_set: TokenSet) {\n             atom_pat(p, recovery_set);\n             m.complete(p, RANGE_PAT);\n         }\n+        // test marco_pat\n+        // fn main() {\n+        //     let m!(x) = 0;\n+        // }\n+        else if lhs.kind() == PATH_PAT && p.at(EXCL) {\n+            let m = lhs.precede(p);\n+            items::macro_call_after_excl(p);\n+            m.complete(p, MACRO_CALL);\n+        }\n     }\n }\n \n@@ -51,7 +60,7 @@ fn atom_pat(p: &mut Parser, recovery_set: TokenSet) -> Option<CompletedMarker> {\n     let la1 = p.nth(1);\n     if la0 == REF_KW\n         || la0 == MUT_KW\n-        || (la0 == IDENT && !(la1 == COLONCOLON || la1 == L_PAREN || la1 == L_CURLY))\n+        || (la0 == IDENT && !(la1 == COLONCOLON || la1 == L_PAREN || la1 == L_CURLY || la1 == EXCL))\n     {\n         return Some(bind_pat(p, true));\n     }"}, {"sha": "811181d9ba821ac440359d4c8a6b40e1c2920650", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0129_marco_pat.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/71c13528cdcad9930ded24054daf6bb1678835e7/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0129_marco_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71c13528cdcad9930ded24054daf6bb1678835e7/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0129_marco_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0129_marco_pat.rs?ref=71c13528cdcad9930ded24054daf6bb1678835e7", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    let m!(x) = 0;\n+}"}, {"sha": "50b4ab2e7f22f0f1ee96950ca4004b8157cbfadb", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0129_marco_pat.txt", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/71c13528cdcad9930ded24054daf6bb1678835e7/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0129_marco_pat.txt", "raw_url": "https://github.com/rust-lang/rust/raw/71c13528cdcad9930ded24054daf6bb1678835e7/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0129_marco_pat.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0129_marco_pat.txt?ref=71c13528cdcad9930ded24054daf6bb1678835e7", "patch": "@@ -0,0 +1,36 @@\n+SOURCE_FILE@[0; 33)\n+  FN_DEF@[0; 32)\n+    FN_KW@[0; 2) \"fn\"\n+    WHITESPACE@[2; 3) \" \"\n+    NAME@[3; 7)\n+      IDENT@[3; 7) \"main\"\n+    PARAM_LIST@[7; 9)\n+      L_PAREN@[7; 8) \"(\"\n+      R_PAREN@[8; 9) \")\"\n+    WHITESPACE@[9; 10) \" \"\n+    BLOCK@[10; 32)\n+      L_CURLY@[10; 11) \"{\"\n+      WHITESPACE@[11; 16) \"\\n    \"\n+      LET_STMT@[16; 30)\n+        LET_KW@[16; 19) \"let\"\n+        WHITESPACE@[19; 20) \" \"\n+        MACRO_CALL@[20; 25)\n+          PATH_PAT@[20; 21)\n+            PATH@[20; 21)\n+              PATH_SEGMENT@[20; 21)\n+                NAME_REF@[20; 21)\n+                  IDENT@[20; 21) \"m\"\n+          EXCL@[21; 22) \"!\"\n+          TOKEN_TREE@[22; 25)\n+            L_PAREN@[22; 23) \"(\"\n+            IDENT@[23; 24) \"x\"\n+            R_PAREN@[24; 25) \")\"\n+        WHITESPACE@[25; 26) \" \"\n+        EQ@[26; 27) \"=\"\n+        WHITESPACE@[27; 28) \" \"\n+        LITERAL@[28; 29)\n+          INT_NUMBER@[28; 29) \"0\"\n+        SEMI@[29; 30) \";\"\n+      WHITESPACE@[30; 31) \"\\n\"\n+      R_CURLY@[31; 32) \"}\"\n+  WHITESPACE@[32; 33) \"\\n\""}]}