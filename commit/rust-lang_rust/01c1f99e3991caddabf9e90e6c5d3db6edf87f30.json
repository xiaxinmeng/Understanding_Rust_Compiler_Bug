{"sha": "01c1f99e3991caddabf9e90e6c5d3db6edf87f30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxYzFmOTllMzk5MWNhZGRhYmY5ZTkwZTZjNWQzZGI2ZWRmODdmMzA=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-04-13T22:15:39Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-04-13T22:15:39Z"}, "message": "Fallout from removing TupField", "tree": {"sha": "fd55a2d9f141a30e6b9fab4b99135882d277bab7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd55a2d9f141a30e6b9fab4b99135882d277bab7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01c1f99e3991caddabf9e90e6c5d3db6edf87f30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01c1f99e3991caddabf9e90e6c5d3db6edf87f30", "html_url": "https://github.com/rust-lang/rust/commit/01c1f99e3991caddabf9e90e6c5d3db6edf87f30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01c1f99e3991caddabf9e90e6c5d3db6edf87f30/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa7fc4cdc5d9e74e7390d8411e1c2f85bfbc333a", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa7fc4cdc5d9e74e7390d8411e1c2f85bfbc333a", "html_url": "https://github.com/rust-lang/rust/commit/aa7fc4cdc5d9e74e7390d8411e1c2f85bfbc333a"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "50e8ba6cdefafc054bab2262c1836d7bd3b55bce", "filename": "src/chains.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/01c1f99e3991caddabf9e90e6c5d3db6edf87f30/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01c1f99e3991caddabf9e90e6c5d3db6edf87f30/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=01c1f99e3991caddabf9e90e6c5d3db6edf87f30", "patch": "@@ -393,7 +393,6 @@ fn pop_expr_chain(expr: &ast::Expr, context: &RewriteContext) -> Option<ast::Exp\n         ast::ExprKind::MethodCall(_, ref expressions) => {\n             Some(convert_try(&expressions[0], context))\n         }\n-        ast::ExprKind::TupField(ref subexpr, _)\n         | ast::ExprKind::Field(ref subexpr, _)\n         | ast::ExprKind::Try(ref subexpr) => Some(convert_try(subexpr, context)),\n         _ => None,\n@@ -440,19 +439,28 @@ fn rewrite_chain_subexpr(\n             };\n             rewrite_method_call(segment.ident, types, expressions, span, context, shape)\n         }\n-        ast::ExprKind::Field(_, ref field) => rewrite_element(format!(\".{}\", field.name)),\n-        ast::ExprKind::TupField(ref expr, ref field) => {\n-            let space = match expr.node {\n-                ast::ExprKind::TupField(..) => \" \",\n-                _ => \"\",\n+        ast::ExprKind::Field(ref nested, ref field) => {\n+            let space = if is_tup_field_access(expr) && is_tup_field_access(nested) {\n+                \" \"\n+            } else {\n+                \"\"\n             };\n-            rewrite_element(format!(\"{}.{}\", space, field.node))\n+            rewrite_element(format!(\"{}.{}\", space, field.name))\n         }\n         ast::ExprKind::Try(_) => rewrite_element(String::from(\"?\")),\n         _ => unreachable!(),\n     }\n }\n \n+fn is_tup_field_access(expr: &ast::Expr) -> bool {\n+    match expr.node {\n+        ast::ExprKind::Field(_, ref field) => {\n+            field.name.to_string().chars().all(|c| c.is_digit(10))\n+        }\n+        _ => false,\n+    }\n+}\n+\n // Determines if we can continue formatting a given expression on the same line.\n fn is_continuable(expr: &ast::Expr) -> bool {\n     match expr.node {"}, {"sha": "7c4c16178a7e9acc757fea017fef1267ecebd67d", "filename": "src/expr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01c1f99e3991caddabf9e90e6c5d3db6edf87f30/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01c1f99e3991caddabf9e90e6c5d3db6edf87f30/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=01c1f99e3991caddabf9e90e6c5d3db6edf87f30", "patch": "@@ -178,7 +178,6 @@ pub fn format_expr(\n         }\n         ast::ExprKind::Try(..)\n         | ast::ExprKind::Field(..)\n-        | ast::ExprKind::TupField(..)\n         | ast::ExprKind::MethodCall(..) => rewrite_chain(expr, context, shape),\n         ast::ExprKind::Mac(ref mac) => {\n             rewrite_macro(mac, None, context, shape, MacroPosition::Expression).or_else(|| {\n@@ -1349,7 +1348,6 @@ fn is_simple_expr(expr: &ast::Expr) -> bool {\n         | ast::ExprKind::Cast(ref expr, _)\n         | ast::ExprKind::Field(ref expr, _)\n         | ast::ExprKind::Try(ref expr)\n-        | ast::ExprKind::TupField(ref expr, _)\n         | ast::ExprKind::Unary(_, ref expr) => is_simple_expr(expr),\n         ast::ExprKind::Index(ref lhs, ref rhs) | ast::ExprKind::Repeat(ref lhs, ref rhs) => {\n             is_simple_expr(lhs) && is_simple_expr(rhs)"}, {"sha": "00d6cf8ed08d333d1fe0ea0d9104d24527659622", "filename": "src/utils.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/01c1f99e3991caddabf9e90e6c5d3db6edf87f30/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01c1f99e3991caddabf9e90e6c5d3db6edf87f30/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=01c1f99e3991caddabf9e90e6c5d3db6edf87f30", "patch": "@@ -365,7 +365,6 @@ pub fn left_most_sub_expr(e: &ast::Expr) -> &ast::Expr {\n         | ast::ExprKind::Assign(ref e, _)\n         | ast::ExprKind::AssignOp(_, ref e, _)\n         | ast::ExprKind::Field(ref e, _)\n-        | ast::ExprKind::TupField(ref e, _)\n         | ast::ExprKind::Index(ref e, _)\n         | ast::ExprKind::Range(Some(ref e), _, _)\n         | ast::ExprKind::Try(ref e) => left_most_sub_expr(e),"}]}