{"sha": "38569c03eb0d0917698d83aea5fbbc35acf7305c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4NTY5YzAzZWIwZDA5MTc2OThkODNhZWE1ZmJiYzM1YWNmNzMwNWM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-06-26T13:22:15Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-06-26T13:28:38Z"}, "message": "Don't suggest unstable and doc(hidden) variants.", "tree": {"sha": "aae130447f9a3f434971cfff1f1dcc021c23eb13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aae130447f9a3f434971cfff1f1dcc021c23eb13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38569c03eb0d0917698d83aea5fbbc35acf7305c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38569c03eb0d0917698d83aea5fbbc35acf7305c", "html_url": "https://github.com/rust-lang/rust/commit/38569c03eb0d0917698d83aea5fbbc35acf7305c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38569c03eb0d0917698d83aea5fbbc35acf7305c/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e5956339482e06dfcb8690dee9211b77aa6e218", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e5956339482e06dfcb8690dee9211b77aa6e218", "html_url": "https://github.com/rust-lang/rust/commit/3e5956339482e06dfcb8690dee9211b77aa6e218"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "da5ac96e3dbd789630735a688eaa92159b50f725", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/38569c03eb0d0917698d83aea5fbbc35acf7305c/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38569c03eb0d0917698d83aea5fbbc35acf7305c/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=38569c03eb0d0917698d83aea5fbbc35acf7305c", "patch": "@@ -992,9 +992,9 @@ impl CommonPrefixSearcher<'a> {\n     }\n }\n \n-fn is_doc_hidden(cx: &LateContext<'_>, variant_def: &VariantDef) -> bool {\n+fn is_hidden(cx: &LateContext<'_>, variant_def: &VariantDef) -> bool {\n     let attrs = cx.tcx.get_attrs(variant_def.def_id);\n-    clippy_utils::attrs::is_doc_hidden(attrs)\n+    clippy_utils::attrs::is_doc_hidden(attrs) || clippy_utils::attrs::is_unstable(attrs)\n }\n \n #[allow(clippy::too_many_lines)]\n@@ -1033,7 +1033,7 @@ fn check_wild_enum_match(cx: &LateContext<'_>, ex: &Expr<'_>, arms: &[Arm<'_>])\n \n     // Accumulate the variants which should be put in place of the wildcard because they're not\n     // already covered.\n-    let mut missing_variants: Vec<_> = adt_def.variants.iter().collect();\n+    let mut missing_variants: Vec<_> = adt_def.variants.iter().filter(|x| !is_hidden(cx, x)).collect();\n \n     let mut path_prefix = CommonPrefixSearcher::None;\n     for arm in arms {\n@@ -1118,7 +1118,7 @@ fn check_wild_enum_match(cx: &LateContext<'_>, ex: &Expr<'_>, arms: &[Arm<'_>])\n \n     match missing_variants.as_slice() {\n         [] => (),\n-        [x] if !adt_def.is_variant_list_non_exhaustive() && !is_doc_hidden(cx, x) => span_lint_and_sugg(\n+        [x] if !adt_def.is_variant_list_non_exhaustive() => span_lint_and_sugg(\n             cx,\n             MATCH_WILDCARD_FOR_SINGLE_VARIANTS,\n             wildcard_span,"}, {"sha": "c19b558cd8c6e044902c2713e8f169fd2113920d", "filename": "clippy_utils/src/attrs.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/38569c03eb0d0917698d83aea5fbbc35acf7305c/clippy_utils%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38569c03eb0d0917698d83aea5fbbc35acf7305c/clippy_utils%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fattrs.rs?ref=38569c03eb0d0917698d83aea5fbbc35acf7305c", "patch": "@@ -157,3 +157,8 @@ pub fn is_doc_hidden(attrs: &[ast::Attribute]) -> bool {\n         .filter_map(ast::Attribute::meta_item_list)\n         .any(|l| attr::list_contains_name(&l, sym::hidden))\n }\n+\n+/// Return true if the attributes contain `#[unstable]`\n+pub fn is_unstable(attrs: &[ast::Attribute]) -> bool {\n+    attrs.iter().any(|attr| attr.has_name(sym::unstable))\n+}"}, {"sha": "18560bc5e1e07e3f20301d25ef0c9d67ce7d0875", "filename": "tests/ui/auxiliary/non-exhaustive-enum.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38569c03eb0d0917698d83aea5fbbc35acf7305c/tests%2Fui%2Fauxiliary%2Fnon-exhaustive-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38569c03eb0d0917698d83aea5fbbc35acf7305c/tests%2Fui%2Fauxiliary%2Fnon-exhaustive-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fnon-exhaustive-enum.rs?ref=38569c03eb0d0917698d83aea5fbbc35acf7305c", "patch": "@@ -20,4 +20,6 @@ pub enum ErrorKind {\n     UnexpectedEof,\n     Unsupported,\n     OutOfMemory,\n+    #[doc(hidden)]\n+    Uncategorized,\n }"}]}