{"sha": "fce064db6b40de3c75714e6a1323eee0726675d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjZTA2NGRiNmI0MGRlM2M3NTcxNGU2YTEzMjNlZWUwNzI2Njc1ZDY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-06T22:10:12Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-06T22:10:30Z"}, "message": "tutorial: Reduce header level for do/for loop sections", "tree": {"sha": "d434c045fd204ad3458da9b8a2f02c1c6dc1bf1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d434c045fd204ad3458da9b8a2f02c1c6dc1bf1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fce064db6b40de3c75714e6a1323eee0726675d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fce064db6b40de3c75714e6a1323eee0726675d6", "html_url": "https://github.com/rust-lang/rust/commit/fce064db6b40de3c75714e6a1323eee0726675d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fce064db6b40de3c75714e6a1323eee0726675d6/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e6b43fb33c47f99385d6a4c5442eac1f74d273c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e6b43fb33c47f99385d6a4c5442eac1f74d273c", "html_url": "https://github.com/rust-lang/rust/commit/9e6b43fb33c47f99385d6a4c5442eac1f74d273c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "0e54485bf17fbd7985a40341fa95f50f7c6ee86c", "filename": "doc/tutorial.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fce064db6b40de3c75714e6a1323eee0726675d6/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/fce064db6b40de3c75714e6a1323eee0726675d6/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=fce064db6b40de3c75714e6a1323eee0726675d6", "patch": "@@ -1112,7 +1112,7 @@ fn bare_function() { \"I am a plain function\"; }\n call_twice(bare_function);\n ~~~~\n \n-### Do syntax\n+## Do syntax\n \n Closures in Rust are frequently used in combination with higher-order\n functions to simulate control structures like `if` and\n@@ -1183,7 +1183,7 @@ do spawn {\n \n Empty argument lists can be omitted from `do` expressions.\n \n-### For loops\n+## For loops\n \n Most iteration in Rust is done with `for` loops. Like `do`,\n `for` is a nice syntax for doing control flow with closures."}]}