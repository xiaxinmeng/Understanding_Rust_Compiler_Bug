{"sha": "b62a9da0c839fa3e722d4baf3e50ce58b749bc8e", "node_id": "C_kwDOAAsO6NoAKGI2MmE5ZGEwYzgzOWZhM2U3MjJkNGJhZjNlNTBjZTU4Yjc0OWJjOGU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-01-24T17:43:07Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-02T23:09:51Z"}, "message": "Handle aggregates in DataflowConstProp.", "tree": {"sha": "905e65075b4a85d402d6c03487bccd23bd42cc5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/905e65075b4a85d402d6c03487bccd23bd42cc5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b62a9da0c839fa3e722d4baf3e50ce58b749bc8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b62a9da0c839fa3e722d4baf3e50ce58b749bc8e", "html_url": "https://github.com/rust-lang/rust/commit/b62a9da0c839fa3e722d4baf3e50ce58b749bc8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b62a9da0c839fa3e722d4baf3e50ce58b749bc8e/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20dd5e09fdeec25a7a6206e95ea8706e20ab8a01", "url": "https://api.github.com/repos/rust-lang/rust/commits/20dd5e09fdeec25a7a6206e95ea8706e20ab8a01", "html_url": "https://github.com/rust-lang/rust/commit/20dd5e09fdeec25a7a6206e95ea8706e20ab8a01"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "949a59a97bfb6a6e56b75d88d31f84c092530b61", "filename": "compiler/rustc_mir_transform/src/dataflow_const_prop.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b62a9da0c839fa3e722d4baf3e50ce58b749bc8e/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b62a9da0c839fa3e722d4baf3e50ce58b749bc8e/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs?ref=b62a9da0c839fa3e722d4baf3e50ce58b749bc8e", "patch": "@@ -5,6 +5,7 @@\n use rustc_const_eval::const_eval::CheckAlignment;\n use rustc_const_eval::interpret::{ConstValue, ImmTy, Immediate, InterpCx, Scalar};\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_hir::def::DefKind;\n use rustc_middle::mir::visit::{MutVisitor, Visitor};\n use rustc_middle::mir::*;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n@@ -85,6 +86,30 @@ impl<'tcx> ValueAnalysis<'tcx> for ConstAnalysis<'tcx> {\n         state: &mut State<Self::Value>,\n     ) {\n         match rvalue {\n+            Rvalue::Aggregate(kind, operands) => {\n+                let target = self.map().find(target.as_ref());\n+                if let Some(target) = target {\n+                    state.flood_idx_with(target, self.map(), FlatSet::Bottom);\n+                    let field_based = match **kind {\n+                        AggregateKind::Tuple | AggregateKind::Closure(..) => true,\n+                        AggregateKind::Adt(def_id, ..) => {\n+                            matches!(self.tcx.def_kind(def_id), DefKind::Struct)\n+                        }\n+                        _ => false,\n+                    };\n+                    if field_based {\n+                        for (field_index, operand) in operands.iter().enumerate() {\n+                            if let Some(field) = self\n+                                .map()\n+                                .apply(target, TrackElem::Field(Field::from_usize(field_index)))\n+                            {\n+                                let result = self.handle_operand(operand, state);\n+                                state.assign_idx(field, result, self.map());\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n             Rvalue::CheckedBinaryOp(op, box (left, right)) => {\n                 let target = self.map().find(target.as_ref());\n                 if let Some(target) = target {"}]}