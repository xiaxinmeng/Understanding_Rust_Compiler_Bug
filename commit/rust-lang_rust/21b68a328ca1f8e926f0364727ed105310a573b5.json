{"sha": "21b68a328ca1f8e926f0364727ed105310a573b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxYjY4YTMyOGNhMWY4ZTkyNmYwMzY0NzI3ZWQxMDUzMTBhNTczYjU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-16T23:26:01Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-16T23:26:01Z"}, "message": "Remove `module_lang_items`\n\nIt isn't used anywhere except in `crate_lang_items`. Remove it to\nslightly reduce memory usage and simplify the code.", "tree": {"sha": "94159153e6f1b26bc7f1b888aeee698ab182ed98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94159153e6f1b26bc7f1b888aeee698ab182ed98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21b68a328ca1f8e926f0364727ed105310a573b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21b68a328ca1f8e926f0364727ed105310a573b5", "html_url": "https://github.com/rust-lang/rust/commit/21b68a328ca1f8e926f0364727ed105310a573b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21b68a328ca1f8e926f0364727ed105310a573b5/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "785860bd171da1a18aed78a5020732831596cd78", "url": "https://api.github.com/repos/rust-lang/rust/commits/785860bd171da1a18aed78a5020732831596cd78", "html_url": "https://github.com/rust-lang/rust/commit/785860bd171da1a18aed78a5020732831596cd78"}], "stats": {"total": 89, "additions": 32, "deletions": 57}, "files": [{"sha": "d01e1b33d990914e4843bdf2d320f6fa95cb5f28", "filename": "crates/hir/src/db.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21b68a328ca1f8e926f0364727ed105310a573b5/crates%2Fhir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21b68a328ca1f8e926f0364727ed105310a573b5/crates%2Fhir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdb.rs?ref=21b68a328ca1f8e926f0364727ed105310a573b5", "patch": "@@ -6,8 +6,8 @@ pub use hir_def::db::{\n     FunctionDataQuery, GenericParamsQuery, ImplDataQuery, ImportMapQuery, InternConstQuery,\n     InternDatabase, InternDatabaseStorage, InternEnumQuery, InternFunctionQuery, InternImplQuery,\n     InternStaticQuery, InternStructQuery, InternTraitQuery, InternTypeAliasQuery, InternUnionQuery,\n-    ItemTreeQuery, LangItemQuery, ModuleLangItemsQuery, StaticDataQuery, StructDataQuery,\n-    TraitDataQuery, TypeAliasDataQuery, UnionDataQuery,\n+    ItemTreeQuery, LangItemQuery, StaticDataQuery, StructDataQuery, TraitDataQuery,\n+    TypeAliasDataQuery, UnionDataQuery,\n };\n pub use hir_expand::db::{\n     AstDatabase, AstDatabaseStorage, AstIdMapQuery, InternEagerExpansionQuery, InternMacroQuery,"}, {"sha": "d1a459066d70dd6ee3122cd61a581102207d0a82", "filename": "crates/hir_def/src/db.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/21b68a328ca1f8e926f0364727ed105310a573b5/crates%2Fhir_def%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21b68a328ca1f8e926f0364727ed105310a573b5/crates%2Fhir_def%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdb.rs?ref=21b68a328ca1f8e926f0364727ed105310a573b5", "patch": "@@ -16,8 +16,8 @@ use crate::{\n     lang_item::{LangItemTarget, LangItems},\n     nameres::CrateDefMap,\n     AttrDefId, ConstId, ConstLoc, DefWithBodyId, EnumId, EnumLoc, FunctionId, FunctionLoc,\n-    GenericDefId, ImplId, ImplLoc, ModuleId, StaticId, StaticLoc, StructId, StructLoc, TraitId,\n-    TraitLoc, TypeAliasId, TypeAliasLoc, UnionId, UnionLoc,\n+    GenericDefId, ImplId, ImplLoc, StaticId, StaticLoc, StructId, StructLoc, TraitId, TraitLoc,\n+    TypeAliasId, TypeAliasLoc, UnionId, UnionLoc,\n };\n \n #[salsa::query_group(InternDatabaseStorage)]\n@@ -95,9 +95,6 @@ pub trait DefDatabase: InternDatabase + AstDatabase + Upcast<dyn AstDatabase> {\n     #[salsa::invoke(Attrs::attrs_query)]\n     fn attrs(&self, def: AttrDefId) -> Attrs;\n \n-    #[salsa::invoke(LangItems::module_lang_items_query)]\n-    fn module_lang_items(&self, module: ModuleId) -> Option<Arc<LangItems>>;\n-\n     #[salsa::invoke(LangItems::crate_lang_items_query)]\n     fn crate_lang_items(&self, krate: CrateId) -> Arc<LangItems>;\n "}, {"sha": "30188b740d3cb90dea3bddf02763a4d69d0a90a0", "filename": "crates/hir_def/src/lang_item.rs", "status": "modified", "additions": 28, "deletions": 49, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/21b68a328ca1f8e926f0364727ed105310a573b5/crates%2Fhir_def%2Fsrc%2Flang_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21b68a328ca1f8e926f0364727ed105310a573b5/crates%2Fhir_def%2Fsrc%2Flang_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Flang_item.rs?ref=21b68a328ca1f8e926f0364727ed105310a573b5", "patch": "@@ -8,8 +8,8 @@ use rustc_hash::FxHashMap;\n use syntax::SmolStr;\n \n use crate::{\n-    db::DefDatabase, AdtId, AttrDefId, CrateId, EnumId, FunctionId, ImplId, ModuleDefId, ModuleId,\n-    StaticId, StructId, TraitId,\n+    db::DefDatabase, AdtId, AttrDefId, CrateId, EnumId, FunctionId, ImplId, ModuleDefId, StaticId,\n+    StructId, TraitId,\n };\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n@@ -84,27 +84,34 @@ impl LangItems {\n \n         let crate_def_map = db.crate_def_map(krate);\n \n-        crate_def_map\n-            .modules\n-            .iter()\n-            .filter_map(|(local_id, _)| db.module_lang_items(ModuleId { krate, local_id }))\n-            .for_each(|it| lang_items.items.extend(it.items.iter().map(|(k, v)| (k.clone(), *v))));\n-\n-        Arc::new(lang_items)\n-    }\n+        for (_, module_data) in crate_def_map.modules.iter() {\n+            for impl_def in module_data.scope.impls() {\n+                lang_items.collect_lang_item(db, impl_def, LangItemTarget::ImplDefId)\n+            }\n \n-    pub(crate) fn module_lang_items_query(\n-        db: &dyn DefDatabase,\n-        module: ModuleId,\n-    ) -> Option<Arc<LangItems>> {\n-        let _p = profile::span(\"module_lang_items_query\");\n-        let mut lang_items = LangItems::default();\n-        lang_items.collect_lang_items(db, module);\n-        if lang_items.items.is_empty() {\n-            None\n-        } else {\n-            Some(Arc::new(lang_items))\n+            for def in module_data.scope.declarations() {\n+                match def {\n+                    ModuleDefId::TraitId(trait_) => {\n+                        lang_items.collect_lang_item(db, trait_, LangItemTarget::TraitId)\n+                    }\n+                    ModuleDefId::AdtId(AdtId::EnumId(e)) => {\n+                        lang_items.collect_lang_item(db, e, LangItemTarget::EnumId)\n+                    }\n+                    ModuleDefId::AdtId(AdtId::StructId(s)) => {\n+                        lang_items.collect_lang_item(db, s, LangItemTarget::StructId)\n+                    }\n+                    ModuleDefId::FunctionId(f) => {\n+                        lang_items.collect_lang_item(db, f, LangItemTarget::FunctionId)\n+                    }\n+                    ModuleDefId::StaticId(s) => {\n+                        lang_items.collect_lang_item(db, s, LangItemTarget::StaticId)\n+                    }\n+                    _ => {}\n+                }\n+            }\n         }\n+\n+        Arc::new(lang_items)\n     }\n \n     /// Salsa query. Look for a lang item, starting from the specified crate and recursively\n@@ -126,34 +133,6 @@ impl LangItems {\n             .find_map(|dep| db.lang_item(dep.crate_id, item.clone()))\n     }\n \n-    fn collect_lang_items(&mut self, db: &dyn DefDatabase, module: ModuleId) {\n-        // Look for impl targets\n-        let def_map = db.crate_def_map(module.krate);\n-        let module_data = &def_map[module.local_id];\n-        for impl_def in module_data.scope.impls() {\n-            self.collect_lang_item(db, impl_def, LangItemTarget::ImplDefId)\n-        }\n-\n-        for def in module_data.scope.declarations() {\n-            match def {\n-                ModuleDefId::TraitId(trait_) => {\n-                    self.collect_lang_item(db, trait_, LangItemTarget::TraitId)\n-                }\n-                ModuleDefId::AdtId(AdtId::EnumId(e)) => {\n-                    self.collect_lang_item(db, e, LangItemTarget::EnumId)\n-                }\n-                ModuleDefId::AdtId(AdtId::StructId(s)) => {\n-                    self.collect_lang_item(db, s, LangItemTarget::StructId)\n-                }\n-                ModuleDefId::FunctionId(f) => {\n-                    self.collect_lang_item(db, f, LangItemTarget::FunctionId)\n-                }\n-                ModuleDefId::StaticId(s) => self.collect_lang_item(db, s, LangItemTarget::StaticId),\n-                _ => {}\n-            }\n-        }\n-    }\n-\n     fn collect_lang_item<T>(\n         &mut self,\n         db: &dyn DefDatabase,"}, {"sha": "71c19ed138ba3edcbcc8d0da6efdb146b982735a", "filename": "crates/ide_db/src/apply_change.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21b68a328ca1f8e926f0364727ed105310a573b5/crates%2Fide_db%2Fsrc%2Fapply_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21b68a328ca1f8e926f0364727ed105310a573b5/crates%2Fide_db%2Fsrc%2Fapply_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fapply_change.rs?ref=21b68a328ca1f8e926f0364727ed105310a573b5", "patch": "@@ -163,7 +163,6 @@ impl RootDatabase {\n             hir::db::ExprScopesQuery\n             hir::db::GenericParamsQuery\n             hir::db::AttrsQuery\n-            hir::db::ModuleLangItemsQuery\n             hir::db::CrateLangItemsQuery\n             hir::db::LangItemQuery\n             hir::db::ImportMapQuery"}]}