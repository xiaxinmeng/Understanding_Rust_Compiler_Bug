{"sha": "41fa7a404eeb0ea786b6bd76f35860784fbcb4be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZmE3YTQwNGVlYjBlYTc4NmI2YmQ3NmYzNTg2MDc4NGZiY2I0YmU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-02T19:03:46Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-02T19:03:46Z"}, "message": "Merge branch 'exterior_and_mutable_types' of git@github.com:graydon/rust into exterior_and_mutable_types", "tree": {"sha": "e72da0c716e2ee0095c15cf2dbf55e2f683658a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e72da0c716e2ee0095c15cf2dbf55e2f683658a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41fa7a404eeb0ea786b6bd76f35860784fbcb4be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41fa7a404eeb0ea786b6bd76f35860784fbcb4be", "html_url": "https://github.com/rust-lang/rust/commit/41fa7a404eeb0ea786b6bd76f35860784fbcb4be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41fa7a404eeb0ea786b6bd76f35860784fbcb4be/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "285a4735b9565cc75cabd02f7b9c89aa8a70657e", "url": "https://api.github.com/repos/rust-lang/rust/commits/285a4735b9565cc75cabd02f7b9c89aa8a70657e", "html_url": "https://github.com/rust-lang/rust/commit/285a4735b9565cc75cabd02f7b9c89aa8a70657e"}, {"sha": "a3431335118a00130de16857dc3d5e6d0c90c074", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3431335118a00130de16857dc3d5e6d0c90c074", "html_url": "https://github.com/rust-lang/rust/commit/a3431335118a00130de16857dc3d5e6d0c90c074"}], "stats": {"total": 40, "additions": 9, "deletions": 31}, "files": [{"sha": "92aad667d0168af181f9fee290ab08106828a488", "filename": "src/boot/fe/ast.ml", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/41fa7a404eeb0ea786b6bd76f35860784fbcb4be/src%2Fboot%2Ffe%2Fast.ml", "raw_url": "https://github.com/rust-lang/rust/raw/41fa7a404eeb0ea786b6bd76f35860784fbcb4be/src%2Fboot%2Ffe%2Fast.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fast.ml?ref=41fa7a404eeb0ea786b6bd76f35860784fbcb4be", "patch": "@@ -1180,6 +1180,13 @@ and fmt_stmt_body (ff:Format.formatter) (s:stmt) : unit =\n       | STMT_slice _ -> fmt ff \"?stmt_slice?\"\n   end\n \n+and fmt_decl_param (ff:Format.formatter) (param:ty_param) : unit =\n+  let (ident, (i, e)) = param in\n+  fmt_effect ff e;\n+  if e <> PURE then fmt ff \" \";\n+  fmt_ident ff ident;\n+  fmt ff \"=<p#%d>\" i\n+\n and fmt_decl_params (ff:Format.formatter) (params:ty_param array) : unit =\n   if Array.length params = 0\n   then ()\n@@ -1190,11 +1197,7 @@ and fmt_decl_params (ff:Format.formatter) (params:ty_param array) : unit =\n       do\n         if i <> 0\n         then fmt ff \", \";\n-        let (ident, (i, e)) = params.(i) in\n-          fmt_effect ff e;\n-          if e <> PURE then fmt ff \" \";\n-          fmt_ident ff ident;\n-          fmt ff \"=<p#%d>\" i\n+        fmt_decl_param ff params.(i)\n       done;\n       fmt ff \"]\"\n     end;\n@@ -1350,6 +1353,7 @@ let sprintf_tag = sprintf_fmt fmt_tag;;\n let sprintf_carg = sprintf_fmt fmt_carg;;\n let sprintf_constr = sprintf_fmt fmt_constr;;\n let sprintf_mod_items = sprintf_fmt fmt_mod_items;;\n+let sprintf_decl_param = sprintf_fmt fmt_decl_param;;\n let sprintf_decl_params = sprintf_fmt fmt_decl_params;;\n let sprintf_app_args = sprintf_fmt fmt_app_args;;\n "}, {"sha": "e0e52c8f93a33fc95707caa9c44bdff3456570db", "filename": "src/lib/util.rs", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/41fa7a404eeb0ea786b6bd76f35860784fbcb4be/src%2Flib%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41fa7a404eeb0ea786b6bd76f35860784fbcb4be/src%2Flib%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Futil.rs?ref=41fa7a404eeb0ea786b6bd76f35860784fbcb4be", "patch": "@@ -1,8 +1,4 @@\n type option[T] = tag(none(), some(T));\n-type box[T] = tup(@T);\n-type boxo[T] = option[box[T]];\n-type boxm[T] = tup(mutable @T);\n-type boxmo[T] = option[boxm[T]];\n \n type map[T, U] = fn(&T) -> U;\n \n@@ -17,28 +13,6 @@ fn option_map[T, U](map[T, U] f, &option[T] opt) -> option[U] {\n   }\n }\n \n-fn unbox[T](&box[T] b) -> T {\n-  ret b._0;\n-}\n-\n-\n-fn unboxm[T](&boxm[T] b) -> T {\n-  ret b._0;\n-}\n-\n-fn unboxo[T](boxo[T] b) -> option[T] {\n-  // Pending issue #90, no need to alias the function item in order to pass\n-  // it as an arg.\n-  let map[box[T], T] f = unbox[T];\n-  be option_map[box[T], T](f, b);\n-}\n-\n-fn unboxmo[T](boxmo[T] b) -> option[T] {\n-  // Issue #90, as above\n-  let map[boxm[T], T] f = unboxm[T];\n-  be option_map[boxm[T], T](f, b);\n-}\n-\n fn id[T](T x) -> T {\n   ret x;\n }"}]}