{"sha": "f3e8f6dc0834134de85157c801d414e764ed6fef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzZThmNmRjMDgzNDEzNGRlODUxNTdjODAxZDQxNGU3NjRlZDZmZWY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-26T13:35:51Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-26T13:35:51Z"}, "message": "Rustfmt", "tree": {"sha": "0f98e915fffca4d5cfaa467bf28bb3cedb58345b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f98e915fffca4d5cfaa467bf28bb3cedb58345b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3e8f6dc0834134de85157c801d414e764ed6fef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3e8f6dc0834134de85157c801d414e764ed6fef", "html_url": "https://github.com/rust-lang/rust/commit/f3e8f6dc0834134de85157c801d414e764ed6fef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3e8f6dc0834134de85157c801d414e764ed6fef/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7889a32c0fb764c1692ab33154668ef70992db64", "url": "https://api.github.com/repos/rust-lang/rust/commits/7889a32c0fb764c1692ab33154668ef70992db64", "html_url": "https://github.com/rust-lang/rust/commit/7889a32c0fb764c1692ab33154668ef70992db64"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "fcd41c844659d0bb937d2d70c044b9abcb08ca00", "filename": "src/constant.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3e8f6dc0834134de85157c801d414e764ed6fef/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3e8f6dc0834134de85157c801d414e764ed6fef/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=f3e8f6dc0834134de85157c801d414e764ed6fef", "patch": "@@ -124,7 +124,9 @@ pub(crate) fn codegen_constant<'tcx>(\n     };\n     let const_val = match const_.val {\n         ConstKind::Value(const_val) => const_val,\n-        ConstKind::Unevaluated(ty::Unevaluated { def, substs, promoted }) if fx.tcx.is_static(def.did) => {\n+        ConstKind::Unevaluated(ty::Unevaluated { def, substs, promoted })\n+            if fx.tcx.is_static(def.did) =>\n+        {\n             assert!(substs.is_empty());\n             assert!(promoted.is_none());\n "}]}