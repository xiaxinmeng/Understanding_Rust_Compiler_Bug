{"sha": "3be597acf3a0cac1939c4d9f0789510221667c96", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZTU5N2FjZjNhMGNhYzE5MzljNGQ5ZjA3ODk1MTAyMjE2NjdjOTY=", "commit": {"author": {"name": "Keith Yeung", "email": "kungfukeith11@gmail.com", "date": "2017-11-16T10:56:06Z"}, "committer": {"name": "Keith Yeung", "email": "kungfukeith11@gmail.com", "date": "2017-11-17T19:21:43Z"}, "message": "Allow assignment to static muts", "tree": {"sha": "de55c46e4a502cabd0d9d67dca92d4594adbbb46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de55c46e4a502cabd0d9d67dca92d4594adbbb46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3be597acf3a0cac1939c4d9f0789510221667c96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3be597acf3a0cac1939c4d9f0789510221667c96", "html_url": "https://github.com/rust-lang/rust/commit/3be597acf3a0cac1939c4d9f0789510221667c96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3be597acf3a0cac1939c4d9f0789510221667c96/comments", "author": {"login": "KiChjang", "id": 3248587, "node_id": "MDQ6VXNlcjMyNDg1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/3248587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KiChjang", "html_url": "https://github.com/KiChjang", "followers_url": "https://api.github.com/users/KiChjang/followers", "following_url": "https://api.github.com/users/KiChjang/following{/other_user}", "gists_url": "https://api.github.com/users/KiChjang/gists{/gist_id}", "starred_url": "https://api.github.com/users/KiChjang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KiChjang/subscriptions", "organizations_url": "https://api.github.com/users/KiChjang/orgs", "repos_url": "https://api.github.com/users/KiChjang/repos", "events_url": "https://api.github.com/users/KiChjang/events{/privacy}", "received_events_url": "https://api.github.com/users/KiChjang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "KiChjang", "id": 3248587, "node_id": "MDQ6VXNlcjMyNDg1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/3248587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KiChjang", "html_url": "https://github.com/KiChjang", "followers_url": "https://api.github.com/users/KiChjang/followers", "following_url": "https://api.github.com/users/KiChjang/following{/other_user}", "gists_url": "https://api.github.com/users/KiChjang/gists{/gist_id}", "starred_url": "https://api.github.com/users/KiChjang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KiChjang/subscriptions", "organizations_url": "https://api.github.com/users/KiChjang/orgs", "repos_url": "https://api.github.com/users/KiChjang/repos", "events_url": "https://api.github.com/users/KiChjang/events{/privacy}", "received_events_url": "https://api.github.com/users/KiChjang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "481b42b50745d433c5bcfd90e7a03a4b9110a677", "url": "https://api.github.com/repos/rust-lang/rust/commits/481b42b50745d433c5bcfd90e7a03a4b9110a677", "html_url": "https://github.com/rust-lang/rust/commit/481b42b50745d433c5bcfd90e7a03a4b9110a677"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "0a7e9d0a827952a8ead097c6f8d627c262b5e2a1", "filename": "src/librustc_mir/borrow_check.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3be597acf3a0cac1939c4d9f0789510221667c96/src%2Flibrustc_mir%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3be597acf3a0cac1939c4d9f0789510221667c96/src%2Flibrustc_mir%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check.rs?ref=3be597acf3a0cac1939c4d9f0789510221667c96", "patch": "@@ -640,10 +640,12 @@ impl<'c, 'b, 'a: 'b+'c, 'gcx, 'tcx: 'a> MirBorrowckCtxt<'c, 'b, 'a, 'gcx, 'tcx>\n                         Mutability::Mut => return,\n                     }\n                 }\n-                Lvalue::Static(_) => {\n+                Lvalue::Static(ref static_) => {\n                     // mutation of non-mut static is always illegal,\n                     // independent of dataflow.\n-                    self.report_assignment_to_static(context, (lvalue, span));\n+                    if !self.tcx.is_static_mut(static_.def_id) {\n+                        self.report_assignment_to_static(context, (lvalue, span));\n+                    }\n                     return;\n                 }\n             }"}, {"sha": "a4dd7b9b125c2248c7e0c3c2911d8861ab2abc9a", "filename": "src/test/run-pass/borrowck/borrowck-unsafe-static-mutable-borrows.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/3be597acf3a0cac1939c4d9f0789510221667c96/src%2Ftest%2Frun-pass%2Fborrowck%2Fborrowck-unsafe-static-mutable-borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3be597acf3a0cac1939c4d9f0789510221667c96/src%2Ftest%2Frun-pass%2Fborrowck%2Fborrowck-unsafe-static-mutable-borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck%2Fborrowck-unsafe-static-mutable-borrows.rs?ref=3be597acf3a0cac1939c4d9f0789510221667c96", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// revisions: ast mir\n+//[mir]compile-flags: -Z emit-end-regions -Z borrowck-mir\n+\n+// Test file taken from issue 45129 (https://github.com/rust-lang/rust/issues/45129)\n+\n+struct Foo { x: [usize; 2] }\n+\n+static mut SFOO: Foo = Foo { x: [23, 32] };\n+\n+impl Foo {\n+    fn x(&mut self) -> &mut usize { &mut self.x[0] }\n+}\n+\n+fn main() {\n+    unsafe {\n+        let sfoo: *mut Foo = &mut SFOO;\n+        let x = (*sfoo).x();\n+        (*sfoo).x[1] += 1;\n+        *x += 1;\n+    }\n+}"}]}