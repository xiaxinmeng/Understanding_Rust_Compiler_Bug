{"sha": "8154d23e44b6ea2c8c9464c3b396c2a5a45a50bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxNTRkMjNlNDRiNmVhMmM4Yzk0NjRjM2IzOTZjMmE1YTQ1YTUwYmY=", "commit": {"author": {"name": "Florian Gilcher", "email": "florian.gilcher@asquera.de", "date": "2013-10-02T14:15:07Z"}, "committer": {"name": "Florian Gilcher", "email": "florian.gilcher@asquera.de", "date": "2013-10-06T07:56:46Z"}, "message": "Clearer error message for external trait and type\n\nThe old error message implied that external traits could never\nbe implemented locally.", "tree": {"sha": "6a7606e014d416852f887f61579529fb38ecc3a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a7606e014d416852f887f61579529fb38ecc3a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8154d23e44b6ea2c8c9464c3b396c2a5a45a50bf", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8154d23e44b6ea2c8c9464c3b396c2a5a45a50bf", "html_url": "https://github.com/rust-lang/rust/commit/8154d23e44b6ea2c8c9464c3b396c2a5a45a50bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8154d23e44b6ea2c8c9464c3b396c2a5a45a50bf/comments", "author": {"login": "skade", "id": 47542, "node_id": "MDQ6VXNlcjQ3NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/47542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skade", "html_url": "https://github.com/skade", "followers_url": "https://api.github.com/users/skade/followers", "following_url": "https://api.github.com/users/skade/following{/other_user}", "gists_url": "https://api.github.com/users/skade/gists{/gist_id}", "starred_url": "https://api.github.com/users/skade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skade/subscriptions", "organizations_url": "https://api.github.com/users/skade/orgs", "repos_url": "https://api.github.com/users/skade/repos", "events_url": "https://api.github.com/users/skade/events{/privacy}", "received_events_url": "https://api.github.com/users/skade/received_events", "type": "User", "site_admin": false}, "committer": {"login": "skade", "id": 47542, "node_id": "MDQ6VXNlcjQ3NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/47542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skade", "html_url": "https://github.com/skade", "followers_url": "https://api.github.com/users/skade/followers", "following_url": "https://api.github.com/users/skade/following{/other_user}", "gists_url": "https://api.github.com/users/skade/gists{/gist_id}", "starred_url": "https://api.github.com/users/skade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skade/subscriptions", "organizations_url": "https://api.github.com/users/skade/orgs", "repos_url": "https://api.github.com/users/skade/repos", "events_url": "https://api.github.com/users/skade/events{/privacy}", "received_events_url": "https://api.github.com/users/skade/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5c980ac2a46292a49fb1b2321340e0aebc6e71e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5c980ac2a46292a49fb1b2321340e0aebc6e71e", "html_url": "https://github.com/rust-lang/rust/commit/c5c980ac2a46292a49fb1b2321340e0aebc6e71e"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6adbcbf89d755904e74423e8959a59af38e8b038", "filename": "src/librustc/middle/typeck/coherence.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8154d23e44b6ea2c8c9464c3b396c2a5a45a50bf/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8154d23e44b6ea2c8c9464c3b396c2a5a45a50bf/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs?ref=8154d23e44b6ea2c8c9464c3b396c2a5a45a50bf", "patch": "@@ -216,8 +216,8 @@ impl visit::Visitor<()> for PrivilegedScopeVisitor {\n                             if trait_def_id.crate != LOCAL_CRATE {\n                                 let session = self.cc.crate_context.tcx.sess;\n                                 session.span_err(item.span,\n-                                                 \"cannot provide an extension implementation \\\n-                                                  for a trait not defined in this crate\");\n+                                        \"cannot provide an extension implementation \\\n+                                        where both trait and type are not defined in this crate\");\n                             }\n                         }\n "}]}