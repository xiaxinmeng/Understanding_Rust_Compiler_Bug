{"sha": "c9b5fac7da34eaf027ba5dc62b5f7f9605e0b2e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5YjVmYWM3ZGEzNGVhZjAyN2JhNWRjNjJiNWY3Zjk2MDVlMGIyZTk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-27T15:57:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-28T17:57:05Z"}, "message": "first test const-ness, then hook fn call", "tree": {"sha": "d7b510f3c64ea836442a7ec9d8881887e800547b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7b510f3c64ea836442a7ec9d8881887e800547b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9b5fac7da34eaf027ba5dc62b5f7f9605e0b2e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9b5fac7da34eaf027ba5dc62b5f7f9605e0b2e9", "html_url": "https://github.com/rust-lang/rust/commit/c9b5fac7da34eaf027ba5dc62b5f7f9605e0b2e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9b5fac7da34eaf027ba5dc62b5f7f9605e0b2e9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "506dd7058c723aa82f8a1723ac259f5f02638055", "url": "https://api.github.com/repos/rust-lang/rust/commits/506dd7058c723aa82f8a1723ac259f5f02638055", "html_url": "https://github.com/rust-lang/rust/commit/506dd7058c723aa82f8a1723ac259f5f02638055"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "295fca839c812bd43c11ec858749a84eb863a999", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c9b5fac7da34eaf027ba5dc62b5f7f9605e0b2e9/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9b5fac7da34eaf027ba5dc62b5f7f9605e0b2e9/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=c9b5fac7da34eaf027ba5dc62b5f7f9605e0b2e9", "patch": "@@ -246,11 +246,13 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeEvaluator {\n         ret: Option<mir::BasicBlock>,\n     ) -> EvalResult<'tcx, Option<&'mir mir::Mir<'tcx>>> {\n         debug!(\"eval_fn_call: {:?}\", instance);\n-        if ecx.hook_fn(instance, args, dest)? {\n-            ecx.goto_block(ret)?; // fully evaluated and done\n-            return Ok(None);\n-        }\n         if !ecx.tcx.is_const_fn(instance.def_id()) {\n+            // Some functions we support even if they are non-const -- but avoid testing\n+            // that for const fn!\n+            if ecx.hook_fn(instance, args, dest)? {\n+                ecx.goto_block(ret)?; // fully evaluated and done\n+                return Ok(None);\n+            }\n             return Err(\n                 ConstEvalError::NotConst(format!(\"calling non-const fn `{}`\", instance)).into(),\n             );"}]}