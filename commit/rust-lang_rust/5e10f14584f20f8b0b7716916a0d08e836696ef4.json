{"sha": "5e10f14584f20f8b0b7716916a0d08e836696ef4", "node_id": "C_kwDOAAsO6NoAKDVlMTBmMTQ1ODRmMjBmOGIwYjc3MTY5MTZhMGQwOGU4MzY2OTZlZjQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-18T13:13:07Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-18T13:13:07Z"}, "message": "clippy...", "tree": {"sha": "1b276c194e977ff7c6a3ec8872c036d4889d3e67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b276c194e977ff7c6a3ec8872c036d4889d3e67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e10f14584f20f8b0b7716916a0d08e836696ef4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e10f14584f20f8b0b7716916a0d08e836696ef4", "html_url": "https://github.com/rust-lang/rust/commit/5e10f14584f20f8b0b7716916a0d08e836696ef4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e10f14584f20f8b0b7716916a0d08e836696ef4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4359f43e922a07d26dd9942f184289289d2aef84", "url": "https://api.github.com/repos/rust-lang/rust/commits/4359f43e922a07d26dd9942f184289289d2aef84", "html_url": "https://github.com/rust-lang/rust/commit/4359f43e922a07d26dd9942f184289289d2aef84"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "2c30ee06c0573d5aa3c2e991b1a87a460c15b7b5", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5e10f14584f20f8b0b7716916a0d08e836696ef4/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e10f14584f20f8b0b7716916a0d08e836696ef4/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=5e10f14584f20f8b0b7716916a0d08e836696ef4", "patch": "@@ -24,6 +24,7 @@\n     clippy::derive_hash_xor_eq,\n     clippy::too_many_arguments,\n     clippy::type_complexity,\n+    clippy::single_element_loop,\n     // We are not implementing queries here so it's fine\n     rustc::potential_query_instability\n )]"}, {"sha": "28941a3de4eccab98f559e41578768739bbc80d0", "filename": "src/shims/unix/android/dlsym.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e10f14584f20f8b0b7716916a0d08e836696ef4/src%2Fshims%2Funix%2Fandroid%2Fdlsym.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e10f14584f20f8b0b7716916a0d08e836696ef4/src%2Fshims%2Funix%2Fandroid%2Fdlsym.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Funix%2Fandroid%2Fdlsym.rs?ref=5e10f14584f20f8b0b7716916a0d08e836696ef4", "patch": "@@ -13,7 +13,7 @@ impl Dlsym {\n     // Returns an error for unsupported symbols, and None if this symbol\n     // should become a NULL pointer (pretend it does not exist).\n     pub fn from_str<'tcx>(name: &str) -> InterpResult<'tcx, Option<Dlsym>> {\n-        Ok(match &*name {\n+        Ok(match name {\n             \"signal\" => Some(Dlsym::signal),\n             \"android_set_abort_message\" => None,\n             _ => throw_unsup_format!(\"unsupported Android dlsym: {}\", name),"}, {"sha": "9c12736887fa02ee6f0f93b410acecf2c1c1f9c8", "filename": "src/shims/unix/android/foreign_items.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5e10f14584f20f8b0b7716916a0d08e836696ef4/src%2Fshims%2Funix%2Fandroid%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e10f14584f20f8b0b7716916a0d08e836696ef4/src%2Fshims%2Funix%2Fandroid%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Funix%2Fandroid%2Fforeign_items.rs?ref=5e10f14584f20f8b0b7716916a0d08e836696ef4", "patch": "@@ -15,9 +15,12 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         _dest: &PlaceTy<'tcx, Provenance>,\n     ) -> InterpResult<'tcx, EmulateByNameResult<'mir, 'tcx>> {\n         let _this = self.eval_context_mut();\n+        #[allow(clippy::match_single_binding)]\n         match link_name.as_str() {\n             _ => return Ok(EmulateByNameResult::NotSupported),\n         }\n-        //Ok(EmulateByNameResult::NeedsJumping)\n+\n+        #[allow(unreachable_code)]\n+        Ok(EmulateByNameResult::NeedsJumping)\n     }\n }"}]}