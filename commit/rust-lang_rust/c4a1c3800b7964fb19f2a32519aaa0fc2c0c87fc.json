{"sha": "c4a1c3800b7964fb19f2a32519aaa0fc2c0c87fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0YTFjMzgwMGI3OTY0ZmIxOWYyYTMyNTE5YWFhMGZjMmMwYzg3ZmM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-17T01:16:38Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-17T01:16:38Z"}, "message": "Register new snapshots\n\nThis is the first linux snapshot created on our new CentOS 5.10 builders.\n\nCloses #9545", "tree": {"sha": "5576894c258e029e1c2fe18b185768c7b3f1f8b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5576894c258e029e1c2fe18b185768c7b3f1f8b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4a1c3800b7964fb19f2a32519aaa0fc2c0c87fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4a1c3800b7964fb19f2a32519aaa0fc2c0c87fc", "html_url": "https://github.com/rust-lang/rust/commit/c4a1c3800b7964fb19f2a32519aaa0fc2c0c87fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4a1c3800b7964fb19f2a32519aaa0fc2c0c87fc/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e784e16840e8a0c623cc6166de26da9334db3d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e784e16840e8a0c623cc6166de26da9334db3d6", "html_url": "https://github.com/rust-lang/rust/commit/0e784e16840e8a0c623cc6166de26da9334db3d6"}], "stats": {"total": 45, "additions": 9, "deletions": 36}, "files": [{"sha": "349ae15eb32a0c58c0a59b50a95596ec807d9938", "filename": "src/liballoc/heap.rs", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c4a1c3800b7964fb19f2a32519aaa0fc2c0c87fc/src%2Fliballoc%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4a1c3800b7964fb19f2a32519aaa0fc2c0c87fc/src%2Fliballoc%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fheap.rs?ref=c4a1c3800b7964fb19f2a32519aaa0fc2c0c87fc", "patch": "@@ -10,9 +10,6 @@\n \n // FIXME: #13996: mark the `allocate` and `reallocate` return value as `noalias`\n \n-#[cfg(stage0, not(test))] use core::raw;\n-#[cfg(stage0, not(test))] use util;\n-\n /// Returns a pointer to `size` bytes of memory.\n ///\n /// Behavior is undefined if the requested size is 0 or the alignment is not a\n@@ -111,21 +108,6 @@ unsafe fn exchange_free(ptr: *mut u8, size: uint, align: uint) {\n     deallocate(ptr, size, align);\n }\n \n-#[cfg(stage0, not(test))]\n-#[lang=\"closure_exchange_malloc\"]\n-#[inline]\n-#[allow(deprecated)]\n-unsafe fn closure_exchange_malloc(drop_glue: fn(*mut u8), size: uint,\n-                                  align: uint) -> *mut u8 {\n-    let total_size = util::get_box_size(size, align);\n-    let p = allocate(total_size, 8);\n-\n-    let alloc = p as *mut raw::Box<()>;\n-    (*alloc).drop_glue = drop_glue;\n-\n-    alloc as *mut u8\n-}\n-\n // The minimum alignment guaranteed by the architecture. This value is used to\n // add fast paths for low alignment values. In practice, the alignment is a\n // constant at the call site and the branch will be optimized out.\n@@ -155,9 +137,6 @@ mod imp {\n                       flags: c_int) -> *mut c_void;\n         fn je_xallocx(ptr: *mut c_void, size: size_t, extra: size_t,\n                       flags: c_int) -> size_t;\n-        #[cfg(stage0)]\n-        fn je_dallocx(ptr: *mut c_void, flags: c_int);\n-        #[cfg(not(stage0))]\n         fn je_sdallocx(ptr: *mut c_void, size: size_t, flags: c_int);\n         fn je_nallocx(size: size_t, flags: c_int) -> size_t;\n         fn je_malloc_stats_print(write_cb: Option<extern \"C\" fn(cbopaque: *mut c_void,\n@@ -209,14 +188,6 @@ mod imp {\n     }\n \n     #[inline]\n-    #[cfg(stage0)]\n-    pub unsafe fn deallocate(ptr: *mut u8, _size: uint, align: uint) {\n-        let flags = align_to_flags(align);\n-        je_dallocx(ptr as *mut c_void, flags)\n-    }\n-\n-    #[inline]\n-    #[cfg(not(stage0))]\n     pub unsafe fn deallocate(ptr: *mut u8, size: uint, align: uint) {\n         let flags = align_to_flags(align);\n         je_sdallocx(ptr as *mut c_void, size as size_t, flags)"}, {"sha": "1c88eb6ddfa17819195e9e796fe043be80b25857", "filename": "src/libcore/fmt/rt.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c4a1c3800b7964fb19f2a32519aaa0fc2c0c87fc/src%2Flibcore%2Ffmt%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4a1c3800b7964fb19f2a32519aaa0fc2c0c87fc/src%2Flibcore%2Ffmt%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Frt.rs?ref=c4a1c3800b7964fb19f2a32519aaa0fc2c0c87fc", "patch": "@@ -14,13 +14,6 @@\n //! These definitions are similar to their `ct` equivalents, but differ in that\n //! these can be statically allocated and are slightly optimized for the runtime\n \n-#[cfg(stage0)]\n-#[doc(hidden)]\n-pub enum Piece<'a> {\n-    String(&'a str),\n-    Argument(Argument<'a>),\n-}\n-\n #[doc(hidden)]\n pub struct Argument<'a> {\n     pub position: Position,"}, {"sha": "86fa0a51f9088822850ade9258d8b4f858005245", "filename": "src/snapshots.txt", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c4a1c3800b7964fb19f2a32519aaa0fc2c0c87fc/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c4a1c3800b7964fb19f2a32519aaa0fc2c0c87fc/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=c4a1c3800b7964fb19f2a32519aaa0fc2c0c87fc", "patch": "@@ -1,3 +1,12 @@\n+S 2014-09-16 828e075\n+  winnt-x86_64 ce1e9d7f6967bfa368853e7c968e1626cc319951\n+  winnt-i386 a8bd994666dfe683a5d7922c7998500255780724\n+  linux-x86_64 88ff474db96c6ffc5c1dc7a43442cbe1cd88c8a2\n+  linux-i386 7a731891f726c8a0590b142a4e8924c5e8b22e8d\n+  freebsd-x86_64 e67a56f76484f775cd4836dedb2d1069ab5d7921\n+  macos-i386 f48023648a77e89086f4a2b39d76b09e4fff032d\n+  macos-x86_64 2ad6457b2b3036f87eae7581d64ee5341a07fb06\n+\n S 2014-09-10 6faa4f3\n   winnt-x86_64 939eb546469cb936441cff3b6f2478f562f77c46\n   winnt-i386 cfe4f8b519bb9d62588f9310a8f94bc919d5423b"}]}