{"sha": "459821b1914248180cac691128dd35d945bfde88", "node_id": "C_kwDOAAsO6NoAKDQ1OTgyMWIxOTE0MjQ4MTgwY2FjNjkxMTI4ZGQzNWQ5NDViZmRlODg", "commit": {"author": {"name": "tamaron", "email": "tamaron1203@gmail.com", "date": "2022-07-02T03:57:57Z"}, "committer": {"name": "tamaron", "email": "tamaron1203@gmail.com", "date": "2022-08-11T06:07:38Z"}, "message": "fix", "tree": {"sha": "ed998c9209c577526d68c414ea20b8de3e3907db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed998c9209c577526d68c414ea20b8de3e3907db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/459821b1914248180cac691128dd35d945bfde88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/459821b1914248180cac691128dd35d945bfde88", "html_url": "https://github.com/rust-lang/rust/commit/459821b1914248180cac691128dd35d945bfde88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/459821b1914248180cac691128dd35d945bfde88/comments", "author": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7e2cb4470f5288e6657166fb0fcdf4b7043517f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7e2cb4470f5288e6657166fb0fcdf4b7043517f", "html_url": "https://github.com/rust-lang/rust/commit/f7e2cb4470f5288e6657166fb0fcdf4b7043517f"}], "stats": {"total": 86, "additions": 84, "deletions": 2}, "files": [{"sha": "53a4a91d0e765ba08e7cd29882ebaf9c2d8c68af", "filename": "clippy_lints/src/matches/needless_match.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/459821b1914248180cac691128dd35d945bfde88/clippy_lints%2Fsrc%2Fmatches%2Fneedless_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/459821b1914248180cac691128dd35d945bfde88/clippy_lints%2Fsrc%2Fmatches%2Fneedless_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fneedless_match.rs?ref=459821b1914248180cac691128dd35d945bfde88", "patch": "@@ -66,7 +66,9 @@ fn check_all_arms(cx: &LateContext<'_>, match_expr: &Expr<'_>, arms: &[Arm<'_>])\n     for arm in arms {\n         let arm_expr = peel_blocks_with_stmt(arm.body);\n         if let PatKind::Wild = arm.pat.kind {\n-            return eq_expr_value(cx, match_expr, strip_return(arm_expr));\n+            if !eq_expr_value(cx, match_expr, strip_return(arm_expr)) {\n+                return false;\n+            }\n         } else if !pat_same_as_expr(arm.pat, arm_expr) {\n             return false;\n         }"}, {"sha": "9d4427f1df27fd6819ff1b9a353bd57cb6b25865", "filename": "tests/ui/needless_match.fixed", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/459821b1914248180cac691128dd35d945bfde88/tests%2Fui%2Fneedless_match.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/459821b1914248180cac691128dd35d945bfde88/tests%2Fui%2Fneedless_match.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_match.fixed?ref=459821b1914248180cac691128dd35d945bfde88", "patch": "@@ -207,4 +207,30 @@ impl Tr for Result<i32, i32> {\n     }\n }\n \n+mod issue9084 {\n+    fn wildcard_if() {\n+        let some_bool = true;\n+        let e = Some(1);\n+\n+        // should lint\n+        let _ = e;\n+\n+        // should lint\n+        let _ = e;\n+\n+        // should not lint\n+        let _ = match e {\n+            _ if some_bool => e,\n+            _ => Some(2),\n+        };\n+\n+        // should not lint\n+        let _ = match e {\n+            Some(i) => Some(i + 1),\n+            _ if some_bool => e,\n+            _ => e,\n+        };\n+    }\n+}\n+\n fn main() {}"}, {"sha": "cae850fb0591e03f0602727538fb4ad93e8d6333", "filename": "tests/ui/needless_match.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/459821b1914248180cac691128dd35d945bfde88/tests%2Fui%2Fneedless_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/459821b1914248180cac691128dd35d945bfde88/tests%2Fui%2Fneedless_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_match.rs?ref=459821b1914248180cac691128dd35d945bfde88", "patch": "@@ -244,4 +244,37 @@ impl Tr for Result<i32, i32> {\n     }\n }\n \n+mod issue9084 {\n+    fn wildcard_if() {\n+        let some_bool = true;\n+        let e = Some(1);\n+\n+        // should lint\n+        let _ = match e {\n+            _ if some_bool => e,\n+            _ => e,\n+        };\n+\n+        // should lint\n+        let _ = match e {\n+            Some(i) => Some(i),\n+            _ if some_bool => e,\n+            _ => e,\n+        };\n+\n+        // should not lint\n+        let _ = match e {\n+            _ if some_bool => e,\n+            _ => Some(2),\n+        };\n+\n+        // should not lint\n+        let _ = match e {\n+            Some(i) => Some(i + 1),\n+            _ if some_bool => e,\n+            _ => e,\n+        };\n+    }\n+}\n+\n fn main() {}"}, {"sha": "a173bbe4d77f7361185298752cf137a778aafeb2", "filename": "tests/ui/needless_match.stderr", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/459821b1914248180cac691128dd35d945bfde88/tests%2Fui%2Fneedless_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/459821b1914248180cac691128dd35d945bfde88/tests%2Fui%2Fneedless_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_match.stderr?ref=459821b1914248180cac691128dd35d945bfde88", "patch": "@@ -109,5 +109,26 @@ LL | |             Complex::D(E::VariantB(ea, eb), b) => Complex::D(E::VariantB(\n LL | |         };\n    | |_________^ help: replace it with: `ce`\n \n-error: aborting due to 11 previous errors\n+error: this match expression is unnecessary\n+  --> $DIR/needless_match.rs:252:17\n+   |\n+LL |           let _ = match e {\n+   |  _________________^\n+LL | |             _ if some_bool => e,\n+LL | |             _ => e,\n+LL | |         };\n+   | |_________^ help: replace it with: `e`\n+\n+error: this match expression is unnecessary\n+  --> $DIR/needless_match.rs:258:17\n+   |\n+LL |           let _ = match e {\n+   |  _________________^\n+LL | |             Some(i) => Some(i),\n+LL | |             _ if some_bool => e,\n+LL | |             _ => e,\n+LL | |         };\n+   | |_________^ help: replace it with: `e`\n+\n+error: aborting due to 13 previous errors\n "}]}