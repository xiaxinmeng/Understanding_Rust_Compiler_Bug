{"sha": "06af44238f2b7a82995dc0a354403ab68dab7cc5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2YWY0NDIzOGYyYjdhODI5OTVkYzBhMzU0NDAzYWI2OGRhYjdjYzU=", "commit": {"author": {"name": "BaoshanPang", "email": "pangbw@gmail.com", "date": "2020-01-17T17:29:09Z"}, "committer": {"name": "BaoshanPang", "email": "pangbw@gmail.com", "date": "2020-01-24T17:59:59Z"}, "message": "Support feature process_set_argv0 for VxWorks", "tree": {"sha": "1fcf45ae81d98b6514c779fc5f59b14da1bd8f1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fcf45ae81d98b6514c779fc5f59b14da1bd8f1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06af44238f2b7a82995dc0a354403ab68dab7cc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06af44238f2b7a82995dc0a354403ab68dab7cc5", "html_url": "https://github.com/rust-lang/rust/commit/06af44238f2b7a82995dc0a354403ab68dab7cc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06af44238f2b7a82995dc0a354403ab68dab7cc5/comments", "author": {"login": "BaoshanPang", "id": 3380860, "node_id": "MDQ6VXNlcjMzODA4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3380860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BaoshanPang", "html_url": "https://github.com/BaoshanPang", "followers_url": "https://api.github.com/users/BaoshanPang/followers", "following_url": "https://api.github.com/users/BaoshanPang/following{/other_user}", "gists_url": "https://api.github.com/users/BaoshanPang/gists{/gist_id}", "starred_url": "https://api.github.com/users/BaoshanPang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BaoshanPang/subscriptions", "organizations_url": "https://api.github.com/users/BaoshanPang/orgs", "repos_url": "https://api.github.com/users/BaoshanPang/repos", "events_url": "https://api.github.com/users/BaoshanPang/events{/privacy}", "received_events_url": "https://api.github.com/users/BaoshanPang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BaoshanPang", "id": 3380860, "node_id": "MDQ6VXNlcjMzODA4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3380860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BaoshanPang", "html_url": "https://github.com/BaoshanPang", "followers_url": "https://api.github.com/users/BaoshanPang/followers", "following_url": "https://api.github.com/users/BaoshanPang/following{/other_user}", "gists_url": "https://api.github.com/users/BaoshanPang/gists{/gist_id}", "starred_url": "https://api.github.com/users/BaoshanPang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BaoshanPang/subscriptions", "organizations_url": "https://api.github.com/users/BaoshanPang/orgs", "repos_url": "https://api.github.com/users/BaoshanPang/repos", "events_url": "https://api.github.com/users/BaoshanPang/events{/privacy}", "received_events_url": "https://api.github.com/users/BaoshanPang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cec957e1542c062e97f664aab5b23ebd532f5c85", "url": "https://api.github.com/repos/rust-lang/rust/commits/cec957e1542c062e97f664aab5b23ebd532f5c85", "html_url": "https://github.com/rust-lang/rust/commit/cec957e1542c062e97f664aab5b23ebd532f5c85"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "31e691dd1360b53df94ed31b3793d521f4efc812", "filename": "src/libstd/sys/vxworks/ext/process.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/06af44238f2b7a82995dc0a354403ab68dab7cc5/src%2Flibstd%2Fsys%2Fvxworks%2Fext%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06af44238f2b7a82995dc0a354403ab68dab7cc5/src%2Flibstd%2Fsys%2Fvxworks%2Fext%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Fext%2Fprocess.rs?ref=06af44238f2b7a82995dc0a354403ab68dab7cc5", "patch": "@@ -2,6 +2,7 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n+use crate::ffi::OsStr;\n use crate::io;\n use crate::process;\n use crate::sys;\n@@ -105,6 +106,15 @@ pub trait CommandExt {\n     /// cross-platform `spawn` instead.\n     #[stable(feature = \"process_exec2\", since = \"1.9.0\")]\n     fn exec(&mut self) -> io::Error;\n+\n+    /// Set executable argument\n+    ///\n+    /// Set the first process argument, `argv[0]`, to something other than the\n+    /// default executable path.\n+    #[unstable(feature = \"process_set_argv0\", issue = \"66510\")]\n+    fn arg0<S>(&mut self, arg: S) -> &mut process::Command\n+    where\n+        S: AsRef<OsStr>;\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -130,6 +140,14 @@ impl CommandExt for process::Command {\n     fn exec(&mut self) -> io::Error {\n         self.as_inner_mut().exec(sys::process::Stdio::Inherit)\n     }\n+\n+    fn arg0<S>(&mut self, arg: S) -> &mut process::Command\n+    where\n+        S: AsRef<OsStr>,\n+    {\n+        self.as_inner_mut().set_arg_0(arg.as_ref());\n+        self\n+    }\n }\n \n /// Unix-specific extensions to [`process::ExitStatus`]."}, {"sha": "6d5506bec5f7dbceaa14217dafa77ce009f7b59b", "filename": "src/libstd/sys/vxworks/process/process_common.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/06af44238f2b7a82995dc0a354403ab68dab7cc5/src%2Flibstd%2Fsys%2Fvxworks%2Fprocess%2Fprocess_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06af44238f2b7a82995dc0a354403ab68dab7cc5/src%2Flibstd%2Fsys%2Fvxworks%2Fprocess%2Fprocess_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Fprocess%2Fprocess_common.rs?ref=06af44238f2b7a82995dc0a354403ab68dab7cc5", "patch": "@@ -90,8 +90,8 @@ impl Command {\n         let program = os2c(program, &mut saw_nul);\n         Command {\n             argv: Argv(vec![program.as_ptr(), ptr::null()]),\n+            args: vec![program.clone()],\n             program,\n-            args: Vec::new(),\n             env: Default::default(),\n             cwd: None,\n             uid: None,\n@@ -104,11 +104,19 @@ impl Command {\n         }\n     }\n \n+    pub fn set_arg_0(&mut self, arg: &OsStr) {\n+        // Set a new arg0\n+        let arg = os2c(arg, &mut self.saw_nul);\n+        debug_assert!(self.argv.0.len() > 1);\n+        self.argv.0[0] = arg.as_ptr();\n+        self.args[0] = arg;\n+    }\n+\n     pub fn arg(&mut self, arg: &OsStr) {\n         // Overwrite the trailing NULL pointer in `argv` and then add a new null\n         // pointer.\n         let arg = os2c(arg, &mut self.saw_nul);\n-        self.argv.0[self.args.len() + 1] = arg.as_ptr();\n+        self.argv.0[self.args.len()] = arg.as_ptr();\n         self.argv.0.push(ptr::null());\n \n         // Also make sure we keep track of the owned value to schedule a\n@@ -133,6 +141,10 @@ impl Command {\n         &self.argv.0\n     }\n \n+    pub fn get_program(&self) -> &CStr {\n+        &*self.program\n+    }\n+\n     #[allow(dead_code)]\n     pub fn get_cwd(&self) -> &Option<CString> {\n         &self.cwd\n@@ -315,8 +327,12 @@ impl ChildStdio {\n \n impl fmt::Debug for Command {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        write!(f, \"{:?}\", self.program)?;\n-        for arg in &self.args {\n+        if self.program != self.args[0] {\n+            write!(f, \"[{:?}] \", self.program)?;\n+        }\n+        write!(f, \"{:?}\", self.args[0])?;\n+\n+        for arg in &self.args[1..] {\n             write!(f, \" {:?}\", arg)?;\n         }\n         Ok(())"}, {"sha": "f7e84ae3de9c78ab328b2e9eba61a3e75fde2430", "filename": "src/libstd/sys/vxworks/process/process_vxworks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06af44238f2b7a82995dc0a354403ab68dab7cc5/src%2Flibstd%2Fsys%2Fvxworks%2Fprocess%2Fprocess_vxworks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06af44238f2b7a82995dc0a354403ab68dab7cc5/src%2Flibstd%2Fsys%2Fvxworks%2Fprocess%2Fprocess_vxworks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Fprocess%2Fprocess_vxworks.rs?ref=06af44238f2b7a82995dc0a354403ab68dab7cc5", "patch": "@@ -67,7 +67,7 @@ impl Command {\n             let _lock = sys::os::env_lock();\n \n             let ret = libc::rtpSpawn(\n-                self.get_argv()[0],                             // executing program\n+                self.get_program().as_ptr(),\n                 self.get_argv().as_ptr() as *mut *const c_char, // argv\n                 c_envp as *mut *const c_char,\n                 100 as c_int, // initial priority"}]}