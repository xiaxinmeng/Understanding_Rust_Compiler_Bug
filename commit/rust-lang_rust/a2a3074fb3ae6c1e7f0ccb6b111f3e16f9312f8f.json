{"sha": "a2a3074fb3ae6c1e7f0ccb6b111f3e16f9312f8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYTMwNzRmYjNhZTZjMWU3ZjBjY2I2YjExMWYzZTE2ZjkzMTJmOGY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-01-27T22:41:09Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-01-28T00:41:49Z"}, "message": "Rollup merge of #38617 - pnkfelix:double-reference, r=pnkfelix\n\nDetect double reference when applying binary op\n\n``` rust\nlet vr = v.iter().filter(|x| {\n    x % 2 == 0\n});\n```\n\nwill now yield the following compiler output:\n\n``` bash\nERROR binary operation `%` cannot be applied to type `&&_`\nNOTE this is a reference of a reference to a type that `%` can be applied to,\nyou need to dereference this variable once for this operation to work\nNOTE an implementation of `std::ops::Rem` might be missing for `&&_`\n```\n\nThe first NOTE is new.\n\nFix #33877\n\n----\n\nThanks to @estebank for providing the original PR #34420 (of which this is a tweaked rebase).", "tree": {"sha": "50ee89fae80b4f34af743050c29a128f978be283", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50ee89fae80b4f34af743050c29a128f978be283"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2a3074fb3ae6c1e7f0ccb6b111f3e16f9312f8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2a3074fb3ae6c1e7f0ccb6b111f3e16f9312f8f", "html_url": "https://github.com/rust-lang/rust/commit/a2a3074fb3ae6c1e7f0ccb6b111f3e16f9312f8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2a3074fb3ae6c1e7f0ccb6b111f3e16f9312f8f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "154c202afb256c379b7d454ec0244da69eaa2ced", "url": "https://api.github.com/repos/rust-lang/rust/commits/154c202afb256c379b7d454ec0244da69eaa2ced", "html_url": "https://github.com/rust-lang/rust/commit/154c202afb256c379b7d454ec0244da69eaa2ced"}, {"sha": "b8669dff556a03ca37b39cbb81be65c94d24defe", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8669dff556a03ca37b39cbb81be65c94d24defe", "html_url": "https://github.com/rust-lang/rust/commit/b8669dff556a03ca37b39cbb81be65c94d24defe"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "925d28247b610cc1268ff5a83623f975801d885a", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a2a3074fb3ae6c1e7f0ccb6b111f3e16f9312f8f/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2a3074fb3ae6c1e7f0ccb6b111f3e16f9312f8f/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=a2a3074fb3ae6c1e7f0ccb6b111f3e16f9312f8f", "patch": "@@ -12,7 +12,7 @@\n \n use super::FnCtxt;\n use hir::def_id::DefId;\n-use rustc::ty::{Ty, TypeFoldable, PreferMutLvalue};\n+use rustc::ty::{Ty, TypeFoldable, PreferMutLvalue, TypeVariants};\n use rustc::infer::type_variable::TypeVariableOrigin;\n use syntax::ast;\n use syntax::symbol::Symbol;\n@@ -204,6 +204,22 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                             \"binary operation `{}` cannot be applied to type `{}`\",\n                             op.node.as_str(),\n                             lhs_ty);\n+\n+                        if let TypeVariants::TyRef(_, ref ty_mut) = lhs_ty.sty {\n+                            if !self.infcx.type_moves_by_default(ty_mut.ty, lhs_expr.span) &&\n+                                self.lookup_op_method(expr, ty_mut.ty, vec![rhs_ty_var],\n+                                    Symbol::intern(name), trait_def_id,\n+                                    lhs_expr).is_ok() {\n+                                err.span_note(\n+                                    lhs_expr.span,\n+                                    &format!(\n+                                        \"this is a reference of type that `{}` can be applied to, \\\n+                                        you need to dereference this variable once for this \\\n+                                        operation to work\",\n+                                    op.node.as_str()));\n+                            }\n+                        }\n+\n                         let missing_trait = match op.node {\n                             hir::BiAdd    => Some(\"std::ops::Add\"),\n                             hir::BiSub    => Some(\"std::ops::Sub\"),"}, {"sha": "a49cfaa17606dfcad53844dd0f3351440a9dd77f", "filename": "src/test/compile-fail/binary-op-on-double-ref.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a2a3074fb3ae6c1e7f0ccb6b111f3e16f9312f8f/src%2Ftest%2Fcompile-fail%2Fbinary-op-on-double-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2a3074fb3ae6c1e7f0ccb6b111f3e16f9312f8f/src%2Ftest%2Fcompile-fail%2Fbinary-op-on-double-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinary-op-on-double-ref.rs?ref=a2a3074fb3ae6c1e7f0ccb6b111f3e16f9312f8f", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2012-2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let v = vec![1, 2, 3, 4, 5, 6, 7, 8, 9];\n+    let vr = v.iter().filter(|x| {\n+        x % 2 == 0\n+        //~^ ERROR binary operation `%` cannot be applied to type `&&{integer}`\n+        //~| NOTE this is a reference of type that `%` can be applied to\n+        //~| NOTE an implementation of `std::ops::Rem` might be missing for `&&{integer}`\n+    });\n+    println!(\"{:?}\", vr);\n+}"}, {"sha": "f85422f76d40ee0d492fe6f219b2e62d9c7ed848", "filename": "src/test/compile-fail/str-concat-on-double-ref.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a2a3074fb3ae6c1e7f0ccb6b111f3e16f9312f8f/src%2Ftest%2Fcompile-fail%2Fstr-concat-on-double-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2a3074fb3ae6c1e7f0ccb6b111f3e16f9312f8f/src%2Ftest%2Fcompile-fail%2Fstr-concat-on-double-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstr-concat-on-double-ref.rs?ref=a2a3074fb3ae6c1e7f0ccb6b111f3e16f9312f8f", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2012-2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let a: &String = &\"1\".to_owned();\n+    let b: &str = &\"2\";\n+    let c = a + b;\n+    //~^ ERROR binary operation `+` cannot be applied to type `&std::string::String`\n+    //~| NOTE an implementation of `std::ops::Add` might be missing for `&std::string::String`\n+    println!(\"{:?}\", c);\n+}"}]}