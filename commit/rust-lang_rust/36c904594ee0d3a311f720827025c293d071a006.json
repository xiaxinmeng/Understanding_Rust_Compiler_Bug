{"sha": "36c904594ee0d3a311f720827025c293d071a006", "node_id": "C_kwDOAAsO6NoAKDM2YzkwNDU5NGVlMGQzYTMxMWY3MjA4MjcwMjVjMjkzZDA3MWEwMDY", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-12-20T18:20:56Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-03-05T10:39:03Z"}, "message": "Add debug asserts in thread local cell set methods.", "tree": {"sha": "80f4fb3a57216eb30b04b1501578844ac16951c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80f4fb3a57216eb30b04b1501578844ac16951c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36c904594ee0d3a311f720827025c293d071a006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36c904594ee0d3a311f720827025c293d071a006", "html_url": "https://github.com/rust-lang/rust/commit/36c904594ee0d3a311f720827025c293d071a006", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36c904594ee0d3a311f720827025c293d071a006/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93c409d6e2924cdc936f3f834fc257f913b5911c", "url": "https://api.github.com/repos/rust-lang/rust/commits/93c409d6e2924cdc936f3f834fc257f913b5911c", "html_url": "https://github.com/rust-lang/rust/commit/93c409d6e2924cdc936f3f834fc257f913b5911c"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "f36a06efbbd928c56524ba60c5894dc5deaaaa7b", "filename": "library/std/src/thread/local.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/36c904594ee0d3a311f720827025c293d071a006/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36c904594ee0d3a311f720827025c293d071a006/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs?ref=36c904594ee0d3a311f720827025c293d071a006", "patch": "@@ -268,6 +268,8 @@ macro_rules! __thread_local_inner {\n                         if let $crate::option::Option::Some(init) = _init {\n                             if let $crate::option::Option::Some(value) = init.take() {\n                                 return value;\n+                            } else if $crate::cfg!(debug_assertions) {\n+                                unreachable!(\"missing initial value\");\n                             }\n                         }\n                         __init()\n@@ -341,6 +343,8 @@ macro_rules! __thread_local_inner {\n                         if let $crate::option::Option::Some(init) = init {\n                             if let $crate::option::Option::Some(value) = init.take() {\n                                 return value;\n+                            } else if $crate::cfg!(debug_assertions) {\n+                                unreachable!(\"missing default value\");\n                             }\n                         }\n                         __init()"}]}