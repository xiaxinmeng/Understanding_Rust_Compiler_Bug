{"sha": "e6b64fdcdd3ccf6afa251ad09606d7f07a182ccd", "node_id": "C_kwDOAAsO6NoAKGU2YjY0ZmRjZGQzY2NmNmFmYTI1MWFkMDk2MDZkN2YwN2ExODJjY2Q", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-24T12:21:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-24T12:21:12Z"}, "message": "Merge #10328\n\n10328: fix: Fix incorrect mod.rs handling in unlinked_file fixes r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "ae51f6e951511d83d191bcccb21b54e0760a7267", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae51f6e951511d83d191bcccb21b54e0760a7267"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6b64fdcdd3ccf6afa251ad09606d7f07a182ccd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhTcK4CRBK7hj4Ov3rIwAABJcIAC4nnHwE6vLj2IFBVxZHDLC8\n85G4xW42JB33Fba4AX/dAsT32O5c2Q7/7sdGLz9pnDTH8CBK0A1IwZWAxdgbINtb\njlNV0y5NfcMjGmlU94FAPzMvaId89sQhqm6SSR6EwJyYpwLzDYQrvuJQ9kIOiX9W\n3WqHmUtKT6s9y3qTYhl0Bdh0vaNpQItjhK/aAQBG4vfyuI8r9vl5h9hy3fLujEuF\npoGNGaEeQvuWKxwLjaXav3wM3vjnfMS8wkBdnvEImKYK61LLuDSQuGPBgExXRMZT\nmoA+kCa3rsQ4CVK7gIJHPYTiSqU0mY1AFQUGY/3K+fS+dMDYy6+NflN4WqlxyUM=\n=wWNA\n-----END PGP SIGNATURE-----\n", "payload": "tree ae51f6e951511d83d191bcccb21b54e0760a7267\nparent d598d0b4f1aba67453287bf1a8e19cf7f47fd2d5\nparent bd8c95a5803300c746e5843d19e642dbcd685f04\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1632486072 +0000\ncommitter GitHub <noreply@github.com> 1632486072 +0000\n\nMerge #10328\n\n10328: fix: Fix incorrect mod.rs handling in unlinked_file fixes r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6b64fdcdd3ccf6afa251ad09606d7f07a182ccd", "html_url": "https://github.com/rust-lang/rust/commit/e6b64fdcdd3ccf6afa251ad09606d7f07a182ccd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6b64fdcdd3ccf6afa251ad09606d7f07a182ccd/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d598d0b4f1aba67453287bf1a8e19cf7f47fd2d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d598d0b4f1aba67453287bf1a8e19cf7f47fd2d5", "html_url": "https://github.com/rust-lang/rust/commit/d598d0b4f1aba67453287bf1a8e19cf7f47fd2d5"}, {"sha": "bd8c95a5803300c746e5843d19e642dbcd685f04", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd8c95a5803300c746e5843d19e642dbcd685f04", "html_url": "https://github.com/rust-lang/rust/commit/bd8c95a5803300c746e5843d19e642dbcd685f04"}], "stats": {"total": 65, "additions": 54, "deletions": 11}, "files": [{"sha": "9eafd42d86e78dc2f7855c001ddf0f6965321622", "filename": "crates/ide_diagnostics/src/handlers/unlinked_file.rs", "status": "modified", "additions": 54, "deletions": 11, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/e6b64fdcdd3ccf6afa251ad09606d7f07a182ccd/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Funlinked_file.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6b64fdcdd3ccf6afa251ad09606d7f07a182ccd/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Funlinked_file.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Funlinked_file.rs?ref=e6b64fdcdd3ccf6afa251ad09606d7f07a182ccd", "patch": "@@ -38,21 +38,35 @@ fn fixes(ctx: &DiagnosticsContext, file_id: FileId) -> Option<Vec<Assist>> {\n \n     let source_root = ctx.sema.db.source_root(ctx.sema.db.file_source_root(file_id));\n     let our_path = source_root.path_for_file(&file_id)?;\n-    let (module_name, _) = our_path.name_and_extension()?;\n+    let (mut module_name, _) = our_path.name_and_extension()?;\n \n     // Candidates to look for:\n-    // - `mod.rs` in the same folder\n-    //   - we also check `main.rs` and `lib.rs`\n+    // - `mod.rs`, `main.rs` and `lib.rs` in the same folder\n     // - `$dir.rs` in the parent folder, where `$dir` is the directory containing `self.file_id`\n     let parent = our_path.parent()?;\n-    let mut paths = vec![parent.join(\"mod.rs\")?, parent.join(\"lib.rs\")?, parent.join(\"main.rs\")?];\n-\n-    // `submod/bla.rs` -> `submod.rs`\n-    let parent_mod = (|| {\n-        let (name, _) = parent.name_and_extension()?;\n-        parent.parent()?.join(&format!(\"{}.rs\", name))\n-    })();\n-    paths.extend(parent_mod);\n+    let paths = {\n+        let temp;\n+        let parent = if module_name == \"mod\" {\n+            // for mod.rs we need to actually look up one higher\n+            // and take the parent as our to be module name\n+            let (name, _) = parent.name_and_extension()?;\n+            module_name = name;\n+            temp = parent.parent()?;\n+            &temp\n+        } else {\n+            &parent\n+        };\n+        let mut paths =\n+            vec![parent.join(\"mod.rs\")?, parent.join(\"lib.rs\")?, parent.join(\"main.rs\")?];\n+\n+        // `submod/bla.rs` -> `submod.rs`\n+        let parent_mod = (|| {\n+            let (name, _) = parent.name_and_extension()?;\n+            parent.parent()?.join(&format!(\"{}.rs\", name))\n+        })();\n+        paths.extend(parent_mod);\n+        paths\n+    };\n \n     for &parent_id in paths.iter().filter_map(|path| source_root.file_for_path(path)) {\n         for &krate in ctx.sema.db.relevant_crates(parent_id).iter() {\n@@ -156,6 +170,7 @@ fn make_fixes(\n \n #[cfg(test)]\n mod tests {\n+\n     use crate::tests::{check_diagnostics, check_fix, check_fixes, check_no_fix};\n \n     #[test]\n@@ -232,6 +247,34 @@ mod foo;\n         );\n     }\n \n+    #[test]\n+    fn unlinked_file_insert_in_empty_file_mod_file() {\n+        check_fix(\n+            r#\"\n+//- /main.rs\n+//- /foo/mod.rs\n+$0\n+\"#,\n+            r#\"\n+mod foo;\n+\"#,\n+        );\n+        check_fix(\n+            r#\"\n+//- /main.rs\n+mod bar;\n+//- /bar.rs\n+// bar module\n+//- /bar/foo/mod.rs\n+$0\n+\"#,\n+            r#\"\n+// bar module\n+mod foo;\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn unlinked_file_old_style_modrs() {\n         check_fix("}]}