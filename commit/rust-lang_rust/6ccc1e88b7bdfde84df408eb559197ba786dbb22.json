{"sha": "6ccc1e88b7bdfde84df408eb559197ba786dbb22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjY2MxZTg4YjdiZGZkZTg0ZGY0MDhlYjU1OTE5N2JhNzg2ZGJiMjI=", "commit": {"author": {"name": "Jan Niklas Hasse", "email": "jhasse@gmail.com", "date": "2014-01-12T01:36:29Z"}, "committer": {"name": "Jan Niklas Hasse", "email": "jhasse@gmail.com", "date": "2014-01-12T01:36:29Z"}, "message": "Fix indention", "tree": {"sha": "ae7a57bdd686479a7bd8c30ba8494c70f50e9c36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae7a57bdd686479a7bd8c30ba8494c70f50e9c36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ccc1e88b7bdfde84df408eb559197ba786dbb22", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ccc1e88b7bdfde84df408eb559197ba786dbb22", "html_url": "https://github.com/rust-lang/rust/commit/6ccc1e88b7bdfde84df408eb559197ba786dbb22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ccc1e88b7bdfde84df408eb559197ba786dbb22/comments", "author": {"login": "jhasse", "id": 80071, "node_id": "MDQ6VXNlcjgwMDcx", "avatar_url": "https://avatars.githubusercontent.com/u/80071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhasse", "html_url": "https://github.com/jhasse", "followers_url": "https://api.github.com/users/jhasse/followers", "following_url": "https://api.github.com/users/jhasse/following{/other_user}", "gists_url": "https://api.github.com/users/jhasse/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhasse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhasse/subscriptions", "organizations_url": "https://api.github.com/users/jhasse/orgs", "repos_url": "https://api.github.com/users/jhasse/repos", "events_url": "https://api.github.com/users/jhasse/events{/privacy}", "received_events_url": "https://api.github.com/users/jhasse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhasse", "id": 80071, "node_id": "MDQ6VXNlcjgwMDcx", "avatar_url": "https://avatars.githubusercontent.com/u/80071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhasse", "html_url": "https://github.com/jhasse", "followers_url": "https://api.github.com/users/jhasse/followers", "following_url": "https://api.github.com/users/jhasse/following{/other_user}", "gists_url": "https://api.github.com/users/jhasse/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhasse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhasse/subscriptions", "organizations_url": "https://api.github.com/users/jhasse/orgs", "repos_url": "https://api.github.com/users/jhasse/repos", "events_url": "https://api.github.com/users/jhasse/events{/privacy}", "received_events_url": "https://api.github.com/users/jhasse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76967a008be228e96a48c92effabebcbab2ea881", "url": "https://api.github.com/repos/rust-lang/rust/commits/76967a008be228e96a48c92effabebcbab2ea881", "html_url": "https://github.com/rust-lang/rust/commit/76967a008be228e96a48c92effabebcbab2ea881"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "3c91e6607849acbc42dca55b0639686a47c5c567", "filename": "src/librustpkg/path_util.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6ccc1e88b7bdfde84df408eb559197ba786dbb22/src%2Flibrustpkg%2Fpath_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ccc1e88b7bdfde84df408eb559197ba786dbb22/src%2Flibrustpkg%2Fpath_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Fpath_util.rs?ref=6ccc1e88b7bdfde84df408eb559197ba786dbb22", "patch": "@@ -261,21 +261,21 @@ fn library_in(short_name: &str, version: &Version, dir_to_search: &Path) -> Opti\n                 Some(i) => {\n                     debug!(\"Maybe {} is a version\", f_name.slice(i + 1, f_name.len()));\n                     match try_parsing_version(f_name.slice(i + 1, f_name.len())) {\n-                       Some(ref found_vers) if version == found_vers => {\n-                           match f_name.slice(0, i).rfind('-') {\n-                               Some(j) => {\n+                        Some(ref found_vers) if version == found_vers => {\n+                            match f_name.slice(0, i).rfind('-') {\n+                                Some(j) => {\n                                     let lib_prefix = match p_path.extension_str() {\n                                         Some(ref s) if dll_filetype == *s => &dll_prefix,\n                                         _ => &rlib_prefix,\n                                     };\n                                     debug!(\"Maybe {} equals {}\", f_name.slice(0, j), *lib_prefix);\n                                     if f_name.slice(0, j) == *lib_prefix {\n-                                       result_filename = Some(p_path.clone());\n-                                   }\n-                                   break;\n-                               }\n-                               None => break\n-                           }\n+                                        result_filename = Some(p_path.clone());\n+                                    }\n+                                    break;\n+                                }\n+                                None => break\n+                            }\n \n                        }\n                        _ => { f_name = f_name.slice(0, i); }"}]}