{"sha": "72259e07726de38190619a5f142d3d35639735c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMjU5ZTA3NzI2ZGUzODE5MDYxOWE1ZjE0MmQzZDM1NjM5NzM1Yzk=", "commit": {"author": {"name": "Josh Matthews", "email": "josh@joshmatthews.net", "date": "2013-01-18T15:12:07Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-23T00:22:55Z"}, "message": "Translate const references to extern functions as *i8 instead of the typical closure pair. Fixes #4522.", "tree": {"sha": "df5ccda065a0ea9c9ad2928aaddc7c148b8d6084", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df5ccda065a0ea9c9ad2928aaddc7c148b8d6084"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72259e07726de38190619a5f142d3d35639735c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72259e07726de38190619a5f142d3d35639735c9", "html_url": "https://github.com/rust-lang/rust/commit/72259e07726de38190619a5f142d3d35639735c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72259e07726de38190619a5f142d3d35639735c9/comments", "author": {"login": "jdm", "id": 27658, "node_id": "MDQ6VXNlcjI3NjU4", "avatar_url": "https://avatars.githubusercontent.com/u/27658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdm", "html_url": "https://github.com/jdm", "followers_url": "https://api.github.com/users/jdm/followers", "following_url": "https://api.github.com/users/jdm/following{/other_user}", "gists_url": "https://api.github.com/users/jdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdm/subscriptions", "organizations_url": "https://api.github.com/users/jdm/orgs", "repos_url": "https://api.github.com/users/jdm/repos", "events_url": "https://api.github.com/users/jdm/events{/privacy}", "received_events_url": "https://api.github.com/users/jdm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5de1ca99f8a6a26f92fc049ea0d2376316960761", "url": "https://api.github.com/repos/rust-lang/rust/commits/5de1ca99f8a6a26f92fc049ea0d2376316960761", "html_url": "https://github.com/rust-lang/rust/commit/5de1ca99f8a6a26f92fc049ea0d2376316960761"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "c36afb8355f266e584260c9887ab8289ead4edda", "filename": "src/librustc/middle/trans/consts.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/72259e07726de38190619a5f142d3d35639735c9/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72259e07726de38190619a5f142d3d35639735c9/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=72259e07726de38190619a5f142d3d35639735c9", "patch": "@@ -401,10 +401,13 @@ fn const_expr(cx: @crate_ctxt, e: @ast::expr) -> ValueRef {\n           ast::expr_path(pth) => {\n             assert pth.types.len() == 0;\n             match cx.tcx.def_map.find(e.id) {\n-                Some(ast::def_fn(def_id, _)) => {\n+                Some(ast::def_fn(def_id, purity)) => {\n                     assert ast_util::is_local(def_id);\n                     let f = base::get_item_val(cx, def_id.node);\n-                    C_struct(~[f, C_null(T_opaque_box_ptr(cx))])\n+                    match purity {\n+                      ast::extern_fn => llvm::LLVMConstPointerCast(f, T_ptr(T_i8())),\n+                      _ => C_struct(~[f, C_null(T_opaque_box_ptr(cx))])\n+                    }\n                 }\n                 Some(ast::def_const(def_id)) => {\n                     get_const_val(cx, def_id)"}, {"sha": "b0186b4b4824574441896042f3ca2e9e95c243a6", "filename": "src/test/run-pass/const-extern-function.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/72259e07726de38190619a5f142d3d35639735c9/src%2Ftest%2Frun-pass%2Fconst-extern-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72259e07726de38190619a5f142d3d35639735c9/src%2Ftest%2Frun-pass%2Fconst-extern-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-extern-function.rs?ref=72259e07726de38190619a5f142d3d35639735c9", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern fn foopy() {}\n+\n+const f: *u8 = foopy;\n+const s: S = S { f: foopy };\n+\n+struct S {\n+    f: *u8\n+}\n+\n+fn main() {\n+}\n\\ No newline at end of file"}]}