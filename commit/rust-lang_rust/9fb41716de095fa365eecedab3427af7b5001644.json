{"sha": "9fb41716de095fa365eecedab3427af7b5001644", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmYjQxNzE2ZGUwOTVmYTM2NWVlY2VkYWIzNDI3YWY3YjUwMDE2NDQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-20T19:09:12Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-20T19:09:12Z"}, "message": "make more things cancelable", "tree": {"sha": "05b2d6bc6e02e493f39509a9c46d36564aef270b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05b2d6bc6e02e493f39509a9c46d36564aef270b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fb41716de095fa365eecedab3427af7b5001644", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb41716de095fa365eecedab3427af7b5001644", "html_url": "https://github.com/rust-lang/rust/commit/9fb41716de095fa365eecedab3427af7b5001644", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fb41716de095fa365eecedab3427af7b5001644/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "998f2ae7627053a9363a05a1ab79359882dce39f", "url": "https://api.github.com/repos/rust-lang/rust/commits/998f2ae7627053a9363a05a1ab79359882dce39f", "html_url": "https://github.com/rust-lang/rust/commit/998f2ae7627053a9363a05a1ab79359882dce39f"}], "stats": {"total": 41, "additions": 20, "deletions": 21}, "files": [{"sha": "d60fb8278176c5d012064597d823bef528e1cab7", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fb41716de095fa365eecedab3427af7b5001644/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fb41716de095fa365eecedab3427af7b5001644/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=9fb41716de095fa365eecedab3427af7b5001644", "patch": "@@ -19,7 +19,7 @@ use rustc_hash::FxHashSet;\n use crate::{\n     descriptors::{FnDescriptor, ModuleTreeDescriptor, Problem},\n     roots::{ReadonlySourceRoot, SourceRoot, WritableSourceRoot},\n-    CrateGraph, CrateId, Diagnostic, FileId, FileResolver, FileSystemEdit, JobToken, Position,\n+    CrateGraph, CrateId, Diagnostic, FileId, FileResolver, FileSystemEdit, Position,\n     Query, SourceChange, SourceFileEdit, Cancelable,\n };\n "}, {"sha": "8595d7e03afa9f3049130b125eff81427b4f62c9", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9fb41716de095fa365eecedab3427af7b5001644/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fb41716de095fa365eecedab3427af7b5001644/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=9fb41716de095fa365eecedab3427af7b5001644", "patch": "@@ -219,19 +219,23 @@ impl Analysis {\n         let file = self.imp.file_syntax(file_id);\n         ra_editor::file_structure(&file)\n     }\n-    pub fn symbol_search(&self, query: Query) -> Vec<(FileId, FileSymbol)> {\n-        self.imp.world_symbols(query)\n+    pub fn folding_ranges(&self, file_id: FileId) -> Vec<Fold> {\n+        let file = self.imp.file_syntax(file_id);\n+        ra_editor::folding_ranges(&file)\n+    }\n+    pub fn symbol_search(&self, query: Query) -> Cancelable<Vec<(FileId, FileSymbol)>> {\n+        Ok(self.imp.world_symbols(query))\n     }\n     pub fn approximately_resolve_symbol(\n         &self,\n         file_id: FileId,\n         offset: TextUnit\n-    ) -> Vec<(FileId, FileSymbol)> {\n-        self.imp\n-            .approximately_resolve_symbol(file_id, offset)\n+    ) -> Cancelable<Vec<(FileId, FileSymbol)>> {\n+        Ok(self.imp\n+            .approximately_resolve_symbol(file_id, offset))\n     }\n-    pub fn find_all_refs(&self, file_id: FileId, offset: TextUnit, ) -> Vec<(FileId, TextRange)> {\n-        self.imp.find_all_refs(file_id, offset)\n+    pub fn find_all_refs(&self, file_id: FileId, offset: TextUnit, ) -> Cancelable<Vec<(FileId, TextRange)>> {\n+        Ok(self.imp.find_all_refs(file_id, offset))\n     }\n     pub fn parent_module(&self, file_id: FileId) -> Cancelable<Vec<(FileId, FileSymbol)>> {\n         self.imp.parent_module(file_id)\n@@ -260,17 +264,12 @@ impl Analysis {\n     pub fn diagnostics(&self, file_id: FileId) -> Cancelable<Vec<Diagnostic>> {\n         Ok(self.imp.diagnostics(file_id))\n     }\n-    pub fn folding_ranges(&self, file_id: FileId) -> Vec<Fold> {\n-        let file = self.imp.file_syntax(file_id);\n-        ra_editor::folding_ranges(&file)\n-    }\n-\n     pub fn resolve_callable(\n         &self,\n         file_id: FileId,\n         offset: TextUnit,\n-    ) -> Option<(FnDescriptor, Option<usize>)> {\n-        self.imp.resolve_callable(file_id, offset)\n+    ) -> Cancelable<Option<(FnDescriptor, Option<usize>)>> {\n+        Ok(self.imp.resolve_callable(file_id, offset))\n     }\n }\n "}, {"sha": "78a8ccfc523e80ea23c8a179a850d4a0dd7affcf", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9fb41716de095fa365eecedab3427af7b5001644/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fb41716de095fa365eecedab3427af7b5001644/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=9fb41716de095fa365eecedab3427af7b5001644", "patch": "@@ -195,7 +195,7 @@ pub fn handle_workspace_symbol(\n         query: Query,\n     ) -> Result<Vec<SymbolInformation>> {\n         let mut res = Vec::new();\n-        for (file_id, symbol) in world.analysis().symbol_search(query) {\n+        for (file_id, symbol) in world.analysis().symbol_search(query)? {\n             let line_index = world.analysis().file_line_index(file_id);\n             let info = SymbolInformation {\n                 name: symbol.name.to_string(),\n@@ -221,7 +221,7 @@ pub fn handle_goto_definition(\n     let mut res = Vec::new();\n     for (file_id, symbol) in world\n         .analysis()\n-        .approximately_resolve_symbol(file_id, offset)\n+        .approximately_resolve_symbol(file_id, offset)?\n     {\n         let line_index = world.analysis().file_line_index(file_id);\n         let location = to_location(file_id, symbol.node_range, &world, &line_index)?;\n@@ -435,7 +435,7 @@ pub fn handle_signature_help(\n     let offset = params.position.conv_with(&line_index);\n \n     if let Some((descriptor, active_param)) =\n-        world.analysis().resolve_callable(file_id, offset)\n+        world.analysis().resolve_callable(file_id, offset)?\n     {\n         let parameters: Vec<ParameterInformation> = descriptor\n             .params\n@@ -473,7 +473,7 @@ pub fn handle_prepare_rename(\n \n     // We support renaming references like handle_rename does.\n     // In the future we may want to reject the renaming of things like keywords here too.\n-    let refs = world.analysis().find_all_refs(file_id, offset);\n+    let refs = world.analysis().find_all_refs(file_id, offset)?;\n     if refs.is_empty() {\n         return Ok(None);\n     }\n@@ -497,7 +497,7 @@ pub fn handle_rename(\n         return Ok(None);\n     }\n \n-    let refs = world.analysis().find_all_refs(file_id, offset);\n+    let refs = world.analysis().find_all_refs(file_id, offset)?;\n     if refs.is_empty() {\n         return Ok(None);\n     }\n@@ -530,7 +530,7 @@ pub fn handle_references(\n     let line_index = world.analysis().file_line_index(file_id);\n     let offset = params.position.conv_with(&line_index);\n \n-    let refs = world.analysis().find_all_refs(file_id, offset);\n+    let refs = world.analysis().find_all_refs(file_id, offset)?;\n \n     Ok(Some(refs.into_iter()\n         .filter_map(|r| to_location(r.0, r.1, &world, &line_index).ok())"}]}