{"sha": "1906b7e967f98e8c735054af61906e86cfc80ac7", "node_id": "C_kwDOAAsO6NoAKDE5MDZiN2U5NjdmOThlOGM3MzUwNTRhZjYxOTA2ZTg2Y2ZjODBhYzc", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-04-07T08:32:58Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-04-07T13:47:20Z"}, "message": "port `codegen_module` activity to arg recorder API", "tree": {"sha": "bbe61745a56ffd6c5f742d2046fea17f16a36221", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbe61745a56ffd6c5f742d2046fea17f16a36221"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1906b7e967f98e8c735054af61906e86cfc80ac7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1906b7e967f98e8c735054af61906e86cfc80ac7", "html_url": "https://github.com/rust-lang/rust/commit/1906b7e967f98e8c735054af61906e86cfc80ac7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1906b7e967f98e8c735054af61906e86cfc80ac7/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6a7b5accd03da6655e8150bcbd36defe1e43081", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6a7b5accd03da6655e8150bcbd36defe1e43081", "html_url": "https://github.com/rust-lang/rust/commit/b6a7b5accd03da6655e8150bcbd36defe1e43081"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "7a7335f2be269b16f024d946093542539356505f", "filename": "compiler/rustc_codegen_llvm/src/base.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1906b7e967f98e8c735054af61906e86cfc80ac7/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1906b7e967f98e8c735054af61906e86cfc80ac7/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbase.rs?ref=1906b7e967f98e8c735054af61906e86cfc80ac7", "patch": "@@ -74,10 +74,11 @@ pub fn compile_codegen_unit(tcx: TyCtxt<'_>, cgu_name: Symbol) -> (ModuleCodegen\n \n     fn module_codegen(tcx: TyCtxt<'_>, cgu_name: Symbol) -> ModuleCodegen<ModuleLlvm> {\n         let cgu = tcx.codegen_unit(cgu_name);\n-        let _prof_timer = tcx.prof.generic_activity_with_args(\n-            \"codegen_module\",\n-            &[cgu_name.to_string(), cgu.size_estimate().to_string()],\n-        );\n+        let _prof_timer =\n+            tcx.prof.generic_activity_with_arg_recorder(\"codegen_module\", |recorder| {\n+                recorder.record_arg(cgu_name.to_string());\n+                recorder.record_arg(cgu.size_estimate().to_string());\n+            });\n         // Instantiate monomorphizations without filling out definitions yet...\n         let llvm_module = ModuleLlvm::new(tcx, cgu_name.as_str());\n         {"}]}