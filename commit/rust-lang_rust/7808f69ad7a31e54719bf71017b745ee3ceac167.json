{"sha": "7808f69ad7a31e54719bf71017b745ee3ceac167", "node_id": "C_kwDOAAsO6NoAKDc4MDhmNjlhZDdhMzFlNTQ3MTliZjcxMDE3Yjc0NWVlM2NlYWMxNjc", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-07-07T09:04:36Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-07-15T14:40:39Z"}, "message": "`QueryNormalizer` bug on ambiguity", "tree": {"sha": "c53ddafa02d94aa26bc58e303761728986368444", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c53ddafa02d94aa26bc58e303761728986368444"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7808f69ad7a31e54719bf71017b745ee3ceac167", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7808f69ad7a31e54719bf71017b745ee3ceac167", "html_url": "https://github.com/rust-lang/rust/commit/7808f69ad7a31e54719bf71017b745ee3ceac167", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7808f69ad7a31e54719bf71017b745ee3ceac167/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "116819f54f062a2f425deac4ec29245038c26613", "url": "https://api.github.com/repos/rust-lang/rust/commits/116819f54f062a2f425deac4ec29245038c26613", "html_url": "https://github.com/rust-lang/rust/commit/116819f54f062a2f425deac4ec29245038c26613"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "449d7a7b47b1fcd82042d7156c0cb876c0ab25a2", "filename": "compiler/rustc_trait_selection/src/traits/query/normalize.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7808f69ad7a31e54719bf71017b745ee3ceac167/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7808f69ad7a31e54719bf71017b745ee3ceac167/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs?ref=7808f69ad7a31e54719bf71017b745ee3ceac167", "patch": "@@ -254,7 +254,7 @@ impl<'cx, 'tcx> FallibleTypeFolder<'tcx> for QueryNormalizer<'cx, 'tcx> {\n                 let result = tcx.normalize_projection_ty(c_data)?;\n                 // We don't expect ambiguity.\n                 if result.is_ambiguous() {\n-                    return Err(NoSolution);\n+                    bug!(\"unexpected ambiguity: {:?} {:?}\", c_data, result);\n                 }\n                 let InferOk { value: result, obligations } =\n                     self.infcx.instantiate_query_response_and_region_obligations(\n@@ -293,7 +293,7 @@ impl<'cx, 'tcx> FallibleTypeFolder<'tcx> for QueryNormalizer<'cx, 'tcx> {\n                 let result = tcx.normalize_projection_ty(c_data)?;\n                 // We don't expect ambiguity.\n                 if result.is_ambiguous() {\n-                    return Err(NoSolution);\n+                    bug!(\"unexpected ambiguity: {:?} {:?}\", c_data, result);\n                 }\n                 let InferOk { value: result, obligations } =\n                     self.infcx.instantiate_query_response_and_region_obligations("}]}