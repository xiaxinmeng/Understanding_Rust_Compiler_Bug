{"sha": "89dec28a5ce9f71be500f0ade4c29a26e48d2161", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ZGVjMjhhNWNlOWY3MWJlNTAwZjBhZGU0YzI5YTI2ZTQ4ZDIxNjE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-03-26T23:05:33Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-03-27T01:03:53Z"}, "message": "Be more careful with CFG_{SRC,BUILD}_DIR ending in slash.", "tree": {"sha": "350ef854c2518b30234be806ea6bd56084398d35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/350ef854c2518b30234be806ea6bd56084398d35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89dec28a5ce9f71be500f0ade4c29a26e48d2161", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89dec28a5ce9f71be500f0ade4c29a26e48d2161", "html_url": "https://github.com/rust-lang/rust/commit/89dec28a5ce9f71be500f0ade4c29a26e48d2161", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89dec28a5ce9f71be500f0ade4c29a26e48d2161/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "071dbfc4781f43e6fdbb0a019d1cd46f6d249aee", "url": "https://api.github.com/repos/rust-lang/rust/commits/071dbfc4781f43e6fdbb0a019d1cd46f6d249aee", "html_url": "https://github.com/rust-lang/rust/commit/071dbfc4781f43e6fdbb0a019d1cd46f6d249aee"}], "stats": {"total": 50, "additions": 25, "deletions": 25}, "files": [{"sha": "758f726f9d990cc6e75c707c5de2777b096d4ccb", "filename": "Makefile.in", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/89dec28a5ce9f71be500f0ade4c29a26e48d2161/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/89dec28a5ce9f71be500f0ade4c29a26e48d2161/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=89dec28a5ce9f71be500f0ade4c29a26e48d2161", "patch": "@@ -89,7 +89,7 @@ ifdef DEBUG\n endif\n \n # platform-specific auto-configuration\n-include $(CFG_SRC_DIR)/mk/platform.mk\n+include $(CFG_SRC_DIR)mk/platform.mk\n \n # Run the stage1/2 compilers under valgrind\n ifdef VALGRIND_COMPILE\n@@ -443,15 +443,15 @@ config.stamp: $(S)configure $(S)Makefile.in $(S)src/snapshots.txt\n # Primary-target makefiles\n ######################################################################\n \n-include $(CFG_SRC_DIR)/mk/target.mk\n-include $(CFG_SRC_DIR)/mk/host.mk\n-include $(CFG_SRC_DIR)/mk/stage0.mk\n-include $(CFG_SRC_DIR)/mk/rt.mk\n-include $(CFG_SRC_DIR)/mk/rustllvm.mk\n-include $(CFG_SRC_DIR)/mk/autodep.mk\n-include $(CFG_SRC_DIR)/mk/tools.mk\n-include $(CFG_SRC_DIR)/mk/docs.mk\n-include $(CFG_SRC_DIR)/mk/llvm.mk\n+include $(CFG_SRC_DIR)mk/target.mk\n+include $(CFG_SRC_DIR)mk/host.mk\n+include $(CFG_SRC_DIR)mk/stage0.mk\n+include $(CFG_SRC_DIR)mk/rt.mk\n+include $(CFG_SRC_DIR)mk/rustllvm.mk\n+include $(CFG_SRC_DIR)mk/autodep.mk\n+include $(CFG_SRC_DIR)mk/tools.mk\n+include $(CFG_SRC_DIR)mk/docs.mk\n+include $(CFG_SRC_DIR)mk/llvm.mk\n \n ######################################################################\n # Secondary makefiles, conditionalized for speed\n@@ -463,36 +463,36 @@ ifneq ($(strip $(findstring dist,$(MAKECMDGOALS))   \\\n                $(findstring tidy,$(MAKECMDGOALS))   \\\n                $(findstring clean,$(MAKECMDGOALS))),)\n   CFG_INFO := $(info cfg: including dist rules)\n-  include $(CFG_SRC_DIR)/mk/dist.mk\n+  include $(CFG_SRC_DIR)mk/dist.mk\n endif\n \n ifneq ($(strip $(findstring snap,$(MAKECMDGOALS))   \\\n                $(findstring clean,$(MAKECMDGOALS))),)\n   CFG_INFO := $(info cfg: including snap rules)\n-  include $(CFG_SRC_DIR)/mk/snap.mk\n+  include $(CFG_SRC_DIR)mk/snap.mk\n endif\n \n ifneq ($(findstring reformat,$(MAKECMDGOALS)),)\n   CFG_INFO := $(info cfg: including reformat rules)\n-  include $(CFG_SRC_DIR)/mk/pp.mk\n+  include $(CFG_SRC_DIR)mk/pp.mk\n endif\n \n ifneq ($(strip $(findstring check,$(MAKECMDGOALS)) \\\n                $(findstring test,$(MAKECMDGOALS))  \\\n                $(findstring perf,$(MAKECMDGOALS))  \\\n                $(findstring tidy,$(MAKECMDGOALS))),)\n   CFG_INFO := $(info cfg: including test rules)\n-  include $(CFG_SRC_DIR)/mk/tests.mk\n+  include $(CFG_SRC_DIR)mk/tests.mk\n endif\n \n ifneq ($(findstring perf,$(MAKECMDGOALS)),)\n   CFG_INFO := $(info cfg: including perf rules)\n-  include $(CFG_SRC_DIR)/mk/perf.mk\n+  include $(CFG_SRC_DIR)mk/perf.mk\n endif\n \n ifneq ($(findstring clean,$(MAKECMDGOALS)),)\n   CFG_INFO := $(info cfg: including clean rules)\n-  include $(CFG_SRC_DIR)/mk/clean.mk\n+  include $(CFG_SRC_DIR)mk/clean.mk\n endif\n \n ifneq ($(findstring install,$(MAKECMDGOALS)),)\n@@ -503,11 +503,11 @@ ifneq ($(findstring install,$(MAKECMDGOALS)),)\n   endif\n \n   CFG_INFO := $(info cfg: including install rules)\n-  include $(CFG_SRC_DIR)/mk/install.mk\n+  include $(CFG_SRC_DIR)mk/install.mk\n endif\n \n ifneq ($(strip $(findstring TAGS.emacs,$(MAKECMDGOALS)) \\\n                $(findstring TAGS.vi,$(MAKECMDGOALS))),)\n   CFG_INFO := $(info cfg: including ctags rules)\n-  include $(CFG_SRC_DIR)/mk/ctags.mk\n+  include $(CFG_SRC_DIR)mk/ctags.mk\n endif"}, {"sha": "897af03333b2d7ea8d93e1142c023863db6641a6", "filename": "configure", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/89dec28a5ce9f71be500f0ade4c29a26e48d2161/configure", "raw_url": "https://github.com/rust-lang/rust/raw/89dec28a5ce9f71be500f0ade4c29a26e48d2161/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=89dec28a5ce9f71be500f0ade4c29a26e48d2161", "patch": "@@ -251,8 +251,8 @@ esac\n DEFAULT_HOST_TRIPLE=\"${CFG_CPUTYPE}-${CFG_OSTYPE}\"\n \n CFG_SELF=$(echo $0 | tr '\\\\' '/')\n-CFG_SRC_DIR=${CFG_SELF%${CFG_SELF##*/}}\n-CFG_BUILD_DIR=$(echo $PWD | tr '\\\\' '/')\n+CFG_SRC_DIR=\"$(dirname $CFG_SELF)/\"\n+CFG_BUILD_DIR=\"$(echo $PWD | tr '\\\\' '/')/\"\n CFG_CONFIGURE_ARGS=\"$@\"\n \n OPTIONS=\"\"\n@@ -517,14 +517,14 @@ fi\n \n # Configure llvm, only if necessary\n step_msg \"looking at LLVM\"\n-CFG_LLVM_SRC_DIR=${CFG_SRC_DIR}src/llvm\n+CFG_LLVM_SRC_DIR=${CFG_SRC_DIR}src/llvm/\n for t in $CFG_TARGET_TRIPLES\n do\n     do_reconfigure=1\n \n     if [ -z $CFG_LLVM_ROOT ]\n     then\n-        LLVM_BUILD_DIR=$CFG_BUILD_DIR/llvm/$t\n+        LLVM_BUILD_DIR=${CFG_BUILD_DIR}llvm/$t\n         if [ ! -z \"$CFG_DISABLE_OPTIMIZE_LLVM\" ]\n         then\n             LLVM_DBG_OPTS=\"\"\n@@ -552,7 +552,7 @@ do\n         index2=\"${CFG_SRC_DIR}src/llvm/.git/index\"\n         for index in ${index1} ${index2}\n         do\n-            config_status=\"${CFG_BUILD_DIR}/llvm/$t/config.status\"\n+            config_status=\"${CFG_BUILD_DIR}llvm/$t/config.status\"\n             if test -e ${index} -a \\\n                     -e ${config_status} -a \\\n                     ${config_status} -nt ${index}\n@@ -636,10 +636,10 @@ do\n         cd $LLVM_BUILD_DIR\n         case $CFG_SRC_DIR in\n             /* | [a-z]:* | [A-Z]:*)\n-                ${CFG_LLVM_SRC_DIR}/configure $LLVM_FLAGS\n+                ${CFG_LLVM_SRC_DIR}configure $LLVM_FLAGS\n                 ;;\n             *)\n-                ${CFG_BUILD_DIR}/${CFG_LLVM_SRC_DIR}/configure \\\n+                ${CFG_BUILD_DIR}${CFG_LLVM_SRC_DIR}configure \\\n                     $LLVM_FLAGS\n                 ;;\n         esac"}]}