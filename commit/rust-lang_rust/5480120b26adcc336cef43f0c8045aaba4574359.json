{"sha": "5480120b26adcc336cef43f0c8045aaba4574359", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0ODAxMjBiMjZhZGNjMzM2Y2VmNDNmMGM4MDQ1YWFiYTQ1NzQzNTk=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-31T19:30:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-31T19:30:03Z"}, "message": "Rollup merge of #72812 - RalfJung:miri-char-test, r=jonas-schievink\n\nMiri tests: skip parts of test_char_range\n\nThe new `test_char_range` test takes forever in Miri as it loops over all values of `char`. This makes it skip most of them when being run in Miri.", "tree": {"sha": "96bc93edbcf71194fb3e673ce22d5fce6c01262c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96bc93edbcf71194fb3e673ce22d5fce6c01262c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5480120b26adcc336cef43f0c8045aaba4574359", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe1AW7CRBK7hj4Ov3rIwAAdHIIAEmuIHaW7kK3tBTkjbqNn7jG\njZra1LJ3RCkpKceJTv2jMfcwN7M8Xhqu9ZP9L/Ga5txD95hWlI2Th4aslF/fzvPT\nvAeD0YrpMoyJ9OBicgZy3MMQY8pH23rh45WoKhIIQ6tI7iXjPz6yky2wArZOe+Pz\nH3ebmNCBPojlzZHI2OpgacWI1e5iMZKoMf2OJNwQLSlzKAr1cyH1GR9sSbQa/rAG\nTHyR9+YSOZh14WxGUm8sIrEjoSnhSpvIj7MbpocmlMnN3SgyWO8zyVCELYx5ay7K\n+Gh+Xtie0LUzPzwgNJIWsWo3LhfrJbkw/YmnkRPrEjEVNIDjiZemVDJ/WVY/KXY=\n=fXat\n-----END PGP SIGNATURE-----\n", "payload": "tree 96bc93edbcf71194fb3e673ce22d5fce6c01262c\nparent 8e83a7e1262e8ff00496e23645e7fec3874b055c\nparent 532dabdb8ef9536abc68c6adcdd9ca557c0e445a\nauthor Dylan DPC <dylan.dpc@gmail.com> 1590953403 +0200\ncommitter GitHub <noreply@github.com> 1590953403 +0200\n\nRollup merge of #72812 - RalfJung:miri-char-test, r=jonas-schievink\n\nMiri tests: skip parts of test_char_range\n\nThe new `test_char_range` test takes forever in Miri as it loops over all values of `char`. This makes it skip most of them when being run in Miri.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5480120b26adcc336cef43f0c8045aaba4574359", "html_url": "https://github.com/rust-lang/rust/commit/5480120b26adcc336cef43f0c8045aaba4574359", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5480120b26adcc336cef43f0c8045aaba4574359/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e83a7e1262e8ff00496e23645e7fec3874b055c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e83a7e1262e8ff00496e23645e7fec3874b055c", "html_url": "https://github.com/rust-lang/rust/commit/8e83a7e1262e8ff00496e23645e7fec3874b055c"}, {"sha": "532dabdb8ef9536abc68c6adcdd9ca557c0e445a", "url": "https://api.github.com/repos/rust-lang/rust/commits/532dabdb8ef9536abc68c6adcdd9ca557c0e445a", "html_url": "https://github.com/rust-lang/rust/commit/532dabdb8ef9536abc68c6adcdd9ca557c0e445a"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "3b854b56c320dcc7007a8c00edfb6993a12b2577", "filename": "src/libcore/tests/iter.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5480120b26adcc336cef43f0c8045aaba4574359/src%2Flibcore%2Ftests%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5480120b26adcc336cef43f0c8045aaba4574359/src%2Flibcore%2Ftests%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fiter.rs?ref=5480120b26adcc336cef43f0c8045aaba4574359", "patch": "@@ -1959,8 +1959,11 @@ fn test_range() {\n #[test]\n fn test_char_range() {\n     use std::char;\n-    assert!(('\\0'..=char::MAX).eq((0..=char::MAX as u32).filter_map(char::from_u32)));\n-    assert!(('\\0'..=char::MAX).rev().eq((0..=char::MAX as u32).filter_map(char::from_u32).rev()));\n+    // Miri is too slow\n+    let from = if cfg!(miri) { char::from_u32(0xD800 - 10).unwrap() } else { '\\0' };\n+    let to = if cfg!(miri) { char::from_u32(0xDFFF + 10).unwrap() } else { char::MAX };\n+    assert!((from..=to).eq((from as u32..=to as u32).filter_map(char::from_u32)));\n+    assert!((from..=to).rev().eq((from as u32..=to as u32).filter_map(char::from_u32).rev()));\n \n     assert_eq!(('\\u{D7FF}'..='\\u{E000}').count(), 2);\n     assert_eq!(('\\u{D7FF}'..='\\u{E000}').size_hint(), (2, Some(2)));"}]}