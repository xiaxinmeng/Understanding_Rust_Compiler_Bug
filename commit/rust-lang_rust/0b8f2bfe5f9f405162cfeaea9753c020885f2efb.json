{"sha": "0b8f2bfe5f9f405162cfeaea9753c020885f2efb", "node_id": "C_kwDOAAsO6NoAKDBiOGYyYmZlNWY5ZjQwNTE2MmNmZWFlYTk3NTNjMDIwODg1ZjJlZmI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-14T06:21:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-14T06:21:39Z"}, "message": "Rollup merge of #111463 - clubby789:env-escaped-var, r=cjgillot\n\nBetter diagnostics for `env!` where variable contains escape\n\nFixes #110559", "tree": {"sha": "47ae51b46941779a717d1888763121a8fdbf7acd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47ae51b46941779a717d1888763121a8fdbf7acd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b8f2bfe5f9f405162cfeaea9753c020885f2efb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkYH3zCRBK7hj4Ov3rIwAASBwIABxYqRLtPlh6y1jg7W24kuWi\nNozzLA0r1E7ORSboSVTbQHh5i54b20uW79WQF0EHZgpHrVbQ2VWUjDz8ep4S61Iz\nQyRSzhuRXRVzhS4sM+RbNxdkk9CNaGYGQzMqJ6q9Fwk7Mw1cHTwUH1+dV2pjLl80\ncidbU/fvovHOMDNBNKVzWF1FU2JSWZGJi+S2+hzdJtfJP67PuTzCgCRaS6QHexCh\nHVLWSTvNNF52Xo7Dd75+kKUWcwHNQPsM5fCK24efDM970oa4M4xxrrQ5AehE27GY\n+rw9vDMmRKW040KrzoGOE8VBxkqhRf/TC/itRsosNVpuNCqKAaZo83jzgc66tLU=\n=TwUC\n-----END PGP SIGNATURE-----\n", "payload": "tree 47ae51b46941779a717d1888763121a8fdbf7acd\nparent ad6ab11234ae885913229f6de2c4465bdc0d76f3\nparent 2555f3bbcf0c42e2405912ff93318107596f698b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1684045299 +0200\ncommitter GitHub <noreply@github.com> 1684045299 +0200\n\nRollup merge of #111463 - clubby789:env-escaped-var, r=cjgillot\n\nBetter diagnostics for `env!` where variable contains escape\n\nFixes #110559\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b8f2bfe5f9f405162cfeaea9753c020885f2efb", "html_url": "https://github.com/rust-lang/rust/commit/0b8f2bfe5f9f405162cfeaea9753c020885f2efb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b8f2bfe5f9f405162cfeaea9753c020885f2efb/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad6ab11234ae885913229f6de2c4465bdc0d76f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad6ab11234ae885913229f6de2c4465bdc0d76f3", "html_url": "https://github.com/rust-lang/rust/commit/ad6ab11234ae885913229f6de2c4465bdc0d76f3"}, {"sha": "2555f3bbcf0c42e2405912ff93318107596f698b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2555f3bbcf0c42e2405912ff93318107596f698b", "html_url": "https://github.com/rust-lang/rust/commit/2555f3bbcf0c42e2405912ff93318107596f698b"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "8f64e3328619e054b0c24c2ee3966b9c6b12f43b", "filename": "compiler/rustc_builtin_macros/src/env.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0b8f2bfe5f9f405162cfeaea9753c020885f2efb/compiler%2Frustc_builtin_macros%2Fsrc%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b8f2bfe5f9f405162cfeaea9753c020885f2efb/compiler%2Frustc_builtin_macros%2Fsrc%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fenv.rs?ref=0b8f2bfe5f9f405162cfeaea9753c020885f2efb", "patch": "@@ -63,15 +63,16 @@ pub fn expand_env<'cx>(\n         Some(exprs) => exprs.into_iter(),\n     };\n \n-    let Some((var, _style)) = expr_to_string(cx, exprs.next().unwrap(), \"expected string literal\") else {\n+    let var_expr = exprs.next().unwrap();\n+    let Some((var, _)) = expr_to_string(cx, var_expr.clone(), \"expected string literal\") else {\n         return DummyResult::any(sp);\n     };\n \n     let custom_msg = match exprs.next() {\n         None => None,\n         Some(second) => match expr_to_string(cx, second, \"expected string literal\") {\n             None => return DummyResult::any(sp),\n-            Some((s, _style)) => Some(s),\n+            Some((s, _)) => Some(s),\n         },\n     };\n \n@@ -80,10 +81,15 @@ pub fn expand_env<'cx>(\n     cx.sess.parse_sess.env_depinfo.borrow_mut().insert((var, value));\n     let e = match value {\n         None => {\n+            // Use the string literal in the code in the diagnostic to avoid confusing diagnostics,\n+            // e.g. when the literal contains escape sequences.\n+            let ast::ExprKind::Lit(ast::token::Lit { kind: ast::token::LitKind::Str, symbol: original_var, ..}) = &var_expr.kind else {\n+                unreachable!(\"`expr_to_string` ensures this is a string lit\")\n+            };\n             cx.emit_err(errors::EnvNotDefined {\n                 span: sp,\n                 msg: custom_msg,\n-                var,\n+                var: *original_var,\n                 help: custom_msg.is_none().then(|| help_for_missing_env_var(var.as_str())),\n             });\n             return DummyResult::any(sp);"}, {"sha": "d898feb78c6f7cdcf041a58519274b2da917a1b3", "filename": "tests/ui/extenv/extenv-escaped-var.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b8f2bfe5f9f405162cfeaea9753c020885f2efb/tests%2Fui%2Fextenv%2Fextenv-escaped-var.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b8f2bfe5f9f405162cfeaea9753c020885f2efb/tests%2Fui%2Fextenv%2Fextenv-escaped-var.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fextenv%2Fextenv-escaped-var.rs?ref=0b8f2bfe5f9f405162cfeaea9753c020885f2efb", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    env!(\"\\t\"); //~ERROR environment variable `\\t` not defined at compile time\n+}"}, {"sha": "25e218c63f336b1599588721e361a1aeecae8ec4", "filename": "tests/ui/extenv/extenv-escaped-var.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0b8f2bfe5f9f405162cfeaea9753c020885f2efb/tests%2Fui%2Fextenv%2Fextenv-escaped-var.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0b8f2bfe5f9f405162cfeaea9753c020885f2efb/tests%2Fui%2Fextenv%2Fextenv-escaped-var.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fextenv%2Fextenv-escaped-var.stderr?ref=0b8f2bfe5f9f405162cfeaea9753c020885f2efb", "patch": "@@ -0,0 +1,11 @@\n+error: environment variable `\\t` not defined at compile time\n+  --> $DIR/extenv-escaped-var.rs:2:5\n+   |\n+LL |     env!(\"\\t\");\n+   |     ^^^^^^^^^^\n+   |\n+   = help: use `std::env::var(\"\\t\")` to read the variable at run time\n+   = note: this error originates in the macro `env` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+"}, {"sha": "10589ec2f54a4a1b216dac215a2dea601a85e212", "filename": "tests/ui/extenv/issue-110547.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0b8f2bfe5f9f405162cfeaea9753c020885f2efb/tests%2Fui%2Fextenv%2Fissue-110547.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0b8f2bfe5f9f405162cfeaea9753c020885f2efb/tests%2Fui%2Fextenv%2Fissue-110547.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fextenv%2Fissue-110547.stderr?ref=0b8f2bfe5f9f405162cfeaea9753c020885f2efb", "patch": "@@ -1,28 +1,28 @@\n-error: environment variable `    ` not defined at compile time\n+error: environment variable `\\t` not defined at compile time\n   --> $DIR/issue-110547.rs:4:5\n    |\n LL |     env!{\"\\t\"};\n    |     ^^^^^^^^^^\n    |\n-   = help: use `std::env::var(\"    \")` to read the variable at run time\n+   = help: use `std::env::var(\"\\t\")` to read the variable at run time\n    = note: this error originates in the macro `env` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: environment variable `    ` not defined at compile time\n+error: environment variable `\\t` not defined at compile time\n   --> $DIR/issue-110547.rs:5:5\n    |\n LL |     env!(\"\\t\");\n    |     ^^^^^^^^^^\n    |\n-   = help: use `std::env::var(\"    \")` to read the variable at run time\n+   = help: use `std::env::var(\"\\t\")` to read the variable at run time\n    = note: this error originates in the macro `env` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: environment variable `` not defined at compile time\n+error: environment variable `\\u{2069}` not defined at compile time\n   --> $DIR/issue-110547.rs:6:5\n    |\n LL |     env!(\"\\u{2069}\");\n    |     ^^^^^^^^^^^^^^^^\n    |\n-   = help: use `std::env::var(\"\")` to read the variable at run time\n+   = help: use `std::env::var(\"\\u{2069}\")` to read the variable at run time\n    = note: this error originates in the macro `env` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 3 previous errors"}]}