{"sha": "36e5092dfa7fcc676c7d6b63f8dd692edd3399a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2ZTUwOTJkZmE3ZmNjNjc2YzdkNmI2M2Y4ZGQ2OTJlZGQzMzk5YTU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-02-26T16:14:16Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-03-13T15:22:07Z"}, "message": "add some debug output", "tree": {"sha": "36204183295c2eb88e66fd5aebdf4cd68543cd06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36204183295c2eb88e66fd5aebdf4cd68543cd06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36e5092dfa7fcc676c7d6b63f8dd692edd3399a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36e5092dfa7fcc676c7d6b63f8dd692edd3399a5", "html_url": "https://github.com/rust-lang/rust/commit/36e5092dfa7fcc676c7d6b63f8dd692edd3399a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36e5092dfa7fcc676c7d6b63f8dd692edd3399a5/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a2ac85e3fa8c1c05a7e2b5b412c073ce7853f23", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a2ac85e3fa8c1c05a7e2b5b412c073ce7853f23", "html_url": "https://github.com/rust-lang/rust/commit/0a2ac85e3fa8c1c05a7e2b5b412c073ce7853f23"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "cfcd951d4906c30a8a83df3186e4dac225cf40d2", "filename": "src/librustc/traits/query/dropck_outlives.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/36e5092dfa7fcc676c7d6b63f8dd692edd3399a5/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36e5092dfa7fcc676c7d6b63f8dd692edd3399a5/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs?ref=36e5092dfa7fcc676c7d6b63f8dd692edd3399a5", "patch": "@@ -38,7 +38,8 @@ impl<'cx, 'gcx, 'tcx> At<'cx, 'gcx, 'tcx> {\n     pub fn dropck_outlives(&self, ty: Ty<'tcx>) -> InferOk<'tcx, Vec<Kind<'tcx>>> {\n         debug!(\n             \"dropck_outlives(ty={:?}, param_env={:?})\",\n-            ty, self.param_env,\n+            ty,\n+            self.param_env,\n         );\n \n         let tcx = self.infcx.tcx;"}, {"sha": "70c5cf5f3902934794b497b16a3465d77d1a401f", "filename": "src/librustc/traits/query/normalize.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/36e5092dfa7fcc676c7d6b63f8dd692edd3399a5/src%2Flibrustc%2Ftraits%2Fquery%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36e5092dfa7fcc676c7d6b63f8dd692edd3399a5/src%2Flibrustc%2Ftraits%2Fquery%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Fnormalize.rs?ref=36e5092dfa7fcc676c7d6b63f8dd692edd3399a5", "patch": "@@ -45,6 +45,12 @@ impl<'cx, 'gcx, 'tcx> At<'cx, 'gcx, 'tcx> {\n     where\n         T: TypeFoldable<'tcx>,\n     {\n+        debug!(\n+            \"normalize::<{}>(value={:?}, param_env={:?})\",\n+            unsafe { ::std::intrinsics::type_name::<T>() },\n+            value,\n+            self.param_env,\n+        );\n         let mut normalizer = QueryNormalizer {\n             infcx: self.infcx,\n             cause: self.cause,"}, {"sha": "a9734e9c2986e0831dd4c1c404e038ea2fa88ae3", "filename": "src/librustc/traits/query/normalize_erasing_regions.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/36e5092dfa7fcc676c7d6b63f8dd692edd3399a5/src%2Flibrustc%2Ftraits%2Fquery%2Fnormalize_erasing_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36e5092dfa7fcc676c7d6b63f8dd692edd3399a5/src%2Flibrustc%2Ftraits%2Fquery%2Fnormalize_erasing_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Fnormalize_erasing_regions.rs?ref=36e5092dfa7fcc676c7d6b63f8dd692edd3399a5", "patch": "@@ -30,6 +30,13 @@ impl<'cx, 'tcx> TyCtxt<'cx, 'tcx, 'tcx> {\n     where\n         T: TypeFoldable<'tcx>,\n     {\n+        debug!(\n+            \"normalize_erasing_regions::<{}>(value={:?}, param_env={:?})\",\n+            unsafe { ::std::intrinsics::type_name::<T>() },\n+            value,\n+            param_env,\n+        );\n+\n         // Erase first before we do the real query -- this keeps the\n         // cache from being too polluted.\n         let value = self.erase_regions(&value);"}]}