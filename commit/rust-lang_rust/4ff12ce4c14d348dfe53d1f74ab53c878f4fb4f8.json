{"sha": "4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZjEyY2U0YzE0ZDM0OGRmZTUzZDFmNzRhYjUzYzg3OGY0ZmI0Zjg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-01T18:30:57Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-02T12:57:04Z"}, "message": "Normalize `syntax::symbol` imports.", "tree": {"sha": "610a0ed613e84277b693d6ee485dfb3867e7ebda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/610a0ed613e84277b693d6ee485dfb3867e7ebda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "html_url": "https://github.com/rust-lang/rust/commit/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75e4783f63fc7a788d8dff47504b29dcd63d97fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/75e4783f63fc7a788d8dff47504b29dcd63d97fe", "html_url": "https://github.com/rust-lang/rust/commit/75e4783f63fc7a788d8dff47504b29dcd63d97fe"}], "stats": {"total": 370, "additions": 187, "deletions": 183}, "files": [{"sha": "c576c5af31e6abcaf7315eced705cf87519406ec", "filename": "src/librustc/arena.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -94,7 +94,7 @@ macro_rules! arena_types {\n                     >\n                 >,\n             [few] diagnostic_items: rustc_data_structures::fx::FxHashMap<\n-                syntax::symbol::Symbol,\n+                rustc_span::symbol::Symbol,\n                 rustc::hir::def_id::DefId,\n             >,\n             [few] resolve_lifetimes: rustc::middle::resolve_lifetime::ResolveLifetimes,\n@@ -105,7 +105,7 @@ macro_rules! arena_types {\n             [few] privacy_access_levels: rustc::middle::privacy::AccessLevels,\n             [few] target_features_whitelist: rustc_data_structures::fx::FxHashMap<\n                 String,\n-                Option<syntax::symbol::Symbol>\n+                Option<rustc_span::symbol::Symbol>\n             >,\n             [few] wasm_import_module_map: rustc_data_structures::fx::FxHashMap<\n                 rustc::hir::def_id::DefId,"}, {"sha": "a7d7dddf580da94b3628c49a10c399672f80fbbf", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -12,11 +12,12 @@ use crate::lint::builtin::UNUSED_ATTRIBUTES;\n use crate::ty::query::Providers;\n use crate::ty::TyCtxt;\n \n+use rustc_error_codes::*;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n-use std::fmt::{self, Display};\n-use syntax::{attr, symbol::sym};\n+use syntax::attr;\n \n-use rustc_error_codes::*;\n+use std::fmt::{self, Display};\n \n #[derive(Copy, Clone, PartialEq)]\n pub(crate) enum MethodKind {"}, {"sha": "c457fc657a15bc2a510d163bc2effad3439560a4", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,12 +1,12 @@\n use rustc_span::source_map::{SourceMap, Spanned};\n+use rustc_span::symbol::kw;\n use rustc_span::{self, BytePos, FileName};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::print::pp::Breaks::{Consistent, Inconsistent};\n use syntax::print::pp::{self, Breaks};\n use syntax::print::pprust::{self, Comments, PrintState};\n use syntax::sess::ParseSess;\n-use syntax::symbol::kw;\n use syntax::util::parser::{self, AssocOp, Fixity};\n \n use crate::hir;"}, {"sha": "44230fa0a44dc9b66181dbef47ddecd1bcd2dc25", "filename": "src/librustc/ich/hcx.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fhcx.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -10,9 +10,9 @@ use crate::ty::{fast_reject, TyCtxt};\n use std::cmp::Ord;\n \n use rustc_span::source_map::SourceMap;\n+use rustc_span::symbol::Symbol;\n use rustc_span::{BytePos, SourceFile};\n use syntax::ast;\n-use syntax::symbol::Symbol;\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher, ToStableHashKey};"}, {"sha": "2c4618dcd42cfbdf98fac87c345cfddbdbc848c4", "filename": "src/librustc/ich/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fich%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fich%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -4,8 +4,8 @@ pub use self::hcx::{\n     hash_stable_trait_impls, NodeIdHashingMode, StableHashingContext, StableHashingContextProvider,\n };\n crate use rustc_data_structures::fingerprint::Fingerprint;\n+use rustc_span::symbol::{sym, Symbol};\n pub use rustc_span::CachingSourceMapView;\n-use syntax::symbol::{sym, Symbol};\n \n mod hcx;\n "}, {"sha": "889b7b4db3305aee00b543acda71857acf0b63be", "filename": "src/librustc/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -7,9 +7,9 @@ use crate::ty::print::Print;\n use crate::ty::{self, DefIdTree, Infer, Ty, TyVar};\n use errors::{Applicability, DiagnosticBuilder};\n use rustc_span::source_map::DesugaringKind;\n+use rustc_span::symbol::kw;\n use rustc_span::Span;\n use std::borrow::Cow;\n-use syntax::symbol::kw;\n \n use rustc_error_codes::*;\n "}, {"sha": "27bcb63fe15fea0368b7cbdca969cd7074fbc339", "filename": "src/librustc/infer/type_variable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ftype_variable.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,7 +1,7 @@\n use crate::hir::def_id::DefId;\n use crate::ty::{self, Ty, TyVid};\n+use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n-use syntax::symbol::Symbol;\n \n use rustc_data_structures::snapshot_vec as sv;\n use rustc_data_structures::unify as ut;"}, {"sha": "c5ec0ba73e49db186af857602c4f53af88c0f99d", "filename": "src/librustc/infer/unify_key.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Finfer%2Funify_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Finfer%2Funify_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Funify_key.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,8 +1,8 @@\n use crate::ty::{self, FloatVarValue, InferConst, IntVarValue, Ty, TyCtxt};\n use rustc_data_structures::unify::InPlace;\n use rustc_data_structures::unify::{EqUnifyValue, NoError, UnificationTable, UnifyKey, UnifyValue};\n+use rustc_span::symbol::Symbol;\n use rustc_span::{Span, DUMMY_SP};\n-use syntax::symbol::Symbol;\n \n use std::cell::RefMut;\n use std::cmp;"}, {"sha": "aab0db4e4e34fe904c60bb9ea22c13535eefc751", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -10,10 +10,10 @@ use crate::session::Session;\n use errors::{pluralize, Applicability, DiagnosticBuilder};\n use rustc_session::declare_lint;\n use rustc_span::source_map::Span;\n+use rustc_span::symbol::Symbol;\n use syntax::ast;\n use syntax::early_buffered_lints::{ILL_FORMED_ATTRIBUTE_INPUT, META_VARIABLE_MISUSE};\n use syntax::edition::Edition;\n-use syntax::symbol::Symbol;\n \n declare_lint! {\n     pub EXCEEDING_BITSHIFTS,"}, {"sha": "f7dfbab92e613cbab16d894b7187b78840b7ead0", "filename": "src/librustc/lint/internal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Flint%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Flint%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Finternal.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -8,8 +8,8 @@ use crate::lint::{\n use errors::Applicability;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_session::declare_tool_lint;\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast::{Ident, Item, ItemKind};\n-use syntax::symbol::{sym, Symbol};\n \n declare_tool_lint! {\n     pub rustc::DEFAULT_HASH_TYPES,"}, {"sha": "87847cdf8c78d9782f6a537e5d2758e667477b78", "filename": "src/librustc/lint/levels.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Flint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Flint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Flevels.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -10,11 +10,11 @@ use crate::util::nodemap::FxHashMap;\n use errors::{Applicability, DiagnosticBuilder};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_span::source_map::MultiSpan;\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast;\n use syntax::attr;\n use syntax::feature_gate;\n use syntax::print::pprust;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc_error_codes::*;\n "}, {"sha": "9769835a67439e05d72929151124875b02140ab9", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -34,9 +34,9 @@ use crate::util::nodemap::NodeMap;\n use errors::{DiagnosticBuilder, DiagnosticId};\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::{DesugaringKind, ExpnKind, MultiSpan};\n+use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n use syntax::ast;\n-use syntax::symbol::Symbol;\n \n pub use crate::lint::context::{\n     check_ast_crate, check_crate, late_lint_mod, BufferedEarlyLint, CheckLintNameResult,"}, {"sha": "be7603f258a192a8194c0faf75cb5c457dd9cc5c", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -12,13 +12,13 @@ use rustc_data_structures::svh::Svh;\n \n use rustc_data_structures::sync::{self, MetadataRef};\n use rustc_macros::HashStable;\n+use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n use rustc_target::spec::Target;\n use std::any::Any;\n use std::path::{Path, PathBuf};\n use syntax::ast;\n use syntax::expand::allocator::AllocatorKind;\n-use syntax::symbol::Symbol;\n \n pub use self::NativeLibraryKind::*;\n pub use rustc_session::utils::NativeLibraryKind;"}, {"sha": "98e48ca0e4d94e7957fc8dd6b6c94364544f8c25", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -19,9 +19,9 @@ use crate::util::nodemap::FxHashMap;\n use crate::hir;\n use crate::hir::itemlikevisit::ItemLikeVisitor;\n use rustc_macros::HashStable;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc_error_codes::*;\n "}, {"sha": "96b14eae8ea0e74220aa5b2dd08d23b7deabfc1f", "filename": "src/librustc/middle/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmiddle%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmiddle%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -5,7 +5,7 @@ pub mod free_region;\n pub mod lang_items;\n pub mod lib_features {\n     use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-    use syntax::symbol::Symbol;\n+    use rustc_span::symbol::Symbol;\n \n     #[derive(HashStable)]\n     pub struct LibFeatures {"}, {"sha": "b33cde8e2af20fabc2339c6f3ef64d634e688007", "filename": "src/librustc/middle/recursion_limit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmiddle%2Frecursion_limit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmiddle%2Frecursion_limit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Frecursion_limit.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -6,8 +6,8 @@\n // just peeks and looks for that attribute.\n \n use crate::session::Session;\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc_data_structures::sync::Once;\n "}, {"sha": "a6a49864a95641cf168e0fb0513802343858804e", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -13,12 +13,12 @@ use crate::ty::{self, TyCtxt};\n use crate::util::nodemap::{FxHashMap, FxHashSet};\n use errors::DiagnosticBuilder;\n use rustc_feature::GateIssue;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{MultiSpan, Span};\n use syntax::ast::CRATE_NODE_ID;\n use syntax::attr::{self, ConstStability, Deprecation, RustcDeprecation, Stability};\n use syntax::errors::Applicability;\n use syntax::feature_gate::feature_err_issue;\n-use syntax::symbol::{sym, Symbol};\n \n use std::num::NonZeroU32;\n "}, {"sha": "bdf34e8d765404e928206ab03ce1f21b3a5e0b1c", "filename": "src/librustc/middle/weak_lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -9,10 +9,10 @@ use crate::hir::intravisit;\n use crate::hir::intravisit::{NestedVisitorMap, Visitor};\n use crate::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashSet;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use rustc_target::spec::PanicStrategy;\n use syntax::ast;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc_error_codes::*;\n "}, {"sha": "dddc3cf9f5b707c4b0e6c87980eb0d3e57d2b93d", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -11,10 +11,10 @@ use backtrace::Backtrace;\n use errors::DiagnosticBuilder;\n use hir::GeneratorKind;\n use rustc_macros::HashStable;\n+use rustc_span::symbol::Symbol;\n use rustc_span::{Pos, Span};\n use rustc_target::spec::abi::Abi;\n use std::{any::Any, env, fmt};\n-use syntax::symbol::Symbol;\n \n use rustc_error_codes::*;\n "}, {"sha": "a293fd128bdb08bbe13dfa93f02e52373962e6b4", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -27,6 +27,7 @@ use rustc_index::bit_set::BitMatrix;\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_macros::HashStable;\n use rustc_serialize::{Decodable, Encodable};\n+use rustc_span::symbol::Symbol;\n use rustc_span::{Span, DUMMY_SP};\n use smallvec::SmallVec;\n use std::borrow::Cow;\n@@ -36,7 +37,6 @@ use std::slice;\n use std::{iter, mem, option, u32};\n pub use syntax::ast::Mutability;\n use syntax::ast::Name;\n-use syntax::symbol::Symbol;\n \n pub use crate::mir::cache::{BodyAndCache, ReadOnlyBodyAndCache};\n pub use crate::mir::interpret::AssertMessage;"}, {"sha": "bec98221e5af3a2a6412dc2c2ae5296b39f4feca", "filename": "src/librustc/mir/mono.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmir%2Fmono.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fmir%2Fmono.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmono.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -9,10 +9,10 @@ use crate::util::nodemap::FxHashMap;\n use rustc_data_structures::base_n;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_span::source_map::Span;\n+use rustc_span::symbol::Symbol;\n use std::fmt;\n use std::hash::Hash;\n use syntax::attr::InlineAttr;\n-use syntax::symbol::Symbol;\n \n /// Describes how a monomorphization will be instantiated in object files.\n #[derive(PartialEq)]"}, {"sha": "16bf69f9ad04c2944f9c80c6580560a8113e82e0", "filename": "src/librustc/traits/coherence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fcoherence.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -12,8 +12,8 @@ use crate::traits::{self, Normalized, Obligation, ObligationCause, SelectionCont\n use crate::ty::fold::TypeFoldable;\n use crate::ty::subst::Subst;\n use crate::ty::{self, Ty, TyCtxt};\n+use rustc_span::symbol::sym;\n use rustc_span::DUMMY_SP;\n-use syntax::symbol::sym;\n \n /// Whether we do the orphan check relative to this crate or\n /// to some remote crate."}, {"sha": "dbc872a51bfbe6e57ae192ee89864316c0751778", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -26,10 +26,10 @@ use crate::util::nodemap::{FxHashMap, FxHashSet};\n use errors::{pluralize, Applicability, DiagnosticBuilder, Style};\n use rustc::hir::def_id::LOCAL_CRATE;\n use rustc_span::source_map::SourceMap;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::{ExpnKind, MultiSpan, Span, DUMMY_SP};\n use std::fmt;\n use syntax::ast;\n-use syntax::symbol::{kw, sym};\n \n use rustc_error_codes::*;\n "}, {"sha": "30ffdc23d989326c8f3189103e07e6f7d5eb4b77", "filename": "src/librustc/traits/object_safety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fobject_safety.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -16,11 +16,11 @@ use crate::lint;\n use crate::traits::{self, Obligation, ObligationCause};\n use crate::ty::subst::{InternalSubsts, Subst};\n use crate::ty::{self, Predicate, ToPredicate, Ty, TyCtxt, TypeFoldable};\n+use rustc_span::symbol::Symbol;\n use rustc_span::{Span, DUMMY_SP};\n use std::borrow::Cow;\n use std::iter::{self};\n use syntax::ast::{self};\n-use syntax::symbol::Symbol;\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq, Hash)]\n pub enum ObjectSafetyViolation {"}, {"sha": "9097cbf0c221a54946ae0a8873c643690d81465b", "filename": "src/librustc/traits/on_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -5,10 +5,10 @@ use crate::ty::{self, GenericParamDefKind, TyCtxt};\n use crate::util::common::ErrorReported;\n use crate::util::nodemap::FxHashMap;\n \n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{MetaItem, NestedMetaItem};\n use syntax::attr;\n-use syntax::symbol::{kw, sym, Symbol};\n \n use rustc_error_codes::*;\n "}, {"sha": "a0a5ca04a8e258639769913f374ccf8c223d64a7", "filename": "src/librustc/traits/project.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fproject.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -21,9 +21,9 @@ use crate::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt};\n use crate::util::common::FN_OUTPUT_NAME;\n use rustc_data_structures::snapshot_map::{Snapshot, SnapshotMap};\n use rustc_macros::HashStable;\n+use rustc_span::symbol::sym;\n use rustc_span::DUMMY_SP;\n use syntax::ast::Ident;\n-use syntax::symbol::sym;\n \n /// Depending on the stage of compilation, we want projection to be\n /// more or less conservative."}, {"sha": "7e412eb03038ad5b861dede954d5aab53d60c672", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -42,14 +42,14 @@ use crate::hir;\n use crate::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lock;\n use rustc_index::bit_set::GrowableBitSet;\n+use rustc_span::symbol::sym;\n use rustc_target::spec::abi::Abi;\n use std::cell::{Cell, RefCell};\n use std::cmp;\n use std::fmt::{self, Display};\n use std::iter;\n use std::rc::Rc;\n use syntax::attr;\n-use syntax::symbol::sym;\n \n pub struct SelectionContext<'cx, 'tcx> {\n     infcx: &'cx InferCtxt<'cx, 'tcx>,"}, {"sha": "58204a460d7df02fc32a254abb561c1222a7a044", "filename": "src/librustc/traits/structural_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,8 +3,8 @@ use crate::traits::project::Normalized;\n use crate::ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n use crate::ty::{self, Lift, Ty, TyCtxt};\n use chalk_engine;\n+use rustc_span::symbol::Symbol;\n use smallvec::SmallVec;\n-use syntax::symbol::Symbol;\n \n use std::collections::{BTreeMap, BTreeSet};\n use std::fmt;"}, {"sha": "c26d68de181b69c4555e7155dbcbed8ee1e07edb", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -60,6 +60,7 @@ use rustc_data_structures::sync::{Lock, Lrc, WorkerLocal};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_macros::HashStable;\n use rustc_span::source_map::MultiSpan;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use rustc_target::spec::abi;\n use smallvec::SmallVec;\n@@ -76,7 +77,6 @@ use std::sync::Arc;\n use syntax::ast;\n use syntax::attr;\n use syntax::expand::allocator::AllocatorKind;\n-use syntax::symbol::{kw, sym, Symbol};\n \n pub struct AllArenas {\n     pub interner: SyncDroplessArena,"}, {"sha": "8dafe407ed9c23860a6db599f04cdd7b04de7ddc", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -11,10 +11,10 @@ use crate::ty::{self, DefIdTree, ParamConst, Ty, TyCtxt, TypeFoldable};\n \n use rustc_apfloat::ieee::{Double, Single};\n use rustc_apfloat::Float;\n+use rustc_span::symbol::{kw, Symbol};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::attr::{SignedInt, UnsignedInt};\n-use syntax::symbol::{kw, Symbol};\n \n use std::cell::Cell;\n use std::collections::BTreeMap;"}, {"sha": "1907e6c82c62a936e97033ac3228afaea49c5d25", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -47,14 +47,14 @@ use rustc_data_structures::sync::Lrc;\n use rustc_index::vec::IndexVec;\n use rustc_target::spec::PanicStrategy;\n \n+use rustc_span::symbol::Symbol;\n use rustc_span::{Span, DUMMY_SP};\n use std::any::type_name;\n use std::borrow::Cow;\n use std::ops::Deref;\n use std::sync::Arc;\n use syntax::ast;\n use syntax::attr;\n-use syntax::symbol::Symbol;\n \n #[macro_use]\n mod plumbing;"}, {"sha": "900a91fe5cf5975c242db513765542f78ef4001d", "filename": "src/librustc/ty/query/values.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fty%2Fquery%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fty%2Fquery%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fvalues.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,7 +1,7 @@\n use crate::ty::util::NeedsDrop;\n use crate::ty::{self, AdtSizedConstraint, Ty, TyCtxt};\n \n-use syntax::symbol::Symbol;\n+use rustc_span::symbol::Symbol;\n \n pub(super) trait Value<'tcx>: Sized {\n     fn from_cycle_error(tcx: TyCtxt<'tcx>) -> Self;"}, {"sha": "346622530bd5a661653d3939f68845447e836d0e", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -20,14 +20,14 @@ use crate::util::captures::Captures;\n use polonius_engine::Atom;\n use rustc_index::vec::Idx;\n use rustc_macros::HashStable;\n+use rustc_span::symbol::{kw, Symbol};\n use rustc_target::spec::abi;\n use smallvec::SmallVec;\n use std::borrow::Cow;\n use std::cmp::Ordering;\n use std::marker::PhantomData;\n use std::ops::Range;\n use syntax::ast::{self, Ident};\n-use syntax::symbol::{kw, Symbol};\n \n #[derive(\n     Clone,"}, {"sha": "4969e7211cecde280a8e50b614523c4c3b83ce5a", "filename": "src/librustc/ty/wf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fty%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Fty%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fwf.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -5,9 +5,9 @@ use crate::middle::lang_items;\n use crate::traits::{self, AssocTypeBoundData};\n use crate::ty::subst::SubstsRef;\n use crate::ty::{self, ToPredicate, Ty, TyCtxt, TypeFoldable};\n+use rustc_span::symbol::{kw, Ident};\n use rustc_span::Span;\n use std::iter::once;\n-use syntax::symbol::{kw, Ident};\n \n /// Returns the set of obligations needed to make `ty` well-formed.\n /// If `ty` contains unresolved inference variables, this may include"}, {"sha": "011b70c04d51b033519cfc3b5a2d3722cb81cade", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -7,7 +7,7 @@ use std::fmt::Debug;\n use std::time::{Duration, Instant};\n \n use crate::session::Session;\n-use syntax::symbol::{sym, Symbol};\n+use rustc_span::symbol::{sym, Symbol};\n \n #[cfg(test)]\n mod tests;"}, {"sha": "a136a07a40cbef371a97322c077afe28455d9866", "filename": "src/librustc_builtin_macros/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fasm.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -5,10 +5,10 @@ use State::*;\n use errors::{DiagnosticBuilder, PResult};\n use rustc_expand::base::*;\n use rustc_parse::parser::Parser;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, AsmDialect};\n use syntax::ptr::P;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::token::{self, Token};\n use syntax::tokenstream::{self, TokenStream};\n use syntax::{span_err, struct_span_err};"}, {"sha": "9043db4742bf7c842954275bf46d3753f8e7813f", "filename": "src/librustc_builtin_macros/assert.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fassert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fassert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fassert.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -2,11 +2,11 @@ use errors::{Applicability, DiagnosticBuilder};\n \n use rustc_expand::base::*;\n use rustc_parse::parser::Parser;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, *};\n use syntax::print::pprust;\n use syntax::ptr::P;\n-use syntax::symbol::{sym, Symbol};\n use syntax::token::{self, TokenKind};\n use syntax::tokenstream::{DelimSpan, TokenStream, TokenTree};\n "}, {"sha": "ed65611da61e1397042991fef4c5e1d5bdae6a1b", "filename": "src/librustc_builtin_macros/concat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fconcat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fconcat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fconcat.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,6 +1,6 @@\n use rustc_expand::base::{self, DummyResult};\n+use rustc_span::symbol::Symbol;\n use syntax::ast;\n-use syntax::symbol::Symbol;\n use syntax::tokenstream::TokenStream;\n \n use std::string::String;"}, {"sha": "0df5ef3c9d8822526c38711d08bfe6e50de8b4f1", "filename": "src/librustc_builtin_macros/deriving/clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,10 +3,10 @@ use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, Expr, GenericArg, Generics, ItemKind, MetaItem, VariantData};\n use syntax::ptr::P;\n-use syntax::symbol::{kw, sym, Symbol};\n \n pub fn expand_deriving_clone(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "cb8933c14756f8ac289bcdeb6669605caa71a253", "filename": "src/librustc_builtin_macros/deriving/cmp/eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,10 +3,10 @@ use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, Expr, GenericArg, Ident, MetaItem};\n use syntax::ptr::P;\n-use syntax::symbol::{sym, Symbol};\n \n pub fn expand_deriving_eq(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "fa4309838067166e83586c9e81ef59483ae132ec", "filename": "src/librustc_builtin_macros/deriving/cmp/ord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,10 +3,10 @@ use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast::{self, Expr, MetaItem};\n use syntax::ptr::P;\n-use syntax::symbol::sym;\n \n pub fn expand_deriving_ord(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "dc2912895a8e1a2896b4971ca8f74ff60dd0f082", "filename": "src/librustc_builtin_macros/deriving/cmp/partial_eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,10 +3,10 @@ use crate::deriving::generic::*;\n use crate::deriving::{path_local, path_std};\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast::{BinOpKind, Expr, MetaItem};\n use syntax::ptr::P;\n-use syntax::symbol::sym;\n \n pub fn expand_deriving_partial_eq(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "a54d8c56f758d5965ceca8c2f0a92c0c051600ae", "filename": "src/librustc_builtin_macros/deriving/cmp/partial_ord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -5,10 +5,10 @@ use crate::deriving::generic::*;\n use crate::deriving::{path_local, path_std, pathvec_std};\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, BinOpKind, Expr, MetaItem};\n use syntax::ptr::P;\n-use syntax::symbol::{sym, Symbol};\n \n pub fn expand_deriving_partial_ord(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "f68fddee71be52c8745e3f614b818f847366f2f9", "filename": "src/librustc_builtin_macros/deriving/debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,11 +3,11 @@ use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::sym;\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, Ident};\n use syntax::ast::{Expr, MetaItem};\n use syntax::ptr::P;\n-use syntax::symbol::sym;\n \n pub fn expand_deriving_debug(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "3b20ebbbab45b5191d17d536a6dc1fc5993b4cbd", "filename": "src/librustc_builtin_macros/deriving/decodable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -5,11 +5,11 @@ use crate::deriving::generic::*;\n use crate::deriving::pathvec_std;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n use syntax::ast;\n use syntax::ast::{Expr, MetaItem, Mutability};\n use syntax::ptr::P;\n-use syntax::symbol::Symbol;\n \n pub fn expand_deriving_rustc_decodable(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "f40d6d7e424d6b5e38493e59bd266c0f5e290386", "filename": "src/librustc_builtin_macros/deriving/default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,11 +3,11 @@ use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n use rustc_expand::base::{Annotatable, DummyResult, ExtCtxt};\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use syntax::ast::{Expr, MetaItem};\n use syntax::ptr::P;\n use syntax::span_err;\n-use syntax::symbol::{kw, sym};\n \n use rustc_error_codes::*;\n "}, {"sha": "b330f00939fcadb5555ef26a84eed1d8001f8185", "filename": "src/librustc_builtin_macros/deriving/encodable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -90,10 +90,10 @@ use crate::deriving::generic::*;\n use crate::deriving::pathvec_std;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::Symbol;\n use rustc_span::Span;\n use syntax::ast::{Expr, ExprKind, MetaItem, Mutability};\n use syntax::ptr::P;\n-use syntax::symbol::Symbol;\n \n pub fn expand_deriving_rustc_encodable(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "7092483843f70df40c8b7d517ac5649e7d392f56", "filename": "src/librustc_builtin_macros/deriving/generic/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -183,13 +183,13 @@ use std::vec;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n use rustc_span::source_map::respan;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, BinOpKind, EnumDef, Expr, Generics, Ident, PatKind};\n use syntax::ast::{GenericArg, GenericParamKind, VariantData};\n use syntax::attr;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::util::map_in_place::MapInPlace;\n \n use ty::{LifetimeBounds, Path, Ptr, PtrTy, Self_, Ty};"}, {"sha": "e620711aa2bd4b201ed3efd3497059169c84f0ba", "filename": "src/librustc_builtin_macros/deriving/hash.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,10 +3,10 @@ use crate::deriving::generic::*;\n use crate::deriving::{self, path_std, pathvec_std};\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast::{Expr, MetaItem, Mutability};\n use syntax::ptr::P;\n-use syntax::symbol::sym;\n \n pub fn expand_deriving_hash(\n     cx: &mut ExtCtxt<'_>,"}, {"sha": "4d83a6635ab17ce4f71f104dddfac76e613345db", "filename": "src/librustc_builtin_macros/deriving/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,10 +1,10 @@\n //! The compiler code necessary to implement the `#[derive]` extensions.\n \n use rustc_expand::base::{Annotatable, ExtCtxt, MultiItemModifier};\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, ItemKind, MetaItem};\n use syntax::ptr::P;\n-use syntax::symbol::{sym, Symbol};\n \n macro path_local($x:ident) {\n     generic::ty::Path::new_local(stringify!($x))"}, {"sha": "896bb8ca05392a74178a9d20b421cfddffed128e", "filename": "src/librustc_builtin_macros/env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fenv.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -4,9 +4,9 @@\n //\n \n use rustc_expand::base::{self, *};\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, GenericArg, Ident};\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::tokenstream::TokenStream;\n \n use std::env;"}, {"sha": "e2662faab6cb5a31dac8468b6ca990f3bad863f7", "filename": "src/librustc_builtin_macros/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fformat.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -8,10 +8,10 @@ use errors::Applicability;\n use errors::DiagnosticBuilder;\n \n use rustc_expand::base::{self, *};\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{MultiSpan, Span};\n use syntax::ast;\n use syntax::ptr::P;\n-use syntax::symbol::{sym, Symbol};\n use syntax::token;\n use syntax::tokenstream::TokenStream;\n "}, {"sha": "957d34b7d89836edf48fbbb1d56cbd7f704545b8", "filename": "src/librustc_builtin_macros/global_allocator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fglobal_allocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fglobal_allocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fglobal_allocator.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,12 +1,12 @@\n use crate::util::check_builtin_macro_attribute;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::{self, Attribute, Expr, FnHeader, FnSig, Generics, Ident, Param};\n use syntax::ast::{ItemKind, Mutability, Stmt, Ty, TyKind, Unsafety};\n use syntax::expand::allocator::{AllocatorKind, AllocatorMethod, AllocatorTy, ALLOCATOR_METHODS};\n use syntax::ptr::P;\n-use syntax::symbol::{kw, sym, Symbol};\n \n pub fn expand(\n     ecx: &mut ExtCtxt<'_>,"}, {"sha": "066e3a26445a661279ae28383004426c738453db", "filename": "src/librustc_builtin_macros/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Flib.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -15,9 +15,9 @@ use crate::deriving::*;\n \n use rustc_expand::base::{MacroExpanderFn, Resolver, SyntaxExtension, SyntaxExtensionKind};\n use rustc_expand::proc_macro::BangProcMacro;\n+use rustc_span::symbol::sym;\n use syntax::ast::Ident;\n use syntax::edition::Edition;\n-use syntax::symbol::sym;\n \n mod asm;\n mod assert;"}, {"sha": "44968d6df96934654513d20f3d6b48f52781fe94", "filename": "src/librustc_builtin_macros/proc_macro_harness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,6 +3,7 @@ use std::mem;\n use rustc_expand::base::{ExtCtxt, Resolver};\n use rustc_expand::expand::{AstFragment, ExpansionConfig};\n use rustc_span::hygiene::AstPass;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::{Span, DUMMY_SP};\n use smallvec::smallvec;\n use syntax::ast::{self, Ident};\n@@ -11,7 +12,6 @@ use syntax::expand::is_proc_macro_attr;\n use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{kw, sym};\n use syntax::visit::{self, Visitor};\n \n struct ProcMacroDerive {"}, {"sha": "19a766de1f47f59b0e12d089bfefbcff5aa94294", "filename": "src/librustc_builtin_macros/source_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fsource_util.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,11 +1,11 @@\n use rustc_expand::base::{self, *};\n use rustc_expand::panictry;\n use rustc_parse::{self, new_sub_parser_from_file, parser::Parser, DirectoryOwnership};\n+use rustc_span::symbol::Symbol;\n use syntax::ast;\n use syntax::early_buffered_lints::INCOMPLETE_INCLUDE;\n use syntax::print::pprust;\n use syntax::ptr::P;\n-use syntax::symbol::Symbol;\n use syntax::token;\n use syntax::tokenstream::TokenStream;\n "}, {"sha": "b56a2f5254a17848ca646aef606311eaae8223a4", "filename": "src/librustc_builtin_macros/standard_library_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,11 +1,11 @@\n use rustc_expand::base::{ExtCtxt, Resolver};\n use rustc_expand::expand::ExpansionConfig;\n use rustc_span::hygiene::AstPass;\n+use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::DUMMY_SP;\n use syntax::edition::Edition;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{kw, sym, Ident, Symbol};\n use syntax::{ast, attr};\n \n pub fn inject("}, {"sha": "0eee212108e8521f48beaea494e845f21fb52c68", "filename": "src/librustc_builtin_macros/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftest.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -4,11 +4,11 @@ use crate::util::check_builtin_macro_attribute;\n \n use rustc_expand::base::*;\n use rustc_span::source_map::respan;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast;\n use syntax::attr;\n use syntax::print::pprust;\n-use syntax::symbol::{sym, Symbol};\n \n use std::iter;\n "}, {"sha": "eddf492720336db2eee9662833a34512a4fb73aa", "filename": "src/librustc_builtin_macros/test_harness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Ftest_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Ftest_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftest_harness.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -6,6 +6,7 @@ use rustc_expand::expand::{AstFragment, ExpansionConfig};\n use rustc_feature::Features;\n use rustc_span::hygiene::{AstPass, SyntaxContext, Transparency};\n use rustc_span::source_map::respan;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use rustc_target::spec::PanicStrategy;\n use smallvec::{smallvec, SmallVec};\n@@ -15,7 +16,6 @@ use syntax::entry::{self, EntryPointType};\n use syntax::mut_visit::{ExpectOne, *};\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{sym, Symbol};\n \n use std::{iter, mem};\n "}, {"sha": "c0b373f1370c15f77fd4e4bd0a4338bb6d2ea251", "filename": "src/librustc_builtin_macros/trace_macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Ftrace_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_builtin_macros%2Ftrace_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftrace_macros.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,6 +1,6 @@\n use rustc_expand::base::{self, ExtCtxt};\n+use rustc_span::symbol::kw;\n use rustc_span::Span;\n-use syntax::symbol::kw;\n use syntax::tokenstream::{TokenStream, TokenTree};\n \n pub fn expand_trace_macros("}, {"sha": "455b7086212baf862022695184d64bf824cfc1d9", "filename": "src/librustc_codegen_llvm/back/archive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -12,7 +12,7 @@ use crate::llvm::{self, ArchiveKind};\n use rustc::session::Session;\n use rustc_codegen_ssa::back::archive::{find_library, ArchiveBuilder};\n use rustc_codegen_ssa::{looks_like_rust_object_file, METADATA_FILENAME, RLIB_BYTECODE_EXTENSION};\n-use syntax::symbol::Symbol;\n+use rustc_span::symbol::Symbol;\n \n struct ArchiveConfig<'a> {\n     pub sess: &'a Session,"}, {"sha": "76f6eeb3f79070c8bf5d386a4280670d5b5dd598", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -18,8 +18,8 @@ use rustc_codegen_ssa::mir::place::PlaceRef;\n \n use libc::{c_char, c_uint};\n \n+use rustc_span::symbol::Symbol;\n use syntax::ast::Mutability;\n-use syntax::symbol::Symbol;\n \n pub use crate::context::CodegenCx;\n "}, {"sha": "318037b5bd81da1faf96876f724052df0a5bb5cc", "filename": "src/librustc_codegen_llvm/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fconsts.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -14,9 +14,9 @@ use rustc::mir::mono::MonoItem;\n use rustc::ty::{self, Instance, Ty};\n use rustc::{bug, span_bug};\n use rustc_codegen_ssa::traits::*;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use rustc_target::abi::HasDataLayout;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc::ty::layout::{self, Align, LayoutOf, Size};\n "}, {"sha": "c0a5e0089a95584e160362904b6a79d55cb15f72", "filename": "src/librustc_codegen_llvm/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcontext.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -28,12 +28,12 @@ use rustc_target::spec::{HasTargetSpec, Target};\n \n use crate::abi::Abi;\n use rustc_span::source_map::{Span, DUMMY_SP};\n+use rustc_span::symbol::Symbol;\n use std::cell::{Cell, RefCell};\n use std::ffi::CStr;\n use std::iter;\n use std::str;\n use std::sync::Arc;\n-use syntax::symbol::Symbol;\n \n /// There is one `CodegenCx` per compilation unit. Each one has its own LLVM\n /// `llvm::Context` so that several compilation units may be optimized in parallel."}, {"sha": "eae461a575f7f9a61c9abb8e2e5e2086a48be8be", "filename": "src/librustc_codegen_llvm/debuginfo/gdb.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fgdb.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -9,8 +9,8 @@ use rustc::bug;\n use rustc::session::config::DebugInfo;\n use rustc_codegen_ssa::traits::*;\n \n+use rustc_span::symbol::sym;\n use syntax::attr;\n-use syntax::symbol::sym;\n \n /// Inserts a side-effect free instruction sequence that makes sure that the\n /// .debug_gdb_scripts global is referenced, so it isn't removed by the linker."}, {"sha": "61ccd7820109a4a1c916eec5f81e5c9f46f1a7a1", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -42,10 +42,10 @@ use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_fs_util::path_to_c_string;\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_span::symbol::{Interner, Symbol};\n use rustc_span::{self, FileName, Span};\n use rustc_target::abi::HasDataLayout;\n use syntax::ast;\n-use syntax::symbol::{Interner, Symbol};\n \n use libc::{c_longlong, c_uint};\n use std::collections::hash_map::Entry;"}, {"sha": "16ae3c95030525c87f9522202dbb72f88813b87f", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -37,10 +37,10 @@ use std::ffi::CString;\n \n use rustc::ty::layout::{self, HasTyCtxt, LayoutOf, Size};\n use rustc_codegen_ssa::traits::*;\n+use rustc_span::symbol::Symbol;\n use rustc_span::{self, BytePos, Pos, Span};\n use smallvec::SmallVec;\n use syntax::ast;\n-use syntax::symbol::Symbol;\n \n mod create_scope_map;\n pub mod gdb;"}, {"sha": "b3c58b2402065fdf3ef6afaf1d28d22afe8306a4", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -6,10 +6,10 @@ use rustc::session::config::PrintRequest;\n use rustc::session::Session;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_feature::UnstableFeatures;\n+use rustc_span::symbol::sym;\n use rustc_span::symbol::Symbol;\n use rustc_target::spec::{MergeFunctions, PanicStrategy};\n use std::ffi::CString;\n-use syntax::symbol::sym;\n \n use std::slice;\n use std::str;"}, {"sha": "a357c350287fbc1ae19b4e72247e75b4f6c805d9", "filename": "src/librustc_codegen_ssa/back/archive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_ssa%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_ssa%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Farchive.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,5 +1,5 @@\n use rustc::session::Session;\n-use syntax::symbol::Symbol;\n+use rustc_span::symbol::Symbol;\n \n use std::io;\n use std::path::{Path, PathBuf};"}, {"sha": "30b055b3131499961da4db1de4f3a797ebb3e514", "filename": "src/librustc_codegen_ssa/back/command.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_ssa%2Fback%2Fcommand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_ssa%2Fback%2Fcommand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fcommand.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -7,8 +7,8 @@ use std::io;\n use std::mem;\n use std::process::{self, Output};\n \n+use rustc_span::symbol::Symbol;\n use rustc_target::spec::LldFlavor;\n-use syntax::symbol::Symbol;\n \n #[derive(Clone)]\n pub struct Command {"}, {"sha": "8cdda5630ea5e6435208601b05b0b43be40e0c1f", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -11,8 +11,8 @@ use rustc::session::{filesearch, Session};\n use rustc::util::common::{time, time_ext};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_fs_util::fix_windows_verbatim_for_gcc;\n+use rustc_span::symbol::Symbol;\n use rustc_target::spec::{LinkerFlavor, PanicStrategy, RelroLevel};\n-use syntax::symbol::Symbol;\n \n use super::archive::ArchiveBuilder;\n use super::command::Command;"}, {"sha": "fb9ba2a1558f3a15a825200d507f16655640e791", "filename": "src/librustc_codegen_ssa/back/linker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -15,8 +15,8 @@ use rustc::session::config::{self, CrateType, DebugInfo, LinkerPluginLto, Lto, O\n use rustc::session::Session;\n use rustc::ty::TyCtxt;\n use rustc_serialize::{json, Encoder};\n+use rustc_span::symbol::Symbol;\n use rustc_target::spec::{LinkerFlavor, LldFlavor};\n-use syntax::symbol::Symbol;\n \n /// For all the linkers we support, and information they might\n /// need out of the shared crate context before we get rid of it."}, {"sha": "4b4a2f4b26d424d3afc23c1bdc4b9730b802a62f", "filename": "src/librustc_codegen_ssa/mir/debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fdebuginfo.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -6,8 +6,8 @@ use rustc::ty::layout::{LayoutOf, Size};\n use rustc::ty::TyCtxt;\n use rustc_index::vec::IndexVec;\n \n+use rustc_span::symbol::kw;\n use rustc_span::{BytePos, Span};\n-use syntax::symbol::kw;\n \n use super::OperandValue;\n use super::{FunctionCx, LocalRef};"}, {"sha": "39cb501b7aa98dd861fc55cd0663c55136cca98d", "filename": "src/librustc_codegen_ssa/mir/rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -14,7 +14,7 @@ use rustc::ty::layout::{self, HasTyCtxt, LayoutOf};\n use rustc::ty::{self, adjustment::PointerCast, Instance, Ty, TyCtxt};\n use rustc_apfloat::{ieee, Float, Round, Status};\n use rustc_span::source_map::{Span, DUMMY_SP};\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n \n use std::{i128, u128};\n "}, {"sha": "fecb3986e7e0899b26b7a18fed784a354aa96d44", "filename": "src/librustc_codegen_utils/codegen_backend.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -15,7 +15,7 @@ use rustc::session::Session;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n use rustc::util::common::ErrorReported;\n-use syntax::symbol::Symbol;\n+use rustc_span::symbol::Symbol;\n \n pub use rustc_data_structures::sync::MetadataRef;\n "}, {"sha": "399db7aafc76f677f5cff6a43451a8ce85a11f1a", "filename": "src/librustc_codegen_utils/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flib.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -18,7 +18,7 @@ extern crate rustc;\n use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n \n pub mod codegen_backend;\n pub mod link;"}, {"sha": "4dab4545b422fa16f9ec58a7bc96f1baf259e422", "filename": "src/librustc_codegen_utils/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_utils%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_utils%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flink.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,8 +1,8 @@\n use rustc::session::config::{self, Input, OutputFilenames, OutputType};\n use rustc::session::Session;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use std::path::{Path, PathBuf};\n-use syntax::symbol::sym;\n use syntax::{ast, attr};\n \n pub fn out_filename("}, {"sha": "0a76093a9a9fdb68e9b1263eef18ecaaabe399b5", "filename": "src/librustc_codegen_utils/symbol_names_test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_utils%2Fsymbol_names_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_codegen_utils%2Fsymbol_names_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fsymbol_names_test.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -6,7 +6,7 @@\n \n use rustc::hir;\n use rustc::ty::{Instance, TyCtxt};\n-use syntax::symbol::{sym, Symbol};\n+use rustc_span::symbol::{sym, Symbol};\n \n const SYMBOL_NAME: Symbol = sym::rustc_symbol_name;\n const DEF_PATH: Symbol = sym::rustc_def_path;"}, {"sha": "e53a7c992749fa51ec31208a0f5fb5801f18c9ca", "filename": "src/librustc_expand/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fbase.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -2,13 +2,13 @@ use crate::expand::{self, AstFragment, Invocation};\n \n use rustc_parse::{self, parser, DirectoryOwnership, MACRO_ARGUMENTS};\n use rustc_span::source_map::SourceMap;\n+use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use syntax::ast::{self, Attribute, Name, NodeId, PatKind};\n use syntax::attr::{self, Deprecation, HasAttrs, Stability};\n use syntax::edition::Edition;\n use syntax::mut_visit::{self, MutVisitor};\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{kw, sym, Ident, Symbol};\n use syntax::token;\n use syntax::tokenstream::{self, TokenStream};\n use syntax::visit::Visitor;"}, {"sha": "799781a89631d609e1d10e51ba94a42d40ec7140", "filename": "src/librustc_expand/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fbuild.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,10 +1,10 @@\n use crate::base::ExtCtxt;\n \n use rustc_span::source_map::{respan, Spanned};\n+use rustc_span::symbol::{kw, sym, Symbol};\n use syntax::ast::{self, AttrVec, BlockCheckMode, Expr, Ident, PatKind, UnOp};\n use syntax::attr;\n use syntax::ptr::P;\n-use syntax::symbol::{kw, sym, Symbol};\n \n use rustc_span::{Pos, Span};\n "}, {"sha": "6eead11ccb7bad63bf698d7b844aab107e73f3ff", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -11,6 +11,7 @@ use rustc_parse::parser::Parser;\n use rustc_parse::validate_attr;\n use rustc_parse::DirectoryOwnership;\n use rustc_span::source_map::respan;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{FileName, Span, DUMMY_SP};\n use syntax::ast::{self, AttrItem, Block, Ident, LitKind, NodeId, PatKind, Path};\n use syntax::ast::{ItemKind, MacArgs, MacStmtStyle, StmtKind};\n@@ -20,7 +21,6 @@ use syntax::mut_visit::*;\n use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{sym, Symbol};\n use syntax::token;\n use syntax::tokenstream::{TokenStream, TokenTree};\n use syntax::util::map_in_place::MapInPlace;"}, {"sha": "992764ab6a41d9daa9c1c6b1610d2e67510421e0", "filename": "src/librustc_expand/mbe/macro_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fmbe%2Fmacro_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fmbe%2Fmacro_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_check.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -106,10 +106,10 @@\n //! bound.\n use crate::mbe::{KleeneToken, TokenTree};\n \n+use rustc_span::symbol::{kw, sym};\n use syntax::ast::NodeId;\n use syntax::early_buffered_lints::META_VARIABLE_MISUSE;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{kw, sym};\n use syntax::token::{DelimToken, Token, TokenKind};\n \n use rustc_data_structures::fx::FxHashMap;"}, {"sha": "c0e34a30c54e99d3195cd0eeee225aa3f5124206", "filename": "src/librustc_expand/mbe/macro_parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_parser.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -78,10 +78,10 @@ use crate::mbe::{self, TokenTree};\n \n use rustc_parse::parser::{FollowedByType, Parser, PathStyle};\n use rustc_parse::Directory;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use syntax::ast::{Ident, Name};\n use syntax::print::pprust;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::token::{self, DocComment, Nonterminal, Token};\n use syntax::tokenstream::TokenStream;\n "}, {"sha": "3c3f3a44db05c071c4ec53436f79c26eec3785ab", "filename": "src/librustc_expand/mbe/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fmacro_rules.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -12,13 +12,13 @@ use rustc_feature::Features;\n use rustc_parse::parser::Parser;\n use rustc_parse::Directory;\n use rustc_span::hygiene::Transparency;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n use syntax::ast;\n use syntax::attr::{self, TransparencyError};\n use syntax::edition::Edition;\n use syntax::print::pprust;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::token::{self, NtTT, Token, TokenKind::*};\n use syntax::tokenstream::{DelimSpan, TokenStream};\n "}, {"sha": "4a33c51d57396175efa65e0b139ca379d15c06ca", "filename": "src/librustc_expand/mbe/quoted.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fmbe%2Fquoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fmbe%2Fquoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fmbe%2Fquoted.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,10 +1,10 @@\n use crate::mbe::macro_parser;\n use crate::mbe::{Delimited, KleeneOp, KleeneToken, SequenceRepetition, TokenTree};\n \n+use rustc_span::symbol::kw;\n use syntax::ast;\n use syntax::print::pprust;\n use syntax::sess::ParseSess;\n-use syntax::symbol::kw;\n use syntax::token::{self, Token};\n use syntax::tokenstream;\n "}, {"sha": "25cd5dabe57ec3e45adb304a2e0baa0952cde513", "filename": "src/librustc_expand/parse/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fparse%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fparse%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fparse%2Ftests.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,12 +3,12 @@ use crate::tests::{matches_codepattern, string_to_stream, with_error_checking_pa\n use errors::PResult;\n use rustc_parse::new_parser_from_source_str;\n use rustc_span::source_map::FilePathMapping;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{BytePos, FileName, Pos, Span};\n use syntax::ast::{self, Name, PatKind};\n use syntax::print::pprust::item_to_string;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::token::{self, Token};\n use syntax::tokenstream::{DelimSpan, TokenStream, TokenTree};\n use syntax::visit;"}, {"sha": "25e2bbb34678e344ae26297e0a397b531fd50c75", "filename": "src/librustc_expand/proc_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_expand%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fproc_macro.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,9 +1,9 @@\n use crate::base::{self, *};\n use crate::proc_macro_server;\n \n+use rustc_span::symbol::sym;\n use syntax::ast::{self, ItemKind, MetaItemKind, NestedMetaItem};\n use syntax::errors::{Applicability, FatalError};\n-use syntax::symbol::sym;\n use syntax::token;\n use syntax::tokenstream::{self, TokenStream};\n "}, {"sha": "738dfa712311a4d080a66ea78b1133dac02a2d75", "filename": "src/librustc_incremental/assert_dep_graph.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_incremental%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_dep_graph.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -42,11 +42,13 @@ use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::implementation::{Direction, NodeIndex, INCOMING, OUTGOING};\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n+use syntax::ast;\n+\n use std::env;\n use std::fs::{self, File};\n use std::io::Write;\n-use syntax::{ast, symbol::sym};\n \n pub fn assert_dep_graph(tcx: TyCtxt<'_>) {\n     tcx.dep_graph.with_ignore(|| {"}, {"sha": "b6ce12cf90886e9d198bcc3183850ca704417b44", "filename": "src/librustc_incremental/assert_module_sources.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_module_sources.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -25,9 +25,9 @@ use rustc::hir::def_id::LOCAL_CRATE;\n use rustc::mir::mono::CodegenUnitNameBuilder;\n use rustc::ty::TyCtxt;\n use rustc_session::cgu_reuse_tracker::*;\n+use rustc_span::symbol::{sym, Symbol};\n use std::collections::BTreeSet;\n use syntax::ast;\n-use syntax::symbol::{sym, Symbol};\n \n pub fn assert_module_sources(tcx: TyCtxt<'_>) {\n     tcx.dep_graph.with_ignore(|| {"}, {"sha": "4d08ccebd696fdc43a6ed80a483808823574f3d3", "filename": "src/librustc_incremental/persist/dirty_clean.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fdirty_clean.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -23,11 +23,11 @@ use rustc::hir::{ImplItemKind, ItemKind as HirItem, TraitItemKind};\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashSet;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use std::iter::FromIterator;\n use std::vec::Vec;\n use syntax::ast::{self, Attribute, NestedMetaItem};\n-use syntax::symbol::{sym, Symbol};\n \n const EXCEPT: Symbol = sym::except;\n const LABEL: Symbol = sym::label;"}, {"sha": "dcf1763f857b4289a86611523bff33063c5b76a8", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -33,12 +33,12 @@ use rustc_passes::{self, ast_validation, hir_stats, layout_test};\n use rustc_plugin_impl as plugin;\n use rustc_privacy;\n use rustc_resolve::{Resolver, ResolverArenas};\n+use rustc_span::symbol::Symbol;\n use rustc_span::FileName;\n use rustc_traits;\n use rustc_typeck as typeck;\n use syntax::early_buffered_lints::BufferedEarlyLint;\n use syntax::mut_visit::MutVisitor;\n-use syntax::symbol::Symbol;\n use syntax::util::node_count::NodeCounter;\n use syntax::{self, ast, visit};\n "}, {"sha": "beb479046a5370c62236a698dcc909b6c5e0375e", "filename": "src/librustc_interface/proc_macro_decls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_interface%2Fproc_macro_decls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_interface%2Fproc_macro_decls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fproc_macro_decls.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,8 +3,8 @@ use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n+use rustc_span::symbol::sym;\n use syntax::attr;\n-use syntax::symbol::sym;\n \n pub fn find(tcx: TyCtxt<'_>) -> Option<DefId> {\n     tcx.proc_macro_decls_static(LOCAL_CRATE)"}, {"sha": "182b1e7861b127fe6b0ef1ee5fd875bbacf44e1d", "filename": "src/librustc_interface/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_interface%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_interface%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Ftests.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -12,13 +12,13 @@ use rustc::session::search_paths::SearchPath;\n use rustc::session::{build_session, Session};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{emitter::HumanReadableErrorType, registry, ColorConfig};\n+use rustc_span::symbol::sym;\n use rustc_target::spec::{MergeFunctions, PanicStrategy, RelroLevel};\n use std::collections::{BTreeMap, BTreeSet};\n use std::iter::FromIterator;\n use std::path::PathBuf;\n use syntax;\n use syntax::edition::{Edition, DEFAULT_EDITION};\n-use syntax::symbol::sym;\n \n type CfgSpecs = FxHashSet<(String, Option<String>)>;\n "}, {"sha": "c15dc2fe704b9aa21d98c603c997610946cbd421", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -16,6 +16,7 @@ use rustc_metadata::dynamic_lib::DynamicLibrary;\n use rustc_resolve::{self, Resolver};\n use rustc_span::edition::Edition;\n use rustc_span::source_map::{FileLoader, RealFileLoader, SourceMap};\n+use rustc_span::symbol::{sym, Symbol};\n use smallvec::SmallVec;\n use std::env;\n use std::io::{self, Write};\n@@ -28,7 +29,6 @@ use std::{panic, thread};\n use syntax::ast::{AttrVec, BlockCheckMode};\n use syntax::mut_visit::{visit_clobber, MutVisitor, *};\n use syntax::ptr::P;\n-use syntax::symbol::{sym, Symbol};\n use syntax::util::lev_distance::find_best_match_for_name;\n use syntax::{self, ast, attr};\n "}, {"sha": "6beedb08db5ecbbdf877f5e5c4a5f986ecdb0c37", "filename": "src/librustc_lint/array_into_iter.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_lint%2Farray_into_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_lint%2Farray_into_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Farray_into_iter.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -7,7 +7,8 @@ use rustc::{\n         adjustment::{Adjust, Adjustment},\n     },\n };\n-use syntax::{errors::Applicability, symbol::sym};\n+use rustc_span::symbol::sym;\n+use syntax::errors::Applicability;\n \n declare_lint! {\n     pub ARRAY_INTO_ITER,"}, {"sha": "f1e3951e14925eaa40ed482250a12df860713699", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -38,14 +38,14 @@ use rustc_feature::Stability;\n use rustc_feature::{deprecated_attributes, AttributeGate, AttributeTemplate, AttributeType};\n \n use rustc_span::source_map::Spanned;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{BytePos, Span};\n use syntax::ast::{self, Expr};\n use syntax::attr::{self, HasAttrs};\n use syntax::edition::Edition;\n use syntax::errors::{Applicability, DiagnosticBuilder};\n use syntax::print::pprust::{self, expr_to_string};\n use syntax::ptr::P;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::tokenstream::{TokenStream, TokenTree};\n use syntax::visit::FnKind;\n "}, {"sha": "a97061c50ae452db916bdae87228b70e44175d82", "filename": "src/librustc_lint/nonstandard_style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_lint%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_lint%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fnonstandard_style.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -5,12 +5,12 @@ use rustc::hir::intravisit::FnKind;\n use rustc::hir::{self, GenericParamKind, PatKind};\n use rustc::lint;\n use rustc::ty;\n+use rustc_span::symbol::sym;\n use rustc_span::{symbol::Ident, BytePos, Span};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::attr;\n use syntax::errors::Applicability;\n-use syntax::symbol::sym;\n \n #[derive(PartialEq)]\n pub enum MethodLateContext {"}, {"sha": "db2598d321acae5a43a6e62c7cd47eb2d6238f6e", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -10,13 +10,13 @@ use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_feature::{AttributeType, BuiltinAttribute, BUILTIN_ATTRIBUTE_MAP};\n \n+use rustc_span::symbol::Symbol;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::{BytePos, Span};\n use syntax::ast;\n use syntax::attr;\n use syntax::errors::{pluralize, Applicability};\n use syntax::print::pprust;\n-use syntax::symbol::Symbol;\n-use syntax::symbol::{kw, sym};\n use syntax::util::parser;\n \n use log::debug;"}, {"sha": "02c912ff7407e0f4a7c44e57a618290c0a7a9bb1", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -23,13 +23,13 @@ use std::{cmp, fs};\n use log::{debug, info, log_enabled};\n use proc_macro::bridge::client::ProcMacro;\n use rustc_expand::base::SyntaxExtension;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast;\n use syntax::attr;\n use syntax::edition::Edition;\n use syntax::expand::allocator::{global_allocator_spans, AllocatorKind};\n use syntax::span_fatal;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc_error_codes::*;\n "}, {"sha": "6649cf09a0735d253c587601a4899fd9d0478209", "filename": "src/librustc_metadata/link_args.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_metadata%2Flink_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_metadata%2Flink_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flink_args.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,8 +1,8 @@\n use rustc::hir;\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::ty::TyCtxt;\n+use rustc_span::symbol::sym;\n use rustc_target::spec::abi::Abi;\n-use syntax::symbol::sym;\n \n crate fn collect(tcx: TyCtxt<'_>) -> Vec<String> {\n     let mut collector = Collector { args: Vec::new() };"}, {"sha": "a9adb6291c74d668f2775621cf9035bfff948535", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -225,10 +225,10 @@ use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::MetadataRef;\n \n use errors::DiagnosticBuilder;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use rustc_target::spec::{Target, TargetTriple};\n use syntax::struct_span_err;\n-use syntax::symbol::{sym, Symbol};\n use syntax::{span_err, span_fatal};\n \n use std::cmp;"}, {"sha": "3228c9f2ff435820c70dcbc2357dbba4a6081d1d", "filename": "src/librustc_metadata/native_libs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_metadata%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_metadata%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fnative_libs.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -5,10 +5,10 @@ use rustc::session::Session;\n use rustc::ty::TyCtxt;\n use rustc::util::nodemap::FxHashSet;\n use rustc_span::source_map::Span;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_target::spec::abi::Abi;\n use syntax::attr;\n use syntax::feature_gate::feature_err;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::{span_err, struct_span_err};\n \n use rustc_error_codes::*;"}, {"sha": "00d5b4321cb7ec830fda989cb3c60522f8e46b1b", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -28,12 +28,12 @@ use std::sync::Arc;\n \n use rustc_span::source_map;\n use rustc_span::source_map::Spanned;\n+use rustc_span::symbol::Symbol;\n use rustc_span::{FileName, Span};\n use syntax::ast;\n use syntax::attr;\n use syntax::expand::allocator::AllocatorKind;\n use syntax::ptr::P;\n-use syntax::symbol::Symbol;\n use syntax::tokenstream::DelimSpan;\n \n macro_rules! provide {"}, {"sha": "6d84bd6f26369492c0d0766184103301e5e30789", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -26,6 +26,7 @@ use rustc_serialize::{opaque, Encodable, Encoder, SpecializedEncoder};\n \n use log::{debug, trace};\n use rustc_span::source_map::Spanned;\n+use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::{self, FileName, SourceFile, Span};\n use std::hash::Hash;\n use std::num::NonZeroUsize;\n@@ -34,7 +35,6 @@ use std::u32;\n use syntax::ast;\n use syntax::attr;\n use syntax::expand::is_proc_macro_attr;\n-use syntax::symbol::{kw, sym, Ident, Symbol};\n \n use rustc::hir::intravisit;\n use rustc::hir::intravisit::{NestedVisitorMap, Visitor};"}, {"sha": "66637cf97b5bfc3fa774c00ce5502dcbdea597d8", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -15,10 +15,10 @@ use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::MetadataRef;\n use rustc_index::vec::IndexVec;\n use rustc_serialize::opaque::Encoder;\n+use rustc_span::symbol::Symbol;\n use rustc_span::{self, Span};\n use rustc_target::spec::{PanicStrategy, TargetTriple};\n use syntax::edition::Edition;\n-use syntax::symbol::Symbol;\n use syntax::{ast, attr};\n \n use std::marker::PhantomData;"}, {"sha": "4661d64564c3d64e7066603253fecb9dec8c03fe", "filename": "src/librustc_mir/borrow_check/diagnostics/region_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -9,10 +9,10 @@ use rustc::mir::{Body, ConstraintCategory, Location};\n use rustc::ty::{self, RegionVid, Ty};\n use rustc_errors::DiagnosticBuilder;\n use rustc_index::vec::IndexVec;\n+use rustc_span::symbol::kw;\n use rustc_span::Span;\n use std::collections::VecDeque;\n use syntax::errors::Applicability;\n-use syntax::symbol::kw;\n \n use crate::util::borrowck_errors;\n "}, {"sha": "d66c38e753ac1d3ffa99ca9a97757a229f309f74", "filename": "src/librustc_mir/borrow_check/diagnostics/region_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -7,8 +7,8 @@ use rustc::ty::subst::{GenericArgKind, SubstsRef};\n use rustc::ty::{self, RegionVid, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::DiagnosticBuilder;\n+use rustc_span::symbol::kw;\n use rustc_span::{symbol::Symbol, Span, DUMMY_SP};\n-use syntax::symbol::kw;\n \n use crate::borrow_check::{\n     nll::ToRegionVid, region_infer::RegionInferenceContext, universal_regions::DefiningTy,"}, {"sha": "6f223785601fcfba362f6cf98c365314a42d31a7", "filename": "src/librustc_mir/borrow_check/nll.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -9,13 +9,13 @@ use rustc::mir::{\n use rustc::ty::{self, RegionKind, RegionVid};\n use rustc_errors::Diagnostic;\n use rustc_index::vec::IndexVec;\n+use rustc_span::symbol::sym;\n use std::env;\n use std::fmt::Debug;\n use std::io;\n use std::path::PathBuf;\n use std::rc::Rc;\n use std::str::FromStr;\n-use syntax::symbol::sym;\n \n use self::mir_util::PassWhere;\n use polonius_engine::{Algorithm, Output};"}, {"sha": "b265ab6b7becb268f2f42b7ba31de64fc7192794", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -14,12 +14,12 @@ use rustc::ty::subst::Subst;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::util::nodemap::HirIdMap;\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_span::symbol::kw;\n use rustc_span::Span;\n use rustc_target::spec::abi::Abi;\n use rustc_target::spec::PanicStrategy;\n use std::u32;\n use syntax::attr::{self, UnwindAttr};\n-use syntax::symbol::kw;\n \n use super::lints;\n "}, {"sha": "da2739fd0d6cde49d6a135f3dc3cc30443132b8f", "filename": "src/librustc_mir/dataflow/generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fdataflow%2Fgeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fdataflow%2Fgeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fgeneric.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -28,7 +28,7 @@ use rustc::ty::{self, TyCtxt};\n use rustc_data_structures::work_queue::WorkQueue;\n use rustc_index::bit_set::BitSet;\n use rustc_index::vec::{Idx, IndexVec};\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n \n use crate::dataflow::BottomValue;\n "}, {"sha": "e94f263348d8aafa4a049d4a49d2623a307bf2d4", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,6 +1,6 @@\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast::{self, MetaItem};\n use syntax::print::pprust;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc_data_structures::work_queue::WorkQueue;\n use rustc_index::bit_set::{BitSet, HybridBitSet};"}, {"sha": "e81dc9ba16d8359d893d61383f0a6e4430718f5a", "filename": "src/librustc_mir/hair/cx/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -16,9 +16,9 @@ use rustc::ty::subst::Subst;\n use rustc::ty::subst::{GenericArg, InternalSubsts};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc_index::vec::Idx;\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast;\n use syntax::attr;\n-use syntax::symbol::{sym, Symbol};\n \n #[derive(Clone)]\n pub struct Cx<'a, 'tcx> {"}, {"sha": "9461a066902128b1801409e54c30e4cafee495cb", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,8 +1,8 @@\n use rustc::ty::adjustment::PointerCast;\n use rustc::ty::layout::{self, Size, TyLayout};\n use rustc::ty::{self, Ty, TypeAndMut, TypeFoldable};\n+use rustc_span::symbol::sym;\n use syntax::ast::FloatTy;\n-use syntax::symbol::sym;\n \n use rustc::mir::interpret::{InterpResult, PointerArithmetic, Scalar};\n use rustc::mir::CastKind;"}, {"sha": "8011de19e78ed6986234bdf8bea3f736362ac918", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -107,7 +107,7 @@ use rustc::ty::query::Providers;\n use rustc::ty::{self, DefIdTree, InstanceDef, TyCtxt};\n use rustc::util::common::time;\n use rustc::util::nodemap::{DefIdSet, FxHashMap, FxHashSet};\n-use syntax::symbol::Symbol;\n+use rustc_span::symbol::Symbol;\n \n use crate::monomorphize::collector::InliningMap;\n use crate::monomorphize::collector::{self, MonoItemCollectionMode};"}, {"sha": "605281326f65a98e074186675f91668263f87edc", "filename": "src/librustc_mir/transform/check_consts/ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,9 +3,9 @@\n use rustc::hir::def_id::DefId;\n use rustc::session::config::nightly_options;\n use rustc::ty::TyCtxt;\n+use rustc_span::symbol::sym;\n use rustc_span::{Span, Symbol};\n use syntax::feature_gate::feature_err;\n-use syntax::symbol::sym;\n \n use super::{ConstKind, Item};\n "}, {"sha": "94b3b51f0b37912824bd4a675fd545eb15ca84ba", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -9,8 +9,8 @@ use rustc::ty::cast::CastTy;\n use rustc::ty::{self, TyCtxt};\n use rustc_error_codes::*;\n use rustc_index::bit_set::BitSet;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n-use syntax::symbol::sym;\n \n use std::borrow::Cow;\n use std::ops::Deref;"}, {"sha": "c637557344178b9fc9308dee04515aba57d50b8b", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -10,7 +10,7 @@ use rustc::ty::cast::CastTy;\n use rustc::ty::query::Providers;\n use rustc::ty::{self, TyCtxt};\n \n-use syntax::symbol::{sym, Symbol};\n+use rustc_span::symbol::{sym, Symbol};\n \n use std::ops::Bound;\n "}, {"sha": "819ed9a51e7bf1d4286eb3ed2a5faed15349e40c", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -19,9 +19,9 @@ use rustc::mir::*;\n use rustc::ty::cast::CastTy;\n use rustc::ty::subst::InternalSubsts;\n use rustc::ty::{self, List, TyCtxt, TypeFoldable};\n+use rustc_span::symbol::sym;\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::LitKind;\n-use syntax::symbol::sym;\n \n use rustc_index::vec::{Idx, IndexVec};\n use rustc_target::spec::abi::Abi;"}, {"sha": "3741ca17a1115be35ee6c15fce38a3489eb77b46", "filename": "src/librustc_mir/transform/qualify_min_const_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -2,10 +2,10 @@ use rustc::hir;\n use rustc::hir::def_id::DefId;\n use rustc::mir::*;\n use rustc::ty::{self, adjustment::PointerCast, Predicate, Ty, TyCtxt};\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use std::borrow::Cow;\n use syntax::attr;\n-use syntax::symbol::{sym, Symbol};\n \n type McfResult = Result<(), (Span, Cow<'static, str>)>;\n "}, {"sha": "394924f5d6a31b248b72c2916f439ea7548f1f2d", "filename": "src/librustc_mir/transform/rustc_peek.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,7 +1,7 @@\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n-use syntax::symbol::sym;\n \n use crate::transform::{MirPass, MirSource};\n use rustc::hir::def_id::DefId;"}, {"sha": "038c4284f252bf14dac87f24a9fdfc69ae257fa1", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -12,13 +12,13 @@ use rustc::session::Session;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_parse::validate_attr;\n use rustc_span::source_map::Spanned;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use std::mem;\n use syntax::ast::*;\n use syntax::attr;\n use syntax::expand::is_proc_macro_attr;\n use syntax::print::pprust;\n-use syntax::symbol::{kw, sym};\n use syntax::visit::{self, Visitor};\n use syntax::{span_err, struct_span_err, walk_list};\n "}, {"sha": "22f3533b1e4bc611077590c4078a294eecef2785", "filename": "src/librustc_passes/dead.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdead.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -18,7 +18,7 @@ use rustc::util::nodemap::FxHashSet;\n use rustc_data_structures::fx::FxHashMap;\n \n use rustc_span;\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n use syntax::{ast, attr};\n \n // Any local node that may call something in its body block should be"}, {"sha": "4e8b5c5f6b6531424ce4d2f5b7c80d8ebf8da4a8", "filename": "src/librustc_passes/diagnostic_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Fdiagnostic_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Fdiagnostic_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdiagnostic_items.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -16,8 +16,8 @@ use rustc::util::nodemap::FxHashMap;\n \n use rustc::hir;\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast;\n-use syntax::symbol::{sym, Symbol};\n \n struct DiagnosticItemCollector<'tcx> {\n     // items from this crate"}, {"sha": "3a7d1780d470df24d5e207617bac86ab440c49ca", "filename": "src/librustc_passes/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fentry.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -6,10 +6,10 @@ use rustc::session::config::EntryFnType;\n use rustc::session::{config, Session};\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::attr;\n use syntax::entry::EntryPointType;\n-use syntax::symbol::sym;\n \n use rustc_error_codes::*;\n "}, {"sha": "02eecc2998bb7c8a3dac69e29503c1e2ae361e19", "filename": "src/librustc_passes/layout_test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Flayout_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Flayout_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flayout_test.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -11,8 +11,8 @@ use rustc::ty::layout::TyLayout;\n use rustc::ty::ParamEnv;\n use rustc::ty::Ty;\n use rustc::ty::TyCtxt;\n+use rustc_span::symbol::sym;\n use syntax::ast::Attribute;\n-use syntax::symbol::sym;\n \n pub fn test_layout(tcx: TyCtxt<'_>) {\n     if tcx.features().rustc_attrs {"}, {"sha": "0d39ea85b50aaa2af595a3f70f2c24356a5ab501", "filename": "src/librustc_passes/lib_features.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Flib_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Flib_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib_features.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -9,9 +9,9 @@ use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::middle::lib_features::LibFeatures;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n+use rustc_span::symbol::Symbol;\n use rustc_span::{sym, Span};\n use syntax::ast::{Attribute, MetaItem, MetaItemKind};\n-use syntax::symbol::Symbol;\n \n use rustc_error_codes::*;\n "}, {"sha": "49664be9c7758332ae810930a8bb1a524a5dabb8", "filename": "src/librustc_passes/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fliveness.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -109,14 +109,14 @@ use rustc::util::nodemap::{HirIdMap, HirIdSet};\n \n use errors::Applicability;\n use rustc_data_structures::fx::FxIndexMap;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use std::collections::VecDeque;\n use std::io;\n use std::io::prelude::*;\n use std::rc::Rc;\n use std::{fmt, u32};\n use syntax::ast;\n-use syntax::symbol::sym;\n \n #[derive(Copy, Clone, PartialEq)]\n struct Variable(u32);"}, {"sha": "686ed6c1345bcc02dd064f3b119b4a9d383316a8", "filename": "src/librustc_passes/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_passes%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fstability.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -12,11 +12,11 @@ use rustc::session::Session;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n use syntax::ast::Attribute;\n use syntax::attr::{self, Stability};\n use syntax::feature_gate::feature_err;\n-use syntax::symbol::{sym, Symbol};\n \n use std::cmp::Ordering;\n use std::mem::replace;"}, {"sha": "2424ee5a9df006e55e0d170309258fba5428a952", "filename": "src/librustc_plugin_impl/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_plugin_impl%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_plugin_impl%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin_impl%2Fbuild.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -5,9 +5,9 @@ use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::attr;\n-use syntax::symbol::sym;\n \n struct RegistrarFinder {\n     registrars: Vec<(hir::HirId, Span)>,"}, {"sha": "2215e49ec977a9834fdb2545f7936e109f712969", "filename": "src/librustc_plugin_impl/load.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_plugin_impl%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_plugin_impl%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin_impl%2Fload.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -5,14 +5,14 @@ use rustc::middle::cstore::MetadataLoader;\n use rustc::session::Session;\n use rustc_metadata::locator;\n \n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use std::borrow::ToOwned;\n use std::env;\n use std::mem;\n use std::path::PathBuf;\n use syntax::ast::{Crate, Ident};\n use syntax::struct_span_err;\n-use syntax::symbol::sym;\n \n use rustc_error_codes::*;\n "}, {"sha": "c4b113d7a935caea3d7c93bf61ebb58e58fb3b7c", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -21,10 +21,10 @@ use rustc::ty::{self, GenericParamDefKind, TraitRef, Ty, TyCtxt, TypeFoldable};\n use rustc::util::nodemap::HirIdSet;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_span::hygiene::Transparency;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use syntax::ast::Ident;\n use syntax::attr;\n-use syntax::symbol::{kw, sym};\n \n use std::marker::PhantomData;\n use std::{cmp, fmt, mem};"}, {"sha": "5304aced69fbfc2afa2413d2331534d1800c717b", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -33,13 +33,13 @@ use rustc_expand::base::SyntaxExtension;\n use rustc_expand::expand::AstFragment;\n use rustc_span::hygiene::{ExpnId, MacroKind};\n use rustc_span::source_map::{respan, Spanned};\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, Block, ForeignItem, ForeignItemKind, Item, ItemKind, NodeId};\n use syntax::ast::{AssocItem, AssocItemKind, MetaItemKind, StmtKind};\n use syntax::ast::{Ident, Name};\n use syntax::attr;\n use syntax::span_err;\n-use syntax::symbol::{kw, sym};\n use syntax::token::{self, Token};\n use syntax::visit::{self, Visitor};\n "}, {"sha": "5aea813c6b86d15a8569f7c09dceb84d3a0298fe", "filename": "src/librustc_resolve/def_collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdef_collector.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,9 +3,9 @@ use rustc::hir::def_id::DefIndex;\n use rustc::hir::map::definitions::*;\n use rustc_expand::expand::AstFragment;\n use rustc_span::hygiene::ExpnId;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use syntax::ast::*;\n-use syntax::symbol::{kw, sym};\n use syntax::token::{self, Token};\n use syntax::visit;\n "}, {"sha": "c4538ddc2422627f98d538d5cb373f1622f3a875", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -12,11 +12,11 @@ use rustc::util::nodemap::FxHashSet;\n use rustc_feature::BUILTIN_ATTRIBUTES;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::SourceMap;\n+use rustc_span::symbol::{kw, Symbol};\n use rustc_span::{BytePos, MultiSpan, Span};\n use syntax::ast::{self, Ident, Path};\n use syntax::print::pprust;\n use syntax::struct_span_err;\n-use syntax::symbol::{kw, Symbol};\n use syntax::util::lev_distance::find_best_match_for_name;\n \n use crate::imports::{ImportDirective, ImportDirectiveSubclass, ImportResolver};"}, {"sha": "eb2c4f79feff53257597f707b8f9dc1d03ecfc6c", "filename": "src/librustc_resolve/imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fimports.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -24,9 +24,9 @@ use rustc::{bug, span_bug};\n use rustc_data_structures::ptr_key::PtrKey;\n \n use rustc_span::hygiene::ExpnId;\n+use rustc_span::symbol::kw;\n use rustc_span::{MultiSpan, Span};\n use syntax::ast::{Ident, Name, NodeId};\n-use syntax::symbol::kw;\n use syntax::util::lev_distance::find_best_match_for_name;\n use syntax::{struct_span_err, unwrap_or};\n "}, {"sha": "796c8e07c93ff5023a807bf960f1356e268225f1", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -18,11 +18,11 @@ use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX};\n use rustc::hir::TraitCandidate;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc::{bug, lint, span_bug};\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use smallvec::{smallvec, SmallVec};\n use syntax::ast::*;\n use syntax::ptr::P;\n-use syntax::symbol::{kw, sym};\n use syntax::util::lev_distance::find_best_match_for_name;\n use syntax::visit::{self, FnKind, Visitor};\n use syntax::{unwrap_or, walk_list};"}, {"sha": "2c9263eab9c69c267805afe713f8c4f66d06fdef", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -13,9 +13,9 @@ use rustc::hir::PrimTy;\n use rustc::session::config::nightly_options;\n use rustc::util::nodemap::FxHashSet;\n use rustc_span::hygiene::MacroKind;\n+use rustc_span::symbol::kw;\n use rustc_span::Span;\n use syntax::ast::{self, Expr, ExprKind, Ident, NodeId, Path, Ty, TyKind};\n-use syntax::symbol::kw;\n use syntax::util::lev_distance::find_best_match_for_name;\n \n use rustc_error_codes::*;"}, {"sha": "420e3d5c6de7a6b45c8e95ef30a46d599ac21c31", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -40,13 +40,13 @@ use errors::{Applicability, DiagnosticBuilder};\n use rustc_expand::base::SyntaxExtension;\n use rustc_span::hygiene::{ExpnId, ExpnKind, MacroKind, SyntaxContext, Transparency};\n use rustc_span::source_map::Spanned;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, FloatTy, Ident, IntTy, Name, NodeId, UintTy};\n use syntax::ast::{Crate, CRATE_NODE_ID};\n use syntax::ast::{ItemKind, Path};\n use syntax::attr;\n use syntax::print::pprust;\n-use syntax::symbol::{kw, sym};\n use syntax::visit::{self, Visitor};\n use syntax::{struct_span_err, unwrap_or};\n "}, {"sha": "e7d6cd2709d73a954d740eae433a45e424cb6626", "filename": "src/librustc_resolve/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_resolve%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flifetimes.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -15,13 +15,13 @@ use errors::{pluralize, Applicability, DiagnosticBuilder};\n use rustc::lint;\n use rustc::session::Session;\n use rustc::util::nodemap::{DefIdMap, FxHashMap, FxHashSet, HirIdMap, HirIdSet};\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::Span;\n use std::borrow::Cow;\n use std::cell::Cell;\n use std::mem::{replace, take};\n use syntax::ast;\n use syntax::attr;\n-use syntax::symbol::{kw, sym};\n \n use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::hir::{self, GenericParamKind, LifetimeParamKind};"}, {"sha": "d23c7013b5f87d8a890755797df8c7e19af356f9", "filename": "src/librustc_traits/lowering/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_traits%2Flowering%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_traits%2Flowering%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -12,8 +12,8 @@ use rustc::traits::{\n use rustc::ty::query::Providers;\n use rustc::ty::subst::{InternalSubsts, Subst};\n use rustc::ty::{self, List, TyCtxt};\n+use rustc_span::symbol::sym;\n use syntax::ast;\n-use syntax::symbol::sym;\n \n use std::iter;\n "}, {"sha": "609ce70057d0d4503e92b7036febf8ce7aa15e3a", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -22,13 +22,13 @@ use rustc::ty::subst::{self, InternalSubsts, Subst, SubstsRef};\n use rustc::ty::wf::object_region_bounds;\n use rustc::ty::{self, Const, DefIdTree, ToPredicate, Ty, TyCtxt, TypeFoldable};\n use rustc::ty::{GenericParamDef, GenericParamDefKind};\n+use rustc_span::symbol::sym;\n use rustc_span::{MultiSpan, Span, DUMMY_SP};\n use rustc_target::spec::abi;\n use smallvec::SmallVec;\n use syntax::ast;\n use syntax::errors::pluralize;\n use syntax::feature_gate::feature_err;\n-use syntax::symbol::sym;\n use syntax::util::lev_distance::find_best_match_for_name;\n \n use std::collections::BTreeSet;"}, {"sha": "f9cc86b85095cffc5e838a1d26bd6980dc1afe7e", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -66,11 +66,11 @@ use rustc::ty::relate::RelateResult;\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, Ty, TypeAndMut};\n use rustc_span;\n+use rustc_span::symbol::sym;\n use rustc_target::spec::abi::Abi;\n use smallvec::{smallvec, SmallVec};\n use std::ops::Deref;\n use syntax::feature_gate;\n-use syntax::symbol::sym;\n \n use rustc_error_codes::*;\n "}, {"sha": "773c9a26659921b5139b05143f3493bf0200af7c", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -33,8 +33,8 @@ use rustc::ty::TypeFoldable;\n use rustc::ty::{AdtKind, Visibility};\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::source_map::Span;\n+use rustc_span::symbol::{kw, sym, Symbol};\n use syntax::ast;\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::util::lev_distance::find_best_match_for_name;\n \n use rustc_error_codes::*;"}, {"sha": "ce8edd70eb6849b88a4a69f7e039d03ea6f0db2a", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -6,8 +6,8 @@ use rustc::traits::{ObligationCause, ObligationCauseCode};\n use rustc::ty::subst::Subst;\n use rustc::ty::{self, Ty, TyCtxt};\n \n+use rustc_span::symbol::Symbol;\n use rustc_target::spec::abi::Abi;\n-use syntax::symbol::Symbol;\n \n use rustc::hir;\n "}, {"sha": "43e0134ceda400bd83e9d5ba2eceed8444c8d755", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -120,12 +120,12 @@ use rustc::ty::{\n use rustc_index::vec::Idx;\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::source_map::{original_sp, DUMMY_SP};\n+use rustc_span::symbol::{kw, sym, Ident};\n use rustc_span::{self, BytePos, MultiSpan, Span};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::attr;\n use syntax::feature_gate::feature_err;\n-use syntax::symbol::{kw, sym, Ident};\n use syntax::util::parser::ExprPrecedence;\n \n use rustc_error_codes::*;"}, {"sha": "e0ce95aa46b8b66c642aa55045340adc3a734f18", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -10,10 +10,10 @@ use rustc::ty::{self, GenericParamDefKind, ToPredicate, Ty, TyCtxt, TypeFoldable\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n \n use errors::DiagnosticBuilder;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast;\n use syntax::feature_gate;\n-use syntax::symbol::sym;\n \n use rustc::hir;\n use rustc::hir::itemlikevisit::ParItemLikeVisitor;"}, {"sha": "ecf5aa576f54df0efe6ea3ff1197e6c70b0ed548", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -14,8 +14,8 @@ use rustc::ty::fold::{TypeFoldable, TypeFolder};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::util::nodemap::DefIdSet;\n use rustc_data_structures::sync::Lrc;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n-use syntax::symbol::sym;\n \n use std::mem;\n "}, {"sha": "d13ddb28bf937c601508db43666a0bc010083391", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -32,12 +32,12 @@ use rustc::util::captures::Captures;\n use rustc::util::nodemap::FxHashMap;\n use rustc_target::spec::abi;\n \n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast;\n use syntax::ast::{Ident, MetaItemKind};\n use syntax::attr::{list_contains_name, mark_used, InlineAttr, OptimizeAttr};\n use syntax::feature_gate;\n-use syntax::symbol::{kw, sym, Symbol};\n \n use rustc::hir::def::{CtorKind, DefKind, Res};\n use rustc::hir::def_id::{DefId, LOCAL_CRATE};"}, {"sha": "992781e3bcbeb05906206c22781cb39282158d5b", "filename": "src/librustc_typeck/outlives/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Foutlives%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Foutlives%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Foutlives%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -4,8 +4,8 @@ use rustc::hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc::ty::query::Providers;\n use rustc::ty::subst::GenericArgKind;\n use rustc::ty::{self, CratePredicatesMap, TyCtxt};\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n-use syntax::symbol::sym;\n \n mod explicit;\n mod implicit_infer;"}, {"sha": "f29d2d8f42448c1206716e2d9bc5f054dead4830", "filename": "src/librustc_typeck/outlives/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Foutlives%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Foutlives%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Foutlives%2Ftest.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,7 +1,7 @@\n use rustc::hir;\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::ty::TyCtxt;\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n \n use rustc_error_codes::*;\n "}, {"sha": "69e05772906e0d5632ddba93352917f86edea512", "filename": "src/librustc_typeck/variance/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,7 +1,7 @@\n use rustc::hir;\n use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::ty::TyCtxt;\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n \n use rustc_error_codes::*;\n "}, {"sha": "13df1892a5f1776305a98e2970613410be8bdc07", "filename": "src/librustdoc/clean/cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fcfg.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -8,9 +8,9 @@ use std::mem;\n use std::ops;\n \n use rustc_feature::Features;\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast::{LitKind, MetaItem, MetaItemKind, NestedMetaItem};\n use syntax::sess::ParseSess;\n-use syntax::symbol::{sym, Symbol};\n \n use rustc_span::Span;\n "}, {"sha": "309f72040615d162d5616050a1e9e1a859df6a41", "filename": "src/librustdoc/clean/cfg/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fclean%2Fcfg%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fclean%2Fcfg%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fcfg%2Ftests.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,9 +1,9 @@\n use super::*;\n \n+use rustc_span::symbol::Symbol;\n use rustc_span::DUMMY_SP;\n use syntax::ast::*;\n use syntax::attr;\n-use syntax::symbol::Symbol;\n use syntax::with_default_globals;\n \n fn word_cfg(s: &str) -> Cfg {"}, {"sha": "57ec985285d593e1181f3690822883520dae4149", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,9 +3,9 @@\n use std::iter::once;\n \n use rustc_span::hygiene::MacroKind;\n+use rustc_span::symbol::sym;\n use rustc_span::Span;\n use syntax::ast;\n-use syntax::symbol::sym;\n \n use rustc::hir::def::{CtorKind, DefKind, Res};\n use rustc::hir::def_id::DefId;"}, {"sha": "cb22039327e070a8e263252b05347e501f4006e2", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -18,10 +18,10 @@ use rustc_resolve as resolve;\n use errors::emitter::{Emitter, EmitterWriter};\n use errors::json::JsonEmitter;\n use rustc_span::source_map;\n+use rustc_span::symbol::sym;\n use rustc_span::DUMMY_SP;\n use syntax::ast::CRATE_NODE_ID;\n use syntax::attr;\n-use syntax::symbol::sym;\n \n use rustc_data_structures::sync::{self, Lrc};\n use std::cell::RefCell;"}, {"sha": "fb6bdcdc9f48bc3b1c0121b5ef13f65e55629c9d", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -13,9 +13,9 @@ use std::io::prelude::*;\n \n use rustc_parse::lexer;\n use rustc_span::source_map::SourceMap;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::{FileName, Span};\n use syntax::sess::ParseSess;\n-use syntax::symbol::{kw, sym};\n use syntax::token::{self, Token};\n \n /// Highlights `src`, returning the HTML output."}, {"sha": "4758e48241f1cac68a0e4d1424b6e8c72371fb7e", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -52,12 +52,12 @@ use rustc_data_structures::flock;\n use rustc_feature::UnstableFeatures;\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::FileName;\n+use rustc_span::symbol::{sym, Symbol};\n use serde::ser::SerializeSeq;\n use serde::{Serialize, Serializer};\n use syntax::ast;\n use syntax::edition::Edition;\n use syntax::print::pprust;\n-use syntax::symbol::{sym, Symbol};\n \n use crate::clean::{self, AttributesExt, Deprecation, GetDefId, SelfTy};\n use crate::config::RenderOptions;"}, {"sha": "6de56ec5127eda03936e6a6192781c4a5d9eb698", "filename": "src/librustdoc/html/render/cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -4,10 +4,10 @@ use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX};\n use rustc::middle::privacy::AccessLevels;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_span::source_map::FileName;\n+use rustc_span::symbol::sym;\n use std::collections::BTreeMap;\n use std::mem;\n use std::path::{Path, PathBuf};\n-use syntax::symbol::sym;\n \n use serde::Serialize;\n "}, {"sha": "803bcc2cfdf862ac6b9f5d8a024c0dba3d93573d", "filename": "src/librustdoc/passes/calculate_doc_coverage.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcalculate_doc_coverage.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,9 +3,9 @@ use crate::core::DocContext;\n use crate::fold::{self, DocFolder};\n use crate::passes::Pass;\n \n+use rustc_span::symbol::sym;\n use rustc_span::FileName;\n use syntax::attr;\n-use syntax::symbol::sym;\n \n use std::collections::BTreeMap;\n use std::ops;"}, {"sha": "a8bb40a06b9893ed6650cc67451e2f129c61a6f9", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -11,10 +11,10 @@ use rustc::ty;\n use rustc_expand::base::SyntaxExtensionKind;\n use rustc_feature::UnstableFeatures;\n use rustc_resolve::ParentScope;\n+use rustc_span::symbol::Symbol;\n use rustc_span::DUMMY_SP;\n use syntax;\n use syntax::ast::{self, Ident};\n-use syntax::symbol::Symbol;\n \n use std::ops::Range;\n "}, {"sha": "63ad9a66a482d362567eed33cb26f9ae32f9bd09", "filename": "src/librustdoc/passes/collect_trait_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -5,7 +5,7 @@ use crate::fold::DocFolder;\n \n use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::util::nodemap::FxHashSet;\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n \n pub const COLLECT_TRAIT_IMPLS: Pass = Pass {\n     name: \"collect-trait-impls\","}, {"sha": "9698ad1d2312d8a21d78a35cb7f0c7c219e24fcc", "filename": "src/librustdoc/passes/strip_hidden.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_hidden.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,6 +1,6 @@\n use rustc::util::nodemap::DefIdSet;\n+use rustc_span::symbol::sym;\n use std::mem;\n-use syntax::symbol::sym;\n \n use crate::clean::Item;\n use crate::clean::{self, AttributesExt, NestedAttributesExt};"}, {"sha": "af06effa77daac7203587864ed706d1a40847d02", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -6,6 +6,7 @@ use rustc_data_structures::sync::Lrc;\n use rustc_feature::UnstableFeatures;\n use rustc_interface::interface;\n use rustc_span::source_map::SourceMap;\n+use rustc_span::symbol::sym;\n use rustc_span::{BytePos, FileName, Pos, Span, DUMMY_SP};\n use rustc_target::spec::TargetTriple;\n use std::env;\n@@ -16,7 +17,6 @@ use std::process::{self, Command, Stdio};\n use std::str;\n use syntax::ast;\n use syntax::edition::Edition;\n-use syntax::symbol::sym;\n use syntax::with_globals;\n use tempfile::Builder as TempFileBuilder;\n use testing;"}, {"sha": "959f61644d60d711be5a22d3c7f55cca2a6583ee", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -9,9 +9,9 @@ use rustc::ty::TyCtxt;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_span::hygiene::MacroKind;\n use rustc_span::source_map::Spanned;\n+use rustc_span::symbol::sym;\n use rustc_span::{self, Span};\n use syntax::ast;\n-use syntax::symbol::sym;\n \n use std::mem;\n "}, {"sha": "f8f82e17e8f4c4102d3a7a21b747a0e44ec88ad6", "filename": "src/librustdoc/visit_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fvisit_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibrustdoc%2Fvisit_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_lib.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,7 +3,7 @@ use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX};\n use rustc::middle::privacy::{AccessLevel, AccessLevels};\n use rustc::ty::{TyCtxt, Visibility};\n use rustc::util::nodemap::FxHashSet;\n-use syntax::symbol::sym;\n+use rustc_span::symbol::sym;\n \n use crate::clean::{AttributesExt, NestedAttributesExt};\n "}, {"sha": "8449b61f7b0bbb61afb1e1bf34f8cd68cea85e66", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -14,15 +14,15 @@ use crate::ast::{Expr, GenericParam, Item, Lit, LitKind, Local, Stmt, StmtKind};\n use crate::ast::{MacArgs, MacDelimiter, MetaItem, MetaItemKind, NestedMetaItem};\n use crate::mut_visit::visit_clobber;\n use crate::ptr::P;\n-use crate::symbol::{sym, Symbol};\n use crate::token::{self, Token};\n use crate::tokenstream::{DelimSpan, TokenStream, TokenTree, TreeAndJoint};\n use crate::GLOBALS;\n \n-use log::debug;\n use rustc_span::source_map::{BytePos, Spanned};\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::Span;\n \n+use log::debug;\n use std::iter;\n use std::ops::DerefMut;\n "}, {"sha": "0a72019bfe986af738da8b1932e2629818da9e52", "filename": "src/libsyntax/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fentry.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,6 +1,6 @@\n use crate::ast::{Item, ItemKind};\n use crate::attr;\n-use crate::symbol::sym;\n+use rustc_span::symbol::sym;\n \n pub enum EntryPointType {\n     None,"}, {"sha": "4ccec421483b0867ae3db0d8a30851c7b036215d", "filename": "src/libsyntax/feature_gate/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -3,7 +3,6 @@ use crate::ast::{GenericParam, GenericParamKind, PatKind, RangeEnd, VariantData}\n use crate::attr;\n use crate::edition::{Edition, ALL_EDITIONS};\n use crate::sess::ParseSess;\n-use crate::symbol::{sym, Symbol};\n use crate::visit::{self, FnKind, Visitor};\n \n use errors::{Applicability, DiagnosticBuilder, Handler};\n@@ -16,6 +15,7 @@ use rustc_feature::{\n     ACCEPTED_FEATURES, ACTIVE_FEATURES, REMOVED_FEATURES, STABLE_REMOVED_FEATURES,\n };\n use rustc_span::source_map::Spanned;\n+use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{MultiSpan, Span, DUMMY_SP};\n \n use log::debug;"}, {"sha": "3815aa6d77459ad18e91edb278330fa48bcf3236", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -97,7 +97,6 @@ pub mod ptr;\n pub mod show_span;\n pub use rustc_session::parse as sess;\n pub use rustc_span::edition;\n-pub use rustc_span::symbol;\n pub mod token;\n pub mod tokenstream;\n pub mod visit;"}, {"sha": "dd9976510dccfff68bb85ea7520dab2fb276d830", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -6,14 +6,14 @@ use crate::print::pp::Breaks::{Consistent, Inconsistent};\n use crate::print::pp::{self, Breaks};\n use crate::ptr::P;\n use crate::sess::ParseSess;\n-use crate::symbol::{kw, sym};\n use crate::token::{self, BinOpToken, DelimToken, Nonterminal, Token, TokenKind};\n use crate::tokenstream::{self, TokenStream, TokenTree};\n use crate::util::classify;\n use crate::util::comments;\n use crate::util::parser::{self, AssocOp, Fixity};\n \n use rustc_span::source_map::{dummy_spanned, SourceMap, Spanned};\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::{BytePos, FileName, Span};\n \n use std::borrow::Cow;"}, {"sha": "14279561cbb8de0fcb41ee095cf7374bb7c50fbd", "filename": "src/libsyntax/token.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftoken.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -6,15 +6,14 @@ pub use TokenKind::*;\n \n use crate::ast;\n use crate::ptr::P;\n-use crate::symbol::kw;\n use crate::tokenstream::TokenTree;\n \n-use rustc_span::symbol::Symbol;\n-use rustc_span::{self, Span, DUMMY_SP};\n-\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::Lrc;\n use rustc_macros::HashStable_Generic;\n+use rustc_span::symbol::kw;\n+use rustc_span::symbol::Symbol;\n+use rustc_span::{self, Span, DUMMY_SP};\n use std::fmt;\n use std::mem;\n "}, {"sha": "fc697026fe4f8352a81d0fc0441e46a30abfa3b5", "filename": "src/libsyntax/util/lev_distance.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Futil%2Flev_distance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Futil%2Flev_distance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Flev_distance.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,4 +1,6 @@\n-use crate::symbol::Symbol;\n+// FIXME(Centril): Move to rustc_span?\n+\n+use rustc_span::symbol::Symbol;\n use std::cmp;\n \n #[cfg(test)]"}, {"sha": "dd06c25b4de0f61533be3267661e164eab96bcb4", "filename": "src/libsyntax/util/literal.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Futil%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Futil%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fliteral.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,17 +1,17 @@\n //! Code related to parsing literals.\n \n use crate::ast::{self, Lit, LitKind};\n-use crate::symbol::{kw, sym, Symbol};\n use crate::token::{self, Token};\n use crate::tokenstream::TokenTree;\n \n-use log::debug;\n use rustc_data_structures::sync::Lrc;\n use rustc_lexer::unescape::{unescape_byte, unescape_char};\n use rustc_lexer::unescape::{unescape_byte_str, unescape_str};\n use rustc_lexer::unescape::{unescape_raw_byte_str, unescape_raw_str};\n+use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n \n+use log::debug;\n use std::ascii;\n \n pub enum LitError {"}, {"sha": "a0ed89a9caef17f04e0181bca05b176774b0e65e", "filename": "src/libsyntax/util/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Futil%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8/src%2Flibsyntax%2Futil%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fparser.rs?ref=4ff12ce4c14d348dfe53d1f74ab53c878f4fb4f8", "patch": "@@ -1,6 +1,6 @@\n use crate::ast::{self, BinOpKind};\n-use crate::symbol::kw;\n use crate::token::{self, BinOpToken, Token};\n+use rustc_span::symbol::kw;\n \n /// Associative operator with precedence.\n ///"}]}