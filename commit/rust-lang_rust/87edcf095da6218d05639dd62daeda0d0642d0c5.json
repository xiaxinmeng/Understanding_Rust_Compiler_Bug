{"sha": "87edcf095da6218d05639dd62daeda0d0642d0c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZWRjZjA5NWRhNjIxOGQwNTYzOWRkNjJkYWVkYTBkMDY0MmQwYzU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-06T07:45:50Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-06T09:06:11Z"}, "message": "improve a comment", "tree": {"sha": "929b275a7a895b9bad96012f884562d751924013", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/929b275a7a895b9bad96012f884562d751924013"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87edcf095da6218d05639dd62daeda0d0642d0c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87edcf095da6218d05639dd62daeda0d0642d0c5", "html_url": "https://github.com/rust-lang/rust/commit/87edcf095da6218d05639dd62daeda0d0642d0c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87edcf095da6218d05639dd62daeda0d0642d0c5/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32453ce488909ec12b893ceb9a204718eae724e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/32453ce488909ec12b893ceb9a204718eae724e4", "html_url": "https://github.com/rust-lang/rust/commit/32453ce488909ec12b893ceb9a204718eae724e4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8cb2f6c3462cc94083b5a342de4304805db95a29", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87edcf095da6218d05639dd62daeda0d0642d0c5/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87edcf095da6218d05639dd62daeda0d0642d0c5/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=87edcf095da6218d05639dd62daeda0d0642d0c5", "patch": "@@ -613,7 +613,7 @@ impl<'rt, 'mir, 'tcx, M: Machine<'mir, 'tcx>> ValueVisitor<'mir, 'tcx, M>\n                 // reject it.  However, that's good: We don't inherently want\n                 // to reject those pointers, we just do not have the machinery to\n                 // talk about parts of a pointer.\n-                // We also accept undef, for consistency with the type-based checks.\n+                // We also accept undef, for consistency with the slow path.\n                 match self.ecx.memory.get(ptr.alloc_id)?.check_bytes(\n                     self.ecx,\n                     ptr,"}]}