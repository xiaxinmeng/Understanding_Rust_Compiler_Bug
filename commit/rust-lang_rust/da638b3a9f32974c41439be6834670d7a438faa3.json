{"sha": "da638b3a9f32974c41439be6834670d7a438faa3", "node_id": "C_kwDOAAsO6NoAKGRhNjM4YjNhOWYzMjk3NGM0MTQzOWJlNjgzNDY3MGQ3YTQzOGZhYTM", "commit": {"author": {"name": "Andrew Brown", "email": "andrew.brown@intel.com", "date": "2022-09-27T18:50:47Z"}, "committer": {"name": "Andrew Brown", "email": "andrew.brown@intel.com", "date": "2022-10-10T15:58:09Z"}, "message": "Allow compiling the `wasm32-wasi` std library with atomics\n\nThe issue #102157 demonstrates how currently the `-Z build-std` option\nwill fail when re-compiling the standard library with `RUSTFLAGS` like\n`RUSTFLAGS=\"-C target-feature=+atomics,+bulk-memory -C\nlink-args=--shared-memory\"`. This change attempts to resolve those build\nissues by depending on the the WebAssembly `futex` module and providing\nan implementation for `env_lock`. Fixes #102157.", "tree": {"sha": "30d3db182d897ff5e4dda828221f4dda91c27253", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30d3db182d897ff5e4dda828221f4dda91c27253"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da638b3a9f32974c41439be6834670d7a438faa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da638b3a9f32974c41439be6834670d7a438faa3", "html_url": "https://github.com/rust-lang/rust/commit/da638b3a9f32974c41439be6834670d7a438faa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da638b3a9f32974c41439be6834670d7a438faa3/comments", "author": {"login": "abrown", "id": 541880, "node_id": "MDQ6VXNlcjU0MTg4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/541880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abrown", "html_url": "https://github.com/abrown", "followers_url": "https://api.github.com/users/abrown/followers", "following_url": "https://api.github.com/users/abrown/following{/other_user}", "gists_url": "https://api.github.com/users/abrown/gists{/gist_id}", "starred_url": "https://api.github.com/users/abrown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abrown/subscriptions", "organizations_url": "https://api.github.com/users/abrown/orgs", "repos_url": "https://api.github.com/users/abrown/repos", "events_url": "https://api.github.com/users/abrown/events{/privacy}", "received_events_url": "https://api.github.com/users/abrown/received_events", "type": "User", "site_admin": false}, "committer": {"login": "abrown", "id": 541880, "node_id": "MDQ6VXNlcjU0MTg4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/541880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abrown", "html_url": "https://github.com/abrown", "followers_url": "https://api.github.com/users/abrown/followers", "following_url": "https://api.github.com/users/abrown/following{/other_user}", "gists_url": "https://api.github.com/users/abrown/gists{/gist_id}", "starred_url": "https://api.github.com/users/abrown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abrown/subscriptions", "organizations_url": "https://api.github.com/users/abrown/orgs", "repos_url": "https://api.github.com/users/abrown/repos", "events_url": "https://api.github.com/users/abrown/events{/privacy}", "received_events_url": "https://api.github.com/users/abrown/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0265a3e93bf1b89d97cae113ed214954d5c35e22", "url": "https://api.github.com/repos/rust-lang/rust/commits/0265a3e93bf1b89d97cae113ed214954d5c35e22", "html_url": "https://github.com/rust-lang/rust/commit/0265a3e93bf1b89d97cae113ed214954d5c35e22"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "c8c47763a340b30299e61d6fa4a358b82759c678", "filename": "library/std/src/sys/wasi/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da638b3a9f32974c41439be6834670d7a438faa3/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da638b3a9f32974c41439be6834670d7a438faa3/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fmod.rs?ref=da638b3a9f32974c41439be6834670d7a438faa3", "patch": "@@ -25,6 +25,9 @@ pub mod cmath;\n pub mod env;\n pub mod fd;\n pub mod fs;\n+#[allow(unused)]\n+#[path = \"../wasm/atomics/futex.rs\"]\n+pub mod futex;\n pub mod io;\n #[path = \"../unsupported/locks/mod.rs\"]\n pub mod locks;"}, {"sha": "b340061cb3d1023dc69fbf96a1f47e1f1628a0bb", "filename": "library/std/src/sys/wasi/os.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/da638b3a9f32974c41439be6834670d7a438faa3/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da638b3a9f32974c41439be6834670d7a438faa3/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Fos.rs?ref=da638b3a9f32974c41439be6834670d7a438faa3", "patch": "@@ -24,10 +24,15 @@ mod libc {\n     }\n }\n \n-#[cfg(not(target_feature = \"atomics\"))]\n pub unsafe fn env_lock() -> impl Any {\n-    // No need for a lock if we're single-threaded, but this function will need\n-    // to get implemented for multi-threaded scenarios\n+    cfg_if::cfg_if! {\n+        if #[cfg(target_feature = \"atomics\")] {\n+            todo!()\n+        } else {\n+            // No need for a lock if we're single-threaded, but this function will need\n+            // to get implemented for multi-threaded scenarios\n+        }\n+    }\n }\n \n pub fn errno() -> i32 {"}]}