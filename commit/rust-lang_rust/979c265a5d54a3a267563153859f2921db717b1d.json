{"sha": "979c265a5d54a3a267563153859f2921db717b1d", "node_id": "C_kwDOAAsO6NoAKDk3OWMyNjVhNWQ1NGEzYTI2NzU2MzE1Mzg1OWYyOTIxZGI3MTdiMWQ", "commit": {"author": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-03-29T15:00:48Z"}, "committer": {"name": "clubby789", "email": "jamie@hill-daniel.co.uk", "date": "2023-03-29T17:34:29Z"}, "message": "Check for escape sequences in Fluent resources", "tree": {"sha": "55b18173fda48f3fb4951ef18fe6447f5ba28ce9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55b18173fda48f3fb4951ef18fe6447f5ba28ce9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/979c265a5d54a3a267563153859f2921db717b1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/979c265a5d54a3a267563153859f2921db717b1d", "html_url": "https://github.com/rust-lang/rust/commit/979c265a5d54a3a267563153859f2921db717b1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/979c265a5d54a3a267563153859f2921db717b1d/comments", "author": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clubby789", "id": 13556931, "node_id": "MDQ6VXNlcjEzNTU2OTMx", "avatar_url": "https://avatars.githubusercontent.com/u/13556931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clubby789", "html_url": "https://github.com/clubby789", "followers_url": "https://api.github.com/users/clubby789/followers", "following_url": "https://api.github.com/users/clubby789/following{/other_user}", "gists_url": "https://api.github.com/users/clubby789/gists{/gist_id}", "starred_url": "https://api.github.com/users/clubby789/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clubby789/subscriptions", "organizations_url": "https://api.github.com/users/clubby789/orgs", "repos_url": "https://api.github.com/users/clubby789/repos", "events_url": "https://api.github.com/users/clubby789/events{/privacy}", "received_events_url": "https://api.github.com/users/clubby789/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf57e8ada6dc62369d1cee7ab055fb4074bd2d10", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf57e8ada6dc62369d1cee7ab055fb4074bd2d10", "html_url": "https://github.com/rust-lang/rust/commit/bf57e8ada6dc62369d1cee7ab055fb4074bd2d10"}], "stats": {"total": 73, "additions": 64, "deletions": 9}, "files": [{"sha": "b6d7484bccefd7eb8cc0bb8fe35cdcc646f0d663", "filename": "compiler/rustc_codegen_llvm/messages.ftl", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/979c265a5d54a3a267563153859f2921db717b1d/compiler%2Frustc_codegen_llvm%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/979c265a5d54a3a267563153859f2921db717b1d/compiler%2Frustc_codegen_llvm%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fmessages.ftl?ref=979c265a5d54a3a267563153859f2921db717b1d", "patch": "@@ -27,7 +27,8 @@ codegen_llvm_error_calling_dlltool =\n     Error calling dlltool: {$error}\n \n codegen_llvm_dlltool_fail_import_library =\n-    Dlltool could not create import library: {$stdout}\\n{$stderr}\n+    Dlltool could not create import library: {$stdout}\n+    {$stderr}\n \n codegen_llvm_target_feature_disable_or_enable =\n     the target features {$features} must all be either enabled or disabled together"}, {"sha": "f6751df443f7ae57eefcafdbde66eee6f34f8f08", "filename": "compiler/rustc_const_eval/messages.ftl", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/979c265a5d54a3a267563153859f2921db717b1d/compiler%2Frustc_const_eval%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/979c265a5d54a3a267563153859f2921db717b1d/compiler%2Frustc_const_eval%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fmessages.ftl?ref=979c265a5d54a3a267563153859f2921db717b1d", "patch": "@@ -39,17 +39,25 @@ const_eval_unstable_const_fn = `{$def_path}` is not yet stable as a const fn\n const_eval_unallowed_mutable_refs =\n     mutable references are not allowed in the final value of {$kind}s\n     .teach_note =\n-        References in statics and constants may only refer to immutable values.\\n\\n\n+        References in statics and constants may only refer to immutable values.\n+\n+\n         Statics are shared everywhere, and if they refer to mutable data one might violate memory\n-        safety since holding multiple mutable references to shared data is not allowed.\\n\\n\n+        safety since holding multiple mutable references to shared data is not allowed.\n+\n+\n         If you really want global mutable state, try using static mut or a global UnsafeCell.\n \n const_eval_unallowed_mutable_refs_raw =\n     raw mutable references are not allowed in the final value of {$kind}s\n     .teach_note =\n-        References in statics and constants may only refer to immutable values.\\n\\n\n+        References in statics and constants may only refer to immutable values.\n+\n+\n         Statics are shared everywhere, and if they refer to mutable data one might violate memory\n-        safety since holding multiple mutable references to shared data is not allowed.\\n\\n\n+        safety since holding multiple mutable references to shared data is not allowed.\n+\n+\n         If you really want global mutable state, try using static mut or a global UnsafeCell.\n \n const_eval_non_const_fmt_macro_call ="}, {"sha": "b760620e3d48b0bba6d547f043ac774ecc81f5f1", "filename": "compiler/rustc_incremental/messages.ftl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/979c265a5d54a3a267563153859f2921db717b1d/compiler%2Frustc_incremental%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/979c265a5d54a3a267563153859f2921db717b1d/compiler%2Frustc_incremental%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fmessages.ftl?ref=979c265a5d54a3a267563153859f2921db717b1d", "patch": "@@ -24,7 +24,7 @@ incremental_field_associated_value_expected = associated value expected for `{$n\n incremental_no_field = no field `{$name}`\n \n incremental_assertion_auto =\n-    `except` specified DepNodes that can not be affected for \\\"{$name}\\\": \\\"{$e}\\\"\n+    `except` specified DepNodes that can not be affected for \"{$name}\": \"{$e}\"\n \n incremental_undefined_clean_dirty_assertions_item =\n     clean/dirty auto-assertions not yet defined for Node::Item.node={$kind}"}, {"sha": "02af8ca54e402c7c75b6687085e4bf6c65e8416c", "filename": "compiler/rustc_lint/messages.ftl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/979c265a5d54a3a267563153859f2921db717b1d/compiler%2Frustc_lint%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/979c265a5d54a3a267563153859f2921db717b1d/compiler%2Frustc_lint%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fmessages.ftl?ref=979c265a5d54a3a267563153859f2921db717b1d", "patch": "@@ -91,7 +91,7 @@ lint_ty_qualified = usage of qualified `ty::{$ty}`\n lint_lintpass_by_hand = implementing `LintPass` by hand\n     .help = try using `declare_lint_pass!` or `impl_lint_pass!` instead\n \n-lint_non_existant_doc_keyword = found non-existing keyword `{$keyword}` used in `#[doc(keyword = \\\"...\\\")]`\n+lint_non_existant_doc_keyword = found non-existing keyword `{$keyword}` used in `#[doc(keyword = \"...\")]`\n     .help = only existing keywords are allowed in core/std\n \n lint_diag_out_of_impl ="}, {"sha": "3b2f5cfdc73161759279cc5f813741963f46f0e0", "filename": "compiler/rustc_macros/src/diagnostics/fluent.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/979c265a5d54a3a267563153859f2921db717b1d/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Ffluent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/979c265a5d54a3a267563153859f2921db717b1d/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Ffluent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Ffluent.rs?ref=979c265a5d54a3a267563153859f2921db717b1d", "patch": "@@ -111,6 +111,18 @@ pub(crate) fn fluent_messages(input: proc_macro::TokenStream) -> proc_macro::Tok\n             .emit();\n         return failed(&crate_name);\n     }\n+    let mut bad = false;\n+    for esc in [\"\\\\n\", \"\\\\\\\"\", \"\\\\'\"] {\n+        for _ in resource_contents.matches(esc) {\n+            bad = true;\n+            Diagnostic::spanned(resource_span, Level::Error, format!(\"invalid escape `{esc}` in Fluent resource\"))\n+                .note(\"Fluent does not interpret these escape sequences (<https://projectfluent.org/fluent/guide/special.html>)\")\n+                .emit();\n+        }\n+    }\n+    if bad {\n+        return failed(&crate_name);\n+    }\n \n     let resource = match FluentResource::try_new(resource_contents) {\n         Ok(resource) => resource,"}, {"sha": "e28852ea0050e48332353822f6aede35ab8d63b7", "filename": "tests/ui-fulldeps/fluent-messages/invalid-escape.ftl", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/979c265a5d54a3a267563153859f2921db717b1d/tests%2Fui-fulldeps%2Ffluent-messages%2Finvalid-escape.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/979c265a5d54a3a267563153859f2921db717b1d/tests%2Fui-fulldeps%2Ffluent-messages%2Finvalid-escape.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Ffluent-messages%2Finvalid-escape.ftl?ref=979c265a5d54a3a267563153859f2921db717b1d", "patch": "@@ -0,0 +1 @@\n+no_crate_bad_escape = don't use \\n, \\', or \\\""}, {"sha": "1ee7227a8e9924279fe47fde44036725bdacb892", "filename": "tests/ui-fulldeps/fluent-messages/test.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/979c265a5d54a3a267563153859f2921db717b1d/tests%2Fui-fulldeps%2Ffluent-messages%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/979c265a5d54a3a267563153859f2921db717b1d/tests%2Fui-fulldeps%2Ffluent-messages%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Ffluent-messages%2Ftest.rs?ref=979c265a5d54a3a267563153859f2921db717b1d", "patch": "@@ -92,3 +92,12 @@ mod missing_message_ref {\n     fluent_messages! { \"./missing-message-ref.ftl\" }\n     //~^ ERROR referenced message `message` does not exist\n }\n+\n+mod bad_escape {\n+    use super::fluent_messages;\n+\n+    fluent_messages! { \"./invalid-escape.ftl\" }\n+    //~^ ERROR invalid escape `\\n`\n+    //~| ERROR invalid escape `\\\"`\n+    //~| ERROR invalid escape `\\'`\n+}"}, {"sha": "8a6a4a91cc201fa81703e7d38cf3feb6dee863f0", "filename": "tests/ui-fulldeps/fluent-messages/test.stderr", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/979c265a5d54a3a267563153859f2921db717b1d/tests%2Fui-fulldeps%2Ffluent-messages%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/979c265a5d54a3a267563153859f2921db717b1d/tests%2Fui-fulldeps%2Ffluent-messages%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Ffluent-messages%2Ftest.stderr?ref=979c265a5d54a3a267563153859f2921db717b1d", "patch": "@@ -83,5 +83,29 @@ LL |     fluent_messages! { \"./missing-message-ref.ftl\" }\n    |\n    = help: you may have meant to use a variable reference (`{$message}`)\n \n-error: aborting due to 10 previous errors\n+error: invalid escape `\\n` in Fluent resource\n+  --> $DIR/test.rs:99:24\n+   |\n+LL |     fluent_messages! { \"./invalid-escape.ftl\" }\n+   |                        ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: os-specific message\n+\n+error: invalid escape `\\\"` in Fluent resource\n+  --> $DIR/test.rs:99:24\n+   |\n+LL |     fluent_messages! { \"./invalid-escape.ftl\" }\n+   |                        ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: os-specific message\n+\n+error: invalid escape `\\'` in Fluent resource\n+  --> $DIR/test.rs:99:24\n+   |\n+LL |     fluent_messages! { \"./invalid-escape.ftl\" }\n+   |                        ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: os-specific message\n+\n+error: aborting due to 13 previous errors\n "}, {"sha": "5110b9be08a53355e71d0a9cdd796d2921fc8cc9", "filename": "tests/ui-fulldeps/internal-lints/existing_doc_keyword.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/979c265a5d54a3a267563153859f2921db717b1d/tests%2Fui-fulldeps%2Finternal-lints%2Fexisting_doc_keyword.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/979c265a5d54a3a267563153859f2921db717b1d/tests%2Fui-fulldeps%2Finternal-lints%2Fexisting_doc_keyword.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Finternal-lints%2Fexisting_doc_keyword.stderr?ref=979c265a5d54a3a267563153859f2921db717b1d", "patch": "@@ -1,4 +1,4 @@\n-error: found non-existing keyword `tadam` used in `#[doc(keyword = \\\"...\\\")]`\n+error: found non-existing keyword `tadam` used in `#[doc(keyword = \"...\")]`\n   --> $DIR/existing_doc_keyword.rs:10:1\n    |\n LL | #[doc(keyword = \"tadam\")]"}]}