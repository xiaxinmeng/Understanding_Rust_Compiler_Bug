{"sha": "d2e283bf6aba3e7528f0a9e1c92dc870f0bed91e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZTI4M2JmNmFiYTNlNzUyOGYwYTllMWM5MmRjODcwZjBiZWQ5MWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-05T14:49:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-05-05T14:49:48Z"}, "message": "Auto merge of #1394 - RalfJung:fs-mode, r=RalfJung\n\nfs shim: check that mode is default", "tree": {"sha": "eef82c4b391355b51a4704d0ff5533e3d73df4ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eef82c4b391355b51a4704d0ff5533e3d73df4ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2e283bf6aba3e7528f0a9e1c92dc870f0bed91e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2e283bf6aba3e7528f0a9e1c92dc870f0bed91e", "html_url": "https://github.com/rust-lang/rust/commit/d2e283bf6aba3e7528f0a9e1c92dc870f0bed91e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2e283bf6aba3e7528f0a9e1c92dc870f0bed91e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13f1b5f653761cc5b3a6a05a4baa5fd9bafc2264", "url": "https://api.github.com/repos/rust-lang/rust/commits/13f1b5f653761cc5b3a6a05a4baa5fd9bafc2264", "html_url": "https://github.com/rust-lang/rust/commit/13f1b5f653761cc5b3a6a05a4baa5fd9bafc2264"}, {"sha": "45ef97535ff64b22cf281c087c6bf1f603208985", "url": "https://api.github.com/repos/rust-lang/rust/commits/45ef97535ff64b22cf281c087c6bf1f603208985", "html_url": "https://github.com/rust-lang/rust/commit/45ef97535ff64b22cf281c087c6bf1f603208985"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "0de0b33fb2e29accda6c87c0b7db25524695a82b", "filename": "src/shims/fs.rs", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d2e283bf6aba3e7528f0a9e1c92dc870f0bed91e/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2e283bf6aba3e7528f0a9e1c92dc870f0bed91e/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=d2e283bf6aba3e7528f0a9e1c92dc870f0bed91e", "patch": "@@ -246,18 +246,13 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         let flag = this.read_scalar(flag_op)?.to_i32()?;\n \n-        // Check mode (size depends on platform).\n-        // FIXME: should we do something with the mode?\n-        match this.tcx.sess.target.target.target_os.as_str() {\n-            \"macos\" => {\n-                // FIXME: I think `mode` should be `u16` on macOS, but see\n-                // <https://github.com/rust-lang/rust/issues/71915>.\n-                // For now, just don't check on macos.\n-            }\n-            _ => {\n-                this.read_scalar(mode_op)?.to_u32()?;\n-            }\n-        };\n+        // Get the mode.  On macOS, the argument type `mode_t` is actually `u16`, but\n+        // C integer promotion rules mean that on the ABI level, it gets passed as `u32`\n+        // (see https://github.com/rust-lang/rust/issues/71915).\n+        let mode = this.read_scalar(mode_op)?.to_u32()?;\n+        if mode != 0o666 {\n+            throw_unsup_format!(\"non-default mode 0o{:o} is not supported\", mode);\n+        }\n \n         let mut options = OpenOptions::new();\n "}]}