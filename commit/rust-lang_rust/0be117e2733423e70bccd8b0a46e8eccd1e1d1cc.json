{"sha": "0be117e2733423e70bccd8b0a46e8eccd1e1d1cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiZTExN2UyNzMzNDIzZTcwYmNjZDhiMGE0NmU4ZWNjZDFlMWQxY2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-05T03:01:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-05T03:01:29Z"}, "message": "Auto merge of #25095 - huonw:faster-bitvec, r=alexcrichton\n\nThis makes the `bit::vec::bench::bench_bit_vec_big_union` benchmark go\r\nfrom `774 ns/iter (+/- 190)` to `602 ns/iter (+/- 5)`.\r\n\r\n(There's room for more work here too: if one can guarantee 128-bit\r\nalignment for the vector, the compiler actually optimises `union`,\r\n`intersection` etc. to SIMD instructions, which end up being ~5x faster\r\nthat the original version, and 4x faster than the optimised version in\r\nthis patch.)", "tree": {"sha": "0df94bedead37a258dbfc7853b7053df96f61b99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0df94bedead37a258dbfc7853b7053df96f61b99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0be117e2733423e70bccd8b0a46e8eccd1e1d1cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0be117e2733423e70bccd8b0a46e8eccd1e1d1cc", "html_url": "https://github.com/rust-lang/rust/commit/0be117e2733423e70bccd8b0a46e8eccd1e1d1cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0be117e2733423e70bccd8b0a46e8eccd1e1d1cc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "435622028f37085819843f4ac8938557501f0468", "url": "https://api.github.com/repos/rust-lang/rust/commits/435622028f37085819843f4ac8938557501f0468", "html_url": "https://github.com/rust-lang/rust/commit/435622028f37085819843f4ac8938557501f0468"}, {"sha": "4b46546af0d230a56b4f66d0fcc2ede7b89c09b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b46546af0d230a56b4f66d0fcc2ede7b89c09b5", "html_url": "https://github.com/rust-lang/rust/commit/4b46546af0d230a56b4f66d0fcc2ede7b89c09b5"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "ba3e144e6287e36a0325fc325583b3bd6196ce09", "filename": "src/libcollections/bit.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0be117e2733423e70bccd8b0a46e8eccd1e1d1cc/src%2Flibcollections%2Fbit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0be117e2733423e70bccd8b0a46e8eccd1e1d1cc/src%2Flibcollections%2Fbit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbit.rs?ref=0be117e2733423e70bccd8b0a46e8eccd1e1d1cc", "patch": "@@ -210,15 +210,13 @@ impl BitVec {\n         assert_eq!(self.len(), other.len());\n         // This could theoretically be a `debug_assert!`.\n         assert_eq!(self.storage.len(), other.storage.len());\n-        let mut changed = false;\n+        let mut changed_bits = 0;\n         for (a, b) in self.blocks_mut().zip(other.blocks()) {\n             let w = op(*a, b);\n-            if *a != w {\n-                changed = true;\n-                *a = w;\n-            }\n+            changed_bits |= *a ^ w;\n+            *a = w;\n         }\n-        changed\n+        changed_bits != 0\n     }\n \n     /// Iterator over mutable refs to  the underlying blocks of data."}]}