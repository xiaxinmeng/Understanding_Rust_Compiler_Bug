{"sha": "c31785a4ed13f1a1bab752ea3c1177f7256e4f11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMTc4NWE0ZWQxM2YxYTFiYWI3NTJlYTNjMTE3N2Y3MjU2ZTRmMTE=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-06-20T03:25:36Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-06-20T18:12:43Z"}, "message": "Run `./x.py fmt`", "tree": {"sha": "199ddec4d7c51af7d814d96b0d27b92263cf59d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/199ddec4d7c51af7d814d96b0d27b92263cf59d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c31785a4ed13f1a1bab752ea3c1177f7256e4f11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c31785a4ed13f1a1bab752ea3c1177f7256e4f11", "html_url": "https://github.com/rust-lang/rust/commit/c31785a4ed13f1a1bab752ea3c1177f7256e4f11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c31785a4ed13f1a1bab752ea3c1177f7256e4f11/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d80cc56794e43f5c6e89550dc6ac64101e278fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d80cc56794e43f5c6e89550dc6ac64101e278fa", "html_url": "https://github.com/rust-lang/rust/commit/8d80cc56794e43f5c6e89550dc6ac64101e278fa"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "52f86aa7e06b97f1b62a57213ce00a0c585cfaa7", "filename": "src/librustc_builtin_macros/asm.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c31785a4ed13f1a1bab752ea3c1177f7256e4f11/src%2Flibrustc_builtin_macros%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31785a4ed13f1a1bab752ea3c1177f7256e4f11/src%2Flibrustc_builtin_macros%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fasm.rs?ref=c31785a4ed13f1a1bab752ea3c1177f7256e4f11", "patch": "@@ -292,10 +292,7 @@ fn err_duplicate_option<'a>(p: &mut Parser<'a>, symbol: Symbol, span: Span) {\n         .sess\n         .span_diagnostic\n         .struct_span_err(span, &format!(\"the `{}` option was already provided\", symbol));\n-    err.span_label(\n-        span,\n-        \"this option was already provided\",\n-    );\n+    err.span_label(span, \"this option was already provided\");\n \n     // Tool-only output\n     let mut full_span = span;"}]}