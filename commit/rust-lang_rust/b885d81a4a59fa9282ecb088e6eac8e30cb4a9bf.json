{"sha": "b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ODVkODFhNGE1OWZhOTI4MmVjYjA4OGU2ZWFjOGUzMGNiNGE5YmY=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-05-01T01:28:32Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-05-18T01:31:04Z"}, "message": "Rename INVALID_RUST_CODEBLOCK{,S}", "tree": {"sha": "f28cf7b0155420ede4153c694a589de4a122082c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f28cf7b0155420ede4153c694a589de4a122082c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf", "html_url": "https://github.com/rust-lang/rust/commit/b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4120f7561c7df15e099386adcf262f1e2adbc2de", "url": "https://api.github.com/repos/rust-lang/rust/commits/4120f7561c7df15e099386adcf262f1e2adbc2de", "html_url": "https://github.com/rust-lang/rust/commit/4120f7561c7df15e099386adcf262f1e2adbc2de"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "9f1e1a5b88b2f066e198dcf6c193b8b7e288fc0a", "filename": "src/doc/rustdoc/src/lints.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "raw_url": "https://github.com/rust-lang/rust/raw/b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Flints.md?ref=b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf", "patch": "@@ -294,7 +294,7 @@ warning: unclosed HTML tag `h1`\n warning: 2 warnings emitted\n ```\n \n-## invalid_rust_codeblock\n+## invalid_rust_codeblocks\n \n This lint **warns by default**. It detects Rust code blocks in documentation\n examples that are invalid (e.g. empty, not parsable as Rust). For example:\n@@ -322,7 +322,7 @@ warning: Rust code block is empty\n 4 | | /// ```\n | |_______^\n |\n-= note: `#[warn(rustdoc::invalid_rust_codeblock)]` on by default\n+= note: `#[warn(rustdoc::invalid_rust_codeblocks)]` on by default\n \n warning: Rust code block is empty\n --> src/lib.rs:8:5"}, {"sha": "376c83b1a6ea8836e492b202c7bada77e79d4d46", "filename": "src/librustdoc/lint.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf/src%2Flibrustdoc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf/src%2Flibrustdoc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flint.rs?ref=b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf", "patch": "@@ -158,13 +158,13 @@ declare_rustdoc_lint! {\n }\n \n declare_rustdoc_lint! {\n-   /// The `invalid_rust_codeblock` lint detects Rust code blocks in\n+   /// The `invalid_rust_codeblocks` lint detects Rust code blocks in\n    /// documentation examples that are invalid (e.g. empty, not parsable as\n    /// Rust code). This is a `rustdoc` only lint, see the documentation in the\n    /// [rustdoc book].\n    ///\n-   /// [rustdoc book]: ../../../rustdoc/lints.html#invalid_rust_codeblock\n-   INVALID_RUST_CODEBLOCK,\n+   /// [rustdoc book]: ../../../rustdoc/lints.html#invalid_rust_codeblocks\n+   INVALID_RUST_CODEBLOCKS,\n    Warn,\n    \"codeblock could not be parsed as valid Rust or is empty\"\n }\n@@ -176,7 +176,7 @@ crate static RUSTDOC_LINTS: Lazy<Vec<&'static Lint>> = Lazy::new(|| {\n         MISSING_DOC_CODE_EXAMPLES,\n         PRIVATE_DOC_TESTS,\n         INVALID_CODEBLOCK_ATTRIBUTES,\n-        INVALID_RUST_CODEBLOCK,\n+        INVALID_RUST_CODEBLOCKS,\n         INVALID_HTML_TAGS,\n         BARE_URLS,\n         MISSING_CRATE_LEVEL_DOCS,"}, {"sha": "72d3e9544c4111f54fcbb37e434f575d091464ff", "filename": "src/librustdoc/passes/check_code_block_syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs?ref=b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf", "patch": "@@ -123,7 +123,7 @@ impl<'a, 'tcx> SyntaxChecker<'a, 'tcx> {\n         // All points of divergence have been handled earlier so this can be\n         // done the same way whether the span is precise or not.\n         self.cx.tcx.struct_span_lint_hir(\n-            crate::lint::INVALID_RUST_CODEBLOCK,\n+            crate::lint::INVALID_RUST_CODEBLOCKS,\n             hir_id,\n             sp,\n             diag_builder,"}, {"sha": "9c02ff11d19c4bd898a05c34cc0833a99750cce8", "filename": "src/test/rustdoc-ui/ignore-block-help.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fignore-block-help.stderr?ref=b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf", "patch": "@@ -7,7 +7,7 @@ LL | | /// let heart = '\u2764\ufe0f';\n LL | | /// ```\n    | |_______^\n    |\n-   = note: `#[warn(rustdoc::invalid_rust_codeblock)]` on by default\n+   = note: `#[warn(rustdoc::invalid_rust_codeblocks)]` on by default\n help: `ignore` code blocks require valid Rust code for syntax highlighting; mark blocks that do not contain Rust code as text: ```text\n   --> $DIR/ignore-block-help.rs:3:5\n    |"}, {"sha": "82eac9bd68b21b966b6276911f56f2ab07350667", "filename": "src/test/rustdoc-ui/invalid-syntax.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr?ref=b885d81a4a59fa9282ecb088e6eac8e30cb4a9bf", "patch": "@@ -7,7 +7,7 @@ LL | | /// \\__________pkt->size___________/          \\_result->size_/ \\__pkt->si\n LL | | /// ```\n    | |_______^\n    |\n-   = note: `#[warn(rustdoc::invalid_rust_codeblock)]` on by default\n+   = note: `#[warn(rustdoc::invalid_rust_codeblocks)]` on by default\n    = note: error from rustc: unknown start of token: \\\n    = note: error from rustc: unknown start of token: \\\n    = note: error from rustc: unknown start of token: \\"}]}