{"sha": "eb7ed0c917310592a05c5e2257986c6ba13d18b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViN2VkMGM5MTczMTA1OTJhMDVjNWUyMjU3OTg2YzZiYTEzZDE4YjY=", "commit": {"author": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-02-25T13:08:34Z"}, "committer": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-05-05T09:24:36Z"}, "message": "perf: Lazily recive the Rollback argument in rollback_to", "tree": {"sha": "e60063796e41ffd7f73b4ae0ae406e331364eb92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e60063796e41ffd7f73b4ae0ae406e331364eb92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb7ed0c917310592a05c5e2257986c6ba13d18b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb7ed0c917310592a05c5e2257986c6ba13d18b6", "html_url": "https://github.com/rust-lang/rust/commit/eb7ed0c917310592a05c5e2257986c6ba13d18b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb7ed0c917310592a05c5e2257986c6ba13d18b6/comments", "author": null, "committer": null, "parents": [{"sha": "a457566154994c4f75347cbf697382e261700bd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a457566154994c4f75347cbf697382e261700bd7", "html_url": "https://github.com/rust-lang/rust/commit/a457566154994c4f75347cbf697382e261700bd7"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "52865f55f786b590289259d43faf8c0cfe17e14a", "filename": "src/librustc_data_structures/snapshot_map/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb7ed0c917310592a05c5e2257986c6ba13d18b6/src%2Flibrustc_data_structures%2Fsnapshot_map%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb7ed0c917310592a05c5e2257986c6ba13d18b6/src%2Flibrustc_data_structures%2Fsnapshot_map%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fsnapshot_map%2Fmod.rs?ref=eb7ed0c917310592a05c5e2257986c6ba13d18b6", "patch": "@@ -94,7 +94,8 @@ where\n     }\n \n     pub fn rollback_to(&mut self, snapshot: Snapshot) {\n-        self.undo_log.rollback_to(&mut self.map, snapshot)\n+        let map = &mut self.map;\n+        self.undo_log.rollback_to(|| map, snapshot)\n     }\n }\n "}, {"sha": "fbba96fbe99cf9983aaba5c20f74e3bdcd56101a", "filename": "src/librustc_infer/infer/mod.rs", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/eb7ed0c917310592a05c5e2257986c6ba13d18b6/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb7ed0c917310592a05c5e2257986c6ba13d18b6/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fmod.rs?ref=eb7ed0c917310592a05c5e2257986c6ba13d18b6", "patch": "@@ -414,12 +414,18 @@ impl<'tcx> Snapshots<UndoLog<'tcx>> for Logs<'tcx> {\n         unreachable!()\n     }\n \n-    fn rollback_to(&mut self, values: &mut impl Rollback<UndoLog<'tcx>>, snapshot: Self::Snapshot) {\n+    fn rollback_to<R>(&mut self, values: impl FnOnce() -> R, snapshot: Self::Snapshot)\n+    where\n+        R: Rollback<UndoLog<'tcx>>,\n+    {\n         debug!(\"rollback_to({})\", snapshot.undo_len);\n         self.assert_open_snapshot(&snapshot);\n \n-        while self.logs.len() > snapshot.undo_len {\n-            values.reverse(self.logs.pop().unwrap());\n+        if self.logs.len() > snapshot.undo_len {\n+            let mut values = values();\n+            while self.logs.len() > snapshot.undo_len {\n+                values.reverse(self.logs.pop().unwrap());\n+            }\n         }\n \n         if self.num_open_snapshots == 1 {\n@@ -1072,19 +1078,19 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         self.universe.set(universe);\n         self.skip_leak_check.set(was_skip_leak_check);\n \n-        let mut inner = self.inner.borrow_mut();\n-        let inner = &mut *inner;\n         let InferCtxtInner {\n             type_variables,\n             const_unification_table,\n             int_unification_table,\n             float_unification_table,\n             region_constraints,\n             projection_cache,\n+            region_obligations,\n+            undo_log,\n             ..\n-        } = inner;\n-        inner.undo_log.rollback_to(\n-            &mut RollbackView {\n+        } = &mut *self.inner.borrow_mut();\n+        undo_log.rollback_to(\n+            || RollbackView {\n                 type_variables: type_variable::RollbackView::from(type_variables),\n                 const_unification_table,\n                 int_unification_table,\n@@ -1094,7 +1100,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             },\n             undo_snapshot,\n         );\n-        inner.region_obligations.truncate(region_obligations_snapshot);\n+        region_obligations.truncate(region_obligations_snapshot);\n     }\n \n     fn commit_from(&self, snapshot: CombinedSnapshot<'a, 'tcx>) {"}]}