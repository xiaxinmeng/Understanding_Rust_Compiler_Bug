{"sha": "86993310143c1347db6308a66c1f31a7a5644f56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2OTkzMzEwMTQzYzEzNDdkYjYzMDhhNjZjMWYzMWE3YTU2NDRmNTY=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-10-05T15:41:49Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-10-05T15:41:49Z"}, "message": "Make ImportPrefix a configuration option", "tree": {"sha": "19154fee7049c1424ee3c043db12b5b6eb335963", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19154fee7049c1424ee3c043db12b5b6eb335963"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86993310143c1347db6308a66c1f31a7a5644f56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86993310143c1347db6308a66c1f31a7a5644f56", "html_url": "https://github.com/rust-lang/rust/commit/86993310143c1347db6308a66c1f31a7a5644f56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86993310143c1347db6308a66c1f31a7a5644f56/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67e71619b95dc674c93bd11fb21b311bfc2fb95a", "url": "https://api.github.com/repos/rust-lang/rust/commits/67e71619b95dc674c93bd11fb21b311bfc2fb95a", "html_url": "https://github.com/rust-lang/rust/commit/67e71619b95dc674c93bd11fb21b311bfc2fb95a"}], "stats": {"total": 59, "additions": 49, "deletions": 10}, "files": [{"sha": "b24527ec4d43c38aa52acb9eed0db3aabf897203", "filename": "crates/assists/src/assist_config.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/86993310143c1347db6308a66c1f31a7a5644f56/crates%2Fassists%2Fsrc%2Fassist_config.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86993310143c1347db6308a66c1f31a7a5644f56/crates%2Fassists%2Fsrc%2Fassist_config.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fassist_config.rs?ref=86993310143c1347db6308a66c1f31a7a5644f56", "patch": "@@ -4,6 +4,8 @@\n //! module, and we use to statically check that we only produce snippet\n //! assists if we are allowed to.\n \n+use hir::PrefixKind;\n+\n use crate::{utils::MergeBehaviour, AssistKind};\n \n #[derive(Clone, Debug, PartialEq, Eq)]\n@@ -37,10 +39,11 @@ impl Default for AssistConfig {\n #[derive(Clone, Copy, Debug, PartialEq, Eq)]\n pub struct InsertUseConfig {\n     pub merge: Option<MergeBehaviour>,\n+    pub prefix_kind: PrefixKind,\n }\n \n impl Default for InsertUseConfig {\n     fn default() -> Self {\n-        InsertUseConfig { merge: Some(MergeBehaviour::Full) }\n+        InsertUseConfig { merge: Some(MergeBehaviour::Full), prefix_kind: PrefixKind::Plain }\n     }\n }"}, {"sha": "357ff63920a499994eb76651405542d2320c2cd3", "filename": "crates/assists/src/handlers/auto_import.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/86993310143c1347db6308a66c1f31a7a5644f56/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86993310143c1347db6308a66c1f31a7a5644f56/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs?ref=86993310143c1347db6308a66c1f31a7a5644f56", "patch": "@@ -191,12 +191,16 @@ impl AutoImportAssets {\n                 _ => Some(candidate),\n             })\n             .filter_map(|candidate| match candidate {\n-                Either::Left(module_def) => {\n-                    self.module_with_name_to_import.find_use_path_prefixed(db, module_def)\n-                }\n-                Either::Right(macro_def) => {\n-                    self.module_with_name_to_import.find_use_path_prefixed(db, macro_def)\n-                }\n+                Either::Left(module_def) => self.module_with_name_to_import.find_use_path_prefixed(\n+                    db,\n+                    module_def,\n+                    ctx.config.insert_use.prefix_kind,\n+                ),\n+                Either::Right(macro_def) => self.module_with_name_to_import.find_use_path_prefixed(\n+                    db,\n+                    macro_def,\n+                    ctx.config.insert_use.prefix_kind,\n+                ),\n             })\n             .filter(|use_path| !use_path.segments.is_empty())\n             .take(20)"}, {"sha": "a445a97b30bc71e08077058c260966e9d5177c2e", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86993310143c1347db6308a66c1f31a7a5644f56/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86993310143c1347db6308a66c1f31a7a5644f56/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=86993310143c1347db6308a66c1f31a7a5644f56", "patch": "@@ -391,8 +391,9 @@ impl Module {\n         self,\n         db: &dyn DefDatabase,\n         item: impl Into<ItemInNs>,\n+        prefix_kind: PrefixKind,\n     ) -> Option<ModPath> {\n-        hir_def::find_path::find_path_prefixed(db, item.into(), self.into(), PrefixKind::Plain)\n+        hir_def::find_path::find_path_prefixed(db, item.into(), self.into(), prefix_kind)\n     }\n }\n "}, {"sha": "87084fa13259f5c5c2d0c23e516db78f0c52aae7", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/86993310143c1347db6308a66c1f31a7a5644f56/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86993310143c1347db6308a66c1f31a7a5644f56/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=86993310143c1347db6308a66c1f31a7a5644f56", "patch": "@@ -48,6 +48,7 @@ pub use hir_def::{\n     body::scope::ExprScopes,\n     builtin_type::BuiltinType,\n     docs::Documentation,\n+    find_path::PrefixKind,\n     item_scope::ItemInNs,\n     nameres::ModuleSource,\n     path::ModPath,"}, {"sha": "dcbc11c14e6ac4e3f26c95bd91af7afcd6320ebd", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/86993310143c1347db6308a66c1f31a7a5644f56/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86993310143c1347db6308a66c1f31a7a5644f56/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=86993310143c1347db6308a66c1f31a7a5644f56", "patch": "@@ -10,6 +10,7 @@\n use std::{ffi::OsString, path::PathBuf};\n \n use flycheck::FlycheckConfig;\n+use hir::PrefixKind;\n use ide::{\n     AssistConfig, CompletionConfig, DiagnosticsConfig, HoverConfig, InlayHintsConfig,\n     MergeBehaviour,\n@@ -289,6 +290,11 @@ impl Config {\n             MergeBehaviourDef::Full => Some(MergeBehaviour::Full),\n             MergeBehaviourDef::Last => Some(MergeBehaviour::Last),\n         };\n+        self.assist.insert_use.prefix_kind = match data.assist_importPrefix {\n+            ImportPrefixDef::Plain => PrefixKind::Plain,\n+            ImportPrefixDef::ByCrate => PrefixKind::ByCrate,\n+            ImportPrefixDef::BySelf => PrefixKind::BySelf,\n+        };\n \n         self.call_info_full = data.callInfo_full;\n \n@@ -403,13 +409,21 @@ enum ManifestOrProjectJson {\n }\n \n #[derive(Deserialize)]\n-#[serde(rename_all = \"lowercase\")]\n+#[serde(rename_all = \"snake_case\")]\n enum MergeBehaviourDef {\n     None,\n     Full,\n     Last,\n }\n \n+#[derive(Deserialize)]\n+#[serde(rename_all = \"snake_case\")]\n+enum ImportPrefixDef {\n+    Plain,\n+    BySelf,\n+    ByCrate,\n+}\n+\n macro_rules! config_data {\n     (struct $name:ident { $($field:ident: $ty:ty = $default:expr,)*}) => {\n         #[allow(non_snake_case)]\n@@ -434,6 +448,7 @@ macro_rules! config_data {\n config_data! {\n     struct ConfigData {\n         assist_importMergeBehaviour: MergeBehaviourDef = MergeBehaviourDef::None,\n+        assist_importPrefix: ImportPrefixDef           = ImportPrefixDef::Plain,\n \n         callInfo_full: bool = true,\n "}, {"sha": "1f0e7550b5e486aae3e12fae49c9acdefd5e26b7", "filename": "editors/code/package.json", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/86993310143c1347db6308a66c1f31a7a5644f56/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/86993310143c1347db6308a66c1f31a7a5644f56/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=86993310143c1347db6308a66c1f31a7a5644f56", "patch": "@@ -652,6 +652,21 @@\n                     \"default\": \"full\",\n                     \"description\": \"The strategy to use when inserting new imports or merging imports.\"\n                 },\n+                \"rust-analyzer.assist.importPrefix\": {\n+                    \"type\": \"string\",\n+                    \"enum\": [\n+                        \"plain\",\n+                        \"by_self\",\n+                        \"by_crate\"\n+                    ],\n+                    \"enumDescriptions\": [\n+                        \"Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item.\",\n+                        \"Prefix all import paths with `self` if they don't begin with `self`, `super`, `crate` or a crate name\",\n+                        \"Force import paths to be absolute by always starting them with `crate` or the crate name they refer to.\"\n+                    ],\n+                    \"default\": \"plain\",\n+                    \"description\": \"The path structure for newly inserted paths to use.\"\n+                },\n                 \"rust-analyzer.runnables.overrideCargo\": {\n                     \"type\": [\n                         \"null\",\n@@ -1033,4 +1048,4 @@\n             ]\n         }\n     }\n-}\n+}\n\\ No newline at end of file"}]}