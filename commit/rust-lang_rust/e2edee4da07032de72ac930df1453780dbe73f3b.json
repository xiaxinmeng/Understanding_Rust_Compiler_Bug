{"sha": "e2edee4da07032de72ac930df1453780dbe73f3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyZWRlZTRkYTA3MDMyZGU3MmFjOTMwZGYxNDUzNzgwZGJlNzNmM2I=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-05-18T18:48:00Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-05-18T18:48:00Z"}, "message": "No matter how trivial the change, tidy always finds a way to complain...", "tree": {"sha": "d6ec0fff65eaa06ed38d2a06a4ce8affd4e30194", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6ec0fff65eaa06ed38d2a06a4ce8affd4e30194"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2edee4da07032de72ac930df1453780dbe73f3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2edee4da07032de72ac930df1453780dbe73f3b", "html_url": "https://github.com/rust-lang/rust/commit/e2edee4da07032de72ac930df1453780dbe73f3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2edee4da07032de72ac930df1453780dbe73f3b/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f7dea74d7699707cfdcf81435c200923d0a5047", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f7dea74d7699707cfdcf81435c200923d0a5047", "html_url": "https://github.com/rust-lang/rust/commit/6f7dea74d7699707cfdcf81435c200923d0a5047"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "3ff77163b9f3d1c53e3fd5a540bd1821de555843", "filename": "src/test/codegen/try_identity.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2edee4da07032de72ac930df1453780dbe73f3b/src%2Ftest%2Fcodegen%2Ftry_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2edee4da07032de72ac930df1453780dbe73f3b/src%2Ftest%2Fcodegen%2Ftry_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ftry_identity.rs?ref=e2edee4da07032de72ac930df1453780dbe73f3b", "patch": "@@ -9,8 +9,8 @@ type R = Result<u64, i32>;\n \n // This was written to the `?` from `try_trait`, but `try_trait_v2` uses a different structure,\n // so the relevant desugar is copied inline in order to keep the test testing the same thing.\n-// FIXME(#85133): while this might be useful for `r#try!`, it would be nice to have a MIR optimization\n-// that picks up the `?` desugaring, as `SimplifyArmIdentity` does not.  See #85133\n+// FIXME(#85133): while this might be useful for `r#try!`, it would be nice to have a MIR\n+// optimization that picks up the `?` desugaring, as `SimplifyArmIdentity` does not.\n #[no_mangle]\n pub fn try_identity(x: R) -> R {\n // CHECK: start:"}, {"sha": "f7dcaa13449eac88c17898376922e5975859a142", "filename": "src/test/mir-opt/simplify-arm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2edee4da07032de72ac930df1453780dbe73f3b/src%2Ftest%2Fmir-opt%2Fsimplify-arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2edee4da07032de72ac930df1453780dbe73f3b/src%2Ftest%2Fmir-opt%2Fsimplify-arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-arm.rs?ref=e2edee4da07032de72ac930df1453780dbe73f3b", "patch": "@@ -30,8 +30,8 @@ fn from_error<T, E>(e: E) -> Result<T, E> {\n \n // This was written to the `?` from `try_trait`, but `try_trait_v2` uses a different structure,\n // so the relevant desugar is copied inline in order to keep the test testing the same thing.\n-// FIXME(#85133): while this might be useful for `r#try!`, it would be nice to have a MIR optimization\n-// that picks up the `?` desugaring, as `SimplifyArmIdentity` does not.  See #85133\n+// FIXME(#85133): while this might be useful for `r#try!`, it would be nice to have a MIR\n+// optimization that picks up the `?` desugaring, as `SimplifyArmIdentity` does not.\n fn id_try(r: Result<u8, i32>) -> Result<u8, i32> {\n     let x = match into_result(r) {\n         Err(e) => return from_error(From::from(e)),"}, {"sha": "15e351e7d50161f6e705ab0669bb5d774b0fcbe7", "filename": "src/test/mir-opt/simplify_try.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2edee4da07032de72ac930df1453780dbe73f3b/src%2Ftest%2Fmir-opt%2Fsimplify_try.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2edee4da07032de72ac930df1453780dbe73f3b/src%2Ftest%2Fmir-opt%2Fsimplify_try.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_try.rs?ref=e2edee4da07032de72ac930df1453780dbe73f3b", "patch": "@@ -15,8 +15,8 @@ fn from_error<T, E>(e: E) -> Result<T, E> {\n \n // This was written to the `?` from `try_trait`, but `try_trait_v2` uses a different structure,\n // so the relevant desugar is copied inline in order to keep the test testing the same thing.\n-// FIXME(#85133): while this might be useful for `r#try!`, it would be nice to have a MIR optimization\n-// that picks up the `?` desugaring, as `SimplifyArmIdentity` does not.  See #85133\n+// FIXME(#85133): while this might be useful for `r#try!`, it would be nice to have a MIR\n+// optimization that picks up the `?` desugaring, as `SimplifyArmIdentity` does not.\n fn try_identity(x: Result<u32, i32>) -> Result<u32, i32> {\n     let y = match into_result(x) {\n         Err(e) => return from_error(From::from(e)),"}]}