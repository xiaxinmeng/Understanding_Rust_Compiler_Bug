{"sha": "6a0703664b5f57b797a44d9552d660ec4177611b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMDcwMzY2NGI1ZjU3Yjc5N2E0NGQ5NTUyZDY2MGVjNDE3NzYxMWI=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@gmail.com", "date": "2018-08-23T15:38:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-23T15:38:41Z"}, "message": "Remove incorrect note from string_add_assign docs\n\nThe docs claim that `String::push_str` is better than `String::add` because `String::add` allocates a new string and drops the old one, but this is not true.  In fact, `add` reuses the existing string and grows it only if its capacity is exceeded, exactly like `push_str`.  Their performance is identical since `add` is just a wrapper for `push_str`:\r\n\r\n```\r\n    fn add(mut self, other: &str) -> String {\r\n        self.push_str(other);\r\n        self\r\n    }\r\n```\r\n\r\nhttps://github.com/rust-lang/rust/blob/35bf1ae25799a4e62131159f052e0a3cbd27c960/src/liballoc/string.rs#L1922-L1925", "tree": {"sha": "add43bfff639d2b3fc3e9a2e1793876cecb608df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/add43bfff639d2b3fc3e9a2e1793876cecb608df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a0703664b5f57b797a44d9552d660ec4177611b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbftUCCRBK7hj4Ov3rIwAAdHIIADpxFss0IzYff7wtiwpj40VK\n8p/Ip/4m4HlF0w/UX8wEgv4BvhAz89W1Mj0qmCqqenAm3ZzNt5F3TFsEEMlWuauA\nWGSiIewAnH5us1vmESELfzANewsy1UcXBsIv0b92WIKfAAsEXCfs68GQmEgRZ0Ej\n/Lfk62Ogoi5FhpyMZ16+Ao/3B8jSP86OEDppchvoCM4zDx2by8neGKX2zWtVHmpk\nIJxSm0CTZri6R+EwlZDmY9FLZyEd31jiPefSQ/9ixUUg1YmC0JceYJO8dgt47YGm\n0aoSSIRdAAxuoMbwwyMFq5eitj/W5Wm/bv9xeuz7+PLt4uK3hf3nYiO7ab/PvVM=\n=Ler/\n-----END PGP SIGNATURE-----\n", "payload": "tree add43bfff639d2b3fc3e9a2e1793876cecb608df\nparent e9c3d3d50261b9cc6143dc02885cda265e926d30\nauthor Matt Brubeck <mbrubeck@gmail.com> 1535038721 -0700\ncommitter GitHub <noreply@github.com> 1535038721 -0700\n\nRemove incorrect note from string_add_assign docs\n\nThe docs claim that `String::push_str` is better than `String::add` because `String::add` allocates a new string and drops the old one, but this is not true.  In fact, `add` reuses the existing string and grows it only if its capacity is exceeded, exactly like `push_str`.  Their performance is identical since `add` is just a wrapper for `push_str`:\r\n\r\n```\r\n    fn add(mut self, other: &str) -> String {\r\n        self.push_str(other);\r\n        self\r\n    }\r\n```\r\n\r\nhttps://github.com/rust-lang/rust/blob/35bf1ae25799a4e62131159f052e0a3cbd27c960/src/liballoc/string.rs#L1922-L1925"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a0703664b5f57b797a44d9552d660ec4177611b", "html_url": "https://github.com/rust-lang/rust/commit/6a0703664b5f57b797a44d9552d660ec4177611b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a0703664b5f57b797a44d9552d660ec4177611b/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9c3d3d50261b9cc6143dc02885cda265e926d30", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9c3d3d50261b9cc6143dc02885cda265e926d30", "html_url": "https://github.com/rust-lang/rust/commit/e9c3d3d50261b9cc6143dc02885cda265e926d30"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "1b6f65046a09bf1efa32e629d04a4dfe220f71dd", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a0703664b5f57b797a44d9552d660ec4177611b/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a0703664b5f57b797a44d9552d660ec4177611b/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=6a0703664b5f57b797a44d9552d660ec4177611b", "patch": "@@ -9,8 +9,7 @@ use crate::utils::{get_parent_expr, is_allowed, match_type, paths, span_lint, sp\n /// `let`!).\n ///\n /// **Why is this bad?** It's not really bad, but some people think that the\n-/// `.push_str(_)` method is more readable. Also creates a new heap allocation and throws\n-/// away the old one.\n+/// `.push_str(_)` method is more readable.\n ///\n /// **Known problems:** None.\n ///"}]}