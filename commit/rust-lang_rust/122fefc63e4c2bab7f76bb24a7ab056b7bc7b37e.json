{"sha": "122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMmZlZmM2M2U0YzJiYWI3Zjc2YmIyNGE3YWIwNTZiN2JjN2IzN2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-10T00:34:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-10T00:34:30Z"}, "message": "Auto merge of #64321 - Centril:rollup-jsj5tpl, r=Centril\n\nRollup of 5 pull requests\n\nSuccessful merges:\n\n - #63806 (Upgrade rand to 0.7)\n - #64054 (Always emit unresolved import errors and hide unused import lint)\n - #64279 (Bump RLS and Rustfmt submodules to use rustc-ap-* v583)\n - #64317 (Update LLVM submodule)\n - #64320 (Update version of `rustc-std-workspace-*` crates)\n\nFailed merges:\n\nr? @ghost", "tree": {"sha": "62514217c15a544da797ecfea60d64cfd0a13307", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62514217c15a544da797ecfea60d64cfd0a13307"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "html_url": "https://github.com/rust-lang/rust/commit/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b36e9dea3f2ff25b1d0df2669836c33cce89ae5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b36e9dea3f2ff25b1d0df2669836c33cce89ae5", "html_url": "https://github.com/rust-lang/rust/commit/0b36e9dea3f2ff25b1d0df2669836c33cce89ae5"}, {"sha": "342722e584ce08b97509de73bb76d6ccc6c68423", "url": "https://api.github.com/repos/rust-lang/rust/commits/342722e584ce08b97509de73bb76d6ccc6c68423", "html_url": "https://github.com/rust-lang/rust/commit/342722e584ce08b97509de73bb76d6ccc6c68423"}], "stats": {"total": 703, "additions": 490, "deletions": 213}, "files": [{"sha": "27ee38146097b21b25b3a8bc36e26544bd417916", "filename": "Cargo.lock", "status": "modified", "additions": 384, "deletions": 158, "changes": 542, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -223,9 +223,9 @@ checksum = \"560c32574a12a89ecd91f5e742165893f86e3ab98d21f8ea548658eb9eef5f40\"\n \n [[package]]\n name = \"bytecount\"\n-version = \"0.5.1\"\n+version = \"0.6.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"be0fdd54b507df8f22012890aadd099979befdba27713c767993f8380112ca7c\"\n+checksum = \"b0017894339f586ccb943b01b9555de56770c11cda818e7e3d8bd93f4ed7f46e\"\n dependencies = [\n  \"packed_simd\",\n ]\n@@ -287,7 +287,7 @@ dependencies = [\n  \"git2-curl\",\n  \"glob\",\n  \"hex\",\n- \"home 0.5.0\",\n+ \"home\",\n  \"ignore\",\n  \"im-rc\",\n  \"jobserver\",\n@@ -309,7 +309,7 @@ dependencies = [\n  \"same-file\",\n  \"semver\",\n  \"serde\",\n- \"serde_ignored 0.1.0\",\n+ \"serde_ignored\",\n  \"serde_json\",\n  \"shell-escape\",\n  \"strip-ansi-escapes\",\n@@ -392,9 +392,9 @@ dependencies = [\n \n [[package]]\n name = \"clap\"\n-version = \"2.32.0\"\n+version = \"2.33.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b957d88f4b6a63b9d70d5f454ac8011819c6efa7727858f458ab71c756ce2d3e\"\n+checksum = \"5067f5bb2d80ef5d68b4c87db81601f0b75bca627bc2ef76b141d7b846a3c6d9\"\n dependencies = [\n  \"ansi_term\",\n  \"atty\",\n@@ -753,9 +753,9 @@ checksum = \"d2a368589465391e127e10c9e3a08efc8df66fd49b87dc8524c764bbe7f2ef82\"\n dependencies = [\n  \"fnv\",\n  \"ident_case\",\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n+ \"syn 0.15.35\",\n ]\n \n [[package]]\n@@ -765,8 +765,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"244e8987bd4e174385240cde20a3657f607fb0797563c28255c353b5819a07b1\"\n dependencies = [\n  \"darling_core\",\n- \"quote\",\n- \"syn\",\n+ \"quote 0.6.12\",\n+ \"syn 0.15.35\",\n ]\n \n [[package]]\n@@ -781,9 +781,9 @@ version = \"0.5.6\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"6ca414e896ae072546f4d789f452daaecf60ddee4c9df5dc6d5936d769e3d87c\"\n dependencies = [\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n+ \"syn 0.15.35\",\n ]\n \n [[package]]\n@@ -792,10 +792,10 @@ version = \"0.13.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"3f57d78cf3bd45270dad4e70c21ec77a960b36c7a841ff9db76aaa775a8fb871\"\n dependencies = [\n- \"proc-macro2\",\n- \"quote\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n  \"rustc_version\",\n- \"syn\",\n+ \"syn 0.15.35\",\n ]\n \n [[package]]\n@@ -953,9 +953,9 @@ version = \"0.1.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"ea1063915fd7ef4309e222a5a07cf9c319fb9c7836b1f89b85458672dbb127e1\"\n dependencies = [\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n+ \"syn 0.15.35\",\n  \"synstructure\",\n ]\n \n@@ -1139,12 +1139,13 @@ dependencies = [\n \n [[package]]\n name = \"getrandom\"\n-version = \"0.1.8\"\n+version = \"0.1.12\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"34f33de6f0ae7c9cb5e574502a562e2b512799e32abb801cd1e79ad952b62b49\"\n+checksum = \"473a1265acc8ff1e808cd0a1af8cee3c2ee5200916058a2ca113c29f2d903571\"\n dependencies = [\n  \"cfg-if\",\n  \"libc\",\n+ \"wasi\",\n ]\n \n [[package]]\n@@ -1259,16 +1260,6 @@ version = \"0.3.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"805026a5d0141ffc30abb3be3173848ad46a1b1664fe632428479619a3644d77\"\n \n-[[package]]\n-name = \"home\"\n-version = \"0.3.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"80dff82fb58cfbbc617fb9a9184b010be0529201553cda50ad04372bc2333aff\"\n-dependencies = [\n- \"scopeguard 0.3.3\",\n- \"winapi 0.3.6\",\n-]\n-\n [[package]]\n name = \"home\"\n version = \"0.5.0\"\n@@ -1288,9 +1279,9 @@ dependencies = [\n  \"log\",\n  \"mac\",\n  \"markup5ever\",\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n+ \"syn 0.15.35\",\n ]\n \n [[package]]\n@@ -1528,11 +1519,30 @@ version = \"0.11.13\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"9ad0485404155f45cce53a40d4b2d6ac356418300daed05273d9e26f91c390be\"\n \n+[[package]]\n+name = \"jsonrpc-client-transports\"\n+version = \"13.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"39577db48b004cffb4c5b8e5c9b993c177c52599ecbee88711e815acf65144db\"\n+dependencies = [\n+ \"failure\",\n+ \"futures\",\n+ \"jsonrpc-core\",\n+ \"jsonrpc-pubsub\",\n+ \"jsonrpc-server-utils\",\n+ \"log\",\n+ \"parity-tokio-ipc\",\n+ \"serde\",\n+ \"serde_json\",\n+ \"tokio\",\n+ \"url 1.7.2\",\n+]\n+\n [[package]]\n name = \"jsonrpc-core\"\n-version = \"12.0.0\"\n+version = \"13.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"288dca7f9713710a29e485076b9340156cb701edb46a881f5d0c31aa4f5b9143\"\n+checksum = \"dd42951eb35079520ee29b7efbac654d85821b397ef88c8151600ef7e2d00217\"\n dependencies = [\n  \"futures\",\n  \"log\",\n@@ -1541,6 +1551,70 @@ dependencies = [\n  \"serde_json\",\n ]\n \n+[[package]]\n+name = \"jsonrpc-core-client\"\n+version = \"13.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"f047c10738edee7c3c6acf5241a0ce33df32ef9230c1a7fb03e4a77ee72c992f\"\n+dependencies = [\n+ \"jsonrpc-client-transports\",\n+]\n+\n+[[package]]\n+name = \"jsonrpc-derive\"\n+version = \"13.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"29f9149f785deaae92a4c834a9a1a83a4313b8cfedccf15362cd4cf039a64501\"\n+dependencies = [\n+ \"proc-macro-crate\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n+ \"syn 0.15.35\",\n+]\n+\n+[[package]]\n+name = \"jsonrpc-ipc-server\"\n+version = \"13.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"256c5e4292c17b4c2ecdf542299dc8e9d6b3939c075c54825570ad9317fe5751\"\n+dependencies = [\n+ \"jsonrpc-core\",\n+ \"jsonrpc-server-utils\",\n+ \"log\",\n+ \"parity-tokio-ipc\",\n+ \"parking_lot 0.9.0\",\n+ \"tokio-service\",\n+]\n+\n+[[package]]\n+name = \"jsonrpc-pubsub\"\n+version = \"13.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"e2c08b444cc0ed70263798834343d0ac875e664257df8079160f23ac1ea79446\"\n+dependencies = [\n+ \"jsonrpc-core\",\n+ \"log\",\n+ \"parking_lot 0.9.0\",\n+ \"serde\",\n+]\n+\n+[[package]]\n+name = \"jsonrpc-server-utils\"\n+version = \"13.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"44561bfdd31401bad790527f1e951dde144f2341ddc3e1b859d32945e1a34eff\"\n+dependencies = [\n+ \"bytes\",\n+ \"globset\",\n+ \"jsonrpc-core\",\n+ \"lazy_static 1.3.0\",\n+ \"log\",\n+ \"num_cpus\",\n+ \"tokio\",\n+ \"tokio-codec\",\n+ \"unicase 2.4.0\",\n+]\n+\n [[package]]\n name = \"kernel32-sys\"\n version = \"0.2.2\"\n@@ -1571,9 +1645,9 @@ checksum = \"b294d6fa9ee409a054354afc4352b0b9ef7ca222c69b8812cbea9e7d2bf3783f\"\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.61\"\n+version = \"0.2.62\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c665266eb592905e8503ba3403020f4b8794d26263f412ca33171600eca9a6fa\"\n+checksum = \"34fcd2c08d2f832f376f4173a231990fa5aef4e99fb569867318a227ef4c06ba\"\n dependencies = [\n  \"rustc-std-workspace-core\",\n ]\n@@ -1655,6 +1729,15 @@ dependencies = [\n  \"scopeguard 0.3.3\",\n ]\n \n+[[package]]\n+name = \"lock_api\"\n+version = \"0.3.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"f8912e782533a93a167888781b836336a6ca5da6175c05944c86cf28c31104dc\"\n+dependencies = [\n+ \"scopeguard 1.0.0\",\n+]\n+\n [[package]]\n name = \"log\"\n version = \"0.4.8\"\n@@ -1686,18 +1769,15 @@ dependencies = [\n \n [[package]]\n name = \"lsp-types\"\n-version = \"0.57.2\"\n+version = \"0.60.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b62b77309737b1e262b3bbf37ff8faa740562c633b14702afe9be85dbcb6f88a\"\n+checksum = \"fe3edefcd66dde1f7f1df706f46520a3c93adc5ca4bc5747da6621195e894efd\"\n dependencies = [\n  \"bitflags\",\n- \"num-derive\",\n- \"num-traits\",\n  \"serde\",\n- \"serde_derive\",\n  \"serde_json\",\n- \"url 1.7.2\",\n- \"url_serde\",\n+ \"serde_repr\",\n+ \"url 2.1.0\",\n ]\n \n [[package]]\n@@ -1800,7 +1880,7 @@ dependencies = [\n  \"serde\",\n  \"serde_derive\",\n  \"serde_json\",\n- \"structopt\",\n+ \"structopt 0.2.18\",\n  \"url 1.7.2\",\n ]\n \n@@ -2033,18 +2113,6 @@ version = \"0.1.12\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"9a2228dca57108069a5262f2ed8bd2e82496d2e074a06d1ccc7ce1687b6ae0a2\"\n \n-[[package]]\n-name = \"num-derive\"\n-version = \"0.2.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8af1847c907c2f04d7bfd572fb25bbb4385c637fe5be163cf2f8c5d778fe1e7d\"\n-dependencies = [\n- \"num-traits\",\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n-]\n-\n [[package]]\n name = \"num-integer\"\n version = \"0.1.39\"\n@@ -2178,14 +2246,43 @@ dependencies = [\n  \"unwind\",\n ]\n \n+[[package]]\n+name = \"parity-tokio-ipc\"\n+version = \"0.2.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"8281bf4f1d6429573f89589bf68d89451c46750977a8264f8ea3edbabeba7947\"\n+dependencies = [\n+ \"bytes\",\n+ \"futures\",\n+ \"log\",\n+ \"mio-named-pipes\",\n+ \"miow 0.3.3\",\n+ \"rand 0.7.0\",\n+ \"tokio\",\n+ \"tokio-named-pipes\",\n+ \"tokio-uds\",\n+ \"winapi 0.3.6\",\n+]\n+\n [[package]]\n name = \"parking_lot\"\n version = \"0.7.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"ab41b4aed082705d1056416ae4468b6ea99d52599ecf3169b00088d43113e337\"\n dependencies = [\n- \"lock_api\",\n- \"parking_lot_core\",\n+ \"lock_api 0.1.3\",\n+ \"parking_lot_core 0.4.0\",\n+]\n+\n+[[package]]\n+name = \"parking_lot\"\n+version = \"0.9.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"f842b1982eb6c2fe34036a4fbfb06dd185a3f5c8edfaacdf7d1ea10b07de6252\"\n+dependencies = [\n+ \"lock_api 0.3.1\",\n+ \"parking_lot_core 0.6.2\",\n+ \"rustc_version\",\n ]\n \n [[package]]\n@@ -2201,6 +2298,21 @@ dependencies = [\n  \"winapi 0.3.6\",\n ]\n \n+[[package]]\n+name = \"parking_lot_core\"\n+version = \"0.6.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"b876b1b9e7ac6e1a74a6da34d25c42e17e8862aa409cbbbdcfc8d86c6f3bc62b\"\n+dependencies = [\n+ \"cfg-if\",\n+ \"cloudabi\",\n+ \"libc\",\n+ \"redox_syscall\",\n+ \"rustc_version\",\n+ \"smallvec\",\n+ \"winapi 0.3.6\",\n+]\n+\n [[package]]\n name = \"percent-encoding\"\n version = \"1.0.1\"\n@@ -2240,9 +2352,9 @@ checksum = \"63120576c4efd69615b5537d3d052257328a4ca82876771d6944424ccfd9f646\"\n dependencies = [\n  \"pest\",\n  \"pest_meta\",\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n+ \"syn 0.15.35\",\n ]\n \n [[package]]\n@@ -2355,6 +2467,26 @@ dependencies = [\n  \"log\",\n ]\n \n+[[package]]\n+name = \"proc-macro-crate\"\n+version = \"0.1.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"e10d4b51f154c8a7fb96fd6dad097cb74b863943ec010ac94b9fd1be8861fe1e\"\n+dependencies = [\n+ \"toml\",\n+]\n+\n+[[package]]\n+name = \"proc-macro-error\"\n+version = \"0.2.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"aeccfe4d5d8ea175d5f0e4a2ad0637e0f4121d63bd99d356fb1f39ab2e7c6097\"\n+dependencies = [\n+ \"proc-macro2 1.0.3\",\n+ \"quote 1.0.2\",\n+ \"syn 1.0.5\",\n+]\n+\n [[package]]\n name = \"proc-macro2\"\n version = \"0.4.30\"\n@@ -2364,6 +2496,15 @@ dependencies = [\n  \"unicode-xid 0.1.0\",\n ]\n \n+[[package]]\n+name = \"proc-macro2\"\n+version = \"1.0.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"e98a83a9f9b331f54b924e68a66acb1bb35cb01fb0a23645139967abefb697e8\"\n+dependencies = [\n+ \"unicode-xid 0.2.0\",\n+]\n+\n [[package]]\n name = \"proc_macro\"\n version = \"0.0.0\"\n@@ -2416,14 +2557,23 @@ version = \"0.6.12\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"faf4799c5d274f3868a4aae320a0a182cbd2baee377b378f080e16a23e9d80db\"\n dependencies = [\n- \"proc-macro2\",\n+ \"proc-macro2 0.4.30\",\n+]\n+\n+[[package]]\n+name = \"quote\"\n+version = \"1.0.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"053a8c8bcc71fcce321828dc897a98ab9760bef03a4fc36693c231e5b3216cfe\"\n+dependencies = [\n+ \"proc-macro2 1.0.3\",\n ]\n \n [[package]]\n name = \"racer\"\n-version = \"2.1.25\"\n+version = \"2.1.27\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0727b9d7baaf9e42851145545d7b980b5c1752bd16a4c77c925c5e573d0069d9\"\n+checksum = \"dde22b84ab75220015cbd91240222402bf885cbe3a5dc856475771abb82533ae\"\n dependencies = [\n  \"bitflags\",\n  \"clap\",\n@@ -2715,7 +2865,7 @@ checksum = \"cabe4fa914dec5870285fa7f71f602645da47c486e68486d2b4ceb4a343e90ac\"\n \n [[package]]\n name = \"rls\"\n-version = \"1.38.0\"\n+version = \"1.39.0\"\n dependencies = [\n  \"cargo\",\n  \"cargo_metadata\",\n@@ -2726,7 +2876,7 @@ dependencies = [\n  \"failure\",\n  \"futures\",\n  \"heck\",\n- \"home 0.3.3\",\n+ \"home\",\n  \"itertools 0.8.0\",\n  \"jsonrpc-core\",\n  \"lazy_static 1.3.0\",\n@@ -2741,6 +2891,7 @@ dependencies = [\n  \"regex\",\n  \"rls-analysis\",\n  \"rls-data\",\n+ \"rls-ipc\",\n  \"rls-rustc\",\n  \"rls-span\",\n  \"rls-vfs\",\n@@ -2750,14 +2901,14 @@ dependencies = [\n  \"rustfmt-nightly\",\n  \"serde\",\n  \"serde_derive\",\n- \"serde_ignored 0.0.4\",\n+ \"serde_ignored\",\n  \"serde_json\",\n  \"tempfile\",\n  \"tokio\",\n  \"tokio-process\",\n  \"tokio-timer\",\n  \"toml\",\n- \"url 1.7.2\",\n+ \"url 2.1.0\",\n  \"walkdir\",\n ]\n \n@@ -2788,9 +2939,33 @@ dependencies = [\n  \"serde\",\n ]\n \n+[[package]]\n+name = \"rls-ipc\"\n+version = \"0.1.0\"\n+dependencies = [\n+ \"jsonrpc-core\",\n+ \"jsonrpc-core-client\",\n+ \"jsonrpc-derive\",\n+ \"jsonrpc-ipc-server\",\n+ \"rls-data\",\n+ \"serde\",\n+]\n+\n [[package]]\n name = \"rls-rustc\"\n version = \"0.6.0\"\n+dependencies = [\n+ \"clippy_lints\",\n+ \"env_logger\",\n+ \"failure\",\n+ \"futures\",\n+ \"log\",\n+ \"rand 0.6.1\",\n+ \"rls-data\",\n+ \"rls-ipc\",\n+ \"serde\",\n+ \"tokio\",\n+]\n \n [[package]]\n name = \"rls-span\"\n@@ -2837,7 +3012,7 @@ dependencies = [\n  \"log\",\n  \"measureme\",\n  \"num_cpus\",\n- \"parking_lot\",\n+ \"parking_lot 0.7.1\",\n  \"polonius-engine\",\n  \"rustc-rayon\",\n  \"rustc-rayon-core\",\n@@ -2856,25 +3031,25 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-arena\"\n-version = \"546.0.0\"\n+version = \"583.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"4dc2e1e68b64268c543bfa6e63e3c0d9ea58074c71396f42f76931f35a9287f9\"\n+checksum = \"f59b76d334bd533f3fdc5c651c27678c5e80fac67c6f7da22ba21a58878c55f5\"\n dependencies = [\n  \"rustc-ap-rustc_data_structures\",\n  \"smallvec\",\n ]\n \n [[package]]\n name = \"rustc-ap-graphviz\"\n-version = \"546.0.0\"\n+version = \"583.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c108d647ce0dd46477b048eafff5a6273b5652e02d47424b0cd684147379c811\"\n+checksum = \"3e632ef08ca17458acfd46d2ead3d541a1c249586cd5329f5fe333dacfab6142\"\n \n [[package]]\n name = \"rustc-ap-rustc_data_structures\"\n-version = \"546.0.0\"\n+version = \"583.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"656771744e0783cb8e4481e3b8b1f975687610aaf18833b898018111a0e0e582\"\n+checksum = \"e89e2c7be68185418f3cd56af3df8b29007a59a1cebefa63612d055f9bcb1a36\"\n dependencies = [\n  \"cfg-if\",\n  \"crossbeam-utils 0.6.5\",\n@@ -2883,7 +3058,7 @@ dependencies = [\n  \"jobserver\",\n  \"lazy_static 1.3.0\",\n  \"log\",\n- \"parking_lot\",\n+ \"parking_lot 0.7.1\",\n  \"rustc-ap-graphviz\",\n  \"rustc-ap-serialize\",\n  \"rustc-hash\",\n@@ -2895,44 +3070,48 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_errors\"\n-version = \"546.0.0\"\n+version = \"583.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e37064f6624bc799bfaa2968b61ee6880926dea2a8bba69f18aef6c8e69c9604\"\n+checksum = \"1e47cb380abeb72b01e42b2342d592f7eeea7d536c2f1f0d0e550dc509e46333\"\n dependencies = [\n  \"annotate-snippets\",\n  \"atty\",\n  \"log\",\n  \"rustc-ap-rustc_data_structures\",\n  \"rustc-ap-serialize\",\n  \"rustc-ap-syntax_pos\",\n+ \"term_size\",\n  \"termcolor\",\n  \"unicode-width\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_lexer\"\n-version = \"546.0.0\"\n+version = \"583.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ef5bc0a971823637ea23a857f0ef1467f44b1e05d71968821f83a0abe53e0fe3\"\n+checksum = \"494cfaf67f49217d67d0774eeecbba61ac89acf478db97ef11f113ed8a959305\"\n+dependencies = [\n+ \"unicode-xid 0.2.0\",\n+]\n \n [[package]]\n name = \"rustc-ap-rustc_macros\"\n-version = \"546.0.0\"\n+version = \"583.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b90037e3336fe8835f468db44d0848ae10d9cc8533ae89b55828883f905b7e80\"\n+checksum = \"e2e5d36becc59b4497f9cbd3ae0610081de0207a1d0e95c066369167b14f486f\"\n dependencies = [\n  \"itertools 0.8.0\",\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n+ \"syn 0.15.35\",\n  \"synstructure\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_target\"\n-version = \"546.0.0\"\n+version = \"583.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"cadf9ca07315eab3a7a21f63872f9cc81e250fd6ede0419c24f8926ade73a45d\"\n+checksum = \"a7bfc5f96dfc3b9f8d5b57884f7f37467ecff6776cd4b8b491a7daece6fdd7c2\"\n dependencies = [\n  \"bitflags\",\n  \"log\",\n@@ -2943,19 +3122,19 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-serialize\"\n-version = \"546.0.0\"\n+version = \"583.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"61673783f2089e01033ffa82d1988f55175402071b31253a358292e1624d4602\"\n+checksum = \"2bb9ee231cf79eded39c56647499f83d6136ff5c8c0baaa9e21b6febee00f4f6\"\n dependencies = [\n  \"indexmap\",\n  \"smallvec\",\n ]\n \n [[package]]\n name = \"rustc-ap-syntax\"\n-version = \"546.0.0\"\n+version = \"583.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"28f3dd1346d5b0269c07a4a78855e309a298ab569c9c1302d4d4f57f8eee4e84\"\n+checksum = \"b3827fc208814efbde82d613e31d11b4250ce9e8cf8afe4a4d47bbbd099632c9\"\n dependencies = [\n  \"bitflags\",\n  \"lazy_static 1.3.0\",\n@@ -2973,9 +3152,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-syntax_pos\"\n-version = \"546.0.0\"\n+version = \"583.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"45e67b526dbda3a0c7dab91c8947d43685e7697f52686a4949da3c179cd7c979\"\n+checksum = \"930ed81c34f325e512cc315c04d676fa84a373879d5c43bb54054a0522b05213\"\n dependencies = [\n  \"cfg-if\",\n  \"rustc-ap-arena\",\n@@ -3046,21 +3225,21 @@ checksum = \"dcf128d1287d2ea9d80910b5f1120d0b8eede3fbf1abe91c40d39ea7d51e6fda\"\n \n [[package]]\n name = \"rustc-std-workspace-alloc\"\n-version = \"1.0.0\"\n+version = \"1.99.0\"\n dependencies = [\n  \"alloc\",\n ]\n \n [[package]]\n name = \"rustc-std-workspace-core\"\n-version = \"1.0.0\"\n+version = \"1.99.0\"\n dependencies = [\n  \"core\",\n ]\n \n [[package]]\n name = \"rustc-std-workspace-std\"\n-version = \"1.0.0\"\n+version = \"1.99.0\"\n dependencies = [\n  \"std\",\n ]\n@@ -3071,13 +3250,13 @@ version = \"1.0.0\"\n dependencies = [\n  \"byteorder\",\n  \"crossbeam-utils 0.6.5\",\n- \"parking_lot\",\n+ \"parking_lot 0.7.1\",\n  \"rand 0.6.1\",\n  \"scopeguard 0.3.3\",\n  \"serde\",\n  \"serde_json\",\n  \"smallvec\",\n- \"syn\",\n+ \"syn 0.15.35\",\n  \"winapi 0.3.6\",\n ]\n \n@@ -3131,7 +3310,7 @@ dependencies = [\n  \"log\",\n  \"memmap\",\n  \"num_cpus\",\n- \"parking_lot\",\n+ \"parking_lot 0.7.1\",\n  \"rustc\",\n  \"rustc_apfloat\",\n  \"rustc_codegen_utils\",\n@@ -3174,7 +3353,7 @@ dependencies = [\n  \"jobserver\",\n  \"lazy_static 1.3.0\",\n  \"log\",\n- \"parking_lot\",\n+ \"parking_lot 0.7.1\",\n  \"rustc-hash\",\n  \"rustc-rayon\",\n  \"rustc-rayon-core\",\n@@ -3232,7 +3411,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"graphviz\",\n  \"log\",\n- \"rand 0.6.1\",\n+ \"rand 0.7.0\",\n  \"rustc\",\n  \"rustc_data_structures\",\n  \"rustc_fs_util\",\n@@ -3314,9 +3493,9 @@ name = \"rustc_macros\"\n version = \"0.1.0\"\n dependencies = [\n  \"itertools 0.8.0\",\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n+ \"syn 0.15.35\",\n  \"synstructure\",\n ]\n \n@@ -3555,20 +3734,19 @@ dependencies = [\n \n [[package]]\n name = \"rustfmt-config_proc_macro\"\n-version = \"0.1.2\"\n+version = \"0.2.0\"\n dependencies = [\n- \"proc-macro2\",\n- \"quote\",\n+ \"proc-macro2 1.0.3\",\n+ \"quote 1.0.2\",\n  \"serde\",\n- \"syn\",\n+ \"syn 1.0.5\",\n ]\n \n [[package]]\n name = \"rustfmt-nightly\"\n-version = \"1.4.6\"\n+version = \"1.4.8\"\n dependencies = [\n  \"annotate-snippets\",\n- \"atty\",\n  \"bytecount\",\n  \"cargo_metadata\",\n  \"derive-new\",\n@@ -3589,7 +3767,7 @@ dependencies = [\n  \"rustfmt-config_proc_macro\",\n  \"serde\",\n  \"serde_json\",\n- \"structopt\",\n+ \"structopt 0.3.1\",\n  \"term 0.6.0\",\n  \"toml\",\n  \"unicode-segmentation\",\n@@ -3698,18 +3876,9 @@ version = \"1.0.81\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"477b13b646f5b5b56fc95bedfc3b550d12141ce84f466f6c44b9a17589923885\"\n dependencies = [\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n-]\n-\n-[[package]]\n-name = \"serde_ignored\"\n-version = \"0.0.4\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"190e9765dcedb56be63b6e0993a006c7e3b071a016a304736e4a315dc01fb142\"\n-dependencies = [\n- \"serde\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n+ \"syn 0.15.35\",\n ]\n \n [[package]]\n@@ -3732,6 +3901,17 @@ dependencies = [\n  \"serde\",\n ]\n \n+[[package]]\n+name = \"serde_repr\"\n+version = \"0.1.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"cd02c7587ec314570041b2754829f84d873ced14a96d1fd1823531e11db40573\"\n+dependencies = [\n+ \"proc-macro2 1.0.3\",\n+ \"quote 1.0.2\",\n+ \"syn 1.0.5\",\n+]\n+\n [[package]]\n name = \"serde_urlencoded\"\n version = \"0.5.5\"\n@@ -3848,7 +4028,7 @@ dependencies = [\n  \"panic_abort\",\n  \"panic_unwind\",\n  \"profiler_builtins\",\n- \"rand 0.6.1\",\n+ \"rand 0.7.0\",\n  \"rustc_asan\",\n  \"rustc_lsan\",\n  \"rustc_msan\",\n@@ -3889,8 +4069,8 @@ checksum = \"1eea1eee654ef80933142157fdad9dd8bc43cf7c74e999e369263496f04ff4da\"\n dependencies = [\n  \"phf_generator\",\n  \"phf_shared\",\n- \"proc-macro2\",\n- \"quote\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n  \"string_cache_shared\",\n ]\n \n@@ -3911,9 +4091,9 @@ dependencies = [\n \n [[package]]\n name = \"strsim\"\n-version = \"0.7.0\"\n+version = \"0.8.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"bb4f380125926a99e52bc279241539c018323fab05ad6368b56f93d9369ff550\"\n+checksum = \"8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a\"\n \n [[package]]\n name = \"structopt\"\n@@ -3922,7 +4102,17 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"16c2cdbf9cc375f15d1b4141bc48aeef444806655cd0e904207edc8d68d86ed7\"\n dependencies = [\n  \"clap\",\n- \"structopt-derive\",\n+ \"structopt-derive 0.2.18\",\n+]\n+\n+[[package]]\n+name = \"structopt\"\n+version = \"0.3.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"2ac9d6e93dd792b217bf89cda5c14566e3043960c6f9da890c2ba5d09d07804c\"\n+dependencies = [\n+ \"clap\",\n+ \"structopt-derive 0.3.1\",\n ]\n \n [[package]]\n@@ -3932,9 +4122,22 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"53010261a84b37689f9ed7d395165029f9cc7abb9f56bbfe86bee2597ed25107\"\n dependencies = [\n  \"heck\",\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n+ \"syn 0.15.35\",\n+]\n+\n+[[package]]\n+name = \"structopt-derive\"\n+version = \"0.3.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"2ae9e5165d463a0dea76967d021f8d0f9316057bf5163aa2a4843790e842ff37\"\n+dependencies = [\n+ \"heck\",\n+ \"proc-macro-error\",\n+ \"proc-macro2 1.0.3\",\n+ \"quote 1.0.2\",\n+ \"syn 1.0.5\",\n ]\n \n [[package]]\n@@ -3950,9 +4153,9 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"8baacebd7b7c9b864d83a6ba7a246232983e277b86fa5cdec77f565715a4b136\"\n dependencies = [\n  \"heck\",\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n+ \"syn 0.15.35\",\n ]\n \n [[package]]\n@@ -3961,20 +4164,31 @@ version = \"0.15.35\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"641e117d55514d6d918490e47102f7e08d096fdde360247e4a10f7a91a8478d3\"\n dependencies = [\n- \"proc-macro2\",\n- \"quote\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n  \"unicode-xid 0.1.0\",\n ]\n \n+[[package]]\n+name = \"syn\"\n+version = \"1.0.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"66850e97125af79138385e9b88339cbcd037e3f28ceab8c5ad98e64f0f1f80bf\"\n+dependencies = [\n+ \"proc-macro2 1.0.3\",\n+ \"quote 1.0.2\",\n+ \"unicode-xid 0.2.0\",\n+]\n+\n [[package]]\n name = \"synstructure\"\n version = \"0.10.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"02353edf96d6e4dc81aea2d8490a7e9db177bf8acb0e951c24940bf866cb313f\"\n dependencies = [\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n+ \"proc-macro2 0.4.30\",\n+ \"quote 0.6.12\",\n+ \"syn 0.15.35\",\n  \"unicode-xid 0.1.0\",\n ]\n \n@@ -4154,9 +4368,9 @@ dependencies = [\n \n [[package]]\n name = \"textwrap\"\n-version = \"0.10.0\"\n+version = \"0.11.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"307686869c93e71f94da64286f9a9524c0f308a9e1c87a583de8e9c9039ad3f6\"\n+checksum = \"d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060\"\n dependencies = [\n  \"unicode-width\",\n ]\n@@ -4279,6 +4493,19 @@ dependencies = [\n  \"log\",\n ]\n \n+[[package]]\n+name = \"tokio-named-pipes\"\n+version = \"0.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"9d282d483052288b2308ba5ee795f5673b159c9bdf63c385a05609da782a5eae\"\n+dependencies = [\n+ \"bytes\",\n+ \"futures\",\n+ \"mio\",\n+ \"mio-named-pipes\",\n+ \"tokio\",\n+]\n+\n [[package]]\n name = \"tokio-process\"\n version = \"0.2.3\"\n@@ -4307,12 +4534,21 @@ dependencies = [\n  \"log\",\n  \"mio\",\n  \"num_cpus\",\n- \"parking_lot\",\n+ \"parking_lot 0.7.1\",\n  \"slab\",\n  \"tokio-executor\",\n  \"tokio-io\",\n ]\n \n+[[package]]\n+name = \"tokio-service\"\n+version = \"0.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"24da22d077e0f15f55162bdbdc661228c1581892f52074fb242678d015b45162\"\n+dependencies = [\n+ \"futures\",\n+]\n+\n [[package]]\n name = \"tokio-signal\"\n version = \"0.2.7\"\n@@ -4436,8 +4672,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"3c99ca245ec273c7e75c8ee58f47b882d0146f3c2c8495158082c6671e8b5335\"\n dependencies = [\n  \"darling\",\n- \"quote\",\n- \"syn\",\n+ \"quote 0.6.12\",\n+ \"syn 0.15.35\",\n ]\n \n [[package]]\n@@ -4574,16 +4810,6 @@ dependencies = [\n  \"serde\",\n ]\n \n-[[package]]\n-name = \"url_serde\"\n-version = \"0.2.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"74e7d099f1ee52f823d4bdd60c93c3602043c728f5db3b97bdb548467f7bddea\"\n-dependencies = [\n- \"serde\",\n- \"url 1.7.2\",\n-]\n-\n [[package]]\n name = \"utf-8\"\n version = \"0.7.2\""}, {"sha": "659c4c89fe33c41272a68b3e073eb1b1abfe7413", "filename": "src/librustc_incremental/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Flibrustc_incremental%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Flibrustc_incremental%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2FCargo.toml?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -12,7 +12,7 @@ doctest = false\n [dependencies]\n graphviz = { path = \"../libgraphviz\" }\n log = \"0.4\"\n-rand = \"0.6\"\n+rand = \"0.7\"\n rustc = { path = \"../librustc\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }"}, {"sha": "eb509f1a01d6765b2f05587549869c58353137f3", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 55, "deletions": 34, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -71,7 +71,7 @@ pub enum ImportDirectiveSubclass<'a> {\n }\n \n /// One import directive.\n-#[derive(Debug,Clone)]\n+#[derive(Debug, Clone)]\n crate struct ImportDirective<'a> {\n     /// The ID of the `extern crate`, `UseTree` etc that imported this `ImportDirective`.\n     ///\n@@ -447,12 +447,13 @@ impl<'a> Resolver<'a> {\n     }\n \n     // Define the name or return the existing binding if there is a collision.\n-    pub fn try_define(&mut self,\n-                      module: Module<'a>,\n-                      ident: Ident,\n-                      ns: Namespace,\n-                      binding: &'a NameBinding<'a>)\n-                      -> Result<(), &'a NameBinding<'a>> {\n+    pub fn try_define(\n+        &mut self,\n+        module: Module<'a>,\n+        ident: Ident,\n+        ns: Namespace,\n+        binding: &'a NameBinding<'a>,\n+    ) -> Result<(), &'a NameBinding<'a>> {\n         let res = binding.res();\n         self.check_reserved_macro_name(ident, res);\n         self.set_binding_parent_module(binding, module);\n@@ -480,8 +481,11 @@ impl<'a> Resolver<'a> {\n                         };\n                         if glob_binding.res() != nonglob_binding.res() &&\n                            ns == MacroNS && nonglob_binding.expansion != ExpnId::root() {\n-                            resolution.binding = Some(this.ambiguity(AmbiguityKind::GlobVsExpanded,\n-                                                                    nonglob_binding, glob_binding));\n+                            resolution.binding = Some(this.ambiguity(\n+                                AmbiguityKind::GlobVsExpanded,\n+                                nonglob_binding,\n+                                glob_binding,\n+                            ));\n                         } else {\n                             resolution.binding = Some(nonglob_binding);\n                         }\n@@ -513,9 +517,11 @@ impl<'a> Resolver<'a> {\n         })\n     }\n \n-    fn ambiguity(&self, kind: AmbiguityKind,\n-                 primary_binding: &'a NameBinding<'a>, secondary_binding: &'a NameBinding<'a>)\n-                 -> &'a NameBinding<'a> {\n+    fn ambiguity(\n+        &self, kind: AmbiguityKind,\n+        primary_binding: &'a NameBinding<'a>,\n+        secondary_binding: &'a NameBinding<'a>,\n+    ) -> &'a NameBinding<'a> {\n         self.arenas.alloc_name_binding(NameBinding {\n             ambiguity: Some((secondary_binding, kind)),\n             ..primary_binding.clone()\n@@ -524,8 +530,12 @@ impl<'a> Resolver<'a> {\n \n     // Use `f` to mutate the resolution of the name in the module.\n     // If the resolution becomes a success, define it in the module's glob importers.\n-    fn update_resolution<T, F>(&mut self, module: Module<'a>, ident: Ident, ns: Namespace, f: F)\n-                               -> T\n+    fn update_resolution<T, F>(\n+        &mut self, module: Module<'a>,\n+        ident: Ident,\n+        ns: Namespace,\n+        f: F,\n+    ) -> T\n         where F: FnOnce(&mut Resolver<'a>, &mut NameResolution<'a>) -> T\n     {\n         // Ensure that `resolution` isn't borrowed when defining in the module's glob importers,\n@@ -627,14 +637,18 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n             self.finalize_resolutions_in(module);\n         }\n \n-        let mut has_errors = false;\n         let mut seen_spans = FxHashSet::default();\n         let mut errors = vec![];\n         let mut prev_root_id: NodeId = NodeId::from_u32(0);\n-        for i in 0 .. self.r.determined_imports.len() {\n-            let import = self.r.determined_imports[i];\n+        let determined_imports = mem::take(&mut self.r.determined_imports);\n+        let indeterminate_imports = mem::take(&mut self.r.indeterminate_imports);\n+\n+        for (is_indeterminate, import) in determined_imports\n+            .into_iter()\n+            .map(|i| (false, i))\n+            .chain(indeterminate_imports.into_iter().map(|i| (true, i)))\n+        {\n             if let Some(err) = self.finalize_import(import) {\n-                has_errors = true;\n \n                 if let SingleImport { source, ref source_bindings, .. } = import.subclass {\n                     if source.name == kw::SelfLower {\n@@ -666,25 +680,27 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n                     errors.push((path, err));\n                     prev_root_id = import.root_id;\n                 }\n+            } else if is_indeterminate {\n+                // Consider erroneous imports used to avoid duplicate diagnostics.\n+                self.r.used_imports.insert((import.id, TypeNS));\n+                let path = import_path_to_string(\n+                    &import.module_path.iter().map(|seg| seg.ident).collect::<Vec<_>>(),\n+                    &import.subclass,\n+                    import.span,\n+                );\n+                let err = UnresolvedImportError {\n+                    span: import.span,\n+                    label: None,\n+                    note: Vec::new(),\n+                    suggestion: None,\n+                };\n+                errors.push((path, err));\n             }\n         }\n \n         if !errors.is_empty() {\n             self.throw_unresolved_import_error(errors.clone(), None);\n         }\n-\n-        for import in &self.r.indeterminate_imports {\n-            // Consider erroneous imports used to avoid duplicate diagnostics.\n-            self.r.used_imports.insert((import.id, TypeNS));\n-        }\n-        // Report unresolved imports only if no hard error was already reported\n-        // to avoid generating multiple errors on the same import.\n-        if !has_errors {\n-            for import in &self.r.indeterminate_imports {\n-                self.throw_unresolved_import_error(errors, Some(MultiSpan::from(import.span)));\n-                break;\n-            }\n-        }\n     }\n \n     fn throw_unresolved_import_error(\n@@ -839,8 +855,14 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n     ) -> Option<UnresolvedImportError> {\n         let orig_vis = directive.vis.replace(ty::Visibility::Invisible);\n         let prev_ambiguity_errors_len = self.r.ambiguity_errors.len();\n-        let path_res = self.r.resolve_path(&directive.module_path, None, &directive.parent_scope,\n-                                         true, directive.span, directive.crate_lint());\n+        let path_res = self.r.resolve_path(\n+            &directive.module_path,\n+            None,\n+            &directive.parent_scope,\n+            true,\n+            directive.span,\n+            directive.crate_lint(),\n+        );\n         let no_ambiguity = self.r.ambiguity_errors.len() == prev_ambiguity_errors_len;\n         directive.vis.set(orig_vis);\n         if let PathResult::Failed { .. } | PathResult::NonModule(..) = path_res {\n@@ -903,7 +925,6 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n                             }\n                         }\n                     };\n-\n                     return Some(err);\n                 }\n                 return None;"}, {"sha": "20442abc58890adeab42a111cbe53dd988baf4e5", "filename": "src/libstd/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Flibstd%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Flibstd%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2FCargo.toml?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -38,7 +38,7 @@ features = [\n optional = true\n \n [dev-dependencies]\n-rand = \"0.6.1\"\n+rand = \"0.7\"\n \n [target.x86_64-apple-darwin.dependencies]\n rustc_asan = { path = \"../librustc_asan\" }"}, {"sha": "b14e02a2cb478b027b99be3d0935a74128dc9490", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -2144,7 +2144,7 @@ mod tests {\n     use crate::sys_common::io::test::{TempDir, tmpdir};\n     use crate::thread;\n \n-    use rand::{rngs::StdRng, FromEntropy, RngCore};\n+    use rand::{rngs::StdRng, RngCore, SeedableRng};\n \n     #[cfg(windows)]\n     use crate::os::windows::fs::{symlink_dir, symlink_file};"}, {"sha": "f8014cb2ad9af38898ce7fcfb1e817275a10180c", "filename": "src/libstd/tests/env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Flibstd%2Ftests%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Flibstd%2Ftests%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftests%2Fenv.rs?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -5,7 +5,7 @@ use rand::{thread_rng, Rng};\n use rand::distributions::Alphanumeric;\n \n fn make_rand_name() -> OsString {\n-    let mut rng = thread_rng();\n+    let rng = thread_rng();\n     let n = format!(\"TEST{}\", rng.sample_iter(&Alphanumeric).take(10)\n                                  .collect::<String>());\n     let n = OsString::from(n);"}, {"sha": "71fe7ec06b85f612fc0e4eb4134c7a7d0f23fac5", "filename": "src/llvm-project", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm-project?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -1 +1 @@\n-Subproject commit 48818e9f5d0f2d5978a9b43ad1a2e8d0b83f6aa0\n+Subproject commit 71fe7ec06b85f612fc0e4eb4134c7a7d0f23fac5"}, {"sha": "64c4107e898757c2c6bcb143efa2902f42012155", "filename": "src/test/ui/extenv/issue-55897.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftest%2Fui%2Fextenv%2Fissue-55897.rs", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftest%2Fui%2Fextenv%2Fissue-55897.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextenv%2Fissue-55897.rs?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -1,7 +1,7 @@\n use prelude::*; //~ ERROR unresolved import `prelude`\n \n mod unresolved_env {\n-    use env;\n+    use env; //~ ERROR unresolved import `env`\n \n     include!(concat!(env!(\"NON_EXISTENT\"), \"/data.rs\"));\n     //~^ ERROR cannot determine resolution for the macro `env`"}, {"sha": "c57a467cdba568f17c5dab1a1da5ab1610fab15b", "filename": "src/test/ui/extenv/issue-55897.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftest%2Fui%2Fextenv%2Fissue-55897.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftest%2Fui%2Fextenv%2Fissue-55897.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextenv%2Fissue-55897.stderr?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -19,6 +19,12 @@ LL | use prelude::*;\n    |     unresolved import\n    |     help: a similar path exists: `std::prelude`\n \n+error[E0432]: unresolved import `env`\n+  --> $DIR/issue-55897.rs:4:9\n+   |\n+LL |     use env;\n+   |         ^^^ no `env` in the root\n+\n error: cannot determine resolution for the macro `env`\n   --> $DIR/issue-55897.rs:6:22\n    |\n@@ -27,6 +33,6 @@ LL |     include!(concat!(env!(\"NON_EXISTENT\"), \"/data.rs\"));\n    |\n    = note: import resolution is stuck, try simplifying macro imports\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 5 previous errors\n \n For more information about this error, try `rustc --explain E0432`."}, {"sha": "75cf880192c8eb708b35e386013c1af27c82ea49", "filename": "src/test/ui/imports/unresolved-imports-used.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.rs?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -8,11 +8,11 @@ mod qux {\n \n use qux::quz;  //~ ERROR function `quz` is private\n use qux::bar;  //~ ERROR unresolved import `qux::bar`\n-use foo::bar;\n-use baz::*;\n+use foo::bar;  //~ ERROR unresolved import `foo`\n+use baz::*;    //~ ERROR unresolved import `baz`\n use qux::bar2; //~ ERROR unresolved import `qux::bar2`\n-use foo2::bar2;\n-use baz2::*;\n+use foo2::bar2;//~ ERROR unresolved import `foo2`\n+use baz2::*;   //~ ERROR unresolved import `baz2`\n use qux::quy;  //~ ERROR unused import\n \n fn main() {}"}, {"sha": "b341e8e0592883863299c6e7800402a3f0363d12", "filename": "src/test/ui/imports/unresolved-imports-used.stderr", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -10,6 +10,30 @@ error[E0432]: unresolved import `qux::bar2`\n LL | use qux::bar2;\n    |     ^^^^^^^^^ no `bar2` in `qux`\n \n+error[E0432]: unresolved import `foo`\n+  --> $DIR/unresolved-imports-used.rs:11:5\n+   |\n+LL | use foo::bar;\n+   |     ^^^ maybe a missing crate `foo`?\n+\n+error[E0432]: unresolved import `baz`\n+  --> $DIR/unresolved-imports-used.rs:12:5\n+   |\n+LL | use baz::*;\n+   |     ^^^ maybe a missing crate `baz`?\n+\n+error[E0432]: unresolved import `foo2`\n+  --> $DIR/unresolved-imports-used.rs:14:5\n+   |\n+LL | use foo2::bar2;\n+   |     ^^^^ maybe a missing crate `foo2`?\n+\n+error[E0432]: unresolved import `baz2`\n+  --> $DIR/unresolved-imports-used.rs:15:5\n+   |\n+LL | use baz2::*;\n+   |     ^^^^ maybe a missing crate `baz2`?\n+\n error[E0603]: function `quz` is private\n   --> $DIR/unresolved-imports-used.rs:9:10\n    |\n@@ -28,7 +52,7 @@ note: lint level defined here\n LL | #![deny(unused_imports)]\n    |         ^^^^^^^^^^^^^^\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 8 previous errors\n \n Some errors have detailed explanations: E0432, E0603.\n For more information about an error, try `rustc --explain E0432`."}, {"sha": "83ed70a0459a8dc211da08f86c0368966fde5797", "filename": "src/test/ui/rust-2018/uniform-paths/deadlock.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fdeadlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fdeadlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fdeadlock.rs?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -1,7 +1,7 @@\n // edition:2018\n // compile-flags:--extern foo --extern bar\n \n-use foo::bar; //~ ERROR unresolved import\n+use foo::bar; //~ ERROR can't find crate for `foo`\n use bar::foo;\n \n fn main() {}"}, {"sha": "9336e90afb71d23b5497ac491ebc3d16ca4d62eb", "filename": "src/test/ui/rust-2018/uniform-paths/deadlock.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fdeadlock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fdeadlock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fdeadlock.stderr?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -1,9 +1,9 @@\n-error[E0432]: unresolved import\n+error[E0463]: can't find crate for `foo`\n   --> $DIR/deadlock.rs:4:5\n    |\n LL | use foo::bar;\n-   |     ^^^^^^^^\n+   |     ^^^ can't find crate\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0432`.\n+For more information about this error, try `rustc --explain E0463`."}, {"sha": "412fb00b37afb6b7f7fa96a35f2315c7e640b916", "filename": "src/tools/rls", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frls?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -1 +1 @@\n-Subproject commit 496c89275221303a4b0c2779cb8203fb3ce2a136\n+Subproject commit 412fb00b37afb6b7f7fa96a35f2315c7e640b916"}, {"sha": "9e04b14756e06db82fca41265eca6c2173a7d1ec", "filename": "src/tools/rustc-std-workspace-alloc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftools%2Frustc-std-workspace-alloc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftools%2Frustc-std-workspace-alloc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustc-std-workspace-alloc%2FCargo.toml?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"rustc-std-workspace-alloc\"\n-version = \"1.0.0\"\n+version = \"1.99.0\"\n authors = [\"Alex Crichton <alex@alexcrichton.com>\"]\n license = 'MIT OR Apache-2.0'\n description = \"\"\""}, {"sha": "6b4e7540affc9745522e94ad8d30836a458ef04a", "filename": "src/tools/rustc-std-workspace-core/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftools%2Frustc-std-workspace-core%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftools%2Frustc-std-workspace-core%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustc-std-workspace-core%2FCargo.toml?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"rustc-std-workspace-core\"\n-version = \"1.0.0\"\n+version = \"1.99.0\"\n authors = [\"Alex Crichton <alex@alexcrichton.com>\"]\n license = 'MIT OR Apache-2.0'\n description = \"\"\""}, {"sha": "e41554b74affd9f1d77ab79a982c15408a70537f", "filename": "src/tools/rustc-std-workspace-std/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftools%2Frustc-std-workspace-std%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e/src%2Ftools%2Frustc-std-workspace-std%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustc-std-workspace-std%2FCargo.toml?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"rustc-std-workspace-std\"\n-version = \"1.0.0\"\n+version = \"1.99.0\"\n authors = [\"Alex Crichton <alex@alexcrichton.com>\"]\n license = 'MIT OR Apache-2.0'\n description = \"\"\""}, {"sha": "afb1ee1c14594aed5bb4a762b357b01f13c9de10", "filename": "src/tools/rustfmt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt?ref=122fefc63e4c2bab7f76bb24a7ab056b7bc7b37e", "patch": "@@ -1 +1 @@\n-Subproject commit f800ce47d1da2a1c02ffd260deca8b7445f7facf\n+Subproject commit afb1ee1c14594aed5bb4a762b357b01f13c9de10"}]}