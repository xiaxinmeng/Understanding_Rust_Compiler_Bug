{"sha": "0942c802725b4c2816f2232304cdd14b3e44cd3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5NDJjODAyNzI1YjRjMjgxNmYyMjMyMzA0Y2RkMTRiM2U0NGNkM2Y=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-03-06T04:54:19Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-03-16T01:12:17Z"}, "message": "core: fix trie chunk function", "tree": {"sha": "7ffb45ee35f0b9df74d7957f10341587cfeca1f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ffb45ee35f0b9df74d7957f10341587cfeca1f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0942c802725b4c2816f2232304cdd14b3e44cd3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0942c802725b4c2816f2232304cdd14b3e44cd3f", "html_url": "https://github.com/rust-lang/rust/commit/0942c802725b4c2816f2232304cdd14b3e44cd3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0942c802725b4c2816f2232304cdd14b3e44cd3f/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98900d55e7f08a4b4cb665152a01b0bbf655baae", "url": "https://api.github.com/repos/rust-lang/rust/commits/98900d55e7f08a4b4cb665152a01b0bbf655baae", "html_url": "https://github.com/rust-lang/rust/commit/98900d55e7f08a4b4cb665152a01b0bbf655baae"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "cf34ba774a85f049568a8654bda99808460f53c1", "filename": "src/libcore/trie.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0942c802725b4c2816f2232304cdd14b3e44cd3f/src%2Flibcore%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0942c802725b4c2816f2232304cdd14b3e44cd3f/src%2Flibcore%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftrie.rs?ref=0942c802725b4c2816f2232304cdd14b3e44cd3f", "patch": "@@ -272,8 +272,8 @@ impl<T> TrieNode<T> {\n // if this was done via a trait, the key could be generic\n #[inline(always)]\n pure fn chunk(n: uint, idx: uint) -> uint {\n-    let real_idx = uint::bytes - 1 - idx;\n-    (n >> (SHIFT * real_idx)) & MASK\n+    let sh = uint::bits - (SHIFT * (idx + 1));\n+    (n >> sh) & MASK\n }\n \n fn insert<T>(count: &mut uint, child: &mut Child<T>, key: uint, value: T,"}]}