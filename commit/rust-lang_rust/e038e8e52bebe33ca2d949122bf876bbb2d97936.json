{"sha": "e038e8e52bebe33ca2d949122bf876bbb2d97936", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMzhlOGU1MmJlYmUzM2NhMmQ5NDkxMjJiZjg3NmJiYjJkOTc5MzY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T23:35:02Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T23:35:02Z"}, "message": "rustc: Move ppaux away from exterior vectors", "tree": {"sha": "abc2da93f7d99508a7fb0737e33a1eb8059068f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abc2da93f7d99508a7fb0737e33a1eb8059068f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e038e8e52bebe33ca2d949122bf876bbb2d97936", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e038e8e52bebe33ca2d949122bf876bbb2d97936", "html_url": "https://github.com/rust-lang/rust/commit/e038e8e52bebe33ca2d949122bf876bbb2d97936", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e038e8e52bebe33ca2d949122bf876bbb2d97936/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60cffd711655d4755f825a8495d2d1629bc10e98", "url": "https://api.github.com/repos/rust-lang/rust/commits/60cffd711655d4755f825a8495d2d1629bc10e98", "html_url": "https://github.com/rust-lang/rust/commit/60cffd711655d4755f825a8495d2d1629bc10e98"}], "stats": {"total": 36, "additions": 14, "deletions": 22}, "files": [{"sha": "929f0bc3f10fb8a31f88df425f15274961332cf6", "filename": "src/comp/syntax/fold.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e038e8e52bebe33ca2d949122bf876bbb2d97936/src%2Fcomp%2Fsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e038e8e52bebe33ca2d949122bf876bbb2d97936/src%2Fcomp%2Fsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Ffold.rs?ref=e038e8e52bebe33ca2d949122bf876bbb2d97936", "patch": "@@ -2,9 +2,7 @@ import syntax::codemap::span;\n import ast::*;\n \n import std::ivec;\n-import std::vec;\n import std::option;\n-import vec::map;\n \n export ast_fold_precursor;\n export ast_fold;"}, {"sha": "8875208e2a8f762e5bbc50e22e78d13a1ddc23e0", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e038e8e52bebe33ca2d949122bf876bbb2d97936/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e038e8e52bebe33ca2d949122bf876bbb2d97936/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=e038e8e52bebe33ca2d949122bf876bbb2d97936", "patch": "@@ -1548,12 +1548,8 @@ fn constr_arg_to_str[T](&fn(&T) -> str f, &ast::constr_arg_general_[T] c) ->\n fn uint_to_str(&uint i) -> str { ret uint::str(i); }\n \n fn ast_constr_to_str(&@ast::constr c) -> str {\n-    // TODO: Remove this vec->ivec conversion.\n-    auto cags = ~[];\n-    for (@ast::constr_arg_general[uint] cag in c.node.args) {\n-        cags += ~[cag];\n-    }\n-    ret ast::path_to_str(c.node.path) + constr_args_to_str(uint_to_str, cags);\n+    ret ast::path_to_str(c.node.path) +\n+        constr_args_to_str(uint_to_str, c.node.args);\n }\n \n fn ast_constrs_str(&(@ast::constr)[] constrs) -> str {"}, {"sha": "a2e95cdd5ca927f147522e1806c21fea0c847182", "filename": "src/comp/util/ppaux.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e038e8e52bebe33ca2d949122bf876bbb2d97936/src%2Fcomp%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e038e8e52bebe33ca2d949122bf876bbb2d97936/src%2Fcomp%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Futil%2Fppaux.rs?ref=e038e8e52bebe33ca2d949122bf876bbb2d97936", "patch": "@@ -1,6 +1,5 @@\n import std::io;\n import std::ivec;\n-import std::vec;\n import std::str;\n import std::int;\n import std::option;\n@@ -107,23 +106,23 @@ fn ty_to_str(&ctxt cx, &t typ) -> str {\n         case (ty_type) { s += \"type\"; }\n         case (ty_task) { s += \"task\"; }\n         case (ty_tup(?elems)) {\n-            let vec[str] strs = [];\n-            for (mt tm in elems) { strs += [mt_to_str(cx, tm)]; }\n-            s += \"tup(\" + str::connect(strs, \",\") + \")\";\n+            let str[] strs = ~[];\n+            for (mt tm in elems) { strs += ~[mt_to_str(cx, tm)]; }\n+            s += \"tup(\" + str::connect_ivec(strs, \",\") + \")\";\n         }\n         case (ty_rec(?elems)) {\n-            let vec[str] strs = [];\n-            for (field fld in elems) { strs += [field_to_str(cx, fld)]; }\n-            s += \"rec(\" + str::connect(strs, \",\") + \")\";\n+            let str[] strs = ~[];\n+            for (field fld in elems) { strs += ~[field_to_str(cx, fld)]; }\n+            s += \"rec(\" + str::connect_ivec(strs, \",\") + \")\";\n         }\n         case (ty_tag(?id, ?tps)) {\n             // The user should never see this if the cname is set properly!\n \n             s += \"<tag#\" + int::str(id._0) + \":\" + int::str(id._1) + \">\";\n             if (ivec::len[t](tps) > 0u) {\n-                let vec[str] strs = [];\n-                for (t typ in tps) { strs += [ty_to_str(cx, typ)]; }\n-                s += \"[\" + str::connect(strs, \",\") + \"]\";\n+                let str[] strs = ~[];\n+                for (t typ in tps) { strs += ~[ty_to_str(cx, typ)]; }\n+                s += \"[\" + str::connect_ivec(strs, \",\") + \"]\";\n             }\n         }\n         case (ty_fn(?proto, ?inputs, ?output, ?cf, ?constrs)) {\n@@ -134,10 +133,9 @@ fn ty_to_str(&ctxt cx, &t typ) -> str {\n                            ast::return, ~[]);\n         }\n         case (ty_obj(?meths)) {\n-            // TODO: Remove this ivec->vec conversion.\n-            auto strs = [];\n-            for (method m in meths) { strs += [method_to_str(cx, m)]; }\n-            s += \"obj {\\n\\t\" + str::connect(strs, \"\\n\\t\") + \"\\n}\";\n+            auto strs = ~[];\n+            for (method m in meths) { strs += ~[method_to_str(cx, m)]; }\n+            s += \"obj {\\n\\t\" + str::connect_ivec(strs, \"\\n\\t\") + \"\\n}\";\n         }\n         case (ty_res(?id, _, _)) {\n             s += \"<resource#\" + int::str(id._0) + \":\" + int::str(id._1) + \">\";"}]}