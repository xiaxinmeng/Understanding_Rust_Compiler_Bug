{"sha": "f4bf750016c4c51b0ec1f1b0e6e2fe25578796f3", "node_id": "C_kwDOAAsO6NoAKGY0YmY3NTAwMTZjNGM1MWIwZWMxZjFiMGU2ZTJmZTI1NTc4Nzk2ZjM", "commit": {"author": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-11-30T08:24:07Z"}, "committer": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-11-30T08:24:07Z"}, "message": "simpler way of grabbing module /  trait name", "tree": {"sha": "ab188f560bb506f152f58ba102f975f88472b032", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab188f560bb506f152f58ba102f975f88472b032"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4bf750016c4c51b0ec1f1b0e6e2fe25578796f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4bf750016c4c51b0ec1f1b0e6e2fe25578796f3", "html_url": "https://github.com/rust-lang/rust/commit/f4bf750016c4c51b0ec1f1b0e6e2fe25578796f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4bf750016c4c51b0ec1f1b0e6e2fe25578796f3/comments", "author": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0c7ff39b8277aaf80c93a83200dc732792bac7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0c7ff39b8277aaf80c93a83200dc732792bac7d", "html_url": "https://github.com/rust-lang/rust/commit/b0c7ff39b8277aaf80c93a83200dc732792bac7d"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "cc2b2bbb7b84d0d0019a020376157baffddf336b", "filename": "crates/ide_db/src/symbol_index.rs", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f4bf750016c4c51b0ec1f1b0e6e2fe25578796f3/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4bf750016c4c51b0ec1f1b0e6e2fe25578796f3/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs?ref=f4bf750016c4c51b0ec1f1b0e6e2fe25578796f3", "patch": "@@ -37,8 +37,8 @@ use fst::{self, Streamer};\n use hir::{\n     db::{DefDatabase, HirDatabase},\n     AdtId, AssocContainerId, AssocItemId, AssocItemLoc, DefHasSource, DefWithBodyId, HasSource,\n-    HirFileId, ImplId, InFile, ItemLoc, ItemTreeNode, Lookup, MacroDef, ModuleDefId, ModuleId,\n-    Semantics, TraitId,\n+    HirFileId, ImplId, InFile, ItemLoc, ItemTreeNode, Lookup, MacroDef, Module, ModuleDefId,\n+    ModuleId, Semantics, TraitId,\n };\n use rayon::prelude::*;\n use rustc_hash::FxHashSet;\n@@ -472,8 +472,7 @@ impl<'a> SymbolCollector<'a> {\n \n     fn collect_from_module(&mut self, module_id: ModuleId) {\n         let def_map = module_id.def_map(self.db.upcast());\n-        let module_data = &def_map[module_id.local_id];\n-        let scope = &module_data.scope;\n+        let scope = &def_map[module_id.local_id].scope;\n \n         for module_def_id in scope.declarations() {\n             match module_def_id {\n@@ -594,20 +593,15 @@ impl<'a> SymbolCollector<'a> {\n         T: ItemTreeNode,\n         <T as ItemTreeNode>::Source: HasName,\n     {\n-        fn container_name(db: &dyn DefDatabase, container: AssocContainerId) -> Option<SmolStr> {\n+        fn container_name(db: &dyn HirDatabase, container: AssocContainerId) -> Option<SmolStr> {\n             match container {\n                 AssocContainerId::ModuleId(module_id) => {\n-                    let def_map = module_id.def_map(db);\n-                    let module_data = &def_map[module_id.local_id];\n-                    module_data\n-                        .origin\n-                        .declaration()\n-                        .and_then(|s| s.to_node(db.upcast()).name().map(|n| n.text().into()))\n+                    let module = Module::from(module_id);\n+                    module.name(db).and_then(|name| name.as_text())\n                 }\n                 AssocContainerId::TraitId(trait_id) => {\n-                    let loc = trait_id.lookup(db);\n-                    let source = loc.source(db);\n-                    source.value.name().map(|n| n.text().into())\n+                    let trait_data = db.trait_data(trait_id);\n+                    trait_data.name.as_text()\n                 }\n                 AssocContainerId::ImplId(_) => None,\n             }"}]}