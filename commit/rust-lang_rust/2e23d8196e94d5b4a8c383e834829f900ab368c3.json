{"sha": "2e23d8196e94d5b4a8c383e834829f900ab368c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMjNkODE5NmU5NGQ1YjRhOGMzODNlODM0ODI5ZjkwMGFiMzY4YzM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-29T10:08:53Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-29T21:05:21Z"}, "message": "tests for lint that warns about mixing #[repr(C)] with Drop.\n\nTHis includes tests for struct and enum. (I suspect the closure case\nis actually unreachable, but i see no harm in including it.)", "tree": {"sha": "81887aa8a280ea0d6d3ae8a9824df01ac6710c41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81887aa8a280ea0d6d3ae8a9824df01ac6710c41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e23d8196e94d5b4a8c383e834829f900ab368c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e23d8196e94d5b4a8c383e834829f900ab368c3", "html_url": "https://github.com/rust-lang/rust/commit/2e23d8196e94d5b4a8c383e834829f900ab368c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e23d8196e94d5b4a8c383e834829f900ab368c3/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78130a4690997ba0c2090e0b6d752ad37cb07b5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/78130a4690997ba0c2090e0b6d752ad37cb07b5c", "html_url": "https://github.com/rust-lang/rust/commit/78130a4690997ba0c2090e0b6d752ad37cb07b5c"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "2df57b08f283c3f3dd9350ba7b8cacb7682f1fd0", "filename": "src/test/compile-fail/lint-no-drop-on-repr-extern.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/2e23d8196e94d5b4a8c383e834829f900ab368c3/src%2Ftest%2Fcompile-fail%2Flint-no-drop-on-repr-extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e23d8196e94d5b4a8c383e834829f900ab368c3/src%2Ftest%2Fcompile-fail%2Flint-no-drop-on-repr-extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-no-drop-on-repr-extern.rs?ref=2e23d8196e94d5b4a8c383e834829f900ab368c3", "patch": "@@ -0,0 +1,59 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Check we reject structs that mix a `Drop` impl with `#[repr(C)]`.\n+//\n+// As a special case, also check that we do not warn on such structs\n+// if they also are declared with `#[unsafe_no_drop_flag]`\n+\n+#![feature(unsafe_no_drop_flag)]\n+#![deny(drop_with_repr_extern)]\n+\n+#[repr(C)] struct As { x: Box<i8> }\n+#[repr(C)] enum Ae { Ae(Box<i8>), _None }\n+\n+struct Bs { x: Box<i8> }\n+enum Be { Be(Box<i8>), _None }\n+\n+#[repr(C)] struct Cs { x: Box<i8> }\n+//~^ NOTE the `#[repr(C)]` attribute is attached here\n+\n+impl Drop for Cs { fn drop(&mut self) { } }\n+//~^ ERROR implementing Drop adds hidden state to types, possibly conflicting with `#[repr(C)]`\n+\n+#[repr(C)] enum Ce { Ce(Box<i8>), _None }\n+//~^ NOTE the `#[repr(C)]` attribute is attached here\n+\n+impl Drop for Ce { fn drop(&mut self) { } }\n+//~^ ERROR implementing Drop adds hidden state to types, possibly conflicting with `#[repr(C)]`\n+\n+#[unsafe_no_drop_flag]\n+#[repr(C)] struct Ds { x: Box<i8> }\n+\n+impl Drop for Ds { fn drop(&mut self) { } }\n+\n+#[unsafe_no_drop_flag]\n+#[repr(C)] enum De { De(Box<i8>), _None }\n+\n+impl Drop for De { fn drop(&mut self) { } }\n+\n+fn main() {\n+    let a = As { x: Box::new(3) };\n+    let b = Bs { x: Box::new(3) };\n+    let c = Cs { x: Box::new(3) };\n+    let d = Ds { x: Box::new(3) };\n+\n+    println!(\"{:?}\", (*a.x, *b.x, *c.x, *d.x));\n+\n+    let _a = Ae::Ae(Box::new(3));\n+    let _b = Be::Be(Box::new(3));\n+    let _c = Ce::Ce(Box::new(3));\n+    let _d = De::De(Box::new(3));\n+}"}]}