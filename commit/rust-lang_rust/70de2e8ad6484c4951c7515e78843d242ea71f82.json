{"sha": "70de2e8ad6484c4951c7515e78843d242ea71f82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwZGUyZThhZDY0ODRjNDk1MWM3NTE1ZTc4ODQzZDI0MmVhNzFmODI=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-02-15T09:52:26Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-03-27T23:28:00Z"}, "message": "Make Mir::predecessors thread-safe", "tree": {"sha": "47b4f21ecbeb6900b013a0cdff7b3aa3c8d0d7e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47b4f21ecbeb6900b013a0cdff7b3aa3c8d0d7e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70de2e8ad6484c4951c7515e78843d242ea71f82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70de2e8ad6484c4951c7515e78843d242ea71f82", "html_url": "https://github.com/rust-lang/rust/commit/70de2e8ad6484c4951c7515e78843d242ea71f82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70de2e8ad6484c4951c7515e78843d242ea71f82/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fd7d49c9552108025e6d79cefd3c27c3d5d6f5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fd7d49c9552108025e6d79cefd3c27c3d5d6f5a", "html_url": "https://github.com/rust-lang/rust/commit/8fd7d49c9552108025e6d79cefd3c27c3d5d6f5a"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "1ed5a22257c537e53446b2013d1c2e842984c55c", "filename": "src/librustc/mir/cache.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/70de2e8ad6484c4951c7515e78843d242ea71f82/src%2Flibrustc%2Fmir%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70de2e8ad6484c4951c7515e78843d242ea71f82/src%2Flibrustc%2Fmir%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fcache.rs?ref=70de2e8ad6484c4951c7515e78843d242ea71f82", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::cell::{Ref, RefCell};\n use rustc_data_structures::indexed_vec::IndexVec;\n+use rustc_data_structures::sync::{RwLock, ReadGuard};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher,\n                                            StableHasherResult};\n use ich::StableHashingContext;\n@@ -19,7 +19,7 @@ use rustc_serialize as serialize;\n \n #[derive(Clone, Debug)]\n pub struct Cache {\n-    predecessors: RefCell<Option<IndexVec<BasicBlock, Vec<BasicBlock>>>>\n+    predecessors: RwLock<Option<IndexVec<BasicBlock, Vec<BasicBlock>>>>\n }\n \n \n@@ -46,7 +46,7 @@ impl<'a> HashStable<StableHashingContext<'a>> for Cache {\n impl Cache {\n     pub fn new() -> Self {\n         Cache {\n-            predecessors: RefCell::new(None)\n+            predecessors: RwLock::new(None)\n         }\n     }\n \n@@ -55,12 +55,12 @@ impl Cache {\n         *self.predecessors.borrow_mut() = None;\n     }\n \n-    pub fn predecessors(&self, mir: &Mir) -> Ref<IndexVec<BasicBlock, Vec<BasicBlock>>> {\n+    pub fn predecessors(&self, mir: &Mir) -> ReadGuard<IndexVec<BasicBlock, Vec<BasicBlock>>> {\n         if self.predecessors.borrow().is_none() {\n             *self.predecessors.borrow_mut() = Some(calculate_predecessors(mir));\n         }\n \n-        Ref::map(self.predecessors.borrow(), |p| p.as_ref().unwrap())\n+        ReadGuard::map(self.predecessors.borrow(), |p| p.as_ref().unwrap())\n     }\n }\n "}, {"sha": "33f52ab09c85668b72c9d3a008345fe5394688e6", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/70de2e8ad6484c4951c7515e78843d242ea71f82/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70de2e8ad6484c4951c7515e78843d242ea71f82/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=70de2e8ad6484c4951c7515e78843d242ea71f82", "patch": "@@ -34,7 +34,7 @@ use util::ppaux;\n use std::slice;\n use hir::{self, InlineAsm};\n use std::borrow::{Cow};\n-use std::cell::Ref;\n+use rustc_data_structures::sync::ReadGuard;\n use std::fmt::{self, Debug, Formatter, Write};\n use std::{iter, mem, u32};\n use std::ops::{Index, IndexMut};\n@@ -187,13 +187,13 @@ impl<'tcx> Mir<'tcx> {\n     }\n \n     #[inline]\n-    pub fn predecessors(&self) -> Ref<IndexVec<BasicBlock, Vec<BasicBlock>>> {\n+    pub fn predecessors(&self) -> ReadGuard<IndexVec<BasicBlock, Vec<BasicBlock>>> {\n         self.cache.predecessors(self)\n     }\n \n     #[inline]\n-    pub fn predecessors_for(&self, bb: BasicBlock) -> Ref<Vec<BasicBlock>> {\n-        Ref::map(self.predecessors(), |p| &p[bb])\n+    pub fn predecessors_for(&self, bb: BasicBlock) -> ReadGuard<Vec<BasicBlock>> {\n+        ReadGuard::map(self.predecessors(), |p| &p[bb])\n     }\n \n     #[inline]"}]}