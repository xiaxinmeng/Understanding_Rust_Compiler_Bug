{"sha": "8b89a1280c929f7aaf11386f8f1a9ecdbef2f539", "node_id": "C_kwDOAAsO6NoAKDhiODlhMTI4MGM5MjlmN2FhZjExMzg2ZjhmMWE5ZWNkYmVmMmY1Mzk", "commit": {"author": {"name": "Ken Matsui", "email": "26405363+ken-matsui@users.noreply.github.com", "date": "2022-05-01T23:19:57Z"}, "committer": {"name": "Ken Matsui", "email": "26405363+ken-matsui@users.noreply.github.com", "date": "2022-05-08T00:34:02Z"}, "message": "Fix incorrect syntax suggestion with `pub async fn`", "tree": {"sha": "8ba30baef2760c8f2f7f0385f325e6fae6fa09ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ba30baef2760c8f2f7f0385f325e6fae6fa09ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b89a1280c929f7aaf11386f8f1a9ecdbef2f539", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENhGM023oMzS0St3kEDNgsymO5DMFAmJ3D/oACgkQEDNgsymO\n5DPU+RAAn5b8C3i/i6+l+sG1vbMZrNVUJzj8FzNjSwJGzxhfxQc9wlNWSzo9N9Wb\n6siMYJuAsehQ+GPb6Z6WlpylWWD19qEIyV9FaqKkaHoLZmlocA7eIXl4xvQAJHMC\nyLpYp/75Ruu0BtSjDkKPTNvwKKScLVXQ0XOF0XjEFy+FtJKJ/rkj2NfurSAxeSZF\nq252iev2/OV8T8LJyyE1o9A15vZ83VgFOHRmLF9Dx3HbqLDRXqLU59YlZ/Cbwhg0\n450PHp0AJocCmVixE+kxkBsw1pdozNfOgb0fgd0OqVuIKwIIwaSRxhBYCsm8GSpi\ngn0EdiCh1UX/k7C1BhkSw0gkhNUGjxkV3rEkoUIEgO+2HTLwAtvAefcSmX21T6NA\nVB7Rue0dpMFNOF4euFGFFulWoJhZX5iGiuwTO9W1kdvcn0QJcRmGUmlYQQBclj/5\n33xgD9HbQg72HMqYPb8U4cOV1amI8rQzHsBhk0B6xTbQiNeLeU/rm5vinaH7LwZP\n4Pb17FzTsOtZfw7JgilpwY/cT9/tjtu5jArzbPQt7aCdezPG+xW+hsoQuleCIe4k\nJp6o9wBmRvCWKkrWi1RrbLq0mbrhyzcDAT1jI8lzXM8WyO9fgQ0Ao7yFSjNPDOvB\n6nvqqc/548Bzr/HfXoqrRjsTSBt2MO3UbrmdohL26tVMgD1Mhb4=\n=fPzz\n-----END PGP SIGNATURE-----", "payload": "tree 8ba30baef2760c8f2f7f0385f325e6fae6fa09ad\nparent bf611439e3239ad3f74bd76cc46a4e89b87d8219\nauthor Ken Matsui <26405363+ken-matsui@users.noreply.github.com> 1651447197 +0900\ncommitter Ken Matsui <26405363+ken-matsui@users.noreply.github.com> 1651970042 +0900\n\nFix incorrect syntax suggestion with `pub async fn`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b89a1280c929f7aaf11386f8f1a9ecdbef2f539", "html_url": "https://github.com/rust-lang/rust/commit/8b89a1280c929f7aaf11386f8f1a9ecdbef2f539", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b89a1280c929f7aaf11386f8f1a9ecdbef2f539/comments", "author": {"login": "ken-matsui", "id": 26405363, "node_id": "MDQ6VXNlcjI2NDA1MzYz", "avatar_url": "https://avatars.githubusercontent.com/u/26405363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ken-matsui", "html_url": "https://github.com/ken-matsui", "followers_url": "https://api.github.com/users/ken-matsui/followers", "following_url": "https://api.github.com/users/ken-matsui/following{/other_user}", "gists_url": "https://api.github.com/users/ken-matsui/gists{/gist_id}", "starred_url": "https://api.github.com/users/ken-matsui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ken-matsui/subscriptions", "organizations_url": "https://api.github.com/users/ken-matsui/orgs", "repos_url": "https://api.github.com/users/ken-matsui/repos", "events_url": "https://api.github.com/users/ken-matsui/events{/privacy}", "received_events_url": "https://api.github.com/users/ken-matsui/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ken-matsui", "id": 26405363, "node_id": "MDQ6VXNlcjI2NDA1MzYz", "avatar_url": "https://avatars.githubusercontent.com/u/26405363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ken-matsui", "html_url": "https://github.com/ken-matsui", "followers_url": "https://api.github.com/users/ken-matsui/followers", "following_url": "https://api.github.com/users/ken-matsui/following{/other_user}", "gists_url": "https://api.github.com/users/ken-matsui/gists{/gist_id}", "starred_url": "https://api.github.com/users/ken-matsui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ken-matsui/subscriptions", "organizations_url": "https://api.github.com/users/ken-matsui/orgs", "repos_url": "https://api.github.com/users/ken-matsui/repos", "events_url": "https://api.github.com/users/ken-matsui/events{/privacy}", "received_events_url": "https://api.github.com/users/ken-matsui/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf611439e3239ad3f74bd76cc46a4e89b87d8219", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf611439e3239ad3f74bd76cc46a4e89b87d8219", "html_url": "https://github.com/rust-lang/rust/commit/bf611439e3239ad3f74bd76cc46a4e89b87d8219"}], "stats": {"total": 113, "additions": 104, "deletions": 9}, "files": [{"sha": "09a2560fd465f00174cc437947ef15461639c633", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8b89a1280c929f7aaf11386f8f1a9ecdbef2f539/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b89a1280c929f7aaf11386f8f1a9ecdbef2f539/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=8b89a1280c929f7aaf11386f8f1a9ecdbef2f539", "patch": "@@ -1079,18 +1079,28 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                             self.in_progress_typeck_results.map(|t| t.borrow())\n                             && let ty = typeck_results.expr_ty_adjusted(base)\n                             && let ty::FnDef(def_id, _substs) = ty.kind()\n-                            && let Some(hir::Node::Item(hir::Item { span, ident, .. })) =\n+                            && let Some(hir::Node::Item(hir::Item { ident, span, vis_span, .. })) =\n                                 hir.get_if_local(*def_id)\n                         {\n-                            err.span_suggestion_verbose(\n-                                span.shrink_to_lo(),\n-                                &format!(\n-                                    \"alternatively, consider making `fn {}` asynchronous\",\n-                                    ident\n-                                ),\n-                                \"async \".to_string(),\n-                                Applicability::MaybeIncorrect,\n+                            let msg = format!(\n+                                \"alternatively, consider making `fn {}` asynchronous\",\n+                                ident\n                             );\n+                            if vis_span.is_empty() {\n+                                err.span_suggestion_verbose(\n+                                    span.shrink_to_lo(),\n+                                    &msg,\n+                                    \"async \".to_string(),\n+                                    Applicability::MaybeIncorrect,\n+                                );\n+                            } else {\n+                                err.span_suggestion_verbose(\n+                                    vis_span.shrink_to_hi(),\n+                                    &msg,\n+                                    \" async\".to_string(),\n+                                    Applicability::MaybeIncorrect,\n+                                );\n+                            }\n                         }\n                     }\n                 }"}, {"sha": "9f0a047c6e9a80c14949bbd6174b305c432ee82d", "filename": "src/test/ui/suggestions/issue-96555.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8b89a1280c929f7aaf11386f8f1a9ecdbef2f539/src%2Ftest%2Fui%2Fsuggestions%2Fissue-96555.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b89a1280c929f7aaf11386f8f1a9ecdbef2f539/src%2Ftest%2Fui%2Fsuggestions%2Fissue-96555.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-96555.rs?ref=8b89a1280c929f7aaf11386f8f1a9ecdbef2f539", "patch": "@@ -0,0 +1,19 @@\n+// edition:2018\n+\n+async fn f() {\n+    m::f1().await; //~ ERROR `()` is not a future\n+    m::f2().await; //~ ERROR `()` is not a future\n+    m::f3().await; //~ ERROR `()` is not a future\n+}\n+\n+mod m {\n+    pub fn f1() {}\n+\n+    pub(crate) fn f2() {}\n+\n+    pub\n+    fn\n+    f3() {}\n+}\n+\n+fn main() {}"}, {"sha": "6d3b8844d954fb304d65e9addc72bb1e13b16456", "filename": "src/test/ui/suggestions/issue-96555.stderr", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/8b89a1280c929f7aaf11386f8f1a9ecdbef2f539/src%2Ftest%2Fui%2Fsuggestions%2Fissue-96555.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8b89a1280c929f7aaf11386f8f1a9ecdbef2f539/src%2Ftest%2Fui%2Fsuggestions%2Fissue-96555.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-96555.stderr?ref=8b89a1280c929f7aaf11386f8f1a9ecdbef2f539", "patch": "@@ -0,0 +1,66 @@\n+error[E0277]: `()` is not a future\n+  --> $DIR/issue-96555.rs:4:12\n+   |\n+LL |     m::f1().await;\n+   |     -------^^^^^^ `()` is not a future\n+   |     |\n+   |     this call returns `()`\n+   |\n+   = help: the trait `Future` is not implemented for `()`\n+   = note: () must be a future or must implement `IntoFuture` to be awaited\n+   = note: required because of the requirements on the impl of `IntoFuture` for `()`\n+help: remove the `.await`\n+   |\n+LL -     m::f1().await;\n+LL +     m::f1();\n+   | \n+help: alternatively, consider making `fn f1` asynchronous\n+   |\n+LL |     pub async fn f1() {}\n+   |         +++++\n+\n+error[E0277]: `()` is not a future\n+  --> $DIR/issue-96555.rs:5:12\n+   |\n+LL |     m::f2().await;\n+   |     -------^^^^^^ `()` is not a future\n+   |     |\n+   |     this call returns `()`\n+   |\n+   = help: the trait `Future` is not implemented for `()`\n+   = note: () must be a future or must implement `IntoFuture` to be awaited\n+   = note: required because of the requirements on the impl of `IntoFuture` for `()`\n+help: remove the `.await`\n+   |\n+LL -     m::f2().await;\n+LL +     m::f2();\n+   | \n+help: alternatively, consider making `fn f2` asynchronous\n+   |\n+LL |     pub(crate) async fn f2() {}\n+   |                +++++\n+\n+error[E0277]: `()` is not a future\n+  --> $DIR/issue-96555.rs:6:12\n+   |\n+LL |     m::f3().await;\n+   |     -------^^^^^^ `()` is not a future\n+   |     |\n+   |     this call returns `()`\n+   |\n+   = help: the trait `Future` is not implemented for `()`\n+   = note: () must be a future or must implement `IntoFuture` to be awaited\n+   = note: required because of the requirements on the impl of `IntoFuture` for `()`\n+help: remove the `.await`\n+   |\n+LL -     m::f3().await;\n+LL +     m::f3();\n+   | \n+help: alternatively, consider making `fn f3` asynchronous\n+   |\n+LL |     pub async\n+   |         +++++\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}