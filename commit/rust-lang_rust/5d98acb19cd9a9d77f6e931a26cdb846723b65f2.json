{"sha": "5d98acb19cd9a9d77f6e931a26cdb846723b65f2", "node_id": "C_kwDOAAsO6NoAKDVkOThhY2IxOWNkOWE5ZDc3ZjZlOTMxYTI2Y2RiODQ2NzIzYjY1ZjI", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2022-04-15T17:24:34Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2022-04-15T17:24:34Z"}, "message": "update docs for option to crossreference to the result docs", "tree": {"sha": "b6747fd3c268e2fc88c7841cc95c041292dd4451", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6747fd3c268e2fc88c7841cc95c041292dd4451"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d98acb19cd9a9d77f6e931a26cdb846723b65f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d98acb19cd9a9d77f6e931a26cdb846723b65f2", "html_url": "https://github.com/rust-lang/rust/commit/5d98acb19cd9a9d77f6e931a26cdb846723b65f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d98acb19cd9a9d77f6e931a26cdb846723b65f2/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80c362b92bda7776fc88e31c479455890b4a3688", "url": "https://api.github.com/repos/rust-lang/rust/commits/80c362b92bda7776fc88e31c479455890b4a3688", "html_url": "https://github.com/rust-lang/rust/commit/80c362b92bda7776fc88e31c479455890b4a3688"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "f280c321c9c710fc9ad8126e14464d394fc37f4b", "filename": "library/core/src/option.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5d98acb19cd9a9d77f6e931a26cdb846723b65f2/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d98acb19cd9a9d77f6e931a26cdb846723b65f2/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=5d98acb19cd9a9d77f6e931a26cdb846723b65f2", "patch": "@@ -708,6 +708,9 @@ impl<T> Option<T> {\n     /// let x: Option<&str> = None;\n     /// x.expect(\"fruits are healthy\"); // panics with `fruits are healthy`\n     /// ```\n+    ///\n+    /// **Note**: Please refer to the documentation on [`Result::expect`] for further information\n+    /// on common message styles.\n     #[inline]\n     #[track_caller]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "7cbe2213b22b2f3c0f5237bff05316360e8796d9", "filename": "library/core/src/result.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5d98acb19cd9a9d77f6e931a26cdb846723b65f2/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d98acb19cd9a9d77f6e931a26cdb846723b65f2/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=5d98acb19cd9a9d77f6e931a26cdb846723b65f2", "patch": "@@ -1047,8 +1047,8 @@ impl<T, E> Result<T, E> {\n     ///     .expect(\"env variable `IMPORTANT_PATH` is not set\");\n     /// ```\n     ///\n-    /// In the latter style, we would instead describe the reason we _expect_ the `Result` will\n-    /// always be `Ok`. With this style we would instead write:\n+    /// In the \"expect as precondition\" style, we would instead describe the reason we _expect_ the\n+    /// `Result` will always be `Ok`. With this style we would prefer to write:\n     ///\n     /// ```should_panic\n     /// let path = std::env::var(\"IMPORTANT_PATH\")\n@@ -1060,7 +1060,7 @@ impl<T, E> Result<T, E> {\n     /// `std`.\n     ///\n     /// ```text\n-    /// thread 'expect_as_error_message' panicked at 'env variable `IMPORTANT_PATH` is not set: NotPresent', src/lib.rs:4:10\n+    /// thread 'main' panicked at 'env variable `IMPORTANT_PATH` is not set: NotPresent', src/main.rs:4:6\n     /// ```\n     ///\n     /// The \"expect as precondition\" style instead focuses on source code readability, making it\n@@ -1069,13 +1069,13 @@ impl<T, E> Result<T, E> {\n     /// directly to users with the default `std` panic hook's report format:\n     ///\n     /// ```text\n-    /// thread 'expect_as_precondition' panicked at 'env variable `IMPORTANT_PATH` is always set by `wrapper_script.sh`: NotPresent', src/lib.rs:4:10\n+    /// thread 'main' panicked at 'env variable `IMPORTANT_PATH` is always be set by `wrapper_script.sh`: NotPresent', src/main.rs:4:6\n     /// ```\n     ///\n     /// This style works best when paired with a custom [panic hook] like the one provided by the\n-    /// CLI working group library, [`human-panic`], which redirects panic messages to crash report\n-    /// files while showing users a more \"Oops, something went wrong!\" message with a suggestion to\n-    /// send the crash report file back to the developers.\n+    /// CLI working group library, [`human-panic`], which dumps the panic messages to a crash\n+    /// report file while showing users a more friendly \"Oops, something went wrong!\" message with\n+    /// a suggestion to send the crash report file back to the developers.\n     ///\n     /// [panic hook]: https://doc.rust-lang.org/stable/std/panic/fn.set_hook.html\n     /// [`human-panic`]: https://docs.rs/human-panic"}]}