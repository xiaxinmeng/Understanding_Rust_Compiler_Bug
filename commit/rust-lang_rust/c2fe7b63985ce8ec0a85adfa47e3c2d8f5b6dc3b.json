{"sha": "c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyZmU3YjYzOTg1Y2U4ZWMwYTg1YWRmYTQ3ZTNjMmQ4ZjViNmRjM2I=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-16T10:32:38Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-16T11:08:00Z"}, "message": "When pretty-printing fn types, leave off arg modes when they are the default\n\nThis reduces ++/&& spam in the output to a bare minimum.\n\nIssue #1507", "tree": {"sha": "2b0961905ff53913e8933a658a4dc376508a5bbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b0961905ff53913e8933a658a4dc376508a5bbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b", "html_url": "https://github.com/rust-lang/rust/commit/c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1c50c4410804dfce9fbe040f341f6104cc9ba7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1c50c4410804dfce9fbe040f341f6104cc9ba7e", "html_url": "https://github.com/rust-lang/rust/commit/e1c50c4410804dfce9fbe040f341f6104cc9ba7e"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "ddab92ed861e19fbf40b423761edf7ce378dd218", "filename": "src/comp/util/ppaux.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b/src%2Fcomp%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b/src%2Fcomp%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Futil%2Fppaux.rs?ref=c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b", "patch": "@@ -22,8 +22,16 @@ fn mode_str(m: ty::mode) -> str {\n fn ty_to_str(cx: ctxt, typ: t) -> str {\n     fn fn_input_to_str(cx: ctxt, input: {mode: middle::ty::mode, ty: t}) ->\n        str {\n-        let s = mode_str(input.mode);\n-        ret s + ty_to_str(cx, input.ty);\n+        let modestr = alt input.mode {\n+          ast::by_ref. {\n+            ty::type_is_immediate(cx, input.ty) ? \"&&\" : \"\"\n+          }\n+          ast::by_val. {\n+            ty::type_is_immediate(cx, input.ty) ? \"\" : \"++\"\n+          }\n+          _ { mode_str(input.mode) }\n+        };\n+        modestr + ty_to_str(cx, input.ty)\n     }\n     fn fn_to_str(cx: ctxt, proto: ast::proto, ident: option::t<ast::ident>,\n                  inputs: [arg], output: t, cf: ast::ret_style,"}, {"sha": "2abf5d7b902dc1aa65b2c1965f8953bb431669a2", "filename": "src/test/compile-fail/fn-compare-mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffn-compare-mismatch.rs?ref=c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b", "patch": "@@ -2,5 +2,5 @@ fn main() {\n     fn f() { }\n     fn g(i: int) { }\n     let x = f == g;\n-    //!^ ERROR expected `native fn()` but found `native fn(++int)`\n+    //!^ ERROR expected `native fn()` but found `native fn(int)`\n }"}, {"sha": "5cb8868259735925bc66862b09af272b97bb33df", "filename": "src/test/compile-fail/main-wrong-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmain-wrong-type.rs?ref=c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b", "patch": "@@ -1,3 +1,3 @@\n fn main(foo: {x: int, y: int}) {\n-//!^ ERROR wrong type in main function: found `native fn(&&{x: int,y: int})`\n+//!^ ERROR wrong type in main function: found `native fn({x: int,y: int})`\n }"}, {"sha": "09d331979090bca49dfba3326370570fa5e5e066", "filename": "src/test/compile-fail/sendfn-is-not-a-lambda.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b/src%2Ftest%2Fcompile-fail%2Fsendfn-is-not-a-lambda.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b/src%2Ftest%2Fcompile-fail%2Fsendfn-is-not-a-lambda.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsendfn-is-not-a-lambda.rs?ref=c2fe7b63985ce8ec0a85adfa47e3c2d8f5b6dc3b", "patch": "@@ -4,5 +4,5 @@ fn test(f: fn@(uint) -> uint) -> uint {\n \n fn main() {\n     let f = fn~(x: uint) -> uint { ret 4u; };\n-    log(debug, test(f)); //! ERROR expected `fn@(++uint) -> uint`\n+    log(debug, test(f)); //! ERROR expected `fn@(uint) -> uint`\n }"}]}