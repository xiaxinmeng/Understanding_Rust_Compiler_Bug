{"sha": "546eb14b7ef847545d91c10e48b564a30b51fc60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0NmViMTRiN2VmODQ3NTQ1ZDkxYzEwZTQ4YjU2NGEzMGI1MWZjNjA=", "commit": {"author": {"name": "Kevin Yap", "email": "me@kevinyap.ca", "date": "2015-10-22T22:19:03Z"}, "committer": {"name": "Kevin Yap", "email": "me@kevinyap.ca", "date": "2015-10-23T06:07:27Z"}, "message": "Change implementation of approx_const lint\n\n- Replace epsilon with lower and upper bounds for each constant.\n- Warn on use of \"3.14\", and update tests accordingly.", "tree": {"sha": "3c8350082e5dadd0c5c89646bb610c026e7b7204", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c8350082e5dadd0c5c89646bb610c026e7b7204"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/546eb14b7ef847545d91c10e48b564a30b51fc60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/546eb14b7ef847545d91c10e48b564a30b51fc60", "html_url": "https://github.com/rust-lang/rust/commit/546eb14b7ef847545d91c10e48b564a30b51fc60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/546eb14b7ef847545d91c10e48b564a30b51fc60/comments", "author": {"login": "iKevinY", "id": 2434728, "node_id": "MDQ6VXNlcjI0MzQ3Mjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2434728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iKevinY", "html_url": "https://github.com/iKevinY", "followers_url": "https://api.github.com/users/iKevinY/followers", "following_url": "https://api.github.com/users/iKevinY/following{/other_user}", "gists_url": "https://api.github.com/users/iKevinY/gists{/gist_id}", "starred_url": "https://api.github.com/users/iKevinY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iKevinY/subscriptions", "organizations_url": "https://api.github.com/users/iKevinY/orgs", "repos_url": "https://api.github.com/users/iKevinY/repos", "events_url": "https://api.github.com/users/iKevinY/events{/privacy}", "received_events_url": "https://api.github.com/users/iKevinY/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iKevinY", "id": 2434728, "node_id": "MDQ6VXNlcjI0MzQ3Mjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2434728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iKevinY", "html_url": "https://github.com/iKevinY", "followers_url": "https://api.github.com/users/iKevinY/followers", "following_url": "https://api.github.com/users/iKevinY/following{/other_user}", "gists_url": "https://api.github.com/users/iKevinY/gists{/gist_id}", "starred_url": "https://api.github.com/users/iKevinY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iKevinY/subscriptions", "organizations_url": "https://api.github.com/users/iKevinY/orgs", "repos_url": "https://api.github.com/users/iKevinY/repos", "events_url": "https://api.github.com/users/iKevinY/events{/privacy}", "received_events_url": "https://api.github.com/users/iKevinY/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a927bc0b7051b798dff0e00c8f05875bedab90de", "url": "https://api.github.com/repos/rust-lang/rust/commits/a927bc0b7051b798dff0e00c8f05875bedab90de", "html_url": "https://github.com/rust-lang/rust/commit/a927bc0b7051b798dff0e00c8f05875bedab90de"}], "stats": {"total": 53, "additions": 30, "deletions": 23}, "files": [{"sha": "19753aaf844fccb6b95501765453c945ec1ecd1b", "filename": "src/approx_const.rs", "status": "modified", "additions": 28, "deletions": 22, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/546eb14b7ef847545d91c10e48b564a30b51fc60/src%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/546eb14b7ef847545d91c10e48b564a30b51fc60/src%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fapprox_const.rs?ref=546eb14b7ef847545d91c10e48b564a30b51fc60", "patch": "@@ -1,6 +1,5 @@\n use rustc::lint::*;\n use rustc_front::hir::*;\n-use std::f64::consts as f64;\n use utils::span_lint;\n use syntax::ast::Lit_::*;\n use syntax::ast::Lit;\n@@ -13,14 +12,26 @@ declare_lint! {\n      is found; suggests to use the constant\"\n }\n \n-const KNOWN_CONSTS : &'static [(f64, &'static str)] = &[(f64::E, \"E\"), (f64::FRAC_1_PI, \"FRAC_1_PI\"),\n-    (f64::FRAC_1_SQRT_2, \"FRAC_1_SQRT_2\"), (f64::FRAC_2_PI, \"FRAC_2_PI\"),\n-    (f64::FRAC_2_SQRT_PI, \"FRAC_2_SQRT_PI\"), (f64::FRAC_PI_2, \"FRAC_PI_2\"), (f64::FRAC_PI_3, \"FRAC_PI_3\"),\n-    (f64::FRAC_PI_4, \"FRAC_PI_4\"), (f64::FRAC_PI_6, \"FRAC_PI_6\"), (f64::FRAC_PI_8, \"FRAC_PI_8\"),\n-    (f64::LN_10, \"LN_10\"), (f64::LN_2, \"LN_2\"), (f64::LOG10_E, \"LOG10_E\"), (f64::LOG2_E, \"LOG2_E\"),\n-    (f64::PI, \"PI\"), (f64::SQRT_2, \"SQRT_2\")];\n-\n-const EPSILON_DIVISOR : f64 = 8192f64; //TODO: test to find a good value\n+// Tuples are of the form (name, lower_bound, upper_bound)\n+#[allow(approx_constant)]\n+const KNOWN_CONSTS : &'static [(&'static str, f64, f64)] = &[\n+    (\"E\", 2.7101, 2.7200),\n+    (\"FRAC_1_PI\", 0.31829, 0.31840),\n+    (\"FRAC_1_SQRT_2\", 0.7071, 0.7072),\n+    (\"FRAC_2_PI\", 0.6366, 0.6370),\n+    (\"FRAC_2_SQRT_PI\", 1.1283, 1.1284),\n+    (\"FRAC_PI_2\", 1.5707, 1.5708),\n+    (\"FRAC_PI_3\", 1.0471, 1.0472),\n+    (\"FRAC_PI_4\", 0.7853, 0.7854),\n+    (\"FRAC_PI_6\", 0.5235, 0.5236),\n+    (\"FRAC_PI_8\", 0.3926, 0.3927),\n+    (\"LN_10\", 2.302, 2.303),\n+    (\"LN_2\", 0.6931, 0.6932),\n+    (\"LOG10_E\", 0.4342, 0.4343),\n+    (\"LOG2_E\", 1.4426, 1.4427),\n+    (\"PI\", 3.140, 3.142),\n+    (\"SQRT_2\", 1.4142, 1.4143),\n+];\n \n #[derive(Copy,Clone)]\n pub struct ApproxConstant;\n@@ -49,19 +60,14 @@ fn check_lit(cx: &LateContext, lit: &Lit, e: &Expr) {\n     }\n }\n \n-fn check_known_consts(cx: &LateContext, e: &Expr, str: &str, module: &str) {\n-    if let Ok(value) = str.parse::<f64>() {\n-        for &(constant, name) in KNOWN_CONSTS {\n-            if !within_epsilon(constant, value) { continue; }\n-            span_lint(cx, APPROX_CONSTANT, e.span, &format!(\n-                \"approximate value of `{}::{}` found. \\\n-                Consider using it directly\", module, &name));\n+fn check_known_consts(cx: &LateContext, e: &Expr, s: &str, module: &str) {\n+    if let Ok(value) = s.parse::<f64>() {\n+        for &(name, lower_bound, upper_bound) in KNOWN_CONSTS {\n+            if (value >= lower_bound) && (value < upper_bound) {\n+                span_lint(cx, APPROX_CONSTANT, e.span, &format!(\n+                    \"approximate value of `{}::{}` found. \\\n+                    Consider using it directly\", module, &name));\n+            }\n         }\n     }\n }\n-\n-fn within_epsilon(target: f64, value: f64) -> bool {\n-    f64::abs(value - target) < f64::abs(if target > value {\n-                                            target\n-                                        } else { value }) / EPSILON_DIVISOR\n-}"}, {"sha": "ebd5d3ea139b8c966d76610c64989f10cf282765", "filename": "tests/compile-fail/approx_const.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/546eb14b7ef847545d91c10e48b564a30b51fc60/tests%2Fcompile-fail%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/546eb14b7ef847545d91c10e48b564a30b51fc60/tests%2Fcompile-fail%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fapprox_const.rs?ref=546eb14b7ef847545d91c10e48b564a30b51fc60", "patch": "@@ -49,7 +49,8 @@ fn main() {\n     let no_log2_e = 1.442;\n \n     let my_pi = 3.1415; //~ERROR approximate value of `f{32, 64}::PI` found\n-    let almost_pi = 3.141;\n+    let almost_pi = 3.14; //~ERROR approximate value of `f{32, 64}::PI` found\n+    let no_pi = 3.15;\n \n     let my_sq2 = 1.4142; //~ERROR approximate value of `f{32, 64}::SQRT_2` found\n     let no_sq2 = 1.414;"}]}