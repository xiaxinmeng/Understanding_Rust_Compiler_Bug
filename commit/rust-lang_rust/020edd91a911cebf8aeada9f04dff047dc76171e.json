{"sha": "020edd91a911cebf8aeada9f04dff047dc76171e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMGVkZDkxYTkxMWNlYmY4YWVhZGE5ZjA0ZGZmMDQ3ZGM3NjE3MWU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-02-04T21:59:23Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-02-22T00:27:29Z"}, "message": "reword `;` suggestions to have consistent wording", "tree": {"sha": "c89ef48189e9b38f0bb4dbbfb3ff1172bf3c1658", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c89ef48189e9b38f0bb4dbbfb3ff1172bf3c1658"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/020edd91a911cebf8aeada9f04dff047dc76171e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/020edd91a911cebf8aeada9f04dff047dc76171e", "html_url": "https://github.com/rust-lang/rust/commit/020edd91a911cebf8aeada9f04dff047dc76171e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/020edd91a911cebf8aeada9f04dff047dc76171e/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "796ce9fcb7e35767e6e57ad79099dcf730a0a94b", "url": "https://api.github.com/repos/rust-lang/rust/commits/796ce9fcb7e35767e6e57ad79099dcf730a0a94b", "html_url": "https://github.com/rust-lang/rust/commit/796ce9fcb7e35767e6e57ad79099dcf730a0a94b"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "f2fbb95fc021cf5477605163465a4f4a72d4e0d0", "filename": "compiler/rustc_typeck/src/check/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/020edd91a911cebf8aeada9f04dff047dc76171e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/020edd91a911cebf8aeada9f04dff047dc76171e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs?ref=020edd91a911cebf8aeada9f04dff047dc76171e", "patch": "@@ -346,7 +346,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             if call_is_multiline {\n                                 err.span_suggestion(\n                                     callee.span.shrink_to_hi(),\n-                                    \"try adding a semicolon\",\n+                                    \"consider using a semicolon here\",\n                                     \";\".to_owned(),\n                                     Applicability::MaybeIncorrect,\n                                 );"}, {"sha": "e5a2e1398178dfa0bab1cf70ada2f55d53ee40dd", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/020edd91a911cebf8aeada9f04dff047dc76171e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/020edd91a911cebf8aeada9f04dff047dc76171e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs?ref=020edd91a911cebf8aeada9f04dff047dc76171e", "patch": "@@ -395,7 +395,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 | ExprKind::Block(..) => {\n                     err.span_suggestion(\n                         cause_span.shrink_to_hi(),\n-                        \"try adding a semicolon\",\n+                        \"consider using a semicolon here\",\n                         \";\".to_string(),\n                         Applicability::MachineApplicable,\n                     );"}, {"sha": "352a88ac10cd500589548e0ead0537d08fe12a7b", "filename": "src/test/ui/async-await/suggest-missing-await.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.rs", "raw_url": "https://github.com/rust-lang/rust/raw/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.rs?ref=020edd91a911cebf8aeada9f04dff047dc76171e", "patch": "@@ -21,7 +21,7 @@ async fn dummy() {}\n async fn suggest_await_in_async_fn_return() {\n     dummy()\n     //~^ ERROR mismatched types [E0308]\n-    //~| HELP try adding a semicolon\n+    //~| HELP consider using a semicolon here\n     //~| HELP consider `await`ing on the `Future`\n     //~| SUGGESTION .await\n }"}, {"sha": "26e81a52c2141388cc98bcb05e15345f6a15bfeb", "filename": "src/test/ui/async-await/suggest-missing-await.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fsuggest-missing-await.stderr?ref=020edd91a911cebf8aeada9f04dff047dc76171e", "patch": "@@ -29,7 +29,7 @@ help: consider `await`ing on the `Future`\n    |\n LL |     dummy().await\n    |            ^^^^^^\n-help: try adding a semicolon\n+help: consider using a semicolon here\n    |\n LL |     dummy();\n    |            ^"}, {"sha": "4fcd0ee2c48e28e0e89eab3ee9db0d9859f950bf", "filename": "src/test/ui/block-result/unexpected-return-on-unit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.stderr?ref=020edd91a911cebf8aeada9f04dff047dc76171e", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL |     foo()\n    |     ^^^^^ expected `()`, found `usize`\n    |\n-help: try adding a semicolon\n+help: consider using a semicolon here\n    |\n LL |     foo();\n    |          ^"}, {"sha": "345520d4852ae4604519da5438385d82a533e1c2", "filename": "src/test/ui/proc-macro/issue-37788.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Fproc-macro%2Fissue-37788.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Fproc-macro%2Fissue-37788.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-37788.stderr?ref=020edd91a911cebf8aeada9f04dff047dc76171e", "patch": "@@ -5,7 +5,7 @@ LL | fn main() {\n    |           - expected `()` because of default return type\n LL |     // Test that constructing the `visible_parent_map` (in `cstore_impl.rs`) does not ICE.\n LL |     std::cell::Cell::new(0)\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^- help: try adding a semicolon: `;`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^- help: consider using a semicolon here: `;`\n    |     |\n    |     expected `()`, found struct `Cell`\n    |"}, {"sha": "6ef921bef3d7a9cbfb640aec4d8d7c4ce26df81d", "filename": "src/test/ui/return/return-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Freturn%2Freturn-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Freturn%2Freturn-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freturn%2Freturn-type.stderr?ref=020edd91a911cebf8aeada9f04dff047dc76171e", "patch": "@@ -6,7 +6,7 @@ LL |     foo(4 as usize)\n    |\n    = note: expected unit type `()`\n                  found struct `S<usize>`\n-help: try adding a semicolon\n+help: consider using a semicolon here\n    |\n LL |     foo(4 as usize);\n    |                    ^"}, {"sha": "6eeaf5b3412e7a6040e395fe0943b0aa4315d421", "filename": "src/test/ui/return/tail-expr-as-potential-return.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Freturn%2Ftail-expr-as-potential-return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Freturn%2Ftail-expr-as-potential-return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freturn%2Ftail-expr-as-potential-return.stderr?ref=020edd91a911cebf8aeada9f04dff047dc76171e", "patch": "@@ -9,7 +9,7 @@ LL | |     }\n    |\n    = note: expected unit type `()`\n                    found enum `std::result::Result<_, {integer}>`\n-help: try adding a semicolon\n+help: consider using a semicolon here\n    |\n LL |         Err(42);\n    |                ^"}, {"sha": "7a2b75a1c1f0ac007b44b66b557aa397104ddecd", "filename": "src/test/ui/specialization/specialization-default-projection.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-default-projection.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-default-projection.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-default-projection.stderr?ref=020edd91a911cebf8aeada9f04dff047dc76171e", "patch": "@@ -29,7 +29,7 @@ LL | fn monomorphic() -> () {\n    |                     -- expected `()` because of return type\n ...\n LL |     generic::<()>()\n-   |     ^^^^^^^^^^^^^^^- help: try adding a semicolon: `;`\n+   |     ^^^^^^^^^^^^^^^- help: consider using a semicolon here: `;`\n    |     |\n    |     expected `()`, found associated type\n    |"}, {"sha": "438075083d37071416a5a23ad42545b759052ca3", "filename": "src/test/ui/suggestions/issue-51055-missing-semicolon-between-call-and-tuple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-51055-missing-semicolon-between-call-and-tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/020edd91a911cebf8aeada9f04dff047dc76171e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-51055-missing-semicolon-between-call-and-tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-51055-missing-semicolon-between-call-and-tuple.stderr?ref=020edd91a911cebf8aeada9f04dff047dc76171e", "patch": "@@ -5,7 +5,7 @@ LL |   fn vindictive() -> bool { true }\n    |   ----------------------- `vindictive` defined here returns `bool`\n ...\n LL |       vindictive()\n-   |       -^^^^^^^^^^^- help: try adding a semicolon: `;`\n+   |       -^^^^^^^^^^^- help: consider using a semicolon here: `;`\n    |  _____|\n    | |\n LL | |     (1, 2)"}]}