{"sha": "535244cde4640986f29978c5f9c35fd3b40f58db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzNTI0NGNkZTQ2NDA5ODZmMjk5NzhjNWY5YzM1ZmQzYjQwZjU4ZGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-21T19:00:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-21T19:00:52Z"}, "message": "auto merge of #5987 : huonw/rust/generic-random, r=catamorphism\n\nWith this patch `rand::random` can be used to generate anything that implements `Rand`.", "tree": {"sha": "1c35429aec82206b626f07ae51fbe638c07935b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c35429aec82206b626f07ae51fbe638c07935b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/535244cde4640986f29978c5f9c35fd3b40f58db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/535244cde4640986f29978c5f9c35fd3b40f58db", "html_url": "https://github.com/rust-lang/rust/commit/535244cde4640986f29978c5f9c35fd3b40f58db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/535244cde4640986f29978c5f9c35fd3b40f58db/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8942099614dba3a52e3fc0805ed6c0c37cb371a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8942099614dba3a52e3fc0805ed6c0c37cb371a4", "html_url": "https://github.com/rust-lang/rust/commit/8942099614dba3a52e3fc0805ed6c0c37cb371a4"}, {"sha": "aa763cdb238bb9c9f26d84a699d9f0de8289d8c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa763cdb238bb9c9f26d84a699d9f0de8289d8c4", "html_url": "https://github.com/rust-lang/rust/commit/aa763cdb238bb9c9f26d84a699d9f0de8289d8c4"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "a2f103fdbc90e19cd284c879630e6dd11f004565", "filename": "src/libcore/rand.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/535244cde4640986f29978c5f9c35fd3b40f58db/src%2Flibcore%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/535244cde4640986f29978c5f9c35fd3b40f58db/src%2Flibcore%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frand.rs?ref=535244cde4640986f29978c5f9c35fd3b40f58db", "patch": "@@ -55,6 +55,12 @@ impl Rand for i64 {\n     }\n }\n \n+impl Rand for uint {\n+    fn rand(rng: @rand::Rng) -> uint {\n+        rng.gen_uint()\n+    }\n+}\n+\n impl Rand for u8 {\n     fn rand(rng: @rand::Rng) -> u8 {\n         rng.gen_u8()\n@@ -149,6 +155,7 @@ pub struct Weighted<T> {\n }\n \n pub trait RngUtil {\n+    /// Return a random value for a Rand type\n     fn gen<T:Rand>(&self) -> T;\n     /**\n      * Return a random int\n@@ -739,10 +746,11 @@ pub fn task_rng() -> @Rng {\n }\n \n /**\n- * Returns a random uint, using the task's based random number generator.\n+ * Returns a random value of a Rand type, using the task's random number\n+ * generator.\n  */\n-pub fn random() -> uint {\n-    task_rng().gen_uint()\n+pub fn random<T: Rand>() -> T {\n+    task_rng().gen()\n }\n \n \n@@ -915,8 +923,10 @@ mod tests {\n \n     #[test]\n     fn random() {\n-        // not sure how to test this aside from just getting a number\n+        // not sure how to test this aside from just getting some values\n         let _n : uint = rand::random();\n+        let _f : f32 = rand::random();\n+        let _o : Option<Option<i8>> = rand::random();\n     }\n }\n "}]}