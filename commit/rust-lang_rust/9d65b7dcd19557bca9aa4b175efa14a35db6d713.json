{"sha": "9d65b7dcd19557bca9aa4b175efa14a35db6d713", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNjViN2RjZDE5NTU3YmNhOWFhNGIxNzVlZmExNGEzNWRiNmQ3MTM=", "commit": {"author": {"name": "Arjen Laarhoven", "email": "arjen@laarhoven.info", "date": "2021-07-15T17:55:52Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-09-15T02:22:26Z"}, "message": "feat: upper- or lowercase hexadecimal literals", "tree": {"sha": "fee29d017628b6ba8cc4235783f9028f4900da3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fee29d017628b6ba8cc4235783f9028f4900da3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d65b7dcd19557bca9aa4b175efa14a35db6d713", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d65b7dcd19557bca9aa4b175efa14a35db6d713", "html_url": "https://github.com/rust-lang/rust/commit/9d65b7dcd19557bca9aa4b175efa14a35db6d713", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d65b7dcd19557bca9aa4b175efa14a35db6d713/comments", "author": {"login": "ArjenL", "id": 22319, "node_id": "MDQ6VXNlcjIyMzE5", "avatar_url": "https://avatars.githubusercontent.com/u/22319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArjenL", "html_url": "https://github.com/ArjenL", "followers_url": "https://api.github.com/users/ArjenL/followers", "following_url": "https://api.github.com/users/ArjenL/following{/other_user}", "gists_url": "https://api.github.com/users/ArjenL/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArjenL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArjenL/subscriptions", "organizations_url": "https://api.github.com/users/ArjenL/orgs", "repos_url": "https://api.github.com/users/ArjenL/repos", "events_url": "https://api.github.com/users/ArjenL/events{/privacy}", "received_events_url": "https://api.github.com/users/ArjenL/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd", "html_url": "https://github.com/rust-lang/rust/commit/d4ffd1efa4c83084f05f6e83585ae0a70450bcfd"}], "stats": {"total": 79, "additions": 78, "deletions": 1}, "files": [{"sha": "b8f8f3053968f61281d4c233977d10d229003f1a", "filename": "Configurations.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9d65b7dcd19557bca9aa4b175efa14a35db6d713/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/9d65b7dcd19557bca9aa4b175efa14a35db6d713/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=9d65b7dcd19557bca9aa4b175efa14a35db6d713", "patch": "@@ -1056,6 +1056,13 @@ fn lorem() -> usize {\n \n See also: [`tab_spaces`](#tab_spaces).\n \n+## `hex_literal_case`\n+\n+Control the case of the letters in hexadecimal literal values\n+\n+- **Default value**: `Preserve`\n+- **Possible values**: `Upper`, `Lower`\n+- **Stable**: No\n \n ## `hide_parse_errors`\n "}, {"sha": "c6cee8ed22734bdf9139c1a57ec45a37944f44b3", "filename": "src/config/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9d65b7dcd19557bca9aa4b175efa14a35db6d713/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d65b7dcd19557bca9aa4b175efa14a35db6d713/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=9d65b7dcd19557bca9aa4b175efa14a35db6d713", "patch": "@@ -69,6 +69,8 @@ create_config! {\n     format_macro_matchers: bool, false, false,\n         \"Format the metavariable matching patterns in macros\";\n     format_macro_bodies: bool, true, false, \"Format the bodies of macros\";\n+    hex_literal_case: HexLiteralCase, HexLiteralCase::Preserve, false,\n+        \"Format hexadecimal integer literals\";\n \n     // Single line expressions and items\n     empty_item_single_line: bool, true, false,\n@@ -570,6 +572,7 @@ license_template_path = \"\"\n format_strings = false\n format_macro_matchers = false\n format_macro_bodies = true\n+hex_literal_case = \"Preserve\"\n empty_item_single_line = true\n struct_lit_single_line = true\n fn_single_line = false"}, {"sha": "e92f8e8a53152e666cec884eae3a8808bcf40d18", "filename": "src/config/options.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9d65b7dcd19557bca9aa4b175efa14a35db6d713/src%2Fconfig%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d65b7dcd19557bca9aa4b175efa14a35db6d713/src%2Fconfig%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Foptions.rs?ref=9d65b7dcd19557bca9aa4b175efa14a35db6d713", "patch": "@@ -129,6 +129,17 @@ pub enum ImportGranularity {\n     One,\n }\n \n+/// Controls how rustfmt should handle case in hexadecimal literals.\n+#[config_type]\n+pub enum HexLiteralCase {\n+    /// Leave the literal as-is\n+    Preserve,\n+    /// Ensure all literals use uppercase lettering\n+    Upper,\n+    /// Ensure all literals use lowercase lettering\n+    Lower,\n+}\n+\n #[config_type]\n pub enum ReportTactic {\n     Always,"}, {"sha": "01cc388c186efc9a204580b0cd808f24ff5a5698", "filename": "src/expr.rs", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/9d65b7dcd19557bca9aa4b175efa14a35db6d713/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d65b7dcd19557bca9aa4b175efa14a35db6d713/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=9d65b7dcd19557bca9aa4b175efa14a35db6d713", "patch": "@@ -13,7 +13,7 @@ use crate::comment::{\n     rewrite_missing_comment, CharClasses, FindUncommented,\n };\n use crate::config::lists::*;\n-use crate::config::{Config, ControlBraceStyle, IndentStyle, Version};\n+use crate::config::{Config, ControlBraceStyle, HexLiteralCase, IndentStyle, Version};\n use crate::lists::{\n     definitive_tactic, itemize_list, shape_for_tactic, struct_lit_formatting, struct_lit_shape,\n     struct_lit_tactic, write_list, ListFormatting, Separator,\n@@ -1168,6 +1168,7 @@ pub(crate) fn rewrite_literal(\n ) -> Option<String> {\n     match l.kind {\n         ast::LitKind::Str(_, ast::StrStyle::Cooked) => rewrite_string_lit(context, l.span, shape),\n+        ast::LitKind::Int(..) => rewrite_int_lit(context, l, shape),\n         _ => wrap_str(\n             context.snippet(l.span).to_owned(),\n             context.config.max_width(),\n@@ -1202,6 +1203,36 @@ fn rewrite_string_lit(context: &RewriteContext<'_>, span: Span, shape: Shape) ->\n     )\n }\n \n+fn rewrite_int_lit(context: &RewriteContext<'_>, lit: &ast::Lit, shape: Shape) -> Option<String> {\n+    let span = lit.span;\n+    let symbol = lit.token.symbol.as_str();\n+\n+    if symbol.starts_with(\"0x\") {\n+        let hex_lit = match context.config.hex_literal_case() {\n+            HexLiteralCase::Preserve => None,\n+            HexLiteralCase::Upper => Some(symbol[2..].to_ascii_uppercase()),\n+            HexLiteralCase::Lower => Some(symbol[2..].to_ascii_lowercase()),\n+        };\n+        if let Some(hex_lit) = hex_lit {\n+            return wrap_str(\n+                format!(\n+                    \"0x{}{}\",\n+                    hex_lit,\n+                    lit.token.suffix.map_or(String::new(), |s| s.to_string())\n+                ),\n+                context.config.max_width(),\n+                shape,\n+            );\n+        }\n+    }\n+\n+    wrap_str(\n+        context.snippet(span).to_owned(),\n+        context.config.max_width(),\n+        shape,\n+    )\n+}\n+\n fn choose_separator_tactic(context: &RewriteContext<'_>, span: Span) -> Option<SeparatorTactic> {\n     if context.inside_macro() {\n         if span_ends_with_comma(context, span) {"}, {"sha": "ce307b3aa521e29a192f36c2257cda2de18cb260", "filename": "tests/source/hex_literal_lower.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9d65b7dcd19557bca9aa4b175efa14a35db6d713/tests%2Fsource%2Fhex_literal_lower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d65b7dcd19557bca9aa4b175efa14a35db6d713/tests%2Fsource%2Fhex_literal_lower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fhex_literal_lower.rs?ref=9d65b7dcd19557bca9aa4b175efa14a35db6d713", "patch": "@@ -0,0 +1,5 @@\n+// rustfmt-hex_literal_case: Lower\n+fn main() {\n+    let h1 = 0xCAFE_5EA7;\n+    let h2 = 0xCAFE_F00Du32;\n+}"}, {"sha": "b1092ad71ba136af32ba6afc94a4eb4b6ca386d3", "filename": "tests/source/hex_literal_upper.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9d65b7dcd19557bca9aa4b175efa14a35db6d713/tests%2Fsource%2Fhex_literal_upper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d65b7dcd19557bca9aa4b175efa14a35db6d713/tests%2Fsource%2Fhex_literal_upper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fhex_literal_upper.rs?ref=9d65b7dcd19557bca9aa4b175efa14a35db6d713", "patch": "@@ -0,0 +1,5 @@\n+// rustfmt-hex_literal_case: Upper\n+fn main() {\n+    let h1 = 0xCaFE_5ea7;\n+    let h2 = 0xCAFE_F00Du32;\n+}"}, {"sha": "5c27fded1674308ed1ab255c3ad12cbf336661f6", "filename": "tests/target/hex_literal_lower.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9d65b7dcd19557bca9aa4b175efa14a35db6d713/tests%2Ftarget%2Fhex_literal_lower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d65b7dcd19557bca9aa4b175efa14a35db6d713/tests%2Ftarget%2Fhex_literal_lower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fhex_literal_lower.rs?ref=9d65b7dcd19557bca9aa4b175efa14a35db6d713", "patch": "@@ -0,0 +1,5 @@\n+// rustfmt-hex_literal_case: Lower\n+fn main() {\n+    let h1 = 0xcafe_5ea7;\n+    let h2 = 0xcafe_f00du32;\n+}"}, {"sha": "e8774d0bb24eb0e30f7c3570ff888d685f5ea755", "filename": "tests/target/hex_literal_preserve.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9d65b7dcd19557bca9aa4b175efa14a35db6d713/tests%2Ftarget%2Fhex_literal_preserve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d65b7dcd19557bca9aa4b175efa14a35db6d713/tests%2Ftarget%2Fhex_literal_preserve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fhex_literal_preserve.rs?ref=9d65b7dcd19557bca9aa4b175efa14a35db6d713", "patch": "@@ -0,0 +1,5 @@\n+// rustfmt-hex_literal_case: Preserve\n+fn main() {\n+    let h1 = 0xcAfE_5Ea7;\n+    let h2 = 0xCaFe_F00du32;\n+}"}, {"sha": "48bb93d2c1c08d7efc11ca562f5cd732f3cc0ee1", "filename": "tests/target/hex_literal_upper.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9d65b7dcd19557bca9aa4b175efa14a35db6d713/tests%2Ftarget%2Fhex_literal_upper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d65b7dcd19557bca9aa4b175efa14a35db6d713/tests%2Ftarget%2Fhex_literal_upper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fhex_literal_upper.rs?ref=9d65b7dcd19557bca9aa4b175efa14a35db6d713", "patch": "@@ -0,0 +1,5 @@\n+// rustfmt-hex_literal_case: Upper\n+fn main() {\n+    let h1 = 0xCAFE_5EA7;\n+    let h2 = 0xCAFE_F00Du32;\n+}"}]}