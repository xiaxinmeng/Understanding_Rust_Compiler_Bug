{"sha": "e820a03d1c905d58b27d7ac6d85f450f9754ba79", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4MjBhMDNkMWM5MDVkNThiMjdkN2FjNmQ4NWY0NTBmOTc1NGJhNzk=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-05-23T09:49:24Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-05-23T10:24:19Z"}, "message": "iterate List by value", "tree": {"sha": "166575f4933fcb498128513dfebc6e85f9698a92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/166575f4933fcb498128513dfebc6e85f9698a92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e820a03d1c905d58b27d7ac6d85f450f9754ba79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e820a03d1c905d58b27d7ac6d85f450f9754ba79", "html_url": "https://github.com/rust-lang/rust/commit/e820a03d1c905d58b27d7ac6d85f450f9754ba79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e820a03d1c905d58b27d7ac6d85f450f9754ba79/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3a690f5a1791dae79ab3dbbb3252e05f318adeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3a690f5a1791dae79ab3dbbb3252e05f318adeb", "html_url": "https://github.com/rust-lang/rust/commit/b3a690f5a1791dae79ab3dbbb3252e05f318adeb"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "1621c7f947c3314d96ffa3f0187985810acb633f", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e820a03d1c905d58b27d7ac6d85f450f9754ba79/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e820a03d1c905d58b27d7ac6d85f450f9754ba79/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=e820a03d1c905d58b27d7ac6d85f450f9754ba79", "patch": "@@ -111,7 +111,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n \n         let fn_def_id = cx.tcx.hir().local_def_id(hir_id);\n \n-        let preds = traits::elaborate_predicates(cx.tcx, cx.param_env.caller_bounds.iter().copied())\n+        let preds = traits::elaborate_predicates(cx.tcx, cx.param_env.caller_bounds.iter())\n             .filter(|p| !p.is_global())\n             .filter_map(|obligation| {\n                 if let ty::PredicateKind::Trait(poly_trait_ref, _) = obligation.predicate.kind() {\n@@ -179,7 +179,6 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n                                 .substs\n                                 .iter()\n                                 .skip(1)\n-                                .cloned()\n                                 .collect::<Vec<_>>();\n                             implements_trait(cx, ty_empty_region, t.def_id(), ty_params)\n                         })"}]}