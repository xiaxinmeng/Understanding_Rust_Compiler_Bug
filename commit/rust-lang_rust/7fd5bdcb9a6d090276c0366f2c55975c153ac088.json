{"sha": "7fd5bdcb9a6d090276c0366f2c55975c153ac088", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmZDViZGNiOWE2ZDA5MDI3NmMwMzY2ZjJjNTU5NzVjMTUzYWMwODg=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-06-26T18:16:09Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-09-06T20:35:06Z"}, "message": "try removing basically dead code in resolve", "tree": {"sha": "28a33ea7acef8748e78b6274c61234971016d91c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28a33ea7acef8748e78b6274c61234971016d91c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7fd5bdcb9a6d090276c0366f2c55975c153ac088", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7fd5bdcb9a6d090276c0366f2c55975c153ac088", "html_url": "https://github.com/rust-lang/rust/commit/7fd5bdcb9a6d090276c0366f2c55975c153ac088", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7fd5bdcb9a6d090276c0366f2c55975c153ac088/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72ee6af4d4e4d16a81e3f518f9c75f513a9a7dea", "url": "https://api.github.com/repos/rust-lang/rust/commits/72ee6af4d4e4d16a81e3f518f9c75f513a9a7dea", "html_url": "https://github.com/rust-lang/rust/commit/72ee6af4d4e4d16a81e3f518f9c75f513a9a7dea"}], "stats": {"total": 18, "additions": 3, "deletions": 15}, "files": [{"sha": "57e8150c71d9a2c4acb090d6852776fea137942c", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7fd5bdcb9a6d090276c0366f2c55975c153ac088/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fd5bdcb9a6d090276c0366f2c55975c153ac088/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=7fd5bdcb9a6d090276c0366f2c55975c153ac088", "patch": "@@ -4706,25 +4706,13 @@ impl Resolver {\n         return NoNameDefinition;\n     }\n \n-    pub fn intern_module_part_of_path(@mut self, path: &Path) -> ~[Ident] {\n-        let mut module_path_idents = ~[];\n-        for (index, segment) in path.segments.iter().enumerate() {\n-            if index == path.segments.len() - 1 {\n-                break;\n-            }\n-\n-            module_path_idents.push(segment.identifier);\n-        }\n-\n-        return module_path_idents;\n-    }\n-\n+    // resolve a \"module-relative\" path, e.g. a::b::c\n     pub fn resolve_module_relative_path(@mut self,\n                                         path: &Path,\n                                         xray: XrayFlag,\n                                         namespace: Namespace)\n                                         -> Option<Def> {\n-        let module_path_idents = self.intern_module_part_of_path(path);\n+        let module_path_idents = path.segments.init().map(|ps| ps.identifier);\n \n         let containing_module;\n         match self.resolve_module_path(self.current_module,\n@@ -4790,7 +4778,7 @@ impl Resolver {\n                                        xray: XrayFlag,\n                                        namespace: Namespace)\n                                        -> Option<Def> {\n-        let module_path_idents = self.intern_module_part_of_path(path);\n+        let module_path_idents = path.segments.init().map(|ps| ps.identifier);\n \n         let root_module = self.graph_root.get_module();\n "}]}