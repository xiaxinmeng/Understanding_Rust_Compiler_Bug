{"sha": "fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNDNmNmE3YTY1MWY1N2ZiMGNhNjVhNzA0Y2JhYTNkNzVlNzI3YTk=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-04-16T22:58:55Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-04-23T16:19:36Z"}, "message": "Update tests and move other tests around", "tree": {"sha": "2de0d38c7fafaf20cba457582af49d67a77b7822", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2de0d38c7fafaf20cba457582af49d67a77b7822"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9", "html_url": "https://github.com/rust-lang/rust/commit/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bea94993d2f3534caefb3bc1a53255869c0796e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/bea94993d2f3534caefb3bc1a53255869c0796e0", "html_url": "https://github.com/rust-lang/rust/commit/bea94993d2f3534caefb3bc1a53255869c0796e0"}], "stats": {"total": 284, "additions": 283, "deletions": 1}, "files": [{"sha": "4695360a688deeee69c8d38fdb9f484a8322f4b9", "filename": "src/test/compile-fail/borrowck-managed-pointer-deref-scope.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Fcompile-fail%2Fborrowck-managed-pointer-deref-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Fcompile-fail%2Fborrowck-managed-pointer-deref-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-managed-pointer-deref-scope.rs?ref=fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Verify that managed pointers scope is treated like ownoed pointers.\n+// regresion test for #11586\n+\n+#![feature(managed_boxes)]\n+\n+fn foo<'a>(x: &'a @int) -> &'a int {\n+    match x {\n+        &ref y => {\n+            &**y // Do not expect an error here\n+        }\n+    }\n+}\n+\n+fn bar() {\n+    let a = 3;\n+    let mut y = &a;\n+    if true {\n+        let x = @3;\n+        y = &*x; //~ ERROR `*x` does not live long enough\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "1508349344c9a2125d71ae123fa3820793ef9811", "filename": "src/test/compile-fail/regions-infer-borrow-scope-too-big.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-too-big.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-too-big.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-too-big.rs?ref=fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(managed_boxes)]\n+\n+struct point {\n+    x: int,\n+    y: int,\n+}\n+\n+fn x_coord<'r>(p: &'r point) -> &'r int {\n+    return &p.x;\n+}\n+\n+fn foo(p: @point) -> &int {\n+    let xc = x_coord(p); //~ ERROR `*p` does not live long enough\n+    assert_eq!(*xc, 3);\n+    return xc;\n+}\n+\n+fn main() {}"}, {"sha": "3cd70ce6c8a31511a141abbc80ac3c7aac6de492", "filename": "src/test/compile-fail/regions-infer-borrow-scope-within-loop.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-within-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-within-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-borrow-scope-within-loop.rs?ref=fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(managed_boxes)]\n+\n+fn borrow<'r, T>(x: &'r T) -> &'r T {x}\n+\n+fn foo(cond: || -> bool, make_box: || -> @int) {\n+    let mut y: &int;\n+    loop {\n+        let x = make_box();\n+\n+        // Here we complain because the resulting region\n+        // of this borrow is the fn body as a whole.\n+        y = borrow(x); //~ ERROR `*x` does not live long enough\n+\n+        assert_eq!(*x, *y);\n+        if cond() { break; }\n+    }\n+    assert!(*y != 0);\n+}\n+\n+fn main() {}"}, {"sha": "68a17266106561ac4fa3b16cc128224416444726", "filename": "src/test/compile-fail/struct-field-assignability.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Fcompile-fail%2Fstruct-field-assignability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Fcompile-fail%2Fstruct-field-assignability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-field-assignability.rs?ref=fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9", "patch": "@@ -15,6 +15,6 @@ struct Foo<'a> {\n }\n \n pub fn main() {\n-    let f = Foo { x: @3 };\n+    let f = Foo { x: @3 }; //~ ERROR borrowed value does not live long enough\n     assert_eq!(*f.x, 3);\n }", "previous_filename": "src/test/run-pass/struct-field-assignability.rs"}, {"sha": "f05b8c67d77e2e304db26f05813df513e738e76a", "filename": "src/test/run-pass/borrowck-preserve-box-in-field.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-field.rs?ref=fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9", "patch": "@@ -0,0 +1,37 @@\n+// ignore-pretty\n+\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// exec-env:RUST_POISON_ON_FREE=1\n+\n+#![feature(managed_boxes)]\n+\n+fn borrow(x: &int, f: |x: &int|) {\n+    let before = *x;\n+    f(x);\n+    let after = *x;\n+    assert_eq!(before, after);\n+}\n+\n+struct F { f: ~int }\n+\n+pub fn main() {\n+    let mut x = @F {f: ~3};\n+    borrow(x.f, |b_x| {\n+        assert_eq!(*b_x, 3);\n+        assert_eq!(&(*x.f) as *int, &(*b_x) as *int);\n+        x = @F {f: ~4};\n+\n+        println!(\"&*b_x = {:p}\", &(*b_x));\n+        assert_eq!(*b_x, 3);\n+        assert!(&(*x.f) as *int != &(*b_x) as *int);\n+    })\n+}"}, {"sha": "0896d4de625c91367f3eb88b88469f13f6771de1", "filename": "src/test/run-pass/borrowck-preserve-box-in-uniq.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-uniq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-uniq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-uniq.rs?ref=fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9", "patch": "@@ -0,0 +1,37 @@\n+// ignore-pretty\n+\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// exec-env:RUST_POISON_ON_FREE=1\n+\n+#![feature(managed_boxes)]\n+\n+fn borrow(x: &int, f: |x: &int|) {\n+    let before = *x;\n+    f(x);\n+    let after = *x;\n+    assert_eq!(before, after);\n+}\n+\n+struct F { f: ~int }\n+\n+pub fn main() {\n+    let mut x = ~@F{f: ~3};\n+    borrow(x.f, |b_x| {\n+        assert_eq!(*b_x, 3);\n+        assert_eq!(&(*x.f) as *int, &(*b_x) as *int);\n+        *x = @F{f: ~4};\n+\n+        println!(\"&*b_x = {:p}\", &(*b_x));\n+        assert_eq!(*b_x, 3);\n+        assert!(&(*x.f) as *int != &(*b_x) as *int);\n+    })\n+}"}, {"sha": "cfb9a4b91df176ca6620ecc8b14d4b9186b2db24", "filename": "src/test/run-pass/borrowck-preserve-box.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box.rs?ref=fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9", "patch": "@@ -0,0 +1,35 @@\n+// ignore-pretty\n+\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// exec-env:RUST_POISON_ON_FREE=1\n+\n+#![feature(managed_boxes)]\n+\n+fn borrow(x: &int, f: |x: &int|) {\n+    let before = *x;\n+    f(x);\n+    let after = *x;\n+    assert_eq!(before, after);\n+}\n+\n+pub fn main() {\n+    let mut x = @3;\n+    borrow(x, |b_x| {\n+        assert_eq!(*b_x, 3);\n+        assert_eq!(&(*x) as *int, &(*b_x) as *int);\n+        x = @22;\n+\n+        println!(\"&*b_x = {:p}\", &(*b_x));\n+        assert_eq!(*b_x, 3);\n+        assert!(&(*x) as *int != &(*b_x) as *int);\n+    })\n+}"}, {"sha": "52ea474dbf55072c5a0195462a4934210f686f28", "filename": "src/test/run-pass/borrowck-preserve-cond-box.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Frun-pass%2Fborrowck-preserve-cond-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Frun-pass%2Fborrowck-preserve-cond-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-preserve-cond-box.rs?ref=fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9", "patch": "@@ -0,0 +1,45 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// exec-env:RUST_POISON_ON_FREE=1\n+\n+#![feature(managed_boxes)]\n+\n+fn testfn(cond: bool) {\n+    let mut x = @3;\n+    let mut y = @4;\n+\n+    // borrow x and y\n+    let r_x = &*x;\n+    let r_y = &*y;\n+    let mut r = r_x;\n+    let mut exp = 3;\n+\n+    if cond {\n+        r = r_y;\n+        exp = 4;\n+    }\n+\n+    println!(\"*r = {}, exp = {}\", *r, exp);\n+    assert_eq!(*r, exp);\n+\n+    x = @5;\n+    y = @6;\n+\n+    println!(\"*r = {}, exp = {}\", *r, exp);\n+    assert_eq!(*r, exp);\n+    assert_eq!(x, @5);\n+    assert_eq!(y, @6);\n+}\n+\n+pub fn main() {\n+    testfn(true);\n+    testfn(false);\n+}"}, {"sha": "749c8063950038b84b14b22df48824d9a08e0a26", "filename": "src/test/run-pass/borrowck-preserve-expl-deref.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Frun-pass%2Fborrowck-preserve-expl-deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9/src%2Ftest%2Frun-pass%2Fborrowck-preserve-expl-deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-preserve-expl-deref.rs?ref=fa43f6a7a651f57fb0ca65a704cbaa3d75e727a9", "patch": "@@ -0,0 +1,37 @@\n+// ignore-pretty\n+\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// exec-env:RUST_POISON_ON_FREE=1\n+\n+#![feature(managed_boxes)]\n+\n+fn borrow(x: &int, f: |x: &int|) {\n+    let before = *x;\n+    f(x);\n+    let after = *x;\n+    assert_eq!(before, after);\n+}\n+\n+struct F { f: ~int }\n+\n+pub fn main() {\n+    let mut x = @F {f: ~3};\n+    borrow((*x).f, |b_x| {\n+        assert_eq!(*b_x, 3);\n+        assert_eq!(&(*x.f) as *int, &(*b_x) as *int);\n+        x = @F {f: ~4};\n+\n+        println!(\"&*b_x = {:p}\", &(*b_x));\n+        assert_eq!(*b_x, 3);\n+        assert!(&(*x.f) as *int != &(*b_x) as *int);\n+    })\n+}"}]}