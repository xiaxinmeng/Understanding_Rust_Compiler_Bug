{"sha": "4852cca61bb989adf77b1d202eae6b40067fa9ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NTJjY2E2MWJiOTg5YWRmNzdiMWQyMDJlYWU2YjQwMDY3ZmE5YWI=", "commit": {"author": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2020-11-09T12:49:14Z"}, "committer": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2020-11-09T12:49:14Z"}, "message": "Allow `let_underscore_drop` in `filter_methods` test", "tree": {"sha": "7b1eccda783a01a4bad57fe17f9b5f748e63395c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b1eccda783a01a4bad57fe17f9b5f748e63395c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4852cca61bb989adf77b1d202eae6b40067fa9ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4852cca61bb989adf77b1d202eae6b40067fa9ab", "html_url": "https://github.com/rust-lang/rust/commit/4852cca61bb989adf77b1d202eae6b40067fa9ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4852cca61bb989adf77b1d202eae6b40067fa9ab/comments", "author": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06e81bb49370a0154c3fa7de0bbc8b31c7bbe37b", "url": "https://api.github.com/repos/rust-lang/rust/commits/06e81bb49370a0154c3fa7de0bbc8b31c7bbe37b", "html_url": "https://github.com/rust-lang/rust/commit/06e81bb49370a0154c3fa7de0bbc8b31c7bbe37b"}], "stats": {"total": 56, "additions": 6, "deletions": 50}, "files": [{"sha": "514502416192640890c0c436981abcdb800f4d5e", "filename": "tests/ui/filter_methods.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4852cca61bb989adf77b1d202eae6b40067fa9ab/tests%2Fui%2Ffilter_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4852cca61bb989adf77b1d202eae6b40067fa9ab/tests%2Fui%2Ffilter_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_methods.rs?ref=4852cca61bb989adf77b1d202eae6b40067fa9ab", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::all, clippy::pedantic)]\n+#![allow(clippy::clippy::let_underscore_drop)]\n #![allow(clippy::missing_docs_in_private_items)]\n \n fn main() {"}, {"sha": "119226813793c172aba83986b6f15830039a6e5f", "filename": "tests/ui/filter_methods.stderr", "status": "modified", "additions": 5, "deletions": 50, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/4852cca61bb989adf77b1d202eae6b40067fa9ab/tests%2Fui%2Ffilter_methods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4852cca61bb989adf77b1d202eae6b40067fa9ab/tests%2Fui%2Ffilter_methods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_methods.stderr?ref=4852cca61bb989adf77b1d202eae6b40067fa9ab", "patch": "@@ -1,35 +1,14 @@\n-error: non-binding `let` on a type that implements `Drop`\n-  --> $DIR/filter_methods.rs:5:5\n-   |\n-LL |     let _: Vec<_> = vec![5; 6].into_iter().filter(|&x| x == 0).map(|x| x * 2).collect();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `-D clippy::let-underscore-drop` implied by `-D warnings`\n-   = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n-\n error: called `filter(..).map(..)` on an `Iterator`\n-  --> $DIR/filter_methods.rs:5:21\n+  --> $DIR/filter_methods.rs:6:21\n    |\n LL |     let _: Vec<_> = vec![5; 6].into_iter().filter(|&x| x == 0).map(|x| x * 2).collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::filter-map` implied by `-D warnings`\n    = help: this is more succinctly expressed by calling `.filter_map(..)` instead\n \n-error: non-binding `let` on a type that implements `Drop`\n-  --> $DIR/filter_methods.rs:7:5\n-   |\n-LL | /     let _: Vec<_> = vec![5_i8; 6]\n-LL | |         .into_iter()\n-LL | |         .filter(|&x| x == 0)\n-LL | |         .flat_map(|x| x.checked_mul(2))\n-LL | |         .collect();\n-   | |___________________^\n-   |\n-   = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n-\n error: called `filter(..).flat_map(..)` on an `Iterator`\n-  --> $DIR/filter_methods.rs:7:21\n+  --> $DIR/filter_methods.rs:8:21\n    |\n LL |       let _: Vec<_> = vec![5_i8; 6]\n    |  _____________________^\n@@ -40,20 +19,8 @@ LL | |         .flat_map(|x| x.checked_mul(2))\n    |\n    = help: this is more succinctly expressed by calling `.flat_map(..)` and filtering by returning `iter::empty()`\n \n-error: non-binding `let` on a type that implements `Drop`\n-  --> $DIR/filter_methods.rs:13:5\n-   |\n-LL | /     let _: Vec<_> = vec![5_i8; 6]\n-LL | |         .into_iter()\n-LL | |         .filter_map(|x| x.checked_mul(2))\n-LL | |         .flat_map(|x| x.checked_mul(2))\n-LL | |         .collect();\n-   | |___________________^\n-   |\n-   = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n-\n error: called `filter_map(..).flat_map(..)` on an `Iterator`\n-  --> $DIR/filter_methods.rs:13:21\n+  --> $DIR/filter_methods.rs:14:21\n    |\n LL |       let _: Vec<_> = vec![5_i8; 6]\n    |  _____________________^\n@@ -64,20 +31,8 @@ LL | |         .flat_map(|x| x.checked_mul(2))\n    |\n    = help: this is more succinctly expressed by calling `.flat_map(..)` and filtering by returning `iter::empty()`\n \n-error: non-binding `let` on a type that implements `Drop`\n-  --> $DIR/filter_methods.rs:19:5\n-   |\n-LL | /     let _: Vec<_> = vec![5_i8; 6]\n-LL | |         .into_iter()\n-LL | |         .filter_map(|x| x.checked_mul(2))\n-LL | |         .map(|x| x.checked_mul(2))\n-LL | |         .collect();\n-   | |___________________^\n-   |\n-   = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n-\n error: called `filter_map(..).map(..)` on an `Iterator`\n-  --> $DIR/filter_methods.rs:19:21\n+  --> $DIR/filter_methods.rs:20:21\n    |\n LL |       let _: Vec<_> = vec![5_i8; 6]\n    |  _____________________^\n@@ -88,5 +43,5 @@ LL | |         .map(|x| x.checked_mul(2))\n    |\n    = help: this is more succinctly expressed by only calling `.filter_map(..)` instead\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 4 previous errors\n "}]}