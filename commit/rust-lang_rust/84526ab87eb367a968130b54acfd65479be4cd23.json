{"sha": "84526ab87eb367a968130b54acfd65479be4cd23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0NTI2YWI4N2ViMzY3YTk2ODEzMGI1NGFjZmQ2NTQ3OWJlNGNkMjM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-03T14:51:19Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-03T14:51:19Z"}, "message": "Add get_bytepos_after_visibility()", "tree": {"sha": "4e811e69dc879c53ba802d2edaf80562d1561468", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e811e69dc879c53ba802d2edaf80562d1561468"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84526ab87eb367a968130b54acfd65479be4cd23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84526ab87eb367a968130b54acfd65479be4cd23", "html_url": "https://github.com/rust-lang/rust/commit/84526ab87eb367a968130b54acfd65479be4cd23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84526ab87eb367a968130b54acfd65479be4cd23/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af3d793e306482ade58ac95f59c068905c5739d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/af3d793e306482ade58ac95f59c068905c5739d3", "html_url": "https://github.com/rust-lang/rust/commit/af3d793e306482ade58ac95f59c068905c5739d3"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "27e46cb0874b6417da6a92ade63f829a5a9b268c", "filename": "src/items.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/84526ab87eb367a968130b54acfd65479be4cd23/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84526ab87eb367a968130b54acfd65479be4cd23/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=84526ab87eb367a968130b54acfd65479be4cd23", "patch": "@@ -1154,6 +1154,25 @@ pub fn format_struct_struct(\n     }\n }\n \n+/// Returns a bytepos that is after that of `(` in `pub(..)`. If the given visibility does not\n+/// contain `pub(..)`, then return the `lo` of the `defualt_span`. Yeah, but for what? Well, we need\n+/// to bypass the `(` in the visibility when creating a span of tuple's body or fn's args.\n+fn get_bytepos_after_visibility(\n+    context: &RewriteContext,\n+    vis: &ast::Visibility,\n+    default_span: Span,\n+    terminator: &str,\n+) -> BytePos {\n+    match *vis {\n+        ast::Visibility::Crate(s, CrateSugar::PubCrate) => context\n+            .codemap\n+            .span_after(mk_sp(s.hi(), default_span.hi()), terminator),\n+        ast::Visibility::Crate(s, CrateSugar::JustCrate) => s.hi(),\n+        ast::Visibility::Restricted { ref path, .. } => path.span.hi(),\n+        _ => default_span.lo(),\n+    }\n+}\n+\n fn format_tuple_struct(\n     context: &RewriteContext,\n     item_name: &str,"}]}