{"sha": "410145e0a7dfac0f9a09ac0cde7301f69a5e64b3", "node_id": "C_kwDOAAsO6NoAKDQxMDE0NWUwYTdkZmFjMGY5YTA5YWMwY2RlNzMwMWY2OWE1ZTY0YjM", "commit": {"author": {"name": "Badel2", "email": "2badel2@gmail.com", "date": "2022-02-11T01:10:02Z"}, "committer": {"name": "Badel2", "email": "2badel2@gmail.com", "date": "2022-02-12T13:23:35Z"}, "message": "Suggest disabling download-ci-llvm option if url fails to download", "tree": {"sha": "8eab2b22641e04dd9517ff459723ae306597bc99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8eab2b22641e04dd9517ff459723ae306597bc99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/410145e0a7dfac0f9a09ac0cde7301f69a5e64b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/410145e0a7dfac0f9a09ac0cde7301f69a5e64b3", "html_url": "https://github.com/rust-lang/rust/commit/410145e0a7dfac0f9a09ac0cde7301f69a5e64b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/410145e0a7dfac0f9a09ac0cde7301f69a5e64b3/comments", "author": {"login": "Badel2", "id": 15879619, "node_id": "MDQ6VXNlcjE1ODc5NjE5", "avatar_url": "https://avatars.githubusercontent.com/u/15879619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Badel2", "html_url": "https://github.com/Badel2", "followers_url": "https://api.github.com/users/Badel2/followers", "following_url": "https://api.github.com/users/Badel2/following{/other_user}", "gists_url": "https://api.github.com/users/Badel2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Badel2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Badel2/subscriptions", "organizations_url": "https://api.github.com/users/Badel2/orgs", "repos_url": "https://api.github.com/users/Badel2/repos", "events_url": "https://api.github.com/users/Badel2/events{/privacy}", "received_events_url": "https://api.github.com/users/Badel2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Badel2", "id": 15879619, "node_id": "MDQ6VXNlcjE1ODc5NjE5", "avatar_url": "https://avatars.githubusercontent.com/u/15879619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Badel2", "html_url": "https://github.com/Badel2", "followers_url": "https://api.github.com/users/Badel2/followers", "following_url": "https://api.github.com/users/Badel2/following{/other_user}", "gists_url": "https://api.github.com/users/Badel2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Badel2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Badel2/subscriptions", "organizations_url": "https://api.github.com/users/Badel2/orgs", "repos_url": "https://api.github.com/users/Badel2/repos", "events_url": "https://api.github.com/users/Badel2/events{/privacy}", "received_events_url": "https://api.github.com/users/Badel2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e646f3d2a9541952310778288854943678738ea9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e646f3d2a9541952310778288854943678738ea9", "html_url": "https://github.com/rust-lang/rust/commit/e646f3d2a9541952310778288854943678738ea9"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "6c1128b393fed9207bb2662cdc5beeffa0f69260", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/410145e0a7dfac0f9a09ac0cde7301f69a5e64b3/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/410145e0a7dfac0f9a09ac0cde7301f69a5e64b3/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=410145e0a7dfac0f9a09ac0cde7301f69a5e64b3", "patch": "@@ -63,7 +63,7 @@ def support_xz():\n     except tarfile.CompressionError:\n         return False\n \n-def get(base, url, path, checksums, verbose=False, do_verify=True):\n+def get(base, url, path, checksums, verbose=False, do_verify=True, help_on_error=None):\n     with tempfile.NamedTemporaryFile(delete=False) as temp_file:\n         temp_path = temp_file.name\n \n@@ -82,7 +82,7 @@ def get(base, url, path, checksums, verbose=False, do_verify=True):\n                         print(\"ignoring already-download file\",\n                             path, \"due to failed verification\")\n                     os.unlink(path)\n-        download(temp_path, \"{}/{}\".format(base, url), True, verbose)\n+        download(temp_path, \"{}/{}\".format(base, url), True, verbose, help_on_error=help_on_error)\n         if do_verify and not verify(temp_path, sha256, verbose):\n             raise RuntimeError(\"failed verification\")\n         if verbose:\n@@ -95,17 +95,17 @@ def get(base, url, path, checksums, verbose=False, do_verify=True):\n             os.unlink(temp_path)\n \n \n-def download(path, url, probably_big, verbose):\n+def download(path, url, probably_big, verbose, help_on_error=None):\n     for _ in range(0, 4):\n         try:\n-            _download(path, url, probably_big, verbose, True)\n+            _download(path, url, probably_big, verbose, True, help_on_error=help_on_error)\n             return\n         except RuntimeError:\n             print(\"\\nspurious failure, trying again\")\n-    _download(path, url, probably_big, verbose, False)\n+    _download(path, url, probably_big, verbose, False, help_on_error=help_on_error)\n \n \n-def _download(path, url, probably_big, verbose, exception):\n+def _download(path, url, probably_big, verbose, exception, help_on_error=None):\n     if probably_big or verbose:\n         print(\"downloading {}\".format(url))\n     # see https://serverfault.com/questions/301128/how-to-download\n@@ -126,7 +126,8 @@ def _download(path, url, probably_big, verbose, exception):\n              \"--connect-timeout\", \"30\",  # timeout if cannot connect within 30 seconds\n              \"--retry\", \"3\", \"-Sf\", \"-o\", path, url],\n             verbose=verbose,\n-            exception=exception)\n+            exception=exception,\n+            help_on_error=help_on_error)\n \n \n def verify(path, expected, verbose):\n@@ -167,7 +168,7 @@ def unpack(tarball, tarball_suffix, dst, verbose=False, match=None):\n     shutil.rmtree(os.path.join(dst, fname))\n \n \n-def run(args, verbose=False, exception=False, is_bootstrap=False, **kwargs):\n+def run(args, verbose=False, exception=False, is_bootstrap=False, help_on_error=None, **kwargs):\n     \"\"\"Run a child program in a new process\"\"\"\n     if verbose:\n         print(\"running: \" + ' '.join(args))\n@@ -178,6 +179,8 @@ def run(args, verbose=False, exception=False, is_bootstrap=False, **kwargs):\n     code = ret.wait()\n     if code != 0:\n         err = \"failed to run: \" + ' '.join(args)\n+        if help_on_error is not None:\n+            err += \"\\n\" + help_on_error\n         if verbose or exception:\n             raise RuntimeError(err)\n         # For most failures, we definitely do want to print this error, or the user will have no\n@@ -624,13 +627,22 @@ def _download_ci_llvm(self, llvm_sha, llvm_assertions):\n         filename = \"rust-dev-nightly-\" + self.build + tarball_suffix\n         tarball = os.path.join(rustc_cache, filename)\n         if not os.path.exists(tarball):\n+            help_on_error = \"error: failed to download llvm from ci\"\n+            help_on_error += \"\\nhelp: old builds get deleted after a certain time\"\n+            help_on_error += \"\\nhelp: if trying to compile an old commit of rustc,\"\n+            help_on_error += \" disable `download-ci-llvm` in config.toml:\"\n+            help_on_error += \"\\n\"\n+            help_on_error += \"\\n[llvm]\"\n+            help_on_error += \"\\ndownload-ci-llvm = false\"\n+            help_on_error += \"\\n\"\n             get(\n                 base,\n                 \"{}/{}\".format(url, filename),\n                 tarball,\n                 self.checksums_sha256,\n                 verbose=self.verbose,\n                 do_verify=False,\n+                help_on_error=help_on_error,\n             )\n         unpack(tarball, tarball_suffix, self.llvm_root(),\n                 match=\"rust-dev\","}]}