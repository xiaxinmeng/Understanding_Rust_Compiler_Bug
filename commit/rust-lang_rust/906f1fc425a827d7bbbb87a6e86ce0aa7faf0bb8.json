{"sha": "906f1fc425a827d7bbbb87a6e86ce0aa7faf0bb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwNmYxZmM0MjVhODI3ZDdiYmJiODdhNmU4NmNlMGFhN2ZhZjBiYjg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-15T15:46:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-15T15:47:23Z"}, "message": "Add regression tests for previously ambiguous syntactic forms", "tree": {"sha": "d1b8c31fd1209cd175f042f2ad8c36a68bcc3d5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1b8c31fd1209cd175f042f2ad8c36a68bcc3d5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/906f1fc425a827d7bbbb87a6e86ce0aa7faf0bb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/906f1fc425a827d7bbbb87a6e86ce0aa7faf0bb8", "html_url": "https://github.com/rust-lang/rust/commit/906f1fc425a827d7bbbb87a6e86ce0aa7faf0bb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/906f1fc425a827d7bbbb87a6e86ce0aa7faf0bb8/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7364a8c2b04c0d1ea9079a07348fe693bce90e0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7364a8c2b04c0d1ea9079a07348fe693bce90e0c", "html_url": "https://github.com/rust-lang/rust/commit/7364a8c2b04c0d1ea9079a07348fe693bce90e0c"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "7913f1e33bec0848872e4df325a2f34cf68c263f", "filename": "src/test/pretty/block-disambig.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/906f1fc425a827d7bbbb87a6e86ce0aa7faf0bb8/src%2Ftest%2Fpretty%2Fblock-disambig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906f1fc425a827d7bbbb87a6e86ce0aa7faf0bb8/src%2Ftest%2Fpretty%2Fblock-disambig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fblock-disambig.rs?ref=906f1fc425a827d7bbbb87a6e86ce0aa7faf0bb8", "patch": "@@ -0,0 +1,37 @@\n+// A bunch of tests for syntactic forms involving blocks that were\n+// previously ambiguous (e.g. 'if true { } *val;' gets parsed as a\n+// binop)\n+\n+fn test1() { let val = @0; { } *val; }\n+\n+fn test2() -> int { let val = @0; { } *val }\n+\n+fn test3() {\n+    let regs = @{mutable eax: 0};\n+    alt true { true { } }\n+    (*regs).eax = 1;\n+}\n+\n+fn test4() -> bool { let regs = @true; if true { } *regs || false }\n+\n+fn test5() -> (int, int) { { } (0, 1) }\n+\n+fn test6() -> bool { { } (true || false) && true }\n+\n+fn test7() -> uint {\n+    let regs = @0;\n+    alt true { true { } }\n+    (*regs < 2) as uint\n+}\n+\n+fn test8() -> int { let val = @0; alt true { true { } } *val < 1 ? 0 : 1 }\n+\n+fn test9() { let regs = @mutable 0; alt true { true { } } *regs += 1; }\n+\n+fn test10() -> int {\n+    let regs = @mutable [0];\n+    alt true { true { } }\n+    (*regs)[0]\n+}\n+\n+fn test11() -> [int] { if true { } [1, 2] }"}]}