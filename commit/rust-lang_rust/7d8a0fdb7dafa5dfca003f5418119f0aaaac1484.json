{"sha": "7d8a0fdb7dafa5dfca003f5418119f0aaaac1484", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkOGEwZmRiN2RhZmE1ZGZjYTAwM2Y1NDE4MTE5ZjBhYWFhYzE0ODQ=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-07-11T01:26:04Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-07-14T21:37:29Z"}, "message": "Give term.fg() and term.bg() a bool return value", "tree": {"sha": "58dba5a859d6bdc823c35a9362b5a1f60bc39e63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58dba5a859d6bdc823c35a9362b5a1f60bc39e63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d8a0fdb7dafa5dfca003f5418119f0aaaac1484", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d8a0fdb7dafa5dfca003f5418119f0aaaac1484", "html_url": "https://github.com/rust-lang/rust/commit/7d8a0fdb7dafa5dfca003f5418119f0aaaac1484", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d8a0fdb7dafa5dfca003f5418119f0aaaac1484/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cb1ac0f9f7bf98ea8ab5ccbd6ef319decc41a72", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cb1ac0f9f7bf98ea8ab5ccbd6ef319decc41a72", "html_url": "https://github.com/rust-lang/rust/commit/0cb1ac0f9f7bf98ea8ab5ccbd6ef319decc41a72"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "1740f4d1ecc165e41983bfc94b9c4f7e6abfdbfc", "filename": "src/libextra/term.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7d8a0fdb7dafa5dfca003f5418119f0aaaac1484/src%2Flibextra%2Fterm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d8a0fdb7dafa5dfca003f5418119f0aaaac1484/src%2Flibextra%2Fterm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fterm.rs?ref=7d8a0fdb7dafa5dfca003f5418119f0aaaac1484", "patch": "@@ -88,33 +88,41 @@ impl Terminal {\n     ///\n     /// If the color is a bright color, but the terminal only supports 8 colors,\n     /// the corresponding normal color will be used instead.\n-    pub fn fg(&self, color: color::Color) {\n+    ///\n+    /// Returns true if the color was set, false otherwise.\n+    pub fn fg(&self, color: color::Color) -> bool {\n         let color = self.dim_if_necessary(color);\n         if self.num_colors > color {\n             let s = expand(*self.ti.strings.find_equiv(&(\"setaf\")).unwrap(),\n                            [Number(color as int)], &mut Variables::new());\n             if s.is_ok() {\n                 self.out.write(s.unwrap());\n+                return true\n             } else {\n                 warn!(\"%s\", s.unwrap_err());\n             }\n         }\n+        false\n     }\n     /// Sets the background color to the given color.\n     ///\n     /// If the color is a bright color, but the terminal only supports 8 colors,\n     /// the corresponding normal color will be used instead.\n-    pub fn bg(&self, color: color::Color) {\n+    ///\n+    /// Rturns true if the color was set, false otherwise.\n+    pub fn bg(&self, color: color::Color) -> bool {\n         let color = self.dim_if_necessary(color);\n         if self.num_colors > color {\n             let s = expand(*self.ti.strings.find_equiv(&(\"setab\")).unwrap(),\n                            [Number(color as int)], &mut Variables::new());\n             if s.is_ok() {\n                 self.out.write(s.unwrap());\n+                return true\n             } else {\n                 warn!(\"%s\", s.unwrap_err());\n             }\n         }\n+        false\n     }\n     pub fn reset(&self) {\n         let mut vars = Variables::new();\n@@ -144,10 +152,12 @@ impl Terminal {\n         return Ok(Terminal {out: out, num_colors: 0});\n     }\n \n-    pub fn fg(&self, _color: color::Color) {\n+    pub fn fg(&self, _color: color::Color) -> bool {\n+        false\n     }\n \n-    pub fn bg(&self, _color: color::Color) {\n+    pub fn bg(&self, _color: color::Color) -> bool {\n+        false\n     }\n \n     pub fn reset(&self) {"}]}