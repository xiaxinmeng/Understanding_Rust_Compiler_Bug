{"sha": "47e9afa20bf5b4d1828e2b8c3e5fa049388e664f", "node_id": "C_kwDOAAsO6NoAKDQ3ZTlhZmEyMGJmNWI0ZDE4MjhlMmI4YzNlNWZhMDQ5Mzg4ZTY2NGY", "commit": {"author": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2022-05-09T13:48:57Z"}, "committer": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2022-05-09T13:48:57Z"}, "message": "fix clippy", "tree": {"sha": "9b12a1bda9be6c50c0a66659f3fb18c23b17f03e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b12a1bda9be6c50c0a66659f3fb18c23b17f03e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47e9afa20bf5b4d1828e2b8c3e5fa049388e664f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47e9afa20bf5b4d1828e2b8c3e5fa049388e664f", "html_url": "https://github.com/rust-lang/rust/commit/47e9afa20bf5b4d1828e2b8c3e5fa049388e664f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47e9afa20bf5b4d1828e2b8c3e5fa049388e664f/comments", "author": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13e8ace73c45a15e07e8e9b14f108b8691bb77b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/13e8ace73c45a15e07e8e9b14f108b8691bb77b7", "html_url": "https://github.com/rust-lang/rust/commit/13e8ace73c45a15e07e8e9b14f108b8691bb77b7"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "826eb0ae6b13b1cdc6d22049c5751969830d106c", "filename": "clippy_lints/src/collapsible_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/47e9afa20bf5b4d1828e2b8c3e5fa049388e664f/clippy_lints%2Fsrc%2Fcollapsible_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47e9afa20bf5b4d1828e2b8c3e5fa049388e664f/clippy_lints%2Fsrc%2Fcollapsible_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_match.rs?ref=47e9afa20bf5b4d1828e2b8c3e5fa049388e664f", "patch": "@@ -5,7 +5,7 @@ use clippy_utils::{is_lang_ctor, is_unit_expr, path_to_local, peel_blocks_with_s\n use if_chain::if_chain;\n use rustc_errors::MultiSpan;\n use rustc_hir::LangItem::OptionNone;\n-use rustc_hir::{Arm, Expr, Guard, HirId, Pat, PatKind};\n+use rustc_hir::{Arm, Expr, Guard, HirId, Let, Pat, PatKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Span;\n@@ -109,7 +109,7 @@ fn check_arm<'tcx>(\n             (Some(a), Some(b)) => SpanlessEq::new(cx).eq_expr(a, b),\n         };\n         // the binding must not be used in the if guard\n-        if outer_guard.map_or(true, |(Guard::If(e) | Guard::IfLet(_, e))| !is_local_used(cx, *e, binding_id));\n+        if outer_guard.map_or(true, |(Guard::If(e) | Guard::IfLet(Let { init: e, .. }))| !is_local_used(cx, *e, binding_id));\n         // ...or anywhere in the inner expression\n         if match inner {\n             IfLetOrMatch::IfLet(_, _, body, els) => {"}, {"sha": "d3d3ed2c2357e27b5b1f52fac2f7e9c79b166140", "filename": "clippy_lints/src/entry.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/47e9afa20bf5b4d1828e2b8c3e5fa049388e664f/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47e9afa20bf5b4d1828e2b8c3e5fa049388e664f/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=47e9afa20bf5b4d1828e2b8c3e5fa049388e664f", "patch": "@@ -11,7 +11,7 @@ use rustc_errors::Applicability;\n use rustc_hir::{\n     hir_id::HirIdSet,\n     intravisit::{walk_expr, Visitor},\n-    Block, Expr, ExprKind, Guard, HirId, Pat, Stmt, StmtKind, UnOp,\n+    Block, Expr, ExprKind, Guard, HirId, Let, Pat, Stmt, StmtKind, UnOp,\n };\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -478,7 +478,7 @@ impl<'tcx> Visitor<'tcx> for InsertSearcher<'_, 'tcx> {\n                     let mut is_map_used = self.is_map_used;\n                     for arm in arms {\n                         self.visit_pat(arm.pat);\n-                        if let Some(Guard::If(guard) | Guard::IfLet(_, guard)) = arm.guard {\n+                        if let Some(Guard::If(guard) | Guard::IfLet(&Let { init: guard, .. })) = arm.guard {\n                             self.visit_non_tail_expr(guard);\n                         }\n                         is_map_used |= self.visit_cond_arm(arm.body);"}, {"sha": "d66698f8adc6927e1546214232364e2a3c7bfc97", "filename": "clippy_lints/src/only_used_in_recursion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47e9afa20bf5b4d1828e2b8c3e5fa049388e664f/clippy_lints%2Fsrc%2Fonly_used_in_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47e9afa20bf5b4d1828e2b8c3e5fa049388e664f/clippy_lints%2Fsrc%2Fonly_used_in_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fonly_used_in_recursion.rs?ref=47e9afa20bf5b4d1828e2b8c3e5fa049388e664f", "patch": "@@ -596,7 +596,7 @@ impl<'tcx> SideEffectVisit<'tcx> {\n                 let mut vars = std::mem::take(&mut self.ret_vars);\n                 let _ = arm.guard.as_ref().map(|guard| {\n                     self.visit_expr(match guard {\n-                        Guard::If(expr) | Guard::IfLet(_, expr) => expr,\n+                        Guard::If(expr) | Guard::IfLet(Let { init: expr, .. }) => expr,\n                     });\n                     vars.append(&mut self.ret_vars);\n                 });"}, {"sha": "3f4d0fd199d0814cd712d285571c48a83d615379", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/47e9afa20bf5b4d1828e2b8c3e5fa049388e664f/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47e9afa20bf5b4d1828e2b8c3e5fa049388e664f/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=47e9afa20bf5b4d1828e2b8c3e5fa049388e664f", "patch": "@@ -315,11 +315,11 @@ impl<'a, 'tcx> PrintVisitor<'a, 'tcx> {\n                 out!(\"if let Some(Guard::If({expr})) = {arm}.guard;\");\n                 self.expr(expr);\n             },\n-            Some(hir::Guard::IfLet(pat, expr)) => {\n-                bind!(self, pat, expr);\n-                out!(\"if let Some(Guard::IfLet({pat}, {expr}) = {arm}.guard;\");\n-                self.pat(pat);\n-                self.expr(expr);\n+            Some(hir::Guard::IfLet(let_expr)) => {\n+                bind!(self, let_expr);\n+                out!(\"if let Some(Guard::IfLet({let_expr}) = {arm}.guard;\");\n+                self.pat(field!(let_expr.pat));\n+                self.expr(field!(let_expr.init));\n             },\n         }\n         self.expr(field!(arm.body));"}, {"sha": "aa21f15ee5d9dedf4452ae62941e5ac295f554c2", "filename": "clippy_utils/src/hir_utils.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47e9afa20bf5b4d1828e2b8c3e5fa049388e664f/clippy_utils%2Fsrc%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47e9afa20bf5b4d1828e2b8c3e5fa049388e664f/clippy_utils%2Fsrc%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fhir_utils.rs?ref=47e9afa20bf5b4d1828e2b8c3e5fa049388e664f", "patch": "@@ -301,7 +301,9 @@ impl HirEqInterExpr<'_, '_, '_> {\n     fn eq_guard(&mut self, left: &Guard<'_>, right: &Guard<'_>) -> bool {\n         match (left, right) {\n             (Guard::If(l), Guard::If(r)) => self.eq_expr(l, r),\n-            (Guard::IfLet(lp, le), Guard::IfLet(rp, re)) => self.eq_pat(lp, rp) && self.eq_expr(le, re),\n+            (Guard::IfLet(l), Guard::IfLet(r)) => {\n+                self.eq_pat(l.pat, r.pat) && both(&l.ty, &r.ty, |l, r| self.eq_ty(l, r)) && self.eq_expr(l.init, r.init)\n+            },\n             _ => false,\n         }\n     }\n@@ -894,7 +896,7 @@ impl<'a, 'tcx> SpanlessHash<'a, 'tcx> {\n \n     pub fn hash_guard(&mut self, g: &Guard<'_>) {\n         match g {\n-            Guard::If(expr) | Guard::IfLet(_, expr) => {\n+            Guard::If(expr) | Guard::IfLet(Let { init: expr, .. }) => {\n                 self.hash_expr(expr);\n             },\n         }"}]}