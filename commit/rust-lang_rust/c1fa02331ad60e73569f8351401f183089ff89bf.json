{"sha": "c1fa02331ad60e73569f8351401f183089ff89bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZmEwMjMzMWFkNjBlNzM1NjlmODM1MTQwMWYxODMwODlmZjg5YmY=", "commit": {"author": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-03-25T17:36:03Z"}, "committer": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-03-26T16:12:27Z"}, "message": "Fix ZST handling for `RawVec`", "tree": {"sha": "4b402401a59356b3dec52e9a2b68178dd5de0e7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b402401a59356b3dec52e9a2b68178dd5de0e7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1fa02331ad60e73569f8351401f183089ff89bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1fa02331ad60e73569f8351401f183089ff89bf", "html_url": "https://github.com/rust-lang/rust/commit/c1fa02331ad60e73569f8351401f183089ff89bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1fa02331ad60e73569f8351401f183089ff89bf/comments", "author": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9d35cc6967501818863adcb556991357098557d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9d35cc6967501818863adcb556991357098557d", "html_url": "https://github.com/rust-lang/rust/commit/d9d35cc6967501818863adcb556991357098557d"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a51d30448d1326c349a245a4901626089137a4a0", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c1fa02331ad60e73569f8351401f183089ff89bf/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1fa02331ad60e73569f8351401f183089ff89bf/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=c1fa02331ad60e73569f8351401f183089ff89bf", "patch": "@@ -483,14 +483,14 @@ impl<T, A: AllocRef> RawVec<T, A> {\n         placement: ReallocPlacement,\n         init: AllocInit,\n     ) -> Result<(), TryReserveError> {\n+        let elem_size = mem::size_of::<T>();\n+        if elem_size == 0 {\n+            // Since we return a capacity of `usize::MAX` when `elem_size` is\n+            // 0, getting to here necessarily means the `RawVec` is overfull.\n+            return Err(CapacityOverflow);\n+        }\n         let layout = match strategy {\n             Double => unsafe {\n-                let elem_size = mem::size_of::<T>();\n-                if elem_size == 0 {\n-                    // Since we return a capacity of `usize::MAX` when `elem_size` is\n-                    // 0, getting to here necessarily means the `RawVec` is overfull.\n-                    return Err(CapacityOverflow);\n-                }\n                 // Since we guarantee that we never allocate more than `isize::MAX` bytes,\n                 // `elem_size * self.cap <= isize::MAX` as a precondition, so this can't overflow.\n                 // Additionally the alignment will never be too large as to \"not be satisfiable\","}]}