{"sha": "14303bad89a049b5ca54ad49b4f4ccff7a06b85f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0MzAzYmFkODlhMDQ5YjVjYTU0YWQ0OWI0ZjRjY2ZmN2EwNmI4NWY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-09-07T19:06:42Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-09-07T20:00:03Z"}, "message": "Do not copy values of type () or _|_\n\nThis can trigger a crash because we assume we\ncan supply null ptrs and undefined values for\nvalues of those types, as we should be treated\nthem as zero-size.\n\nInterestingly, this crash only shows up (atm)\nin non-optimized builds.  Therefore, I added\na -Z no-opt flag so that the new test\n(capture_nil) can specify that it should not\nrun with optimizations enabled.", "tree": {"sha": "5ddc7106a7f21533f2a24a29eceb120716ac9756", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ddc7106a7f21533f2a24a29eceb120716ac9756"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14303bad89a049b5ca54ad49b4f4ccff7a06b85f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14303bad89a049b5ca54ad49b4f4ccff7a06b85f", "html_url": "https://github.com/rust-lang/rust/commit/14303bad89a049b5ca54ad49b4f4ccff7a06b85f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14303bad89a049b5ca54ad49b4f4ccff7a06b85f/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c21b3ff81847e9c9bcce83f961dffa385fa059ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/c21b3ff81847e9c9bcce83f961dffa385fa059ae", "html_url": "https://github.com/rust-lang/rust/commit/c21b3ff81847e9c9bcce83f961dffa385fa059ae"}], "stats": {"total": 80, "additions": 59, "deletions": 21}, "files": [{"sha": "04c71bdbe7269e8a8d23966dbd794b832cf5cebb", "filename": "src/rustc/driver/driver.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/14303bad89a049b5ca54ad49b4f4ccff7a06b85f/src%2Frustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14303bad89a049b5ca54ad49b4f4ccff7a06b85f/src%2Frustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Fdriver.rs?ref=14303bad89a049b5ca54ad49b4f4ccff7a06b85f", "patch": "@@ -514,8 +514,10 @@ fn build_session_options(binary: ~str,\n       link::output_type_llvm_assembly | link::output_type_assembly => (),\n       _ => debugging_opts |= session::no_asm_comments\n     }\n-    let opt_level =\n-        if opt_present(matches, ~\"O\") {\n+    let opt_level = {\n+        if (debugging_opts & session::no_opt) != 0 {\n+            No\n+        } else if opt_present(matches, ~\"O\") {\n             if opt_present(matches, ~\"opt-level\") {\n                 early_error(demitter, ~\"-O and --opt-level both provided\");\n             }\n@@ -531,7 +533,8 @@ fn build_session_options(binary: ~str,\n                             ~\"to be between 0-3\")\n               }\n             }\n-        } else { No };\n+        } else { No }\n+    };\n     let target =\n         match target_opt {\n             None => host_triple(),"}, {"sha": "22946e556e8a8d2e96cb4043d7ded0b425607322", "filename": "src/rustc/driver/session.rs", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/14303bad89a049b5ca54ad49b4f4ccff7a06b85f/src%2Frustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14303bad89a049b5ca54ad49b4f4ccff7a06b85f/src%2Frustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Fsession.rs?ref=14303bad89a049b5ca54ad49b4f4ccff7a06b85f", "patch": "@@ -38,25 +38,26 @@ type config =\n      uint_type: uint_ty,\n      float_type: float_ty};\n \n-const ppregions: uint = 1u;\n-const time_passes: uint = 2u;\n-const count_llvm_insns: uint = 4u;\n-const time_llvm_passes: uint = 8u;\n-const trans_stats: uint = 16u;\n-const no_asm_comments: uint = 32u;\n-const no_verify: uint = 64u;\n-const trace: uint = 128u;\n+const ppregions: uint = 1 << 0;\n+const time_passes: uint = 1 << 1;\n+const count_llvm_insns: uint = 1 << 2;\n+const time_llvm_passes: uint = 1 << 3;\n+const trans_stats: uint = 1 << 4;\n+const no_asm_comments: uint = 1 << 5;\n+const no_verify: uint = 1 << 6;\n+const trace: uint = 1 << 7;\n // FIXME (#2377): This exists to transition to a Rust crate runtime\n // It should be removed\n-const no_rt: uint = 256u;\n-const coherence: uint = 512u;\n-const borrowck_stats: uint = 1024u;\n-const borrowck_note_pure: uint = 2048;\n-const borrowck_note_loan: uint = 4096;\n-const no_landing_pads: uint = 8192;\n-const debug_llvm: uint = 16384;\n-const count_type_sizes: uint = 32768;\n-const meta_stats: uint = 65536;\n+const no_rt: uint = 1 << 8;\n+const coherence: uint = 1 << 9;\n+const borrowck_stats: uint = 1 << 10;\n+const borrowck_note_pure: uint = 1 << 11;\n+const borrowck_note_loan: uint = 1 << 12;\n+const no_landing_pads: uint = 1 << 13;\n+const debug_llvm: uint = 1 << 14;\n+const count_type_sizes: uint = 1 << 15;\n+const meta_stats: uint = 1 << 16;\n+const no_opt: uint = 1 << 17;\n \n fn debugging_opts_map() -> ~[(~str, ~str, uint)] {\n     ~[(~\"ppregions\", ~\"prettyprint regions with \\\n@@ -82,7 +83,8 @@ fn debugging_opts_map() -> ~[(~str, ~str, uint)] {\n      (~\"debug-llvm\", ~\"enable debug output from LLVM\", debug_llvm),\n      (~\"count-type-sizes\", ~\"count the sizes of aggregate types\",\n       count_type_sizes),\n-     (~\"meta-stats\", ~\"gather metadata statistics\", meta_stats)\n+     (~\"meta-stats\", ~\"gather metadata statistics\", meta_stats),\n+     (~\"no-opt\", ~\"do not optimize, even if -O is passed\", no_opt),\n     ]\n }\n "}, {"sha": "f70284ba547a32623a352c4a1cd6f7af784d09d3", "filename": "src/rustc/middle/trans/datum.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14303bad89a049b5ca54ad49b4f4ccff7a06b85f/src%2Frustc%2Fmiddle%2Ftrans%2Fdatum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14303bad89a049b5ca54ad49b4f4ccff7a06b85f/src%2Frustc%2Fmiddle%2Ftrans%2Fdatum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fdatum.rs?ref=14303bad89a049b5ca54ad49b4f4ccff7a06b85f", "patch": "@@ -241,6 +241,10 @@ impl Datum {\n \n         let _icx = bcx.insn_ctxt(\"copy_to\");\n \n+        if ty::type_is_nil(self.ty) || ty::type_is_bot(self.ty) {\n+            return bcx;\n+        }\n+\n         debug!(\"copy_to(self=%s, action=%?, dst=%s)\",\n                self.to_str(bcx.ccx()), action, bcx.val_str(dst));\n "}, {"sha": "41359ceec185b6a76c84749979263b08eac502f9", "filename": "src/test/run-pass/capture_nil.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/14303bad89a049b5ca54ad49b4f4ccff7a06b85f/src%2Ftest%2Frun-pass%2Fcapture_nil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14303bad89a049b5ca54ad49b4f4ccff7a06b85f/src%2Ftest%2Frun-pass%2Fcapture_nil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcapture_nil.rs?ref=14303bad89a049b5ca54ad49b4f4ccff7a06b85f", "patch": "@@ -0,0 +1,29 @@\n+// compile-flags:-Z no-opt\n+use comm::*;\n+\n+// This test has to be setup just so to trigger\n+// the condition which was causing us a crash.\n+// The situation is that we are capturing a\n+// () value by ref.  We generally feel free,\n+// however, to substitute NULL pointers and\n+// undefined values for values of () type, and\n+// so this caused a segfault when we copied into\n+// the closure.\n+//\n+// The fix is just to not emit any actual loads\n+// or stores for copies of () type (which is of\n+// course preferable, as the value itself is\n+// irrelevant).\n+\n+fn foo(&&x: ()) -> Port<()> {\n+    let p = Port();\n+    let c = Chan(p);\n+    do task::spawn() |copy c, copy x| {\n+        c.send(x);\n+    }\n+    p\n+}\n+\n+fn main() {\n+    foo(()).recv()\n+}"}]}