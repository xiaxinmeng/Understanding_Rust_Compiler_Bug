{"sha": "3e922e2ecf808cae8a59ea9d9e0d75abc09b3290", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlOTIyZTJlY2Y4MDhjYWU4YTU5ZWE5ZDllMGQ3NWFiYzA5YjMyOTA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-16T00:44:52Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-16T00:46:16Z"}, "message": "stdlib: Add some vector functions: empty, empty_mut, grow_set, and freeze. Change _vec.grow to use uint arguments.", "tree": {"sha": "43ba6b909b1402ae7553634dfa47455aa2cdfaaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43ba6b909b1402ae7553634dfa47455aa2cdfaaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e922e2ecf808cae8a59ea9d9e0d75abc09b3290", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e922e2ecf808cae8a59ea9d9e0d75abc09b3290", "html_url": "https://github.com/rust-lang/rust/commit/3e922e2ecf808cae8a59ea9d9e0d75abc09b3290", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e922e2ecf808cae8a59ea9d9e0d75abc09b3290/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "099e09476577aca9c7365d99e69ccde29aec9940", "url": "https://api.github.com/repos/rust-lang/rust/commits/099e09476577aca9c7365d99e69ccde29aec9940", "html_url": "https://github.com/rust-lang/rust/commit/099e09476577aca9c7365d99e69ccde29aec9940"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "ac2ffc8bcf83d825d0ef347e28cdc06f3f270c2d", "filename": "src/lib/_vec.rs", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/3e922e2ecf808cae8a59ea9d9e0d75abc09b3290/src%2Flib%2F_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e922e2ecf808cae8a59ea9d9e0d75abc09b3290/src%2Flib%2F_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_vec.rs?ref=3e922e2ecf808cae8a59ea9d9e0d75abc09b3290", "patch": "@@ -55,6 +55,16 @@ unsafe fn vec_from_vbuf[T](vbuf v, uint n_elts) -> vec[T] {\n     ret rustrt.vec_from_vbuf[T](v, n_elts);\n }\n \n+// FIXME: Remove me; this is a botch to get around rustboot's bad typechecker.\n+fn empty[T]() -> vec[T] {\n+    ret alloc[T](0u);\n+}\n+\n+// FIXME: Remove me; this is a botch to get around rustboot's bad typechecker.\n+fn empty_mut[T]() -> vec[mutable T] {\n+    ret alloc_mut[T](0u);\n+}\n+\n type init_op[T] = fn(uint i) -> T;\n \n fn init_fn[T](&init_op[T] op, uint n_elts) -> vec[T] {\n@@ -175,14 +185,22 @@ fn unshift[T](&mutable vec[mutable? T] v, &T t) {\n     v = res;\n }\n \n-fn grow[T](&mutable vec[mutable? T] v, int n, &T initval) {\n-    let int i = n;\n-    while (i > 0) {\n-        i -= 1;\n+fn grow[T](&mutable vec[mutable? T] v, uint n, &T initval) {\n+    let uint i = n;\n+    while (i > 0u) {\n+        i -= 1u;\n         v += vec(initval);\n     }\n }\n \n+fn grow_set[T](&mutable vec[mutable T] v, uint index, &T initval, &T val) {\n+    auto length = _vec.len[mutable T](v);\n+    if (index >= length) {\n+        grow[mutable T](v, index - length + 1u, initval);\n+    }\n+    v.(index) = val;\n+}\n+\n fn map[T, U](&option.operator[T,U] f, &vec[mutable? T] v) -> vec[U] {\n     let vec[U] u = alloc[U](len[T](v));\n     for (T ve in v) {\n@@ -262,6 +280,15 @@ fn plus_option[T](&vec[T] v, &option.t[T] o) -> () {\n     }\n }\n \n+// TODO: Remove in favor of built-in \"freeze\" operation when it's implemented.\n+fn freeze[T](vec[mutable T] v) -> vec[T] {\n+    let vec[T] result = vec();\n+    for (T elem in v) {\n+        result += vec(elem);\n+    }\n+    ret result;\n+}\n+\n // Local Variables:\n // mode: rust;\n // fill-column: 78;"}]}