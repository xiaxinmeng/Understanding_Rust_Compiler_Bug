{"sha": "5444f601dc02cd9f5fc886f438ea60310f664cc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0NDRmNjAxZGMwMmNkOWY1ZmM4ODZmNDM4ZWE2MDMxMGY2NjRjYzY=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-09-28T02:53:20Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-09-28T02:53:46Z"}, "message": "std::vec: Add benchmark for .concat_vec and .connect_vec", "tree": {"sha": "215347880074e025c8fbd53ea93c7a0cd0daa0bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/215347880074e025c8fbd53ea93c7a0cd0daa0bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5444f601dc02cd9f5fc886f438ea60310f664cc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5444f601dc02cd9f5fc886f438ea60310f664cc6", "html_url": "https://github.com/rust-lang/rust/commit/5444f601dc02cd9f5fc886f438ea60310f664cc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5444f601dc02cd9f5fc886f438ea60310f664cc6/comments", "author": null, "committer": null, "parents": [{"sha": "67394f20eb0176828bc65f5caf6f4044994d9fb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/67394f20eb0176828bc65f5caf6f4044994d9fb0", "html_url": "https://github.com/rust-lang/rust/commit/67394f20eb0176828bc65f5caf6f4044994d9fb0"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "ef4f508282c9e7e28bbaf2391d4a15f305148eb0", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5444f601dc02cd9f5fc886f438ea60310f664cc6/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5444f601dc02cd9f5fc886f438ea60310f664cc6/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=5444f601dc02cd9f5fc886f438ea60310f664cc6", "patch": "@@ -3758,7 +3758,9 @@ mod tests {\n #[cfg(test)]\n mod bench {\n     use extra::test::BenchHarness;\n+    use iter::range;\n     use vec;\n+    use vec::VectorVector;\n     use option::*;\n \n     #[bench]\n@@ -3798,4 +3800,20 @@ mod bench {\n             xs + ys;\n         }\n     }\n+\n+    #[bench]\n+    fn concat(bh: &mut BenchHarness) {\n+        let xss: &[~[uint]] = vec::from_fn(100, |i| range(0, i).collect());\n+        do bh.iter {\n+            xss.concat_vec();\n+        }\n+    }\n+\n+    #[bench]\n+    fn connect(bh: &mut BenchHarness) {\n+        let xss: &[~[uint]] = vec::from_fn(100, |i| range(0, i).collect());\n+        do bh.iter {\n+            xss.connect_vec(&0);\n+        }\n+    }\n }"}]}