{"sha": "e2b3543eabafb7ca143445b02c36ff7e412445b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyYjM1NDNlYWJhZmI3Y2ExNDM0NDViMDJjMzZmZjdlNDEyNDQ1YjE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-08-08T04:38:23Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-08-08T04:38:23Z"}, "message": "Return early to avoid failing assertion", "tree": {"sha": "c4cf443c07e0f55f0c168453a70cff19bc1d9c93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4cf443c07e0f55f0c168453a70cff19bc1d9c93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2b3543eabafb7ca143445b02c36ff7e412445b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2b3543eabafb7ca143445b02c36ff7e412445b1", "html_url": "https://github.com/rust-lang/rust/commit/e2b3543eabafb7ca143445b02c36ff7e412445b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2b3543eabafb7ca143445b02c36ff7e412445b1/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "476af31d59e753ce9e36c078a7d19169c560b7b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/476af31d59e753ce9e36c078a7d19169c560b7b9", "html_url": "https://github.com/rust-lang/rust/commit/476af31d59e753ce9e36c078a7d19169c560b7b9"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "e86230437f2771cc1dc1f5fca45d78c8da95de23", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2b3543eabafb7ca143445b02c36ff7e412445b1/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b3543eabafb7ca143445b02c36ff7e412445b1/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=e2b3543eabafb7ca143445b02c36ff7e412445b1", "patch": "@@ -73,7 +73,9 @@ fn lint_overflowing_range_endpoint<'a, 'tcx>(\n     // We only want to handle exclusive (`..`) ranges,\n     // which are represented as `ExprKind::Struct`.\n     if let ExprKind::Struct(_, eps, _) = &parent_expr.node {\n-        debug_assert_eq!(eps.len(), 2);\n+        if eps.len() != 2 {\n+            return false;\n+        }\n         // We can suggest using an inclusive range\n         // (`..=`) instead only if it is the `end` that is\n         // overflowing and only by 1."}, {"sha": "5223267a69a498a2ae4f27e113ffc72ed03e7b7a", "filename": "src/test/ui/issues/issue-63364.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e2b3543eabafb7ca143445b02c36ff7e412445b1/src%2Ftest%2Fui%2Fissues%2Fissue-63364.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2b3543eabafb7ca143445b02c36ff7e412445b1/src%2Ftest%2Fui%2Fissues%2Fissue-63364.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-63364.rs?ref=e2b3543eabafb7ca143445b02c36ff7e412445b1", "patch": "@@ -0,0 +1,10 @@\n+fn part(_: u16) -> u32 {\n+    1\n+}\n+\n+fn main() {\n+    for n in 100_000.. {\n+    //~^ ERROR: literal out of range for `u16`\n+        let _ = part(n);\n+    }\n+}"}, {"sha": "60ff318f35a1c1abb09a4da9c5cbe75405a4e4af", "filename": "src/test/ui/issues/issue-63364.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e2b3543eabafb7ca143445b02c36ff7e412445b1/src%2Ftest%2Fui%2Fissues%2Fissue-63364.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2b3543eabafb7ca143445b02c36ff7e412445b1/src%2Ftest%2Fui%2Fissues%2Fissue-63364.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-63364.stderr?ref=e2b3543eabafb7ca143445b02c36ff7e412445b1", "patch": "@@ -0,0 +1,10 @@\n+error: literal out of range for `u16`\n+  --> $DIR/issue-63364.rs:6:14\n+   |\n+LL |     for n in 100_000.. {\n+   |              ^^^^^^^\n+   |\n+   = note: `#[deny(overflowing_literals)]` on by default\n+\n+error: aborting due to previous error\n+"}]}