{"sha": "5eb4689d1f8ef9a4ccc91f5314994edeee17e072", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlYjQ2ODlkMWY4ZWY5YTRjY2M5MWY1MzE0OTk0ZWRlZWUxN2UwNzI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-27T08:47:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-27T08:47:51Z"}, "message": "Rollup merge of #49395 - petrochenkov:obsolete, r=alexcrichton\n\nlibsyntax: Remove obsolete.rs\n\nThis little piece of infra is obsolete (ha-ha) and is unlikely to be used in the future, even if new obsolete syntax appears.", "tree": {"sha": "1d753cf7c9e55fe79c085d6b946c9bb878ca8eae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d753cf7c9e55fe79c085d6b946c9bb878ca8eae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5eb4689d1f8ef9a4ccc91f5314994edeee17e072", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaugU3CRBK7hj4Ov3rIwAAdHIIAFNhLoFfkWDTtWEqCT58sFZO\nJcACgscYK2SUE8L+RnNCrxs8MB5Xa0rO0qw3AXbP3wsO6k3326mwR24Ke+zwghoc\ns43/mT0FMreX7/CdAMPhlvwZ9qyTWpUIzee+hc6YnweeT3Te6IXbnrqmiNtaRRM/\ncRA2+sI9l5qTYls/vU0atZVx7oSxZZWGf8FyxEidiz+ODwoxt4OnmlpP7H7FICh3\nF29bgalioYhB5M+Uw62tcURWq4IZhb5ASl2SFcnAjiJEfRUKBPZIIdSGERqYX/Io\n2F8GXX2qbwqxcKR9MpR/gBl+diizQUoLXUzPb6sU2dFeBqzbyqQf33z6jHKv3c4=\n=mg44\n-----END PGP SIGNATURE-----\n", "payload": "tree 1d753cf7c9e55fe79c085d6b946c9bb878ca8eae\nparent 1c45f6c051762d36a25c045c954a8a97130a7ad8\nparent 604bbee84cbd0ef5064bfd6b40c384268b1b38c0\nauthor kennytm <kennytm@gmail.com> 1522140471 +0200\ncommitter GitHub <noreply@github.com> 1522140471 +0200\n\nRollup merge of #49395 - petrochenkov:obsolete, r=alexcrichton\n\nlibsyntax: Remove obsolete.rs\n\nThis little piece of infra is obsolete (ha-ha) and is unlikely to be used in the future, even if new obsolete syntax appears.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5eb4689d1f8ef9a4ccc91f5314994edeee17e072", "html_url": "https://github.com/rust-lang/rust/commit/5eb4689d1f8ef9a4ccc91f5314994edeee17e072", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5eb4689d1f8ef9a4ccc91f5314994edeee17e072/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c45f6c051762d36a25c045c954a8a97130a7ad8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c45f6c051762d36a25c045c954a8a97130a7ad8", "html_url": "https://github.com/rust-lang/rust/commit/1c45f6c051762d36a25c045c954a8a97130a7ad8"}, {"sha": "604bbee84cbd0ef5064bfd6b40c384268b1b38c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/604bbee84cbd0ef5064bfd6b40c384268b1b38c0", "html_url": "https://github.com/rust-lang/rust/commit/604bbee84cbd0ef5064bfd6b40c384268b1b38c0"}], "stats": {"total": 74, "additions": 0, "deletions": 74}, "files": [{"sha": "1483691a1eaee04a88886ad1ea484376f9ba4d6b", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5eb4689d1f8ef9a4ccc91f5314994edeee17e072/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb4689d1f8ef9a4ccc91f5314994edeee17e072/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=5eb4689d1f8ef9a4ccc91f5314994edeee17e072", "patch": "@@ -40,7 +40,6 @@ pub mod attr;\n \n pub mod common;\n pub mod classify;\n-pub mod obsolete;\n \n /// Info about a parsing session.\n pub struct ParseSess {"}, {"sha": "49a697edf4164e64a7eb5fd2b4322d29478228a7", "filename": "src/libsyntax/parse/obsolete.rs", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/1c45f6c051762d36a25c045c954a8a97130a7ad8/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c45f6c051762d36a25c045c954a8a97130a7ad8/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fobsolete.rs?ref=1c45f6c051762d36a25c045c954a8a97130a7ad8", "patch": "@@ -1,67 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//! Support for parsing unsupported, old syntaxes, for the purpose of reporting errors. Parsing of\n-//! these syntaxes is tested by compile-test/obsolete-syntax.rs.\n-//!\n-//! Obsolete syntax that becomes too hard to parse can be removed.\n-\n-use syntax_pos::Span;\n-use parse::parser;\n-\n-/// The specific types of unsupported syntax\n-#[derive(Copy, Clone, PartialEq, Eq, Hash)]\n-pub enum ObsoleteSyntax {\n-    // Nothing here at the moment\n-}\n-\n-pub trait ParserObsoleteMethods {\n-    /// Reports an obsolete syntax non-fatal error.\n-    fn obsolete(&mut self, sp: Span, kind: ObsoleteSyntax);\n-    fn report(&mut self,\n-              sp: Span,\n-              kind: ObsoleteSyntax,\n-              kind_str: &str,\n-              desc: &str,\n-              error: bool);\n-}\n-\n-impl<'a> ParserObsoleteMethods for parser::Parser<'a> {\n-    /// Reports an obsolete syntax non-fatal error.\n-    #[allow(unused_variables)]\n-    #[allow(unreachable_code)]\n-    fn obsolete(&mut self, sp: Span, kind: ObsoleteSyntax) {\n-        let (kind_str, desc, error) = match kind {\n-            // Nothing here at the moment\n-        };\n-\n-        self.report(sp, kind, kind_str, desc, error);\n-    }\n-\n-    fn report(&mut self,\n-              sp: Span,\n-              kind: ObsoleteSyntax,\n-              kind_str: &str,\n-              desc: &str,\n-              error: bool) {\n-        let mut err = if error {\n-            self.diagnostic().struct_span_err(sp, &format!(\"obsolete syntax: {}\", kind_str))\n-        } else {\n-            self.diagnostic().struct_span_warn(sp, &format!(\"obsolete syntax: {}\", kind_str))\n-        };\n-\n-        if !self.obsolete_set.contains(&kind) &&\n-            (error || self.sess.span_diagnostic.flags.can_emit_warnings) {\n-            err.note(desc);\n-            self.obsolete_set.insert(kind);\n-        }\n-        err.emit();\n-    }\n-}"}, {"sha": "b4b21285d3b2b22391868cbe0cf338c76c7ec0ab", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5eb4689d1f8ef9a4ccc91f5314994edeee17e072/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eb4689d1f8ef9a4ccc91f5314994edeee17e072/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=5eb4689d1f8ef9a4ccc91f5314994edeee17e072", "patch": "@@ -48,7 +48,6 @@ use parse::{self, classify, token};\n use parse::common::SeqSep;\n use parse::lexer::TokenAndSpan;\n use parse::lexer::comments::{doc_comment_style, strip_doc_comment_decoration};\n-use parse::obsolete::ObsoleteSyntax;\n use parse::{new_sub_parser_from_file, ParseSess, Directory, DirectoryOwnership};\n use util::parser::{AssocOp, Fixity};\n use print::pprust;\n@@ -59,7 +58,6 @@ use symbol::{Symbol, keywords};\n use util::ThinVec;\n \n use std::cmp;\n-use std::collections::HashSet;\n use std::mem;\n use std::path::{self, Path, PathBuf};\n use std::slice;\n@@ -229,9 +227,6 @@ pub struct Parser<'a> {\n     /// the previous token kind\n     prev_token_kind: PrevTokenKind,\n     pub restrictions: Restrictions,\n-    /// The set of seen errors about obsolete syntax. Used to suppress\n-    /// extra detail when the same error is seen twice\n-    pub obsolete_set: HashSet<ObsoleteSyntax>,\n     /// Used to determine the path to externally loaded source files\n     pub directory: Directory,\n     /// Whether to parse sub-modules in other files.\n@@ -555,7 +550,6 @@ impl<'a> Parser<'a> {\n             meta_var_span: None,\n             prev_token_kind: PrevTokenKind::Other,\n             restrictions: Restrictions::empty(),\n-            obsolete_set: HashSet::new(),\n             recurse_into_file_modules,\n             directory: Directory {\n                 path: PathBuf::new(),"}]}