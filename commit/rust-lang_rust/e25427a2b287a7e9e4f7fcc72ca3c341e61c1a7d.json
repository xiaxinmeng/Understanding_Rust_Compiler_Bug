{"sha": "e25427a2b287a7e9e4f7fcc72ca3c341e61c1a7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyNTQyN2EyYjI4N2E3ZTllNGY3ZmNjNzJjYTNjMzQxZTYxYzFhN2Q=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-06-10T08:40:32Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-07-28T14:15:05Z"}, "message": "During my own review, I convinced myself this was indeed a bug.\n\nTesting indicates bug would have been caught, albeit later than one\nmight hope, during `sync::mpsc::tests::smoke_shared_port_gone2` test.", "tree": {"sha": "abf177ee14fd0b76c3e67edf65a72206a18fa6f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abf177ee14fd0b76c3e67edf65a72206a18fa6f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e25427a2b287a7e9e4f7fcc72ca3c341e61c1a7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e25427a2b287a7e9e4f7fcc72ca3c341e61c1a7d", "html_url": "https://github.com/rust-lang/rust/commit/e25427a2b287a7e9e4f7fcc72ca3c341e61c1a7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e25427a2b287a7e9e4f7fcc72ca3c341e61c1a7d/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dce1c61e977deed5e0a499f4247d5da870809692", "url": "https://api.github.com/repos/rust-lang/rust/commits/dce1c61e977deed5e0a499f4247d5da870809692", "html_url": "https://github.com/rust-lang/rust/commit/dce1c61e977deed5e0a499f4247d5da870809692"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "bc3603307a86c124f28e9a3a1e618a848ba3eb5f", "filename": "src/librustc_trans/trans/expr.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e25427a2b287a7e9e4f7fcc72ca3c341e61c1a7d/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e25427a2b287a7e9e4f7fcc72ca3c341e61c1a7d/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs?ref=e25427a2b287a7e9e4f7fcc72ca3c341e61c1a7d", "patch": "@@ -1004,22 +1004,22 @@ fn trans_rvalue_stmt_unadjusted<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n                 debuginfo::set_source_location(bcx.fcx, expr.id, expr.span);\n                 let src_datum = unpack_datum!(\n                     bcx, src_datum.to_rvalue_datum(bcx, \"ExprAssign\"));\n-                if let Some(hint_datum) = dst_datum.kind.drop_flag_info.hint_datum(bcx) {\n-                    let hint_val = hint_datum.to_value();\n-                    // XXX the checkpointed branch only does the\n-                    // drop_ty call within this branch (and I claim\n-                    // that seems like a bug). At this point I have\n-                    // moved it into the branch solely to see if it\n-                    // makes my plague of bugs go away.\n-                    bcx = glue::drop_ty_core(bcx,\n-                                             dst_datum.val,\n-                                             dst_datum.ty,\n-                                             expr.debug_loc(),\n-                                             false,\n-                                             Some(hint_val));\n-                    // We are initializing or overwriting the\n-                    // destination, so we need to write \"drop needed\"\n-                    // into the hint.\n+                let opt_hint_datum = dst_datum.kind.drop_flag_info.hint_datum(bcx);\n+                let opt_hint_val = opt_hint_datum.map(|d|d.to_value());\n+\n+                // 1. Drop the data at the destination, passing the\n+                //    drop-hint in case the lvalue has already been\n+                //    dropped or moved.\n+                bcx = glue::drop_ty_core(bcx,\n+                                         dst_datum.val,\n+                                         dst_datum.ty,\n+                                         expr.debug_loc(),\n+                                         false,\n+                                         opt_hint_val);\n+\n+                // 2. We are overwriting the destination; ensure that\n+                //    its drop-hint (if any) says \"initialized.\"\n+                if let Some(hint_val) = opt_hint_val {\n                     let hint_llval = hint_val.value();\n                     let drop_needed = C_u8(bcx.fcx.ccx, adt::DTOR_NEEDED_HINT as usize);\n                     Store(bcx, drop_needed, hint_llval);"}]}