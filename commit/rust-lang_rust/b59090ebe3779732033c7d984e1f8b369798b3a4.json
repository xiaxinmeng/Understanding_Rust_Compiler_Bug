{"sha": "b59090ebe3779732033c7d984e1f8b369798b3a4", "node_id": "C_kwDOAAsO6NoAKGI1OTA5MGViZTM3Nzk3MzIwMzNjN2Q5ODRlMWY4YjM2OTc5OGIzYTQ", "commit": {"author": {"name": "Arpad Borsos", "email": "swatinem@swatinem.de", "date": "2022-11-19T17:23:32Z"}, "committer": {"name": "Arpad Borsos", "email": "swatinem@swatinem.de", "date": "2022-11-19T17:23:32Z"}, "message": "Lower return type outside async block creation\n\nThis allows feeding a different output type to async blocks with a\ndifferent `ImplTraitContext`.", "tree": {"sha": "243c15270243e5a7f6691f7386cae2cb5e3b3e6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/243c15270243e5a7f6691f7386cae2cb5e3b3e6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b59090ebe3779732033c7d984e1f8b369798b3a4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZNNjbpmzULCa7LeL/HvKd4JLMpgFAmN5EeUACgkQ/HvKd4JL\nMpgL1BAAwv1j4Prk0IPIybkOjgrU5zhJN62mqkCGY2Xy+oV9cVIAj2pBmVziSqfG\npXDEyj2zUERO3y5NGiDTlVLq98O3AHU6Apci8CsTEZM0REHVDeths0mI7Ey8bXLX\ngnzDtXXY3tZw6HeTAFCcfjRD+ZhfM2x14dkeZq6vEXf4kMoJ8fMZ9DdnmYllkYTB\nppbQOls4id7N3iqRfXLbL/CcMlNqv3waPlN0d3HESpOvlg+ZxbXBbBRC+5W/Cxn2\n+5nXY4uhcjrgaFbjiDbMxC7MV+83EVbz6ew8JqFOIXRY7t5Lo6SamBmtMwiQZqDd\npcyP66dzCW+ItoR+3w3yKJgZ8PEKwFfUhCwzfu2lsvCiR+fWS6P/UW8dv6ywSRqn\nDvVR9AhVJHP3f75wuJfWsUbIh6MANfQLUHmAcGPd8CDXT3NoRy7cXeFYRgOnY5FA\nrn22tPePEuXqlQ6ovFdT/L8zPFtGq0qES6rVK6THK0F9bQc1Hy7cDPsWWwUoUnGs\nXkK3kiOk6kOHTPLYc+WpUfNw48aP4d84KyMLWKuiYIzQ9nZSlub6HBLFPLz0rNz8\nS3pMVGtNlLL7O7wdu12OuYwCTR1A/gWpZTrF7ma5Zxq6zxIcddW07gpJF7kaCR6c\nXf8UkAN2lgsD76xFTT88psnnuP0ntt2qV1FmuVv3AXD48p8XMWk=\n=7ki2\n-----END PGP SIGNATURE-----", "payload": "tree 243c15270243e5a7f6691f7386cae2cb5e3b3e6f\nparent 62c627c7a3a9b3e193a5ae6e1ec7348bc5136301\nauthor Arpad Borsos <swatinem@swatinem.de> 1668878612 +0100\ncommitter Arpad Borsos <swatinem@swatinem.de> 1668878612 +0100\n\nLower return type outside async block creation\n\nThis allows feeding a different output type to async blocks with a\ndifferent `ImplTraitContext`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b59090ebe3779732033c7d984e1f8b369798b3a4", "html_url": "https://github.com/rust-lang/rust/commit/b59090ebe3779732033c7d984e1f8b369798b3a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b59090ebe3779732033c7d984e1f8b369798b3a4/comments", "author": {"login": "Swatinem", "id": 580492, "node_id": "MDQ6VXNlcjU4MDQ5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/580492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swatinem", "html_url": "https://github.com/Swatinem", "followers_url": "https://api.github.com/users/Swatinem/followers", "following_url": "https://api.github.com/users/Swatinem/following{/other_user}", "gists_url": "https://api.github.com/users/Swatinem/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swatinem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swatinem/subscriptions", "organizations_url": "https://api.github.com/users/Swatinem/orgs", "repos_url": "https://api.github.com/users/Swatinem/repos", "events_url": "https://api.github.com/users/Swatinem/events{/privacy}", "received_events_url": "https://api.github.com/users/Swatinem/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Swatinem", "id": 580492, "node_id": "MDQ6VXNlcjU4MDQ5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/580492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swatinem", "html_url": "https://github.com/Swatinem", "followers_url": "https://api.github.com/users/Swatinem/followers", "following_url": "https://api.github.com/users/Swatinem/following{/other_user}", "gists_url": "https://api.github.com/users/Swatinem/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swatinem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swatinem/subscriptions", "organizations_url": "https://api.github.com/users/Swatinem/orgs", "repos_url": "https://api.github.com/users/Swatinem/repos", "events_url": "https://api.github.com/users/Swatinem/events{/privacy}", "received_events_url": "https://api.github.com/users/Swatinem/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62c627c7a3a9b3e193a5ae6e1ec7348bc5136301", "url": "https://api.github.com/repos/rust-lang/rust/commits/62c627c7a3a9b3e193a5ae6e1ec7348bc5136301", "html_url": "https://github.com/rust-lang/rust/commit/62c627c7a3a9b3e193a5ae6e1ec7348bc5136301"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "7cb794c2b09ec6e131d0e2233e060e3e7735299f", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b59090ebe3779732033c7d984e1f8b369798b3a4/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b59090ebe3779732033c7d984e1f8b369798b3a4/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=b59090ebe3779732033c7d984e1f8b369798b3a4", "patch": "@@ -588,17 +588,12 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         &mut self,\n         capture_clause: CaptureBy,\n         closure_node_id: NodeId,\n-        ret_ty: Option<AstP<Ty>>,\n+        ret_ty: Option<hir::FnRetTy<'hir>>,\n         span: Span,\n         async_gen_kind: hir::AsyncGeneratorKind,\n         body: impl FnOnce(&mut Self) -> hir::Expr<'hir>,\n     ) -> hir::ExprKind<'hir> {\n-        let output = match ret_ty {\n-            Some(ty) => hir::FnRetTy::Return(\n-                self.lower_ty(&ty, &ImplTraitContext::Disallowed(ImplTraitPosition::AsyncBlock)),\n-            ),\n-            None => hir::FnRetTy::DefaultReturn(self.lower_span(span)),\n-        };\n+        let output = ret_ty.unwrap_or_else(|| hir::FnRetTy::DefaultReturn(self.lower_span(span)));\n \n         // Resume argument type. We let the compiler infer this to simplify the lowering. It is\n         // fully constrained by `future::from_generator`.\n@@ -1003,8 +998,13 @@ impl<'hir> LoweringContext<'_, 'hir> {\n             // Transform `async |x: u8| -> X { ... }` into\n             // `|x: u8| future_from_generator(|| -> X { ... })`.\n             let body_id = this.lower_fn_body(&outer_decl, |this| {\n-                let async_ret_ty =\n-                    if let FnRetTy::Ty(ty) = &decl.output { Some(ty.clone()) } else { None };\n+                let async_ret_ty = if let FnRetTy::Ty(ty) = &decl.output {\n+                    let itctx = ImplTraitContext::Disallowed(ImplTraitPosition::AsyncBlock);\n+                    Some(hir::FnRetTy::Return(this.lower_ty(&ty, &itctx)))\n+                } else {\n+                    None\n+                };\n+\n                 let async_body = this.make_async_expr(\n                     capture_clause,\n                     inner_closure_id,"}]}