{"sha": "76da22e66aaccda4a428e41e233ef7f3732463fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ZGEyMmU2NmFhY2NkYTRhNDI4ZTQxZTIzM2VmN2YzNzMyNDYzZmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-18T12:22:51Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-18T12:27:04Z"}, "message": "Don't create a separate bin for format hook", "tree": {"sha": "4448743e0fff2822c3f6bde607e4a97374441be3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4448743e0fff2822c3f6bde607e4a97374441be3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76da22e66aaccda4a428e41e233ef7f3732463fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76da22e66aaccda4a428e41e233ef7f3732463fd", "html_url": "https://github.com/rust-lang/rust/commit/76da22e66aaccda4a428e41e233ef7f3732463fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76da22e66aaccda4a428e41e233ef7f3732463fd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b79d6789236bb53c5818949cc2960b5c4991cbeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b79d6789236bb53c5818949cc2960b5c4991cbeb", "html_url": "https://github.com/rust-lang/rust/commit/b79d6789236bb53c5818949cc2960b5c4991cbeb"}], "stats": {"total": 84, "additions": 36, "deletions": 48}, "files": [{"sha": "0823ca09ab1a1c56e0eafc48c5e45f7405e29a46", "filename": "docs/dev/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76da22e66aaccda4a428e41e233ef7f3732463fd/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/76da22e66aaccda4a428e41e233ef7f3732463fd/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=76da22e66aaccda4a428e41e233ef7f3732463fd", "patch": "@@ -55,7 +55,7 @@ We use Travis for CI. Most of the things, including formatting, are checked by\n be green as well. We use bors-ng to enforce the [not rocket\n science](https://graydon2.dreamwidth.org/1597.html) rule.\n \n-You can run `cargo format-hook` to install git-hook to run rustfmt on commit.\n+You can run `cargo xtask install-pre-commit-hook` to install git-hook to run rustfmt on commit.\n \n # Code organization\n "}, {"sha": "44507fb74873e15ef28941ef0acc0831c6233196", "filename": "xtask/src/bin/pre-commit.rs", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b79d6789236bb53c5818949cc2960b5c4991cbeb/xtask%2Fsrc%2Fbin%2Fpre-commit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79d6789236bb53c5818949cc2960b5c4991cbeb/xtask%2Fsrc%2Fbin%2Fpre-commit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fbin%2Fpre-commit.rs?ref=b79d6789236bb53c5818949cc2960b5c4991cbeb", "patch": "@@ -1,31 +0,0 @@\n-//! FIXME: write short doc here\n-\n-use std::process::Command;\n-\n-use xtask::{codegen::Mode, project_root, run, run_rustfmt, Result};\n-\n-fn main() -> Result<()> {\n-    run_rustfmt(Mode::Overwrite)?;\n-    update_staged()\n-}\n-\n-fn update_staged() -> Result<()> {\n-    let root = project_root();\n-    let output = Command::new(\"git\")\n-        .arg(\"diff\")\n-        .arg(\"--diff-filter=MAR\")\n-        .arg(\"--name-only\")\n-        .arg(\"--cached\")\n-        .current_dir(&root)\n-        .output()?;\n-    if !output.status.success() {\n-        anyhow::bail!(\n-            \"`git diff --diff-filter=MAR --name-only --cached` exited with {}\",\n-            output.status\n-        );\n-    }\n-    for line in String::from_utf8(output.stdout)?.lines() {\n-        run(&format!(\"git update-index --add {}\", root.join(line).to_string_lossy()), \".\")?;\n-    }\n-    Ok(())\n-}"}, {"sha": "f4e25dcde9d28f4723ceb4dbabd9741f168aa08c", "filename": "xtask/src/help.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76da22e66aaccda4a428e41e233ef7f3732463fd/xtask%2Fsrc%2Fhelp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76da22e66aaccda4a428e41e233ef7f3732463fd/xtask%2Fsrc%2Fhelp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fhelp.rs?ref=76da22e66aaccda4a428e41e233ef7f3732463fd", "patch": "@@ -10,7 +10,7 @@ FLAGS:\n \n SUBCOMMANDS:\n     format\n-    format-hook\n+    install-pre-commit-hook\n     fuzz-tests\n     codegen\n     install"}, {"sha": "7332a40729f77c0e5a7f49bbb5b026d680da3956", "filename": "xtask/src/lib.rs", "status": "modified", "additions": 26, "deletions": 12, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/76da22e66aaccda4a428e41e233ef7f3732463fd/xtask%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76da22e66aaccda4a428e41e233ef7f3732463fd/xtask%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Flib.rs?ref=76da22e66aaccda4a428e41e233ef7f3732463fd", "patch": "@@ -83,19 +83,12 @@ pub fn install_rustfmt() -> Result<()> {\n     run(&format!(\"rustup component add rustfmt --toolchain {}\", TOOLCHAIN), \".\")\n }\n \n-pub fn install_format_hook() -> Result<()> {\n-    let result_path = Path::new(if cfg!(windows) {\n-        \"./.git/hooks/pre-commit.exe\"\n-    } else {\n-        \"./.git/hooks/pre-commit\"\n-    });\n+pub fn install_pre_commit_hook() -> Result<()> {\n+    let result_path =\n+        PathBuf::from(format!(\"./.git/hooks/pre-commit{}\", std::env::consts::EXE_SUFFIX));\n     if !result_path.exists() {\n-        run(\"cargo build --package xtask --bin pre-commit\", \".\")?;\n-        if cfg!(windows) {\n-            fs::copy(\"./target/debug/pre-commit.exe\", result_path)?;\n-        } else {\n-            fs::copy(\"./target/debug/pre-commit\", result_path)?;\n-        }\n+        let me = std::env::current_exe()?;\n+        fs::copy(me, result_path)?;\n     } else {\n         Err(IoError::new(ErrorKind::AlreadyExists, \"Git hook already created\"))?;\n     }\n@@ -150,6 +143,27 @@ pub fn run_fuzzer() -> Result<()> {\n     run(\"rustup run nightly -- cargo fuzz run parser\", \"./crates/ra_syntax\")\n }\n \n+pub fn reformat_staged_files() -> Result<()> {\n+    let root = project_root();\n+    let output = Command::new(\"git\")\n+        .arg(\"diff\")\n+        .arg(\"--diff-filter=MAR\")\n+        .arg(\"--name-only\")\n+        .arg(\"--cached\")\n+        .current_dir(&root)\n+        .output()?;\n+    if !output.status.success() {\n+        anyhow::bail!(\n+            \"`git diff --diff-filter=MAR --name-only --cached` exited with {}\",\n+            output.status\n+        );\n+    }\n+    for line in String::from_utf8(output.stdout)?.lines() {\n+        run(&format!(\"git update-index --add {}\", root.join(line).to_string_lossy()), \".\")?;\n+    }\n+    Ok(())\n+}\n+\n fn do_run<F>(cmdline: &str, dir: &str, mut f: F) -> Result<Output>\n where\n     F: FnMut(&mut Command),"}, {"sha": "663e281035f43ecb9142e6064b74efefbf80c2a7", "filename": "xtask/src/main.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/76da22e66aaccda4a428e41e233ef7f3732463fd/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76da22e66aaccda4a428e41e233ef7f3732463fd/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=76da22e66aaccda4a428e41e233ef7f3732463fd", "patch": "@@ -16,7 +16,8 @@ use pico_args::Arguments;\n use std::{env, path::PathBuf};\n use xtask::{\n     codegen::{self, Mode},\n-    install_format_hook, run, run_clippy, run_fuzzer, run_rustfmt, run_with_output, Cmd, Result,\n+    install_pre_commit_hook, reformat_staged_files, run, run_clippy, run_fuzzer, run_rustfmt,\n+    run_with_output, Cmd, Result,\n };\n \n // Latest stable, feel free to send a PR if this lags behind.\n@@ -36,6 +37,10 @@ struct ServerOpt {\n }\n \n fn main() -> Result<()> {\n+    if std::env::args().next().map(|it| it.contains(\"pre-commit\")) == Some(true) {\n+        return reformat_staged_files();\n+    }\n+\n     let subcommand = match std::env::args_os().nth(1) {\n         None => {\n             eprintln!(\"{}\", help::GLOBAL_HELP);\n@@ -81,12 +86,12 @@ fn main() -> Result<()> {\n             }\n             run_rustfmt(Mode::Overwrite)?\n         }\n-        \"format-hook\" => {\n+        \"install-pre-commit-hook\" => {\n             if matches.contains([\"-h\", \"--help\"]) {\n                 help::print_no_param_subcommand_help(&subcommand);\n                 return Ok(());\n             }\n-            install_format_hook()?\n+            install_pre_commit_hook()?\n         }\n         \"lint\" => {\n             if matches.contains([\"-h\", \"--help\"]) {"}]}