{"sha": "daaa20e56560c289281c955f627892553f47fa68", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYWEyMGU1NjU2MGMyODkyODFjOTU1ZjYyNzg5MjU1M2Y0N2ZhNjg=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2014-07-30T22:35:02Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-31T18:50:24Z"}, "message": "Remove incorrect example\n\nThis now works because of elision.\n\nFixes #16117", "tree": {"sha": "d1b0fe751137ea4b158816c07f0d3b1e85c1b504", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1b0fe751137ea4b158816c07f0d3b1e85c1b504"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daaa20e56560c289281c955f627892553f47fa68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daaa20e56560c289281c955f627892553f47fa68", "html_url": "https://github.com/rust-lang/rust/commit/daaa20e56560c289281c955f627892553f47fa68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daaa20e56560c289281c955f627892553f47fa68/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5e74a93c39d904fb6e152d005e0a0c01dc2ed3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5e74a93c39d904fb6e152d005e0a0c01dc2ed3e", "html_url": "https://github.com/rust-lang/rust/commit/a5e74a93c39d904fb6e152d005e0a0c01dc2ed3e"}], "stats": {"total": 30, "additions": 0, "deletions": 30}, "files": [{"sha": "66faee3fa04c802e1ea199603477d95c71ae387e", "filename": "src/doc/guide-lifetimes.md", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/daaa20e56560c289281c955f627892553f47fa68/src%2Fdoc%2Fguide-lifetimes.md", "raw_url": "https://github.com/rust-lang/rust/raw/daaa20e56560c289281c955f627892553f47fa68/src%2Fdoc%2Fguide-lifetimes.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-lifetimes.md?ref=daaa20e56560c289281c955f627892553f47fa68", "patch": "@@ -431,36 +431,6 @@ In any case, whatever the lifetime of `r` is, the pointer produced by\n field of a struct is valid as long as the struct is valid. Therefore,\n the compiler accepts the function `get_x()`.\n \n-To emphasize this point, let\u2019s look at a variation on the example, this\n-time one that does not compile:\n-\n-~~~ {.ignore}\n-struct Point {x: f64, y: f64}\n-fn get_x_sh(p: &Point) -> &f64 {\n-    &p.x // Error reported here\n-}\n-~~~\n-\n-Here, the function `get_x_sh()` takes a reference as input and\n-returns a reference. As before, the lifetime of the reference\n-that will be returned is a parameter (specified by the\n-caller). That means that `get_x_sh()` promises to return a reference\n-that is valid for as long as the caller would like: this is\n-subtly different from the first example, which promised to return a\n-pointer that was valid for as long as its pointer argument was valid.\n-\n-Within `get_x_sh()`, we see the expression `&p.x` which takes the\n-address of a field of a Point. The presence of this expression\n-implies that the compiler must guarantee that , so long as the\n-resulting pointer is valid, the original Point won't be moved or changed.\n-\n-But recall that `get_x_sh()` also promised to\n-return a pointer that was valid for as long as the caller wanted it to\n-be. Clearly, `get_x_sh()` is not in a position to make both of these\n-guarantees; in fact, it cannot guarantee that the pointer will remain\n-valid at all once it returns, as the parameter `p` may or may not be\n-live in the caller. Therefore, the compiler will report an error here.\n-\n In general, if you borrow a struct or box to create a\n reference, it will only be valid within the function\n and cannot be returned. This is why the typical way to return references"}]}