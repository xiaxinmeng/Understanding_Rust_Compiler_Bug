{"sha": "6381daab773ca97ef6553d4d244cc9a8f49475a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzODFkYWFiNzczY2E5N2VmNjU1M2Q0ZDI0NGNjOWE4ZjQ5NDc1YTQ=", "commit": {"author": {"name": "Yuri Kunde Schlesner", "email": "yuriks@yuriks.net", "date": "2014-02-06T19:41:49Z"}, "committer": {"name": "Derek Guenther", "email": "dguenther9@gmail.com", "date": "2014-02-09T05:40:17Z"}, "message": "Default fourcc! to big-endian.\n\nIt was decided that a consistent result across platforms would be the\nmost useful and least surprising. A \"target\" option has been added to\nget the old behaviour of using the target platform's endianess.", "tree": {"sha": "9649aa6e4964251261ed133bdc5f6f75b3ac867d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9649aa6e4964251261ed133bdc5f6f75b3ac867d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6381daab773ca97ef6553d4d244cc9a8f49475a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6381daab773ca97ef6553d4d244cc9a8f49475a4", "html_url": "https://github.com/rust-lang/rust/commit/6381daab773ca97ef6553d4d244cc9a8f49475a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6381daab773ca97ef6553d4d244cc9a8f49475a4/comments", "author": {"login": "yuriks", "id": 341401, "node_id": "MDQ6VXNlcjM0MTQwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/341401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuriks", "html_url": "https://github.com/yuriks", "followers_url": "https://api.github.com/users/yuriks/followers", "following_url": "https://api.github.com/users/yuriks/following{/other_user}", "gists_url": "https://api.github.com/users/yuriks/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuriks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuriks/subscriptions", "organizations_url": "https://api.github.com/users/yuriks/orgs", "repos_url": "https://api.github.com/users/yuriks/repos", "events_url": "https://api.github.com/users/yuriks/events{/privacy}", "received_events_url": "https://api.github.com/users/yuriks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dguenther", "id": 767083, "node_id": "MDQ6VXNlcjc2NzA4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/767083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dguenther", "html_url": "https://github.com/dguenther", "followers_url": "https://api.github.com/users/dguenther/followers", "following_url": "https://api.github.com/users/dguenther/following{/other_user}", "gists_url": "https://api.github.com/users/dguenther/gists{/gist_id}", "starred_url": "https://api.github.com/users/dguenther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dguenther/subscriptions", "organizations_url": "https://api.github.com/users/dguenther/orgs", "repos_url": "https://api.github.com/users/dguenther/repos", "events_url": "https://api.github.com/users/dguenther/events{/privacy}", "received_events_url": "https://api.github.com/users/dguenther/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97078d43b20abc7510fde2e400500fed4c8b1eb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/97078d43b20abc7510fde2e400500fed4c8b1eb3", "html_url": "https://github.com/rust-lang/rust/commit/97078d43b20abc7510fde2e400500fed4c8b1eb3"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "2b017b501c98d9b1dd0401b2a1e6041fc36fc0ed", "filename": "src/libfourcc/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6381daab773ca97ef6553d4d244cc9a8f49475a4/src%2Flibfourcc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6381daab773ca97ef6553d4d244cc9a8f49475a4/src%2Flibfourcc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfourcc%2Flib.rs?ref=6381daab773ca97ef6553d4d244cc9a8f49475a4", "patch": "@@ -76,10 +76,11 @@ pub fn expand_syntax_ext(cx: &mut ExtCtxt, sp: Span, tts: &[ast::TokenTree]) ->\n     let (expr, endian) = parse_tts(cx, tts);\n \n     let little = match endian {\n-        None => target_endian_little(cx, sp),\n+        None => false,\n         Some(Ident{ident, span}) => match token::get_ident(ident.name).get() {\n             \"little\" => true,\n             \"big\" => false,\n+            \"target\" => target_endian_little(cx, sp),\n             _ => {\n                 cx.span_err(span, \"invalid endian directive in fourcc!\");\n                 target_endian_little(cx, sp)"}, {"sha": "be5e24d09d5de77d5e03ff9905d2a28b0064ff9c", "filename": "src/test/run-pass-fulldeps/syntax-extension-fourcc.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6381daab773ca97ef6553d4d244cc9a8f49475a4/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-fourcc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6381daab773ca97ef6553d4d244cc9a8f49475a4/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-fourcc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fsyntax-extension-fourcc.rs?ref=6381daab773ca97ef6553d4d244cc9a8f49475a4", "patch": "@@ -19,22 +19,25 @@\n extern mod fourcc;\n \n static static_val: u32 = fourcc!(\"foo \");\n-static static_val_le: u32 = fourcc!(\"foo \", little);\n static static_val_be: u32 = fourcc!(\"foo \", big);\n+static static_val_le: u32 = fourcc!(\"foo \", little);\n+static static_val_target: u32 = fourcc!(\"foo \", target);\n \n fn main() {\n-    let val = fourcc!(\"foo \");\n-    let exp = if cfg!(target_endian = \"big\") { 0x666f6f20u32 } else { 0x206f6f66u32 };\n-    assert_eq!(val, exp);\n-\n     let val = fourcc!(\"foo \", big);\n     assert_eq!(val, 0x666f6f20u32);\n+    assert_eq!(val, fourcc!(\"foo \"));\n \n     let val = fourcc!(\"foo \", little);\n     assert_eq!(val, 0x206f6f66u32);\n \n+    let val = fourcc!(\"foo \", target);\n     let exp = if cfg!(target_endian = \"big\") { 0x666f6f20u32 } else { 0x206f6f66u32 };\n-    assert_eq!(static_val, exp);\n-    assert_eq!(static_val_le, 0x206f6f66u32);\n+    assert_eq!(val, exp);\n+\n     assert_eq!(static_val_be, 0x666f6f20u32);\n+    assert_eq!(static_val, static_val_be);\n+    assert_eq!(static_val_le, 0x206f6f66u32);\n+    let exp = if cfg!(target_endian = \"big\") { 0x666f6f20u32 } else { 0x206f6f66u32 };\n+    assert_eq!(static_val_target, exp);\n }"}]}