{"sha": "f5ebcd922e2ef64ea6df17fa86e921304c88ca3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZWJjZDkyMmUyZWY2NGVhNmRmMTdmYTg2ZTkyMTMwNGM4OGNhM2M=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-03-11T22:26:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-11T22:26:12Z"}, "message": "Merge pull request #2513 from rtsuk/master\n\nRestore cargo fmt behavior in workspaces", "tree": {"sha": "9bdb57fc042b6cf40b592711efcd407a5745426a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bdb57fc042b6cf40b592711efcd407a5745426a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5ebcd922e2ef64ea6df17fa86e921304c88ca3c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJapa0ECRBK7hj4Ov3rIwAAdHIIAGdinqyFr8ulNOWR0Jxh3oUI\nj6A4U/89mxti+XzQ3upFkblyGkA8LZ64nxdymvjputoKbXy+mm9La9W/ORnLLovn\n7tEXEccTx3+fl176aChaYrcLNlti4Gdi62J2/UgLDHMxI1LIklvfI+TaWiso5NTN\nJPPn/Q+yK3+JLp+Amv1mm14gUqmLM23Cuy11MTK6gxJdoGLlrK2njmhIFDqJ9H7E\nKUH4dcS2sW2kPoMZE0UBs+BSPladAuvsQv8dq8HYqcoQkBlc1HTT30DGHFrPAQBV\nzl8Fmzzfi2yv5Jm/F+ZCBstBYgPd9zic1vefHYszH37jG+vZ6LNIQkiq5Jpe8MQ=\n=hDbj\n-----END PGP SIGNATURE-----\n", "payload": "tree 9bdb57fc042b6cf40b592711efcd407a5745426a\nparent bcaeab7a5e9f751e640e22ec65879a5ed4fd9c0a\nparent a1f979678878d893fd29959e7c892682431bbe4c\nauthor Nick Cameron <nrc@ncameron.org> 1520807172 +1300\ncommitter GitHub <noreply@github.com> 1520807172 +1300\n\nMerge pull request #2513 from rtsuk/master\n\nRestore cargo fmt behavior in workspaces"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5ebcd922e2ef64ea6df17fa86e921304c88ca3c", "html_url": "https://github.com/rust-lang/rust/commit/f5ebcd922e2ef64ea6df17fa86e921304c88ca3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5ebcd922e2ef64ea6df17fa86e921304c88ca3c/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcaeab7a5e9f751e640e22ec65879a5ed4fd9c0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcaeab7a5e9f751e640e22ec65879a5ed4fd9c0a", "html_url": "https://github.com/rust-lang/rust/commit/bcaeab7a5e9f751e640e22ec65879a5ed4fd9c0a"}, {"sha": "a1f979678878d893fd29959e7c892682431bbe4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1f979678878d893fd29959e7c892682431bbe4c", "html_url": "https://github.com/rust-lang/rust/commit/a1f979678878d893fd29959e7c892682431bbe4c"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "e3a0647499ef7368c8e1fc8de29817daf6e0039f", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5ebcd922e2ef64ea6df17fa86e921304c88ca3c/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f5ebcd922e2ef64ea6df17fa86e921304c88ca3c/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=f5ebcd922e2ef64ea6df17fa86e921304c88ca3c", "patch": "@@ -45,7 +45,7 @@ log = \"0.4\"\n env_logger = \"0.5\"\n getopts = \"0.2\"\n derive-new = \"0.5\"\n-cargo_metadata = \"0.5\"\n+cargo_metadata = \"0.5.1\"\n rustc-ap-syntax = \"60.0.0\"\n rustc-ap-rustc_errors = \"60.0.0\"\n "}, {"sha": "855a45568b7e698b0896a5054f2a683dbf948ed7", "filename": "src/cargo-fmt/main.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f5ebcd922e2ef64ea6df17fa86e921304c88ca3c/src%2Fcargo-fmt%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5ebcd922e2ef64ea6df17fa86e921304c88ca3c/src%2Fcargo-fmt%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo-fmt%2Fmain.rs?ref=f5ebcd922e2ef64ea6df17fa86e921304c88ca3c", "patch": "@@ -249,10 +249,16 @@ fn get_targets(strategy: &CargoFmtStrategy) -> Result<HashSet<Target>, io::Error\n \n fn get_targets_root_only(targets: &mut HashSet<Target>) -> Result<(), io::Error> {\n     let metadata = get_cargo_metadata(None)?;\n+    let current_dir = env::current_dir()?.canonicalize()?;\n+    let current_dir_manifest = current_dir.join(\"Cargo.toml\");\n+    let workspace_root_path = PathBuf::from(&metadata.workspace_root).canonicalize()?;\n+    let in_workspace_root = workspace_root_path == current_dir;\n \n     for package in metadata.packages {\n-        for target in package.targets {\n-            targets.insert(Target::from_target(&target));\n+        if in_workspace_root || PathBuf::from(&package.manifest_path) == current_dir_manifest {\n+            for target in package.targets {\n+                targets.insert(Target::from_target(&target));\n+            }\n         }\n     }\n "}]}