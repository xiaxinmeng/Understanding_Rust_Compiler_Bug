{"sha": "8c7ae41f621a2e524bb6585882828314142da9e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjN2FlNDFmNjIxYTJlNTI0YmI2NTg1ODgyODI4MzE0MTQyZGE5ZTg=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-31T13:04:19Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-31T13:15:08Z"}, "message": "Remove code comment", "tree": {"sha": "ebaf0d6df8dd870caad43b4557b125fc01f0047d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebaf0d6df8dd870caad43b4557b125fc01f0047d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c7ae41f621a2e524bb6585882828314142da9e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c7ae41f621a2e524bb6585882828314142da9e8", "html_url": "https://github.com/rust-lang/rust/commit/8c7ae41f621a2e524bb6585882828314142da9e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c7ae41f621a2e524bb6585882828314142da9e8/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9164653c10b7aa7cfea2b0556ca7c332e6df4a0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b", "html_url": "https://github.com/rust-lang/rust/commit/9164653c10b7aa7cfea2b0556ca7c332e6df4a0b"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "d1d2b3b872a4b10002163eafe76e6eb664c88151", "filename": "src/num.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c7ae41f621a2e524bb6585882828314142da9e8/src%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c7ae41f621a2e524bb6585882828314142da9e8/src%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fnum.rs?ref=8c7ae41f621a2e524bb6585882828314142da9e8", "patch": "@@ -280,7 +280,6 @@ pub(crate) fn codegen_checked_int_binop<'tcx>(\n                     (val, fx.bcx.ins().bor(has_underflow, has_overflow))\n                 }\n                 types::I64 => {\n-                    //let val = fx.easy_call(\"__mulodi4\", &[lhs, rhs, overflow_ptr], types::I64);\n                     let val = fx.bcx.ins().imul(lhs, rhs);\n                     let has_overflow = if !signed {\n                         let val_hi = fx.bcx.ins().umulhi(lhs, rhs);"}]}