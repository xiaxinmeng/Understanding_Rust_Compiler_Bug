{"sha": "cafef7b576203f166add9ed143979d9775c25219", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZmVmN2I1NzYyMDNmMTY2YWRkOWVkMTQzOTc5ZDk3NzVjMjUyMTk=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-09-06T17:21:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-06T17:21:14Z"}, "message": "Merge pull request #3137 from matthiaskrgr/clippy_git_version\n\nprint git commit hash and commit date in version output", "tree": {"sha": "484ac35eaa3fd38c596d9ee35a575f4ec56bf2c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/484ac35eaa3fd38c596d9ee35a575f4ec56bf2c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cafef7b576203f166add9ed143979d9775c25219", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbkWIKCRBK7hj4Ov3rIwAAdHIIAE1EgFT4bj+VB32qJQD7Fhdd\nhTVtboyl8ychQG59IyI7PoeydRSP0iUBnmY/KnzcF+Em10m8TQDyf64qYn+GzWnN\nu40HjPUEgpLwuZQyG7uJsfRYtc3QvTIq0TAFDrPzQPCEp8Sa949gMdjqh0vGf8w7\n7W46zAjyxsiuWh0ZY8rUV3S/hPSaBPxYHjB/6zKXaM1xskNgLBXfq24cMdpevBF2\n9BtPqqt0+zDAJ3UAccbAXeDoMBwJAunJXyINsYGUP9eVfwC72u9K0E2/yvr/LZBu\nE42T3nBTC4GmkrQ0efwQwndguZnHot51iWX/EOkNme7sLsjsCRB/V2JEJ9uywNo=\n=CXiO\n-----END PGP SIGNATURE-----\n", "payload": "tree 484ac35eaa3fd38c596d9ee35a575f4ec56bf2c9\nparent 5fca61409fd16d010ee2ebda3ac86aaed0498278\nparent fa11aad92a20aaf64c1ee4f43015fba9b6d24b62\nauthor Philipp Hansch <dev@phansch.net> 1536254474 +0100\ncommitter GitHub <noreply@github.com> 1536254474 +0100\n\nMerge pull request #3137 from matthiaskrgr/clippy_git_version\n\nprint git commit hash and commit date in version output"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cafef7b576203f166add9ed143979d9775c25219", "html_url": "https://github.com/rust-lang/rust/commit/cafef7b576203f166add9ed143979d9775c25219", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cafef7b576203f166add9ed143979d9775c25219/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fca61409fd16d010ee2ebda3ac86aaed0498278", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fca61409fd16d010ee2ebda3ac86aaed0498278", "html_url": "https://github.com/rust-lang/rust/commit/5fca61409fd16d010ee2ebda3ac86aaed0498278"}, {"sha": "fa11aad92a20aaf64c1ee4f43015fba9b6d24b62", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa11aad92a20aaf64c1ee4f43015fba9b6d24b62", "html_url": "https://github.com/rust-lang/rust/commit/fa11aad92a20aaf64c1ee4f43015fba9b6d24b62"}], "stats": {"total": 119, "additions": 113, "deletions": 6}, "files": [{"sha": "166cab60a5803f2b0342d8a0f1c219734ca69973", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cafef7b576203f166add9ed143979d9775c25219/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/cafef7b576203f166add9ed143979d9775c25219/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=cafef7b576203f166add9ed143979d9775c25219", "patch": "@@ -20,6 +20,7 @@ Cargo.lock\n /clippy_lints/target\n /clippy_workspace_tests/target\n /clippy_dev/target\n+/rustc_tools_util/target\n \n # Generated by dogfood\n /target_recur/"}, {"sha": "b293f06713d862f72b02ed303a49cbd1333607e7", "filename": "Cargo.toml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cafef7b576203f166add9ed143979d9775c25219/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/cafef7b576203f166add9ed143979d9775c25219/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=cafef7b576203f166add9ed143979d9775c25219", "patch": "@@ -44,6 +44,7 @@ clippy_lints = { version = \"0.0.212\", path = \"clippy_lints\" }\n # end automatic update\n regex = \"1\"\n semver = \"0.9\"\n+rustc_tools_util = { version = \"0.1.0\", path = \"rustc_tools_util\"}\n \n [dev-dependencies]\n clippy_dev = { version = \"0.0.1\", path = \"clippy_dev\" }\n@@ -60,5 +61,8 @@ derive-new = \"0.5\"\n # for more information.\n rustc-workspace-hack = \"1.0.0\"\n \n+[build-dependencies]\n+rustc_tools_util = { version = \"0.1.0\", path = \"rustc_tools_util\"}\n+\n [features]\n debugging = []"}, {"sha": "146a8dae74596a25c5042447e846f4a38c1888c2", "filename": "build.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cafef7b576203f166add9ed143979d9775c25219/build.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cafef7b576203f166add9ed143979d9775c25219/build.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build.rs?ref=cafef7b576203f166add9ed143979d9775c25219", "patch": "@@ -1,8 +1,15 @@\n-use std::env;\n-\n fn main() {\n     // Forward the profile to the main compilation\n-    println!(\"cargo:rustc-env=PROFILE={}\", env::var(\"PROFILE\").unwrap());\n+    println!(\"cargo:rustc-env=PROFILE={}\", std::env::var(\"PROFILE\").unwrap());\n     // Don't rebuild even if nothing changed\n     println!(\"cargo:rerun-if-changed=build.rs\");\n+    // forward git repo hashes we build at\n+    println!(\n+        \"cargo:rustc-env=GIT_HASH={}\",\n+        rustc_tools_util::get_commit_hash().unwrap_or_default()\n+    );\n+    println!(\n+        \"cargo:rustc-env=COMMIT_DATE={}\",\n+        rustc_tools_util::get_commit_date().unwrap_or_default()\n+    );\n }"}, {"sha": "94a810e4ef4f19c605ef68843d80ec20763678bf", "filename": "ci/base-tests.sh", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cafef7b576203f166add9ed143979d9775c25219/ci%2Fbase-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/cafef7b576203f166add9ed143979d9775c25219/ci%2Fbase-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbase-tests.sh?ref=cafef7b576203f166add9ed143979d9775c25219", "patch": "@@ -20,6 +20,8 @@ cd clippy_workspace_tests/src && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D\n cd clippy_workspace_tests/subcrate && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy::all && cd ../..\n cd clippy_workspace_tests/subcrate/src && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy::all && cd ../../..\n cd clippy_dev && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy::all && cd ..\n+cd rustc_tools_util/ && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy::all && cd ..\n+\n # test --manifest-path\n PATH=$PATH:~/rust/cargo/bin cargo clippy --manifest-path=clippy_workspace_tests/Cargo.toml -- -D clippy::all\n cd clippy_workspace_tests/subcrate && PATH=$PATH:~/rust/cargo/bin cargo clippy --manifest-path=../Cargo.toml -- -D clippy::all && cd ../.."}, {"sha": "01dca0a65b053adb3a4e247f21fad7293fba9d34", "filename": "rustc_tools_util/Cargo.toml", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cafef7b576203f166add9ed143979d9775c25219/rustc_tools_util%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/cafef7b576203f166add9ed143979d9775c25219/rustc_tools_util%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tools_util%2FCargo.toml?ref=cafef7b576203f166add9ed143979d9775c25219", "patch": "@@ -0,0 +1,8 @@\n+cargo-features = [\"edition\"]\n+\n+[package]\n+name = \"rustc_tools_util\"\n+version = \"0.1.0\"\n+authors = [\"Matthias Kr\u00fcger <matthias.krueger@famsik.de>\"]\n+edition = \"2018\"\n+[dependencies]"}, {"sha": "20b598346f1efe9b2efc17d676ae03d8b0bcde02", "filename": "rustc_tools_util/src/lib.rs", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/cafef7b576203f166add9ed143979d9775c25219/rustc_tools_util%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cafef7b576203f166add9ed143979d9775c25219/rustc_tools_util%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tools_util%2Fsrc%2Flib.rs?ref=cafef7b576203f166add9ed143979d9775c25219", "patch": "@@ -0,0 +1,82 @@\n+#![feature(tool_lints)]\n+\n+use std::env;\n+\n+#[macro_export]\n+macro_rules! get_version_info {\n+    () => {{\n+        let major = env!(\"CARGO_PKG_VERSION_MAJOR\").parse::<u8>().unwrap();\n+        let minor = env!(\"CARGO_PKG_VERSION_MINOR\").parse::<u8>().unwrap();\n+        let patch = env!(\"CARGO_PKG_VERSION_PATCH\").parse::<u16>().unwrap();\n+\n+        let host_compiler = $crate::get_channel();\n+        let commit_hash = option_env!(\"GIT_HASH\").map(|s| s.to_string());\n+        let commit_date = option_env!(\"COMMIT_DATE\").map(|s| s.to_string());\n+\n+        VersionInfo {\n+            major,\n+            minor,\n+            patch,\n+            host_compiler,\n+            commit_hash,\n+            commit_date,\n+        }\n+    }};\n+}\n+\n+// some code taken and adapted from RLS and cargo\n+pub struct VersionInfo {\n+    pub major: u8,\n+    pub minor: u8,\n+    pub patch: u16,\n+    pub host_compiler: Option<String>,\n+    pub commit_hash: Option<String>,\n+    pub commit_date: Option<String>,\n+}\n+\n+impl std::fmt::Display for VersionInfo {\n+    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n+        match self.commit_hash {\n+            Some(_) => {\n+                write!(\n+                    f,\n+                    \"clippy {}.{}.{} ({} {})\",\n+                    self.major,\n+                    self.minor,\n+                    self.patch,\n+                    self.commit_hash.clone().unwrap_or_default().trim(),\n+                    self.commit_date.clone().unwrap_or_default().trim(),\n+                )?;\n+            },\n+            None => {\n+                write!(f, \"clippy {}.{}.{}\", self.major, self.minor, self.patch)?;\n+            },\n+        };\n+        Ok(())\n+    }\n+}\n+\n+pub fn get_channel() -> Option<String> {\n+    if let Ok(channel) = env::var(\"CFG_RELEASE_CHANNEL\") {\n+        Some(channel)\n+    } else {\n+        // we could ask ${RUSTC} -Vv and do some parsing and find out\n+        Some(String::from(\"nightly\"))\n+    }\n+}\n+\n+pub fn get_commit_hash() -> Option<String> {\n+    std::process::Command::new(\"git\")\n+        .args(&[\"rev-parse\", \"--short\", \"HEAD\"])\n+        .output()\n+        .ok()\n+        .and_then(|r| String::from_utf8(r.stdout).ok())\n+}\n+\n+pub fn get_commit_date() -> Option<String> {\n+    std::process::Command::new(\"git\")\n+        .args(&[\"log\", \"-1\", \"--date=short\", \"--pretty=format:%cd\"])\n+        .output()\n+        .ok()\n+        .and_then(|r| String::from_utf8(r.stdout).ok())\n+}"}, {"sha": "cf26549774c22c269f6973265454cb739f947fc3", "filename": "src/main.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cafef7b576203f166add9ed143979d9775c25219/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cafef7b576203f166add9ed143979d9775c25219/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=cafef7b576203f166add9ed143979d9775c25219", "patch": "@@ -4,6 +4,8 @@\n #![feature(tool_lints)]\n #![allow(unknown_lints, clippy::missing_docs_in_private_items)]\n \n+use rustc_tools_util::*;\n+\n const CARGO_CLIPPY_HELP: &str = r#\"Checks a package to catch common mistakes and improve your Rust code.\n \n Usage:\n@@ -36,7 +38,8 @@ fn show_help() {\n \n #[allow(clippy::print_stdout)]\n fn show_version() {\n-    println!(env!(\"CARGO_PKG_VERSION\"));\n+    let version_info = rustc_tools_util::get_version_info!();\n+    println!(\"{}\", version_info);\n }\n \n pub fn main() {\n@@ -45,6 +48,7 @@ pub fn main() {\n         show_help();\n         return;\n     }\n+\n     if std::env::args().any(|a| a == \"--version\" || a == \"-V\") {\n         show_version();\n         return;\n@@ -94,8 +98,7 @@ where\n                         .into_os_string()\n                 },\n             )\n-        })\n-        .map(|p| (\"CARGO_TARGET_DIR\", p));\n+        }).map(|p| (\"CARGO_TARGET_DIR\", p));\n \n     let exit_status = std::process::Command::new(\"cargo\")\n         .args(&args)"}]}