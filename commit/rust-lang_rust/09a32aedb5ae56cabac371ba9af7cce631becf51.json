{"sha": "09a32aedb5ae56cabac371ba9af7cce631becf51", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5YTMyYWVkYjVhZTU2Y2FiYWMzNzFiYTlhZjdjY2U2MzFiZWNmNTE=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-05-30T22:45:29Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-05-31T00:39:53Z"}, "message": "Remove warnings in std::par.", "tree": {"sha": "42e4b7f0ac98b6e0489a9d00410003823f7c0c38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42e4b7f0ac98b6e0489a9d00410003823f7c0c38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09a32aedb5ae56cabac371ba9af7cce631becf51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09a32aedb5ae56cabac371ba9af7cce631becf51", "html_url": "https://github.com/rust-lang/rust/commit/09a32aedb5ae56cabac371ba9af7cce631becf51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09a32aedb5ae56cabac371ba9af7cce631becf51/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58fdbdc4ef7cee014775bafff23830900fcaf3ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/58fdbdc4ef7cee014775bafff23830900fcaf3ca", "html_url": "https://github.com/rust-lang/rust/commit/58fdbdc4ef7cee014775bafff23830900fcaf3ca"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "e3e5d3d815a4c0e4e44fbe492e9a1a977948d16b", "filename": "src/libstd/par.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/09a32aedb5ae56cabac371ba9af7cce631becf51/src%2Flibstd%2Fpar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09a32aedb5ae56cabac371ba9af7cce631becf51/src%2Flibstd%2Fpar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpar.rs?ref=09a32aedb5ae56cabac371ba9af7cce631becf51", "patch": "@@ -75,7 +75,7 @@ fn map_slices<A: copy send, B: copy send>(\n #[doc=\"A parallel version of map.\"]\n fn map<A: copy send, B: copy send>(xs: [A], f: fn~(A) -> B) -> [B] {\n     vec::concat(map_slices(xs) {||\n-        fn~(_base: uint, slice : [const A]/&) -> [B] {\n+        fn~(_base: uint, slice : [const A]/&, copy f) -> [B] {\n             vec::map(slice, f)\n         }\n     })\n@@ -84,7 +84,7 @@ fn map<A: copy send, B: copy send>(xs: [A], f: fn~(A) -> B) -> [B] {\n #[doc=\"A parallel version of mapi.\"]\n fn mapi<A: copy send, B: copy send>(xs: [A], f: fn~(uint, A) -> B) -> [B] {\n     let slices = map_slices(xs) {||\n-        fn~(base: uint, slice : [const A]/&) -> [B] {\n+        fn~(base: uint, slice : [const A]/&, copy f) -> [B] {\n             vec::mapi(slice) {|i, x|\n                 f(i + base, x)\n             }\n@@ -104,7 +104,7 @@ fn mapi_factory<A: copy send, B: copy send>(\n     xs: [A], f: fn() -> fn~(uint, A) -> B) -> [B] {\n     let slices = map_slices(xs) {||\n         let f = f();\n-        fn~(base: uint, slice : [const A]/&) -> [B] {\n+        fn~(base: uint, slice : [const A]/&, move f) -> [B] {\n             vec::mapi(slice) {|i, x|\n                 f(i + base, x)\n             }\n@@ -118,16 +118,20 @@ fn mapi_factory<A: copy send, B: copy send>(\n \n #[doc=\"Returns true if the function holds for all elements in the vector.\"]\n fn alli<A: copy send>(xs: [A], f: fn~(uint, A) -> bool) -> bool {\n-    vec::all(map_slices(xs) {|| fn~(base: uint, slice : [const A]/&) -> bool {\n-        vec::alli(slice) {|i, x|\n-            f(i + base, x)\n+    vec::all(map_slices(xs) {||\n+        fn~(base: uint, slice : [const A]/&, copy f) -> bool {\n+            vec::alli(slice) {|i, x|\n+                f(i + base, x)\n+            }\n         }\n-    }}) {|x| x }\n+    }) {|x| x }\n }\n \n #[doc=\"Returns true if the function holds for any elements in the vector.\"]\n fn any<A: copy send>(xs: [A], f: fn~(A) -> bool) -> bool {\n-    vec::any(map_slices(xs) {|| fn~(_base : uint, slice: [const A]/&) -> bool {\n-        vec::any(slice, f)\n-    }}) {|x| x }\n+    vec::any(map_slices(xs) {|| \n+        fn~(_base : uint, slice: [const A]/&, copy f) -> bool {\n+            vec::any(slice, f)\n+        }\n+    }) {|x| x }\n }"}, {"sha": "18a08964c740ab6d8465f00af74eb022d96f9a9a", "filename": "src/test/bench/graph500-bfs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09a32aedb5ae56cabac371ba9af7cce631becf51/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09a32aedb5ae56cabac371ba9af7cce631becf51/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fgraph500-bfs.rs?ref=09a32aedb5ae56cabac371ba9af7cce631becf51", "patch": "@@ -384,7 +384,7 @@ fn main(args: [str]) {\n     let scale = uint::from_str(args[1]).get();\n     let num_keys = uint::from_str(args[2]).get();\n     let do_validate = false;\n-    let do_sequential = false;\n+    let do_sequential = true;\n \n     let start = time::precise_time_s();\n     let edges = make_edges(scale, 16u);"}]}