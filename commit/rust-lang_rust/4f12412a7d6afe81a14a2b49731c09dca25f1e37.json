{"sha": "4f12412a7d6afe81a14a2b49731c09dca25f1e37", "node_id": "C_kwDOAAsO6NoAKDRmMTI0MTJhN2Q2YWZlODFhMTRhMmI0OTczMWMwOWRjYTI1ZjFlMzc", "commit": {"author": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2023-05-09T16:32:02Z"}, "committer": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2023-05-09T16:32:02Z"}, "message": "tidy: sort lists in deps.rs using tidy-alphabetical", "tree": {"sha": "996a608b1282b500bd9f6a13ae83d866e6931edf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/996a608b1282b500bd9f6a13ae83d866e6931edf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f12412a7d6afe81a14a2b49731c09dca25f1e37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f12412a7d6afe81a14a2b49731c09dca25f1e37", "html_url": "https://github.com/rust-lang/rust/commit/4f12412a7d6afe81a14a2b49731c09dca25f1e37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f12412a7d6afe81a14a2b49731c09dca25f1e37/comments", "author": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a083986852aea685f17939a237f8cc297c606745", "url": "https://api.github.com/repos/rust-lang/rust/commits/a083986852aea685f17939a237f8cc297c606745", "html_url": "https://github.com/rust-lang/rust/commit/a083986852aea685f17939a237f8cc297c606745"}], "stats": {"total": 79, "additions": 45, "deletions": 34}, "files": [{"sha": "afa6bce943f34b249d7abff91439ef0701beaff5", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 45, "deletions": 34, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/4f12412a7d6afe81a14a2b49731c09dca25f1e37/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f12412a7d6afe81a14a2b49731c09dca25f1e37/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=4f12412a7d6afe81a14a2b49731c09dca25f1e37", "patch": "@@ -6,47 +6,53 @@ use std::path::Path;\n \n /// These are licenses that are allowed for all crates, including the runtime,\n /// rustc, tools, etc.\n+#[rustfmt::skip]\n const LICENSES: &[&str] = &[\n-    \"MIT/Apache-2.0\",\n-    \"MIT / Apache-2.0\",\n-    \"Apache-2.0/MIT\",\n+    // tidy-alphabetical-start\n+    \"(MIT OR Apache-2.0) AND Unicode-DFS-2016\",            // unicode_ident\n+    \"0BSD OR MIT OR Apache-2.0\",                           // adler license\n+    \"0BSD\",\n     \"Apache-2.0 / MIT\",\n-    \"MIT OR Apache-2.0\",\n     \"Apache-2.0 OR MIT\",\n     \"Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT\", // wasi license\n-    \"MIT\",\n+    \"Apache-2.0/MIT\",\n     \"ISC\",\n-    \"Unlicense/MIT\",\n+    \"MIT / Apache-2.0\",\n+    \"MIT OR Apache-2.0 OR Zlib\",                           // tinyvec_macros\n+    \"MIT OR Apache-2.0\",\n+    \"MIT OR Zlib OR Apache-2.0\",                           // miniz_oxide\n+    \"MIT\",\n+    \"MIT/Apache-2.0\",\n+    \"Unicode-DFS-2016\",                                    // tinystr and icu4x\n     \"Unlicense OR MIT\",\n-    \"0BSD\",\n-    \"0BSD OR MIT OR Apache-2.0\",                // adler license\n-    \"Zlib OR Apache-2.0 OR MIT\",                // tinyvec\n-    \"MIT OR Apache-2.0 OR Zlib\",                // tinyvec_macros\n-    \"MIT OR Zlib OR Apache-2.0\",                // miniz_oxide\n-    \"(MIT OR Apache-2.0) AND Unicode-DFS-2016\", // unicode_ident\n-    \"Unicode-DFS-2016\",                         // tinystr and icu4x\n+    \"Unlicense/MIT\",\n+    \"Zlib OR Apache-2.0 OR MIT\",                           // tinyvec\n+    // tidy-alphabetical-end\n ];\n \n /// These are exceptions to Rust's permissive licensing policy, and\n /// should be considered bugs. Exceptions are only allowed in Rust\n /// tooling. It is _crucial_ that no exception crates be dependencies\n /// of the Rust runtime (std/test).\n+#[rustfmt::skip]\n const EXCEPTIONS: &[(&str, &str)] = &[\n+    // tidy-alphabetical-start\n     (\"ar_archive_writer\", \"Apache-2.0 WITH LLVM-exception\"), // rustc\n-    (\"mdbook\", \"MPL-2.0\"),                                   // mdbook\n+    (\"codespan-reporting\", \"Apache-2.0\"),                    // cxx via iana-time-zone-haiku via time, only on haiku\n     (\"colored\", \"MPL-2.0\"),                                  // rustfmt\n+    (\"dissimilar\", \"Apache-2.0\"),                            // rustdoc, rustc_lexer (few tests) via expect-test, (dev deps)\n+    (\"fluent-langneg\", \"Apache-2.0\"),                        // rustc (fluent translations)\n+    (\"fortanix-sgx-abi\", \"MPL-2.0\"),                         // libstd but only for `sgx` target. FIXME: this dependency violates the documentation comment above.\n+    (\"instant\", \"BSD-3-Clause\"),                             // rustc_driver/tracing-subscriber/parking_lot\n+    (\"mdbook\", \"MPL-2.0\"),                                   // mdbook\n     (\"ryu\", \"Apache-2.0 OR BSL-1.0\"),                        // cargo/... (because of serde)\n-    (\"codespan-reporting\", \"Apache-2.0\"), // cxx via iana-time-zone-haiku via time, only on haiku\n-    (\"instant\", \"BSD-3-Clause\"),          // rustc_driver/tracing-subscriber/parking_lot\n-    (\"snap\", \"BSD-3-Clause\"),             // rustc\n-    (\"fluent-langneg\", \"Apache-2.0\"),     // rustc (fluent translations)\n-    (\"self_cell\", \"Apache-2.0\"),          // rustc (fluent translations)\n-    // FIXME: this dependency violates the documentation comment above:\n-    (\"fortanix-sgx-abi\", \"MPL-2.0\"), // libstd but only for `sgx` target\n-    (\"dissimilar\", \"Apache-2.0\"),    // rustdoc, rustc_lexer (few tests) via expect-test, (dev deps)\n+    (\"self_cell\", \"Apache-2.0\"),                             // rustc (fluent translations)\n+    (\"snap\", \"BSD-3-Clause\"),                                // rustc\n+    // tidy-alphabetical-end\n ];\n \n const EXCEPTIONS_CARGO: &[(&str, &str)] = &[\n+    // tidy-alphabetical-start\n     (\"bitmaps\", \"MPL-2.0+\"),\n     (\"bytesize\", \"Apache-2.0\"),\n     (\"dunce\", \"CC0-1.0 OR MIT-0\"),\n@@ -62,9 +68,11 @@ const EXCEPTIONS_CARGO: &[(&str, &str)] = &[\n     (\"sized-chunks\", \"MPL-2.0+\"),\n     (\"subtle\", \"BSD-3-Clause\"),\n     (\"unicode-bom\", \"Apache-2.0\"),\n+    // tidy-alphabetical-end\n ];\n \n const EXCEPTIONS_CRANELIFT: &[(&str, &str)] = &[\n+    // tidy-alphabetical-start\n     (\"cranelift-bforest\", \"Apache-2.0 WITH LLVM-exception\"),\n     (\"cranelift-codegen\", \"Apache-2.0 WITH LLVM-exception\"),\n     (\"cranelift-codegen-meta\", \"Apache-2.0 WITH LLVM-exception\"),\n@@ -80,6 +88,7 @@ const EXCEPTIONS_CRANELIFT: &[(&str, &str)] = &[\n     (\"regalloc2\", \"Apache-2.0 WITH LLVM-exception\"),\n     (\"target-lexicon\", \"Apache-2.0 WITH LLVM-exception\"),\n     (\"wasmtime-jit-icache-coherence\", \"Apache-2.0 WITH LLVM-exception\"),\n+    // tidy-alphabetical-end\n ];\n \n const EXCEPTIONS_BOOTSTRAP: &[(&str, &str)] = &[\n@@ -95,6 +104,7 @@ const RUNTIME_CRATES: &[&str] = &[\"std\", \"core\", \"alloc\", \"test\", \"panic_abort\",\n /// This list is here to provide a speed-bump to adding a new dependency to\n /// rustc. Please check with the compiler team before adding an entry.\n const PERMITTED_RUSTC_DEPENDENCIES: &[&str] = &[\n+    // tidy-alphabetical-start\n     \"addr2line\",\n     \"adler\",\n     \"ahash\",\n@@ -113,8 +123,8 @@ const PERMITTED_RUSTC_DEPENDENCIES: &[&str] = &[\n     \"chalk-engine\",\n     \"chalk-ir\",\n     \"chalk-solve\",\n-    \"convert_case\", // dependency of derive_more\n     \"compiler_builtins\",\n+    \"convert_case\", // dependency of derive_more\n     \"cpufeatures\",\n     \"crc32fast\",\n     \"crossbeam-channel\",\n@@ -187,8 +197,8 @@ const PERMITTED_RUSTC_DEPENDENCIES: &[&str] = &[\n     \"ppv-lite86\",\n     \"proc-macro-hack\",\n     \"proc-macro2\",\n-    \"pulldown-cmark\",\n     \"psm\",\n+    \"pulldown-cmark\",\n     \"punycode\",\n     \"quote\",\n     \"rand\",\n@@ -227,14 +237,14 @@ const PERMITTED_RUSTC_DEPENDENCIES: &[&str] = &[\n     \"tempfile\",\n     \"termcolor\",\n     \"termize\",\n+    \"thin-vec\",\n     \"thiserror\",\n     \"thiserror-impl\",\n     \"thorin-dwp\",\n     \"thread_local\",\n     \"tinystr\",\n     \"tinyvec\",\n     \"tinyvec_macros\",\n-    \"thin-vec\",\n     \"tracing\",\n     \"tracing-attributes\",\n     \"tracing-core\",\n@@ -263,37 +273,37 @@ const PERMITTED_RUSTC_DEPENDENCIES: &[&str] = &[\n     \"valuable\",\n     \"version_check\",\n     \"wasi\",\n-    \"windows\",\n     \"winapi\",\n     \"winapi-i686-pc-windows-gnu\",\n     \"winapi-util\",\n     \"winapi-x86_64-pc-windows-gnu\",\n+    \"windows\",\n     \"windows-targets\",\n-    \"windows_aarch64_msvc\",\n     \"windows_aarch64_gnullvm\",\n-    \"windows_x86_64_gnullvm\",\n-    \"windows_i686_msvc\",\n+    \"windows_aarch64_msvc\",\n     \"windows_i686_gnu\",\n-    \"windows_x86_64_msvc\",\n+    \"windows_i686_msvc\",\n     \"windows_x86_64_gnu\",\n+    \"windows_x86_64_gnullvm\",\n+    \"windows_x86_64_msvc\",\n     \"writeable\",\n-    // this is a false-positive: it's only used by rustfmt, but because it's enabled through a\n-    // feature, tidy thinks it's used by rustc as well.\n-    \"yansi-term\",\n+    \"yansi-term\", // this is a false-positive: it's only used by rustfmt, but because it's enabled through a feature, tidy thinks it's used by rustc as well.\n     \"yoke\",\n     \"yoke-derive\",\n     \"zerofrom\",\n     \"zerofrom-derive\",\n     \"zerovec\",\n     \"zerovec-derive\",\n+    // tidy-alphabetical-end\n ];\n \n const PERMITTED_CRANELIFT_DEPENDENCIES: &[&str] = &[\n+    // tidy-alphabetical-start\n     \"ahash\",\n     \"anyhow\",\n     \"autocfg\",\n-    \"bumpalo\",\n     \"bitflags\",\n+    \"bumpalo\",\n     \"byteorder\",\n     \"cfg-if\",\n     \"cranelift-bforest\",\n@@ -332,6 +342,7 @@ const PERMITTED_CRANELIFT_DEPENDENCIES: &[&str] = &[\n     \"winapi-i686-pc-windows-gnu\",\n     \"winapi-x86_64-pc-windows-gnu\",\n     \"windows-sys\",\n+    // tidy-alphabetical-end\n ];\n \n /// Dependency checks."}]}