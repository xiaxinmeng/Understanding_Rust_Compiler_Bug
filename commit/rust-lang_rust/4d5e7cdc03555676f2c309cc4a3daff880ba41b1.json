{"sha": "4d5e7cdc03555676f2c309cc4a3daff880ba41b1", "node_id": "C_kwDOAAsO6NoAKDRkNWU3Y2RjMDM1NTU2NzZmMmMzMDljYzRhM2RhZmY4ODBiYTQxYjE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-16T19:53:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-16T19:53:21Z"}, "message": "Rollup merge of #112226 - devnexen:netbsd_affinity, r=cuviper\n\nstd: available_parallelism using native netbsd api first\n\nbefore falling back to existing code paths like FreeBSD does.", "tree": {"sha": "e67024d456662cd2a90c7e94ae8b0aa7acf881eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e67024d456662cd2a90c7e94ae8b0aa7acf881eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d5e7cdc03555676f2c309cc4a3daff880ba41b1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkjL2xCRBK7hj4Ov3rIwAAgyoIAKXH77IGOGqkv7+adbRwhsuu\nr8Qa4YRWxZPjKbp0KklMpA3lSwZEDNqUIim+T0K+kdj93imkH4pAz3lljy0F6nIJ\natuEZSdxABxS3mPMB0FZjlu0F02IB8SzrvFaFOlPIrEcOcEyp8IGeSUfErJ2VvDS\njlbup7/3vKF4Ym++/0lezV0ulqo59RSMB3oeTYMJmdifjtJCXxpsFE8a8p0bwaSh\nI4LcAjReqJNewnTX+a47W/b/gfxtUtTBZA2AQyI2cu6DINumRbbXvzDgOfNXV1Xm\nmimu3pHBhLUnbmd7rgBML1cLTsbiZeCXkEKG7idqsaUbrSd419qIzV5WkXXtA5w=\n=Ila+\n-----END PGP SIGNATURE-----\n", "payload": "tree e67024d456662cd2a90c7e94ae8b0aa7acf881eb\nparent c55af41e7a8388a022049f21a93b68626b36bc90\nparent 25b3751fd1585e3ce8d9806cc197f6c60f95b367\nauthor Michael Goulet <michael@errs.io> 1686945201 -0700\ncommitter GitHub <noreply@github.com> 1686945201 -0700\n\nRollup merge of #112226 - devnexen:netbsd_affinity, r=cuviper\n\nstd: available_parallelism using native netbsd api first\n\nbefore falling back to existing code paths like FreeBSD does.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d5e7cdc03555676f2c309cc4a3daff880ba41b1", "html_url": "https://github.com/rust-lang/rust/commit/4d5e7cdc03555676f2c309cc4a3daff880ba41b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d5e7cdc03555676f2c309cc4a3daff880ba41b1/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c55af41e7a8388a022049f21a93b68626b36bc90", "url": "https://api.github.com/repos/rust-lang/rust/commits/c55af41e7a8388a022049f21a93b68626b36bc90", "html_url": "https://github.com/rust-lang/rust/commit/c55af41e7a8388a022049f21a93b68626b36bc90"}, {"sha": "25b3751fd1585e3ce8d9806cc197f6c60f95b367", "url": "https://api.github.com/repos/rust-lang/rust/commits/25b3751fd1585e3ce8d9806cc197f6c60f95b367", "html_url": "https://github.com/rust-lang/rust/commit/25b3751fd1585e3ce8d9806cc197f6c60f95b367"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "010015667f7a2a020a5ea70a336ad3a5e908bf3c", "filename": "library/std/src/sys/unix/thread.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4d5e7cdc03555676f2c309cc4a3daff880ba41b1/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d5e7cdc03555676f2c309cc4a3daff880ba41b1/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs?ref=4d5e7cdc03555676f2c309cc4a3daff880ba41b1", "patch": "@@ -344,6 +344,29 @@ pub fn available_parallelism() -> io::Result<NonZeroUsize> {\n                 }\n             }\n \n+            #[cfg(target_os = \"netbsd\")]\n+            {\n+                unsafe {\n+                    let set = libc::_cpuset_create();\n+                    if !set.is_null() {\n+                        let mut count: usize = 0;\n+                        if libc::pthread_getaffinity_np(libc::pthread_self(), libc::_cpuset_size(set), set) == 0 {\n+                            for i in 0..u64::MAX {\n+                                match libc::_cpuset_isset(i, set) {\n+                                    -1 => break,\n+                                    0 => continue,\n+                                    _ => count = count + 1,\n+                                }\n+                            }\n+                        }\n+                        libc::_cpuset_destroy(set);\n+                        if let Some(count) = NonZeroUsize::new(count) {\n+                            return Ok(count);\n+                        }\n+                    }\n+                }\n+            }\n+\n             let mut cpus: libc::c_uint = 0;\n             let mut cpus_size = crate::mem::size_of_val(&cpus);\n "}]}