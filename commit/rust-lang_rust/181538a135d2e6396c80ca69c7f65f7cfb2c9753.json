{"sha": "181538a135d2e6396c80ca69c7f65f7cfb2c9753", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MTUzOGExMzVkMmU2Mzk2YzgwY2E2OWM3ZjY1ZjdjZmIyYzk3NTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-14T17:22:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-14T17:22:25Z"}, "message": "auto merge of #18023 : chris-morgan/rust/vim-misc-2014-10-14, r=kballard\n\n- Stop highlighting foo in `use foo;` specially.\n- Highlight `extern crate \"foo\" as bar;` properly.\n- Highlight 1..2 according to the current grammar.", "tree": {"sha": "1f6ca1b2b3907c0719df9c957f11ffc056a10780", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f6ca1b2b3907c0719df9c957f11ffc056a10780"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/181538a135d2e6396c80ca69c7f65f7cfb2c9753", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/181538a135d2e6396c80ca69c7f65f7cfb2c9753", "html_url": "https://github.com/rust-lang/rust/commit/181538a135d2e6396c80ca69c7f65f7cfb2c9753", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/181538a135d2e6396c80ca69c7f65f7cfb2c9753/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fd8e4cae0aa1576320ff9d090c2e6e0180bb601", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fd8e4cae0aa1576320ff9d090c2e6e0180bb601", "html_url": "https://github.com/rust-lang/rust/commit/1fd8e4cae0aa1576320ff9d090c2e6e0180bb601"}, {"sha": "a118bd77ad86a743b5709e67e47b58d70829314a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a118bd77ad86a743b5709e67e47b58d70829314a", "html_url": "https://github.com/rust-lang/rust/commit/a118bd77ad86a743b5709e67e47b58d70829314a"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "cec97a3ec88beb085a9eb55f84f8002f08136514", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/181538a135d2e6396c80ca69c7f65f7cfb2c9753/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/181538a135d2e6396c80ca69c7f65f7cfb2c9753/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=181538a135d2e6396c80ca69c7f65f7cfb2c9753", "patch": "@@ -27,14 +27,16 @@ syn keyword   rustKeyword     for in if impl let\n syn keyword   rustKeyword     loop once proc pub\n syn keyword   rustKeyword     return super\n syn keyword   rustKeyword     unsafe virtual where while\n-syn keyword   rustKeyword     use nextgroup=rustModPath,rustModPathInUse skipwhite skipempty\n+syn keyword   rustKeyword     use nextgroup=rustModPath skipwhite skipempty\n \" FIXME: Scoped impl's name is also fallen in this category\n syn keyword   rustKeyword     mod trait struct enum type nextgroup=rustIdentifier skipwhite skipempty\n syn keyword   rustStorage     mut ref static const\n \n syn keyword   rustInvalidBareKeyword crate\n \n-syn keyword   rustExternCrate crate contained nextgroup=rustIdentifier skipwhite skipempty\n+syn keyword   rustExternCrate crate contained nextgroup=rustIdentifier,rustExternCrateString skipwhite skipempty\n+\" This is to get the `bar` part of `extern crate \"foo\" as bar;` highlighting.\n+syn match   rustExternCrateString /\".*\"\\_s*as/ contained nextgroup=rustIdentifier skipwhite transparent skipempty contains=rustString,rustOperator\n syn keyword   rustObsoleteExternMod mod contained nextgroup=rustIdentifier skipwhite skipempty\n \n syn match     rustIdentifier  contains=rustIdentifierPrime \"\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\%([^[:cntrl:][:punct:][:space:]]\\|_\\)*\" display contained\n@@ -131,9 +133,7 @@ syn keyword   rustBoolean     true false\n \" If foo::bar changes to foo.bar, change this (\"::\" to \"\\.\").\n \" If foo::bar changes to Foo::bar, change this (first \"\\w\" to \"\\u\").\n syn match     rustModPath     \"\\w\\(\\w\\)*::[^<]\"he=e-3,me=e-3\n-syn match     rustModPathInUse \"\\w\\(\\w\\)*\" contained \" only for 'use path;'\n syn match     rustModPathSep  \"::\"\n-\" rustModPathInUse is split out from rustModPath so that :syn-include can get the group list right.\n \n syn match     rustFuncCall    \"\\w\\(\\w\\)*(\"he=e-1,me=e-1\n syn match     rustFuncCall    \"\\w\\(\\w\\)*::<\"he=e-3,me=e-3 \" foo::<T>();\n@@ -172,9 +172,10 @@ syn match     rustOctNumber   display \"\\<0o[0-7_]\\+\\%([iu]\\%(8\\|16\\|32\\|64\\)\\=\\)\n syn match     rustBinNumber   display \"\\<0b[01_]\\+\\%([iu]\\%(8\\|16\\|32\\|64\\)\\=\\)\\=\"\n \n \" Special case for numbers of the form \"1.\" which are float literals, unless followed by\n-\" an identifier, which makes them integer literals with a method call or field access.\n+\" an identifier, which makes them integer literals with a method call or field access,\n+\" or by another \".\", which makes them integer literals followed by the \"..\" token.\n \" (This must go first so the others take precedence.)\n-syn match     rustFloat       display \"\\<[0-9][0-9_]*\\.\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\@!\"\n+syn match     rustFloat       display \"\\<[0-9][0-9_]*\\.\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\|\\.\\)\\@!\"\n \" To mark a number as a normal float, it must have at least one of the three things integral values don't have:\n \" a decimal point and more numbers; an exponent; and a type suffix.\n syn match     rustFloat       display \"\\<[0-9][0-9_]*\\%(\\.[0-9][0-9_]*\\)\\%([eE][+-]\\=[0-9_]\\+\\)\\=\\(f32\\|f64\\)\\=\"\n@@ -252,7 +253,6 @@ hi def link rustReservedKeyword Error\n hi def link rustConditional   Conditional\n hi def link rustIdentifier    Identifier\n hi def link rustCapsIdent     rustIdentifier\n-hi def link rustModPathInUse  rustModPath\n hi def link rustModPath       Include\n hi def link rustModPathSep    Delimiter\n hi def link rustFunction      Function"}]}