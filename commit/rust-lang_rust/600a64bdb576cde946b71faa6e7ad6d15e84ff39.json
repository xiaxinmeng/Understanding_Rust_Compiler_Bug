{"sha": "600a64bdb576cde946b71faa6e7ad6d15e84ff39", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMGE2NGJkYjU3NmNkZTk0NmI3MWZhYTZlN2FkNmQxNWU4NGZmMzk=", "commit": {"author": {"name": "Artem Varaksa", "email": "aymfst@gmail.com", "date": "2019-08-21T12:13:13Z"}, "committer": {"name": "Artem Varaksa", "email": "aymfst@gmail.com", "date": "2019-08-21T12:13:13Z"}, "message": "more `--bless`ing + test error annotations fixes", "tree": {"sha": "4a3871459dfceaec1f144bce49eac6be3a3d6dcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a3871459dfceaec1f144bce49eac6be3a3d6dcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/600a64bdb576cde946b71faa6e7ad6d15e84ff39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/600a64bdb576cde946b71faa6e7ad6d15e84ff39", "html_url": "https://github.com/rust-lang/rust/commit/600a64bdb576cde946b71faa6e7ad6d15e84ff39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/600a64bdb576cde946b71faa6e7ad6d15e84ff39/comments", "author": {"login": "u32i64", "id": 19972511, "node_id": "MDQ6VXNlcjE5OTcyNTEx", "avatar_url": "https://avatars.githubusercontent.com/u/19972511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/u32i64", "html_url": "https://github.com/u32i64", "followers_url": "https://api.github.com/users/u32i64/followers", "following_url": "https://api.github.com/users/u32i64/following{/other_user}", "gists_url": "https://api.github.com/users/u32i64/gists{/gist_id}", "starred_url": "https://api.github.com/users/u32i64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/u32i64/subscriptions", "organizations_url": "https://api.github.com/users/u32i64/orgs", "repos_url": "https://api.github.com/users/u32i64/repos", "events_url": "https://api.github.com/users/u32i64/events{/privacy}", "received_events_url": "https://api.github.com/users/u32i64/received_events", "type": "User", "site_admin": false}, "committer": {"login": "u32i64", "id": 19972511, "node_id": "MDQ6VXNlcjE5OTcyNTEx", "avatar_url": "https://avatars.githubusercontent.com/u/19972511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/u32i64", "html_url": "https://github.com/u32i64", "followers_url": "https://api.github.com/users/u32i64/followers", "following_url": "https://api.github.com/users/u32i64/following{/other_user}", "gists_url": "https://api.github.com/users/u32i64/gists{/gist_id}", "starred_url": "https://api.github.com/users/u32i64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/u32i64/subscriptions", "organizations_url": "https://api.github.com/users/u32i64/orgs", "repos_url": "https://api.github.com/users/u32i64/repos", "events_url": "https://api.github.com/users/u32i64/events{/privacy}", "received_events_url": "https://api.github.com/users/u32i64/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd7082e3d259f04a11d3ae49ab2742bcecdd3a5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd7082e3d259f04a11d3ae49ab2742bcecdd3a5e", "html_url": "https://github.com/rust-lang/rust/commit/dd7082e3d259f04a11d3ae49ab2742bcecdd3a5e"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "959f4a2babbf8a522769fa41b368b6904ed090bf", "filename": "src/test/ui/array-break-length.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/600a64bdb576cde946b71faa6e7ad6d15e84ff39/src%2Ftest%2Fui%2Farray-break-length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/600a64bdb576cde946b71faa6e7ad6d15e84ff39/src%2Ftest%2Fui%2Farray-break-length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-break-length.rs?ref=600a64bdb576cde946b71faa6e7ad6d15e84ff39", "patch": "@@ -1,11 +1,11 @@\n fn main() {\n     loop {\n-        |_: [_; break]| {} //~ ERROR: `break` outside of loop\n+        |_: [_; break]| {} //~ ERROR: `break` outside of a loop\n         //~^ ERROR mismatched types\n     }\n \n     loop {\n-        |_: [_; continue]| {} //~ ERROR: `continue` outside of loop\n+        |_: [_; continue]| {} //~ ERROR: `continue` outside of a loop\n         //~^ ERROR mismatched types\n     }\n }"}, {"sha": "753a4e491550f0d8346437ddbe155a7a72f748b9", "filename": "src/test/ui/async-await/async-block-control-flow-static-semantics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/600a64bdb576cde946b71faa6e7ad6d15e84ff39/src%2Ftest%2Fui%2Fasync-await%2Fasync-block-control-flow-static-semantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/600a64bdb576cde946b71faa6e7ad6d15e84ff39/src%2Ftest%2Fui%2Fasync-await%2Fasync-block-control-flow-static-semantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-block-control-flow-static-semantics.rs?ref=600a64bdb576cde946b71faa6e7ad6d15e84ff39", "patch": "@@ -30,14 +30,14 @@ async fn return_targets_async_block_not_async_fn() -> u8 {\n \n fn no_break_in_async_block() {\n     async {\n-        break 0u8; //~ ERROR `break` inside of an async block\n+        break 0u8; //~ ERROR `break` inside of an `async` block\n     };\n }\n \n fn no_break_in_async_block_even_with_outer_loop() {\n     loop {\n         async {\n-            break 0u8; //~ ERROR `break` inside of an async block\n+            break 0u8; //~ ERROR `break` inside of an `async` block\n         };\n     }\n }"}, {"sha": "c36caa5586fb0936a80521becd8c30aea4cce3ab", "filename": "src/test/ui/async-await/async-block-control-flow-static-semantics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/600a64bdb576cde946b71faa6e7ad6d15e84ff39/src%2Ftest%2Fui%2Fasync-await%2Fasync-block-control-flow-static-semantics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/600a64bdb576cde946b71faa6e7ad6d15e84ff39/src%2Ftest%2Fui%2Fasync-await%2Fasync-block-control-flow-static-semantics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-block-control-flow-static-semantics.stderr?ref=600a64bdb576cde946b71faa6e7ad6d15e84ff39", "patch": "@@ -1,4 +1,4 @@\n-error[E0267]: `break` inside of an async block\n+error[E0267]: `break` inside of an `async` block\n   --> $DIR/async-block-control-flow-static-semantics.rs:33:9\n    |\n LL |       async {\n@@ -8,7 +8,7 @@ LL | |         break 0u8;\n LL | |     };\n    | |_____- enclosing `async` block\n \n-error[E0267]: `break` inside of an async block\n+error[E0267]: `break` inside of an `async` block\n   --> $DIR/async-block-control-flow-static-semantics.rs:40:13\n    |\n LL |           async {"}, {"sha": "c424c25c646bd34d61b7a7ae4d6fbe3f580ea735", "filename": "src/test/ui/break-outside-loop.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/600a64bdb576cde946b71faa6e7ad6d15e84ff39/src%2Ftest%2Fui%2Fbreak-outside-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/600a64bdb576cde946b71faa6e7ad6d15e84ff39/src%2Ftest%2Fui%2Fbreak-outside-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbreak-outside-loop.rs?ref=600a64bdb576cde946b71faa6e7ad6d15e84ff39", "patch": "@@ -7,8 +7,8 @@ fn cond() -> bool { true }\n fn foo<F>(_: F) where F: FnOnce() {}\n \n fn main() {\n-    let pth = break; //~ ERROR: `break` outside of loop\n-    if cond() { continue } //~ ERROR: `continue` outside of loop\n+    let pth = break; //~ ERROR: `break` outside of a loop\n+    if cond() { continue } //~ ERROR: `continue` outside of a loop\n \n     while cond() {\n         if cond() { break }\n@@ -21,5 +21,5 @@ fn main() {\n \n     let rs: Foo = Foo{t: pth};\n \n-    let unconstrained = break; //~ ERROR: `break` outside of loop\n+    let unconstrained = break; //~ ERROR: `break` outside of a loop\n }"}, {"sha": "f3567db1fac9c964697e394ba9646d369a238417", "filename": "src/test/ui/closures/closure-array-break-length.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/600a64bdb576cde946b71faa6e7ad6d15e84ff39/src%2Ftest%2Fui%2Fclosures%2Fclosure-array-break-length.rs", "raw_url": "https://github.com/rust-lang/rust/raw/600a64bdb576cde946b71faa6e7ad6d15e84ff39/src%2Ftest%2Fui%2Fclosures%2Fclosure-array-break-length.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-array-break-length.rs?ref=600a64bdb576cde946b71faa6e7ad6d15e84ff39", "patch": "@@ -1,9 +1,9 @@\n fn main() {\n-    |_: [_; continue]| {}; //~ ERROR: `continue` outside of loop\n+    |_: [_; continue]| {}; //~ ERROR: `continue` outside of a loop\n \n-    while |_: [_; continue]| {} {} //~ ERROR: `continue` outside of loop\n+    while |_: [_; continue]| {} {} //~ ERROR: `continue` outside of a loop\n     //~^ ERROR mismatched types\n \n-    while |_: [_; break]| {} {} //~ ERROR: `break` outside of loop\n+    while |_: [_; break]| {} {} //~ ERROR: `break` outside of a loop\n     //~^ ERROR mismatched types\n }"}, {"sha": "1e8d2d6ccf1325432c332a1af900ef15f34a5e64", "filename": "src/test/ui/issues/issue-28105.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/600a64bdb576cde946b71faa6e7ad6d15e84ff39/src%2Ftest%2Fui%2Fissues%2Fissue-28105.rs", "raw_url": "https://github.com/rust-lang/rust/raw/600a64bdb576cde946b71faa6e7ad6d15e84ff39/src%2Ftest%2Fui%2Fissues%2Fissue-28105.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28105.rs?ref=600a64bdb576cde946b71faa6e7ad6d15e84ff39", "patch": "@@ -1,8 +1,8 @@\n // Make sure that a continue span actually contains the keyword.\n \n fn main() {\n-    continue //~ ERROR `continue` outside of loop\n+    continue //~ ERROR `continue` outside of a loop\n     ;\n-    break //~ ERROR `break` outside of loop\n+    break //~ ERROR `break` outside of a loop\n     ;\n }"}]}