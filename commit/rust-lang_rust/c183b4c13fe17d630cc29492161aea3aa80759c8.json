{"sha": "c183b4c13fe17d630cc29492161aea3aa80759c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxODNiNGMxM2ZlMTdkNjMwY2MyOTQ5MjE2MWFlYTNhYTgwNzU5Yzg=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-04-19T04:35:26Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-04-20T01:52:47Z"}, "message": "[ConstProp] Use a `BitSet<Local>` instead of `IndexVec<Local, bool>`", "tree": {"sha": "e7c7a0f6d7d922c7e87f577047d4e5dd8139cc9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7c7a0f6d7d922c7e87f577047d4e5dd8139cc9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c183b4c13fe17d630cc29492161aea3aa80759c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c183b4c13fe17d630cc29492161aea3aa80759c8", "html_url": "https://github.com/rust-lang/rust/commit/c183b4c13fe17d630cc29492161aea3aa80759c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c183b4c13fe17d630cc29492161aea3aa80759c8/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52fa23add6fb0776b32cc591ac928618391bdf41", "url": "https://api.github.com/repos/rust-lang/rust/commits/52fa23add6fb0776b32cc591ac928618391bdf41", "html_url": "https://github.com/rust-lang/rust/commit/52fa23add6fb0776b32cc591ac928618391bdf41"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "874fd048b927a1fef6b1211dd15f2515ecef159a", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c183b4c13fe17d630cc29492161aea3aa80759c8/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c183b4c13fe17d630cc29492161aea3aa80759c8/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=c183b4c13fe17d630cc29492161aea3aa80759c8", "patch": "@@ -8,6 +8,7 @@ use rustc_ast::ast::Mutability;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::def::DefKind;\n use rustc_hir::HirId;\n+use rustc_index::bit_set::BitSet;\n use rustc_index::vec::IndexVec;\n use rustc_middle::mir::interpret::{InterpResult, Scalar};\n use rustc_middle::mir::visit::{\n@@ -754,15 +755,15 @@ enum ConstPropMode {\n struct CanConstProp {\n     can_const_prop: IndexVec<Local, ConstPropMode>,\n     // false at the beginning, once set, there are not allowed to be any more assignments\n-    found_assignment: IndexVec<Local, bool>,\n+    found_assignment: BitSet<Local>,\n }\n \n impl CanConstProp {\n     /// returns true if `local` can be propagated\n     fn check(body: ReadOnlyBodyAndCache<'_, '_>) -> IndexVec<Local, ConstPropMode> {\n         let mut cpv = CanConstProp {\n             can_const_prop: IndexVec::from_elem(ConstPropMode::FullConstProp, &body.local_decls),\n-            found_assignment: IndexVec::from_elem(false, &body.local_decls),\n+            found_assignment: BitSet::new_empty(body.local_decls.len()),\n         };\n         for (local, val) in cpv.can_const_prop.iter_enumerated_mut() {\n             // cannot use args at all\n@@ -790,11 +791,9 @@ impl<'tcx> Visitor<'tcx> for CanConstProp {\n             // FIXME(oli-obk): we could be more powerful here, if the multiple writes\n             // only occur in independent execution paths\n             MutatingUse(MutatingUseContext::Store) => {\n-                if self.found_assignment[local] {\n+                if !self.found_assignment.insert(local) {\n                     trace!(\"local {:?} can't be propagated because of multiple assignments\", local);\n                     self.can_const_prop[local] = ConstPropMode::NoPropagation;\n-                } else {\n-                    self.found_assignment[local] = true\n                 }\n             }\n             // Reading constants is allowed an arbitrary number of times"}]}