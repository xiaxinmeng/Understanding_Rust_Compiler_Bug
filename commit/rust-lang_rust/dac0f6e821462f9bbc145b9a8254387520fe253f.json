{"sha": "dac0f6e821462f9bbc145b9a8254387520fe253f", "node_id": "C_kwDOAAsO6NoAKGRhYzBmNmU4MjE0NjJmOWJiYzE0NWI5YTgyNTQzODc1MjBmZTI1M2Y", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-23T02:29:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-23T02:29:19Z"}, "message": "Rollup merge of #102095 - oli-obk:simplify, r=TaKO8Ki\n\nDeduplicate two functions that would soon have been three\n\nhttps://github.com/rust-lang/rust/pull/101900 would have added another copy of this for effects", "tree": {"sha": "88b1c6847367a514501c1ff3f1d7e0523ad33855", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88b1c6847367a514501c1ff3f1d7e0523ad33855"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dac0f6e821462f9bbc145b9a8254387520fe253f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjLRn/CRBK7hj4Ov3rIwAAkEwIACAsNsM3gz9/2ekb0D6Vx3kK\n0wfE0xuUzoSA5vXLnBbBt5H1jMpmhnewmfN0xtXivfhds6CwFIYDSOUoSncxizjm\nF/qgMSX/bKee6pMtcmh2LeB7wop/MlgC9NAjpyrCdC9CjDbOYPFTJz3rTkdkZAOo\nHvOUHY3Te6IFGF+EscLN/iBunmlB04jXYhojSUEY1B7Newm8kMbg/v+7iX0jyC+d\nuTcFRS9kO0vMuSC9248i4E0S/XXVlHoiM0J6efTwqHGnbvYVxeIVnC40LnISNsYu\nMXS+s4aAI9MFhwRAKdBng6RYodWIn8kHNj7noOQceqZw/yEvDKL+hG/9/OWCrlA=\n=qL41\n-----END PGP SIGNATURE-----\n", "payload": "tree 88b1c6847367a514501c1ff3f1d7e0523ad33855\nparent f4c492cb5d0f0491a0da5efb2ebaea92ebb72c14\nparent e0a2e2d892252ed6e6264ce5cc8dae3dd2800f4a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1663900159 +0200\ncommitter GitHub <noreply@github.com> 1663900159 +0200\n\nRollup merge of #102095 - oli-obk:simplify, r=TaKO8Ki\n\nDeduplicate two functions that would soon have been three\n\nhttps://github.com/rust-lang/rust/pull/101900 would have added another copy of this for effects\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dac0f6e821462f9bbc145b9a8254387520fe253f", "html_url": "https://github.com/rust-lang/rust/commit/dac0f6e821462f9bbc145b9a8254387520fe253f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dac0f6e821462f9bbc145b9a8254387520fe253f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4c492cb5d0f0491a0da5efb2ebaea92ebb72c14", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4c492cb5d0f0491a0da5efb2ebaea92ebb72c14", "html_url": "https://github.com/rust-lang/rust/commit/f4c492cb5d0f0491a0da5efb2ebaea92ebb72c14"}, {"sha": "e0a2e2d892252ed6e6264ce5cc8dae3dd2800f4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0a2e2d892252ed6e6264ce5cc8dae3dd2800f4a", "html_url": "https://github.com/rust-lang/rust/commit/e0a2e2d892252ed6e6264ce5cc8dae3dd2800f4a"}], "stats": {"total": 22, "additions": 4, "deletions": 18}, "files": [{"sha": "680dbf7037fad501467923c117155c71b818ccb7", "filename": "compiler/rustc_typeck/src/check/writeback.rs", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/dac0f6e821462f9bbc145b9a8254387520fe253f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dac0f6e821462f9bbc145b9a8254387520fe253f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs?ref=dac0f6e821462f9bbc145b9a8254387520fe253f", "patch": "@@ -717,27 +717,13 @@ impl<'cx, 'tcx> Resolver<'cx, 'tcx> {\n         Resolver { tcx: fcx.tcx, infcx: fcx, span, body, replaced_with_error: false }\n     }\n \n-    fn report_type_error(&self, t: Ty<'tcx>) {\n+    fn report_error(&self, p: impl Into<ty::GenericArg<'tcx>>) {\n         if !self.tcx.sess.has_errors().is_some() {\n             self.infcx\n                 .emit_inference_failure_err(\n                     Some(self.body.id()),\n                     self.span.to_span(self.tcx),\n-                    t.into(),\n-                    E0282,\n-                    false,\n-                )\n-                .emit();\n-        }\n-    }\n-\n-    fn report_const_error(&self, c: ty::Const<'tcx>) {\n-        if self.tcx.sess.has_errors().is_none() {\n-            self.infcx\n-                .emit_inference_failure_err(\n-                    Some(self.body.id()),\n-                    self.span.to_span(self.tcx),\n-                    c.into(),\n+                    p.into(),\n                     E0282,\n                     false,\n                 )\n@@ -782,7 +768,7 @@ impl<'cx, 'tcx> TypeFolder<'tcx> for Resolver<'cx, 'tcx> {\n             }\n             Err(_) => {\n                 debug!(\"Resolver::fold_ty: input type `{:?}` not fully resolvable\", t);\n-                self.report_type_error(t);\n+                self.report_error(t);\n                 self.replaced_with_error = true;\n                 self.tcx().ty_error()\n             }\n@@ -799,7 +785,7 @@ impl<'cx, 'tcx> TypeFolder<'tcx> for Resolver<'cx, 'tcx> {\n             Ok(ct) => self.tcx.erase_regions(ct),\n             Err(_) => {\n                 debug!(\"Resolver::fold_const: input const `{:?}` not fully resolvable\", ct);\n-                self.report_const_error(ct);\n+                self.report_error(ct);\n                 self.replaced_with_error = true;\n                 self.tcx().const_error(ct.ty())\n             }"}]}