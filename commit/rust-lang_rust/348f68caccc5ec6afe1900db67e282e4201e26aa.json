{"sha": "348f68caccc5ec6afe1900db67e282e4201e26aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0OGY2OGNhY2NjNWVjNmFmZTE5MDBkYjY3ZTI4MmU0MjAxZTI2YWE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-05T11:13:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-05T11:13:07Z"}, "message": "Merge #9478\n\n9478: show imported trait on autocompletion of associated items r=matklad a=mahdi-frms\n\nFixes: #7456\r\n\r\nThe thing is however, due to the trait being already imported, the path to the trait is just the name of the trait itself.\r\nI also updated the test concerning the labels.\n\nCo-authored-by: mahdi-frms <mahdif1380@outlook.com>", "tree": {"sha": "5285fadf5d0dbe8973e55ca16c874b311f1b949e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5285fadf5d0dbe8973e55ca16c874b311f1b949e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/348f68caccc5ec6afe1900db67e282e4201e26aa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg4ulDCRBK7hj4Ov3rIwAAzisIAKKQgQexpl0UT6QnAFacJjFi\n1qSsbipYru9ysKbInXBp3a6p/RX1xW8XMIsH86bLTlfE8Fj4Dt2+KXqu9CK/50Au\nqm1gl92YHpQKpAMoH3nK50dAw4QgOVoR25WNLCb71e0E+KyODedUPFIdsQk7KtLa\nJLdh9VkH8Ut7WI9fcnBXpoOLKVnyDlMNn/1pUEqAGJE5z1Et+vU6q2HW0/rBl2Mu\n2a835MBv4E4vm7riJQAgWMnW32+qZfWZpd8U1J73nkkcDH8fuTkaI6RaXUG2Ch6k\nR8bT7xZ9TS3rlKo6KM8Gxu8YRAE8XhJoVw7R8voDKsCgwCA4tKMO+3W+ug4fZ3c=\n=iQHQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 5285fadf5d0dbe8973e55ca16c874b311f1b949e\nparent e5c1c8cf2fcfae3e15c8bcf5256e84cad3bd3436\nparent 02d33c98561ed027800d3fd2e9c5102b76c4d991\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1625483587 +0000\ncommitter GitHub <noreply@github.com> 1625483587 +0000\n\nMerge #9478\n\n9478: show imported trait on autocompletion of associated items r=matklad a=mahdi-frms\n\nFixes: #7456\r\n\r\nThe thing is however, due to the trait being already imported, the path to the trait is just the name of the trait itself.\r\nI also updated the test concerning the labels.\n\nCo-authored-by: mahdi-frms <mahdif1380@outlook.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/348f68caccc5ec6afe1900db67e282e4201e26aa", "html_url": "https://github.com/rust-lang/rust/commit/348f68caccc5ec6afe1900db67e282e4201e26aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/348f68caccc5ec6afe1900db67e282e4201e26aa/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5c1c8cf2fcfae3e15c8bcf5256e84cad3bd3436", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5c1c8cf2fcfae3e15c8bcf5256e84cad3bd3436", "html_url": "https://github.com/rust-lang/rust/commit/e5c1c8cf2fcfae3e15c8bcf5256e84cad3bd3436"}, {"sha": "02d33c98561ed027800d3fd2e9c5102b76c4d991", "url": "https://api.github.com/repos/rust-lang/rust/commits/02d33c98561ed027800d3fd2e9c5102b76c4d991", "html_url": "https://github.com/rust-lang/rust/commit/02d33c98561ed027800d3fd2e9c5102b76c4d991"}], "stats": {"total": 105, "additions": 69, "deletions": 36}, "files": [{"sha": "49aee62aba697bd4c2cb41912a8591cf98e0660e", "filename": "crates/ide_completion/src/completions/dot.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs?ref=348f68caccc5ec6afe1900db67e282e4201e26aa", "patch": "@@ -250,7 +250,7 @@ impl Trait for A {}\n fn foo(a: A) { a.$0 }\n \"#,\n             expect![[r#\"\n-                me the_method() fn(&self)\n+                me the_method() (Trait) fn(&self)\n             \"#]],\n         );\n     }\n@@ -265,7 +265,7 @@ impl<T> Trait for T {}\n fn foo(a: &A) { a.$0 }\n \",\n             expect![[r#\"\n-                me the_method() fn(&self)\n+                me the_method() (Trait) fn(&self)\n             \"#]],\n         );\n     }\n@@ -283,7 +283,7 @@ impl Trait for A {}\n fn foo(a: A) { a.$0 }\n \",\n             expect![[r#\"\n-                me the_method() fn(&self)\n+                me the_method() (Trait) fn(&self)\n             \"#]],\n         );\n     }"}, {"sha": "a525343f77be993c1a9d37ff718180251b7ed753", "filename": "crates/ide_completion/src/completions/qualified_path.rs", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs?ref=348f68caccc5ec6afe1900db67e282e4201e26aa", "patch": "@@ -333,7 +333,7 @@ trait Trait { fn m(); }\n fn foo() { let _ = Trait::$0 }\n \"#,\n             expect![[r#\"\n-                fn m() fn()\n+                fn m() (Trait) fn()\n             \"#]],\n         );\n     }\n@@ -350,7 +350,7 @@ impl Trait for S {}\n fn foo() { let _ = S::$0 }\n \"#,\n             expect![[r#\"\n-                fn m() fn()\n+                fn m() (Trait) fn()\n             \"#]],\n         );\n     }\n@@ -367,7 +367,7 @@ impl Trait for S {}\n fn foo() { let _ = <S as Trait>::$0 }\n \"#,\n             expect![[r#\"\n-                fn m() fn()\n+                fn m() (Trait) fn()\n             \"#]],\n         );\n     }\n@@ -393,14 +393,14 @@ trait Sub: Super {\n fn foo<T: Sub>() { T::$0 }\n \"#,\n             expect![[r#\"\n-                ta SubTy        type SubTy;\n-                ta Ty           type Ty;\n-                ct C2           const C2: ();\n-                fn subfunc()    fn()\n-                me submethod(\u2026) fn(&self)\n-                ct CONST        const CONST: u8;\n-                fn func()       fn()\n-                me method(\u2026)    fn(&self)\n+                ta SubTy (Sub)        type SubTy;\n+                ta Ty (Super)         type Ty;\n+                ct C2 (Sub)           const C2: ();\n+                fn subfunc() (Sub)    fn()\n+                me submethod(\u2026) (Sub) fn(&self)\n+                ct CONST (Super)      const CONST: u8;\n+                fn func() (Super)     fn()\n+                me method(\u2026) (Super)  fn(&self)\n             \"#]],\n         );\n     }\n@@ -433,14 +433,14 @@ impl<T> Sub for Wrap<T> {\n }\n \"#,\n             expect![[r#\"\n-                ta SubTy        type SubTy;\n-                ta Ty           type Ty;\n-                ct CONST        const CONST: u8 = 0;\n-                fn func()       fn()\n-                me method(\u2026)    fn(&self)\n-                ct C2           const C2: () = ();\n-                fn subfunc()    fn()\n-                me submethod(\u2026) fn(&self)\n+                ta SubTy (Sub)        type SubTy;\n+                ta Ty (Super)         type Ty;\n+                ct CONST (Super)      const CONST: u8 = 0;\n+                fn func() (Super)     fn()\n+                me method(\u2026) (Super)  fn(&self)\n+                ct C2 (Sub)           const C2: () = ();\n+                fn subfunc() (Sub)    fn()\n+                me submethod(\u2026) (Sub) fn(&self)\n             \"#]],\n         );\n     }"}, {"sha": "8a0d79cfa144837fd0e9ab1842528c533440b54f", "filename": "crates/ide_completion/src/item.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fitem.rs?ref=348f68caccc5ec6afe1900db67e282e4201e26aa", "patch": "@@ -295,6 +295,7 @@ impl CompletionItem {\n             label,\n             insert_text: None,\n             is_snippet: false,\n+            trait_name: None,\n             detail: None,\n             documentation: None,\n             lookup: None,\n@@ -398,6 +399,7 @@ pub(crate) struct Builder {\n     source_range: TextRange,\n     completion_kind: CompletionKind,\n     import_to_add: Option<ImportEdit>,\n+    trait_name: Option<String>,\n     label: String,\n     insert_text: Option<String>,\n     is_snippet: bool,\n@@ -434,6 +436,8 @@ impl Builder {\n             } else {\n                 format_to!(label, \" ({})\", original_path)\n             }\n+        } else if let Some(trait_name) = self.trait_name {\n+            format_to!(label, \" ({})\", trait_name)\n         }\n \n         let text_edit = match self.text_edit {\n@@ -468,6 +472,10 @@ impl Builder {\n         self.label = label.into();\n         self\n     }\n+    pub(crate) fn trait_name(&mut self, trait_name: impl Into<String>) -> &mut Builder {\n+        self.trait_name = Some(trait_name.into());\n+        self\n+    }\n     pub(crate) fn insert_text(&mut self, insert_text: impl Into<String>) -> &mut Builder {\n         self.insert_text = Some(insert_text.into());\n         self"}, {"sha": "0a17d8023d86846bf996e521e22e3e0c56ba52d0", "filename": "crates/ide_completion/src/render/const_.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Frender%2Fconst_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Frender%2Fconst_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Fconst_.rs?ref=348f68caccc5ec6afe1900db67e282e4201e26aa", "patch": "@@ -1,6 +1,6 @@\n //! Renderer for `const` fields.\n \n-use hir::HasSource;\n+use hir::{AsAssocItem, HasSource};\n use ide_db::SymbolKind;\n use syntax::{\n     ast::{Const, NameOwner},\n@@ -37,7 +37,7 @@ impl<'a> ConstRender<'a> {\n         let detail = self.detail();\n \n         let mut item =\n-            CompletionItem::new(CompletionKind::Reference, self.ctx.source_range(), name);\n+            CompletionItem::new(CompletionKind::Reference, self.ctx.source_range(), name.clone());\n         item.kind(SymbolKind::Const)\n             .set_documentation(self.ctx.docs(self.const_))\n             .set_deprecated(\n@@ -46,6 +46,14 @@ impl<'a> ConstRender<'a> {\n             )\n             .detail(detail);\n \n+        let db = self.ctx.db();\n+        if let Some(actm) = self.const_.as_assoc_item(db) {\n+            if let Some(trt) = actm.containing_trait_or_trait_impl(db) {\n+                item.trait_name(trt.name(db).to_string());\n+                item.insert_text(name.clone());\n+            }\n+        }\n+\n         Some(item.build())\n     }\n "}, {"sha": "5ad1c899eebca80836c547b213a29298a9fb87ac", "filename": "crates/ide_completion/src/render/function.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs?ref=348f68caccc5ec6afe1900db67e282e4201e26aa", "patch": "@@ -1,6 +1,6 @@\n //! Renderer for function calls.\n \n-use hir::{HasSource, HirDisplay};\n+use hir::{AsAssocItem, HasSource, HirDisplay};\n use ide_db::SymbolKind;\n use itertools::Itertools;\n use syntax::ast::Fn;\n@@ -73,9 +73,18 @@ impl<'a> FunctionRender<'a> {\n                 self.ctx.is_deprecated(self.func) || self.ctx.is_deprecated_assoc_item(self.func),\n             )\n             .detail(self.detail())\n-            .add_call_parens(self.ctx.completion, call.clone(), params)\n-            .add_import(import_to_add)\n-            .lookup_by(self.name);\n+            .add_call_parens(self.ctx.completion, call.clone(), params);\n+\n+        if import_to_add.is_none() {\n+            let db = self.ctx.db();\n+            if let Some(actm) = self.func.as_assoc_item(db) {\n+                if let Some(trt) = actm.containing_trait_or_trait_impl(db) {\n+                    item.trait_name(trt.name(db).to_string());\n+                }\n+            }\n+        }\n+\n+        item.add_import(import_to_add).lookup_by(self.name);\n \n         let ret_type = self.func.ret_type(self.ctx.db());\n         item.set_relevance(CompletionRelevance {"}, {"sha": "9549678b69e58e4109edb63ba7d95f258ed66e47", "filename": "crates/ide_completion/src/render/type_alias.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ftype_alias.rs?ref=348f68caccc5ec6afe1900db67e282e4201e26aa", "patch": "@@ -1,6 +1,6 @@\n //! Renderer for type aliases.\n \n-use hir::HasSource;\n+use hir::{AsAssocItem, HasSource};\n use ide_db::SymbolKind;\n use syntax::{\n     ast::{NameOwner, TypeAlias},\n@@ -50,7 +50,7 @@ impl<'a> TypeAliasRender<'a> {\n         let detail = self.detail();\n \n         let mut item =\n-            CompletionItem::new(CompletionKind::Reference, self.ctx.source_range(), name);\n+            CompletionItem::new(CompletionKind::Reference, self.ctx.source_range(), name.clone());\n         item.kind(SymbolKind::TypeAlias)\n             .set_documentation(self.ctx.docs(self.type_alias))\n             .set_deprecated(\n@@ -59,6 +59,14 @@ impl<'a> TypeAliasRender<'a> {\n             )\n             .detail(detail);\n \n+        let db = self.ctx.db();\n+        if let Some(actm) = self.type_alias.as_assoc_item(db) {\n+            if let Some(trt) = actm.containing_trait_or_trait_impl(db) {\n+                item.trait_name(trt.name(db).to_string());\n+                item.insert_text(name.clone());\n+            }\n+        }\n+\n         Some(item.build())\n     }\n "}, {"sha": "454ef914c1b31284d82cb4e568217a8386b8101c", "filename": "crates/ide_completion/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests.rs?ref=348f68caccc5ec6afe1900db67e282e4201e26aa", "patch": "@@ -126,7 +126,7 @@ fn render_completion_list(completions: Vec<CompletionItem>) -> String {\n         s.chars().count()\n     }\n     let label_width =\n-        completions.iter().map(|it| monospace_width(it.label())).max().unwrap_or_default().min(16);\n+        completions.iter().map(|it| monospace_width(it.label())).max().unwrap_or_default().min(22);\n     completions\n         .into_iter()\n         .map(|it| {"}, {"sha": "8cd5208cc470011f5f415ff330105e3708e9e290", "filename": "crates/ide_completion/src/tests/item_list.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fitem_list.rs?ref=348f68caccc5ec6afe1900db67e282e4201e26aa", "patch": "@@ -30,7 +30,7 @@ fn in_mod_item_list() {\n             sn tmod (Test module)\n             sn tfn (Test function)\n             sn macro_rules\n-            ma makro!(\u2026)        #[macro_export] macro_rules! makro\n+            ma makro!(\u2026)           #[macro_export] macro_rules! makro\n         \"##]],\n     )\n }\n@@ -58,9 +58,9 @@ fn in_source_file_item_list() {\n             sn tmod (Test module)\n             sn tfn (Test function)\n             sn macro_rules\n-            ma makro!(\u2026)        #[macro_export] macro_rules! makro\n+            ma makro!(\u2026)           #[macro_export] macro_rules! makro\n             md module\n-            ma makro!(\u2026)        #[macro_export] macro_rules! makro\n+            ma makro!(\u2026)           #[macro_export] macro_rules! makro\n         \"##]],\n     )\n }"}, {"sha": "c34b4b4f852325208b12e4b790ef089ad893f05e", "filename": "crates/ide_completion/src/tests/type_pos.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Ftests%2Ftype_pos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348f68caccc5ec6afe1900db67e282e4201e26aa/crates%2Fide_completion%2Fsrc%2Ftests%2Ftype_pos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Ftype_pos.rs?ref=348f68caccc5ec6afe1900db67e282e4201e26aa", "patch": "@@ -140,7 +140,7 @@ trait Trait2 {\n fn foo<'lt, T: Trait2<$0>, const CONST_PARAM: usize>(_: T) {}\n \"#,\n         expect![[r#\"\n-            ta Foo =       type Foo;\n+            ta Foo =  (Trait2) type Foo;\n             tp T\n             cp CONST_PARAM\n             tt Trait\n@@ -151,7 +151,7 @@ fn foo<'lt, T: Trait2<$0>, const CONST_PARAM: usize>(_: T) {}\n             md module\n             st Unit\n             ct CONST\n-            ma makro!(\u2026)   macro_rules! makro\n+            ma makro!(\u2026)       macro_rules! makro\n             bt u32\n         \"#]],\n     );"}]}