{"sha": "a912b261d3e6c95430bf2116b15b3af2e112bc4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MTJiMjYxZDNlNmM5NTQzMGJmMjExNmIxNWIzYWYyZTExMmJjNGI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-27T12:07:51Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-27T12:07:51Z"}, "message": "dump validation errors", "tree": {"sha": "1e92a83d19c9a7837f23f09b1a8875bee45742b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e92a83d19c9a7837f23f09b1a8875bee45742b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a912b261d3e6c95430bf2116b15b3af2e112bc4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a912b261d3e6c95430bf2116b15b3af2e112bc4b", "html_url": "https://github.com/rust-lang/rust/commit/a912b261d3e6c95430bf2116b15b3af2e112bc4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a912b261d3e6c95430bf2116b15b3af2e112bc4b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "359e70d1b20402ca9cc8731909daecfab598e55d", "url": "https://api.github.com/repos/rust-lang/rust/commits/359e70d1b20402ca9cc8731909daecfab598e55d", "html_url": "https://github.com/rust-lang/rust/commit/359e70d1b20402ca9cc8731909daecfab598e55d"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "0a2b6afbc785ee496016d35a3d6fb84bd68b7f48", "filename": "crates/ra_syntax/src/utils.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a912b261d3e6c95430bf2116b15b3af2e112bc4b/crates%2Fra_syntax%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a912b261d3e6c95430bf2116b15b3af2e112bc4b/crates%2Fra_syntax%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Futils.rs?ref=a912b261d3e6c95430bf2116b15b3af2e112bc4b", "patch": "@@ -1,10 +1,13 @@\n-use crate::{SourceFileNode, SyntaxKind, SyntaxNodeRef, WalkEvent};\n+use crate::{SourceFileNode, SyntaxKind, SyntaxNodeRef, WalkEvent, AstNode};\n use std::fmt::Write;\n use std::str;\n \n /// Parse a file and create a string representation of the resulting parse tree.\n pub fn dump_tree(syntax: SyntaxNodeRef) -> String {\n-    let mut errors: Vec<_> = syntax.root_data().to_vec();\n+    let mut errors: Vec<_> = match syntax.ancestors().find_map(SourceFileNode::cast) {\n+        Some(file) => file.owned().errors(),\n+        None => syntax.root_data().to_vec(),\n+    };\n     errors.sort_by_key(|e| e.offset());\n     let mut err_pos = 0;\n     let mut level = 0;"}]}