{"sha": "e4a65e83e7ce89ce7a015753a4b8d989416ae2a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0YTY1ZTgzZTdjZTg5Y2U3YTAxNTc1M2E0YjhkOTg5NDE2YWUyYTg=", "commit": {"author": {"name": "TyPR124", "email": "t.ruckinger@gmail.com", "date": "2020-03-16T20:22:49Z"}, "committer": {"name": "TyPR124", "email": "t.ruckinger@gmail.com", "date": "2020-03-16T20:22:49Z"}, "message": "make safety comments more explicit", "tree": {"sha": "9e1d3fc4d4c7962d76c8f020952058bf40812c5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e1d3fc4d4c7962d76c8f020952058bf40812c5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4a65e83e7ce89ce7a015753a4b8d989416ae2a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4a65e83e7ce89ce7a015753a4b8d989416ae2a8", "html_url": "https://github.com/rust-lang/rust/commit/e4a65e83e7ce89ce7a015753a4b8d989416ae2a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4a65e83e7ce89ce7a015753a4b8d989416ae2a8/comments", "author": {"login": "TyPR124", "id": 29851190, "node_id": "MDQ6VXNlcjI5ODUxMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/29851190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TyPR124", "html_url": "https://github.com/TyPR124", "followers_url": "https://api.github.com/users/TyPR124/followers", "following_url": "https://api.github.com/users/TyPR124/following{/other_user}", "gists_url": "https://api.github.com/users/TyPR124/gists{/gist_id}", "starred_url": "https://api.github.com/users/TyPR124/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TyPR124/subscriptions", "organizations_url": "https://api.github.com/users/TyPR124/orgs", "repos_url": "https://api.github.com/users/TyPR124/repos", "events_url": "https://api.github.com/users/TyPR124/events{/privacy}", "received_events_url": "https://api.github.com/users/TyPR124/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TyPR124", "id": 29851190, "node_id": "MDQ6VXNlcjI5ODUxMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/29851190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TyPR124", "html_url": "https://github.com/TyPR124", "followers_url": "https://api.github.com/users/TyPR124/followers", "following_url": "https://api.github.com/users/TyPR124/following{/other_user}", "gists_url": "https://api.github.com/users/TyPR124/gists{/gist_id}", "starred_url": "https://api.github.com/users/TyPR124/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TyPR124/subscriptions", "organizations_url": "https://api.github.com/users/TyPR124/orgs", "repos_url": "https://api.github.com/users/TyPR124/repos", "events_url": "https://api.github.com/users/TyPR124/events{/privacy}", "received_events_url": "https://api.github.com/users/TyPR124/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16712ede6202067d0c1b2e23ad95b87e0afd7191", "url": "https://api.github.com/repos/rust-lang/rust/commits/16712ede6202067d0c1b2e23ad95b87e0afd7191", "html_url": "https://github.com/rust-lang/rust/commit/16712ede6202067d0c1b2e23ad95b87e0afd7191"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2820d2b5fe967367ff66e32ef8877fbd3774cf9d", "filename": "src/libstd/sys/windows/os_str.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e4a65e83e7ce89ce7a015753a4b8d989416ae2a8/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4a65e83e7ce89ce7a015753a4b8d989416ae2a8/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs?ref=e4a65e83e7ce89ce7a015753a4b8d989416ae2a8", "patch": "@@ -78,15 +78,15 @@ impl Buf {\n \n     pub fn as_slice(&self) -> &Slice {\n         // Safety: Slice is just a wrapper for Wtf8,\n-        // and as_slice returns &Wtf8. Therefore,\n-        // transmuting &Wtf8 to &Slice is safe.\n+        // and self.inner.as_slice() returns &Wtf8.\n+        // Therefore, transmuting &Wtf8 to &Slice is safe.\n         unsafe { mem::transmute(self.inner.as_slice()) }\n     }\n \n     pub fn as_mut_slice(&mut self) -> &mut Slice {\n         // Safety: Slice is just a wrapper for Wtf8,\n-        // and as_mut_slice returns &mut Wtf8. Therefore,\n-        // transmuting &mut Wtf8 to &mut Slice is safe.\n+        // and self.inner.as_mut_slice() returns &mut Wtf8.\n+        // Therefore, transmuting &mut Wtf8 to &mut Slice is safe.\n         unsafe { mem::transmute(self.inner.as_mut_slice()) }\n     }\n "}]}