{"sha": "decafbbaea1f2131f2c414dfb21da594b43464cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlY2FmYmJhZWExZjIxMzFmMmM0MTRkZmIyMWRhNTk0YjQzNDY0Y2Q=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-28T21:53:33Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-28T21:55:24Z"}, "message": "Fix trailing commas in where clauses", "tree": {"sha": "f0ee03d161e72cf76986de707877cb7602f39dac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0ee03d161e72cf76986de707877cb7602f39dac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/decafbbaea1f2131f2c414dfb21da594b43464cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/decafbbaea1f2131f2c414dfb21da594b43464cd", "html_url": "https://github.com/rust-lang/rust/commit/decafbbaea1f2131f2c414dfb21da594b43464cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/decafbbaea1f2131f2c414dfb21da594b43464cd/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40be79304e3889cf69f7d80789ca0c5fde1faf73", "url": "https://api.github.com/repos/rust-lang/rust/commits/40be79304e3889cf69f7d80789ca0c5fde1faf73", "html_url": "https://github.com/rust-lang/rust/commit/40be79304e3889cf69f7d80789ca0c5fde1faf73"}], "stats": {"total": 61, "additions": 53, "deletions": 8}, "files": [{"sha": "a753f38d9f792a118ae9aad5acc16f49d7a836a4", "filename": "src/functions.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/decafbbaea1f2131f2c414dfb21da594b43464cd/src%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/decafbbaea1f2131f2c414dfb21da594b43464cd/src%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffunctions.rs?ref=decafbbaea1f2131f2c414dfb21da594b43464cd", "patch": "@@ -88,9 +88,6 @@ impl<'a> FmtVisitor<'a> {\n                result.len() + indent + ret_str.len() > MAX_WIDTH {\n                 let indent = match FN_RETURN_INDENT {\n                     ReturnIndent::WithWhereClause => indent + 4,\n-                    ReturnIndent::WithWhereClauseOrArgs if where_clause.predicates.len() > 0 => {\n-                        indent + 4\n-                    }\n                     // TODO we might want to check that using the arg indent doesn't\n                     // blow our budget, and if it does, then fallback to the where\n                     // clause indent.\n@@ -254,7 +251,8 @@ impl<'a> FmtVisitor<'a> {\n         // The fix is comments in the AST or a span for the closing paren.\n         let snippet = self.snippet(codemap::mk_sp(prev_end, next_span_start));\n         let snippet = snippet.trim();\n-        let snippet = &snippet[..snippet.find(terminator).unwrap_or(snippet.len())];\n+        let snippet = &snippet[..snippet.find(terminator)\n+                                    .unwrap_or(snippet.find(separator).unwrap_or(snippet.len()))];\n         let snippet = snippet.trim();\n         result.push(snippet.to_string());\n "}, {"sha": "7b18664b6723be999a3968045384017989e73ded", "filename": "src/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/decafbbaea1f2131f2c414dfb21da594b43464cd/src%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/decafbbaea1f2131f2c414dfb21da594b43464cd/src%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmod.rs?ref=decafbbaea1f2131f2c414dfb21da594b43464cd", "patch": "@@ -68,7 +68,7 @@ const MAX_WIDTH: usize = 100;\n const MIN_STRING: usize = 10;\n const TAB_SPACES: usize = 4;\n const FN_BRACE_STYLE: BraceStyle = BraceStyle::SameLineWhere;\n-const FN_RETURN_INDENT: ReturnIndent = ReturnIndent::WithWhereClauseOrArgs;\n+const FN_RETURN_INDENT: ReturnIndent = ReturnIndent::WithArgs;\n // When we get scoped annotations, we should have rustfmt::skip.\n const SKIP_ANNOTATION: &'static str = \"rustfmt_skip\";\n \n@@ -99,8 +99,6 @@ enum ReturnIndent {\n     WithArgs,\n     // Aligned with the where clause\n     WithWhereClause,\n-    // Aligned with the where clause if there is one, otherwise the args.\n-    WithWhereClauseOrArgs,\n }\n \n // Formatting which depends on the AST."}, {"sha": "aa2b1a69df06be513312f6830b5e6e51113a4c55", "filename": "tests/idem/attrib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/decafbbaea1f2131f2c414dfb21da594b43464cd/tests%2Fidem%2Fattrib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/decafbbaea1f2131f2c414dfb21da594b43464cd/tests%2Fidem%2Fattrib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fidem%2Fattrib.rs?ref=decafbbaea1f2131f2c414dfb21da594b43464cd", "patch": "@@ -1,5 +1,12 @@\n // Test attributes and doc comments are preserved.\n \n+extern crate Foo;\n+#[Attr1]\n+extern crate Bar;\n+#[Attr2]\n+#[Attr2]\n+extern crate Baz;\n+\n /// Blah blah blah.\n impl Bar {\n     /// Blah blah blooo."}, {"sha": "12c0e72193f5a841384d6cbeeda360a4d3ceeaaa", "filename": "tests/idem/comments-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/decafbbaea1f2131f2c414dfb21da594b43464cd/tests%2Fidem%2Fcomments-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/decafbbaea1f2131f2c414dfb21da594b43464cd/tests%2Fidem%2Fcomments-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fidem%2Fcomments-fn.rs?ref=decafbbaea1f2131f2c414dfb21da594b43464cd", "patch": "@@ -9,7 +9,7 @@ fn foo<F, G>(a: aaaaaaaaaaaaa, // A comment\n              //  A multi line comment\n              // between args.\n              e: eeeeeeeeeeeee /* comment before paren*/)\n-    -> bar\n+             -> bar\n     where F: Foo, // COmment after where clause\n           G: Goo /* final comment */\n {"}, {"sha": "e5013a61cee13f3d34b743d4f520b006996207f2", "filename": "tests/idem/fn.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/decafbbaea1f2131f2c414dfb21da594b43464cd/tests%2Fidem%2Ffn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/decafbbaea1f2131f2c414dfb21da594b43464cd/tests%2Fidem%2Ffn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fidem%2Ffn.rs?ref=decafbbaea1f2131f2c414dfb21da594b43464cd", "patch": "@@ -0,0 +1,42 @@\n+// Tests different fns\n+\n+fn foo(a: AAAA, b: BBB, c: CCC) -> RetType {\n+\n+}\n+\n+fn foo(a: AAAA, b: BBB, c: CCC) -> RetType\n+    where T: Blah\n+{\n+\n+}\n+\n+fn foo(a: AAA)\n+    where T: Blah\n+{\n+\n+}\n+\n+fn foo(a: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,\n+       b: BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)\n+       -> RetType\n+    where T: Blah\n+{\n+\n+}\n+\n+\n+fn foo<U, T>(a: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,\n+             b: BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB)\n+             -> RetType\n+    where T: Blah,\n+          U: dsfasdfasdfasd\n+{\n+\n+}\n+\n+impl Foo {\n+    fn with_no_errors<T, F>(&mut self, f: F) -> T\n+        where F: FnOnce(&mut Resolver) -> T\n+    {\n+    }\n+}"}]}