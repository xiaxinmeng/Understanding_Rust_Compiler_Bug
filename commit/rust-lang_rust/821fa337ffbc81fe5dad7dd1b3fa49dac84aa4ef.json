{"sha": "821fa337ffbc81fe5dad7dd1b3fa49dac84aa4ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMWZhMzM3ZmZiYzgxZmU1ZGFkN2RkMWIzZmE0OWRhYzg0YWE0ZWY=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-14T22:44:31Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-14T23:32:52Z"}, "message": "add sync::tests::test_mutex_killed_broadcast", "tree": {"sha": "19f49c820745d99b93c1f51549edf7fe5e48e765", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19f49c820745d99b93c1f51549edf7fe5e48e765"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/821fa337ffbc81fe5dad7dd1b3fa49dac84aa4ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/821fa337ffbc81fe5dad7dd1b3fa49dac84aa4ef", "html_url": "https://github.com/rust-lang/rust/commit/821fa337ffbc81fe5dad7dd1b3fa49dac84aa4ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/821fa337ffbc81fe5dad7dd1b3fa49dac84aa4ef/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f3aeb4703f26d4063cd87bf2a0862051394b504", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f3aeb4703f26d4063cd87bf2a0862051394b504", "html_url": "https://github.com/rust-lang/rust/commit/4f3aeb4703f26d4063cd87bf2a0862051394b504"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "041e28cd79545ae9aa3ab6f8601e825726a1a324", "filename": "src/libstd/sync.rs", "status": "modified", "additions": 45, "deletions": 3, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/821fa337ffbc81fe5dad7dd1b3fa49dac84aa4ef/src%2Flibstd%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/821fa337ffbc81fe5dad7dd1b3fa49dac84aa4ef/src%2Flibstd%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync.rs?ref=821fa337ffbc81fe5dad7dd1b3fa49dac84aa4ef", "patch": "@@ -763,9 +763,51 @@ mod tests {\n         assert result.is_err();\n         // child task must have finished by the time try returns\n         do m.lock_cond |cond| {\n-            let _woken = cond.signal();\n-            // FIXME(#3145) this doesn't work\n-            //assert !woken;\n+            let woken = cond.signal();\n+            assert !woken;\n+        }\n+    }\n+    #[test] #[ignore(cfg(windows))]\n+    fn test_mutex_killed_broadcast() {\n+        let m = ~mutex();\n+        let m2 = ~m.clone();\n+        let (c,p) = pipes::stream();\n+\n+        let result: result::result<(),()> = do task::try {\n+            let mut sibling_convos = ~[];\n+            for 2.times {\n+                let (c,p) = pipes::stream();\n+                let c = ~mut some(c);\n+                vec::push(sibling_convos, p);\n+                let mi = ~m2.clone();\n+                // spawn sibling task\n+                do task::spawn { // linked\n+                    do mi.lock_cond |cond| {\n+                        let c = option::swap_unwrap(c);\n+                        c.send(()); // tell sibling to go ahead\n+                        let _z = send_on_failure(c);\n+                        cond.wait(); // block forever\n+                    }\n+                }\n+            }\n+            for vec::each(sibling_convos) |p| {\n+                let _ = p.recv(); // wait for sibling to get in the mutex\n+            }\n+            do m2.lock { }\n+            c.send(sibling_convos); // let parent wait on all children\n+            fail;\n+        };\n+        assert result.is_err();\n+        // child task must have finished by the time try returns\n+        for vec::each(p.recv()) |p| { p.recv(); } // wait on all its siblings\n+        do m.lock_cond |cond| {\n+            let woken = cond.broadcast();\n+            assert woken == 0;\n+        }\n+        struct send_on_failure {\n+            c: pipes::chan<()>;\n+            new(+c: pipes::chan<()>) { self.c = c; }\n+            drop { self.c.send(()); }\n         }\n     }\n     /************************************************************************"}]}