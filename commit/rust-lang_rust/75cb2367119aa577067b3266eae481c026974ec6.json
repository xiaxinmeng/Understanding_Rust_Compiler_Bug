{"sha": "75cb2367119aa577067b3266eae481c026974ec6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1Y2IyMzY3MTE5YWE1NzcwNjdiMzI2NmVhZTQ4MWMwMjY5NzRlYzY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-01-04T01:15:13Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-01-04T03:49:37Z"}, "message": "Compare extern crate items with its name instead of span\n\nWhen we use span, bugs easily sneak in.", "tree": {"sha": "290ea79c301c02d7eac936e8ffbd38a6e47bf70d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/290ea79c301c02d7eac936e8ffbd38a6e47bf70d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75cb2367119aa577067b3266eae481c026974ec6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75cb2367119aa577067b3266eae481c026974ec6", "html_url": "https://github.com/rust-lang/rust/commit/75cb2367119aa577067b3266eae481c026974ec6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75cb2367119aa577067b3266eae481c026974ec6/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f24bc0d446ee5c74b94c371b9e30843df1250bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f24bc0d446ee5c74b94c371b9e30843df1250bb", "html_url": "https://github.com/rust-lang/rust/commit/0f24bc0d446ee5c74b94c371b9e30843df1250bb"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "b940dcc9de74222356549339045e573b4373de01", "filename": "src/imports.rs", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/75cb2367119aa577067b3266eae481c026974ec6/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75cb2367119aa577067b3266eae481c026974ec6/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=75cb2367119aa577067b3266eae481c026974ec6", "patch": "@@ -105,13 +105,32 @@ fn compare_use_trees(a: &ast::UseTree, b: &ast::UseTree, nested: bool) -> Orderi\n     }\n }\n \n-fn compare_use_items(context: &RewriteContext, a: &ast::Item, b: &ast::Item) -> Option<Ordering> {\n+fn compare_use_items(a: &ast::Item, b: &ast::Item) -> Option<Ordering> {\n     match (&a.node, &b.node) {\n         (&ast::ItemKind::Use(ref a_tree), &ast::ItemKind::Use(ref b_tree)) => {\n             Some(compare_use_trees(a_tree, b_tree, false))\n         }\n-        (&ast::ItemKind::ExternCrate(..), &ast::ItemKind::ExternCrate(..)) => {\n-            Some(context.snippet(a.span).cmp(context.snippet(b.span)))\n+        (&ast::ItemKind::ExternCrate(ref a_name), &ast::ItemKind::ExternCrate(ref b_name)) => {\n+            // `extern crate foo as bar;`\n+            //               ^^^ Comparing this.\n+            let a_orig_name =\n+                a_name.map_or_else(|| a.ident.name.as_str(), |symbol| symbol.as_str());\n+            let b_orig_name =\n+                b_name.map_or_else(|| b.ident.name.as_str(), |symbol| symbol.as_str());\n+            let result = a_orig_name.cmp(&b_orig_name);\n+            if result != Ordering::Equal {\n+                return Some(result);\n+            }\n+\n+            // `extern crate foo as bar;`\n+            //                      ^^^ Comparing this.\n+            let result = match (a_name, b_name) {\n+                (Some(..), None) => Ordering::Greater,\n+                (None, Some(..)) => Ordering::Less,\n+                (None, None) => Ordering::Equal,\n+                (Some(..), Some(..)) => a.ident.name.cmp(&b.ident.name),\n+            };\n+            Some(result)\n         }\n         _ => None,\n     }\n@@ -257,7 +276,7 @@ fn rewrite_imports(\n         false,\n     );\n     let mut item_pair_vec: Vec<_> = items.zip(use_items.iter()).collect();\n-    item_pair_vec.sort_by(|a, b| compare_use_items(context, a.1, b.1).unwrap());\n+    item_pair_vec.sort_by(|a, b| compare_use_items(a.1, b.1).unwrap());\n     let item_vec: Vec<_> = item_pair_vec.into_iter().map(|pair| pair.0).collect();\n \n     let fmt = ListFormatting {"}, {"sha": "f9c9626a1f58c0267473b0bdfedd66baf0e78d12", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/75cb2367119aa577067b3266eae481c026974ec6/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75cb2367119aa577067b3266eae481c026974ec6/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=75cb2367119aa577067b3266eae481c026974ec6", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(match_default_bindings)]\n #![feature(rustc_private)]\n #![feature(type_ascription)]\n "}, {"sha": "187e698607ac0a19e304b3eed8a198e2574f0fb0", "filename": "tests/source/extern.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/75cb2367119aa577067b3266eae481c026974ec6/tests%2Fsource%2Fextern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75cb2367119aa577067b3266eae481c026974ec6/tests%2Fsource%2Fextern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fextern.rs?ref=75cb2367119aa577067b3266eae481c026974ec6", "patch": "@@ -10,6 +10,10 @@ extern crate chrono;\n extern crate foo;\n extern crate bar;\n \n+// #2315\n+extern crate proc_macro2;\n+extern crate proc_macro;\n+\n  extern  \"C\" {\n   fn c_func(x: *mut *mut libc::c_void);\n "}, {"sha": "b0aa51127d54ef737d93a60ef8a397653dfd604b", "filename": "tests/target/extern.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/75cb2367119aa577067b3266eae481c026974ec6/tests%2Ftarget%2Fextern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75cb2367119aa577067b3266eae481c026974ec6/tests%2Ftarget%2Fextern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fextern.rs?ref=75cb2367119aa577067b3266eae481c026974ec6", "patch": "@@ -1,7 +1,7 @@\n // rustfmt-normalize_comments: true\n \n-extern crate foo as bar;\n extern crate foo;\n+extern crate foo as bar;\n \n extern crate chrono;\n extern crate dotenv;\n@@ -10,6 +10,10 @@ extern crate futures;\n extern crate bar;\n extern crate foo;\n \n+// #2315\n+extern crate proc_macro;\n+extern crate proc_macro2;\n+\n extern \"C\" {\n     fn c_func(x: *mut *mut libc::c_void);\n "}]}