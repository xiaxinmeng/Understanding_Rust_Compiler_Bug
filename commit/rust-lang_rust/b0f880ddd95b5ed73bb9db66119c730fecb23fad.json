{"sha": "b0f880ddd95b5ed73bb9db66119c730fecb23fad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwZjg4MGRkZDk1YjVlZDczYmI5ZGI2NjExOWM3MzBmZWNiMjNmYWQ=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-12-31T05:16:16Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-12-31T05:16:16Z"}, "message": "in which leading zeroes on tuple-struct accesses are abjured\n\nResolves #47073.", "tree": {"sha": "dc662f728a3f999394661128515e6e59d2abbd08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc662f728a3f999394661128515e6e59d2abbd08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0f880ddd95b5ed73bb9db66119c730fecb23fad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0f880ddd95b5ed73bb9db66119c730fecb23fad", "html_url": "https://github.com/rust-lang/rust/commit/b0f880ddd95b5ed73bb9db66119c730fecb23fad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0f880ddd95b5ed73bb9db66119c730fecb23fad/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54d7285a349a3558755a31bba5682d7618b66967", "url": "https://api.github.com/repos/rust-lang/rust/commits/54d7285a349a3558755a31bba5682d7618b66967", "html_url": "https://github.com/rust-lang/rust/commit/54d7285a349a3558755a31bba5682d7618b66967"}], "stats": {"total": 51, "additions": 48, "deletions": 3}, "files": [{"sha": "1a2146509e35f78be0d8d7609aea5d250a2bed94", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b0f880ddd95b5ed73bb9db66119c730fecb23fad/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0f880ddd95b5ed73bb9db66119c730fecb23fad/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b0f880ddd95b5ed73bb9db66119c730fecb23fad", "patch": "@@ -2592,7 +2592,7 @@ impl<'a> Parser<'a> {\n                   token::Ident(..) => {\n                     e = self.parse_dot_suffix(e, lo)?;\n                   }\n-                  token::Literal(token::Integer(n), suf) => {\n+                  token::Literal(token::Integer(index_ident), suf) => {\n                     let sp = self.span;\n \n                     // A tuple index may not have a suffix\n@@ -2602,16 +2602,25 @@ impl<'a> Parser<'a> {\n                     hi = self.span;\n                     self.bump();\n \n-                    let index = n.as_str().parse::<usize>().ok();\n+                    let invalid_msg = \"invalid tuple or struct index\";\n+\n+                    let index = index_ident.as_str().parse::<usize>().ok();\n                     match index {\n                         Some(n) => {\n+                            if n.to_string() != index_ident.as_str() {\n+                                let mut err = self.struct_span_err(self.prev_span, invalid_msg);\n+                                err.span_suggestion(self.prev_span,\n+                                                    \"try simplifying the index\",\n+                                                    n.to_string());\n+                                err.emit();\n+                            }\n                             let id = respan(dot_span.to(hi), n);\n                             let field = self.mk_tup_field(e, id);\n                             e = self.mk_expr(lo.to(hi), field, ThinVec::new());\n                         }\n                         None => {\n                             let prev_span = self.prev_span;\n-                            self.span_err(prev_span, \"invalid tuple or tuple struct index\");\n+                            self.span_err(prev_span, invalid_msg);\n                         }\n                     }\n                   }"}, {"sha": "e339716289c6bd31ab5d1aed95f6cdff5ec76783", "filename": "src/test/ui/issue-47073-zero-padded-tuple-struct-indices.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b0f880ddd95b5ed73bb9db66119c730fecb23fad/src%2Ftest%2Fui%2Fissue-47073-zero-padded-tuple-struct-indices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0f880ddd95b5ed73bb9db66119c730fecb23fad/src%2Ftest%2Fui%2Fissue-47073-zero-padded-tuple-struct-indices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47073-zero-padded-tuple-struct-indices.rs?ref=b0f880ddd95b5ed73bb9db66119c730fecb23fad", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+type Guilty = bool;\n+type FineDollars = u32;\n+\n+struct Verdict(Guilty, Option<FineDollars>);\n+\n+fn main() {\n+    let justice = Verdict(true, Some(2718));\n+    let _condemned = justice.00;\n+    //~^ ERROR invalid tuple or struct index\n+    let _punishment = justice.001;\n+    //~^ ERROR invalid tuple or struct index\n+}"}, {"sha": "24b3c263b6372411fd4792f74a31812d5be212a6", "filename": "src/test/ui/issue-47073-zero-padded-tuple-struct-indices.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b0f880ddd95b5ed73bb9db66119c730fecb23fad/src%2Ftest%2Fui%2Fissue-47073-zero-padded-tuple-struct-indices.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b0f880ddd95b5ed73bb9db66119c730fecb23fad/src%2Ftest%2Fui%2Fissue-47073-zero-padded-tuple-struct-indices.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47073-zero-padded-tuple-struct-indices.stderr?ref=b0f880ddd95b5ed73bb9db66119c730fecb23fad", "patch": "@@ -0,0 +1,14 @@\n+error: invalid tuple or struct index\n+  --> $DIR/issue-47073-zero-padded-tuple-struct-indices.rs:18:30\n+   |\n+18 |     let _condemned = justice.00;\n+   |                              ^^ help: try simplifying the index: `0`\n+\n+error: invalid tuple or struct index\n+  --> $DIR/issue-47073-zero-padded-tuple-struct-indices.rs:20:31\n+   |\n+20 |     let _punishment = justice.001;\n+   |                               ^^^ help: try simplifying the index: `1`\n+\n+error: aborting due to 2 previous errors\n+"}]}