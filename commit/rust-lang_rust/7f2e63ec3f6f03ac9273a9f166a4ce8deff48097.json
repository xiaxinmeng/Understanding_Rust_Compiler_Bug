{"sha": "7f2e63ec3f6f03ac9273a9f166a4ce8deff48097", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMmU2M2VjM2Y2ZjAzYWM5MjczYTlmMTY2YTRjZThkZWZmNDgwOTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-24T22:51:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-24T22:51:10Z"}, "message": "auto merge of #15945 : treeman/rust/doc-smallint-update, r=alexcrichton\n\nForgot two methods, but @alexcrichton was a bit too quick to accept  #15943, so I made a new PR.", "tree": {"sha": "2bf6ee5186ca92dce413db41d2c1e38179159674", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bf6ee5186ca92dce413db41d2c1e38179159674"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f2e63ec3f6f03ac9273a9f166a4ce8deff48097", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f2e63ec3f6f03ac9273a9f166a4ce8deff48097", "html_url": "https://github.com/rust-lang/rust/commit/7f2e63ec3f6f03ac9273a9f166a4ce8deff48097", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f2e63ec3f6f03ac9273a9f166a4ce8deff48097/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3f66bd5b4c7066b1405c46a2fcdd9646761bc1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3f66bd5b4c7066b1405c46a2fcdd9646761bc1e", "html_url": "https://github.com/rust-lang/rust/commit/d3f66bd5b4c7066b1405c46a2fcdd9646761bc1e"}, {"sha": "222b780e7ac3fa1937948cb159c2e88422adb715", "url": "https://api.github.com/repos/rust-lang/rust/commits/222b780e7ac3fa1937948cb159c2e88422adb715", "html_url": "https://github.com/rust-lang/rust/commit/222b780e7ac3fa1937948cb159c2e88422adb715"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "994a6d6c5f3b95120880ee902a76e89146d5b2e1", "filename": "src/libcollections/smallintmap.rs", "status": "modified", "additions": 44, "deletions": 4, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7f2e63ec3f6f03ac9273a9f166a4ce8deff48097/src%2Flibcollections%2Fsmallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f2e63ec3f6f03ac9273a9f166a4ce8deff48097/src%2Flibcollections%2Fsmallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fsmallintmap.rs?ref=7f2e63ec3f6f03ac9273a9f166a4ce8deff48097", "patch": "@@ -279,6 +279,50 @@ impl<V> SmallIntMap<V> {\n }\n \n impl<V:Clone> SmallIntMap<V> {\n+    /// Update a value in the map. If the key already exists in the map,\n+    /// modify the value with `ff` taking `oldval, newval`.\n+    /// Otherwise set the value to `newval`.\n+    /// Return `true` if the key did not already exist in the map.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// use std::collections::SmallIntMap;\n+    ///\n+    /// let mut map = SmallIntMap::new();\n+    ///\n+    /// // Key does not exist, will do a simple insert\n+    /// assert!(map.update(1, vec![1i, 2], |old, new| old.append(new.as_slice())));\n+    /// assert_eq!(map.get(&1), &vec![1i, 2]);\n+    ///\n+    /// // Key exists, update the value\n+    /// assert!(!map.update(1, vec![3i, 4], |old, new| old.append(new.as_slice())));\n+    /// assert_eq!(map.get(&1), &vec![1i, 2, 3, 4]);\n+    /// ```\n+    pub fn update(&mut self, key: uint, newval: V, ff: |V, V| -> V) -> bool {\n+        self.update_with_key(key, newval, |_k, v, v1| ff(v,v1))\n+    }\n+\n+    /// Update a value in the map. If the key already exists in the map,\n+    /// modify the value with `ff` taking `key, oldval, newval`.\n+    /// Otherwise set the value to `newval`.\n+    /// Return `true` if the key did not already exist in the map.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// use std::collections::SmallIntMap;\n+    ///\n+    /// let mut map = SmallIntMap::new();\n+    ///\n+    /// // Key does not exist, will do a simple insert\n+    /// assert!(map.update_with_key(7, 10, |key, old, new| (old + new) % key));\n+    /// assert_eq!(map.get(&7), &10);\n+    ///\n+    /// // Key exists, update the value\n+    /// assert!(!map.update_with_key(7, 20, |key, old, new| (old + new) % key));\n+    /// assert_eq!(map.get(&7), &2);\n+    /// ```\n     pub fn update_with_key(&mut self,\n                            key: uint,\n                            val: V,\n@@ -290,10 +334,6 @@ impl<V:Clone> SmallIntMap<V> {\n         };\n         self.insert(key, new_val)\n     }\n-\n-    pub fn update(&mut self, key: uint, newval: V, ff: |V, V| -> V) -> bool {\n-        self.update_with_key(key, newval, |_k, v, v1| ff(v,v1))\n-    }\n }\n \n impl<V: fmt::Show> fmt::Show for SmallIntMap<V> {"}]}