{"sha": "2269ff521fe2a945e462d5156799011c5fce2966", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNjlmZjUyMWZlMmE5NDVlNDYyZDUxNTY3OTkwMTFjNWZjZTI5NjY=", "commit": {"author": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-03-02T08:29:35Z"}, "committer": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-03-02T08:29:35Z"}, "message": "Remove print_what_bootstrap_means\n\nIt was an existing solution to tell the user why a --help command\ntakes a long time to process. However, it would only print if the\nstage0 rust compiler needed to be downloaded, it came after\nupdate_submodules (which took a long time), and it was immediately\nfollowed by download messages and loading bars, meaning users could\neasily gloss over the message.\n\nThis commit also moves the help message out of main(), and instead\nputs it at the top of bootstrap(). main() is intended to be minimal,\nonly handling error messages.", "tree": {"sha": "7e2f450278dfe83095b3baa01057c2fd13bc1d9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e2f450278dfe83095b3baa01057c2fd13bc1d9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2269ff521fe2a945e462d5156799011c5fce2966", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2269ff521fe2a945e462d5156799011c5fce2966", "html_url": "https://github.com/rust-lang/rust/commit/2269ff521fe2a945e462d5156799011c5fce2966", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2269ff521fe2a945e462d5156799011c5fce2966/comments", "author": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffb6291cd032e3b0577bf67a2b6d932d6ba0787c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffb6291cd032e3b0577bf67a2b6d932d6ba0787c", "html_url": "https://github.com/rust-lang/rust/commit/ffb6291cd032e3b0577bf67a2b6d932d6ba0787c"}], "stats": {"total": 35, "additions": 8, "deletions": 27}, "files": [{"sha": "327ae0cb65c88cf1c2d1c5e3856fa393bc63666d", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 8, "deletions": 27, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/2269ff521fe2a945e462d5156799011c5fce2966/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/2269ff521fe2a945e462d5156799011c5fce2966/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=2269ff521fe2a945e462d5156799011c5fce2966", "patch": "@@ -314,7 +314,6 @@ def __init__(self):\n         self.build_dir = os.path.join(os.getcwd(), \"build\")\n         self.clean = False\n         self.config_toml = ''\n-        self.printed = False\n         self.rust_root = os.path.abspath(os.path.join(__file__, '../../..'))\n         self.use_locked_deps = ''\n         self.use_vendored_sources = ''\n@@ -336,7 +335,6 @@ def download_stage0(self):\n         if self.rustc().startswith(self.bin_root()) and \\\n                 (not os.path.exists(self.rustc()) or\n                  self.program_out_of_date(self.rustc_stamp())):\n-            self.print_what_bootstrap_means()\n             if os.path.exists(self.bin_root()):\n                 shutil.rmtree(self.bin_root())\n             filename = \"rust-std-{}-{}.tar.gz\".format(\n@@ -354,7 +352,6 @@ def download_stage0(self):\n         if self.cargo().startswith(self.bin_root()) and \\\n                 (not os.path.exists(self.cargo()) or\n                  self.program_out_of_date(self.cargo_stamp())):\n-            self.print_what_bootstrap_means()\n             filename = \"cargo-{}-{}.tar.gz\".format(cargo_channel, self.build)\n             self._download_stage0_helper(filename, \"cargo\")\n             self.fix_executable(\"{}/bin/cargo\".format(self.bin_root()))\n@@ -555,23 +552,6 @@ def exe_suffix():\n             return '.exe'\n         return ''\n \n-    def print_what_bootstrap_means(self):\n-        \"\"\"Prints more information about the build system\"\"\"\n-        if hasattr(self, 'printed'):\n-            return\n-        self.printed = True\n-        if os.path.exists(self.bootstrap_binary()):\n-            return\n-        if '--help' not in sys.argv or len(sys.argv) == 1:\n-            return\n-\n-        print('info: the build system for Rust is written in Rust, so this')\n-        print('      script is now going to download a stage0 rust compiler')\n-        print('      and then compile the build system itself')\n-        print('')\n-        print('info: in the meantime you can read more about rustbuild at')\n-        print('      src/bootstrap/README.md before the download finishes')\n-\n     def bootstrap_binary(self):\n         \"\"\"Return the path of the boostrap binary\n \n@@ -585,7 +565,6 @@ def bootstrap_binary(self):\n \n     def build_bootstrap(self):\n         \"\"\"Build bootstrap\"\"\"\n-        self.print_what_bootstrap_means()\n         build_dir = os.path.join(self.build_dir, \"bootstrap\")\n         if self.clean and os.path.exists(build_dir):\n             shutil.rmtree(build_dir)\n@@ -672,6 +651,14 @@ def set_dev_environment(self):\n \n def bootstrap(help_triggered):\n     \"\"\"Configure, fetch, build and run the initial bootstrap\"\"\"\n+\n+    # If the user is asking for help, let them know that the whole download-and-build\n+    # process has to happen before anything is printed out.\n+    if help_triggered:\n+        print(\"info: Downloading and building bootstrap before processing --help\")\n+        print(\"      command. See src/bootstrap/README.md for help with common\")\n+        print(\"      commands.\")\n+\n     parser = argparse.ArgumentParser(description='Build rust')\n     parser.add_argument('--config')\n     parser.add_argument('--build')\n@@ -763,12 +750,6 @@ def main():\n     help_triggered = (\n         '-h' in sys.argv) or ('--help' in sys.argv) or (len(sys.argv) == 1)\n     try:\n-        # If the user is asking for help, let them know that the whole download-and-build\n-        # process has to happen before anything is printed out.\n-        if help_triggered:\n-            print(\"NOTE: Downloading and compiling bootstrap requirements before processing\")\n-            print(\"      --help command. See src/bootstrap/README.md for help with common\")\n-            print(\"      commands.\")\n         bootstrap(help_triggered)\n         if not help_triggered:\n             print(\"Build completed successfully in {}\".format("}]}