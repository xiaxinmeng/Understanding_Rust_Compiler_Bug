{"sha": "32b92669e4ec83005eff2641b092f25be09373b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYjkyNjY5ZTRlYzgzMDA1ZWZmMjY0MWIwOTJmMjViZTA5MzczYjg=", "commit": {"author": {"name": "Amit Aryeh Levy", "email": "amit@amitlevy.com", "date": "2017-04-26T00:05:51Z"}, "committer": {"name": "Amit Aryeh Levy", "email": "amit@amitlevy.com", "date": "2017-04-26T20:25:14Z"}, "message": "Add RWPI/ROPI relocation model support\n\nAdds support for using LLVM 4's ROPI and RWPI relocation models for ARM", "tree": {"sha": "5eca497d01aefde890278f554e28f9e00165b548", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5eca497d01aefde890278f554e28f9e00165b548"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32b92669e4ec83005eff2641b092f25be09373b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32b92669e4ec83005eff2641b092f25be09373b8", "html_url": "https://github.com/rust-lang/rust/commit/32b92669e4ec83005eff2641b092f25be09373b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32b92669e4ec83005eff2641b092f25be09373b8/comments", "author": {"login": "alevy", "id": 4689, "node_id": "MDQ6VXNlcjQ2ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/4689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alevy", "html_url": "https://github.com/alevy", "followers_url": "https://api.github.com/users/alevy/followers", "following_url": "https://api.github.com/users/alevy/following{/other_user}", "gists_url": "https://api.github.com/users/alevy/gists{/gist_id}", "starred_url": "https://api.github.com/users/alevy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alevy/subscriptions", "organizations_url": "https://api.github.com/users/alevy/orgs", "repos_url": "https://api.github.com/users/alevy/repos", "events_url": "https://api.github.com/users/alevy/events{/privacy}", "received_events_url": "https://api.github.com/users/alevy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alevy", "id": 4689, "node_id": "MDQ6VXNlcjQ2ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/4689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alevy", "html_url": "https://github.com/alevy", "followers_url": "https://api.github.com/users/alevy/followers", "following_url": "https://api.github.com/users/alevy/following{/other_user}", "gists_url": "https://api.github.com/users/alevy/gists{/gist_id}", "starred_url": "https://api.github.com/users/alevy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alevy/subscriptions", "organizations_url": "https://api.github.com/users/alevy/orgs", "repos_url": "https://api.github.com/users/alevy/repos", "events_url": "https://api.github.com/users/alevy/events{/privacy}", "received_events_url": "https://api.github.com/users/alevy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0a4074c5e87d24ff630f6aa456a64698bff3ed2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0a4074c5e87d24ff630f6aa456a64698bff3ed2", "html_url": "https://github.com/rust-lang/rust/commit/b0a4074c5e87d24ff630f6aa456a64698bff3ed2"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "a9a8ee93df15f52b1559a1c4d96a1557e976b8f8", "filename": "src/librustc_llvm/ffi.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/32b92669e4ec83005eff2641b092f25be09373b8/src%2Flibrustc_llvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32b92669e4ec83005eff2641b092f25be09373b8/src%2Flibrustc_llvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fffi.rs?ref=32b92669e4ec83005eff2641b092f25be09373b8", "patch": "@@ -288,6 +288,9 @@ pub enum RelocMode {\n     Static = 1,\n     PIC = 2,\n     DynamicNoPic = 3,\n+    ROPI = 4,\n+    RWPI = 5,\n+    ROPI_RWPI = 6,\n }\n \n /// LLVMRustCodeModel"}, {"sha": "3492403a1bf8e545e192c70ab7e526e1108f762d", "filename": "src/librustc_trans/back/write.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/32b92669e4ec83005eff2641b092f25be09373b8/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32b92669e4ec83005eff2641b092f25be09373b8/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fwrite.rs?ref=32b92669e4ec83005eff2641b092f25be09373b8", "patch": "@@ -37,11 +37,14 @@ use std::sync::mpsc::channel;\n use std::thread;\n use libc::{c_uint, c_void};\n \n-pub const RELOC_MODEL_ARGS : [(&'static str, llvm::RelocMode); 4] = [\n+pub const RELOC_MODEL_ARGS : [(&'static str, llvm::RelocMode); 7] = [\n     (\"pic\", llvm::RelocMode::PIC),\n     (\"static\", llvm::RelocMode::Static),\n     (\"default\", llvm::RelocMode::Default),\n     (\"dynamic-no-pic\", llvm::RelocMode::DynamicNoPic),\n+    (\"ropi\", llvm::RelocMode::ROPI),\n+    (\"rwpi\", llvm::RelocMode::RWPI),\n+    (\"ropi-rwpi\", llvm::RelocMode::ROPI_RWPI),\n ];\n \n pub const CODE_GEN_MODEL_ARGS : [(&'static str, llvm::CodeModel); 5] = ["}, {"sha": "1e19e28e78aad6a9029796a16afbf70a38e74476", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/32b92669e4ec83005eff2641b092f25be09373b8/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/32b92669e4ec83005eff2641b092f25be09373b8/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=32b92669e4ec83005eff2641b092f25be09373b8", "patch": "@@ -290,7 +290,7 @@ extern \"C\" void LLVMRustPrintTargetFeatures(LLVMTargetMachineRef) {\n \n extern \"C\" LLVMTargetMachineRef LLVMRustCreateTargetMachine(\n     const char *TripleStr, const char *CPU, const char *Feature,\n-    LLVMRustCodeModel RustCM, LLVMRelocMode Reloc,\n+    LLVMRustCodeModel RustCM, int Reloc,\n     LLVMRustCodeGenOptLevel RustOptLevel, bool UseSoftFloat,\n     bool PositionIndependentExecutable, bool FunctionSections,\n     bool DataSections) {\n@@ -304,15 +304,26 @@ extern \"C\" LLVMTargetMachineRef LLVMRustCreateTargetMachine(\n   auto OptLevel = fromRust(RustOptLevel);\n \n   switch (Reloc) {\n-  case LLVMRelocStatic:\n+  case 1:\n     RM = Reloc::Static;\n     break;\n-  case LLVMRelocPIC:\n+  case 2:\n     RM = Reloc::PIC_;\n     break;\n-  case LLVMRelocDynamicNoPic:\n+  case 3:\n     RM = Reloc::DynamicNoPIC;\n     break;\n+#if LLVM_VERSION_GE(4, 0)\n+  case 4:\n+    RM = Reloc::ROPI;\n+    break;\n+  case 5:\n+    RM = Reloc::RWPI;\n+    break;\n+  case 6:\n+    RM = Reloc::ROPI_RWPI;\n+    break;\n+#endif\n   default:\n #if LLVM_VERSION_LE(3, 8)\n     RM = Reloc::Default;"}]}