{"sha": "857c1650efdb51650458f9ec1119adaa49b34371", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1N2MxNjUwZWZkYjUxNjUwNDU4ZjllYzExMTlhZGFhNDliMzQzNzE=", "commit": {"author": {"name": "Muhammad Mominul Huque", "email": "mominul2082@gmail.com", "date": "2018-10-31T19:50:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-31T20:39:21Z"}, "message": "Various changes\nPin to a specific toolchain version\nFormat checking functionality\nAdd a test to check the code formatting.\nRemove macro_use attribute", "tree": {"sha": "f6239e330db9880f1f0712032eb98645f719c363", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6239e330db9880f1f0712032eb98645f719c363"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/857c1650efdb51650458f9ec1119adaa49b34371", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/857c1650efdb51650458f9ec1119adaa49b34371", "html_url": "https://github.com/rust-lang/rust/commit/857c1650efdb51650458f9ec1119adaa49b34371", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/857c1650efdb51650458f9ec1119adaa49b34371/comments", "author": {"login": "mominul", "id": 9459891, "node_id": "MDQ6VXNlcjk0NTk4OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/9459891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mominul", "html_url": "https://github.com/mominul", "followers_url": "https://api.github.com/users/mominul/followers", "following_url": "https://api.github.com/users/mominul/following{/other_user}", "gists_url": "https://api.github.com/users/mominul/gists{/gist_id}", "starred_url": "https://api.github.com/users/mominul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mominul/subscriptions", "organizations_url": "https://api.github.com/users/mominul/orgs", "repos_url": "https://api.github.com/users/mominul/repos", "events_url": "https://api.github.com/users/mominul/events{/privacy}", "received_events_url": "https://api.github.com/users/mominul/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d14610dab4b4fedee7a0d8f1739eb3e0691984c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d14610dab4b4fedee7a0d8f1739eb3e0691984c1", "html_url": "https://github.com/rust-lang/rust/commit/d14610dab4b4fedee7a0d8f1739eb3e0691984c1"}], "stats": {"total": 68, "additions": 40, "deletions": 28}, "files": [{"sha": "29c46c7c4d1b0e456f12145aefe16614444134e8", "filename": "crates/tools/src/lib.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/857c1650efdb51650458f9ec1119adaa49b34371/crates%2Ftools%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/857c1650efdb51650458f9ec1119adaa49b34371/crates%2Ftools%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Flib.rs?ref=857c1650efdb51650458f9ec1119adaa49b34371", "patch": "@@ -4,9 +4,11 @@ extern crate teraron;\n \n use std::{\n     path::{Path, PathBuf},\n+    process::Command,\n };\n \n use itertools::Itertools;\n+use failure::bail;\n \n pub use teraron::{Mode, Verify, Overwrite};\n \n@@ -15,6 +17,7 @@ pub type Result<T> = ::std::result::Result<T, failure::Error>;\n pub const GRAMMAR: &str = \"crates/ra_syntax/src/grammar.ron\";\n pub const SYNTAX_KINDS: &str = \"crates/ra_syntax/src/syntax_kinds/generated.rs.tera\";\n pub const AST: &str = \"crates/ra_syntax/src/ast/generated.rs.tera\";\n+const TOOLCHAIN: &str = \"beta-2018-10-30\";\n \n #[derive(Debug)]\n pub struct Test {\n@@ -80,3 +83,29 @@ pub fn project_root() -> PathBuf {\n         .unwrap()\n         .to_path_buf()\n }\n+\n+pub fn run(cmdline: &str, dir: &str) -> Result<()> {\n+    eprintln!(\"\\nwill run: {}\", cmdline);\n+    let project_dir = project_root().join(dir);\n+    let mut args = cmdline.split_whitespace();\n+    let exec = args.next().unwrap();\n+    let status = Command::new(exec)\n+        .args(args)\n+        .current_dir(project_dir)\n+        .status()?;\n+    if !status.success() {\n+        bail!(\"`{}` exited with {}\", cmdline, status);\n+    }\n+    Ok(())\n+}\n+\n+pub fn run_rustfmt(mode: Mode) -> Result<()> {\n+    run(&format!(\"rustup install {}\", TOOLCHAIN), \".\")?;\n+    run(&format!(\"rustup component add rustfmt-preview --toolchain {}\", TOOLCHAIN), \".\")?;\n+    if mode == Verify {\n+        run(&format!(\"rustup run {} -- cargo fmt -- --check\", TOOLCHAIN), \".\")?;\n+    } else {\n+        run(&format!(\"rustup run {} -- cargo fmt\", TOOLCHAIN), \".\")?;\n+    }\n+    Ok(())\n+}"}, {"sha": "91675bbf0c80bec23e3f24a434b258318eab016b", "filename": "crates/tools/src/main.rs", "status": "modified", "additions": 3, "deletions": 27, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/857c1650efdb51650458f9ec1119adaa49b34371/crates%2Ftools%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/857c1650efdb51650458f9ec1119adaa49b34371/crates%2Ftools%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Fmain.rs?ref=857c1650efdb51650458f9ec1119adaa49b34371", "patch": "@@ -1,5 +1,4 @@\n extern crate clap;\n-#[macro_use]\n extern crate failure;\n extern crate tools;\n extern crate walkdir;\n@@ -10,11 +9,11 @@ use std::{\n     collections::HashMap,\n     fs,\n     path::{Path, PathBuf},\n-    process::Command,\n };\n use tools::{\n-    collect_tests, Result, Test, generate, Mode, Overwrite, Verify, project_root,\n+    collect_tests, Result, Test, generate, Mode, Overwrite, Verify, run, run_rustfmt,\n };\n+use failure::bail;\n \n const GRAMMAR_DIR: &str = \"./crates/ra_syntax/src/grammar\";\n const INLINE_TESTS_DIR: &str = \"./crates/ra_syntax/tests/data/parser/inline\";\n@@ -42,7 +41,7 @@ fn main() -> Result<()> {\n         (\"install-code\", _) => install_code_extension()?,\n         (\"gen-tests\", _) => gen_tests(mode)?,\n         (\"gen-syntax\", _) => generate(Overwrite)?,\n-        (\"format\", _) => run_rustfmt()?,\n+        (\"format\", _) => run_rustfmt(Overwrite)?,\n         _ => unreachable!(),\n     }\n     Ok(())\n@@ -145,26 +144,3 @@ fn install_code_extension() -> Result<()> {\n     }\n     Ok(())\n }\n-\n-fn run(cmdline: &'static str, dir: &str) -> Result<()> {\n-    eprintln!(\"\\nwill run: {}\", cmdline);\n-    let project_dir = project_root().join(dir);\n-    let mut args = cmdline.split_whitespace();\n-    let exec = args.next().unwrap();\n-    let status = Command::new(exec)\n-        .args(args)\n-        .current_dir(project_dir)\n-        .status()?;\n-    if !status.success() {\n-        bail!(\"`{}` exited with {}\", cmdline, status);\n-    }\n-    Ok(())\n-}\n-\n-fn run_rustfmt() -> Result<()> {\n-    // Use beta toolchain for 2018 edition.\n-    run(\"rustup install beta\", \".\")?;\n-    run(\"rustup component add rustfmt-preview --toolchain beta\", \".\")?;\n-    run(\"rustup run beta -- cargo fmt\", \".\")?;\n-    Ok(())\n-}"}, {"sha": "8c53a82304510cb498874ce9e972d5779a0cf9c2", "filename": "crates/tools/tests/cli.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/857c1650efdb51650458f9ec1119adaa49b34371/crates%2Ftools%2Ftests%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/857c1650efdb51650458f9ec1119adaa49b34371/crates%2Ftools%2Ftests%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Ftests%2Fcli.rs?ref=857c1650efdb51650458f9ec1119adaa49b34371", "patch": "@@ -1,7 +1,7 @@\n extern crate tools;\n \n use tools::{\n-    generate, Verify\n+    generate, Verify, run_rustfmt,\n };\n \n #[test]\n@@ -10,3 +10,10 @@ fn verify_template_generation() {\n         panic!(\"{}. Please update it by running `cargo gen-syntax`\", error);\n     }\n }\n+\n+#[test]\n+fn check_code_formatting() {\n+    if let Err(error) = run_rustfmt(Verify) {\n+        panic!(\"{}. Please format the code by running `cargo format`\", error);\n+    }\n+}"}]}