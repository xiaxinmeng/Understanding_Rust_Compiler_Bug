{"sha": "ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd", "node_id": "C_kwDOAAsO6NoAKGNlMWE3ZTQxZjk2YmUyNzEwM2I2ZTNiYTA5ZGNlZmJmNWJkMzIwYmQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-03T03:07:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-03T03:07:31Z"}, "message": "Auto merge of #103455 - BlackHoleFox:apple-sim-abi-consistency, r=davidtwco\n\nFixed consistency of Apple simulator target's ABI\n\nCurrently there's a few Apple device simulator targets that are inconsistent since some set `target_abi = \"sim\"` (the correct thing to do) while a bunch of others don't set anything (`\"\"`). Due to this its very hard to reliability check if some Rust code is running inside a simulator. This changes all of them to do the same thing and set `sim` as their `target_abi`.\n\nThe new way to identity a simulator during compilation is as simple as `cfg(all(target_vendor=\"apple\", target_abi = \"sim\"))` or even `cfg(target_abi = \"sim\")` being less pedantic about it.\n\nThe issues with the current form (and inspiration for this) are also summarized in `@thomcc's` [Tweet](https://twitter.com/at_tcsc/status/1576685244702691328).", "tree": {"sha": "ce78c1e0be62bb6366694e235c6fff845e8103cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce78c1e0be62bb6366694e235c6fff845e8103cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd", "html_url": "https://github.com/rust-lang/rust/commit/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96787c45acb623c7e39e041f44a5d98d814217e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/96787c45acb623c7e39e041f44a5d98d814217e2", "html_url": "https://github.com/rust-lang/rust/commit/96787c45acb623c7e39e041f44a5d98d814217e2"}, {"sha": "ffccfa1eedd049c87b1ad828297ae4c4121b2e40", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffccfa1eedd049c87b1ad828297ae4c4121b2e40", "html_url": "https://github.com/rust-lang/rust/commit/ffccfa1eedd049c87b1ad828297ae4c4121b2e40"}], "stats": {"total": 47, "additions": 38, "deletions": 9}, "files": [{"sha": "d062b36742d60550d1c639ee2ee54de642053800", "filename": "compiler/rustc_target/src/spec/apple/tests.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple%2Ftests.rs?ref=ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd", "patch": "@@ -0,0 +1,20 @@\n+use crate::spec::{\n+    aarch64_apple_ios_sim, aarch64_apple_watchos_sim, x86_64_apple_ios, x86_64_apple_tvos,\n+    x86_64_apple_watchos_sim,\n+};\n+\n+#[test]\n+fn simulator_targets_set_abi() {\n+    let all_sim_targets = [\n+        x86_64_apple_ios::target(),\n+        x86_64_apple_tvos::target(),\n+        x86_64_apple_watchos_sim::target(),\n+        aarch64_apple_ios_sim::target(),\n+        // Note: There is currently no ARM64 tvOS simulator target\n+        aarch64_apple_watchos_sim::target(),\n+    ];\n+\n+    for target in all_sim_targets {\n+        assert_eq!(target.abi, \"sim\")\n+    }\n+}"}, {"sha": "148031b1569768eca63e872d67ae5f0ff00906da", "filename": "compiler/rustc_target/src/spec/apple_sdk_base.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_sdk_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_sdk_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_sdk_base.rs?ref=ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd", "patch": "@@ -1,6 +1,10 @@\n use crate::spec::{cvs, TargetOptions};\n use std::borrow::Cow;\n \n+#[cfg(test)]\n+#[path = \"apple/tests.rs\"]\n+mod tests;\n+\n use Arch::*;\n #[allow(non_camel_case_types)]\n #[derive(Copy, Clone)]\n@@ -11,7 +15,9 @@ pub enum Arch {\n     Arm64,\n     Arm64_32,\n     I386,\n+    #[allow(dead_code)] // Some targets don't use this enum...\n     X86_64,\n+    X86_64_sim,\n     X86_64_macabi,\n     Arm64_macabi,\n     Arm64_sim,\n@@ -25,15 +31,17 @@ fn target_arch_name(arch: Arch) -> &'static str {\n         Arm64 | Arm64_macabi | Arm64_sim => \"arm64\",\n         Arm64_32 => \"arm64_32\",\n         I386 => \"i386\",\n-        X86_64 | X86_64_macabi => \"x86_64\",\n+        X86_64 | X86_64_sim | X86_64_macabi => \"x86_64\",\n     }\n }\n \n fn target_abi(arch: Arch) -> &'static str {\n     match arch {\n         Armv7 | Armv7k | Armv7s | Arm64 | Arm64_32 | I386 | X86_64 => \"\",\n         X86_64_macabi | Arm64_macabi => \"macabi\",\n-        Arm64_sim => \"sim\",\n+        // x86_64-apple-ios is a simulator target, even though it isn't\n+        // declared that way in the target like the other ones...\n+        Arm64_sim | X86_64_sim => \"sim\",\n     }\n }\n \n@@ -45,7 +53,7 @@ fn target_cpu(arch: Arch) -> &'static str {\n         Arm64 => \"apple-a7\",\n         Arm64_32 => \"apple-s4\",\n         I386 => \"yonah\",\n-        X86_64 => \"core2\",\n+        X86_64 | X86_64_sim => \"core2\",\n         X86_64_macabi => \"core2\",\n         Arm64_macabi => \"apple-a12\",\n         Arm64_sim => \"apple-a12\",\n@@ -54,19 +62,20 @@ fn target_cpu(arch: Arch) -> &'static str {\n \n fn link_env_remove(arch: Arch) -> Cow<'static, [Cow<'static, str>]> {\n     match arch {\n-        Armv7 | Armv7k | Armv7s | Arm64 | Arm64_32 | I386 | X86_64 | Arm64_sim => {\n+        Armv7 | Armv7k | Armv7s | Arm64 | Arm64_32 | I386 | X86_64 | X86_64_sim | Arm64_sim => {\n             cvs![\"MACOSX_DEPLOYMENT_TARGET\"]\n         }\n         X86_64_macabi | Arm64_macabi => cvs![\"IPHONEOS_DEPLOYMENT_TARGET\"],\n     }\n }\n \n pub fn opts(os: &'static str, arch: Arch) -> TargetOptions {\n+    let abi = target_abi(arch);\n     TargetOptions {\n-        abi: target_abi(arch).into(),\n+        abi: abi.into(),\n         cpu: target_cpu(arch).into(),\n         link_env_remove: link_env_remove(arch),\n         has_thread_local: false,\n-        ..super::apple_base::opts(os, target_arch_name(arch), target_abi(arch))\n+        ..super::apple_base::opts(os, target_arch_name(arch), abi)\n     }\n }"}, {"sha": "db23f01c233265c17bf20e27627eefc3402f181b", "filename": "compiler/rustc_target/src/spec/x86_64_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_apple_ios.rs?ref=ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd", "patch": "@@ -2,7 +2,7 @@ use super::apple_sdk_base::{opts, Arch};\n use crate::spec::{StackProbeType, Target, TargetOptions};\n \n pub fn target() -> Target {\n-    let base = opts(\"ios\", Arch::X86_64);\n+    let base = opts(\"ios\", Arch::X86_64_sim);\n     let llvm_target = super::apple_base::ios_sim_llvm_target(\"x86_64\");\n \n     Target {"}, {"sha": "c1fd8e1c8b90ac0b212d03e8d81a8ad308932b76", "filename": "compiler/rustc_target/src/spec/x86_64_apple_tvos.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_apple_tvos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_apple_tvos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_apple_tvos.rs?ref=ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd", "patch": "@@ -2,7 +2,7 @@ use super::apple_sdk_base::{opts, Arch};\n use crate::spec::{StackProbeType, Target, TargetOptions};\n \n pub fn target() -> Target {\n-    let base = opts(\"tvos\", Arch::X86_64);\n+    let base = opts(\"tvos\", Arch::X86_64_sim);\n     Target {\n         llvm_target: \"x86_64-apple-tvos\".into(),\n         pointer_width: 64,"}, {"sha": "550566b2aa754dc48c295e9ac1e673e3e16f4cf9", "filename": "compiler/rustc_target/src/spec/x86_64_apple_watchos_sim.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_apple_watchos_sim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_apple_watchos_sim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_apple_watchos_sim.rs?ref=ce1a7e41f96be27103b6e3ba09dcefbf5bd320bd", "patch": "@@ -2,7 +2,7 @@ use super::apple_sdk_base::{opts, Arch};\n use crate::spec::{StackProbeType, Target, TargetOptions};\n \n pub fn target() -> Target {\n-    let base = opts(\"watchos\", Arch::X86_64);\n+    let base = opts(\"watchos\", Arch::X86_64_sim);\n \n     let arch = \"x86_64\";\n     let llvm_target = super::apple_base::watchos_sim_llvm_target(arch);"}]}