{"sha": "fd76d236e42378d0feaf5df6dbdbd2db89ba0f1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNzZkMjM2ZTQyMzc4ZDBmZWFmNWRmNmRiZGJkMmRiODliYTBmMWY=", "commit": {"author": {"name": "Camelid", "email": "37223377+camelid@users.noreply.github.com", "date": "2020-06-01T17:52:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-01T17:52:07Z"}, "message": "Use `bug!` instead of `panic!`\n\nCo-authored-by: varkor <github@varkor.com>", "tree": {"sha": "14755a3a0c130adc7febaf8db4f09d22d980ffd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14755a3a0c130adc7febaf8db4f09d22d980ffd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd76d236e42378d0feaf5df6dbdbd2db89ba0f1f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe1UBHCRBK7hj4Ov3rIwAAdHIIACIZ45YK7jPlSp3kEQSLBnjw\nvcAtitTmID2vhoKRkUv11ZX8I33PMA8VgwjYYvhwaAvOsAQMqN1Z1J9DwQoZV4mC\nMgJBXYbFCCo1pZelkDij2D7pw7dMCVNnYgKz85sVprhZpQfkSxGO2+hNvF92KT4U\nRAnl19cY8rMV2/m4LNliB2eaT5ohAe45N7eLDBI/IALLgQrtDpbpgZfsg/sGhZcB\nhkkD+5blSwGbazAv0w+WteCsOkMJ2vxYGE+cu9pKQL7qgwqI6EKlHJPeApN2U2rF\nPxyLc9Poo5IEmrw61R2ZSY1izm/k/wuOoycAabxItteV4lkph8dJCwimG3OT7Gw=\n=LyjL\n-----END PGP SIGNATURE-----\n", "payload": "tree 14755a3a0c130adc7febaf8db4f09d22d980ffd7\nparent 718d28cf85305411bdad8e3b2a4f932bd9f628c7\nauthor Camelid <37223377+camelid@users.noreply.github.com> 1591033927 -0700\ncommitter GitHub <noreply@github.com> 1591033927 -0700\n\nUse `bug!` instead of `panic!`\n\nCo-authored-by: varkor <github@varkor.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd76d236e42378d0feaf5df6dbdbd2db89ba0f1f", "html_url": "https://github.com/rust-lang/rust/commit/fd76d236e42378d0feaf5df6dbdbd2db89ba0f1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd76d236e42378d0feaf5df6dbdbd2db89ba0f1f/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "718d28cf85305411bdad8e3b2a4f932bd9f628c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/718d28cf85305411bdad8e3b2a4f932bd9f628c7", "html_url": "https://github.com/rust-lang/rust/commit/718d28cf85305411bdad8e3b2a4f932bd9f628c7"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "7173ed3d24ec84d763b1985d4137a0880207788f", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fd76d236e42378d0feaf5df6dbdbd2db89ba0f1f/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd76d236e42378d0feaf5df6dbdbd2db89ba0f1f/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=fd76d236e42378d0feaf5df6dbdbd2db89ba0f1f", "patch": "@@ -489,7 +489,9 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             \"lifetime\" => ParamKindOrd::Lifetime,\n             \"type\" => ParamKindOrd::Type,\n             \"constant\" => ParamKindOrd::Const,\n-            _ => panic!(),\n+            // It's more concise to match on the string representation, though it means\n+            // the match is non-exhaustive.\n+            _ => bug!(\"invalid generic parameter kind\"),\n         };\n         let arg_ord = match arg {\n             GenericArg::Lifetime(_) => ParamKindOrd::Lifetime,"}]}