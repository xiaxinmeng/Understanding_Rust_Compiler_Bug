{"sha": "71c7dace89959e185948e91b902ffb803aa8d223", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxYzdkYWNlODk5NTllMTg1OTQ4ZTkxYjkwMmZmYjgwM2FhOGQyMjM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-10-17T12:26:21Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-18T15:43:48Z"}, "message": "improve error messages and documentation", "tree": {"sha": "de752708e947da161e4ae5de9981baeb9eb3a62d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de752708e947da161e4ae5de9981baeb9eb3a62d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71c7dace89959e185948e91b902ffb803aa8d223", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71c7dace89959e185948e91b902ffb803aa8d223", "html_url": "https://github.com/rust-lang/rust/commit/71c7dace89959e185948e91b902ffb803aa8d223", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71c7dace89959e185948e91b902ffb803aa8d223/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b004a50f7395202bb6822f4ec8a098fdf9c7456a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b004a50f7395202bb6822f4ec8a098fdf9c7456a", "html_url": "https://github.com/rust-lang/rust/commit/b004a50f7395202bb6822f4ec8a098fdf9c7456a"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "2e32ce31ecae0eb0a9c76805eff79e1c73d2c7ea", "filename": "src/doc/rustdoc/src/command-line-arguments.md", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/71c7dace89959e185948e91b902ffb803aa8d223/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md", "raw_url": "https://github.com/rust-lang/rust/raw/71c7dace89959e185948e91b902ffb803aa8d223/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md?ref=71c7dace89959e185948e91b902ffb803aa8d223", "patch": "@@ -359,26 +359,34 @@ This flag allows `rustdoc` to treat your rust code as the given edition. It will\n the given edition as well. As with `rustc`, the default edition that `rustdoc` will use is `2015`\n (the first edition).\n \n-## `theme`: add more themes to generated documentation\n+## `--theme`: add a theme to the documentation output\n \n-By default, `rustdoc` only provides the \"dark\" and \"light\" themes. If you want to add new ones,\n-you'll need to use this flag as follows:\n+Using this flag looks like this:\n \n ```bash\n-$ rustdoc src/lib.rs --theme /path/to/your/theme/file.css\n+$ rustdoc src/lib.rs --theme /path/to/your/custom-theme.css\n ```\n \n-Note that the theme's name will be the file name without its extension. So if you pass\n-`/path/to/your/theme/file.css` as theme, then the theme's name will be `file`.\n-\n-### `check-theme`: check if your themes implement all the required rules\n+`rustdoc`'s default output includes two themes: `light` (the default) and\n+`dark`. This flag allows you to add custom themes to the output. Giving a CSS\n+file to this flag adds it to your documentation as an additional theme choice.\n+The theme's name is determined by its filename; a theme file named\n+`custom-theme.css` will add a theme named `custom-theme` to the documentation.\n \n-This flag allows you to check if your themes implement the necessary CSS rules. To put it more\n-simply, when adding a new theme, it needs to implement all the CSS rules present in the \"light\"\n-CSS theme.\n+## `--check-theme`: verify custom themes against the default theme\n \n-You can use this flag like this:\n+Using this flag looks like this:\n \n ```bash\n-$ rustdoc --check-theme /path/to/your/theme/file.css\n+$ rustdoc --check-theme /path/to/your/custom-theme.css\n ```\n+\n+While `rustdoc`'s HTML output is more-or-less consistent between versions, there\n+is no guarantee that a theme file will have the same effect. The `--theme` flag\n+will still allow you to add the theme to your documentation, but to ensure that\n+your theme works as expected, you can use this flag to verify that it implements\n+the same CSS rules as the official `light` theme.\n+\n+`--check-theme` is a separate mode in `rustdoc`. When `rustdoc` sees the\n+`--check-theme` flag, it discards all other flags and only performs the CSS rule\n+comparison operation."}, {"sha": "cdb1a1f6997c9f80024e9e34c5fc6bd69b7aa294", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/71c7dace89959e185948e91b902ffb803aa8d223/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71c7dace89959e185948e91b902ffb803aa8d223/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=71c7dace89959e185948e91b902ffb803aa8d223", "patch": "@@ -365,13 +365,13 @@ impl Options {\n                                                 .iter()\n                                                 .map(|s| (PathBuf::from(&s), s.to_owned())) {\n                 if !theme_file.is_file() {\n-                    diag.struct_err(&format!(\"invalid file: \\\"{}\\\"\", theme_s))\n-                        .help(\"option --theme arguments must all be files\")\n+                    diag.struct_err(&format!(\"invalid argument: \\\"{}\\\"\", theme_s))\n+                        .help(\"arguments to --theme must be files\")\n                         .emit();\n                     return Err(1);\n                 }\n                 if theme_file.extension() != Some(OsStr::new(\"css\")) {\n-                    diag.struct_err(&format!(\"invalid file: \\\"{}\\\": expected CSS file\", theme_s))\n+                    diag.struct_err(&format!(\"invalid argument: \\\"{}\\\"\", theme_s))\n                         .emit();\n                     return Err(1);\n                 }"}]}