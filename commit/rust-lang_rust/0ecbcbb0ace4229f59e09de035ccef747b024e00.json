{"sha": "0ecbcbb0ace4229f59e09de035ccef747b024e00", "node_id": "C_kwDOAAsO6NoAKDBlY2JjYmIwYWNlNDIyOWY1OWUwOWRlMDM1Y2NlZjc0N2IwMjRlMDA", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-07-25T09:46:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-25T09:46:47Z"}, "message": "Rollup merge of #95040 - frank-king:fix/94981, r=Mark-Simulacrum\n\nprotect `std::io::Take::limit` from overflow in `read`\n\nResolves #94981", "tree": {"sha": "e7fae9c81da63a062a316547669bdac59a968e4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7fae9c81da63a062a316547669bdac59a968e4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ecbcbb0ace4229f59e09de035ccef747b024e00", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi3maICRBK7hj4Ov3rIwAANfcIAK+GTJYSoVeyY1Gzk0EXIN4n\nidv0ZRhfPv3wm7VWgEOEMMvA2XFeJaoLoEZZvYpfG6ZRC7SiygMjpVAADuD7yuG8\neZqORF0KlRrgl4HT4fgoIM2ywAhur0Jwqb9DW89FbbYLiDWGaB2bHYb1PUftrDGm\nGm+W4Yw71B/YPS54a1UBCcxQerJ/4uz0l9KvWmzcJ3Z1gKiiYcWXfqkIji8c1qgO\nmPMKIpl42R1I+LS84B/8IFDQKBNYAgSYbeRYTiwPq7NXznfyhgBSIhj7cCbJVbUv\nRDOn/7uOd6+S6t5E44Rt9ryGHQ6TRzGb6Vu4aQM0AcOGh+jenQ1krpI+3D0s5E0=\n=5iOP\n-----END PGP SIGNATURE-----\n", "payload": "tree e7fae9c81da63a062a316547669bdac59a968e4e\nparent 7f93d4aa0dc4ac071c617e0e07d2758e3bb388f9\nparent 64ac04567ba397f8600952e3875b9a197f7b2910\nauthor Yuki Okushi <jtitor@2k36.org> 1658742407 +0900\ncommitter GitHub <noreply@github.com> 1658742407 +0900\n\nRollup merge of #95040 - frank-king:fix/94981, r=Mark-Simulacrum\n\nprotect `std::io::Take::limit` from overflow in `read`\n\nResolves #94981\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ecbcbb0ace4229f59e09de035ccef747b024e00", "html_url": "https://github.com/rust-lang/rust/commit/0ecbcbb0ace4229f59e09de035ccef747b024e00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ecbcbb0ace4229f59e09de035ccef747b024e00/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f93d4aa0dc4ac071c617e0e07d2758e3bb388f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f93d4aa0dc4ac071c617e0e07d2758e3bb388f9", "html_url": "https://github.com/rust-lang/rust/commit/7f93d4aa0dc4ac071c617e0e07d2758e3bb388f9"}, {"sha": "64ac04567ba397f8600952e3875b9a197f7b2910", "url": "https://api.github.com/repos/rust-lang/rust/commits/64ac04567ba397f8600952e3875b9a197f7b2910", "html_url": "https://github.com/rust-lang/rust/commit/64ac04567ba397f8600952e3875b9a197f7b2910"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "18f7f6a35e98f8ba31d3ef807d04b92dc1480dec", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0ecbcbb0ace4229f59e09de035ccef747b024e00/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ecbcbb0ace4229f59e09de035ccef747b024e00/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=0ecbcbb0ace4229f59e09de035ccef747b024e00", "patch": "@@ -2577,6 +2577,7 @@ impl<T: Read> Read for Take<T> {\n \n         let max = cmp::min(buf.len() as u64, self.limit) as usize;\n         let n = self.inner.read(&mut buf[..max])?;\n+        assert!(n as u64 <= self.limit, \"number of read bytes exceeds limit\");\n         self.limit -= n as u64;\n         Ok(n)\n     }"}, {"sha": "f357f33ec52c54b771d2e89ec45df7633a3c353c", "filename": "library/std/src/io/tests.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0ecbcbb0ace4229f59e09de035ccef747b024e00/library%2Fstd%2Fsrc%2Fio%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ecbcbb0ace4229f59e09de035ccef747b024e00/library%2Fstd%2Fsrc%2Fio%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ftests.rs?ref=0ecbcbb0ace4229f59e09de035ccef747b024e00", "patch": "@@ -583,6 +583,25 @@ fn test_write_all_vectored() {\n     }\n }\n \n+// Issue 94981\n+#[test]\n+#[should_panic = \"number of read bytes exceeds limit\"]\n+fn test_take_wrong_length() {\n+    struct LieAboutSize(bool);\n+\n+    impl Read for LieAboutSize {\n+        fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {\n+            // Lie about the read size at first time of read.\n+            if core::mem::take(&mut self.0) { Ok(buf.len() + 1) } else { Ok(buf.len()) }\n+        }\n+    }\n+\n+    let mut buffer = vec![0; 4];\n+    let mut reader = LieAboutSize(true).take(4);\n+    // Primed the `Limit` by lying about the read size.\n+    let _ = reader.read(&mut buffer[..]);\n+}\n+\n #[bench]\n fn bench_take_read(b: &mut test::Bencher) {\n     b.iter(|| {"}]}