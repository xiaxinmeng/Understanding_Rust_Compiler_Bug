{"sha": "146c462e1af804c56542f2e33e6769d388d04f04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NmM0NjJlMWFmODA0YzU2NTQyZjJlMzNlNjc2OWQzODhkMDRmMDQ=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-02-28T18:12:26Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-02-28T18:12:26Z"}, "message": "rustbuild: use a BTreeMap for the ruleset for determinism.", "tree": {"sha": "6c8b8e2fb7d1a0c41dabb9ae9d5a1821552a891b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c8b8e2fb7d1a0c41dabb9ae9d5a1821552a891b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/146c462e1af804c56542f2e33e6769d388d04f04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/146c462e1af804c56542f2e33e6769d388d04f04", "html_url": "https://github.com/rust-lang/rust/commit/146c462e1af804c56542f2e33e6769d388d04f04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/146c462e1af804c56542f2e33e6769d388d04f04/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1cb9ba221e5cb0070ac82c6a234af11e4240680", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1cb9ba221e5cb0070ac82c6a234af11e4240680", "html_url": "https://github.com/rust-lang/rust/commit/e1cb9ba221e5cb0070ac82c6a234af11e4240680"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "01431c50ed764f5f4592b8f1484e5984f0897cd4", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/146c462e1af804c56542f2e33e6769d388d04f04/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/146c462e1af804c56542f2e33e6769d388d04f04/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=146c462e1af804c56542f2e33e6769d388d04f04", "patch": "@@ -26,7 +26,7 @@\n //! along with the actual implementation elsewhere. You can find more comments\n //! about how to define rules themselves below.\n \n-use std::collections::{HashMap, HashSet};\n+use std::collections::{BTreeMap, HashSet};\n use std::mem;\n \n use check::{self, TestKind};\n@@ -866,7 +866,7 @@ impl<'a, 'b> Drop for RuleBuilder<'a, 'b> {\n pub struct Rules<'a> {\n     build: &'a Build,\n     sbuild: Step<'a>,\n-    rules: HashMap<&'a str, Rule<'a>>,\n+    rules: BTreeMap<&'a str, Rule<'a>>,\n }\n \n impl<'a> Rules<'a> {\n@@ -879,7 +879,7 @@ impl<'a> Rules<'a> {\n                 host: &build.config.build,\n                 name: \"\",\n             },\n-            rules: HashMap::new(),\n+            rules: BTreeMap::new(),\n         }\n     }\n "}]}