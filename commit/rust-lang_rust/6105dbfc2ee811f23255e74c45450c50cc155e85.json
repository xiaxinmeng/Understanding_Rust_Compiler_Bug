{"sha": "6105dbfc2ee811f23255e74c45450c50cc155e85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMDVkYmZjMmVlODExZjIzMjU1ZTc0YzQ1NDUwYzUwY2MxNTVlODU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-18T17:11:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-18T17:11:38Z"}, "message": "Merge #7327\n\n7327: Remove `item_tree::Expr` r=jonas-schievink a=jonas-schievink\n\nIt's empty and unused\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "a0fe70dc1f05974765703aa2f2b6060233979216", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0fe70dc1f05974765703aa2f2b6060233979216"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6105dbfc2ee811f23255e74c45450c50cc155e85", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgBcFKCRBK7hj4Ov3rIwAAdHIIAGAtQS8vtxyryU7QVmKL+nlK\nQfN3fLIuwwUFo7hOFzP62jNvElSznbmDercjIka4PjqWr5U+kqC9Ov5UZ1H7Ddez\nDm56AR8ynq6Pf3/4J3CWQxP+THAc0vR0s9/rSKpopKfd8ip7/S8OLjLr5hnYRL4X\ndjCCLK54d1C2CxC/Qrdpuq0ttZCDgbAZ/5v8YRml50CiSYwCp5HPyTeabejHchuF\njm5HPqDk0s2cNW7itnSw2jB3UlDD3rm4+rMBmk7igSqdEd/CauBUSMb0409JPOie\nFpi1kUaOZ6SDqPyRp7orOyP3CenBhgolv+SGlQphkA0BOK0waApNGiD+puyxbcI=\n=3+gM\n-----END PGP SIGNATURE-----\n", "payload": "tree a0fe70dc1f05974765703aa2f2b6060233979216\nparent c72d3a7c0989e63a9b063fed445cbbaf3e40a29f\nparent 6f4f285f37c16e80b5fe7fbf8ec3bfe059e4b94a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1610989898 +0000\ncommitter GitHub <noreply@github.com> 1610989898 +0000\n\nMerge #7327\n\n7327: Remove `item_tree::Expr` r=jonas-schievink a=jonas-schievink\n\nIt's empty and unused\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6105dbfc2ee811f23255e74c45450c50cc155e85", "html_url": "https://github.com/rust-lang/rust/commit/6105dbfc2ee811f23255e74c45450c50cc155e85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6105dbfc2ee811f23255e74c45450c50cc155e85/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c72d3a7c0989e63a9b063fed445cbbaf3e40a29f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c72d3a7c0989e63a9b063fed445cbbaf3e40a29f", "html_url": "https://github.com/rust-lang/rust/commit/c72d3a7c0989e63a9b063fed445cbbaf3e40a29f"}, {"sha": "6f4f285f37c16e80b5fe7fbf8ec3bfe059e4b94a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f4f285f37c16e80b5fe7fbf8ec3bfe059e4b94a", "html_url": "https://github.com/rust-lang/rust/commit/6f4f285f37c16e80b5fe7fbf8ec3bfe059e4b94a"}], "stats": {"total": 10, "additions": 1, "deletions": 9}, "files": [{"sha": "ff62928dfb3aae0bf170687db69092bdb7ce4def", "filename": "crates/hir_def/src/item_tree.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6105dbfc2ee811f23255e74c45450c50cc155e85/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6105dbfc2ee811f23255e74c45450c50cc155e85/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs?ref=6105dbfc2ee811f23255e74c45450c50cc155e85", "patch": "@@ -145,7 +145,6 @@ impl ItemTree {\n                 macro_calls,\n                 macro_rules,\n                 macro_defs,\n-                exprs,\n                 vis,\n                 generics,\n             } = &mut **data;\n@@ -167,7 +166,6 @@ impl ItemTree {\n             macro_calls.shrink_to_fit();\n             macro_rules.shrink_to_fit();\n             macro_defs.shrink_to_fit();\n-            exprs.shrink_to_fit();\n \n             vis.arena.shrink_to_fit();\n             generics.arena.shrink_to_fit();\n@@ -296,7 +294,6 @@ struct ItemTreeData {\n     macro_calls: Arena<MacroCall>,\n     macro_rules: Arena<MacroRules>,\n     macro_defs: Arena<MacroDef>,\n-    exprs: Arena<Expr>,\n \n     vis: ItemVisibilities,\n     generics: GenericParamsStorage,\n@@ -461,7 +458,7 @@ macro_rules! impl_index {\n     };\n }\n \n-impl_index!(fields: Field, variants: Variant, exprs: Expr);\n+impl_index!(fields: Field, variants: Variant);\n \n impl Index<RawVisibilityId> for ItemTree {\n     type Output = RawVisibility;\n@@ -664,11 +661,6 @@ pub struct MacroDef {\n     pub ast_id: FileAstId<ast::MacroDef>,\n }\n \n-// NB: There's no `FileAstId` for `Expr`. The only case where this would be useful is for array\n-// lengths, but we don't do much with them yet.\n-#[derive(Debug, Clone, Eq, PartialEq)]\n-pub struct Expr;\n-\n macro_rules! impl_froms {\n     ($e:ident { $($v:ident ($t:ty)),* $(,)? }) => {\n         $("}]}