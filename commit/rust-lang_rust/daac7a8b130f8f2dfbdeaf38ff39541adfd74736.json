{"sha": "daac7a8b130f8f2dfbdeaf38ff39541adfd74736", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYWM3YThiMTMwZjhmMmRmYmRlYWYzOGZmMzk1NDFhZGZkNzQ3MzY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-23T02:02:16Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-23T02:02:48Z"}, "message": "rustc: Add a type_has_dynamic_size predicate", "tree": {"sha": "5551ed6d7444478c5ddc5e4dba85848ba4ab6e89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5551ed6d7444478c5ddc5e4dba85848ba4ab6e89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daac7a8b130f8f2dfbdeaf38ff39541adfd74736", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daac7a8b130f8f2dfbdeaf38ff39541adfd74736", "html_url": "https://github.com/rust-lang/rust/commit/daac7a8b130f8f2dfbdeaf38ff39541adfd74736", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daac7a8b130f8f2dfbdeaf38ff39541adfd74736/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f3a121043f72a1662f0b0ad24ca2fd09f4b4f27", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f3a121043f72a1662f0b0ad24ca2fd09f4b4f27", "html_url": "https://github.com/rust-lang/rust/commit/3f3a121043f72a1662f0b0ad24ca2fd09f4b4f27"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "4dbd236f0b63c27ae0e0fca29050bdfd773cc2a0", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/daac7a8b130f8f2dfbdeaf38ff39541adfd74736/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daac7a8b130f8f2dfbdeaf38ff39541adfd74736/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=daac7a8b130f8f2dfbdeaf38ff39541adfd74736", "patch": "@@ -379,6 +379,27 @@ fn type_is_scalar(@t ty) -> bool {\n     fail;\n }\n \n+fn type_has_dynamic_size(@t ty) -> bool {\n+    alt (ty.struct) {\n+        case (ty_tup(?ts)) {\n+            auto i = 0u;\n+            while (i < _vec.len[@t](ts)) {\n+                if (type_has_dynamic_size(ts.(i))) { ret true; }\n+                i += 1u;\n+            }\n+        }\n+        case (ty_rec(?fields)) {\n+            auto i = 0u;\n+            while (i < _vec.len[field](fields)) {\n+                if (type_has_dynamic_size(fields.(i).ty)) { ret true; }\n+                i += 1u;\n+            }\n+        }\n+        case (ty_param(_)) { ret true; }\n+        case (_) { /* fall through */ }\n+    }\n+    ret false;\n+}\n \n fn type_is_integral(@t ty) -> bool {\n     alt (ty.struct) {"}]}