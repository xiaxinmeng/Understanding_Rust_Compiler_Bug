{"sha": "7b37776ade019d8aa6cf86c5bcb2d9f39c0121a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMzc3NzZhZGUwMTlkOGFhNmNmODZjNWJjYjJkOWYzOWMwMTIxYTU=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-07-26T12:35:56Z"}, "committer": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-07-26T12:37:23Z"}, "message": "Modify the rule for reordering impl items\n\n1. If two items have the same kind, then reorder them based on its ident.\n2. Handle existential type.", "tree": {"sha": "63237e3b5fcc876f94adbae2694c09ba19dac601", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63237e3b5fcc876f94adbae2694c09ba19dac601"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b37776ade019d8aa6cf86c5bcb2d9f39c0121a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b37776ade019d8aa6cf86c5bcb2d9f39c0121a5", "html_url": "https://github.com/rust-lang/rust/commit/7b37776ade019d8aa6cf86c5bcb2d9f39c0121a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b37776ade019d8aa6cf86c5bcb2d9f39c0121a5/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87c4bd5a94cb40d49d7cac6e626f24421b5f43ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/87c4bd5a94cb40d49d7cac6e626f24421b5f43ce", "html_url": "https://github.com/rust-lang/rust/commit/87c4bd5a94cb40d49d7cac6e626f24421b5f43ce"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "8c32d393df4b2f263034b780597085c472989c41", "filename": "src/items.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7b37776ade019d8aa6cf86c5bcb2d9f39c0121a5/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b37776ade019d8aa6cf86c5bcb2d9f39c0121a5/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=7b37776ade019d8aa6cf86c5bcb2d9f39c0121a5", "patch": "@@ -591,23 +591,31 @@ impl<'a> FmtVisitor<'a> {\n                 buffer.push((self.buffer.clone(), item.clone()));\n                 self.buffer.clear();\n             }\n-            // type -> const -> macro -> method\n+            // type -> existential -> const -> macro -> method\n             use ast::ImplItemKind::*;\n             fn need_empty_line(a: &ast::ImplItemKind, b: &ast::ImplItemKind) -> bool {\n                 match (a, b) {\n-                    (Type(..), Type(..)) | (Const(..), Const(..)) => false,\n+                    (Type(..), Type(..))\n+                    | (Const(..), Const(..))\n+                    | (Existential(..), Existential(..)) => false,\n                     _ => true,\n                 }\n             }\n \n             buffer.sort_by(|(_, a), (_, b)| match (&a.node, &b.node) {\n+                (Type(..), Type(..))\n+                | (Const(..), Const(..))\n+                | (Macro(..), Macro(..))\n+                | (Existential(..), Existential(..)) => a.ident.as_str().cmp(&b.ident.as_str()),\n+                (Method(..), Method(..)) => a.span.lo().cmp(&b.span.lo()),\n                 (Type(..), _) => Ordering::Less,\n                 (_, Type(..)) => Ordering::Greater,\n+                (Existential(..), _) => Ordering::Less,\n+                (_, Existential(..)) => Ordering::Greater,\n                 (Const(..), _) => Ordering::Less,\n                 (_, Const(..)) => Ordering::Greater,\n                 (Macro(..), _) => Ordering::Less,\n                 (_, Macro(..)) => Ordering::Greater,\n-                _ => a.span.lo().cmp(&b.span.lo()),\n             });\n             let mut prev_kind = None;\n             for (buf, item) in buffer {"}]}