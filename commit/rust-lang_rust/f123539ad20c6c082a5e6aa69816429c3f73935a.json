{"sha": "f123539ad20c6c082a5e6aa69816429c3f73935a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMjM1MzlhZDIwYzZjMDgyYTVlNmFhNjk4MTY0MjljM2Y3MzkzNWE=", "commit": {"author": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-06-12T10:15:53Z"}, "committer": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-06-12T10:15:53Z"}, "message": "More assert refactoring", "tree": {"sha": "6097995c85db7b77f6043a46c30b3353f17360e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6097995c85db7b77f6043a46c30b3353f17360e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f123539ad20c6c082a5e6aa69816429c3f73935a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f123539ad20c6c082a5e6aa69816429c3f73935a", "html_url": "https://github.com/rust-lang/rust/commit/f123539ad20c6c082a5e6aa69816429c3f73935a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f123539ad20c6c082a5e6aa69816429c3f73935a/comments", "author": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c92f2d19089c28c59aec27ff7e1b620eeef6f8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c92f2d19089c28c59aec27ff7e1b620eeef6f8e", "html_url": "https://github.com/rust-lang/rust/commit/4c92f2d19089c28c59aec27ff7e1b620eeef6f8e"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "2e76f8592dcab658f956894f06d9198baa60d89c", "filename": "crates/ra_ide/src/completion/complete_keyword.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f123539ad20c6c082a5e6aa69816429c3f73935a/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f123539ad20c6c082a5e6aa69816429c3f73935a/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=f123539ad20c6c082a5e6aa69816429c3f73935a", "patch": "@@ -118,7 +118,7 @@ mod tests {\n         },\n         CompletionItemKind,\n     };\n-    use insta::assert_debug_snapshot;\n+    use insta::{assert_snapshot, assert_debug_snapshot};\n     use rustc_hash::FxHashSet;\n \n     fn do_keyword_completion(code: &str) -> Vec<CompletionItem> {\n@@ -128,22 +128,23 @@ mod tests {\n     fn assert_completion_keyword(code: &str, keywords: &[(&str, &str)]) {\n         let (position, completion_items) =\n             do_completion_with_position(code, CompletionKind::Keyword);\n-        let mut set = FxHashSet::<(String, String)>::default();\n+        let mut expected_keywords = FxHashSet::<(String, String)>::default();\n         for (key, value) in keywords {\n-            set.insert(((*key).to_string(), (*value).to_string()));\n+            expected_keywords.insert(((*key).to_string(), (*value).to_string()));\n         }\n-\n+        let mut returned_keywords = FxHashSet::<(String, String)>::default();\n+        \n         for item in completion_items {\n             assert!(item.text_edit().len() == 1);\n             assert!(item.kind() == Some(CompletionItemKind::Keyword));\n             let atom = item.text_edit().iter().next().unwrap().clone();\n             assert!(atom.delete.start() == position.offset);\n             assert!(atom.delete.end() == position.offset);\n             let pair = (item.label().to_string(), atom.insert);\n-            assert!(set.contains(&pair));\n-            set.remove(&pair);\n+            returned_keywords.insert(pair);\n         }\n-        assert!(set.is_empty());\n+        let assert_failed_message = format!(\"Expected keywords: {:#?}\\nReceived keywords: {:#?}\", expected_keywords, returned_keywords);\n+        debug_assert!(returned_keywords == expected_keywords, assert_failed_message);\n     }\n \n     #[test]"}]}