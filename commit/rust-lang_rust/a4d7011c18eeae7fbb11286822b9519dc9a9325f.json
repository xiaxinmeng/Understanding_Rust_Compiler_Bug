{"sha": "a4d7011c18eeae7fbb11286822b9519dc9a9325f", "node_id": "C_kwDOAAsO6NoAKGE0ZDcwMTFjMThlZWFlN2ZiYjExMjg2ODIyYjk1MTlkYzlhOTMyNWY", "commit": {"author": {"name": "Jonathan", "email": "30177086+MonliH@users.noreply.github.com", "date": "2020-10-11T16:28:45Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-10-30T16:07:59Z"}, "message": "Document RUSTFMT environment variable (#4464)\n\n* Document RUSTFMT env var\n\n* Move documentation up\n\n* Apply suggestions from code review\n\nCo-authored-by: Caleb Cartwright <calebcartwright@users.noreply.github.com>\n\n* Fix accedental removal\n\nCo-authored-by: Caleb Cartwright <calebcartwright@users.noreply.github.com>\n# Conflicts:\n#\tREADME.md", "tree": {"sha": "7e554389db979b931024f217e8b92a3ede0720eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e554389db979b931024f217e8b92a3ede0720eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4d7011c18eeae7fbb11286822b9519dc9a9325f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4d7011c18eeae7fbb11286822b9519dc9a9325f", "html_url": "https://github.com/rust-lang/rust/commit/a4d7011c18eeae7fbb11286822b9519dc9a9325f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4d7011c18eeae7fbb11286822b9519dc9a9325f/comments", "author": {"login": "MonliH", "id": 30177086, "node_id": "MDQ6VXNlcjMwMTc3MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/30177086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MonliH", "html_url": "https://github.com/MonliH", "followers_url": "https://api.github.com/users/MonliH/followers", "following_url": "https://api.github.com/users/MonliH/following{/other_user}", "gists_url": "https://api.github.com/users/MonliH/gists{/gist_id}", "starred_url": "https://api.github.com/users/MonliH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MonliH/subscriptions", "organizations_url": "https://api.github.com/users/MonliH/orgs", "repos_url": "https://api.github.com/users/MonliH/repos", "events_url": "https://api.github.com/users/MonliH/events{/privacy}", "received_events_url": "https://api.github.com/users/MonliH/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a24ed3c322b9b9a6b7dc9f3f18e4142d3adabf46", "url": "https://api.github.com/repos/rust-lang/rust/commits/a24ed3c322b9b9a6b7dc9f3f18e4142d3adabf46", "html_url": "https://github.com/rust-lang/rust/commit/a24ed3c322b9b9a6b7dc9f3f18e4142d3adabf46"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "b3d21e6fb87c79ffa3957b20a4cc405f2787f051", "filename": "README.md", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a4d7011c18eeae7fbb11286822b9519dc9a9325f/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/a4d7011c18eeae7fbb11286822b9519dc9a9325f/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=a4d7011c18eeae7fbb11286822b9519dc9a9325f", "patch": "@@ -102,6 +102,25 @@ read data from stdin. Alternatively, you can use `cargo fmt` to format all\n binary and library targets of your crate.\n \n You can run `rustfmt --help` for information about available arguments.\n+The easiest way to run rustfmt against a project is with `cargo fmt`. `cargo fmt` works on both\n+single-crate projects and [cargo workspaces](https://doc.rust-lang.org/book/ch14-03-cargo-workspaces.html).\n+Please see `cargo fmt --help` for usage information.\n+\n+You can specify the path to your own `rustfmt` binary for cargo to use by setting the`RUSTFMT` \n+environment variable. This was added in v1.4.22, so you must have this version or newer to leverage this feature (`cargo fmt --version`)\n+\n+### Running `rustfmt` directly\n+\n+To format individual files or arbitrary codes from stdin, the `rustfmt` binary should be used. Some\n+examples follow:\n+\n+- `rustfmt lib.rs main.rs` will format \"lib.rs\" and \"main.rs\" in place\n+- `rustfmt` will read a code from stdin and write formatting to stdout\n+  - `echo \"fn     main() {}\" | rustfmt` would emit \"fn main() {}\".\n+\n+For more information, including arguments and emit options, see `rustfmt --help`.\n+\n+### Verifying code is formatted\n \n When running with `--check`, Rustfmt will exit with `0` if Rustfmt would not\n make any formatting changes to the input, and `1` if Rustfmt would make changes."}]}