{"sha": "c80727738287fbeb97ca08a58d479f94bb170035", "node_id": "C_kwDOAAsO6NoAKGM4MDcyNzczODI4N2ZiZWI5N2NhMDhhNThkNDc5Zjk0YmIxNzAwMzU", "commit": {"author": {"name": "fee1-dead", "email": "ent3rm4n@gmail.com", "date": "2022-09-26T01:27:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-26T01:27:37Z"}, "message": "Rollup merge of #102244 - compiler-errors:issue-102219, r=cjgillot\n\nOnly generate closure def id for async fns with body\n\nFixes #102219", "tree": {"sha": "35c4e365421164af3a20f61a9fe03f98d2b20011", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35c4e365421164af3a20f61a9fe03f98d2b20011"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c80727738287fbeb97ca08a58d479f94bb170035", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjMQAJCRBK7hj4Ov3rIwAAnFEIABZyFDBKwR3MU7rmP1B02YXT\nZ8Ug4TTSNvbUt0u1InFNS3zZDtE6JOR21XcsauP74dcQ0Gx6FqqRpBsejlt8uyEV\nAhCVIrjBb33Ii/YoTQOn/tEtQvRkHuHzDG+BAOMDaDu0R+UZhzC8wqQtYNJZ9BrF\nSTn3hUpgZMa/DFcUqac4LwDmy+64zlnkB2O8nG/YeS6cvWI267i+uEEWQnL0wGPO\ndGE+VCpxVCfSPyAe1Jav6c41H1iSTT2xOJQfYu0mxnpCh2+2fSH2GOpNcTPJ91ZI\ndEWqlyuVz8xj+VC7DiD3+81dqYTCgxUbzWJoGIBD4A10u5SCVn/+2ye7UUKedXQ=\n=Dyr7\n-----END PGP SIGNATURE-----\n", "payload": "tree 35c4e365421164af3a20f61a9fe03f98d2b20011\nparent 1a93028bcc4a9052f0956e924fed0c9ac61efba1\nparent e99f6fee441dfa71d58b37a10366bf8c5c9d52ac\nauthor fee1-dead <ent3rm4n@gmail.com> 1664155657 +0800\ncommitter GitHub <noreply@github.com> 1664155657 +0800\n\nRollup merge of #102244 - compiler-errors:issue-102219, r=cjgillot\n\nOnly generate closure def id for async fns with body\n\nFixes #102219\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c80727738287fbeb97ca08a58d479f94bb170035", "html_url": "https://github.com/rust-lang/rust/commit/c80727738287fbeb97ca08a58d479f94bb170035", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c80727738287fbeb97ca08a58d479f94bb170035/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a93028bcc4a9052f0956e924fed0c9ac61efba1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a93028bcc4a9052f0956e924fed0c9ac61efba1", "html_url": "https://github.com/rust-lang/rust/commit/1a93028bcc4a9052f0956e924fed0c9ac61efba1"}, {"sha": "e99f6fee441dfa71d58b37a10366bf8c5c9d52ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/e99f6fee441dfa71d58b37a10366bf8c5c9d52ac", "html_url": "https://github.com/rust-lang/rust/commit/e99f6fee441dfa71d58b37a10366bf8c5c9d52ac"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "d9b18d68e537f3b2250da035f28030fade1f8cf9", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c80727738287fbeb97ca08a58d479f94bb170035/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c80727738287fbeb97ca08a58d479f94bb170035/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=c80727738287fbeb97ca08a58d479f94bb170035", "patch": "@@ -1055,9 +1055,9 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         asyncness: Async,\n         body: Option<&Block>,\n     ) -> hir::BodyId {\n-        let closure_id = match asyncness {\n-            Async::Yes { closure_id, .. } => closure_id,\n-            Async::No => return self.lower_fn_body_block(span, decl, body),\n+        let (closure_id, body) = match (asyncness, body) {\n+            (Async::Yes { closure_id, .. }, Some(body)) => (closure_id, body),\n+            _ => return self.lower_fn_body_block(span, decl, body),\n         };\n \n         self.lower_body(|this| {\n@@ -1199,16 +1199,15 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                 parameters.push(new_parameter);\n             }\n \n-            let body_span = body.map_or(span, |b| b.span);\n             let async_expr = this.make_async_expr(\n                 CaptureBy::Value,\n                 closure_id,\n                 None,\n-                body_span,\n+                body.span,\n                 hir::AsyncGeneratorKind::Fn,\n                 |this| {\n                     // Create a block from the user's function body:\n-                    let user_body = this.lower_block_expr_opt(body_span, body);\n+                    let user_body = this.lower_block_expr(body);\n \n                     // Transform into `drop-temps { <user-body> }`, an expression:\n                     let desugared_span =\n@@ -1240,7 +1239,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n \n             (\n                 this.arena.alloc_from_iter(parameters),\n-                this.expr(body_span, async_expr, AttrVec::new()),\n+                this.expr(body.span, async_expr, AttrVec::new()),\n             )\n         })\n     }"}, {"sha": "7e83f2a72210765b5559e03805e29881ff685c41", "filename": "compiler/rustc_resolve/src/def_collector.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c80727738287fbeb97ca08a58d479f94bb170035/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c80727738287fbeb97ca08a58d479f94bb170035/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs?ref=c80727738287fbeb97ca08a58d479f94bb170035", "patch": "@@ -1,6 +1,5 @@\n use crate::{ImplTraitContext, Resolver};\n use rustc_ast::visit::{self, FnKind};\n-use rustc_ast::walk_list;\n use rustc_ast::*;\n use rustc_expand::expand::AstFragment;\n use rustc_hir::def_id::LocalDefId;\n@@ -148,8 +147,13 @@ impl<'a, 'b> visit::Visitor<'a> for DefCollector<'a, 'b> {\n                 self.with_parent(return_impl_trait_id, |this| {\n                     this.visit_fn_ret_ty(&sig.decl.output)\n                 });\n-                let closure_def = self.create_def(closure_id, DefPathData::ClosureExpr, span);\n-                self.with_parent(closure_def, |this| walk_list!(this, visit_block, body));\n+                // If this async fn has no body (i.e. it's an async fn signature in a trait)\n+                // then the closure_def will never be used, and we should avoid generating a\n+                // def-id for it.\n+                if let Some(body) = body {\n+                    let closure_def = self.create_def(closure_id, DefPathData::ClosureExpr, span);\n+                    self.with_parent(closure_def, |this| this.visit_block(body));\n+                }\n                 return;\n             }\n         }"}, {"sha": "9a35f6515cb1a5042d347347dca5a8cc8508fff3", "filename": "src/test/ui/async-await/in-trait/issue-102219.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c80727738287fbeb97ca08a58d479f94bb170035/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fissue-102219.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c80727738287fbeb97ca08a58d479f94bb170035/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fissue-102219.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fissue-102219.rs?ref=c80727738287fbeb97ca08a58d479f94bb170035", "patch": "@@ -0,0 +1,10 @@\n+// compile-flags:--crate-type=lib\n+// edition:2021\n+// check-pass\n+\n+#![feature(async_fn_in_trait)]\n+#![allow(incomplete_features)]\n+\n+trait T {\n+    async fn foo();\n+}"}]}