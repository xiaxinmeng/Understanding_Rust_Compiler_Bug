{"sha": "e53fbf8bf21a250ae1dcf39629edb9eaaea066eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1M2ZiZjhiZjIxYTI1MGFlMWRjZjM5NjI5ZWRiOWVhYWVhMDY2ZWI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-25T10:42:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-25T10:42:30Z"}, "message": "Rollup merge of #58725 - jamwt:fix-27949, r=Centril\n\nTest that binop subtyping in rustc_typeck fixes #27949", "tree": {"sha": "498050d9f7bf0a06cf74dd5d3cab174e3a97ce2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/498050d9f7bf0a06cf74dd5d3cab174e3a97ce2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e53fbf8bf21a250ae1dcf39629edb9eaaea066eb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcc8aWCRBK7hj4Ov3rIwAAdHIIAE9Uis7ogRDSPid5SVXjScxe\ndbC7g2ymMeg9AnWJAFSQTwOKZgqnvsFJFtZnFLg2YUaoiYS7JE5OWAm3CbtBQqA7\noTdZKtjBHs1sFZjRNj+Jv2PB8gDVgLEH67rHXSEQsviIqvJWS22skc9kAe3C90yD\nbeMbrwpzyR27nnv8Kb/aVJbl1OmJI9hPtgVvp4M0D2P6Waj4IxA3ELLllxUNKkrH\nzEtasnXQ6uxmiwEUq3iZ+D/pKuBAqV9EtDdi1ihyhdr1YmTv6JeAZfDH70R3nCKP\nfKyY3TqGjATYcee+DoWlIBYUaILqyLC0GQ1yJRwvuXKSgdrP1ywpMSeuhdfVtR8=\n=FrGM\n-----END PGP SIGNATURE-----\n", "payload": "tree 498050d9f7bf0a06cf74dd5d3cab174e3a97ce2b\nparent 3f6d65ac7a876e4f1e2cd42531863542e0b60600\nparent 70290947355188be67db4f721be636b0695a4c80\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1551091350 +0100\ncommitter GitHub <noreply@github.com> 1551091350 +0100\n\nRollup merge of #58725 - jamwt:fix-27949, r=Centril\n\nTest that binop subtyping in rustc_typeck fixes #27949\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e53fbf8bf21a250ae1dcf39629edb9eaaea066eb", "html_url": "https://github.com/rust-lang/rust/commit/e53fbf8bf21a250ae1dcf39629edb9eaaea066eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e53fbf8bf21a250ae1dcf39629edb9eaaea066eb/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f6d65ac7a876e4f1e2cd42531863542e0b60600", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f6d65ac7a876e4f1e2cd42531863542e0b60600", "html_url": "https://github.com/rust-lang/rust/commit/3f6d65ac7a876e4f1e2cd42531863542e0b60600"}, {"sha": "70290947355188be67db4f721be636b0695a4c80", "url": "https://api.github.com/repos/rust-lang/rust/commits/70290947355188be67db4f721be636b0695a4c80", "html_url": "https://github.com/rust-lang/rust/commit/70290947355188be67db4f721be636b0695a4c80"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "e905da72aad70ba91d73d189eeb633ad1ae88ece", "filename": "src/test/run-pass/issues/issue-27949.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/e53fbf8bf21a250ae1dcf39629edb9eaaea066eb/src%2Ftest%2Frun-pass%2Fissues%2Fissue-27949.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e53fbf8bf21a250ae1dcf39629edb9eaaea066eb/src%2Ftest%2Frun-pass%2Fissues%2Fissue-27949.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-27949.rs?ref=e53fbf8bf21a250ae1dcf39629edb9eaaea066eb", "patch": "@@ -0,0 +1,41 @@\n+// run-pass\n+//\n+// At one time, the `==` operator (and other binary operators) did not\n+// support subtyping during type checking, and would therefore require\n+// LHS and RHS to be exactly identical--i.e. to have the same lifetimes.\n+//\n+// This was fixed in 1a7fb7dc78439a704f024609ce3dc0beb1386552.\n+\n+#[derive(Copy, Clone)]\n+struct Input<'a> {\n+    foo: &'a u32\n+}\n+\n+impl <'a> std::cmp::PartialEq<Input<'a>> for Input<'a> {\n+    fn eq(&self, other: &Input<'a>) -> bool {\n+        self.foo == other.foo\n+    }\n+\n+    fn ne(&self, other: &Input<'a>) -> bool {\n+        self.foo != other.foo\n+    }\n+}\n+\n+\n+fn check_equal<'a, 'b>(x: Input<'a>, y: Input<'b>) -> bool {\n+    // Type checking error due to 'a != 'b prior to 1a7fb7dc78\n+    x == y\n+}\n+\n+fn main() {\n+    let i = 1u32;\n+    let j = 1u32;\n+    let k = 2u32;\n+\n+    let input_i = Input { foo: &i };\n+    let input_j = Input { foo: &j };\n+    let input_k = Input { foo: &k };\n+    assert!(check_equal(input_i, input_i));\n+    assert!(check_equal(input_i, input_j));\n+    assert!(!check_equal(input_i, input_k));\n+}"}]}