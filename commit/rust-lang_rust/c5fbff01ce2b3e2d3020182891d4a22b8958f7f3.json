{"sha": "c5fbff01ce2b3e2d3020182891d4a22b8958f7f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZmJmZjAxY2UyYjNlMmQzMDIwMTgyODkxZDRhMjJiODk1OGY3ZjM=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-07T23:54:00Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-08T17:28:57Z"}, "message": "Add a really optimistic fast path in receive. Gives about a 7% performance improvement in msgsend-ring-pipes", "tree": {"sha": "53dff681944384e68ba71854289ae124f8389d58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53dff681944384e68ba71854289ae124f8389d58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5fbff01ce2b3e2d3020182891d4a22b8958f7f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5fbff01ce2b3e2d3020182891d4a22b8958f7f3", "html_url": "https://github.com/rust-lang/rust/commit/c5fbff01ce2b3e2d3020182891d4a22b8958f7f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5fbff01ce2b3e2d3020182891d4a22b8958f7f3/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc6ba6b09174fdd1feaee1ce011572ba6eb1986a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc6ba6b09174fdd1feaee1ce011572ba6eb1986a", "html_url": "https://github.com/rust-lang/rust/commit/bc6ba6b09174fdd1feaee1ce011572ba6eb1986a"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "c72a777c0a81958d51f1cc4198d35b5a52b48c48", "filename": "src/libcore/pipes.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c5fbff01ce2b3e2d3020182891d4a22b8958f7f3/src%2Flibcore%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5fbff01ce2b3e2d3020182891d4a22b8958f7f3/src%2Flibcore%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpipes.rs?ref=c5fbff01ce2b3e2d3020182891d4a22b8958f7f3", "patch": "@@ -395,6 +395,20 @@ fn try_recv<T: send, Tbuffer: send>(-p: recv_packet_buffered<T, Tbuffer>)\n {\n     let p_ = p.unwrap();\n     let p = unsafe { &*p_ };\n+\n+    // optimistic path\n+    match p.header.state {\n+      full => {\n+        let mut payload = none;\n+        payload <-> p.payload;\n+        p.header.state = empty;\n+        return some(option::unwrap(payload))\n+      },\n+      terminated => return none,\n+      _ => {}\n+    }\n+\n+    // regular path\n     let this = rustrt::rust_get_task();\n     rustrt::task_clear_event_reject(this);\n     rustrt::rust_task_ref(this);"}]}