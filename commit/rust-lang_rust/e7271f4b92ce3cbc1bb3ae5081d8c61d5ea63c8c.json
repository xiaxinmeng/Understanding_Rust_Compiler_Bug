{"sha": "e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "node_id": "C_kwDOAAsO6NoAKGU3MjcxZjRiOTJjZTNjYmMxYmIzYWU1MDgxZDhjNjFkNWVhNjNjOGM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-11T23:47:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-11T23:47:18Z"}, "message": "Auto merge of #110194 - GuillaumeGomez:update-browser-ui-test, r=notriddle\n\nUpdate browser-ui-test version\n\nThis update add the support for expressions, so we can now do this:\n\n```\nassert: 1 > 2 && [\"a\"] != [\"b\", \"c\"]\n```\n\nIt also improved commands naming and updated puppeteer version.\n\nr? `@notriddle`", "tree": {"sha": "42b656c5a6cc0eb92b0324c36370090ba1559610", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42b656c5a6cc0eb92b0324c36370090ba1559610"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "html_url": "https://github.com/rust-lang/rust/commit/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9df3a39fb30575d808e70800f9fad5362aac57a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9df3a39fb30575d808e70800f9fad5362aac57a2", "html_url": "https://github.com/rust-lang/rust/commit/9df3a39fb30575d808e70800f9fad5362aac57a2"}, {"sha": "010fa00b80474648268af58dd2edecbf454a9e55", "url": "https://api.github.com/repos/rust-lang/rust/commits/010fa00b80474648268af58dd2edecbf454a9e55", "html_url": "https://github.com/rust-lang/rust/commit/010fa00b80474648268af58dd2edecbf454a9e55"}], "stats": {"total": 618, "additions": 309, "deletions": 309}, "files": [{"sha": "7092c7c46f861b506452f451f9d90597278243cb", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/browser-ui-test.version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1 +1 @@\n-0.14.6\n\\ No newline at end of file\n+0.15.0\n\\ No newline at end of file"}, {"sha": "61d7c89d434ffa45251a12f0338857e1d81f2df5", "filename": "tests/rustdoc-gui/anchor-navigable.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fanchor-navigable.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fanchor-navigable.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fanchor-navigable.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -4,7 +4,7 @@\n // anchor and the `impl Foo`. If there were a gap, this would cause an annoying\n // problem: you hover `impl Foo` to see the anchor, then when you move your\n // mouse to the left, the anchor disappears before you reach it.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n // We check that \".item-info\" is bigger than its content.\n move-cursor-to: \".impl\"\n assert-property: (\".impl > a.anchor\", {\"offsetWidth\": \"8\"})"}, {"sha": "0904aa90e1bcc4307eb8a03a3b0bfd2344470fb7", "filename": "tests/rustdoc-gui/anchors.goml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fanchors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fanchors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fanchors.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -4,12 +4,12 @@ define-function: (\n     \"check-colors\",\n     (theme, main_color, title_color, main_heading_color, main_heading_type_color, src_link_color, sidebar_link_color),\n     block {\n-        goto: \"file://\" + |DOC_PATH| + \"/staged_api/struct.Foo.html\"\n+        go-to: \"file://\" + |DOC_PATH| + \"/staged_api/struct.Foo.html\"\n         // This is needed to ensure that the text color is computed.\n         show-text: true\n \n         // Setting the theme.\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         // We reload the page so the local storage settings are being used.\n         reload:\n \n@@ -48,9 +48,9 @@ define-function: (\n              {\"color\": |src_link_color|, \"text-decoration\": \"none solid \" + |src_link_color|},\n         )\n \n-        goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.HeavilyDocumentedStruct.html\"\n+        go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.HeavilyDocumentedStruct.html\"\n         // Since we changed page, we need to set the theme again.\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         // We reload the page so the local storage settings are being used.\n         reload:\n "}, {"sha": "e372f7119743494b8ebdc81b71eb69f48509064f", "filename": "tests/rustdoc-gui/basic-code.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fbasic-code.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fbasic-code.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fbasic-code.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,6 +1,6 @@\n // Small test to ensure the \"src-line-numbers\" element is only present once on\n // the page.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n click: \".srclink\"\n wait-for: \".src-line-numbers\"\n assert-count: (\".src-line-numbers\", 1)"}, {"sha": "8c2cbc4d90eb807c8acceacbc0ea92e506c73d47", "filename": "tests/rustdoc-gui/check-code-blocks-margin.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcheck-code-blocks-margin.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcheck-code-blocks-margin.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fcheck-code-blocks-margin.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test ensures that the docblock elements have the appropriate left margin.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n // The top docblock elements shouldn't have left margin...\n assert-css: (\"#main-content .item-decl\", {\"margin-left\": \"0px\"})\n // ... but all the others should!"}, {"sha": "2f62636211b82fc368e55168c5438c92d2c245df", "filename": "tests/rustdoc-gui/check-stab-in-docblock.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcheck-stab-in-docblock.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcheck-stab-in-docblock.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fcheck-stab-in-docblock.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,9 +1,9 @@\n // This test checks that using `.stab` attributes in `.docblock` elements doesn't\n // create scrollable paragraphs.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n // Needs the text to be display to check for scrollable content.\n show-text: true\n-size: (786, 600)\n+set-window-size: (786, 600)\n // Confirms that there 3 paragraphs.\n assert-count: (\".top-doc .docblock p\", 3)\n // Checking that there is no scrollable content."}, {"sha": "c9a4ea94cfe8d240e9e94df9ec2919789daddbb8", "filename": "tests/rustdoc-gui/check_info_sign_position.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcheck_info_sign_position.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcheck_info_sign_position.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fcheck_info_sign_position.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,7 +1,7 @@\n // This test checks the position of the information on the code blocks (like\n // `compile_fail` or `ignore`).\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n-goto: \"./fn.check_list_code_block.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"./fn.check_list_code_block.html\"\n // If the codeblock is the first element of the docblock, the information tooltip must have\n // have some top margin to avoid going over the toggle (the \"[+]\").\n assert-css: (\".docblock > .example-wrap.compile_fail .tooltip\", { \"margin-top\": \"16px\" })"}, {"sha": "a23136f4b762988bcd4f45b9c7bab1af00d0c4af", "filename": "tests/rustdoc-gui/code-blocks-overflow.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcode-blocks-overflow.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcode-blocks-overflow.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fcode-blocks-overflow.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,6 +1,6 @@\n // This test ensures that codeblocks content don't overflow.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/sub_mod/struct.Foo.html\"\n-size: (1080, 600)\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/sub_mod/struct.Foo.html\"\n+set-window-size: (1080, 600)\n // There should be two codeblocks: a rust one and a non-rust one.\n assert-count: (\".docblock > .example-wrap\", 2)\n assert: \".docblock > .example-wrap > .language-txt\""}, {"sha": "833fa05db42b410b0b5a64dc3a041917ef0f5aaa", "filename": "tests/rustdoc-gui/code-color.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcode-color.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcode-color.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fcode-color.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -2,7 +2,7 @@\n // check that the rule isn't applied on other \"<code>\" elements.\n //\n // While we're at it, we also check it for the other themes.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n // If the text isn't displayed, the browser doesn't compute color style correctly...\n show-text: true\n \n@@ -11,7 +11,7 @@ define-function: (\n     (theme, doc_code_color, doc_inline_code_color),\n     block {\n         // Set the theme.\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         // We reload the page so the local storage settings are being used.\n         reload:\n         assert-css: (\".docblock pre > code\", {\"color\": |doc_code_color|}, ALL)"}, {"sha": "28c3712f307a49f0897d2977eeb3d893da61f5bc", "filename": "tests/rustdoc-gui/code-sidebar-toggle.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcode-sidebar-toggle.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcode-sidebar-toggle.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fcode-sidebar-toggle.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,7 +1,7 @@\n // This test checks that the source code pages sidebar toggle is working as expected.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n click: \".srclink\"\n wait-for: \"#src-sidebar-toggle\"\n click: \"#src-sidebar-toggle\"\n-fail: true\n+expect-failure: true\n assert-css: (\"#source-sidebar\", { \"left\": \"-300px\" })"}, {"sha": "3405d3295e69dd23dab39a9e70005f3da670fa35", "filename": "tests/rustdoc-gui/code-tags.goml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcode-tags.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcode-tags.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fcode-tags.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -3,22 +3,22 @@\n // We need to disable this check because `implementors/test_docs/trait.AnotherOne.js`\n // doesn't exist.\n fail-on-request-error: false\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n-size: (1080, 600)\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n+set-window-size: (1080, 600)\n // There should be four doc codeblocks.\n // Check that their content is inside <pre><code>\n assert-count: (\".example-wrap pre > code\", 4)\n // Check that function signature is inside <pre><code>\n assert: \"pre.rust.item-decl > code\"\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n assert: \"pre.rust.item-decl > code\"\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/enum.AnEnum.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/enum.AnEnum.html\"\n assert: \"pre.rust.item-decl > code\"\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/trait.AnotherOne.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/trait.AnotherOne.html\"\n assert: \"pre.rust.item-decl > code\"\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/type.SomeType.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/type.SomeType.html\"\n assert: \"pre.rust.item-decl > code\""}, {"sha": "03575cc6aaa93556df7c3327984c2239a710d0ce", "filename": "tests/rustdoc-gui/codeblock-sub.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcodeblock-sub.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcodeblock-sub.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fcodeblock-sub.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // Test that code blocks nested within <sub> do not have a line height of 0.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/codeblock_sub/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/codeblock_sub/index.html\"\n \n store-property: (codeblock_sub_1, \"#codeblock-sub-1\", \"offsetHeight\")\n assert-property-false: (\"#codeblock-sub-3\", { \"offsetHeight\": |codeblock_sub_1| })"}, {"sha": "2ed0579d3141b2033f399e6a3d8c599ce2f6c17d", "filename": "tests/rustdoc-gui/codeblock-tooltip.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcodeblock-tooltip.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcodeblock-tooltip.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fcodeblock-tooltip.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,13 +1,13 @@\n // Checking the colors of the codeblocks tooltips.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n show-text: true\n \n define-function: (\n     \"check-colors\",\n     (theme, background, color, border),\n     block {\n         // Setting the theme.\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n \n         // compile_fail block"}, {"sha": "f318b05cedaa444270417e4be4188ba745a16ac5", "filename": "tests/rustdoc-gui/cursor.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcursor.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fcursor.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fcursor.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test ensures that several clickable items actually have the pointer cursor.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/struct.Foo.html\"\n \n // the `[+]/[-]` button\n assert-css: (\"#toggle-all-docs\", {\"cursor\": \"pointer\"})\n@@ -16,9 +16,9 @@ wait-for: \"#search-tabs\"\n assert-css: (\"#search-tabs > button\", {\"cursor\": \"pointer\"})\n \n // mobile sidebar toggle button\n-size: (500, 700)\n+set-window-size: (500, 700)\n assert-css: (\".sidebar-menu-toggle\", {\"cursor\": \"pointer\"})\n \n // the sidebar toggle button on the source code pages\n-goto: \"file://\" + |DOC_PATH| + \"/src/lib2/lib.rs.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/src/lib2/lib.rs.html\"\n assert-css: (\"#src-sidebar-toggle > button\", {\"cursor\": \"pointer\"})"}, {"sha": "3466f3693f90885b276cfbf3960ebeca58c5da87", "filename": "tests/rustdoc-gui/default-settings.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fdefault-settings.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fdefault-settings.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fdefault-settings.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -2,7 +2,7 @@\n //\n // The \"settings\" crate uses \"ayu\" as default setting, which is what we will\n // check.\n-goto: \"file://\" + |DOC_PATH| + \"/settings/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/settings/index.html\"\n // Wait a bit to be sure the default theme is applied.\n // If the theme isn't applied, the command will time out.\n wait-for-css: (\"body\", {\"background-color\": \"rgb(15, 20, 25)\"})"}, {"sha": "6fc6834768eb6d0c89750cd5293e63f7ade2cdac", "filename": "tests/rustdoc-gui/docblock-big-code-mobile.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fdocblock-big-code-mobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fdocblock-big-code-mobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fdocblock-big-code-mobile.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,13 +1,13 @@\n // If we have a long `<code>`, we need to ensure that it'll be fully displayed on mobile, meaning\n // that it'll be on two lines.\n emulate: \"iPhone 8\" // it has the following size: (375, 667)\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/long_code_block/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/long_code_block/index.html\"\n // We now check that the block is on two lines:\n show-text: true // We need to enable text draw to be able to have the \"real\" size\n // Little explanations for this test: if the text wasn't displayed on two lines, it would take\n // around 20px (which is the font size).\n assert-property: (\".docblock p > code\", {\"offsetHeight\": \"44\"})\n \n // Same check, but where the long code block is also a link\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/long_code_block_link/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/long_code_block_link/index.html\"\n assert-property: (\".docblock p > a > code\", {\"offsetHeight\": \"44\"})"}, {"sha": "4c36394a30ce44b2abdc99f4d75f47f92eaad0f6", "filename": "tests/rustdoc-gui/docblock-code-block-line-number.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fdocblock-code-block-line-number.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fdocblock-code-block-line-number.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fdocblock-code-block-line-number.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // Checks that the setting \"line numbers\" is working as expected.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n \n // Otherwise, we can't check text color\n show-text: true\n@@ -13,7 +13,7 @@ define-function: (\n     (theme, color),\n     block {\n         // We now set the setting to show the line numbers on code examples.\n-        local-storage: {\n+        set-local-storage: {\n             \"rustdoc-theme\": |theme|,\n             \"rustdoc-use-system-theme\": \"false\",\n             \"rustdoc-line-numbers\": \"true\""}, {"sha": "58ff17619f63f3eca19e1d4df224d98d70917901", "filename": "tests/rustdoc-gui/docblock-details.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fdocblock-details.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fdocblock-details.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fdocblock-details.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,7 +1,7 @@\n // This ensures that the `<details>`/`<summary>` elements are displayed as expected.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/details/struct.Details.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/details/struct.Details.html\"\n show-text: true\n-local-storage: {\"rustdoc-theme\": \"dark\", \"rustdoc-use-system-theme\": \"false\"}\n+set-local-storage: {\"rustdoc-theme\": \"dark\", \"rustdoc-use-system-theme\": \"false\"}\n reload:\n \n // We first check that the headers in the `.top-doc` doc block still have their"}, {"sha": "1ca919d1eabc30f7b2f4ee00208b690dc8483bf5", "filename": "tests/rustdoc-gui/docblock-table-overflow.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fdocblock-table-overflow.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fdocblock-table-overflow.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fdocblock-table-overflow.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,7 +1,7 @@\n // This test ensures that the type declaration content overflow is handled inside the <pre> directly.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/long_table/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/long_table/struct.Foo.html\"\n // We set a fixed size so there is no chance of \"random\" resize.\n-size: (1100, 800)\n+set-window-size: (1100, 800)\n // Logically, the \".docblock\" and the \"<p>\" should have the same scroll width.\n compare-elements-property: (\".top-doc .docblock\", \".top-doc .docblock > p\", [\"scrollWidth\"])\n assert-property: (\".top-doc .docblock\", {\"scrollWidth\": \"816\"})"}, {"sha": "011451ef4f390fe0ec4ed135c799e43b9b960bba", "filename": "tests/rustdoc-gui/docblock-table.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fdocblock-table.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fdocblock-table.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fdocblock-table.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test checks the appearance of the tables in the doc comments.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/doc_block_table/struct.DocBlockTable.html#method.func\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/doc_block_table/struct.DocBlockTable.html#method.func\"\n \n compare-elements-css: (\".impl-items .docblock table th\", \".top-doc .docblock table th\", [\"border\"])\n compare-elements-css: (\".impl-items .docblock table td\", \".top-doc .docblock table td\", [\"border\"])\n@@ -8,7 +8,7 @@ define-function: (\n     \"check-colors\",\n     (theme, border_color, zebra_stripe_color),\n     block {\n-        local-storage: {\"rustdoc-use-system-theme\": \"false\", \"rustdoc-theme\": |theme|}\n+        set-local-storage: {\"rustdoc-use-system-theme\": \"false\", \"rustdoc-theme\": |theme|}\n         reload:\n         assert-css: (\".top-doc .docblock table tbody tr:nth-child(1)\", {\n             \"background-color\": \"rgba(0, 0, 0, 0)\","}, {"sha": "7d01c88f31ba51a59cab47dd815977674a229836", "filename": "tests/rustdoc-gui/duplicate-macro-reexport.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fduplicate-macro-reexport.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fduplicate-macro-reexport.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fduplicate-macro-reexport.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test ensures that there is no macro duplicates in the sidebar.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/macro.a.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/macro.a.html\"\n // Waiting for the elements in the sidebar to be rendered.\n wait-for: \".sidebar-elems .macro\"\n // Check there is only one macro named \"a\" listed in the sidebar."}, {"sha": "a1f60986ac3568b9f7cf8754bfb336fdb7e7cb33", "filename": "tests/rustdoc-gui/enum-variants.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fenum-variants.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fenum-variants.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fenum-variants.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // Verifies that there is non-zero margin on variants and their docblocks.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/enum.WhoLetTheDogOut.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/enum.WhoLetTheDogOut.html\"\n \n assert-css: (\".variants > .variant\", {\"margin\": \"0px 0px 12px\"})\n assert-css: (\".variants > .docblock\", {\"margin\": \"0px 0px 32px 24px\"})"}, {"sha": "3ea20fd118e6a3ce711dacd6cf40aa7b339c3eea", "filename": "tests/rustdoc-gui/escape-key.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fescape-key.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fescape-key.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fescape-key.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,6 +1,6 @@\n // This test ensures that the \"Escape\" shortcut is handled correctly based on the\n // current content displayed.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n // First, we check that the search results are hidden when the Escape key is pressed.\n write: (\".search-input\", \"test\")\n // To be SURE that the search will be run."}, {"sha": "6fad128dab8c388f71cfcad9780da69614bc0389", "filename": "tests/rustdoc-gui/font-weight.goml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ffont-weight.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ffont-weight.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ffont-weight.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test checks that the font weight is correctly applied.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/struct.Foo.html\"\n assert-css: (\"//*[@class='rust item-decl']//a[text()='Alias']\", {\"font-weight\": \"400\"})\n assert-css: (\n     \"//*[@class='structfield small-section-header']//a[text()='Alias']\",\n@@ -9,13 +9,13 @@ assert-css: (\"#method\\.a_method > .code-header\", {\"font-weight\": \"600\"})\n assert-css: (\"#associatedtype\\.X > .code-header\", {\"font-weight\": \"600\"})\n assert-css: (\"#associatedconstant\\.Y > .code-header\", {\"font-weight\": \"600\"})\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/type.SomeType.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/type.SomeType.html\"\n assert-css: (\".top-doc .docblock p\", {\"font-weight\": \"400\"}, ALL)\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n assert-css: (\".impl-items .method > .code-header\", {\"font-weight\": \"600\"}, ALL)\n \n-goto: \"file://\" + |DOC_PATH| + \"/lib2/trait.Trait.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/trait.Trait.html\"\n \n // This is a complex selector, so here's how it works:\n //"}, {"sha": "80e9791775e47f2bd04f0bc03dd8477795cf82c3", "filename": "tests/rustdoc-gui/go-to-collapsed-elem.goml", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fgo-to-collapsed-elem.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fgo-to-collapsed-elem.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fgo-to-collapsed-elem.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,20 +1,20 @@\n // This test ensures that when clicking on a link which leads to an item inside a collapsed element,\n // the collapsed element will be expanded.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n // We check that the implementors block is expanded.\n assert-property: (\"#implementations-list .implementors-toggle\", {\"open\": \"true\"})\n // We now collapse the implementors block.\n-property: (\"#implementations-list .implementors-toggle\", {\"open\": \"false\"})\n+set-property: (\"#implementations-list .implementors-toggle\", {\"open\": \"false\"})\n // And now we click on the link to the method to ensure it'll expand the implementors block.\n click: \"//*[@class='sidebar']//a[@href='#method.must_use']\"\n assert-property: (\"#implementations-list .implementors-toggle\", {\"open\": \"true\"})\n \n define-function: (\"collapsed-from-search\", (), block {\n     // Now we do the same through search result.\n     // First we reload the page without the anchor in the URL.\n-    goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+    go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n     // Then we collapse the section again...\n-    property: (\"#implementations-list .implementors-toggle\", {\"open\": \"false\"})\n+    set-property: (\"#implementations-list .implementors-toggle\", {\"open\": \"false\"})\n     // Then we run the search.\n     write: (\".search-input\", \"foo::must_use\")\n     wait-for: \"//*[@id='search']//a[@href='../test_docs/struct.Foo.html#method.must_use']\"\n@@ -25,12 +25,12 @@ define-function: (\"collapsed-from-search\", (), block {\n call-function: (\"collapsed-from-search\", {})\n \n // Now running the same check but with mobile.\n-size: (600, 600)\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+set-window-size: (600, 600)\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n // We check that the implementors block is expanded.\n assert-property: (\"#implementations-list .implementors-toggle\", {\"open\": \"true\"})\n // We now collapse the implementors block.\n-property: (\"#implementations-list .implementors-toggle\", {\"open\": \"false\"})\n+set-property: (\"#implementations-list .implementors-toggle\", {\"open\": \"false\"})\n // First we expand the mobile menu.\n click: \".sidebar-menu-toggle\"\n // Then we click on the link to the method to ensure it'll expand the implementors block."}, {"sha": "a7a5c3cb48345bec110384b6952c011b59a53869", "filename": "tests/rustdoc-gui/hash-item-expansion.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fhash-item-expansion.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fhash-item-expansion.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fhash-item-expansion.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test ensures that the element corresponding to the hash is displayed.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html#method.borrow\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html#method.borrow\"\n // In the blanket implementations list, \"Borrow\" is the second one, hence the \":nth(2)\".\n assert-attribute: (\"#blanket-implementations-list > details:nth-child(2)\", {\"open\": \"\"})\n // We first check that the impl block is open by default."}, {"sha": "7d83833a8bd0cbe814eba220def4de8484aaf423", "filename": "tests/rustdoc-gui/headers-color.goml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fheaders-color.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fheaders-color.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fheaders-color.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -4,10 +4,10 @@ define-function: (\n     \"check-colors\",\n     (theme, color, code_header_color, focus_background_color, headings_color),\n     block {\n-        goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+        go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n         // This is needed so that the text color is computed.\n         show-text: true\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n         assert-css: (\n             \".impl\",\n@@ -19,20 +19,20 @@ define-function: (\n             {\"color\": |code_header_color|, \"background-color\": \"rgba(0, 0, 0, 0)\"},\n             ALL,\n         )\n-        goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html#impl-Foo\"\n+        go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html#impl-Foo\"\n         assert-css: (\n             \"#impl-Foo\",\n             {\"color\": |color|, \"background-color\": |focus_background_color|},\n         )\n-        goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html#method.must_use\"\n+        go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html#method.must_use\"\n         assert-css: (\n             \"#method\\.must_use\",\n             {\"color\": |color|, \"background-color\": |focus_background_color|},\n             ALL,\n         )\n-        goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+        go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n         assert-css: (\".small-section-header a\", {\"color\": |color|}, ALL)\n-        goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.HeavilyDocumentedStruct.html\"\n+        go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.HeavilyDocumentedStruct.html\"\n         // We select headings (h2, h3, h...).\n         assert-css: (\".docblock > :not(p) > a\", {\"color\": |headings_color|}, ALL)\n     },"}, {"sha": "089e2203a0488a7ab1351926a956d63dda66d25c", "filename": "tests/rustdoc-gui/headings.goml", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fheadings.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fheadings.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fheadings.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -11,7 +11,7 @@\n // 18px  1.125em\n // 16px  1rem\n // 14px  0.875rem\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.HeavilyDocumentedStruct.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.HeavilyDocumentedStruct.html\"\n \n assert-css: (\".main-heading h1\", {\"font-size\": \"24px\"})\n \n@@ -50,7 +50,7 @@ assert-css: (\"h6#sub-heading-for-struct-impl-item-doc\", {\"font-size\": \"14px\"})\n assert-css: (\"h6#sub-heading-for-struct-impl-item-doc\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"h6#sub-sub-heading-for-struct-impl-item-doc\", {\"font-size\": \"14px\"})\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/enum.HeavilyDocumentedEnum.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/enum.HeavilyDocumentedEnum.html\"\n \n assert-css: (\".main-heading h1\", {\"font-size\": \"24px\"})\n \n@@ -109,7 +109,7 @@ assert-css: (\"h6#sub-sub-heading-for-enum-impl-item-doc\", {\"border-bottom-width\"\n assert-text: (\"//ul[@class='block mod']/preceding-sibling::h3\", \"Modules\")\n assert-css: (\"//ul[@class='block mod']/preceding-sibling::h3\", {\"border-bottom-width\": \"0px\"}, ALL)\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/union.HeavilyDocumentedUnion.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/union.HeavilyDocumentedUnion.html\"\n \n assert-css: (\".main-heading h1\", {\"font-size\": \"24px\"})\n \n@@ -141,7 +141,7 @@ assert-css: (\"h5#title-for-union-impl-item-doc\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"h6#sub-heading-for-union-impl-item-doc\", {\"font-size\": \"14px\"})\n assert-css: (\"h6#sub-heading-for-union-impl-item-doc\", {\"border-bottom-width\": \"0px\"})\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/macro.heavily_documented_macro.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/macro.heavily_documented_macro.html\"\n \n assert-css: (\".main-heading h1\", {\"font-size\": \"24px\"})\n \n@@ -152,13 +152,13 @@ assert-css: (\"h3#top-doc-prose-sub-heading\", {\"border-bottom-width\": \"1px\"})\n \n // Needed to check colors\n show-text: true\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.HeavilyDocumentedStruct.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.HeavilyDocumentedStruct.html\"\n \n define-function: (\n     \"check-colors\",\n     (theme, heading_color, small_heading_color, heading_border_color),\n     block {\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n         assert-css: (\n             \".top-doc .docblock h2\",\n@@ -222,13 +222,13 @@ define-function: (\n     \"check-since-color\",\n     (theme),\n     block {\n-        local-storage: {\"rustdoc-theme\": |theme|}\n+        set-local-storage: {\"rustdoc-theme\": |theme|}\n         reload:\n         assert-css: (\".since\", {\"color\": \"rgb(128, 128, 128)\"}, ALL)\n     },\n )\n \n-goto: \"file://\" + |DOC_PATH| + \"/staged_api/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/staged_api/struct.Foo.html\"\n call-function: (\"check-since-color\", (\"ayu\"))\n call-function: (\"check-since-color\", (\"dark\"))\n call-function: (\"check-since-color\", (\"light\"))"}, {"sha": "1a1c1b28f6131c0c20718f8f6e7a00c8dabf62bd", "filename": "tests/rustdoc-gui/help-page.goml", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fhelp-page.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fhelp-page.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fhelp-page.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,14 +1,14 @@\n // This test ensures that opening the help page in its own tab works.\n-goto: \"file://\" + |DOC_PATH| + \"/help.html\"\n-size: (1000, 1000) // Try desktop size first.\n+go-to: \"file://\" + |DOC_PATH| + \"/help.html\"\n+set-window-size: (1000, 1000) // Try desktop size first.\n wait-for: \"#help\"\n assert-css: (\"#help\", {\"display\": \"block\"})\n assert-css: (\"#help dd\", {\"font-size\": \"16px\"})\n click: \"#help-button > a\"\n assert-css: (\"#help\", {\"display\": \"block\"})\n compare-elements-property: (\".sub\", \"#help\", [\"offsetWidth\"])\n compare-elements-position: (\".sub\", \"#help\", (\"x\"))\n-size: (500, 1000) // Try mobile next.\n+set-window-size: (500, 1000) // Try mobile next.\n assert-css: (\"#help\", {\"display\": \"block\"})\n compare-elements-property: (\".sub\", \"#help\", [\"offsetWidth\"])\n compare-elements-position: (\".sub\", \"#help\", (\"x\"))\n@@ -20,7 +20,7 @@ define-function: (\n     (theme, color, background, box_shadow),\n     block {\n         // Setting the theme.\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         // We reload the page so the local storage settings are being used.\n         reload:\n         assert-css: (\"#help kbd\", {\n@@ -51,8 +51,8 @@ call-function: (\"check-colors\", {\n })\n \n // This test ensures that opening the help popover without switching pages works.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n-size: (1000, 1000) // Only supported on desktop.\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+set-window-size: (1000, 1000) // Only supported on desktop.\n assert-false: \"#help\"\n click: \"#help-button > a\"\n assert-css: (\"#help\", {\"display\": \"block\"})\n@@ -63,8 +63,8 @@ compare-elements-property-false: (\".sub\", \"#help\", [\"offsetWidth\"])\n compare-elements-position-false: (\".sub\", \"#help\", (\"x\"))\n \n // This test ensures that the \"the rustdoc book\" anchor link within the help popover works.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n-size: (1000, 1000) // Popover only appears when the screen width is >700px.\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+set-window-size: (1000, 1000) // Popover only appears when the screen width is >700px.\n assert-false: \"#help\"\n click: \"#help-button > a\"\n click: \".popover a[href='https://doc.rust-lang.org/rustdoc/']\""}, {"sha": "4f5e1c110f2cf77d5f1a4f82a6321050225bad79", "filename": "tests/rustdoc-gui/highlight-colors.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fhighlight-colors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fhighlight-colors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fhighlight-colors.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test checks the highlight colors in the source code pages.\n-goto: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n show-text: true\n \n define-function: (\n@@ -22,7 +22,7 @@ define-function: (\n         doc_comment,\n     ),\n     block {\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n         assert-css: (\"pre.rust .kw\", {\"color\": |kw|}, ALL)\n         assert-css: (\"pre.rust .kw-2\", {\"color\": |kw2|}, ALL)"}, {"sha": "387aca6f66cc424de7dd417acc021790f223b74b", "filename": "tests/rustdoc-gui/huge-collection-of-constants.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fhuge-collection-of-constants.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fhuge-collection-of-constants.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fhuge-collection-of-constants.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,6 +1,6 @@\n // Make sure that the last two entries are more than 12 pixels apart and not stacked on each other.\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/huge_amount_of_consts/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/huge_amount_of_consts/index.html\"\n \n compare-elements-position-near-false: (\n     \"//ul[@class='item-table']/li[last()-1]\","}, {"sha": "6d3eb66068cf3203b403b45bda3e7baa2265650b", "filename": "tests/rustdoc-gui/huge-logo.goml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fhuge-logo.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fhuge-logo.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fhuge-logo.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,23 +1,23 @@\n // huge_logo crate has a custom 712x860 logo\n // test to ensure the maximum size in the layout works correctly\n-goto: \"file://\" + |DOC_PATH| + \"/huge_logo/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/huge_logo/index.html\"\n \n-size: (1280, 1024)\n+set-window-size: (1280, 1024)\n // offsetWidth = width of sidebar\n assert-property: (\".sidebar .logo-container\", {\"offsetWidth\": \"200\", \"offsetHeight\": 100})\n assert-property: (\".sidebar .logo-container img\", {\"offsetWidth\": \"100\", \"offsetHeight\": 100})\n \n-size: (400, 600)\n+set-window-size: (400, 600)\n // offset = size + margin\n assert-property: (\".mobile-topbar .logo-container\", {\"offsetWidth\": \"55\", \"offsetHeight\": 45})\n assert-property: (\".mobile-topbar .logo-container img\", {\"offsetWidth\": \"35\", \"offsetHeight\": 35})\n \n-goto: \"file://\" + |DOC_PATH| + \"/src/huge_logo/lib.rs.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/src/huge_logo/lib.rs.html\"\n \n-size: (1280, 1024)\n+set-window-size: (1280, 1024)\n assert-property: (\".sub-logo-container\", {\"offsetWidth\": \"60\", \"offsetHeight\": 60})\n \n-size: (400, 600)\n+set-window-size: (400, 600)\n // 43 because 35px + 8px of margin\n assert-css: (\".sub-logo-container > img\", {\"margin-bottom\": \"8px\"})\n assert-property: (\".sub-logo-container\", {\"offsetWidth\": \"35\", \"offsetHeight\": 43})"}, {"sha": "45bd7beb6e69d5f1defdf3c1c177dc502b28b931", "filename": "tests/rustdoc-gui/impl-default-expansion.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fimpl-default-expansion.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fimpl-default-expansion.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fimpl-default-expansion.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,3 +1,3 @@\n // This test ensures that the impl blocks are open by default.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n assert-attribute: (\"#implementations-list details.implementors-toggle\", {\"open\": \"\"})"}, {"sha": "4ec46de404fa4199bb3bb3d3b30e3d628e81ec04", "filename": "tests/rustdoc-gui/impl-doc.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fimpl-doc.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fimpl-doc.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fimpl-doc.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // A docblock on an impl must have a margin to separate it from the contents.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.TypeWithImplDoc.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.TypeWithImplDoc.html\"\n \n // The text is about 24px tall, so if there's a margin, then their position will be >24px apart\n compare-elements-position-near-false: ("}, {"sha": "b39b95c1a9bff3b27f702cf261add294df6c26a2", "filename": "tests/rustdoc-gui/implementors.goml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fimplementors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fimplementors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fimplementors.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,6 +1,6 @@\n // The goal of this test is to check that the external trait implementors, generated with JS,\n // have the same display than the \"local\" ones.\n-goto: \"file://\" + |DOC_PATH| + \"/implementors/trait.Whatever.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/implementors/trait.Whatever.html\"\n assert: \"#implementors-list\"\n // There are supposed to be two implementors listed.\n assert-count: (\"#implementors-list .impl\", 2)\n@@ -15,7 +15,7 @@ assert-attribute: (\"#implementors-list .impl:nth-child(2)\", {\"id\": \"impl-Whateve\n assert-attribute: (\"#implementors-list .impl:nth-child(2) > a.anchor\", {\"href\": \"#impl-Whatever-1\"})\n assert: \"#implementors-list .impl:nth-child(2) > .code-header\"\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.HasEmptyTraits.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.HasEmptyTraits.html\"\n compare-elements-position-near-false: (\n     \"#impl-EmptyTrait1-for-HasEmptyTraits\",\n     \"#impl-EmptyTrait2-for-HasEmptyTraits\",\n@@ -29,13 +29,13 @@ compare-elements-position-near: (\n \n // Now check that re-exports work correctly.\n // There should be exactly one impl shown on both of these pages.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/trait.TraitToReexport.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/trait.TraitToReexport.html\"\n assert-count: (\"#implementors-list .impl\", 1)\n-goto: \"file://\" + |DOC_PATH| + \"/implementors/trait.TraitToReexport.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/implementors/trait.TraitToReexport.html\"\n assert-count: (\"#implementors-list .impl\", 1)\n \n // Now check that the link is properly rewritten for a crate called `http`.\n // An older version of rustdoc had a buggy check for absolute links.\n-goto: \"file://\" + |DOC_PATH| + \"/http/trait.HttpTrait.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/http/trait.HttpTrait.html\"\n assert-count: (\"#implementors-list .impl\", 1)\n assert-attribute: (\"#implementors-list .impl a.trait\", {\"href\": \"../http/trait.HttpTrait.html\"})"}, {"sha": "5732dd8eea26d32c677fbdffcd38c47d134d1d03", "filename": "tests/rustdoc-gui/item-decl-colors.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fitem-decl-colors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fitem-decl-colors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fitem-decl-colors.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -18,9 +18,9 @@ define-function: (\n         assoc_type_color,\n     ),\n     block {\n-        goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.WithGenerics.html\"\n+        go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.WithGenerics.html\"\n         show-text: true\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n         assert-css: (\".item-decl .code-attribute\", {\"color\": |attr_color|}, ALL)\n         assert-css: (\".item-decl .trait\", {\"color\": |trait_color|}, ALL)\n@@ -29,7 +29,7 @@ define-function: (\n         assert-css: (\".item-decl .enum\", {\"color\": |enum_color|}, ALL)\n         assert-css: (\".item-decl .primitive\", {\"color\": |primitive_color|}, ALL)\n \n-        goto: \"file://\" + |DOC_PATH| + \"/test_docs/trait.TraitWithoutGenerics.html\"\n+        go-to: \"file://\" + |DOC_PATH| + \"/test_docs/trait.TraitWithoutGenerics.html\"\n         assert-css: (\".item-decl .constant\", {\"color\": |constant_color|}, ALL)\n         assert-css: (\".item-decl .fn\", {\"color\": |fn_color|}, ALL)\n         assert-css: (\".item-decl .associatedtype\", {\"color\": |assoc_type_color|}, ALL)"}, {"sha": "6fc365d1f1942e44685ab63dfe1f7b8809a669ae", "filename": "tests/rustdoc-gui/item-info-alignment.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fitem-info-alignment.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fitem-info-alignment.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fitem-info-alignment.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,10 +1,10 @@\n // This test ensures that the \"item-info\" looks about the same\n // whether or not it's inside a toggle.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/struct.ItemInfoAlignmentTest.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/struct.ItemInfoAlignmentTest.html\"\n \n // First, we try it in \"desktop\" mode.\n-size: (1200, 870)\n+set-window-size: (1200, 870)\n compare-elements-position: (\".impl-items > .item-info\", \"summary > .item-info\", (\"x\"))\n // Next, we try it in \"mobile\" mode (max-width: 700px).\n-size: (650, 650)\n+set-window-size: (650, 650)\n compare-elements-position: (\".impl-items > .item-info\", \"summary > .item-info\", (\"x\"))"}, {"sha": "23c53c0376235d83a6a1b6685fbbd76586198278", "filename": "tests/rustdoc-gui/item-info-overflow.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fitem-info-overflow.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fitem-info-overflow.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fitem-info-overflow.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,7 +1,7 @@\n // This test ensures that the \"item-info\" elements don't overflow.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/struct.LongItemInfo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/struct.LongItemInfo.html\"\n // We set a fixed size so there is no chance of \"random\" resize.\n-size: (1200, 870)\n+set-window-size: (1200, 870)\n // Logically, the \"item-decl\" and the \"item-info\" should have the same scroll width.\n compare-elements-property: (\".item-decl\", \".item-info\", [\"scrollWidth\"])\n assert-property: (\".item-info\", {\"scrollWidth\": \"940\"})\n@@ -13,7 +13,7 @@ assert-text: (\n )\n \n // Checking the \"item-info\" on an impl block as well:\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/struct.LongItemInfo2.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/struct.LongItemInfo2.html\"\n compare-elements-property: (\n     \"#impl-SimpleTrait-for-LongItemInfo2 .item-info\",\n     \"#impl-SimpleTrait-for-LongItemInfo2 + .docblock\","}, {"sha": "60fd7c4e1981724128521b3905457cfdea911552", "filename": "tests/rustdoc-gui/item-info.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fitem-info.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fitem-info.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fitem-info.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,15 +1,15 @@\n // This test ensures a few things for item info elements.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/struct.Foo.html\"\n // Ensuring that the item information don't take 100% of the width if unnecessary.\n // We set a fixed size so there is no chance of \"random\" resize.\n-size: (1100, 800)\n+set-window-size: (1100, 800)\n // We check that \".item-info\" is bigger than its content.\n assert-css: (\".item-info\", {\"width\": \"840px\"})\n assert-css: (\".item-info .stab\", {\"width\": \"289px\"})\n assert-position: (\".item-info .stab\", {\"x\": 245})\n \n // Now we ensure that they're not rendered on the same line.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/trait.Trait.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/trait.Trait.html\"\n // We first ensure that there are two item info on the trait.\n assert-count: (\"#main-content > .item-info .stab\", 2)\n // They should not have the same `y` position!"}, {"sha": "8930603032937e6c08402886f3cc382d8ad8a0e3", "filename": "tests/rustdoc-gui/item-summary-table.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fitem-summary-table.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fitem-summary-table.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fitem-summary-table.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test ensures that <table> elements aren't display in items summary.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/summary_table/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/summary_table/index.html\"\n // We check that we picked the right item first.\n assert-text: (\".item-table .item-name\", \"Foo\")\n // Then we check that its summary is empty."}, {"sha": "a0872d553af7dfbc777b43fc833020fdddc4cba9", "filename": "tests/rustdoc-gui/javascript-disabled.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fjavascript-disabled.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fjavascript-disabled.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fjavascript-disabled.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -2,5 +2,5 @@\n // can't be used without JS.\n javascript: false\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n assert-css: (\".sub\", {\"display\": \"none\"})"}, {"sha": "3a7d48284d7c84327fcc8cbe0496a0d214e358ba", "filename": "tests/rustdoc-gui/jump-to-def-background.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fjump-to-def-background.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fjump-to-def-background.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fjump-to-def-background.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,12 +1,12 @@\n // We check the background color on the jump to definition links in the source code page.\n-goto: \"file://\" + |DOC_PATH| + \"/src/link_to_definition/lib.rs.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/src/link_to_definition/lib.rs.html\"\n \n define-function: (\n     \"check-background-color\",\n     (theme, background_color),\n     block {\n         // Set the theme.\n-        local-storage: { \"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\" }\n+        set-local-storage: { \"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\" }\n         // We reload the page so the local storage settings are being used.\n         reload:\n         assert-css: ("}, {"sha": "6c6380256bd1c0ffef3435d87b93f596d5e59b99", "filename": "tests/rustdoc-gui/label-next-to-symbol.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Flabel-next-to-symbol.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Flabel-next-to-symbol.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Flabel-next-to-symbol.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,9 +1,9 @@\n // These tests verify that labels like \"UNIX\" and \"Deprecated\" stay on the same line as their symbol.\n // It also verifies the staggered layout on mobile.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n \n // Desktop view\n-size: (1080, 600)\n+set-window-size: (1080, 600)\n assert: (\".stab.deprecated\")\n assert: (\".stab.portability\")\n \n@@ -39,7 +39,7 @@ compare-elements-position: (\n \n \n // Mobile view\n-size: (600, 600)\n+set-window-size: (600, 600)\n // staggered layout with 2em spacing\n assert-css: (\".desc.docblock-short\", { \"padding-left\": \"32px\" })\n compare-elements-position-near: ("}, {"sha": "2ee4bce101565686f9e803442e98124067d230e7", "filename": "tests/rustdoc-gui/links-color.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Flinks-color.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Flinks-color.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Flinks-color.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test checks links colors.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n \n // This is needed so that the text color is computed.\n show-text: true\n@@ -9,7 +9,7 @@ define-function: (\n     (theme, mod, macro, struct, enum, trait, fn, type, union, keyword,\n      sidebar, sidebar_current, sidebar_current_background),\n     block {\n-        local-storage: {\n+        set-local-storage: {\n             \"rustdoc-theme\": |theme|,\n             \"rustdoc-use-system-theme\": \"false\",\n         }"}, {"sha": "25ddea319c8629177cb22f7f02b97e7b82e85a5b", "filename": "tests/rustdoc-gui/list_code_block.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Flist_code_block.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Flist_code_block.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Flist_code_block.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,4 +1,4 @@\n // This test checks that code blocks in list are supported.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n-goto: \"./fn.check_list_code_block.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"./fn.check_list_code_block.html\"\n assert: (\"pre.rust.item-decl\")"}, {"sha": "ac3caeb237f0f8b21ba036e451c7e5242a6e364f", "filename": "tests/rustdoc-gui/method-margins.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fmethod-margins.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fmethod-margins.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fmethod-margins.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test ensures that the margins on methods are coherent inside an impl block.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/trait_members/struct.HasTrait.html#impl-TraitMembers-for-HasTrait\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/trait_members/struct.HasTrait.html#impl-TraitMembers-for-HasTrait\"\n \n assert-count: (\"#trait-implementations-list > .toggle\", 1)\n "}, {"sha": "e576385cd5370ff3bb8bf421f91756c460579c2d", "filename": "tests/rustdoc-gui/mobile.goml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fmobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fmobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fmobile.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,8 +1,8 @@\n // Test various properties of the mobile UI\n-goto: \"file://\" + |DOC_PATH| + \"/staged_api/struct.Foo.html\"\n-size: (400, 600)\n+go-to: \"file://\" + |DOC_PATH| + \"/staged_api/struct.Foo.html\"\n+set-window-size: (400, 600)\n \n-font-size: 18\n+set-font-size: 18\n wait-for: 100 // wait a bit for the resize and the font-size change to be fully taken into account.\n \n // The out-of-band info (source, stable version, collapse) should be below the\n@@ -18,14 +18,14 @@ assert-property: (\".mobile-topbar h2\", {\"offsetHeight\": 33})\n // is therefore not part of the DOM.\n assert-css: (\".content .out-of-band .since::before\", { \"content\": \"\\\"Since \\\"\" })\n \n-size: (1000, 1000)\n+set-window-size: (1000, 1000)\n wait-for: 100 // wait a bit for the resize to be fully taken into account.\n assert-css-false: (\".content .out-of-band .since::before\", { \"content\": \"\\\"Since \\\"\" })\n \n // On the settings page, the theme buttons should not line-wrap. Instead, they should\n // all be placed as a group on a line below the setting name \"Theme.\"\n-goto: \"file://\" + |DOC_PATH| + \"/settings.html\"\n-size: (400, 600)\n+go-to: \"file://\" + |DOC_PATH| + \"/settings.html\"\n+set-window-size: (400, 600)\n // Ignored for now https://github.com/rust-lang/rust/issues/93784.\n // compare-elements-position-near-false: (\n //     \"#preferred-light-theme .setting-radio-name\","}, {"sha": "54c8131c3b90825830bf40906b6b709bfa60978a", "filename": "tests/rustdoc-gui/module-items-font.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fmodule-items-font.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fmodule-items-font.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fmodule-items-font.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test checks that the correct font is used on module items (in index.html pages).\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n assert-css: (\n     \".item-table .item-name > a\",\n     {\"font-family\": '\"Fira Sans\", Arial, NanumBarunGothic, sans-serif'},"}, {"sha": "1b4638ef067c5498d03edb87aa2319352e5a8dd9", "filename": "tests/rustdoc-gui/no-docblock.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fno-docblock.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fno-docblock.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fno-docblock.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -4,10 +4,10 @@\n // doesn't exist.\n fail-on-request-error: false\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/trait.TraitWithNoDocblocks.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/trait.TraitWithNoDocblocks.html\"\n // Check that the two methods are more than 24px apart.\n compare-elements-position-near-false: (\"//*[@id='tymethod.first_fn']\", \"//*[@id='tymethod.second_fn']\", {\"y\": 24})\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.TypeWithNoDocblocks.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.TypeWithNoDocblocks.html\"\n // Check that the two methods are more than 24px apart.\n compare-elements-position-near-false: (\"//*[@id='method.first_fn']\", \"//*[@id='method.second_fn']\", {\"y\": 24})"}, {"sha": "f65da577478723e5b28c1a3de333d33c6ce33044", "filename": "tests/rustdoc-gui/notable-trait.goml", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fnotable-trait.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fnotable-trait.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fnotable-trait.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,8 +1,8 @@\n // This test checks the position of the `i` for the notable traits.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.NotableStructWithLongName.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.NotableStructWithLongName.html\"\n show-text: true\n // We start with a wide screen.\n-size: (1100, 600)\n+set-window-size: (1100, 600)\n // Checking they have the same y position.\n compare-elements-position: (\n     \"//*[@id='method.create_an_iterator_from_read']//a[text()='NotableStructWithLongName']\",\n@@ -44,15 +44,15 @@ move-cursor-to: \"//h1\"\n assert-count: (\"//*[@class='tooltip popover']\", 0)\n \n // Now only the `i` should be on the next line.\n-size: (1055, 600)\n+set-window-size: (1055, 600)\n compare-elements-position-false: (\n     \"//*[@id='method.create_an_iterator_from_read']//a[text()='NotableStructWithLongName']\",\n     \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\",\n     (\"y\", \"x\"),\n )\n \n // Now both the `i` and the struct name should be on the next line.\n-size: (980, 600)\n+set-window-size: (980, 600)\n // Checking they have the same y position.\n compare-elements-position: (\n     \"//*[@id='method.create_an_iterator_from_read']//a[text()='NotableStructWithLongName']\",\n@@ -76,7 +76,7 @@ assert-position: (\n )\n \n // Checking on mobile now.\n-size: (650, 600)\n+set-window-size: (650, 600)\n // Checking they have the same y position.\n compare-elements-position: (\n     \"//*[@id='method.create_an_iterator_from_read']//a[text()='NotableStructWithLongName']\",\n@@ -124,12 +124,12 @@ define-function: (\n     \"check-colors\",\n     (theme, header_color, content_color, type_color, trait_color),\n     block {\n-        goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.NotableStructWithLongName.html\"\n+        go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.NotableStructWithLongName.html\"\n         // This is needed to ensure that the text color is computed.\n         show-text: true\n \n         // Setting the theme.\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         // We reload the page so the local storage settings are being used.\n         reload:\n \n@@ -253,7 +253,7 @@ press-key: \"Escape\"\n assert-window-property-false: {\"scrollY\": |scroll|}\n \n // Opening the mobile sidebar should close the popover.\n-size: (650, 600)\n+set-window-size: (650, 600)\n click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\"\n assert-count: (\"//*[@class='tooltip popover']\", 1)\n click: \".sidebar-menu-toggle\"\n@@ -266,7 +266,7 @@ assert-count: (\"//*[@class='tooltip popover']\", 1)\n assert-false: \"//*[@class='sidebar shown']\"\n \n // Also check the focus handling for the help button.\n-size: (1100, 600)\n+set-window-size: (1100, 600)\n reload:\n assert-count: (\"//*[@class='tooltip popover']\", 0)\n click: \"//*[@id='method.create_an_iterator_from_read']//*[@class='tooltip']\""}, {"sha": "ab7ffc24ccf8bc841f8c9b617e0ca56b7b0768ad", "filename": "tests/rustdoc-gui/overflow-tooltip-information.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Foverflow-tooltip-information.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Foverflow-tooltip-information.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Foverflow-tooltip-information.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,7 +1,7 @@\n // The goal of this test is to ensure that the tooltip `.information` class doesn't\n // have overflow and max-width CSS rules set because they create a bug in firefox on\n // mac. For more information: https://github.com/rust-lang/rust/issues/89185\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n assert-css: (\".docblock > .example-wrap .tooltip\", {\n     \"overflow-x\": \"visible\",\n     \"max-width\": \"none\""}, {"sha": "4bdf31ecb19977d46314b885f6c73a6472bb08ee", "filename": "tests/rustdoc-gui/pocket-menu.goml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fpocket-menu.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fpocket-menu.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fpocket-menu.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test ensures that the \"pocket menus\" are working as expected.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n // First we check that the help menu doesn't exist yet.\n assert-false: \"#help-button .popover\"\n // Then we display the help menu.\n@@ -32,7 +32,7 @@ assert-css: (\"#settings-menu .popover\", {\"display\": \"none\"})\n // We check the borders color now:\n \n // Ayu theme\n-local-storage: {\n+set-local-storage: {\n     \"rustdoc-theme\": \"ayu\",\n     \"rustdoc-use-system-theme\": \"false\",\n }\n@@ -47,7 +47,7 @@ compare-elements-css: (\"#help-button .popover\", \"#help-button .top\", [\"border-co\n compare-elements-css: (\"#help-button .popover\", \"#help-button .bottom\", [\"border-color\"])\n \n // Dark theme\n-local-storage: {\n+set-local-storage: {\n     \"rustdoc-theme\": \"dark\",\n     \"rustdoc-use-system-theme\": \"false\",\n }\n@@ -62,7 +62,7 @@ compare-elements-css: (\"#help-button .popover\", \"#help-button .top\", [\"border-co\n compare-elements-css: (\"#help-button .popover\", \"#help-button .bottom\", [\"border-color\"])\n \n // Light theme\n-local-storage: {\n+set-local-storage: {\n     \"rustdoc-theme\": \"light\",\n     \"rustdoc-use-system-theme\": \"false\",\n }\n@@ -77,7 +77,7 @@ compare-elements-css: (\"#help-button .popover\", \"#help-button .top\", [\"border-co\n compare-elements-css: (\"#help-button .popover\", \"#help-button .bottom\", [\"border-color\"])\n \n // Opening the mobile sidebar should close the settings popover.\n-size: (650, 600)\n+set-window-size: (650, 600)\n click: \"#settings-menu a\"\n assert-css: (\"#settings-menu .popover\", {\"display\": \"block\"})\n click: \".sidebar-menu-toggle\""}, {"sha": "b5fc49eacacaa9d38adec63ec0bfbf4e64ba8e4f", "filename": "tests/rustdoc-gui/run-on-hover.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Frun-on-hover.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Frun-on-hover.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Frun-on-hover.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -2,14 +2,14 @@\n // Playground. That button is hidden until the user hovers over the code block.\n // This test checks that it is hidden, and that it shows on hover. It also\n // checks for its color.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n show-text: true\n \n define-function: (\n     \"check-run-button\",\n     (theme, color, background, hover_color, hover_background),\n     block {\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n         assert-css: (\".test-arrow\", {\"visibility\": \"hidden\"})\n         move-cursor-to: \".example-wrap\""}, {"sha": "640ed152b0d59728d54196d701c4a71b76d7352b", "filename": "tests/rustdoc-gui/rust-logo.goml", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Frust-logo.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Frust-logo.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Frust-logo.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,26 +1,26 @@\n // This test ensures that the correct style is applied to the rust logo in the sidebar.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n \n define-function: (\n     \"check-logo\",\n     (theme, filter),\n     block {\n         // Going to the doc page.\n-        goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+        go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n         // Changing theme.\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n         assert-css: (\".rust-logo\", {\"filter\": |filter|})\n         // Going to the source code page.\n-        goto: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n+        go-to: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n         // Changing theme (since it's local files, the local storage works by folder).\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n         assert-css: (\".rust-logo\", {\"filter\": |filter|})\n         // Now we check that the non-rust logos don't have a CSS filter set.\n-        goto: \"file://\" + |DOC_PATH| + \"/huge_logo/index.html\"\n+        go-to: \"file://\" + |DOC_PATH| + \"/huge_logo/index.html\"\n         // Changing theme on the new page (again...).\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n         // Check there is no rust logo\n         assert-false: \".rust-logo\""}, {"sha": "77061ea2a3f3fb6f59c5e4072c57d1462d7aa99f", "filename": "tests/rustdoc-gui/scrape-examples-button-focus.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fscrape-examples-button-focus.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fscrape-examples-button-focus.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fscrape-examples-button-focus.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,6 +1,6 @@\n // This test ensures that the scraped examples buttons are working as expecting\n // when 'Enter' key is pressed when they're focused.\n-goto: \"file://\" + |DOC_PATH| + \"/scrape_examples/fn.test.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/scrape_examples/fn.test.html\"\n \n // The next/prev buttons vertically scroll the code viewport between examples\n store-property: (initialScrollTop, \".scraped-example-list > .scraped-example pre\", \"scrollTop\")"}, {"sha": "8ddb06fccfca6c481045fc52dd897f2633457c85", "filename": "tests/rustdoc-gui/scrape-examples-color.goml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fscrape-examples-color.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fscrape-examples-color.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fscrape-examples-color.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,13 +1,13 @@\n // Check that scrape example code blocks have the expected colors.\n-goto: \"file://\" + |DOC_PATH| + \"/scrape_examples/fn.test_many.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/scrape_examples/fn.test_many.html\"\n show-text: true\n \n define-function: (\n     \"check-colors\",\n     (theme, highlight, highlight_focus, help_border, help_color, help_hover_border,\n      help_hover_color),\n     block {\n-        local-storage: { \"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\", }\n+        set-local-storage: { \"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\", }\n         reload:\n         wait-for: \".more-examples-toggle\"\n         assert-css: (\".scraped-example .example-wrap .rust span.highlight:not(.focus)\", {\n@@ -60,13 +60,13 @@ call-function: (\"check-colors\", {\n })\n \n // Now testing the top and bottom background in case there is only one scraped examples.\n-goto: \"file://\" + |DOC_PATH| + \"/scrape_examples/fn.test.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/scrape_examples/fn.test.html\"\n \n define-function: (\n     \"check-background\",\n     (theme, background_color_start, background_color_end),\n     block {\n-        local-storage: { \"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\", }\n+        set-local-storage: { \"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\", }\n         reload:\n         assert-css: (\".scraped-example:not(.expanded) .code-wrapper::before\", {\n             \"background-image\": \"linear-gradient(\" + |background_color_start| + \", \" +"}, {"sha": "4c325bace9761de5e8114929f99bc9ff8976c4a4", "filename": "tests/rustdoc-gui/scrape-examples-fonts.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fscrape-examples-fonts.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fscrape-examples-fonts.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fscrape-examples-fonts.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test ensures that the correct font is used in scraped examples.\n-goto: \"file://\" + |DOC_PATH| + \"/scrape_examples/fn.test_many.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/scrape_examples/fn.test_many.html\"\n \n store-value: (font, '\"Fira Sans\", Arial, NanumBarunGothic, sans-serif')\n "}, {"sha": "160056d6d0598419fff4ac3c3322b7ae3fc40dce", "filename": "tests/rustdoc-gui/scrape-examples-layout.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fscrape-examples-layout.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fscrape-examples-layout.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fscrape-examples-layout.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // Check that the line number column has the correct layout.\n-goto: \"file://\" + |DOC_PATH| + \"/scrape_examples/fn.test_many.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/scrape_examples/fn.test_many.html\"\n \n // Check that it's not zero.\n assert-property-false: (\n@@ -44,6 +44,6 @@ assert-position: (\".scraped-example .code-wrapper\", {\"y\": 253})\n assert-position: (\".scraped-example .code-wrapper .prev\", {\"y\": 253 + |offset_y|})\n \n // Then with mobile\n-size: (600, 600)\n+set-window-size: (600, 600)\n assert-position: (\".scraped-example .code-wrapper\", {\"y\": 308})\n assert-position: (\".scraped-example .code-wrapper .prev\", {\"y\": 308 + |offset_y|})"}, {"sha": "9cec6d2bbe8469ebf5b4b84d44d7d0f080c11c5c", "filename": "tests/rustdoc-gui/scrape-examples-toggle.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fscrape-examples-toggle.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fscrape-examples-toggle.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fscrape-examples-toggle.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,13 +1,13 @@\n // This tests checks that the \"scraped examples\" toggle is working as expected.\n-goto: \"file://\" + |DOC_PATH| + \"/scrape_examples/fn.test_many.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/scrape_examples/fn.test_many.html\"\n \n // Checking the color of the toggle line.\n show-text: true\n define-function: (\n     \"check-color\",\n     (theme, toggle_line_color, toggle_line_hover_color),\n     block {\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n \n         // Clicking \"More examples...\" will open additional examples"}, {"sha": "d21905e90ae02110d8c55f3615d5492f5e6167bb", "filename": "tests/rustdoc-gui/search-error.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-error.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-error.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-error.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,13 +1,13 @@\n // Checks that the crate search filtering is handled correctly and changes the results.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=sa'%3Bda'%3Bds\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=sa'%3Bda'%3Bds\"\n show-text: true\n \n define-function: (\n     \"check-colors\",\n     (theme, error_background),\n     block {\n         // Setting the theme.\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         // We reload the page so the local storage settings are being used.\n         reload:\n "}, {"sha": "f114c57ff21e1e96cfec3e507741fc939c384a85", "filename": "tests/rustdoc-gui/search-filter.goml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-filter.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-filter.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-filter.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // Checks that the crate search filtering is handled correctly and changes the results.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n show-text: true\n write: (\".search-input\", \"test\")\n // To be SURE that the search will be run.\n@@ -47,7 +47,7 @@ wait-for: \"#search-tabs\"\n assert-property: (\"#crate-search\", {\"value\": \"all crates\"})\n \n // Checking that the URL parameter is taken into account for crate filtering.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=test&filter-crate=lib2\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=test&filter-crate=lib2\"\n wait-for: \"#crate-search\"\n assert-property: (\"#crate-search\", {\"value\": \"lib2\"})\n assert-false: \"#results .externcrate\"\n@@ -57,10 +57,10 @@ assert-text: (\".search-results-title\", \"Results in all crates\", STARTS_WITH)\n \n // Checking the display of the crate filter.\n // We start with the light theme.\n-local-storage: {\"rustdoc-theme\": \"light\", \"rustdoc-use-system-theme\": \"false\"}\n+set-local-storage: {\"rustdoc-theme\": \"light\", \"rustdoc-use-system-theme\": \"false\"}\n reload:\n \n-timeout: 2000\n+set-timeout: 2000\n wait-for: \"#crate-search\"\n assert-css: (\"#crate-search\", {\n     \"border\": \"1px solid rgb(224, 224, 224)\","}, {"sha": "83c6980909c2e2f76b0ab99988653c8d1cc8284a", "filename": "tests/rustdoc-gui/search-form-elements.goml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-form-elements.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-form-elements.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-form-elements.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,9 +1,9 @@\n // This test ensures that the elements in \".search-form\" have the expected display.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n show-text: true\n \n // Ayu theme\n-local-storage: {\n+set-local-storage: {\n     \"rustdoc-theme\": \"ayu\",\n     \"rustdoc-use-system-theme\": \"false\",\n }\n@@ -89,7 +89,7 @@ assert-css: (\n )\n \n // Dark theme\n-local-storage: {\n+set-local-storage: {\n     \"rustdoc-theme\": \"dark\",\n     \"rustdoc-use-system-theme\": \"false\",\n }\n@@ -176,7 +176,7 @@ assert-css: (\n )\n \n // Light theme\n-local-storage: {\n+set-local-storage: {\n     \"rustdoc-theme\": \"light\",\n     \"rustdoc-use-system-theme\": \"false\",\n }"}, {"sha": "adcb3658a270263a52a990ee9f24e2e80fc6a7c6", "filename": "tests/rustdoc-gui/search-input-mobile.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-input-mobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-input-mobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-input-mobile.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,11 +1,11 @@\n // Test to ensure that you can click on the search input, whatever the width.\n // The PR which fixed it is: https://github.com/rust-lang/rust/pull/81592\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n-size: (463, 700)\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+set-window-size: (463, 700)\n // We first check that the search input isn't already focused.\n assert-false: (\"input.search-input:focus\")\n click: \"input.search-input\"\n reload:\n-size: (750, 700)\n+set-window-size: (750, 700)\n click: \"input.search-input\"\n assert: (\"input.search-input:focus\")"}, {"sha": "f1d8024616bba0b7e2390813940167d76b134036", "filename": "tests/rustdoc-gui/search-keyboard.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-keyboard.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-keyboard.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-keyboard.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,6 +1,6 @@\n // Checks that the search tab results work correctly with function signature syntax\n // First, try a search-by-name\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n write: (\".search-input\", \"Foo\")\n // To be SURE that the search will be run.\n press-key: 'Enter'"}, {"sha": "46d1856b4d68d5687c412f5078ea3a35664f9939", "filename": "tests/rustdoc-gui/search-no-result.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-no-result.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-no-result.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-no-result.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,13 +1,13 @@\n // The goal of this test is to check the color of the \"no result\" links.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/index.html?search=sdkfskjfsdks\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/index.html?search=sdkfskjfsdks\"\n show-text: true\n \n define-function: (\n     \"check-no-result\",\n     (theme, link, link_hover),\n     block {\n         // Changing theme.\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n         wait-for: \"#results\"\n         assert: \".search-failed.active\""}, {"sha": "fd817b58990c594ebae5696ac3e1e648431729bc", "filename": "tests/rustdoc-gui/search-reexport.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-reexport.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-reexport.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-reexport.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,7 +1,7 @@\n // Checks that the reexports are present in the search index, can have\n // doc aliases and are highligted when their ID is the hash of the page.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n-local-storage: {\"rustdoc-theme\": \"dark\", \"rustdoc-use-system-theme\": \"false\"}\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+set-local-storage: {\"rustdoc-theme\": \"dark\", \"rustdoc-use-system-theme\": \"false\"}\n reload:\n // First we check that the reexport has the correct ID and no background color.\n assert-text: (\"//*[@id='reexport.TheStdReexport']\", \"pub use ::std as TheStdReexport;\")"}, {"sha": "da46a90df904d8bd51e6d1c9dbd58e6f5ab0cff9", "filename": "tests/rustdoc-gui/search-result-color.goml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-result-color.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-result-color.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-result-color.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -31,13 +31,13 @@ define-function: (\n     },\n )\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=coo\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=coo\"\n \n // This is needed so that the text color is computed.\n show-text: true\n \n // Ayu theme\n-local-storage: {\n+set-local-storage: {\n     \"rustdoc-theme\": \"ayu\",\n     \"rustdoc-use-system-theme\": \"false\",\n }\n@@ -154,7 +154,7 @@ assert-css: (\n )\n \n // Dark theme\n-local-storage: {\n+set-local-storage: {\n     \"rustdoc-theme\": \"dark\",\n     \"rustdoc-use-system-theme\": \"false\",\n }\n@@ -259,7 +259,7 @@ assert-css: (\n )\n \n // Light theme\n-local-storage: {\"rustdoc-theme\": \"light\", \"rustdoc-use-system-theme\": \"false\"}\n+set-local-storage: {\"rustdoc-theme\": \"light\", \"rustdoc-use-system-theme\": \"false\"}\n reload:\n \n // Waiting for the search results to appear...\n@@ -361,15 +361,15 @@ assert-css: (\n )\n \n // Check the alias.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n // If the text isn't displayed, the browser doesn't compute color style correctly...\n show-text: true\n \n define-function: (\n     \"check-alias\",\n     (theme, alias, grey),\n     block {\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n         write: (\".search-input\", \"thisisanalias\")\n         // To be SURE that the search will be run."}, {"sha": "745ef31e6cbe950559d965ae49a94386e1c078b9", "filename": "tests/rustdoc-gui/search-result-description.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-result-description.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-result-description.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-result-description.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test is to ensure that the codeblocks are correctly rendered in the search results.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=some_more_function\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=some_more_function\"\n // Waiting for the search results to appear...\n wait-for: \"#search-tabs\"\n assert-text: (\".search-results .desc code\", \"format!\")"}, {"sha": "93c71f23f24e0b25038617732570de2f83d56957", "filename": "tests/rustdoc-gui/search-result-display.goml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-result-display.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-result-display.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-result-display.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,14 +1,14 @@\n // Checks that the search results have the expected width.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n-size: (900, 1000)\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+set-window-size: (900, 1000)\n write: (\".search-input\", \"test\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n wait-for: \"#crate-search\"\n // The width is returned by \"getComputedStyle\" which returns the exact number instead of the\n // CSS rule which is \"50%\"...\n assert-css: (\".search-results div.desc\", {\"width\": \"310px\"})\n-size: (600, 100)\n+set-window-size: (600, 100)\n // As counter-intuitive as it may seem, in this width, the width is \"100%\", which is why\n // when computed it's larger.\n assert-css: (\".search-results div.desc\", {\"width\": \"566px\"})\n@@ -18,15 +18,15 @@ assert-css: (\".search-results .result-name > span\", {\"display\": \"inline\"})\n \n // Check that the crate filter `<select>` is correctly handled when it goes to next line.\n // To do so we need to update the length of one of its `<option>`.\n-size: (900, 900)\n+set-window-size: (900, 900)\n \n // First we check the current width, height and position.\n assert-css: (\"#crate-search\", {\"width\": \"223px\"})\n assert-css: (\".search-results-title\", {\"height\": \"50px\", \"width\": \"640px\"})\n assert-css: (\"#search\", {\"width\": \"640px\"})\n \n // Then we update the text of one of the `<option>`.\n-text: (\n+set-text: (\n     \"#crate-search option\",\n     \"sdjfaksdjfaksjdbfkadsbfkjsadbfkdsbkfbsadkjfbkdsabfkadsfkjdsafa\",\n )\n@@ -43,7 +43,7 @@ define-function: (\n     \"check-filter\",\n     (theme, border, filter, hover_border, hover_filter),\n     block {\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n         wait-for: \"#crate-search\"\n         assert-css: (\"#crate-search\", {\"border\": \"1px solid \" + |border|})"}, {"sha": "a0bc2bb16ba64a8853f1bb73ff97fc89b6fa362e", "filename": "tests/rustdoc-gui/search-result-go-to-first.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-result-go-to-first.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-result-go-to-first.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-result-go-to-first.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -2,18 +2,18 @@\n \n // First, we check that the first page doesn't have the string we're looking for to ensure\n // that the feature is changing page as expected.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n assert-text-false: (\".main-heading h1\", \"Struct test_docs::Foo\")\n \n // We now check that we land on the search result page if \"go_to_first\" isn't set.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=struct%3AFoo\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=struct%3AFoo\"\n // Waiting for the search results to appear...\n wait-for: \"#search-tabs\"\n assert-text-false: (\".main-heading h1\", \"Struct test_docs::Foo\")\n // Ensure that the search results are displayed, not the \"normal\" content.\n assert-css: (\"#main-content\", {\"display\": \"none\"})\n \n // Now we can check that the feature is working as expected!\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=struct%3AFoo&go_to_first=true\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html?search=struct%3AFoo&go_to_first=true\"\n // Waiting for the page to load...\n wait-for-text: (\".main-heading h1\", \"Struct test_docs::Foo\")"}, {"sha": "5d56e9d9cd42dae9e41c21ab4fc098cab7d500f2", "filename": "tests/rustdoc-gui/search-result-keyword.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-result-keyword.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-result-keyword.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-result-keyword.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // Checks that the \"keyword\" results have the expected text alongside them.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n write: (\".search-input\", \"CookieMonster\")\n // To be SURE that the search will be run.\n press-key: 'Enter'"}, {"sha": "b3f9ae9283f30783f6aa76eeaa681f192bd0423a", "filename": "tests/rustdoc-gui/search-tab-change-title-fn-sig.goml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-tab-change-title-fn-sig.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-tab-change-title-fn-sig.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-tab-change-title-fn-sig.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,6 +1,6 @@\n // Checks that the search tab results work correctly with function signature syntax\n // First, try a search-by-name\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n write: (\".search-input\", \"Foo\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n@@ -22,7 +22,7 @@ press-key: \"ArrowLeft\"\n wait-for-attribute: (\"#search-tabs > button:nth-of-type(3)\", {\"class\": \"selected\"})\n \n // Now try search-by-return\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n write: (\".search-input\", \"-> String\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n@@ -44,7 +44,7 @@ press-key: \"ArrowLeft\"\n wait-for-attribute: (\"#search-tabs > button:nth-of-type(1)\", {\"class\": \"selected\"})\n \n // Try with a search-by-return with no results\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n write: (\".search-input\", \"-> Something\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n@@ -54,7 +54,7 @@ assert-attribute: (\"#search-tabs > button:nth-of-type(1)\", {\"class\": \"selected\"}\n assert-text: (\"#search-tabs > button:nth-of-type(1)\", \"In Function Return Types\", STARTS_WITH)\n \n // Try with a search-by-parameter\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n write: (\".search-input\", \"usize pattern\")\n // To be SURE that the search will be run.\n press-key: 'Enter'\n@@ -64,7 +64,7 @@ assert-attribute: (\"#search-tabs > button:nth-of-type(1)\", {\"class\": \"selected\"}\n assert-text: (\"#search-tabs > button:nth-of-type(1)\", \"In Function Parameters\", STARTS_WITH)\n \n // Try with a search-by-parameter-and-return\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n write: (\".search-input\", \"pattern -> str\")\n // To be SURE that the search will be run.\n press-key: 'Enter'"}, {"sha": "2223598f0295351e085bc04d6f438c285818cd8f", "filename": "tests/rustdoc-gui/search-tab.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-tab.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsearch-tab.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsearch-tab.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // Checking the colors of the search tab headers.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html?search=something\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html?search=something\"\n show-text: true\n \n define-function: (\n@@ -9,7 +9,7 @@ define-function: (\n      border_top_hover),\n     block {\n         // Setting the theme.\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n \n         // These two commands are used to be sure the search will be run."}, {"sha": "6cd725043f4ad18cbcdfe3c99c1b7f84180755e8", "filename": "tests/rustdoc-gui/setting-auto-hide-content-large-items.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsetting-auto-hide-content-large-items.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsetting-auto-hide-content-large-items.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsetting-auto-hide-content-large-items.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -16,7 +16,7 @@ define-function: (\n     }\n )\n \n-goto: \"file://\" + |DOC_PATH| + \"/lib2/scroll_traits/trait.Iterator.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/scroll_traits/trait.Iterator.html\"\n \n // We check that the setting is enabled by default and is working.\n call-function: (\"check-setting\", {"}, {"sha": "5210ad8f793b15540f33de18d5520d558c46c162", "filename": "tests/rustdoc-gui/setting-auto-hide-item-methods-docs.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsetting-auto-hide-item-methods-docs.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsetting-auto-hide-item-methods-docs.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsetting-auto-hide-item-methods-docs.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -13,7 +13,7 @@ define-function: (\n     }\n )\n \n-goto: \"file://\" + |DOC_PATH| + \"/lib2/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/struct.Foo.html\"\n \n // We check that the setting is disabled by default.\n call-function: (\"check-setting\", {"}, {"sha": "ecadd8fa80edefbb7451b00c7e0d3f8a84bcd3ca", "filename": "tests/rustdoc-gui/setting-auto-hide-trait-implementations.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsetting-auto-hide-trait-implementations.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsetting-auto-hide-trait-implementations.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsetting-auto-hide-trait-implementations.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -12,7 +12,7 @@ define-function: (\n     }\n )\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n \n // By default, the trait implementations are not collapsed.\n call-function: (\"check-setting\", {"}, {"sha": "c5720b4bf1ac6bf414ddbab08a5755ce50fd398c", "filename": "tests/rustdoc-gui/setting-go-to-only-result.goml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsetting-go-to-only-result.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsetting-go-to-only-result.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsetting-go-to-only-result.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -11,15 +11,15 @@ define-function: (\n     }\n )\n \n-goto: \"file://\" + |DOC_PATH| + \"/lib2/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/index.html\"\n \n call-function: (\"check-setting\", {\n     \"storage_value\": null,\n     \"setting_attribute_value\": \"false\",\n })\n \n // By default, the search doesn't automatically go to the page if there is only one result.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/index.html?search=HasALongTraitWithParams\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/index.html?search=HasALongTraitWithParams\"\n // It will timeout if the setting isn't working.\n wait-for: \"#search\"\n assert-document-property: ({\"URL\": \"/lib2/index.html\"}, CONTAINS)\n@@ -30,14 +30,14 @@ wait-for: \"#settings\"\n click: \"#go-to-only-result\"\n assert-local-storage: {\"rustdoc-go-to-only-result\": \"true\"}\n \n-goto: \"file://\" + |DOC_PATH| + \"/lib2/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/index.html\"\n // We enter it into the search.\n write: (\".search-input\", \"HasALongTraitWithParams\")\n wait-for-document-property: {\"title\": \"HasALongTraitWithParams in lib2 - Rust\"}\n assert-document-property: ({\"URL\": \"/lib2/struct.HasALongTraitWithParams.html\"}, ENDS_WITH)\n \n // We try again to see if it goes to the only result\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/index.html?search=HasALongTraitWithParams\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/index.html?search=HasALongTraitWithParams\"\n wait-for-document-property: {\"title\": \"HasALongTraitWithParams in lib2 - Rust\"}\n assert-document-property: ({\"URL\": \"/lib2/struct.HasALongTraitWithParams.html\"}, ENDS_WITH)\n \n@@ -51,7 +51,7 @@ call-function: (\"check-setting\", {\n click: \"#go-to-only-result\"\n assert-local-storage: {\"rustdoc-go-to-only-result\": \"false\"}\n \n-goto: \"file://\" + |DOC_PATH| + \"/lib2/index.html?search=HasALongTraitWithParams\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/index.html?search=HasALongTraitWithParams\"\n // It will timeout if the setting isn't working.\n wait-for: \"#search\"\n assert-document-property: ({\"URL\": \"/lib2/index.html\"}, CONTAINS)"}, {"sha": "cfb037245d18fb01ae7c63ef74a2b05156b1cd0b", "filename": "tests/rustdoc-gui/settings.goml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsettings.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsettings.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsettings.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,6 +1,6 @@\n // This test ensures that the settings menu display is working as expected and that\n // the settings page is also rendered as expected.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n show-text: true // needed when we check for colors below.\n // First, we check that the settings page doesn't exist.\n assert-false: \"#settings\"\n@@ -35,7 +35,7 @@ wait-for: \"#alternative-display #search\"\n assert: \"#main-content.hidden\"\n \n // Now let's check the content of the settings menu.\n-local-storage: {\"rustdoc-theme\": \"dark\", \"rustdoc-use-system-theme\": \"false\"}\n+set-local-storage: {\"rustdoc-theme\": \"dark\", \"rustdoc-use-system-theme\": \"false\"}\n reload:\n click: \"#settings-menu\"\n wait-for: \"#settings\"\n@@ -189,7 +189,7 @@ assert-text: (\"#preferred-light-theme .setting-radio-name\", \"Preferred light the\n \n // We now check that clicking on the toggles' text is like clicking on the checkbox.\n // To test it, we use the \"Disable keyboard shortcuts\".\n-local-storage: {\"rustdoc-disable-shortcuts\": \"false\"}\n+set-local-storage: {\"rustdoc-disable-shortcuts\": \"false\"}\n click: \".setting-line:last-child .setting-check span\"\n assert-local-storage: {\"rustdoc-disable-shortcuts\": \"true\"}\n \n@@ -227,7 +227,7 @@ wait-for-css: (\"#settings-menu .popover\", {\"display\": \"none\"})\n wait-for-css: (\"#help-button .popover\", {\"display\": \"block\"})\n \n // Now we go to the settings page to check that the CSS is loaded as expected.\n-goto: \"file://\" + |DOC_PATH| + \"/settings.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/settings.html\"\n wait-for: \"#settings\"\n assert-css: (\".setting-line\", {\"position\": \"relative\"})\n \n@@ -247,7 +247,7 @@ javascript: true\n // Check for the display on small screen\n show-text: true\n reload:\n-size: (300, 1000)\n+set-window-size: (300, 1000)\n click: \"#settings-menu\"\n wait-for: \"#settings\"\n assert-css: (\".setting-line\", {\"position\": \"relative\"})"}, {"sha": "667df89ec9b00fa815e360c270ed1ac113b63a50", "filename": "tests/rustdoc-gui/shortcuts.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fshortcuts.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fshortcuts.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fshortcuts.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // Check that the various shortcuts are working.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n // We first check that the search input isn't already focused.\n assert-false: \"input.search-input:focus\"\n press-key: \"s\""}, {"sha": "cec1a7999267c9c58026bf2913a5b966fc293225", "filename": "tests/rustdoc-gui/sidebar-links-color.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsidebar-links-color.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsidebar-links-color.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsidebar-links-color.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test checks links colors in sidebar before and after hover.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n \n // This is needed so that the text color is computed.\n show-text: true\n@@ -13,7 +13,7 @@ define-function: (\n         type_hover_background, keyword, keyword_hover, keyword_hover_background,\n     ),\n     block {\n-        local-storage: { \"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\" }\n+        set-local-storage: { \"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\" }\n         reload:\n         // Struct\n         assert-css: ("}, {"sha": "0f7ef6c3558280852979ef2a062d45898ed5e8f3", "filename": "tests/rustdoc-gui/sidebar-macro-reexport.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsidebar-macro-reexport.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsidebar-macro-reexport.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsidebar-macro-reexport.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test ensures that the reexport of a macro doesn't make the original macro\n // displayed twice in the sidebar.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/macro.repro.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/macro.repro.html\"\n wait-for: \".sidebar-elems .block.macro a\"\n assert-count: (\"//*[@class='sidebar-elems']//*[@class='block macro']//a[text()='repro']\", 1)"}, {"sha": "84811437eb2ca4198c277677a740cce5e64b2604", "filename": "tests/rustdoc-gui/sidebar-mobile-scroll.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsidebar-mobile-scroll.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsidebar-mobile-scroll.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsidebar-mobile-scroll.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,7 +1,7 @@\n // This test ensures that the mobile sidebar preserves scroll position.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n // Switching to \"mobile view\" by reducing the width to 600px.\n-size: (700, 600)\n+set-window-size: (700, 600)\n assert-css: (\".sidebar\", {\"display\": \"block\", \"left\": \"-1000px\"})\n \n // Scroll down.\n@@ -27,5 +27,5 @@ assert-window-property: {\"pageYOffset\": \"622\"}\n click: \".sidebar-menu-toggle\"\n wait-for-css: (\".sidebar\", {\"left\": \"0px\"})\n assert-window-property: {\"pageYOffset\": \"0\"}\n-size: (900, 600)\n+set-window-size: (900, 600)\n assert-window-property: {\"pageYOffset\": \"622\"}"}, {"sha": "3b022c7e9d04029f921e49a707d3ae71077df881", "filename": "tests/rustdoc-gui/sidebar-mobile.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsidebar-mobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsidebar-mobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsidebar-mobile.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,9 +1,9 @@\n // This test ensure that the sidebar isn't \"hidden\" on mobile but instead moved out of the viewport.\n // This is especially important for devices for \"text-first\" content (like for users with\n // sight issues).\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n // Switching to \"mobile view\" by reducing the width to 600px.\n-size: (600, 600)\n+set-window-size: (600, 600)\n assert-css: (\".sidebar\", {\"display\": \"block\", \"left\": \"-1000px\"})\n // Opening the sidebar menu.\n click: \".sidebar-menu-toggle\"\n@@ -59,7 +59,7 @@ define-function: (\n     \"check-colors\",\n     (theme, color, background),\n     block {\n-        local-storage: {\"rustdoc-use-system-theme\": \"false\", \"rustdoc-theme\": |theme|}\n+        set-local-storage: {\"rustdoc-use-system-theme\": \"false\", \"rustdoc-theme\": |theme|}\n         reload:\n \n         // Open the sidebar menu."}, {"sha": "f34e30b724da8642d61252aaeba0c8452b4b91c0", "filename": "tests/rustdoc-gui/sidebar-source-code-display.goml", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsidebar-source-code-display.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsidebar-source-code-display.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsidebar-source-code-display.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,6 +1,6 @@\n // This test ensures that the elements in the sidebar are displayed correctly.\n javascript: false\n-goto: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n // Since the javascript is disabled, there shouldn't be a toggle.\n assert-false: \"#src-sidebar-toggle\"\n wait-for-css: (\".sidebar\", {\"display\": \"none\"})\n@@ -22,7 +22,7 @@ wait-for-css: (\"#src-sidebar-toggle\", {\"visibility\": \"visible\"})\n wait-for-css: (\".sidebar\", {\"width\": \"300px\"})\n assert-local-storage: {\"rustdoc-source-sidebar-show\": \"true\"}\n click: \".sidebar a.selected\"\n-goto: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n wait-for-css: (\".sidebar\", {\"width\": \"300px\"})\n assert-local-storage: {\"rustdoc-source-sidebar-show\": \"true\"}\n \n@@ -36,7 +36,7 @@ define-function: (\n         background_toggle_hover,\n     ),\n     block {\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n         wait-for-css: (\"#src-sidebar-toggle\", {\"visibility\": \"visible\"})\n         assert-css: (\n@@ -148,7 +148,7 @@ call-function: (\"check-colors\", {\n })\n \n // Now checking on mobile devices.\n-size: (500, 700)\n+set-window-size: (500, 700)\n reload:\n // Waiting for the sidebar to be displayed...\n wait-for-css: (\"#src-sidebar-toggle\", {\"visibility\": \"visible\"})\n@@ -184,13 +184,13 @@ wait-for-css: (\".sidebar\", {\"left\": \"-1000px\"})\n assert-window-property: {\"pageYOffset\": \"2542\"}\n \n // We now check that the scroll position is restored if the window is resized.\n-size: (500, 700)\n+set-window-size: (500, 700)\n click: \"#src-sidebar-toggle\"\n wait-for-css: (\"#source-sidebar\", {\"visibility\": \"visible\"})\n assert-window-property: {\"pageYOffset\": \"0\"}\n-size: (900, 900)\n+set-window-size: (900, 900)\n assert-window-property: {\"pageYOffset\": \"2542\"}\n-size: (500, 700)\n+set-window-size: (500, 700)\n click: \"#src-sidebar-toggle\"\n wait-for-css: (\"#source-sidebar\", {\"visibility\": \"hidden\"})\n \n@@ -203,11 +203,11 @@ click: \"#src-sidebar-toggle\"\n wait-for-css: (\"#source-sidebar\", {\"visibility\": \"visible\"})\n assert-local-storage: {\"rustdoc-source-sidebar-show\": \"true\"}\n click: \".sidebar a.selected\"\n-goto: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n wait-for-css: (\"#source-sidebar\", {\"visibility\": \"hidden\"})\n assert-local-storage: {\"rustdoc-source-sidebar-show\": \"false\"}\n // Resize back to desktop size, to check that the sidebar doesn't spontaneously open.\n-size: (1000, 1000)\n+set-window-size: (1000, 1000)\n wait-for-css: (\"#source-sidebar\", {\"visibility\": \"hidden\"})\n assert-local-storage: {\"rustdoc-source-sidebar-show\": \"false\"}\n click: \"#src-sidebar-toggle\""}, {"sha": "96ea7202433c5289150c50a2b92e1944f234bc9a", "filename": "tests/rustdoc-gui/sidebar-source-code.goml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsidebar-source-code.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsidebar-source-code.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsidebar-source-code.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,14 +1,14 @@\n // The goal of this test is to ensure that the sidebar is working as expected in the source\n // code pages.\n-goto: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n show-text: true\n \n // First, check the sidebar colors.\n define-function: (\n     \"check-colors\",\n     (theme, color, background_color),\n     block {\n-        local-storage: {\n+        set-local-storage: {\n             \"rustdoc-theme\": |theme|,\n             \"rustdoc-use-system-theme\": \"false\",\n         }\n@@ -47,7 +47,7 @@ call-function: (\n )\n \n // Next, desktop mode layout.\n-size: (1100, 800)\n+set-window-size: (1100, 800)\n // We check that the sidebar isn't expanded and has the expected width.\n assert-css: (\"nav.sidebar\", {\"width\": \"50px\"})\n // We now click on the button to expand the sidebar.\n@@ -62,7 +62,7 @@ wait-for: \"html:not(.expanded)\"\n assert: \"nav.sidebar\"\n \n // Checking that only the path to the current file is \"open\".\n-goto: \"file://\" + |DOC_PATH| + \"/src/lib2/another_folder/sub_mod/mod.rs.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/src/lib2/another_folder/sub_mod/mod.rs.html\"\n // First we expand the sidebar again.\n click: (10, 10)\n // We wait for the sidebar to be expanded.\n@@ -76,7 +76,7 @@ assert: \"//*[@class='dir-entry' and not(@open)]/*[text()='another_mod']\"\n assert-count: (\"//*[@id='source-sidebar']/details[not(text()='lib2') and not(@open)]\", 8)\n \n // We now switch to mobile mode.\n-size: (600, 600)\n+set-window-size: (600, 600)\n wait-for-css: (\".source-sidebar-expanded nav.sidebar\", {\"left\": \"0px\"})\n // We collapse the sidebar.\n click: (10, 10)"}, {"sha": "3c1ed009a334291d5ac5b8f2a49e0e349f736b0c", "filename": "tests/rustdoc-gui/sidebar.goml", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsidebar.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsidebar.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsidebar.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // Checks multiple things on the sidebar display (width of its elements, colors, etc).\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n assert-property: (\".sidebar\", {\"clientWidth\": \"200\"})\n show-text: true\n \n@@ -8,7 +8,7 @@ define-function: (\n     \"check-colors\",\n     (theme, color, background_color),\n     block {\n-        local-storage: {\n+        set-local-storage: {\n             \"rustdoc-theme\": |theme|,\n             \"rustdoc-use-system-theme\": \"false\",\n         }\n@@ -46,7 +46,7 @@ call-function: (\n     }\n )\n \n-local-storage: {\"rustdoc-theme\": \"light\"}\n+set-local-storage: {\"rustdoc-theme\": \"light\"}\n // We reload the page so the local storage settings are being used.\n reload:\n \n@@ -86,13 +86,13 @@ click: \".sidebar h2.location a\"\n assert-property: (\"html\", {\"scrollTop\": \"0\"})\n \n // We now go back to the crate page to click on the \"lib2\" crate link.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n assert-property: (\".sidebar\", {\"clientWidth\": \"200\"})\n assert-css: (\".sidebar-elems ul.crate > li:first-child > a\", {\"color\": \"rgb(53, 109, 164)\"})\n click: \".sidebar-elems ul.crate > li:first-child > a\"\n \n // PAGE: lib2/index.html\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/index.html\"\n assert-property: (\".sidebar\", {\"clientWidth\": \"200\"})\n assert-text: (\".sidebar > .location\", \"Crate lib2\")\n // We check that we have the crates list and that the \"current\" on is now \"lib2\".\n@@ -115,13 +115,13 @@ assert-text: (\".sidebar .sidebar-elems h2\", \"In lib2\")\n // We check that we don't have the crate list.\n assert-false: \".sidebar-elems > .crate\"\n \n-goto: \"./module/index.html\"\n+go-to: \"./module/index.html\"\n assert-property: (\".sidebar\", {\"clientWidth\": \"200\"})\n assert-text: (\".sidebar > .location\", \"Module module\")\n // We check that we don't have the crate list.\n assert-false: \".sidebar-elems > .crate\"\n \n-goto: \"./sub_module/sub_sub_module/index.html\"\n+go-to: \"./sub_module/sub_sub_module/index.html\"\n assert-property: (\".sidebar\", {\"clientWidth\": \"200\"})\n assert-text: (\".sidebar > .location\", \"Module sub_sub_module\")\n // We check that we don't have the crate list.\n@@ -130,13 +130,13 @@ assert-text: (\".sidebar-elems > section ul > li:nth-child(1)\", \"Functions\")\n assert-text: (\"#functions + .item-table .item-name > a\", \"foo\")\n \n // Links to trait implementations in the sidebar should not wrap even if they are long.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/struct.HasALongTraitWithParams.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/struct.HasALongTraitWithParams.html\"\n assert-property: (\".sidebar\", {\"clientWidth\": \"200\"})\n assert-property: (\".sidebar-elems section .block li > a\", {\"offsetHeight\": 29})\n \n // Test that clicking on of the \"In <module>\" headings in the sidebar links to the\n // appropriate anchor in index.html.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n assert-property: (\".sidebar\", {\"clientWidth\": \"200\"})\n click: \"//ul[@class='block mod']/preceding-sibling::h3/a\"\n // PAGE: index.html\n@@ -151,12 +151,12 @@ assert-text: (\"#toggle-all-docs\", \"[\u2212]\")\n assert-property: (\".sidebar\", {\"clientWidth\": \"200\"})\n \n // Checks that all.html and index.html have their sidebar link in the same place.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n store-property: (index_sidebar_width, \".sidebar .location a\", \"clientWidth\")\n store-property: (index_sidebar_height, \".sidebar .location a\", \"clientHeight\")\n store-property: (index_sidebar_x, \".sidebar .location a\", \"offsetTop\")\n store-property: (index_sidebar_y, \".sidebar .location a\", \"offsetLeft\")\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/all.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/all.html\"\n assert-property: (\".sidebar .location a\", {\n     \"clientWidth\": |index_sidebar_width|,\n     \"clientHeight\": |index_sidebar_height|,"}, {"sha": "3d88d5619b19b0d2345eee5d5fff38cb0e824854", "filename": "tests/rustdoc-gui/source-anchor-scroll.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsource-anchor-scroll.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsource-anchor-scroll.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsource-anchor-scroll.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,9 +1,9 @@\n // We check that when the anchor changes and is output of the displayed content,\n // the page is scrolled to it.\n-goto: \"file://\" + |DOC_PATH| + \"/src/link_to_definition/lib.rs.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/src/link_to_definition/lib.rs.html\"\n \n // We reduce the window size to make it easier to make an element \"out of the page\".\n-size: (600, 800)\n+set-window-size: (600, 800)\n // We check that the scroll is at the top first.\n assert-property: (\"html\", {\"scrollTop\": \"0\"})\n "}, {"sha": "35f338ea32834ee0d80c80da0aa9106dcb2facc7", "filename": "tests/rustdoc-gui/source-code-page-code-scroll.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsource-code-page-code-scroll.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsource-code-page-code-scroll.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsource-code-page-code-scroll.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,6 +1,6 @@\n // Checks that the scrollbar is visible on the page rather than the code block.\n-goto: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n-size: (800, 1000)\n+go-to: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n+set-window-size: (800, 1000)\n // \"scrollWidth\" should be superior than \"clientWidth\".\n assert-property: (\"body\", {\"scrollWidth\": 1047, \"clientWidth\": 800})\n "}, {"sha": "1ac403308eb9b3585bd27aa37fd7bcc4bc1dbca1", "filename": "tests/rustdoc-gui/source-code-page.goml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsource-code-page.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsource-code-page.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsource-code-page.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // Checks that the interactions with the source code pages are working as expected.\n-goto: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n show-text: true\n // Check that we can click on the line number.\n click: \".src-line-numbers > a:nth-child(4)\" // This is the anchor for line 4.\n@@ -12,7 +12,7 @@ reload:\n assert-attribute: (\"//*[@id='4']\", {\"class\": \"line-highlighted\"})\n assert-css: (\"//*[@id='4']\", {\"border-right-width\": \"0px\"})\n // We now check that the good anchors are highlighted\n-goto: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html#4-6\"\n+go-to: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html#4-6\"\n assert-attribute-false: (\".src-line-numbers > a:nth-child(3)\", {\"class\": \"line-highlighted\"})\n assert-attribute: (\".src-line-numbers > a:nth-child(4)\", {\"class\": \"line-highlighted\"})\n assert-attribute: (\".src-line-numbers > a:nth-child(5)\", {\"class\": \"line-highlighted\"})\n@@ -23,7 +23,7 @@ define-function: (\n     \"check-colors\",\n     (theme, color, background_color, highlight_color, highlight_background_color),\n     block {\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n         assert-css: (\n             \".src-line-numbers > a:not(.line-highlighted)\",\n@@ -87,7 +87,7 @@ assert-css: (\".src-line-numbers\", {\"text-align\": \"right\"})\n \n // Now let's check that clicking on something else than the line number doesn't\n // do anything (and certainly not add a `#NaN` to the URL!).\n-goto: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n // We use this assert-position to know where we will click.\n assert-position: (\"//*[@id='1']\", {\"x\": 88, \"y\": 112})\n // We click on the left of the \"1\" anchor but still in the \"src-line-number\" `<pre>`.\n@@ -175,7 +175,7 @@ assert-property: (\"#main-content\", {\"offsetTop\": 90})\n // 28 = 90 - 34 - 28\n \n // Now do the same check on moderately-sized, tablet mobile.\n-size: (700, 700)\n+set-window-size: (700, 700)\n assert-css: (\"nav.sub\", {\"flex-direction\": \"row\"})\n assert-property: (\"nav.sub form\", {\"offsetTop\": 21, \"offsetHeight\": 34})\n assert-property: (\"#main-content\", {\"offsetTop\": 76})\n@@ -198,7 +198,7 @@ call-function: (\"check-sidebar-dir-entry\", {\n })\n \n // Tiny, phone mobile gets a different display where the logo is stacked on top.\n-size: (450, 700)\n+set-window-size: (450, 700)\n assert-css: (\"nav.sub\", {\"flex-direction\": \"column\"})\n \n // Check the sidebar directory entries have a marker and spacing (phone)."}, {"sha": "790aeba529c5c7e12d9793dfe7fd0e382e539eeb", "filename": "tests/rustdoc-gui/src-font-size.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsrc-font-size.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fsrc-font-size.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsrc-font-size.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,7 +1,7 @@\n // This test ensures that the \"[src]\" have the same font size as their headers\n // to avoid having some weird height difference in the background when the element\n // is selected.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n show-text: true\n // Check the impl headers.\n assert-css: (\".impl .srclink\", {\"font-size\": \"16px\", \"font-weight\": 400}, ALL)"}, {"sha": "e23404188714b47fb15eedd416eebf4265c2e590", "filename": "tests/rustdoc-gui/stab-badge.goml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fstab-badge.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fstab-badge.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fstab-badge.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,20 +1,20 @@\n // All stability badges should have rounded corners and colored backgrounds.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n show-text: true\n define-function: (\n     \"check-badge\",\n     (theme, background, color),\n     block {\n-        local-storage: {\"rustdoc-use-system-theme\": \"false\", \"rustdoc-theme\": |theme|}\n-        goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+        set-local-storage: {\"rustdoc-use-system-theme\": \"false\", \"rustdoc-theme\": |theme|}\n+        go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n         assert: \".docblock .stab\"\n         assert: \".item-table .stab\"\n         assert-css: (\".stab\", {\n             \"border-radius\": \"3px\",\n             \"color\": |color|,\n             \"background-color\": |background|,\n         })\n-        goto: \"file://\" + |DOC_PATH| + \"/test_docs/fn.replaced_function.html\"\n+        go-to: \"file://\" + |DOC_PATH| + \"/test_docs/fn.replaced_function.html\"\n         assert: (\".item-info .stab\")\n         assert-css: (\".stab\", {\n             \"border-radius\": \"3px\","}, {"sha": "da0467de13ace8a8bbc8c343ceceb09600d0d71c", "filename": "tests/rustdoc-gui/struct-fields.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fstruct-fields.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fstruct-fields.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fstruct-fields.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This test ensures that each field is on its own line (In other words, they have display: block).\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.StructWithPublicUndocumentedFields.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.StructWithPublicUndocumentedFields.html\"\n \n store-property: (first_top, \"//*[@id='structfield.first']\", \"offsetTop\")\n assert-property-false: (\"//*[@id='structfield.second']\", { \"offsetTop\": |first_top| })"}, {"sha": "0c514fc686420d1f351136693df3ebbb574b6f41", "filename": "tests/rustdoc-gui/target.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftarget.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftarget.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftarget.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // Check that the targetted element has the expected styles.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/struct.Foo.html#method.a_method\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/struct.Foo.html#method.a_method\"\n show-text: true\n \n // Confirming that the method is the target.\n@@ -9,7 +9,7 @@ define-function: (\n     \"check-style\",\n     (theme, background, border),\n     block {\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         reload:\n         assert-css: (\"#method\\.a_method:target\", {\n             \"background-color\": |background|,"}, {"sha": "ae6947213897eac94bc12676b1d391ad34de20a2", "filename": "tests/rustdoc-gui/theme-change.goml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftheme-change.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftheme-change.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftheme-change.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,6 +1,6 @@\n // Ensures that the theme change is working as expected.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n-local-storage: {\"rustdoc-use-system-theme\": \"false\", \"rustdoc-theme\": \"dark\"}\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+set-local-storage: {\"rustdoc-use-system-theme\": \"false\", \"rustdoc-theme\": \"dark\"}\n reload:\n \n store-value: (background_light, \"rgb(255, 255, 255)\")\n@@ -22,11 +22,11 @@ click: \"#theme-dark\"\n wait-for-css: (\"body\", { \"background-color\": |background_dark| })\n assert-local-storage: { \"rustdoc-theme\": \"dark\" }\n \n-local-storage: {\n+set-local-storage: {\n     \"rustdoc-preferred-light-theme\": \"light\",\n     \"rustdoc-preferred-dark-theme\": \"light\",\n }\n-goto: \"file://\" + |DOC_PATH| + \"/settings.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/settings.html\"\n \n wait-for: \"#settings\"\n click: \"#theme-light\""}, {"sha": "2cc5d716cfefe618671c8cca4964dc9257eff99e", "filename": "tests/rustdoc-gui/theme-defaults.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftheme-defaults.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftheme-defaults.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftheme-defaults.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // Ensure that the theme picker always starts with the actual defaults.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n click: \"#settings-menu\"\n wait-for: \"#theme-system-preference\"\n assert: \"#theme-system-preference:checked\"\n@@ -9,13 +9,13 @@ assert-false: \"#preferred-dark-theme-ayu:checked\"\n \n // Test legacy migration from old theme setup without system-preference matching.\n // See https://github.com/rust-lang/rust/pull/77809#issuecomment-707875732\n-local-storage: {\n+set-local-storage: {\n     \"rustdoc-preferred-light-theme\": null,\n     \"rustdoc-preferred-dark-theme\": null,\n     \"rustdoc-use-system-theme\": null,\n     \"rustdoc-theme\": \"ayu\"\n }\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n click: \"#settings-menu\"\n wait-for: \"#theme-system-preference\"\n assert: \"#theme-system-preference:checked\""}, {"sha": "8fcd0ecd3094b215292f55fd5e5ac1d794b5fc71", "filename": "tests/rustdoc-gui/theme-in-history.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftheme-in-history.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftheme-in-history.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftheme-in-history.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,7 +1,7 @@\n // Ensures that the theme is working when going back in history.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n // Set the theme to dark.\n-local-storage: {\n+set-local-storage: {\n     \"rustdoc-theme\": \"dark\",\n     \"rustdoc-use-system-theme\": \"false\",\n }\n@@ -11,7 +11,7 @@ assert-css: (\"body\", { \"background-color\": \"rgb(53, 53, 53)\" })\n assert-local-storage: { \"rustdoc-theme\": \"dark\" }\n \n // Now we go to the settings page.\n-goto: \"file://\" + |DOC_PATH| + \"/settings.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/settings.html\"\n wait-for: \"#settings\"\n // We change the theme to \"light\".\n click: \"#theme-light\""}, {"sha": "f115f63ab6b182647cce5f7241dadda0cb79a82d", "filename": "tests/rustdoc-gui/toggle-click-deadspace.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftoggle-click-deadspace.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftoggle-click-deadspace.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftoggle-click-deadspace.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,6 +1,6 @@\n // This test ensures that clicking on a method summary, but not on the \"[-]\",\n // doesn't toggle the <details>.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/struct.Foo.html\"\n assert-attribute: (\".impl-items .toggle\", {\"open\": \"\"})\n click: \"h4.code-header\" // This is the position of \"pub\" in \"pub fn a_method\"\n assert-attribute: (\".impl-items .toggle\", {\"open\": \"\"})"}, {"sha": "b69aa6e30ca0b37475875820a490b99b857c7528", "filename": "tests/rustdoc-gui/toggle-docs-mobile.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftoggle-docs-mobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftoggle-docs-mobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftoggle-docs-mobile.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,7 +1,7 @@\n // Checks that the documentation toggles on mobile have the correct position, style and work\n // as expected.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n-size: (433, 600)\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+set-window-size: (433, 600)\n assert-attribute: (\".top-doc\", {\"open\": \"\"})\n click: (4, 270) // This is the position of the top doc comment toggle\n assert-attribute-false: (\".top-doc\", {\"open\": \"\"})\n@@ -22,7 +22,7 @@ assert-position: (\n )\n \n // Now we do the same but with a little bigger width\n-size: (600, 600)\n+set-window-size: (600, 600)\n assert-attribute: (\".top-doc\", {\"open\": \"\"})\n click: (4, 270) // New Y position since all search elements are back on one line.\n assert-attribute-false: (\".top-doc\", {\"open\": \"\"})"}, {"sha": "9ea6d9b18f4c7405f72e8d00dd1912881208ef48", "filename": "tests/rustdoc-gui/toggle-docs.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftoggle-docs.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftoggle-docs.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftoggle-docs.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // Checks that the documentation toggles have the correct position, style and work as expected.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n assert-attribute: (\"#main-content > details.top-doc\", {\"open\": \"\"})\n assert-text: (\"#toggle-all-docs\", \"[\u2212]\")\n click: \"#toggle-all-docs\"\n@@ -17,7 +17,7 @@ wait-for-attribute: (\"#main-content > details.top-doc\", {\"open\": \"\"})\n assert-text: (\"#toggle-all-docs\", \"[\u2212]\")\n \n // Check that it works on non-module pages as well.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n // We first check that everything is visible.\n assert-text: (\"#toggle-all-docs\", \"[\u2212]\")\n assert-attribute: (\"#implementations-list details.toggle\", {\"open\": \"\"}, ALL)\n@@ -52,7 +52,7 @@ define-function: (\n     (theme, filter),\n     block {\n         // Setting the theme.\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         // We reload the page so the local storage settings are being used.\n         reload:\n "}, {"sha": "c4056275d3e1e034bf8cdda3c1ddd79f847db3a8", "filename": "tests/rustdoc-gui/toggle-implementors.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftoggle-implementors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftoggle-implementors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftoggle-implementors.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,4 +1,4 @@\n // This test ensures that the implementors toggle are not open by default.\n-goto: \"file://\" + |DOC_PATH| + \"/implementors/trait.Whatever.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/implementors/trait.Whatever.html\"\n \n assert-attribute-false: (\"#implementors-list > details\", {\"open\": \"\"}, ALL)"}, {"sha": "238205dd4df8198fed2b6f2ca1237d305dbd5471", "filename": "tests/rustdoc-gui/toggled-open-implementations.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftoggled-open-implementations.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftoggled-open-implementations.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftoggled-open-implementations.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // This tests that the \"implementations\" section on struct/enum pages\n // has all the implementations toggled open by default, so users can\n // find method names in those implementations with Ctrl-F.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n assert-attribute: (\".toggle.implementors-toggle\", {\"open\": \"\"})"}, {"sha": "9330ef040ec9ea65fc36a7a1af6fad0daeb24e0f", "filename": "tests/rustdoc-gui/trait-sidebar-item-order.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftrait-sidebar-item-order.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftrait-sidebar-item-order.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftrait-sidebar-item-order.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -4,7 +4,7 @@\n // doesn't exist.\n fail-on-request-error: false\n \n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/trait.AnotherOne.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/trait.AnotherOne.html\"\n assert-text: (\".sidebar-elems section .block li:nth-of-type(1) > a\", \"another\")\n assert-text: (\".sidebar-elems section .block li:nth-of-type(2) > a\", \"func1\")\n assert-text: (\".sidebar-elems section .block li:nth-of-type(3) > a\", \"func2\")"}, {"sha": "e8e42e4004b4aa2a53b4819366a4f59e19fefae9", "filename": "tests/rustdoc-gui/type-declation-overflow.goml", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftype-declation-overflow.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Ftype-declation-overflow.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Ftype-declation-overflow.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -6,20 +6,20 @@\n // doesn't exist.\n fail-on-request-error: false\n \n-goto: \"file://\" + |DOC_PATH| + \"/lib2/long_trait/trait.ALongNameBecauseItHelpsTestingTheCurrentProblem.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/long_trait/trait.ALongNameBecauseItHelpsTestingTheCurrentProblem.html\"\n // We set a fixed size so there is no chance of \"random\" resize.\n-size: (1100, 800)\n+set-window-size: (1100, 800)\n // Logically, the <body> scroll width should be the width of the window.\n assert-property: (\"body\", {\"scrollWidth\": \"1100\"})\n // However, since there is overflow in the type declaration, its scroll width is bigger.\n assert-property: (\"pre.item-decl\", {\"scrollWidth\": \"1324\"})\n \n // In the table-ish view on the module index, the name should not be wrapped more than necessary.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/too_long/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/too_long/index.html\"\n assert-property: (\".item-table .struct\", {\"offsetWidth\": \"684\"})\n \n // We now make the same check on type declaration...\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/too_long/type.ReallyLongTypeNameLongLongLong.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/too_long/type.ReallyLongTypeNameLongLongLong.html\"\n assert-property: (\"body\", {\"scrollWidth\": \"1100\"})\n // We now check that the section width hasn't grown because of it.\n assert-property: (\"#main-content\", {\"scrollWidth\": \"840\"})\n@@ -28,49 +28,49 @@ assert-property: (\"pre.item-decl\", {\"scrollWidth\": \"1103\"})\n \n // ... and constant.\n // On a sidenote, it also checks that the (very) long title isn't changing the docblock width.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/too_long/constant.ReallyLongTypeNameLongLongLongConstBecauseWhyNotAConstRightGigaGigaSupraLong.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/too_long/constant.ReallyLongTypeNameLongLongLongConstBecauseWhyNotAConstRightGigaGigaSupraLong.html\"\n assert-property: (\"body\", {\"scrollWidth\": \"1100\"})\n // We now check that the section width hasn't grown because of it.\n assert-property: (\"#main-content\", {\"scrollWidth\": \"840\"})\n // And now checking that it has scrollable content.\n assert-property: (\"pre.item-decl\", {\"scrollWidth\": \"950\"})\n \n // On mobile:\n-size: (600, 600)\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/too_long/struct.SuperIncrediblyLongLongLongLongLongLongLongGigaGigaGigaMegaLongLongLongStructName.html\"\n+set-window-size: (600, 600)\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/too_long/struct.SuperIncrediblyLongLongLongLongLongLongLongGigaGigaGigaMegaLongLongLongStructName.html\"\n // It shouldn't have an overflow in the topbar either.\n store-property: (scrollWidth, \".mobile-topbar h2\", \"scrollWidth\")\n assert-property: (\".mobile-topbar h2\", {\"clientWidth\": |scrollWidth|})\n assert-css: (\".mobile-topbar h2\", {\"overflow-x\": \"hidden\"})\n \n // Check wrapping for top main-heading h1 and out-of-band.\n // On desktop, they wrap when too big.\n-size: (1100, 800)\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/too_long/struct.SuperIncrediblyLongLongLongLongLongLongLongGigaGigaGigaMegaLongLongLongStructName.html\"\n+set-window-size: (1100, 800)\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/too_long/struct.SuperIncrediblyLongLongLongLongLongLongLongGigaGigaGigaMegaLongLongLongStructName.html\"\n compare-elements-position-false: (\".main-heading h1\", \".main-heading .out-of-band\", (\"y\"))\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/index.html\"\n compare-elements-position: (\".main-heading h1\", \".main-heading .out-of-band\", (\"y\"))\n // make sure there is a gap between them\n compare-elements-position-near-false: (\".main-heading h1\", \".main-heading .out-of-band\", {\"x\": 550})\n \n // On mobile, they always wrap.\n-size: (600, 600)\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/too_long/struct.SuperIncrediblyLongLongLongLongLongLongLongGigaGigaGigaMegaLongLongLongStructName.html\"\n+set-window-size: (600, 600)\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/too_long/struct.SuperIncrediblyLongLongLongLongLongLongLongGigaGigaGigaMegaLongLongLongStructName.html\"\n compare-elements-position-false: (\".main-heading h1\", \".main-heading .out-of-band\", (\"y\"))\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/index.html\"\n compare-elements-position-false: (\".main-heading h1\", \".main-heading .out-of-band\", (\"y\"))\n \n // Now we will check that the scrolling is working.\n // First on an item with \"hidden methods\".\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/scroll_traits/trait.Iterator.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/scroll_traits/trait.Iterator.html\"\n \n click: \".item-decl .type-contents-toggle\"\n assert-property: (\"pre.item-decl\", {\"scrollLeft\": 0})\n scroll-to: \"//*[@class='rust item-decl']//details/a[text()='String']\"\n assert-property-false: (\"pre.item-decl\", {\"scrollLeft\": 0})\n \n // Then on an item without \"hidden methods\".\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/scroll_traits/trait.TraitWithLongItemsName.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/scroll_traits/trait.TraitWithLongItemsName.html\"\n assert-property: (\"pre.item-decl\", {\"scrollLeft\": 0})\n scroll-to: \"//*[@class='rust item-decl']//code/a[text()='String']\"\n assert-property-false: (\"pre.item-decl\", {\"scrollLeft\": 0})"}, {"sha": "51007b653d97de353121a151703e3b683cfb34d9", "filename": "tests/rustdoc-gui/unsafe-fn.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Funsafe-fn.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Funsafe-fn.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Funsafe-fn.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,5 +1,5 @@\n // Check position and color of the `<sup>` for unsafe elements.\n-goto: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/test_docs/index.html\"\n // If the text isn't displayed, the browser doesn't compute color style correctly...\n show-text: true\n \n@@ -16,7 +16,7 @@ define-function: (\n     (theme, color),\n     block {\n         // Set the theme.\n-        local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n+        set-local-storage: {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}\n         // We reload the page so the local storage settings are being used.\n         reload:\n         assert-css: (\".item-name sup\", {\"color\": |color|})"}, {"sha": "69e6c3356a405c8fc83ab06d7924c768ac125bc3", "filename": "tests/rustdoc-gui/where-whitespace.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fwhere-whitespace.goml", "raw_url": "https://github.com/rust-lang/rust/raw/e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c/tests%2Frustdoc-gui%2Fwhere-whitespace.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fwhere-whitespace.goml?ref=e7271f4b92ce3cbc1bb3ae5081d8c61d5ea63c8c", "patch": "@@ -1,15 +1,15 @@\n // This test ensures that the where conditions are correctly displayed.\n-goto: \"file://\" + |DOC_PATH| + \"/lib2/trait.Whitespace.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/trait.Whitespace.html\"\n show-text: true\n // First, we check in the trait definition if the where clause is \"on its own\" (not on the same\n // line than \"pub trait Whitespace<Idx>\").\n compare-elements-position-false: (\".item-decl code\", \".where.fmt-newline\", (\"y\"))\n // And that the code following it isn't on the same line either.\n compare-elements-position-false: (\".item-decl .fn\", \".where.fmt-newline\", (\"y\"))\n \n-goto: \"file://\" + |DOC_PATH| + \"/lib2/struct.WhereWhitespace.html\"\n+go-to: \"file://\" + |DOC_PATH| + \"/lib2/struct.WhereWhitespace.html\"\n // We make the screen a bit wider to ensure that the trait impl is on one line.\n-size: (915, 915)\n+set-window-size: (915, 915)\n \n compare-elements-position-false: (\"#method\\.new .fn\", \"#method\\.new .where.fmt-newline\", (\"y\"))\n // We ensure that both the trait name and the struct name are on the same line in"}]}