{"sha": "2f353d1f72771183a32634593b1debf929903f41", "node_id": "C_kwDOAAsO6NoAKDJmMzUzZDFmNzI3NzExODNhMzI2MzQ1OTNiMWRlYmY5Mjk5MDNmNDE", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-04T12:58:37Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-04T14:27:01Z"}, "message": "Add more debug calls", "tree": {"sha": "9b1574382c9a05504b41817f9a85be196a34714d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b1574382c9a05504b41817f9a85be196a34714d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f353d1f72771183a32634593b1debf929903f41", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmLr1zUACgkQgTGiTgx5\n76//zA/8CIHwj1nKrBrMYn0uMzxDsL+13YVqIJxFdDP6e5BifbH0bWYahCwvEVw9\nTaTINJtHYSOcQOflkO2pUaK1KiJ9XVfKv5ePatwAvWMJg1Qs8r4gAiZcbiz2kbqi\n6KvqfRtKtV36NlgYFmwyhFyxs/j0vzpTmIEc2wAYBZKWlLVjM1wX3mngcy8cdIAx\n40L8CFEXqTUAQ1aogxcLsh7WnkvoXPYPWqgMfASL2p8Rb5YQE5Pto2IWPRdeOw59\nXYaassH164oJ0XrhNedczpM3gZEMB2VjF7q8uNXTpTnRtcQKt13FirPMzyUx9uVX\nLkkC5HtkN9flDOrEp2bsJD6MIgxCiiT8M5A1sVju8zdySns6iotO2Faor7QASM34\nNus2CxbQ0R7ZLMMMYJ8bPdvdnTF73W3NAPoJ2CDwRz2fFu1/BHpdqwc6YdyGa92l\nqyhazN62eUKM65pOjEcJB4y0VEkqvhztLx0/de6T+CsJWcjkQCWSGEYokZEYqx8t\nKxEld5Q8LnHvvlYb8I2YpcN8YPLnMgiWzrngu07+WJylEdO/Rmxop4eJI1Te6+K9\nnwlF9nx+/FgGQAWGhLXq/btJaUeua1+Ws6a6EOXirqSVbOyEFgGinfhBdMCU5b7l\nm6HHPgdmv8EqwrZrgxOjFwYc2MqosLWckmYzsnBPPv4Mb6w2Zsw=\n=ai0l\n-----END PGP SIGNATURE-----", "payload": "tree 9b1574382c9a05504b41817f9a85be196a34714d\nparent cab67404a4b7ffbf5c323d663c20069c73316950\nauthor Santiago Pastorino <spastorino@gmail.com> 1659617917 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1659623221 -0300\n\nAdd more debug calls\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f353d1f72771183a32634593b1debf929903f41", "html_url": "https://github.com/rust-lang/rust/commit/2f353d1f72771183a32634593b1debf929903f41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f353d1f72771183a32634593b1debf929903f41/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cab67404a4b7ffbf5c323d663c20069c73316950", "url": "https://api.github.com/repos/rust-lang/rust/commits/cab67404a4b7ffbf5c323d663c20069c73316950", "html_url": "https://github.com/rust-lang/rust/commit/cab67404a4b7ffbf5c323d663c20069c73316950"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "037665f1e241b1104319c03378570ab7c1bbb83c", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2f353d1f72771183a32634593b1debf929903f41/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f353d1f72771183a32634593b1debf929903f41/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=2f353d1f72771183a32634593b1debf929903f41", "patch": "@@ -1395,6 +1395,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         let opaque_ty_span = self.mark_span_with_reason(DesugaringKind::OpaqueTy, span, None);\n \n         let opaque_ty_def_id = self.local_def_id(opaque_ty_node_id);\n+        debug!(?opaque_ty_def_id);\n \n         // Contains the new lifetime definitions created for the TAIT (if any).\n         let mut collected_lifetimes = Vec::new();\n@@ -1454,11 +1455,12 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                         }\n                     },\n                 ));\n-                debug!(\"lower_opaque_impl_trait: lifetime_defs={:#?}\", lifetime_defs);\n+                debug!(?lifetime_defs);\n \n                 // Then when we lower the param bounds, references to 'a are remapped to 'a1, so we\n                 // get back Debug + 'a1, which is suitable for use on the TAIT.\n                 let hir_bounds = lctx.lower_param_bounds(bounds, itctx);\n+                debug!(?hir_bounds);\n \n                 let opaque_ty_item = hir::OpaqueTy {\n                     generics: self.arena.alloc(hir::Generics {\n@@ -1471,8 +1473,8 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                     bounds: hir_bounds,\n                     origin,\n                 };\n+                debug!(?opaque_ty_item);\n \n-                trace!(\"lower_opaque_impl_trait: {:#?}\", opaque_ty_def_id);\n                 lctx.generate_opaque_type(opaque_ty_def_id, opaque_ty_item, span, opaque_ty_span)\n             })\n         });\n@@ -1493,8 +1495,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                 let l = self.new_named_lifetime(lifetime.id, id, span, ident);\n                 hir::GenericArg::Lifetime(l)\n             }));\n-\n-        debug!(\"lower_opaque_impl_trait: lifetimes={:#?}\", lifetimes);\n+        debug!(?lifetimes);\n \n         // `impl Trait` now just becomes `Foo<'a, 'b, ..>`.\n         hir::TyKind::OpaqueDef(hir::ItemId { def_id: opaque_ty_def_id }, lifetimes)"}]}