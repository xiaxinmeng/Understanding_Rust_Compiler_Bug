{"sha": "c544e838de7a0f0c11c681aa0b29056bdee5cb55", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1NDRlODM4ZGU3YTBmMGMxMWM2ODFhYTBiMjkwNTZiZGVlNWNiNTU=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-05-13T04:24:49Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-05-13T04:24:49Z"}, "message": "Rebasing", "tree": {"sha": "c71a61cc1b9c9f380bfbf37a4ef897b298681f39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c71a61cc1b9c9f380bfbf37a4ef897b298681f39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c544e838de7a0f0c11c681aa0b29056bdee5cb55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c544e838de7a0f0c11c681aa0b29056bdee5cb55", "html_url": "https://github.com/rust-lang/rust/commit/c544e838de7a0f0c11c681aa0b29056bdee5cb55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c544e838de7a0f0c11c681aa0b29056bdee5cb55/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "103e52b1db92b9ac57dcebf5c5738ad5a45155ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/103e52b1db92b9ac57dcebf5c5738ad5a45155ad", "html_url": "https://github.com/rust-lang/rust/commit/103e52b1db92b9ac57dcebf5c5738ad5a45155ad"}], "stats": {"total": 28, "additions": 10, "deletions": 18}, "files": [{"sha": "0edbeb2d02ca4ccdb917b30b22d151d9f3229a68", "filename": "src/test/auxiliary/custom_derive_plugin.rs", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c544e838de7a0f0c11c681aa0b29056bdee5cb55/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c544e838de7a0f0c11c681aa0b29056bdee5cb55/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin.rs?ref=c544e838de7a0f0c11c681aa0b29056bdee5cb55", "patch": "@@ -19,7 +19,7 @@ extern crate rustc;\n \n use syntax::ast;\n use syntax::codemap::Span;\n-use syntax::ext::base::{Decorator, ExtCtxt, Annotatable};\n+use syntax::ext::base::{MultiDecorator, ExtCtxt, Annotatable};\n use syntax::ext::build::AstBuilder;\n use syntax::ext::deriving::generic::{cs_fold, TraitDef, MethodDef, combine_substructure};\n use syntax::ext::deriving::generic::ty::{Literal, LifetimeBounds, Path, borrowed_explicit_self};\n@@ -31,14 +31,14 @@ use rustc::plugin::Registry;\n pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_syntax_extension(\n         token::intern(\"derive_TotalSum\"),\n-        Decorator(box expand));\n+        MultiDecorator(box expand));\n }\n \n fn expand(cx: &mut ExtCtxt,\n           span: Span,\n           mitem: &ast::MetaItem,\n-          item: &ast::Item,\n-          push: &mut FnMut(P<ast::Item>)) {\n+          item: Annotatable,\n+          push: &mut FnMut(Annotatable)) {\n     let trait_def = TraitDef {\n         span: span,\n         attributes: vec![],\n@@ -70,13 +70,5 @@ fn expand(cx: &mut ExtCtxt,\n         ],\n     };\n \n-    trait_def.expand(cx,\n-                     mitem,\n-                     Annotatable::Item(P(item.clone())),\n-                     &mut |i| {\n-                        match i {\n-                            Annotatable::Item(i) => push(i),\n-                            _ => panic!(\"Not an item\")\n-                        }\n-                     })\n+    trait_def.expand(cx, mitem, &item, push)\n }"}, {"sha": "92963b2812dd8ef49bfb9dc617207869e08e3667", "filename": "src/test/auxiliary/custom_derive_plugin_attr.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c544e838de7a0f0c11c681aa0b29056bdee5cb55/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c544e838de7a0f0c11c681aa0b29056bdee5cb55/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcustom_derive_plugin_attr.rs?ref=c544e838de7a0f0c11c681aa0b29056bdee5cb55", "patch": "@@ -20,7 +20,7 @@ extern crate rustc;\n use syntax::ast;\n use syntax::attr::AttrMetaMethods;\n use syntax::codemap::Span;\n-use syntax::ext::base::{Decorator, ExtCtxt};\n+use syntax::ext::base::{MultiDecorator, ExtCtxt, Annotatable};\n use syntax::ext::build::AstBuilder;\n use syntax::ext::deriving::generic::{cs_fold, TraitDef, MethodDef, combine_substructure};\n use syntax::ext::deriving::generic::{Substructure, Struct, EnumMatching};\n@@ -33,14 +33,14 @@ use rustc::plugin::Registry;\n pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_syntax_extension(\n         token::intern(\"derive_TotalSum\"),\n-        Decorator(box expand));\n+        MultiDecorator(box expand));\n }\n \n fn expand(cx: &mut ExtCtxt,\n           span: Span,\n           mitem: &ast::MetaItem,\n-          item: &ast::Item,\n-          push: &mut FnMut(P<ast::Item>)) {\n+          item: Annotatable,\n+          push: &mut FnMut(Annotatable)) {\n     let trait_def = TraitDef {\n         span: span,\n         attributes: vec![],\n@@ -61,7 +61,7 @@ fn expand(cx: &mut ExtCtxt,\n         ],\n     };\n \n-    trait_def.expand(cx, mitem, item, push)\n+    trait_def.expand(cx, mitem, &item, push)\n }\n \n // Mostly copied from syntax::ext::deriving::hash"}]}