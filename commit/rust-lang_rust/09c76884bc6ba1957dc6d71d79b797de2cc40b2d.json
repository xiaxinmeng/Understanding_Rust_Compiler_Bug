{"sha": "09c76884bc6ba1957dc6d71d79b797de2cc40b2d", "node_id": "C_kwDOAAsO6NoAKDA5Yzc2ODg0YmM2YmExOTU3ZGM2ZDcxZDc5Yjc5N2RlMmNjNDBiMmQ", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-10-06T18:06:33Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-10-06T19:22:56Z"}, "message": "Simplify AttributesExt::cfg function and remove error emissions since they are not useful", "tree": {"sha": "5907782acf32122f2df333fea121d513a495bad4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5907782acf32122f2df333fea121d513a495bad4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09c76884bc6ba1957dc6d71d79b797de2cc40b2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09c76884bc6ba1957dc6d71d79b797de2cc40b2d", "html_url": "https://github.com/rust-lang/rust/commit/09c76884bc6ba1957dc6d71d79b797de2cc40b2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09c76884bc6ba1957dc6d71d79b797de2cc40b2d/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fac41a530d3add62464292066130c266a303258", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fac41a530d3add62464292066130c266a303258", "html_url": "https://github.com/rust-lang/rust/commit/8fac41a530d3add62464292066130c266a303258"}], "stats": {"total": 72, "additions": 45, "deletions": 27}, "files": [{"sha": "5b722175f988cd9928c051c43878d9d176a116ad", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 10, "deletions": 27, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/09c76884bc6ba1957dc6d71d79b797de2cc40b2d/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09c76884bc6ba1957dc6d71d79b797de2cc40b2d/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=09c76884bc6ba1957dc6d71d79b797de2cc40b2d", "patch": "@@ -776,48 +776,31 @@ impl AttributesExt for [ast::Attribute] {\n         let sess = tcx.sess;\n         let doc_cfg_active = tcx.features().doc_cfg;\n \n-        trait SingleExt {\n-            type Item;\n-            fn single(self) -> Option<Self::Item>;\n-        }\n-\n-        impl<T: IntoIterator> SingleExt for T {\n-            type Item = T::Item;\n-            fn single(self) -> Option<Self::Item> {\n-                let mut iter = self.into_iter();\n-                let item = iter.next()?;\n-                if iter.next().is_some() {\n-                    return None;\n-                }\n-                Some(item)\n+        fn single<T: IntoIterator>(it: T) -> Option<T::Item> {\n+            let mut iter = it.into_iter();\n+            let item = iter.next()?;\n+            if iter.next().is_some() {\n+                return None;\n             }\n+            Some(item)\n         }\n \n         let mut cfg = if doc_cfg_active {\n             let mut doc_cfg = self\n                 .iter()\n                 .filter(|attr| attr.has_name(sym::doc))\n-                .filter_map(|attr| Some(attr.meta_item_list()?.single()?))\n+                .flat_map(|attr| attr.meta_item_list().unwrap_or_else(Vec::new))\n                 .filter(|attr| attr.has_name(sym::cfg))\n-                .filter_map(|attr| Some(attr.meta_item_list()?.single()?.meta_item()?.clone()))\n                 .peekable();\n             if doc_cfg.peek().is_some() {\n                 doc_cfg\n-                    .filter_map(|attr| {\n-                        Cfg::parse(&attr)\n-                            .map_err(|e| sess.diagnostic().span_err(e.span, e.msg))\n-                            .ok()\n-                    })\n+                    .filter_map(|attr| Cfg::parse(attr.meta_item()?).ok())\n                     .fold(Cfg::True, |cfg, new_cfg| cfg & new_cfg)\n             } else {\n                 self.iter()\n                     .filter(|attr| attr.has_name(sym::cfg))\n-                    .filter_map(|attr| Some(attr.meta_item_list()?.single()?.meta_item()?.clone()))\n-                    .filter_map(|attr| {\n-                        Cfg::parse(&attr)\n-                            .map_err(|e| sess.diagnostic().span_err(e.span, e.msg))\n-                            .ok()\n-                    })\n+                    .filter_map(|attr| single(attr.meta_item_list()?))\n+                    .filter_map(|attr| Cfg::parse(attr.meta_item()?).ok())\n                     .filter(|cfg| !hidden_cfg.contains(cfg))\n                     .fold(Cfg::True, |cfg, new_cfg| cfg & new_cfg)\n             }"}, {"sha": "354d76bc3c4333d6d6dc2797068c91c16fd44202", "filename": "src/test/rustdoc-ui/doc-cfg.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/09c76884bc6ba1957dc6d71d79b797de2cc40b2d/src%2Ftest%2Frustdoc-ui%2Fdoc-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09c76884bc6ba1957dc6d71d79b797de2cc40b2d/src%2Ftest%2Frustdoc-ui%2Fdoc-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-cfg.rs?ref=09c76884bc6ba1957dc6d71d79b797de2cc40b2d", "patch": "@@ -0,0 +1,9 @@\n+#![feature(doc_cfg)]\n+\n+#[doc(cfg(), cfg(foo, bar))]\n+//~^ ERROR\n+//~^^ ERROR\n+#[doc(cfg(foo), cfg(bar))] // ok!\n+#[doc(cfg())] //~ ERROR\n+#[doc(cfg(foo, bar))] //~ ERROR\n+pub fn foo() {}"}, {"sha": "b379f6febe29f1c8511aa49bcd902d650e7e37b3", "filename": "src/test/rustdoc-ui/doc-cfg.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/09c76884bc6ba1957dc6d71d79b797de2cc40b2d/src%2Ftest%2Frustdoc-ui%2Fdoc-cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/09c76884bc6ba1957dc6d71d79b797de2cc40b2d/src%2Ftest%2Frustdoc-ui%2Fdoc-cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-cfg.stderr?ref=09c76884bc6ba1957dc6d71d79b797de2cc40b2d", "patch": "@@ -0,0 +1,26 @@\n+error: `cfg` predicate is not specified\n+  --> $DIR/doc-cfg.rs:3:7\n+   |\n+LL | #[doc(cfg(), cfg(foo, bar))]\n+   |       ^^^^^\n+\n+error: multiple `cfg` predicates are specified\n+  --> $DIR/doc-cfg.rs:3:23\n+   |\n+LL | #[doc(cfg(), cfg(foo, bar))]\n+   |                       ^^^\n+\n+error: `cfg` predicate is not specified\n+  --> $DIR/doc-cfg.rs:7:7\n+   |\n+LL | #[doc(cfg())]\n+   |       ^^^^^\n+\n+error: multiple `cfg` predicates are specified\n+  --> $DIR/doc-cfg.rs:8:16\n+   |\n+LL | #[doc(cfg(foo, bar))]\n+   |                ^^^\n+\n+error: aborting due to 4 previous errors\n+"}]}