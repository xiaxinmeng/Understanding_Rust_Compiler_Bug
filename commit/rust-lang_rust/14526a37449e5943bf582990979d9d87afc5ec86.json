{"sha": "14526a37449e5943bf582990979d9d87afc5ec86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NTI2YTM3NDQ5ZTU5NDNiZjU4Mjk5MDk3OWQ5ZDg3YWZjNWVjODY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-03T03:57:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-03T03:57:13Z"}, "message": "Auto merge of #41953 - Aaronepower:patch-1, r=brson\n\nUpdated releases notes for 1.18\n\nThis is my first time making the release notes so please give it an extra once over!", "tree": {"sha": "5a222bf6f7b3ae1b0bcd1504635626880b7551ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a222bf6f7b3ae1b0bcd1504635626880b7551ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14526a37449e5943bf582990979d9d87afc5ec86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14526a37449e5943bf582990979d9d87afc5ec86", "html_url": "https://github.com/rust-lang/rust/commit/14526a37449e5943bf582990979d9d87afc5ec86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14526a37449e5943bf582990979d9d87afc5ec86/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb907adbbd1727938245a67db1c92be7e4dec3e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb907adbbd1727938245a67db1c92be7e4dec3e6", "html_url": "https://github.com/rust-lang/rust/commit/bb907adbbd1727938245a67db1c92be7e4dec3e6"}, {"sha": "02c0d3ce3ddf89b7ec16519b44493d77a4d7ba5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/02c0d3ce3ddf89b7ec16519b44493d77a4d7ba5d", "html_url": "https://github.com/rust-lang/rust/commit/02c0d3ce3ddf89b7ec16519b44493d77a4d7ba5d"}], "stats": {"total": 150, "additions": 150, "deletions": 0}, "files": [{"sha": "d397ec556851fff8167070a19bc6be9a895b4559", "filename": "RELEASES.md", "status": "modified", "additions": 150, "deletions": 0, "changes": 150, "blob_url": "https://github.com/rust-lang/rust/blob/14526a37449e5943bf582990979d9d87afc5ec86/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/14526a37449e5943bf582990979d9d87afc5ec86/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=14526a37449e5943bf582990979d9d87afc5ec86", "patch": "@@ -1,3 +1,153 @@\n+Version 1.18.0 (2017-06-08)\n+===========================\n+\n+Language\n+--------\n+\n+- [Stabilize pub(restricted)][40556] `pub` can now accept a module path to\n+  make the item visible to just that module tree. Also accepts the keyword\n+  `crate` to make something public to the whole crate but not users of the\n+  library. Example: `pub(crate) mod utils;`. [RFC 1422].\n+- [Stabilize `#![windows_subsystem]` attribute][40870] conservative exposure of the\n+  `/SUBSYSTEM` linker flag on Windows platforms. [RFC 1665].\n+- [Refactor of trait object type parsing][40043] Now `ty` in macros can accept\n+  types like `Write + Send`, trailing `+` are now supported in trait objects,\n+  and better error reporting for trait objects starting with `?Sized`.\n+- [0e+10 is now a valid floating point literal][40589]\n+- [Now warns if you bind a lifetime parameter to 'static][40734]\n+- [Tuples, Enum variant fields, and structs with no `repr` attribute or with\n+  `#[repr(Rust)]` are reordered to minimize padding and produce a smaller\n+  representation in some cases.][40377]\n+\n+Compiler\n+--------\n+\n+- [rustc can now emit mir with `--emit mir`][39891]\n+- [Improved LLVM IR for trivial functions][40367]\n+- [Added explanation for E0090(Wrong number of lifetimes are supplied)][40723]\n+- [rustc compilation is now 15%-20% faster][41469] Thanks to optimisation\n+  opportunities found through profiling\n+- [Improved backtrace formatting when panicking][38165]\n+\n+Libraries\n+---------\n+\n+- [Specialized `Vec::from_iter` being passed `vec::IntoIter`][40731] if the\n+  iterator hasn't been advanced the original `Vec` is reassembled with no actual\n+  iteration or reallocation.\n+- [Simplified HashMap Bucket interface][40561] provides performance\n+  improvements for iterating and cloning.\n+- [Specialize Vec::from_elem to use calloc][40409]\n+- [Fixed Race condition in fs::create_dir_all][39799]\n+- [No longer caching stdio on Windows][40516]\n+- [Optimized insertion sort in slice][40807] insertion sort in some cases\n+  2.50%~ faster and in one case now 12.50% faster.\n+- [Optimized `AtomicBool::fetch_nand`][41143]\n+\n+Stabilized APIs\n+---------------\n+\n+- [`Child::try_wait`]\n+- [`HashMap::retain`]\n+- [`HashSet::retain`]\n+- [`PeekMut::pop`]\n+- [`TcpStream::peek`]\n+- [`UdpSocket::peek`]\n+- [`UdpSocket::peek_from`]\n+\n+Cargo\n+-----\n+\n+- [Added partial Pijul support][cargo/3842] Pijul is a version control system in Rust.\n+  You can now create new cargo projects with Pijul using `cargo new --vcs pijul`\n+- [Now always emits build script warnings for crates that fail to build][cargo/3847]\n+- [Added Android build support][cargo/3885]\n+- [Added `--bins` and `--tests` flags][cargo/3901] now you can build all programs\n+  of a certain type, for example `cargo build --bins` will build all\n+  binaries.\n+- [Added support for haiku][cargo/3952]\n+\n+Misc\n+----\n+\n+- [rustdoc can now use pulldown-cmark with the `--enable-commonmark` flag][40338]\n+- [Added rust-winbg script for better debugging on Windows][39983]\n+- [Rust now uses the official cross compiler for NetBSD][40612]\n+- [rustdoc now accepts `#` at the start of files][40828]\n+- [Fixed jemalloc support for musl][41168]\n+\n+Compatibility Notes\n+-------------------\n+\n+- [Changes to how the `0` flag works in format!][40241] Padding zeroes are now\n+  always placed after the sign if it exists and before the digits. With the `#`\n+  flag the zeroes are placed after the prefix and before the digits.\n+- [Due to the struct field optimisation][40377], using `transmute` on structs\n+  that have no `repr` attribute or `#[repr(Rust)]` will no longer work. This has\n+  always been undefined behavior, but is now more likely to break in practice.\n+- [The refactor of trait object type parsing][40043] fixed a bug where `+` was\n+  receiving the wrong priority parsing things like `&for<'a> Tr<'a> + Send` as\n+  `&(for<'a> Tr<'a> + Send)` instead of `(&for<'a> Tr<'a>) + Send`\n+- [Overlapping inherent `impl`s are now a hard error][40728]\n+- [`PartialOrd` and `Ord` must agree on the ordering.][41270]\n+- [`rustc main.rs -o out --emit=asm,llvm-ir`][41085] Now will output\n+  `out.asm` and `out.ll` instead of only one of the filetypes.\n+- [ calling a function that returns `Self` will no longer work][41805] when\n+  the size of `Self` cannot be statically determined.\n+- [rustc now builds with a \"pthreads\" flavour of MinGW for Windows GNU][40805]\n+  this has caused a few regressions namely:\n+\n+  - Changed the link order of local static/dynamic libraries (respecting the\n+    order on given rather than having the compiler reorder).\n+  - Changed how MinGW is linked, native code linked to dynamic libraries\n+    may require manually linking to the gcc support library (for the native\n+    code itself)\n+\n+[38165]: https://github.com/rust-lang/rust/pull/38165\n+[39799]: https://github.com/rust-lang/rust/pull/39799\n+[39891]: https://github.com/rust-lang/rust/pull/39891\n+[39983]: https://github.com/rust-lang/rust/pull/39983\n+[40043]: https://github.com/rust-lang/rust/pull/40043\n+[40241]: https://github.com/rust-lang/rust/pull/40241\n+[40338]: https://github.com/rust-lang/rust/pull/40338\n+[40367]: https://github.com/rust-lang/rust/pull/40367\n+[40377]: https://github.com/rust-lang/rust/pull/40377\n+[40409]: https://github.com/rust-lang/rust/pull/40409\n+[40516]: https://github.com/rust-lang/rust/pull/40516\n+[40556]: https://github.com/rust-lang/rust/pull/40556\n+[40561]: https://github.com/rust-lang/rust/pull/40561\n+[40589]: https://github.com/rust-lang/rust/pull/40589\n+[40612]: https://github.com/rust-lang/rust/pull/40612\n+[40723]: https://github.com/rust-lang/rust/pull/40723\n+[40728]: https://github.com/rust-lang/rust/pull/40728\n+[40731]: https://github.com/rust-lang/rust/pull/40731\n+[40734]: https://github.com/rust-lang/rust/pull/40734\n+[40805]: https://github.com/rust-lang/rust/pull/40805\n+[40807]: https://github.com/rust-lang/rust/pull/40807\n+[40828]: https://github.com/rust-lang/rust/pull/40828\n+[40870]: https://github.com/rust-lang/rust/pull/40870\n+[41085]: https://github.com/rust-lang/rust/pull/41085\n+[41143]: https://github.com/rust-lang/rust/pull/41143\n+[41168]: https://github.com/rust-lang/rust/pull/41168\n+[41270]: https://github.com/rust-lang/rust/issues/41270\n+[41469]: https://github.com/rust-lang/rust/pull/41469\n+[41805]: https://github.com/rust-lang/rust/issues/41805\n+[RFC 1422]: https://github.com/rust-lang/rfcs/blob/master/text/1422-pub-restricted.md\n+[RFC 1665]: https://github.com/rust-lang/rfcs/blob/master/text/1665-windows-subsystem.md\n+[`Child::try_wait`]: https://doc.rust-lang.org/std/process/struct.Child.html#method.try_wait\n+[`HashMap::retain`]: https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.retain\n+[`HashSet::retain`]: https://doc.rust-lang.org/std/collections/struct.HashSet.html#method.retain\n+[`PeekMut::pop`]: https://doc.rust-lang.org/std/collections/binary_heap/struct.PeekMut.html#method.pop\n+[`TcpStream::peek`]: https://doc.rust-lang.org/std/net/struct.TcpStream.html#method.peek\n+[`UdpSocket::peek_from`]: https://doc.rust-lang.org/std/net/struct.UdpSocket.html#method.peek_from\n+[`UdpSocket::peek`]: https://doc.rust-lang.org/std/net/struct.UdpSocket.html#method.peek\n+[cargo/3842]: https://github.com/rust-lang/cargo/pull/3842\n+[cargo/3847]: https://github.com/rust-lang/cargo/pull/3847\n+[cargo/3885]: https://github.com/rust-lang/cargo/pull/3885\n+[cargo/3901]: https://github.com/rust-lang/cargo/pull/3901\n+[cargo/3952]: https://github.com/rust-lang/cargo/pull/3952\n+\n+\n Version 1.17.0 (2017-04-27)\n ===========================\n "}]}