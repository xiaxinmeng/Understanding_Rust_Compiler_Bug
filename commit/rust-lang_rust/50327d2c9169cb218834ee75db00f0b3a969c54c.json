{"sha": "50327d2c9169cb218834ee75db00f0b3a969c54c", "node_id": "C_kwDOAAsO6NoAKDUwMzI3ZDJjOTE2OWNiMjE4ODM0ZWU3NWRiMDBmMGIzYTk2OWM1NGM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-14T19:47:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-14T19:47:26Z"}, "message": "Rollup merge of #89825 - martinvonz:split-inclusive-empty, r=m-ou-se\n\nMake split_inclusive() on an empty slice yield an empty output\n\n`[].split_inclusive()` currently yields a single, empty slice. That's\ndifferent from `\"\".split_inslusive()`, which yields no output at\nall. I think that makes the slice version harder to use.\n\nThe case where I ran into this bug was when writing code for\ngenerating a diff between two slices of bytes. I wanted to prefix\nremoved lines with \"-\" and a added lines with \"+\". Due to\n`split_inclusive()`'s current behavior, that means that my code prints\njust a \"-\" or \"+\" for empty files. I suspect most existing callers\nhave similar \"bugs\" (which would be fixed by this patch).\n\nCloses #89716.", "tree": {"sha": "d68590fcae644e85abb03f04b073d2f4dca8d285", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d68590fcae644e85abb03f04b073d2f4dca8d285"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50327d2c9169cb218834ee75db00f0b3a969c54c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhuPTOCRBK7hj4Ov3rIwAA194IAC/gWSDe43qKZZYO7Ioi3xKa\nZ1lERMFXlxIE3r0bHt6/CKYeG2aiKyrxsXBFUsMEZYzH1pB5yCisr1+dQF6cb5+C\nSiCPOlwk0+WY7AT2iX1gFz8Al07ozyt2YmfOi37okV3RPnmtLSIMx/6X1/eHWE9O\n6XAGgwODVX5JxGdypDY+A8D2EVOGC2ymbpvXsltTQkF/sCYkMC2dQsMTU9kiLsf8\n6L/+b0MzWg5Vs5v69mVE8v+soCybY4OQBZpZwQD/uojEkPcWu6YOfpd5pWemrMnv\nmPHJwQ1VfDskZjnf00GKl9a/vD2FuRnMT0sCFaXQIxH/j0RK7R8iiaobTljohPY=\n=iiOB\n-----END PGP SIGNATURE-----\n", "payload": "tree d68590fcae644e85abb03f04b073d2f4dca8d285\nparent 404c8471aba60c2d837fa728e7c729a0f52d5830\nparent f6e4c742f41c5505c9a371ce8ef2c7aed55c35e4\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639511246 +0100\ncommitter GitHub <noreply@github.com> 1639511246 +0100\n\nRollup merge of #89825 - martinvonz:split-inclusive-empty, r=m-ou-se\n\nMake split_inclusive() on an empty slice yield an empty output\n\n`[].split_inclusive()` currently yields a single, empty slice. That's\ndifferent from `\"\".split_inslusive()`, which yields no output at\nall. I think that makes the slice version harder to use.\n\nThe case where I ran into this bug was when writing code for\ngenerating a diff between two slices of bytes. I wanted to prefix\nremoved lines with \"-\" and a added lines with \"+\". Due to\n`split_inclusive()`'s current behavior, that means that my code prints\njust a \"-\" or \"+\" for empty files. I suspect most existing callers\nhave similar \"bugs\" (which would be fixed by this patch).\n\nCloses #89716.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50327d2c9169cb218834ee75db00f0b3a969c54c", "html_url": "https://github.com/rust-lang/rust/commit/50327d2c9169cb218834ee75db00f0b3a969c54c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50327d2c9169cb218834ee75db00f0b3a969c54c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "404c8471aba60c2d837fa728e7c729a0f52d5830", "url": "https://api.github.com/repos/rust-lang/rust/commits/404c8471aba60c2d837fa728e7c729a0f52d5830", "html_url": "https://github.com/rust-lang/rust/commit/404c8471aba60c2d837fa728e7c729a0f52d5830"}, {"sha": "f6e4c742f41c5505c9a371ce8ef2c7aed55c35e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6e4c742f41c5505c9a371ce8ef2c7aed55c35e4", "html_url": "https://github.com/rust-lang/rust/commit/f6e4c742f41c5505c9a371ce8ef2c7aed55c35e4"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "18ea6a214137703403e2f36da7bb94ae4bc2310c", "filename": "library/alloc/tests/slice.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/50327d2c9169cb218834ee75db00f0b3a969c54c/library%2Falloc%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50327d2c9169cb218834ee75db00f0b3a969c54c/library%2Falloc%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fslice.rs?ref=50327d2c9169cb218834ee75db00f0b3a969c54c", "patch": "@@ -863,7 +863,7 @@ fn test_splitator_inclusive() {\n     assert_eq!(xs.split_inclusive(|_| true).collect::<Vec<&[i32]>>(), splits);\n \n     let xs: &[i32] = &[];\n-    let splits: &[&[i32]] = &[&[]];\n+    let splits: &[&[i32]] = &[];\n     assert_eq!(xs.split_inclusive(|x| *x == 5).collect::<Vec<&[i32]>>(), splits);\n }\n \n@@ -883,7 +883,7 @@ fn test_splitator_inclusive_reverse() {\n     assert_eq!(xs.split_inclusive(|_| true).rev().collect::<Vec<_>>(), splits);\n \n     let xs: &[i32] = &[];\n-    let splits: &[&[i32]] = &[&[]];\n+    let splits: &[&[i32]] = &[];\n     assert_eq!(xs.split_inclusive(|x| *x == 5).rev().collect::<Vec<_>>(), splits);\n }\n \n@@ -903,7 +903,7 @@ fn test_splitator_mut_inclusive() {\n     assert_eq!(xs.split_inclusive_mut(|_| true).collect::<Vec<_>>(), splits);\n \n     let xs: &mut [i32] = &mut [];\n-    let splits: &[&[i32]] = &[&[]];\n+    let splits: &[&[i32]] = &[];\n     assert_eq!(xs.split_inclusive_mut(|x| *x == 5).collect::<Vec<_>>(), splits);\n }\n \n@@ -923,7 +923,7 @@ fn test_splitator_mut_inclusive_reverse() {\n     assert_eq!(xs.split_inclusive_mut(|_| true).rev().collect::<Vec<_>>(), splits);\n \n     let xs: &mut [i32] = &mut [];\n-    let splits: &[&[i32]] = &[&[]];\n+    let splits: &[&[i32]] = &[];\n     assert_eq!(xs.split_inclusive_mut(|x| *x == 5).rev().collect::<Vec<_>>(), splits);\n }\n "}, {"sha": "11a57558f67d7bfb5a8e3586e53633d3f66ae718", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/50327d2c9169cb218834ee75db00f0b3a969c54c/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50327d2c9169cb218834ee75db00f0b3a969c54c/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=50327d2c9169cb218834ee75db00f0b3a969c54c", "patch": "@@ -481,7 +481,8 @@ where\n impl<'a, T: 'a, P: FnMut(&T) -> bool> SplitInclusive<'a, T, P> {\n     #[inline]\n     pub(super) fn new(slice: &'a [T], pred: P) -> Self {\n-        Self { v: slice, pred, finished: false }\n+        let finished = slice.is_empty();\n+        Self { v: slice, pred, finished }\n     }\n }\n \n@@ -729,7 +730,8 @@ where\n impl<'a, T: 'a, P: FnMut(&T) -> bool> SplitInclusiveMut<'a, T, P> {\n     #[inline]\n     pub(super) fn new(slice: &'a mut [T], pred: P) -> Self {\n-        Self { v: slice, pred, finished: false }\n+        let finished = slice.is_empty();\n+        Self { v: slice, pred, finished }\n     }\n }\n "}]}