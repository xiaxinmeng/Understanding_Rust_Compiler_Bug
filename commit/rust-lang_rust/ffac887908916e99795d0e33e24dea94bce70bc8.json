{"sha": "ffac887908916e99795d0e33e24dea94bce70bc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmYWM4ODc5MDg5MTZlOTk3OTVkMGUzM2UyNGRlYTk0YmNlNzBiYzg=", "commit": {"author": {"name": "Erin Power", "email": "xampprocky@gmail.com", "date": "2020-06-14T18:59:40Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-07-12T18:06:53Z"}, "message": "Update RELEASES.md for 1.45.0", "tree": {"sha": "59f7a55c7a6919e0bea4e97b2fbc124bf79128b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59f7a55c7a6919e0bea4e97b2fbc124bf79128b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffac887908916e99795d0e33e24dea94bce70bc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffac887908916e99795d0e33e24dea94bce70bc8", "html_url": "https://github.com/rust-lang/rust/commit/ffac887908916e99795d0e33e24dea94bce70bc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffac887908916e99795d0e33e24dea94bce70bc8/comments", "author": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d09331e00b02f81c714b0c41ce3a38380dd36a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d09331e00b02f81c714b0c41ce3a38380dd36a2", "html_url": "https://github.com/rust-lang/rust/commit/9d09331e00b02f81c714b0c41ce3a38380dd36a2"}], "stats": {"total": 163, "additions": 163, "deletions": 0}, "files": [{"sha": "977796c66132e938331b62bf88cc2bcbc3143611", "filename": "RELEASES.md", "status": "modified", "additions": 163, "deletions": 0, "changes": 163, "blob_url": "https://github.com/rust-lang/rust/blob/ffac887908916e99795d0e33e24dea94bce70bc8/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/ffac887908916e99795d0e33e24dea94bce70bc8/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=ffac887908916e99795d0e33e24dea94bce70bc8", "patch": "@@ -1,3 +1,166 @@\n+Version 1.45.0 (2020-07-16)\n+==========================\n+\n+Language\n+--------\n+- [Out of range float to int conversions using `as` has been defined as a saturating\n+  conversion.][71269] This was previously undefined behaviour, but you can use the\n+   `{f64, f32}::to_int_unchecked` methods to continue using the current behaviour, which\n+   may be desirable in rare performance sensitive situations.\n+- [`mem::Discriminant<T>` now uses `T`'s discriminant type instead of always\n+  using `u64`.][70705]\n+- [Function like procedural macros can now be used in expression, pattern, and  statement\n+  positions.][68717] This means you can now use a function-like procedural macro\n+  anywhere you can use a declarative (`macro_rules!`) macro.\n+\n+Compiler\n+--------\n+- [You can now override individual target features through the `target-feature`\n+  flag.][72094] E.g. `-C target-feature=+avx2 -C target-feature=+fma` is now\n+  equivalent to `-C target-feature=+avx2,+fma`.\n+- [Added the `force-unwind-tables` flag.][69984] This option allows\n+  rustc to always generate unwind tables regardless of panic strategy.\n+- [Added the `embed-bitcode` flag.][71716] This codegen flag allows rustc\n+  to include LLVM bitcode into generated `rlib`s (this is on by default).\n+- [Added the `tiny` value to the `code-model` codegen flag.][72397]\n+- [Added tier 3 support\\* for the `mipsel-sony-psp` target.][72062]\n+- [Added tier 3 support for the `thumbv7a-uwp-windows-msvc` target.][72133]\n+\n+\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+information on Rust's tiered platform support.\n+\n+\n+Libraries\n+---------\n+- [`net::{SocketAddr, SocketAddrV4, SocketAddrV6}` now implements `PartialOrd`\n+  and `Ord`.][72239]\n+- [`proc_macro::TokenStream` now implements `Default`.][72234]\n+- [You can now use `char` with\n+  `ops::{Range, RangeFrom, RangeFull, RangeInclusive, RangeTo}` to iterate over\n+  a range of codepoints.][72413] E.g.\n+  you can now write the following;\n+  ```rust\n+  for ch in 'a'..='z' {\n+      print!(\"{}\", ch);\n+  }\n+  println!();\n+  // Prints \"abcdefghijklmnopqrstuvwxyz\"\n+  ```\n+- [`OsString` now implements `FromStr`.][71662]\n+- [The `saturating_neg` method as been added to all signed integer primitive\n+  types, and the `saturating_abs` method has been added for all integer\n+  primitive types.][71886]\n+- [`Arc<T>`, `Rc<T>` now implement  `From<Cow<'_, T>>`, and `Box` now\n+  implements `From<Cow>` when `T` is `[T: Copy]`, `str`, `CStr`, `OsStr`,\n+  or `Path`.][71447]\n+- [`Box<[T]>` now implements `From<[T; N]>`.][71095]\n+- [`BitOr` and `BitOrAssign` are implemented for all `NonZero`\n+  integer types.][69813]\n+- [The `fetch_min`, and `fetch_max` methods have been added to all atomic\n+  integer types.][72324]\n+- [The `fetch_update` method has been added to all atomic integer types.][71843]\n+\n+Stabilized APIs\n+---------------\n+- [`Arc::as_ptr`]\n+- [`BTreeMap::remove_entry`]\n+- [`Rc::as_ptr`]\n+- [`rc::Weak::as_ptr`]\n+- [`rc::Weak::from_raw`]\n+- [`rc::Weak::into_raw`]\n+- [`str::strip_prefix`]\n+- [`str::strip_suffix`]\n+- [`sync::Weak::as_ptr`]\n+- [`sync::Weak::from_raw`]\n+- [`sync::Weak::into_raw`]\n+- [`char::UNICODE_VERSION`]\n+- [`Span::resolved_at`]\n+- [`Span::located_at`]\n+- [`Span::mixed_site`]\n+- [`unix::process::CommandExt::arg0`]\n+\n+Cargo\n+-----\n+\n+Misc\n+----\n+- [Rustdoc now supports strikethrough text in Markdown.][71928] E.g.\n+  `~~outdated information~~` becomes \"~~outdated information~~\".\n+- [Added an emoji to Rustdoc's deprecated API message.][72014]\n+\n+Compatibility Notes\n+-------------------\n+- [Trying to self initialize a static value (that is creating a value using\n+  itself) is unsound and now causes a compile error.][71140]\n+- [`{f32, f64}::powi` now returns a slightly different value on Windows.][73420]\n+  This is due to changes in LLVM's intrinsics which `{f32, f64}::powi` uses.\n+- [Rustdoc's CLI's extra error exit codes have been removed.][71900] These were\n+  previously undocumented and not intended for public use. Rustdoc still provides\n+  a non-zero exit code on errors.\n+\n+Internals Only\n+--------------\n+- [Make clippy a git subtree instead of a git submodule][70655]\n+- [Unify the undo log of all snapshot types][69464]\n+\n+[73420]: https://github.com/rust-lang/rust/issues/73420/\n+[72324]: https://github.com/rust-lang/rust/pull/72324/\n+[71843]: https://github.com/rust-lang/rust/pull/71843/\n+[71886]: https://github.com/rust-lang/rust/pull/71886/\n+[72234]: https://github.com/rust-lang/rust/pull/72234/\n+[72239]: https://github.com/rust-lang/rust/pull/72239/\n+[72397]: https://github.com/rust-lang/rust/pull/72397/\n+[72413]: https://github.com/rust-lang/rust/pull/72413/\n+[72014]: https://github.com/rust-lang/rust/pull/72014/\n+[72062]: https://github.com/rust-lang/rust/pull/72062/\n+[72094]: https://github.com/rust-lang/rust/pull/72094/\n+[72133]: https://github.com/rust-lang/rust/pull/72133/\n+[71900]: https://github.com/rust-lang/rust/pull/71900/\n+[71928]: https://github.com/rust-lang/rust/pull/71928/\n+[71662]: https://github.com/rust-lang/rust/pull/71662/\n+[71716]: https://github.com/rust-lang/rust/pull/71716/\n+[71447]: https://github.com/rust-lang/rust/pull/71447/\n+[71269]: https://github.com/rust-lang/rust/pull/71269/\n+[71095]: https://github.com/rust-lang/rust/pull/71095/\n+[71140]: https://github.com/rust-lang/rust/pull/71140/\n+[70655]: https://github.com/rust-lang/rust/pull/70655/\n+[70705]: https://github.com/rust-lang/rust/pull/70705/\n+[69984]: https://github.com/rust-lang/rust/pull/69984/\n+[69813]: https://github.com/rust-lang/rust/pull/69813/\n+[69464]: https://github.com/rust-lang/rust/pull/69464/\n+[68717]: https://github.com/rust-lang/rust/pull/68717/\n+[`Arc::as_ptr`]: https://doc.rust-lang.org/stable/std/sync/struct.Arc.html#method.as_ptr\n+[`BTreeMap::remove_entry`]: https://doc.rust-lang.org/stable/std/collections/struct.BTreeMap.html#method.remove_entry\n+[`Rc::as_ptr`]: https://doc.rust-lang.org/stable/std/rc/struct.Rc.html#method.as_ptr\n+[`rc::Weak::as_ptr`]: https://doc.rust-lang.org/stable/std/rc/struct.Weak.html#method.as_ptr\n+[`rc::Weak::from_raw`]: https://doc.rust-lang.org/stable/std/rc/struct.Weak.html#method.from_raw\n+[`rc::Weak::into_raw`]: https://doc.rust-lang.org/stable/std/rc/struct.Weak.html#method.into_raw\n+[`sync::Weak::as_ptr`]: https://doc.rust-lang.org/stable/std/sync/struct.Weak.html#method.as_ptr\n+[`sync::Weak::from_raw`]: https://doc.rust-lang.org/stable/std/sync/struct.Weak.html#method.from_raw\n+[`sync::Weak::into_raw`]: https://doc.rust-lang.org/stable/std/sync/struct.Weak.html#method.into_raw\n+[`str::strip_prefix`]: https://doc.rust-lang.org/stable/std/primitive.str.html#method.strip_prefix\n+[`str::strip_suffix`]: https://doc.rust-lang.org/stable/std/primitive.str.html#method.strip_suffix\n+[`char::UNICODE_VERSION`]: https://doc.rust-lang.org/stable/std/char/constant.UNICODE_VERSION.html\n+[`Span::resolved_at`]: https://doc.rust-lang.org/stable/proc_macro/struct.Span.html#method.resolved_at\n+[`Span::located_at`]: https://doc.rust-lang.org/stable/proc_macro/struct.Span.html#method.located_at\n+[`Span::mixed_site`]: https://doc.rust-lang.org/stable/proc_macro/struct.Span.html#method.mixed_site\n+[`unix::process::CommandExt::arg0`]: https://doc.rust-lang.org/std/os/unix/process/trait.CommandExt.html#tymethod.arg0\n+\n+\n+Version 1.44.1 (2020-06-18)\n+===========================\n+\n+* [rustfmt accepts rustfmt_skip in cfg_attr again.][73078]\n+* [Don't hash executable filenames on apple platforms, fixing backtraces.][cargo/8329]\n+* [Fix crashes when finding backtrace on macOS.][71397]\n+* [Clippy applies lint levels into different files.][clippy/5356]\n+\n+[71397]: https://github.com/rust-lang/rust/issues/71397\n+[73078]: https://github.com/rust-lang/rust/issues/73078\n+[cargo/8329]: https://github.com/rust-lang/cargo/pull/8329\n+[clippy/5356]: https://github.com/rust-lang/rust-clippy/issues/5356\n+\n+\n Version 1.44.0 (2020-06-04)\n ==========================\n "}]}