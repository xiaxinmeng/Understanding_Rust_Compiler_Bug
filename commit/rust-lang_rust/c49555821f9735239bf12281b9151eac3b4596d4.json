{"sha": "c49555821f9735239bf12281b9151eac3b4596d4", "node_id": "C_kwDOAAsO6NoAKGM0OTU1NTgyMWY5NzM1MjM5YmYxMjI4MWI5MTUxZWFjM2I0NTk2ZDQ", "commit": {"author": {"name": "DebugSteven", "email": "debugsteven@gmail.com", "date": "2022-11-17T20:21:36Z"}, "committer": {"name": "DebugSteven", "email": "debugsteven@gmail.com", "date": "2022-12-31T18:37:13Z"}, "message": "warn when there's a newer version of the x tool available", "tree": {"sha": "498d65db4aca485c2b754c3f3160092aeb0ae4c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/498d65db4aca485c2b754c3f3160092aeb0ae4c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c49555821f9735239bf12281b9151eac3b4596d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c49555821f9735239bf12281b9151eac3b4596d4", "html_url": "https://github.com/rust-lang/rust/commit/c49555821f9735239bf12281b9151eac3b4596d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c49555821f9735239bf12281b9151eac3b4596d4/comments", "author": {"login": "DebugSteven", "id": 10746702, "node_id": "MDQ6VXNlcjEwNzQ2NzAy", "avatar_url": "https://avatars.githubusercontent.com/u/10746702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DebugSteven", "html_url": "https://github.com/DebugSteven", "followers_url": "https://api.github.com/users/DebugSteven/followers", "following_url": "https://api.github.com/users/DebugSteven/following{/other_user}", "gists_url": "https://api.github.com/users/DebugSteven/gists{/gist_id}", "starred_url": "https://api.github.com/users/DebugSteven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DebugSteven/subscriptions", "organizations_url": "https://api.github.com/users/DebugSteven/orgs", "repos_url": "https://api.github.com/users/DebugSteven/repos", "events_url": "https://api.github.com/users/DebugSteven/events{/privacy}", "received_events_url": "https://api.github.com/users/DebugSteven/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DebugSteven", "id": 10746702, "node_id": "MDQ6VXNlcjEwNzQ2NzAy", "avatar_url": "https://avatars.githubusercontent.com/u/10746702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DebugSteven", "html_url": "https://github.com/DebugSteven", "followers_url": "https://api.github.com/users/DebugSteven/followers", "following_url": "https://api.github.com/users/DebugSteven/following{/other_user}", "gists_url": "https://api.github.com/users/DebugSteven/gists{/gist_id}", "starred_url": "https://api.github.com/users/DebugSteven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DebugSteven/subscriptions", "organizations_url": "https://api.github.com/users/DebugSteven/orgs", "repos_url": "https://api.github.com/users/DebugSteven/repos", "events_url": "https://api.github.com/users/DebugSteven/events{/privacy}", "received_events_url": "https://api.github.com/users/DebugSteven/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c", "html_url": "https://github.com/rust-lang/rust/commit/726bbfc8f0d6eb431dfa620c1c8fc3848020cd3c"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "bfcf0907365ad0fe2dd28e73eb74805b6e8f9edd", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c49555821f9735239bf12281b9151eac3b4596d4/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c49555821f9735239bf12281b9151eac3b4596d4/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=c49555821f9735239bf12281b9151eac3b4596d4", "patch": "@@ -69,3 +69,4 @@ pub mod ui_tests;\n pub mod unit_tests;\n pub mod unstable_book;\n pub mod walk;\n+pub mod x;"}, {"sha": "f01d4673368e9f0a60004d9a706944f9f511e8ba", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c49555821f9735239bf12281b9151eac3b4596d4/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c49555821f9735239bf12281b9151eac3b4596d4/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=c49555821f9735239bf12281b9151eac3b4596d4", "patch": "@@ -53,6 +53,21 @@ fn main() {\n             VecDeque::with_capacity(concurrency.get());\n \n         macro_rules! check {\n+            ($p:ident) => {\n+                while handles.len() >= concurrency.get() {\n+                    handles.pop_front().unwrap().join().unwrap();\n+                }\n+\n+                let handle = s.spawn(|| {\n+                    let mut flag = false;\n+                    $p::check(&mut flag);\n+                    if (flag) {\n+                        bad.store(true, Ordering::Relaxed);\n+                    }\n+                });\n+                handles.push_back(handle);\n+            };\n+\n             ($p:ident $(, $args:expr)* ) => {\n                 drain_handles(&mut handles);\n \n@@ -64,7 +79,8 @@ fn main() {\n                     }\n                 });\n                 handles.push_back(handle);\n-            }\n+            };\n+\n         }\n \n         check!(target_specific_tests, &src_path);\n@@ -107,6 +123,8 @@ fn main() {\n         check!(alphabetical, &compiler_path);\n         check!(alphabetical, &library_path);\n \n+        check!(x);\n+\n         let collected = {\n             drain_handles(&mut handles);\n "}, {"sha": "2cbbde8de8246b8f82af4ef8dec539ec34b13a14", "filename": "src/tools/tidy/src/x.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c49555821f9735239bf12281b9151eac3b4596d4/src%2Ftools%2Ftidy%2Fsrc%2Fx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c49555821f9735239bf12281b9151eac3b4596d4/src%2Ftools%2Ftidy%2Fsrc%2Fx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fx.rs?ref=c49555821f9735239bf12281b9151eac3b4596d4", "patch": "@@ -0,0 +1,19 @@\n+use std::process::Command;\n+\n+pub fn check(_bad: &mut bool) {\n+    let result = Command::new(\"x\")\n+        .arg(\"--version\")\n+        .output();\n+    let output = match result {\n+        Ok(output) => output,\n+        Err(_e) => todo!(),\n+    };\n+\n+    if output.status.success() {\n+        let version = String::from_utf8_lossy(&output.stdout);\n+        assert_eq!(\"0.1.0\", version.trim_end());\n+    }\n+    // FIXME: throw some kind of tidy error when the version of x isn't\n+    // greater than or equal to the version we'd expect.\n+    //tidy_error!(bad, \"Current version of x is {version} Consider updating to the newer version of x by running `cargo install --path src/tools/x`\")\n+}"}, {"sha": "db5d03710d762601e1dc226ba0752e1585db6ffa", "filename": "src/tools/x/src/main.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c49555821f9735239bf12281b9151eac3b4596d4/src%2Ftools%2Fx%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c49555821f9735239bf12281b9151eac3b4596d4/src%2Ftools%2Fx%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fx%2Fsrc%2Fmain.rs?ref=c49555821f9735239bf12281b9151eac3b4596d4", "patch": "@@ -52,6 +52,14 @@ fn exec_or_status(command: &mut Command) -> io::Result<ExitStatus> {\n }\n \n fn main() {\n+    match env::args().skip(1).next().as_deref() {\n+        Some(\"--version\") => {\n+            let version = env!(\"CARGO_PKG_VERSION\");\n+            println!(\"{}\", version);\n+            return;\n+        }\n+        _ => {}\n+    }\n     let current = match env::current_dir() {\n         Ok(dir) => dir,\n         Err(err) => {"}]}