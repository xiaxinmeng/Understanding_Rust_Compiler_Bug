{"sha": "303ebd5b0400073a82d68053fc789de72dabe2b5", "node_id": "C_kwDOAAsO6NoAKDMwM2ViZDViMDQwMDA3M2E4MmQ2ODA1M2ZjNzg5ZGU3MmRhYmUyYjU", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-10-10T01:23:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-10T01:23:04Z"}, "message": "Rollup merge of #102345 - chenyukang:fix-102182-impl-trait, r=estebank\n\nRecover from impl Trait in type param bound\n\nFixes #102182\nr? ``@estebank``", "tree": {"sha": "81e16f92f96c74527fc83cf9c814bb360ec45001", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81e16f92f96c74527fc83cf9c814bb360ec45001"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/303ebd5b0400073a82d68053fc789de72dabe2b5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjQ3P4CRBK7hj4Ov3rIwAATPkIAGHddq/X7+xn3bAQA+SHrF3T\n+hVH5vM956nSrwpgivrVbl/WrgwCYU2amYkZo2AKIguHZCJxRIADcBYs9CVue9xp\ndbGMIL7MTxuAuFi+7u5RTwue94j07SlH5H9oQZMddjPkLkky8Fknkyb9rlfeG7qZ\nlQ6lHN9k6Q2BQRySTU1OqngtV4waswcRmmKmRkUtlaOVC7GCgidHhHY03NSS3SXy\nIWuAlLhWzpqu3HUOb2WZkIinQ5HCfjZaZB9hR1nU+q2CP7cB3fofBdC55BkEuGqv\nwr7VTZJQZMLssk9cA1VaHV9WJyomqY2ge+L0GTFA18fzu4ZuP+iZVQBvIRHpsGU=\n=9arx\n-----END PGP SIGNATURE-----\n", "payload": "tree 81e16f92f96c74527fc83cf9c814bb360ec45001\nparent 0db05f16c897ac19e09269eb6a7061b888fb7851\nparent 7b2f04a2b3e895477a96bb8ad2fe875eff411798\nauthor Yuki Okushi <jtitor@2k36.org> 1665364984 +0900\ncommitter GitHub <noreply@github.com> 1665364984 +0900\n\nRollup merge of #102345 - chenyukang:fix-102182-impl-trait, r=estebank\n\nRecover from impl Trait in type param bound\n\nFixes #102182\nr? ``@estebank``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/303ebd5b0400073a82d68053fc789de72dabe2b5", "html_url": "https://github.com/rust-lang/rust/commit/303ebd5b0400073a82d68053fc789de72dabe2b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/303ebd5b0400073a82d68053fc789de72dabe2b5/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0db05f16c897ac19e09269eb6a7061b888fb7851", "url": "https://api.github.com/repos/rust-lang/rust/commits/0db05f16c897ac19e09269eb6a7061b888fb7851", "html_url": "https://github.com/rust-lang/rust/commit/0db05f16c897ac19e09269eb6a7061b888fb7851"}, {"sha": "7b2f04a2b3e895477a96bb8ad2fe875eff411798", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b2f04a2b3e895477a96bb8ad2fe875eff411798", "html_url": "https://github.com/rust-lang/rust/commit/7b2f04a2b3e895477a96bb8ad2fe875eff411798"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "fa75670b2ed8221008da4f9493f71b2597203767", "filename": "compiler/rustc_parse/src/parser/generics.rs", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/303ebd5b0400073a82d68053fc789de72dabe2b5/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/303ebd5b0400073a82d68053fc789de72dabe2b5/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fgenerics.rs?ref=303ebd5b0400073a82d68053fc789de72dabe2b5", "patch": "@@ -1,7 +1,9 @@\n use super::{ForceCollect, Parser, TrailingToken};\n \n use rustc_ast::token;\n-use rustc_ast::{self as ast, AttrVec, GenericBounds, GenericParam, GenericParamKind, WhereClause};\n+use rustc_ast::{\n+    self as ast, AttrVec, GenericBounds, GenericParam, GenericParamKind, TyKind, WhereClause,\n+};\n use rustc_errors::{Applicability, PResult};\n use rustc_span::symbol::kw;\n \n@@ -31,13 +33,43 @@ impl<'a> Parser<'a> {\n         let mut colon_span = None;\n         let bounds = if self.eat(&token::Colon) {\n             colon_span = Some(self.prev_token.span);\n+            // recover from `impl Trait` in type param bound\n+            if self.token.is_keyword(kw::Impl) {\n+                let impl_span = self.token.span;\n+                let snapshot = self.create_snapshot_for_diagnostic();\n+                match self.parse_ty() {\n+                    Ok(p) => {\n+                        if let TyKind::ImplTrait(_, bounds) = &(*p).kind {\n+                            let span = impl_span.to(self.token.span.shrink_to_lo());\n+                            let mut err = self.struct_span_err(\n+                                span,\n+                                \"expected trait bound, found `impl Trait` type\",\n+                            );\n+                            err.span_label(span, \"not a trait\");\n+                            if let [bound, ..] = &bounds[..] {\n+                                err.span_suggestion_verbose(\n+                                    impl_span.until(bound.span()),\n+                                    \"use the trait bounds directly\",\n+                                    String::new(),\n+                                    Applicability::MachineApplicable,\n+                                );\n+                            }\n+                            err.emit();\n+                            return Err(err);\n+                        }\n+                    }\n+                    Err(err) => {\n+                        err.cancel();\n+                    }\n+                }\n+                self.restore_snapshot(snapshot);\n+            }\n             self.parse_generic_bounds(colon_span)?\n         } else {\n             Vec::new()\n         };\n \n         let default = if self.eat(&token::Eq) { Some(self.parse_ty()?) } else { None };\n-\n         Ok(GenericParam {\n             ident,\n             id: ast::DUMMY_NODE_ID,"}, {"sha": "4bfc676d6f620c3878eb347134779841e8511116", "filename": "src/test/ui/parser/issues/issue-102182-impl-trait-recover.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/303ebd5b0400073a82d68053fc789de72dabe2b5/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-102182-impl-trait-recover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/303ebd5b0400073a82d68053fc789de72dabe2b5/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-102182-impl-trait-recover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-102182-impl-trait-recover.rs?ref=303ebd5b0400073a82d68053fc789de72dabe2b5", "patch": "@@ -0,0 +1,3 @@\n+fn foo<T: impl Trait>() {}\n+//~^ ERROR expected trait bound, found `impl Trait` type\n+fn main() {}"}, {"sha": "52b6ae5df359a96a312ad1c9fad8e223097c193d", "filename": "src/test/ui/parser/issues/issue-102182-impl-trait-recover.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/303ebd5b0400073a82d68053fc789de72dabe2b5/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-102182-impl-trait-recover.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/303ebd5b0400073a82d68053fc789de72dabe2b5/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-102182-impl-trait-recover.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-102182-impl-trait-recover.stderr?ref=303ebd5b0400073a82d68053fc789de72dabe2b5", "patch": "@@ -0,0 +1,14 @@\n+error: expected trait bound, found `impl Trait` type\n+  --> $DIR/issue-102182-impl-trait-recover.rs:1:11\n+   |\n+LL | fn foo<T: impl Trait>() {}\n+   |           ^^^^^^^^^^ not a trait\n+   |\n+help: use the trait bounds directly\n+   |\n+LL - fn foo<T: impl Trait>() {}\n+LL + fn foo<T: Trait>() {}\n+   |\n+\n+error: aborting due to previous error\n+"}]}