{"sha": "9fff8c6eba287e0ed7cce6014dc58482afe425b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZmY4YzZlYmEyODdlMGVkN2NjZTYwMTRkYzU4NDgyYWZlNDI1YjA=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-11T10:33:30Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-12T02:21:04Z"}, "message": "std: add a test for HashMap::find_equiv.", "tree": {"sha": "e78d8b59b3c72a49e5b15721257e42b242d4db37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e78d8b59b3c72a49e5b15721257e42b242d4db37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fff8c6eba287e0ed7cce6014dc58482afe425b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fff8c6eba287e0ed7cce6014dc58482afe425b0", "html_url": "https://github.com/rust-lang/rust/commit/9fff8c6eba287e0ed7cce6014dc58482afe425b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fff8c6eba287e0ed7cce6014dc58482afe425b0/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efc71a8bdb28fba88d0cc8916b33838bf43b3a8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/efc71a8bdb28fba88d0cc8916b33838bf43b3a8d", "html_url": "https://github.com/rust-lang/rust/commit/efc71a8bdb28fba88d0cc8916b33838bf43b3a8d"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "c0cc92723ba4ddbd68c913493d66f7431080f388", "filename": "src/libstd/hashmap.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9fff8c6eba287e0ed7cce6014dc58482afe425b0/src%2Flibstd%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fff8c6eba287e0ed7cce6014dc58482afe425b0/src%2Flibstd%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fhashmap.rs?ref=9fff8c6eba287e0ed7cce6014dc58482afe425b0", "patch": "@@ -866,6 +866,23 @@ mod test_map {\n         assert_eq!(m.len(), i);\n         assert!(!m.is_empty());\n     }\n+\n+    #[test]\n+    fn test_find_equiv() {\n+        let mut m = HashMap::new();\n+\n+        let (foo, bar, baz) = (1,2,3);\n+        m.insert(~\"foo\", foo);\n+        m.insert(~\"bar\", bar);\n+        m.insert(~\"baz\", baz);\n+\n+\n+        assert_eq!(m.find_equiv(&(\"foo\")), Some(&foo));\n+        assert_eq!(m.find_equiv(&(\"bar\")), Some(&bar));\n+        assert_eq!(m.find_equiv(&(\"baz\")), Some(&baz));\n+\n+        assert_eq!(m.find_equiv(&(\"qux\")), None);\n+    }\n }\n \n #[cfg(test)]"}]}