{"sha": "946d76ec0e3d965bf9a8d3524434abf27db7ecd6", "node_id": "C_kwDOAAsO6NoAKDk0NmQ3NmVjMGUzZDk2NWJmOWE4ZDM1MjQ0MzRhYmYyN2RiN2VjZDY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-16T05:12:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-16T05:12:44Z"}, "message": "Rollup merge of #95859 - rainy-me:unterminated-nested-block-comment, r=petrochenkov\n\nImprove diagnostics for unterminated nested block comment\n\nclose #95283\n\n(This is my first time try to messing around with rust compiler and might get a lot of things wrong... :bow: )", "tree": {"sha": "e659cb0c882a12057d1afc45a582120468cd95cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e659cb0c882a12057d1afc45a582120468cd95cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/946d76ec0e3d965bf9a8d3524434abf27db7ecd6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiWlBMCRBK7hj4Ov3rIwAA+n0IADDPMj3BTF5R4JIeCu3CIyBk\ndM3poecZS09fqTm/kMTqtNW4QPMKYlrgjgAEzTfdD6pseMA3cMmdrPPT5muohBVV\nOYOqRJyzdwi9WyW5jmXuh1aJsdusSG1rkBj68yc19yppyar/3tO9UYc+NxapkTKw\nxADUY8ys8HSwep82cr+MZ0S7Y/c40+SsaoPU//scq+KBIA4CZueR5NG3arFdY33I\nF1fNTXeNiW/jOH78MFpJl9I/n1p7rwAwfewoB5ertvz2bpTr3G5WBbMEOpnGB5HY\nhQ/NZG8unSBJmnSeH7c/VjJE9MeCfEx7JwwzULZZIz4lUoZjGx6D40gaNU26eEU=\n=1wtg\n-----END PGP SIGNATURE-----\n", "payload": "tree e659cb0c882a12057d1afc45a582120468cd95cb\nparent 49a31cdc1df848e9de07687af5c1d3d6fa5edb66\nparent 1b7008dc77e25049b04e5c3e31aecf4de00803e7\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1650085964 +0200\ncommitter GitHub <noreply@github.com> 1650085964 +0200\n\nRollup merge of #95859 - rainy-me:unterminated-nested-block-comment, r=petrochenkov\n\nImprove diagnostics for unterminated nested block comment\n\nclose #95283\n\n(This is my first time try to messing around with rust compiler and might get a lot of things wrong... :bow: )\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/946d76ec0e3d965bf9a8d3524434abf27db7ecd6", "html_url": "https://github.com/rust-lang/rust/commit/946d76ec0e3d965bf9a8d3524434abf27db7ecd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/946d76ec0e3d965bf9a8d3524434abf27db7ecd6/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49a31cdc1df848e9de07687af5c1d3d6fa5edb66", "url": "https://api.github.com/repos/rust-lang/rust/commits/49a31cdc1df848e9de07687af5c1d3d6fa5edb66", "html_url": "https://github.com/rust-lang/rust/commit/49a31cdc1df848e9de07687af5c1d3d6fa5edb66"}, {"sha": "1b7008dc77e25049b04e5c3e31aecf4de00803e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b7008dc77e25049b04e5c3e31aecf4de00803e7", "html_url": "https://github.com/rust-lang/rust/commit/1b7008dc77e25049b04e5c3e31aecf4de00803e7"}], "stats": {"total": 85, "additions": 75, "deletions": 10}, "files": [{"sha": "bfa13ce79bab47c99c376d857ea671ffbbb90d3c", "filename": "compiler/rustc_parse/src/lexer/mod.rs", "status": "modified", "additions": 50, "deletions": 10, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/946d76ec0e3d965bf9a8d3524434abf27db7ecd6/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/946d76ec0e3d965bf9a8d3524434abf27db7ecd6/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs?ref=946d76ec0e3d965bf9a8d3524434abf27db7ecd6", "patch": "@@ -182,16 +182,7 @@ impl<'a> StringReader<'a> {\n             }\n             rustc_lexer::TokenKind::BlockComment { doc_style, terminated } => {\n                 if !terminated {\n-                    let msg = match doc_style {\n-                        Some(_) => \"unterminated block doc-comment\",\n-                        None => \"unterminated block comment\",\n-                    };\n-                    let last_bpos = self.pos;\n-                    self.sess.span_diagnostic.span_fatal_with_code(\n-                        self.mk_sp(start, last_bpos),\n-                        msg,\n-                        error_code!(E0758),\n-                    );\n+                    self.report_unterminated_block_comment(start, doc_style);\n                 }\n \n                 // Skip non-doc comments\n@@ -553,6 +544,55 @@ impl<'a> StringReader<'a> {\n         err.emit()\n     }\n \n+    fn report_unterminated_block_comment(&self, start: BytePos, doc_style: Option<DocStyle>) {\n+        let msg = match doc_style {\n+            Some(_) => \"unterminated block doc-comment\",\n+            None => \"unterminated block comment\",\n+        };\n+        let last_bpos = self.pos;\n+        let mut err = self.sess.span_diagnostic.struct_span_fatal_with_code(\n+            self.mk_sp(start, last_bpos),\n+            msg,\n+            error_code!(E0758),\n+        );\n+        let mut nested_block_comment_open_idxs = vec![];\n+        let mut last_nested_block_comment_idxs = None;\n+        let mut content_chars = self.str_from(start).char_indices().peekable();\n+\n+        while let Some((idx, current_char)) = content_chars.next() {\n+            match content_chars.peek() {\n+                Some((_, '*')) if current_char == '/' => {\n+                    nested_block_comment_open_idxs.push(idx);\n+                }\n+                Some((_, '/')) if current_char == '*' => {\n+                    last_nested_block_comment_idxs =\n+                        nested_block_comment_open_idxs.pop().map(|open_idx| (open_idx, idx));\n+                }\n+                _ => {}\n+            };\n+        }\n+\n+        if let Some((nested_open_idx, nested_close_idx)) = last_nested_block_comment_idxs {\n+            err.span_label(self.mk_sp(start, start + BytePos(2)), msg)\n+                .span_label(\n+                    self.mk_sp(\n+                        start + BytePos(nested_open_idx as u32),\n+                        start + BytePos(nested_open_idx as u32 + 2),\n+                    ),\n+                    \"...as last nested comment starts here, maybe you want to close this instead?\",\n+                )\n+                .span_label(\n+                    self.mk_sp(\n+                        start + BytePos(nested_close_idx as u32),\n+                        start + BytePos(nested_close_idx as u32 + 2),\n+                    ),\n+                    \"...and last nested comment terminates here.\",\n+                );\n+        }\n+\n+        err.emit();\n+    }\n+\n     // RFC 3101 introduced the idea of (reserved) prefixes. As of Rust 2021,\n     // using a (unknown) prefix is an error. In earlier editions, however, they\n     // only result in a (allowed by default) lint, and are treated as regular"}, {"sha": "db5f2f3ba1358857690e58e5cb1d205e302f31b8", "filename": "src/test/ui/unterminated-nested-comment.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/946d76ec0e3d965bf9a8d3524434abf27db7ecd6/src%2Ftest%2Fui%2Funterminated-nested-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/946d76ec0e3d965bf9a8d3524434abf27db7ecd6/src%2Ftest%2Fui%2Funterminated-nested-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funterminated-nested-comment.rs?ref=946d76ec0e3d965bf9a8d3524434abf27db7ecd6", "patch": "@@ -0,0 +1,4 @@\n+/* //~ ERROR E0758\n+/* */\n+/*\n+*/"}, {"sha": "3653e76c9cbda713c6da614711217e67accbd01f", "filename": "src/test/ui/unterminated-nested-comment.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/946d76ec0e3d965bf9a8d3524434abf27db7ecd6/src%2Ftest%2Fui%2Funterminated-nested-comment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/946d76ec0e3d965bf9a8d3524434abf27db7ecd6/src%2Ftest%2Fui%2Funterminated-nested-comment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funterminated-nested-comment.stderr?ref=946d76ec0e3d965bf9a8d3524434abf27db7ecd6", "patch": "@@ -0,0 +1,21 @@\n+error[E0758]: unterminated block comment\n+  --> $DIR/unterminated-nested-comment.rs:1:1\n+   |\n+LL |   /*\n+   |   ^-\n+   |   |\n+   |  _unterminated block comment\n+   | |\n+LL | | /* */\n+LL | | /*\n+   | | --\n+   | | |\n+   | | ...as last nested comment starts here, maybe you want to close this instead?\n+LL | | */\n+   | |_--^\n+   |   |\n+   |   ...and last nested comment terminates here.\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0758`."}]}