{"sha": "beece25abefb50cb2db91e5cde1f54e239d6e20a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZWNlMjVhYmVmYjUwY2IyZGI5MWU1Y2RlMWY1NGUyMzlkNmUyMGE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-27T19:19:52Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-27T23:45:54Z"}, "message": "parser: Fix lookahead of > 1 token", "tree": {"sha": "ec85323ae6ebce095372535b34dde0b14c521f2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec85323ae6ebce095372535b34dde0b14c521f2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beece25abefb50cb2db91e5cde1f54e239d6e20a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beece25abefb50cb2db91e5cde1f54e239d6e20a", "html_url": "https://github.com/rust-lang/rust/commit/beece25abefb50cb2db91e5cde1f54e239d6e20a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beece25abefb50cb2db91e5cde1f54e239d6e20a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "345a21916cdbdaf075182bf45251c71cf06cb4ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/345a21916cdbdaf075182bf45251c71cf06cb4ad", "html_url": "https://github.com/rust-lang/rust/commit/345a21916cdbdaf075182bf45251c71cf06cb4ad"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e2117a27ec3770d7c102e3c6ba17311151de0355", "filename": "src/librustsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/beece25abefb50cb2db91e5cde1f54e239d6e20a/src%2Flibrustsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beece25abefb50cb2db91e5cde1f54e239d6e20a/src%2Flibrustsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fparse%2Fparser.rs?ref=beece25abefb50cb2db91e5cde1f54e239d6e20a", "patch": "@@ -69,7 +69,7 @@ impl parser for parser {\n             self.token = next.tok;\n             self.span = mk_sp(next.chpos, self.reader.chpos);\n         } else {\n-            let next = vec::pop(self.buffer);\n+            let next = vec::shift(self.buffer);\n             self.token = next.tok;\n             self.span = next.span;\n         }\n@@ -82,7 +82,7 @@ impl parser for parser {\n         while vec::len(self.buffer) < distance {\n             let next = lexer::next_token(self.reader);\n             let sp = mk_sp(next.chpos, self.reader.chpos);\n-            self.buffer = [{tok: next.tok, span: sp}] + self.buffer;\n+            vec::push(self.buffer, {tok: next.tok, span: sp});\n         }\n         ret self.buffer[distance - 1u].tok;\n     }"}]}