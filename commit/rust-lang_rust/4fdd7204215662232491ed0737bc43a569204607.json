{"sha": "4fdd7204215662232491ed0737bc43a569204607", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZGQ3MjA0MjE1NjYyMjMyNDkxZWQwNzM3YmM0M2E1NjkyMDQ2MDc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-05T06:16:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-05T06:16:59Z"}, "message": "auto merge of #8299 : brson/rust/yet-more-newsched-fixes, r=brson", "tree": {"sha": "c3612929642b19ee640acebc5b3dd1fb18e30193", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3612929642b19ee640acebc5b3dd1fb18e30193"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fdd7204215662232491ed0737bc43a569204607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fdd7204215662232491ed0737bc43a569204607", "html_url": "https://github.com/rust-lang/rust/commit/4fdd7204215662232491ed0737bc43a569204607", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fdd7204215662232491ed0737bc43a569204607/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83d2a0431cf722f3a4cc1c51cdc05f544c3d1cb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/83d2a0431cf722f3a4cc1c51cdc05f544c3d1cb1", "html_url": "https://github.com/rust-lang/rust/commit/83d2a0431cf722f3a4cc1c51cdc05f544c3d1cb1"}, {"sha": "167bdff04164c92c203c319b730bdc2344dbe089", "url": "https://api.github.com/repos/rust-lang/rust/commits/167bdff04164c92c203c319b730bdc2344dbe089", "html_url": "https://github.com/rust-lang/rust/commit/167bdff04164c92c203c319b730bdc2344dbe089"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "6e11d14aea9a316d069403083e9e97af069a6115", "filename": "src/libstd/logging.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4fdd7204215662232491ed0737bc43a569204607/src%2Flibstd%2Flogging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fdd7204215662232491ed0737bc43a569204607/src%2Flibstd%2Flogging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flogging.rs?ref=4fdd7204215662232491ed0737bc43a569204607", "patch": "@@ -85,16 +85,6 @@ pub fn log_type<T>(level: u32, object: &T) {\n fn newsched_log_str(msg: ~str) {\n     use rt::task::Task;\n     use rt::local::Local;\n-    use str::StrSlice;\n-    use container::Container;\n-\n-    // Truncate the string\n-    let buf_bytes = 256;\n-    let msg = if msg.len() > buf_bytes {\n-        msg.slice(0, buf_bytes) + \"[...]\"\n-    } else {\n-        msg\n-    };\n \n     unsafe {\n         match Local::try_unsafe_borrow::<Task>() {"}, {"sha": "9056f0d52e09a1492231a472b122ae773bcbdc6a", "filename": "src/libstd/rt/logging.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4fdd7204215662232491ed0737bc43a569204607/src%2Flibstd%2Frt%2Flogging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fdd7204215662232491ed0737bc43a569204607/src%2Flibstd%2Frt%2Flogging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Flogging.rs?ref=4fdd7204215662232491ed0737bc43a569204607", "patch": "@@ -10,6 +10,7 @@\n \n use either::*;\n use libc;\n+use str::StrSlice;\n \n pub trait Logger {\n     fn log(&mut self, msg: Either<~str, &'static str>);\n@@ -35,10 +36,22 @@ impl Logger for StdErrLogger {\n                 s\n             }\n         };\n-        let dbg = ::libc::STDERR_FILENO as ::io::fd_t;\n-        dbg.write_str(s);\n-        dbg.write_str(\"\\n\");\n-        dbg.flush();\n+\n+        // Truncate the string\n+        let buf_bytes = 256;\n+        if s.len() > buf_bytes {\n+            let s = s.slice(0, buf_bytes) + \"[...]\";\n+            print(s);\n+        } else {\n+            print(s)\n+        };\n+\n+        fn print(s: &str) {\n+            let dbg = ::libc::STDERR_FILENO as ::io::fd_t;\n+            dbg.write_str(s);\n+            dbg.write_str(\"\\n\");\n+            dbg.flush();\n+        }\n     }\n }\n "}, {"sha": "1a75f2569b59ea073303e18ca98451ac2cae0004", "filename": "src/libstd/rt/sched.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fdd7204215662232491ed0737bc43a569204607/src%2Flibstd%2Frt%2Fsched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fdd7204215662232491ed0737bc43a569204607/src%2Flibstd%2Frt%2Fsched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fsched.rs?ref=4fdd7204215662232491ed0737bc43a569204607", "patch": "@@ -339,8 +339,8 @@ impl Scheduler {\n         let mut this = self;\n         match this.message_queue.pop() {\n             Some(PinnedTask(task)) => {\n-                let mut task = task;\n                 this.event_loop.callback(Scheduler::run_sched_once);\n+                let mut task = task;\n                 task.give_home(Sched(this.make_handle()));\n                 this.resume_task_immediately(task);\n                 return None;\n@@ -351,10 +351,12 @@ impl Scheduler {\n                 return this.sched_schedule_task(task);\n             }\n             Some(Wake) => {\n+                this.event_loop.callback(Scheduler::run_sched_once);\n                 this.sleepy = false;\n                 return Some(this);\n             }\n             Some(Shutdown) => {\n+                this.event_loop.callback(Scheduler::run_sched_once);\n                 if this.sleepy {\n                     // There may be an outstanding handle on the\n                     // sleeper list.  Pop them all to make sure that's"}]}