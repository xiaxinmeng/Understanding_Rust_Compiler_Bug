{"sha": "d814d10069122c61d7d275fe6305382703b60448", "node_id": "C_kwDOAAsO6NoAKGQ4MTRkMTAwNjkxMjJjNjFkN2QyNzVmZTYzMDUzODI3MDNiNjA0NDg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-03T00:52:15Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-31T13:22:44Z"}, "message": "interpret: use new OpTy::len for Len rvalue\n\nThis avoids a `force_allocation`", "tree": {"sha": "b42e171e25c0a6dbcc91f5b7f16f38c9c89cd4c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b42e171e25c0a6dbcc91f5b7f16f38c9c89cd4c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d814d10069122c61d7d275fe6305382703b60448", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d814d10069122c61d7d275fe6305382703b60448", "html_url": "https://github.com/rust-lang/rust/commit/d814d10069122c61d7d275fe6305382703b60448", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d814d10069122c61d7d275fe6305382703b60448/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f442f8ba174fd4233a14ef4d7b577aa907db594", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f442f8ba174fd4233a14ef4d7b577aa907db594", "html_url": "https://github.com/rust-lang/rust/commit/7f442f8ba174fd4233a14ef4d7b577aa907db594"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6b827149f505ea60f6c7c44e1d7fb39652eb67fa", "filename": "compiler/rustc_const_eval/src/interpret/step.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d814d10069122c61d7d275fe6305382703b60448/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d814d10069122c61d7d275fe6305382703b60448/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs?ref=d814d10069122c61d7d275fe6305382703b60448", "patch": "@@ -251,8 +251,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n             Len(place) => {\n                 let src = self.eval_place(place)?;\n-                let mplace = self.force_allocation(&src)?;\n-                let len = mplace.len(self)?;\n+                let op = self.place_to_op(&src)?;\n+                let len = op.len(self)?;\n                 self.write_scalar(Scalar::from_machine_usize(len, self), &dest)?;\n             }\n "}]}