{"sha": "ac194cafc124276d4614bf023ca7ea6e9be9c6ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjMTk0Y2FmYzEyNDI3NmQ0NjE0YmYwMjNjYTdlYTZlOWJlOWM2ZWQ=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-08-11T09:53:21Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-08-11T13:15:26Z"}, "message": "map_clone: make lint adhere to lint message convention", "tree": {"sha": "b95fb1e653d299773a5e2762dfc0c72890382200", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b95fb1e653d299773a5e2762dfc0c72890382200"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac194cafc124276d4614bf023ca7ea6e9be9c6ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac194cafc124276d4614bf023ca7ea6e9be9c6ed", "html_url": "https://github.com/rust-lang/rust/commit/ac194cafc124276d4614bf023ca7ea6e9be9c6ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac194cafc124276d4614bf023ca7ea6e9be9c6ed/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0a9d64818d7076b72fd6c3a9e6172eca659034b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0a9d64818d7076b72fd6c3a9e6172eca659034b", "html_url": "https://github.com/rust-lang/rust/commit/c0a9d64818d7076b72fd6c3a9e6172eca659034b"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "1cd5b2012922f72ac65772a64de3af1f3d38c2e8", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac194cafc124276d4614bf023ca7ea6e9be9c6ed/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac194cafc124276d4614bf023ca7ea6e9be9c6ed/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=ac194cafc124276d4614bf023ca7ea6e9be9c6ed", "patch": "@@ -111,8 +111,8 @@ fn lint_needless_cloning(cx: &LateContext<'_>, root: Span, receiver: Span) {\n         cx,\n         MAP_CLONE,\n         root.trim_start(receiver).unwrap(),\n-        \"You are needlessly cloning iterator elements\",\n-        \"Remove the `map` call\",\n+        \"you are needlessly cloning iterator elements\",\n+        \"remove the `map` call\",\n         String::new(),\n         Applicability::MachineApplicable,\n     )\n@@ -125,8 +125,8 @@ fn lint(cx: &LateContext<'_>, replace: Span, root: Span, copied: bool) {\n             cx,\n             MAP_CLONE,\n             replace,\n-            \"You are using an explicit closure for copying elements\",\n-            \"Consider calling the dedicated `copied` method\",\n+            \"you are using an explicit closure for copying elements\",\n+            \"consider calling the dedicated `copied` method\",\n             format!(\n                 \"{}.copied()\",\n                 snippet_with_applicability(cx, root, \"..\", &mut applicability)\n@@ -138,8 +138,8 @@ fn lint(cx: &LateContext<'_>, replace: Span, root: Span, copied: bool) {\n             cx,\n             MAP_CLONE,\n             replace,\n-            \"You are using an explicit closure for cloning elements\",\n-            \"Consider calling the dedicated `cloned` method\",\n+            \"you are using an explicit closure for cloning elements\",\n+            \"consider calling the dedicated `cloned` method\",\n             format!(\n                 \"{}.cloned()\",\n                 snippet_with_applicability(cx, root, \"..\", &mut applicability)"}, {"sha": "4f43cff50244449b93b23b76db601285132eab85", "filename": "tests/ui/map_clone.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ac194cafc124276d4614bf023ca7ea6e9be9c6ed/tests%2Fui%2Fmap_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac194cafc124276d4614bf023ca7ea6e9be9c6ed/tests%2Fui%2Fmap_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_clone.stderr?ref=ac194cafc124276d4614bf023ca7ea6e9be9c6ed", "patch": "@@ -1,40 +1,40 @@\n-error: You are using an explicit closure for copying elements\n+error: you are using an explicit closure for copying elements\n   --> $DIR/map_clone.rs:10:22\n    |\n LL |     let _: Vec<i8> = vec![5_i8; 6].iter().map(|x| *x).collect();\n-   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `copied` method: `vec![5_i8; 6].iter().copied()`\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling the dedicated `copied` method: `vec![5_i8; 6].iter().copied()`\n    |\n    = note: `-D clippy::map-clone` implied by `-D warnings`\n \n-error: You are using an explicit closure for cloning elements\n+error: you are using an explicit closure for cloning elements\n   --> $DIR/map_clone.rs:11:26\n    |\n LL |     let _: Vec<String> = vec![String::new()].iter().map(|x| x.clone()).collect();\n-   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `cloned` method: `vec![String::new()].iter().cloned()`\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling the dedicated `cloned` method: `vec![String::new()].iter().cloned()`\n \n-error: You are using an explicit closure for copying elements\n+error: you are using an explicit closure for copying elements\n   --> $DIR/map_clone.rs:12:23\n    |\n LL |     let _: Vec<u32> = vec![42, 43].iter().map(|&x| x).collect();\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `copied` method: `vec![42, 43].iter().copied()`\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling the dedicated `copied` method: `vec![42, 43].iter().copied()`\n \n-error: You are using an explicit closure for copying elements\n+error: you are using an explicit closure for copying elements\n   --> $DIR/map_clone.rs:14:26\n    |\n LL |     let _: Option<u64> = Some(&16).map(|b| *b);\n-   |                          ^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `copied` method: `Some(&16).copied()`\n+   |                          ^^^^^^^^^^^^^^^^^^^^^ help: consider calling the dedicated `copied` method: `Some(&16).copied()`\n \n-error: You are using an explicit closure for copying elements\n+error: you are using an explicit closure for copying elements\n   --> $DIR/map_clone.rs:15:25\n    |\n LL |     let _: Option<u8> = Some(&1).map(|x| x.clone());\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `copied` method: `Some(&1).copied()`\n+   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling the dedicated `copied` method: `Some(&1).copied()`\n \n-error: You are needlessly cloning iterator elements\n+error: you are needlessly cloning iterator elements\n   --> $DIR/map_clone.rs:26:29\n    |\n LL |     let _ = std::env::args().map(|v| v.clone());\n-   |                             ^^^^^^^^^^^^^^^^^^^ help: Remove the `map` call\n+   |                             ^^^^^^^^^^^^^^^^^^^ help: remove the `map` call\n \n error: aborting due to 6 previous errors\n "}]}