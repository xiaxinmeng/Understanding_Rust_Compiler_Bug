{"sha": "13a05a27e9a5747cad090b1670c0a6b0baa624b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzYTA1YTI3ZTlhNTc0N2NhZDA5MGIxNjcwYzBhNmIwYmFhNjI0Yjk=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-04-12T03:01:19Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-04-12T03:01:19Z"}, "message": "Continue evaluating after missing main", "tree": {"sha": "a375152556249b01e08cc699dae3ced3b3ad150b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a375152556249b01e08cc699dae3ced3b3ad150b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13a05a27e9a5747cad090b1670c0a6b0baa624b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13a05a27e9a5747cad090b1670c0a6b0baa624b9", "html_url": "https://github.com/rust-lang/rust/commit/13a05a27e9a5747cad090b1670c0a6b0baa624b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13a05a27e9a5747cad090b1670c0a6b0baa624b9/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96d700f1b7bc9c53fa0d11567adb1ed2c1c27e79", "url": "https://api.github.com/repos/rust-lang/rust/commits/96d700f1b7bc9c53fa0d11567adb1ed2c1c27e79", "html_url": "https://github.com/rust-lang/rust/commit/96d700f1b7bc9c53fa0d11567adb1ed2c1c27e79"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "df77033ebef3b5999d489a8dcc3ee6368a95364a", "filename": "src/librustc/middle/entry.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13a05a27e9a5747cad090b1670c0a6b0baa624b9/src%2Flibrustc%2Fmiddle%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13a05a27e9a5747cad090b1670c0a6b0baa624b9/src%2Flibrustc%2Fmiddle%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fentry.rs?ref=13a05a27e9a5747cad090b1670c0a6b0baa624b9", "patch": "@@ -163,7 +163,6 @@ fn configure_main(\n                 err.span_note(span, \"here is a function named 'main'\");\n             }\n             err.emit();\n-            tcx.sess.abort_if_errors();\n         } else {\n             if let Some(ref filename) = tcx.sess.local_crate_source_file {\n                 err.note(&format!(\"consider adding a `main` function to `{}`\", filename.display()));"}, {"sha": "dc43d3c1aca2ae8dc621a54a9df3eb16c9098d2b", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/13a05a27e9a5747cad090b1670c0a6b0baa624b9/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13a05a27e9a5747cad090b1670c0a6b0baa624b9/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=13a05a27e9a5747cad090b1670c0a6b0baa624b9", "patch": "@@ -888,10 +888,11 @@ fn analysis<'tcx>(\n     assert_eq!(cnum, LOCAL_CRATE);\n \n     let sess = tcx.sess;\n+    let mut entry_point = None;\n \n     time(sess, \"misc checking 1\", || {\n         parallel!({\n-            time(sess, \"looking for entry point\", || {\n+            entry_point = time(sess, \"looking for entry point\", || {\n                 middle::entry::find_entry_point(tcx)\n             });\n \n@@ -939,7 +940,10 @@ fn analysis<'tcx>(\n \n     // Abort so we don't try to construct MIR with liveness errors.\n     // We also won't want to continue with errors from rvalue promotion\n-    tcx.sess.abort_if_errors();\n+    // We only do so if the only error found so far *isn't* a missing `fn main()`\n+    if !(entry_point.is_none() && sess.err_count() == 1) {\n+        tcx.sess.abort_if_errors();\n+    }\n \n     time(sess, \"borrow checking\", || {\n         if tcx.use_ast_borrowck() {"}, {"sha": "7455c2a431d6289fdb7c9bb8f2255d183afe8843", "filename": "src/test/ui/continue-after-missing-main.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/13a05a27e9a5747cad090b1670c0a6b0baa624b9/src%2Ftest%2Fui%2Fcontinue-after-missing-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13a05a27e9a5747cad090b1670c0a6b0baa624b9/src%2Ftest%2Fui%2Fcontinue-after-missing-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcontinue-after-missing-main.rs?ref=13a05a27e9a5747cad090b1670c0a6b0baa624b9", "patch": "@@ -0,0 +1,32 @@\n+#![allow(dead_code)]\n+\n+// error-pattern:`main` function not found in crate\n+\n+struct Tableau<'a, MP> {\n+    provider: &'a MP,\n+}\n+\n+impl<'adapted_matrix_provider, 'original_data, MP>\n+    Tableau<'adapted_matrix_provider, AdaptedMatrixProvider<'original_data, MP>>\n+{\n+    fn provider(&self) -> &'adapted_matrix_provider AdaptedMatrixProvider</*'original_data,*/ MP> {\n+        self.provider\n+    }\n+}\n+\n+struct AdaptedMatrixProvider<'a, T> {\n+    original_problem: &'a T,\n+}\n+\n+impl<'a, T> AdaptedMatrixProvider<'a, T> {\n+    fn clone_with_extra_bound(&self) -> Self {\n+        AdaptedMatrixProvider { original_problem: self.original_problem }\n+    }\n+}\n+\n+fn create_and_solve_subproblems<'data_provider, 'original_data, MP>(\n+    tableau: Tableau<'data_provider, AdaptedMatrixProvider<'original_data, MP>>,\n+) {\n+    let _: AdaptedMatrixProvider<'original_data, MP> = tableau.provider().clone_with_extra_bound();\n+    //~^ ERROR lifetime mismatch\n+}"}, {"sha": "8d64fee8bdaee81c49167aac1601115379b7b9bc", "filename": "src/test/ui/continue-after-missing-main.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/13a05a27e9a5747cad090b1670c0a6b0baa624b9/src%2Ftest%2Fui%2Fcontinue-after-missing-main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/13a05a27e9a5747cad090b1670c0a6b0baa624b9/src%2Ftest%2Fui%2Fcontinue-after-missing-main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcontinue-after-missing-main.stderr?ref=13a05a27e9a5747cad090b1670c0a6b0baa624b9", "patch": "@@ -0,0 +1,17 @@\n+error[E0601]: `main` function not found in crate `continue_after_missing_main`\n+   |\n+   = note: consider adding a `main` function to `$DIR/continue-after-missing-main.rs`\n+\n+error[E0623]: lifetime mismatch\n+  --> $DIR/continue-after-missing-main.rs:30:56\n+   |\n+LL |     tableau: Tableau<'data_provider, AdaptedMatrixProvider<'original_data, MP>>,\n+   |              ------------------------------------------------------------------ these two types are declared with different lifetimes...\n+LL | ) {\n+LL |     let _: AdaptedMatrixProvider<'original_data, MP> = tableau.provider().clone_with_extra_bound();\n+   |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ...but data from `tableau` flows into `tableau` here\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0601, E0623.\n+For more information about an error, try `rustc --explain E0601`."}]}