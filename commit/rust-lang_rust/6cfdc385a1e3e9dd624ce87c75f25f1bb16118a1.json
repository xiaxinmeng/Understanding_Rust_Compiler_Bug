{"sha": "6cfdc385a1e3e9dd624ce87c75f25f1bb16118a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjZmRjMzg1YTFlM2U5ZGQ2MjRjZTg3Yzc1ZjI1ZjFiYjE2MTE4YTE=", "commit": {"author": {"name": "Kornel", "email": "kornel@geekhood.net", "date": "2021-03-18T18:43:08Z"}, "committer": {"name": "Kornel", "email": "kornel@geekhood.net", "date": "2021-03-18T20:07:29Z"}, "message": "Expand documentation of Iterator::take and skip", "tree": {"sha": "36af59104a461697745d069d7515e7e40283235e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36af59104a461697745d069d7515e7e40283235e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cfdc385a1e3e9dd624ce87c75f25f1bb16118a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cfdc385a1e3e9dd624ce87c75f25f1bb16118a1", "html_url": "https://github.com/rust-lang/rust/commit/6cfdc385a1e3e9dd624ce87c75f25f1bb16118a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cfdc385a1e3e9dd624ce87c75f25f1bb16118a1/comments", "author": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d0446f1a7bb60b8c355b50b8c9daae8ecfae7df", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d0446f1a7bb60b8c355b50b8c9daae8ecfae7df", "html_url": "https://github.com/rust-lang/rust/commit/9d0446f1a7bb60b8c355b50b8c9daae8ecfae7df"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "4c6039946474d858ccde1e78d54cf9ab4efa2a26", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6cfdc385a1e3e9dd624ce87c75f25f1bb16118a1/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cfdc385a1e3e9dd624ce87c75f25f1bb16118a1/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=6cfdc385a1e3e9dd624ce87c75f25f1bb16118a1", "patch": "@@ -1228,7 +1228,11 @@ pub trait Iterator {\n \n     /// Creates an iterator that skips the first `n` elements.\n     ///\n-    /// After they have been consumed, the rest of the elements are yielded.\n+    /// `skip(n)` skips elements until `n` elements are skipped or the end of the\n+    /// iterator is reached (whichever happens first). After that, all the remaining\n+    /// elements are yielded. In particular, if the original iterator is too short,\n+    /// then the returned iterator is empty.\n+    ///\n     /// Rather than overriding this method directly, instead override the `nth` method.\n     ///\n     /// # Examples\n@@ -1252,7 +1256,14 @@ pub trait Iterator {\n         Skip::new(self, n)\n     }\n \n-    /// Creates an iterator that yields its first `n` elements.\n+    /// Creates an iterator that yields the first `n` elements, or fewer\n+    /// if the underlying iterator ends sooner.\n+    ///\n+    /// `take(n)` yields elements until `n` elements are yielded or the end of\n+    /// the iterator is reached (whichever happens first).\n+    /// The returned iterator is a prefix of length `n` if the original iterator\n+    /// contains at least `n` elements, otherwise it contains all of the\n+    /// (fewer than `n`) elements of the original iterator.\n     ///\n     /// # Examples\n     ///"}]}