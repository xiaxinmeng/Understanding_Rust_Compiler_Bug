{"sha": "cff6c0e0c8d33efe4b64b08751008ac353c9b232", "node_id": "C_kwDOAAsO6NoAKGNmZjZjMGUwYzhkMzNlZmU0YjY0YjA4NzUxMDA4YWMzNTNjOWIyMzI", "commit": {"author": {"name": "whtahy", "email": "whtahy@users.noreply.github.com", "date": "2023-04-22T17:37:13Z"}, "committer": {"name": "whtahy", "email": "whtahy@users.noreply.github.com", "date": "2023-04-22T17:37:13Z"}, "message": "add known-bug test for unsound issue 100041", "tree": {"sha": "30f7e1dd05afa48aa931589e50c373b82d2946c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30f7e1dd05afa48aa931589e50c373b82d2946c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cff6c0e0c8d33efe4b64b08751008ac353c9b232", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cff6c0e0c8d33efe4b64b08751008ac353c9b232", "html_url": "https://github.com/rust-lang/rust/commit/cff6c0e0c8d33efe4b64b08751008ac353c9b232", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cff6c0e0c8d33efe4b64b08751008ac353c9b232/comments", "author": {"login": "whtahy", "id": 19783477, "node_id": "MDQ6VXNlcjE5NzgzNDc3", "avatar_url": "https://avatars.githubusercontent.com/u/19783477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whtahy", "html_url": "https://github.com/whtahy", "followers_url": "https://api.github.com/users/whtahy/followers", "following_url": "https://api.github.com/users/whtahy/following{/other_user}", "gists_url": "https://api.github.com/users/whtahy/gists{/gist_id}", "starred_url": "https://api.github.com/users/whtahy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whtahy/subscriptions", "organizations_url": "https://api.github.com/users/whtahy/orgs", "repos_url": "https://api.github.com/users/whtahy/repos", "events_url": "https://api.github.com/users/whtahy/events{/privacy}", "received_events_url": "https://api.github.com/users/whtahy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "whtahy", "id": 19783477, "node_id": "MDQ6VXNlcjE5NzgzNDc3", "avatar_url": "https://avatars.githubusercontent.com/u/19783477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whtahy", "html_url": "https://github.com/whtahy", "followers_url": "https://api.github.com/users/whtahy/followers", "following_url": "https://api.github.com/users/whtahy/following{/other_user}", "gists_url": "https://api.github.com/users/whtahy/gists{/gist_id}", "starred_url": "https://api.github.com/users/whtahy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whtahy/subscriptions", "organizations_url": "https://api.github.com/users/whtahy/orgs", "repos_url": "https://api.github.com/users/whtahy/repos", "events_url": "https://api.github.com/users/whtahy/events{/privacy}", "received_events_url": "https://api.github.com/users/whtahy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "314126257d3d20e3e788325f3b88b7e635bd6bb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/314126257d3d20e3e788325f3b88b7e635bd6bb8", "html_url": "https://github.com/rust-lang/rust/commit/314126257d3d20e3e788325f3b88b7e635bd6bb8"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "473fc79a8a39dfc0ca022769b69a93fc7c85af89", "filename": "tests/ui/wf/wf-normalization-sized.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cff6c0e0c8d33efe4b64b08751008ac353c9b232/tests%2Fui%2Fwf%2Fwf-normalization-sized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cff6c0e0c8d33efe4b64b08751008ac353c9b232/tests%2Fui%2Fwf%2Fwf-normalization-sized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwf%2Fwf-normalization-sized.rs?ref=cff6c0e0c8d33efe4b64b08751008ac353c9b232", "patch": "@@ -0,0 +1,19 @@\n+// check-pass\n+// known-bug: #100041\n+\n+// Should fail. Normalization can bypass well-formedness checking.\n+// `[[[[[[u8]]]]]]` is not a well-formed type since size of type `[u8]` cannot\n+// be known at compile time (since `Sized` is not implemented for `[u8]`).\n+\n+trait WellUnformed {\n+    type RequestNormalize;\n+}\n+\n+impl<T: ?Sized> WellUnformed for T {\n+    type RequestNormalize = ();\n+}\n+\n+const _: <[[[[[[u8]]]]]] as WellUnformed>::RequestNormalize = ();\n+const _: <Vec<str> as WellUnformed>::RequestNormalize = ();\n+\n+fn main() {}"}]}