{"sha": "77005950f09d2f9ba54962bf5adc3f2bc3a7213f", "node_id": "C_kwDOAAsO6NoAKDc3MDA1OTUwZjA5ZDJmOWJhNTQ5NjJiZjVhZGMzZjJiYzNhNzIxM2Y", "commit": {"author": {"name": "Arthur Carcano", "email": "arthur.carcano@ocamlpro.com", "date": "2022-11-25T16:47:00Z"}, "committer": {"name": "Arthur Carcano", "email": "arthur.carcano@ocamlpro.com", "date": "2022-11-25T17:15:59Z"}, "message": "Implement masking in FileType comparison on Unix\n\nFixes: https://github.com/rust-lang/rust/issues/104900", "tree": {"sha": "39fb4ef999872a5c9f116ddbe532f48cd20cacf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39fb4ef999872a5c9f116ddbe532f48cd20cacf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77005950f09d2f9ba54962bf5adc3f2bc3a7213f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77005950f09d2f9ba54962bf5adc3f2bc3a7213f", "html_url": "https://github.com/rust-lang/rust/commit/77005950f09d2f9ba54962bf5adc3f2bc3a7213f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77005950f09d2f9ba54962bf5adc3f2bc3a7213f/comments", "author": {"login": "krtab", "id": 53921575, "node_id": "MDQ6VXNlcjUzOTIxNTc1", "avatar_url": "https://avatars.githubusercontent.com/u/53921575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krtab", "html_url": "https://github.com/krtab", "followers_url": "https://api.github.com/users/krtab/followers", "following_url": "https://api.github.com/users/krtab/following{/other_user}", "gists_url": "https://api.github.com/users/krtab/gists{/gist_id}", "starred_url": "https://api.github.com/users/krtab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krtab/subscriptions", "organizations_url": "https://api.github.com/users/krtab/orgs", "repos_url": "https://api.github.com/users/krtab/repos", "events_url": "https://api.github.com/users/krtab/events{/privacy}", "received_events_url": "https://api.github.com/users/krtab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "krtab", "id": 53921575, "node_id": "MDQ6VXNlcjUzOTIxNTc1", "avatar_url": "https://avatars.githubusercontent.com/u/53921575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krtab", "html_url": "https://github.com/krtab", "followers_url": "https://api.github.com/users/krtab/followers", "following_url": "https://api.github.com/users/krtab/following{/other_user}", "gists_url": "https://api.github.com/users/krtab/gists{/gist_id}", "starred_url": "https://api.github.com/users/krtab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krtab/subscriptions", "organizations_url": "https://api.github.com/users/krtab/orgs", "repos_url": "https://api.github.com/users/krtab/repos", "events_url": "https://api.github.com/users/krtab/events{/privacy}", "received_events_url": "https://api.github.com/users/krtab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e704e95250ff4e949214f390a88f21d08052bea1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e704e95250ff4e949214f390a88f21d08052bea1", "html_url": "https://github.com/rust-lang/rust/commit/e704e95250ff4e949214f390a88f21d08052bea1"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "382204d689318290132108ba8ef61aaf8a43560b", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/77005950f09d2f9ba54962bf5adc3f2bc3a7213f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77005950f09d2f9ba54962bf5adc3f2bc3a7213f/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=77005950f09d2f9ba54962bf5adc3f2bc3a7213f", "patch": "@@ -332,11 +332,16 @@ pub struct FileTimes {\n     modified: Option<SystemTime>,\n }\n \n-#[derive(Copy, Clone, PartialEq, Eq, Hash, Debug)]\n+#[derive(Copy, Clone, Eq, Hash, Debug)]\n pub struct FileType {\n     mode: mode_t,\n }\n \n+impl PartialEq for FileType {\n+    fn eq(&self, other: &Self) -> bool {\n+        self.masked() == other.masked()\n+    }\n+}\n #[derive(Debug)]\n pub struct DirBuilder {\n     mode: mode_t,\n@@ -550,6 +555,10 @@ impl FileType {\n     pub fn is(&self, mode: mode_t) -> bool {\n         self.mode & libc::S_IFMT == mode\n     }\n+\n+    fn masked(&self) -> mode_t {\n+        self.mode & libc::S_IFMT\n+    }\n }\n \n impl FromInner<u32> for FilePermissions {"}]}