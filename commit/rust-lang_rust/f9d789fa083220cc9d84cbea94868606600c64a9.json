{"sha": "f9d789fa083220cc9d84cbea94868606600c64a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZDc4OWZhMDgzMjIwY2M5ZDg0Y2JlYTk0ODY4NjA2NjAwYzY0YTk=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-02-13T23:38:42Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-02-13T23:38:42Z"}, "message": "cleanup, fix test case", "tree": {"sha": "348423d943d8767a62239b090eaf9f990f281f62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/348423d943d8767a62239b090eaf9f990f281f62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9d789fa083220cc9d84cbea94868606600c64a9", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9d789fa083220cc9d84cbea94868606600c64a9", "html_url": "https://github.com/rust-lang/rust/commit/f9d789fa083220cc9d84cbea94868606600c64a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9d789fa083220cc9d84cbea94868606600c64a9/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d962d84669a02805571683707cec712415af4c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d962d84669a02805571683707cec712415af4c6", "html_url": "https://github.com/rust-lang/rust/commit/9d962d84669a02805571683707cec712415af4c6"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "fe36ed159603cccb5e3036545c8961e4d89b05ff", "filename": "src/libcore/dvec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9d789fa083220cc9d84cbea94868606600c64a9/src%2Flibcore%2Fdvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9d789fa083220cc9d84cbea94868606600c64a9/src%2Flibcore%2Fdvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdvec.rs?ref=f9d789fa083220cc9d84cbea94868606600c64a9", "patch": "@@ -229,7 +229,7 @@ impl<A> DVec<A> {\n \n impl<A: Copy> DVec<A> {\n     /**\n-     * Append all elements of a vector to the end of the list.\n+     * Append all elements of a vector to the end of the list\n      *\n      * Equivalent to `append_iter()` but potentially more efficient.\n      */"}, {"sha": "c924acd577d321cf9b72c505add9f231f5f5f910", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9d789fa083220cc9d84cbea94868606600c64a9/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9d789fa083220cc9d84cbea94868606600c64a9/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=f9d789fa083220cc9d84cbea94868606600c64a9", "patch": "@@ -59,7 +59,7 @@ pub enum MacResult {\n     MRExpr(@ast::expr),\n     MRItem(@ast::item),\n     MRAny(fn@()-> @ast::expr, fn@()-> Option<@ast::item>, fn@()->@ast::stmt),\n-    MRDef(MacroDef),\n+    MRDef(MacroDef)\n }\n \n pub enum SyntaxExtension {"}, {"sha": "e7b5005d8dbf4899050f29f3e1c04746ed4d4174", "filename": "src/libsyntax/parse/common.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f9d789fa083220cc9d84cbea94868606600c64a9/src%2Flibsyntax%2Fparse%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9d789fa083220cc9d84cbea94868606600c64a9/src%2Flibsyntax%2Fparse%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fcommon.rs?ref=f9d789fa083220cc9d84cbea94868606600c64a9", "patch": "@@ -217,7 +217,6 @@ pub impl Parser {\n         let mut first = true;\n         let mut v = ~[];\n         while self.token != token::GT\n-            // wait... isn't this going to eat a whole '>>' ?\n             && self.token != token::BINOP(token::SHR) {\n             match sep {\n               Some(ref t) => {"}, {"sha": "12038898a9d1c8fc732642d3dd3cf44a0e7d3fe7", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f9d789fa083220cc9d84cbea94868606600c64a9/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9d789fa083220cc9d84cbea94868606600c64a9/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=f9d789fa083220cc9d84cbea94868606600c64a9", "patch": "@@ -244,8 +244,17 @@ mod test {\n             ~[],\n             new_parse_sess(None));\n         check_equal(to_json_str(tts as Encodable::<std::json::Encoder>),\n-                    //[[\"tt_tok\",[\"IDENT\",\"fn\"]]]\n-                    ~\"abc\"\n+                    ~\"[[\\\"tt_tok\\\",[,[\\\"IDENT\\\",[\\\"fn\\\",false]]]],\\\n+                      [\\\"tt_tok\\\",[,[\\\"IDENT\\\",[\\\"foo\\\",false]]]],\\\n+                      [\\\"tt_delim\\\",[[[\\\"tt_tok\\\",[,[\\\"LPAREN\\\",[]]]],\\\n+                      [\\\"tt_tok\\\",[,[\\\"IDENT\\\",[\\\"x\\\",false]]]],\\\n+                      [\\\"tt_tok\\\",[,[\\\"COLON\\\",[]]]],\\\n+                      [\\\"tt_tok\\\",[,[\\\"IDENT\\\",[\\\"int\\\",false]]]],\\\n+                      [\\\"tt_tok\\\",[,[\\\"RPAREN\\\",[]]]]]]],\\\n+                      [\\\"tt_delim\\\",[[[\\\"tt_tok\\\",[,[\\\"LBRACE\\\",[]]]],\\\n+                      [\\\"tt_tok\\\",[,[\\\"IDENT\\\",[\\\"x\\\",false]]]],\\\n+                      [\\\"tt_tok\\\",[,[\\\"SEMI\\\",[]]]],\\\n+                      [\\\"tt_tok\\\",[,[\\\"RBRACE\\\",[]]]]]]]]\"\n                    );\n         let ast1 = new_parser_from_tts(new_parse_sess(None),~[],tts)\n             .parse_item(~[]);"}]}