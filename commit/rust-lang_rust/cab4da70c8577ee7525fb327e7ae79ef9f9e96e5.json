{"sha": "cab4da70c8577ee7525fb327e7ae79ef9f9e96e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhYjRkYTcwYzg1NzdlZTc1MjVmYjMyN2U3YWU3OWVmOWY5ZTk2ZTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-21T00:50:54Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-21T00:50:54Z"}, "message": "rt: Don't check the stack canary on most upcalls", "tree": {"sha": "0a346624f45d5c12cc9ca409f63491443af6f412", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a346624f45d5c12cc9ca409f63491443af6f412"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cab4da70c8577ee7525fb327e7ae79ef9f9e96e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cab4da70c8577ee7525fb327e7ae79ef9f9e96e5", "html_url": "https://github.com/rust-lang/rust/commit/cab4da70c8577ee7525fb327e7ae79ef9f9e96e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cab4da70c8577ee7525fb327e7ae79ef9f9e96e5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5d48ce28655e9be723b54c0f39b050df177e890", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5d48ce28655e9be723b54c0f39b050df177e890", "html_url": "https://github.com/rust-lang/rust/commit/a5d48ce28655e9be723b54c0f39b050df177e890"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "6949df03f43194997ad60794413afc4d022271a7", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cab4da70c8577ee7525fb327e7ae79ef9f9e96e5/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/cab4da70c8577ee7525fb327e7ae79ef9f9e96e5/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=cab4da70c8577ee7525fb327e7ae79ef9f9e96e5", "patch": "@@ -133,6 +133,9 @@ static stk_seg*\n new_stk(rust_scheduler *sched, rust_task *task, size_t requested_sz)\n {\n     LOG(task, mem, \"creating new stack for task %\" PRIxPTR, task);\n+    if (task->stk) {\n+        check_stack_canary(task->stk);\n+    }\n \n     // The minimum stack size, in bytes, of a Rust stack, excluding red zone\n     size_t min_sz = get_min_stk_size(sched->min_stack_size);"}, {"sha": "4eafb8fcbba8ea9c5cf79233bf2714990cc23bd6", "filename": "src/rt/rust_upcall.cpp", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cab4da70c8577ee7525fb327e7ae79ef9f9e96e5/src%2Frt%2Frust_upcall.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/cab4da70c8577ee7525fb327e7ae79ef9f9e96e5/src%2Frt%2Frust_upcall.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_upcall.cpp?ref=cab4da70c8577ee7525fb327e7ae79ef9f9e96e5", "patch": "@@ -27,18 +27,12 @@ check_stack_alignment() __attribute__ ((aligned (16)));\n static void check_stack_alignment() { }\n #endif\n \n-static inline void\n-do_sanity_check(rust_task *task) {\n-    check_stack_alignment();\n-    task->check_stack_canary();\n-}\n-\n #define UPCALL_SWITCH_STACK(A, F) call_upcall_on_c_stack((void*)A, (void*)F)\n \n inline void\n call_upcall_on_c_stack(void *args, void *fn_ptr) {\n+    check_stack_alignment();\n     rust_task *task = rust_scheduler::get_task();\n-    do_sanity_check(task);\n     rust_scheduler *sched = task->sched;\n     sched->c_context.call_shim_on_c_stack(args, fn_ptr);\n }\n@@ -55,7 +49,6 @@ extern \"C\" void record_sp(void *limit);\n extern \"C\" CDECL void\n upcall_call_shim_on_c_stack(void *args, void *fn_ptr) {\n     rust_task *task = rust_scheduler::get_task();\n-    do_sanity_check(task);\n \n     // FIXME (1226) - The shim functions generated by rustc contain the\n     // morestack prologue, so we need to let them know they have enough\n@@ -645,9 +638,7 @@ upcall_del_stack() {\n extern \"C\" CDECL void\n upcall_reset_stack_limit() {\n     rust_task *task = rust_scheduler::get_task();\n-    do_sanity_check(task);\n     task->reset_stack_limit();\n-    task->check_stack_canary();\n }\n \n //"}]}