{"sha": "df00da15c435f3105007146cbbfc9afc34ad311c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMDBkYTE1YzQzNWYzMTA1MDA3MTQ2Y2JiZmM5YWZjMzRhZDMxMWM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-05T18:44:13Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-05T18:45:44Z"}, "message": "Fix compilation", "tree": {"sha": "b923464f12c3db581c2527f966d789a9d72c2e5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b923464f12c3db581c2527f966d789a9d72c2e5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df00da15c435f3105007146cbbfc9afc34ad311c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df00da15c435f3105007146cbbfc9afc34ad311c", "html_url": "https://github.com/rust-lang/rust/commit/df00da15c435f3105007146cbbfc9afc34ad311c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df00da15c435f3105007146cbbfc9afc34ad311c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aee22c73c3cafdb6f4b3f97bc483791d4ed2e902", "url": "https://api.github.com/repos/rust-lang/rust/commits/aee22c73c3cafdb6f4b3f97bc483791d4ed2e902", "html_url": "https://github.com/rust-lang/rust/commit/aee22c73c3cafdb6f4b3f97bc483791d4ed2e902"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "5cec10088ce013496058c4433722148ab9d3e365", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df00da15c435f3105007146cbbfc9afc34ad311c/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df00da15c435f3105007146cbbfc9afc34ad311c/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=df00da15c435f3105007146cbbfc9afc34ad311c", "patch": "@@ -17,13 +17,13 @@ mod doc_tests;\n pub mod utils;\n pub mod ast_transform;\n \n+use hir::Semantics;\n use ra_db::{FileId, FileRange};\n use ra_ide_db::RootDatabase;\n use ra_syntax::{TextRange, TextSize};\n use ra_text_edit::TextEdit;\n \n pub(crate) use crate::assist_ctx::{Assist, AssistCtx, AssistHandler};\n-use hir::Semantics;\n \n /// Unique identifier of the assist, should not be shown to the user\n /// directly."}, {"sha": "389339a03446d0da16a4bb940373c6f186e22673", "filename": "crates/ra_ide/src/assists.rs", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/df00da15c435f3105007146cbbfc9afc34ad311c/crates%2Fra_ide%2Fsrc%2Fassists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df00da15c435f3105007146cbbfc9afc34ad311c/crates%2Fra_ide%2Fsrc%2Fassists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fassists.rs?ref=df00da15c435f3105007146cbbfc9afc34ad311c", "patch": "@@ -1,6 +1,6 @@\n //! FIXME: write short doc here\n \n-use ra_assists::{resolved_assists, AssistAction, AssistLabel};\n+use ra_assists::{resolved_assists, AssistAction};\n use ra_db::{FilePosition, FileRange};\n use ra_ide_db::RootDatabase;\n \n@@ -21,27 +21,22 @@ pub(crate) fn assists(db: &RootDatabase, frange: FileRange) -> Vec<Assist> {\n         .into_iter()\n         .map(|assist| {\n             let file_id = frange.file_id;\n-            let assist_label = &assist.label;\n             Assist {\n-                id: assist_label.id,\n-                label: assist_label.label.clone(),\n-                group_label: assist.group_label.map(|it| it.0),\n-                source_change: action_to_edit(assist.action, file_id, assist_label),\n+                id: assist.label.id,\n+                label: assist.label.label.clone(),\n+                group_label: assist.label.group.map(|it| it.0),\n+                source_change: action_to_edit(assist.action, file_id, assist.label.label.clone()),\n             }\n         })\n         .collect()\n }\n \n-fn action_to_edit(\n-    action: AssistAction,\n-    file_id: FileId,\n-    assist_label: &AssistLabel,\n-) -> SourceChange {\n+fn action_to_edit(action: AssistAction, file_id: FileId, label: String) -> SourceChange {\n     let file_id = match action.file {\n         ra_assists::AssistFile::TargetFile(it) => it,\n         _ => file_id,\n     };\n     let file_edit = SourceFileEdit { file_id, edit: action.edit };\n-    SourceChange::source_file_edit(assist_label.label.clone(), file_edit)\n+    SourceChange::source_file_edit(label, file_edit)\n         .with_cursor_opt(action.cursor_position.map(|offset| FilePosition { offset, file_id }))\n }"}]}