{"sha": "96197e08730a74bb8d5c724968c99d22aa0ca17a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MTk3ZTA4NzMwYTc0YmI4ZDVjNzI0OTY4Yzk5ZDIyYWEwY2ExN2E=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-01-22T16:05:28Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-01-22T16:15:34Z"}, "message": "Normalize tests", "tree": {"sha": "36ded65537cecddefb5ef91962e9770243d44f4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36ded65537cecddefb5ef91962e9770243d44f4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96197e08730a74bb8d5c724968c99d22aa0ca17a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96197e08730a74bb8d5c724968c99d22aa0ca17a", "html_url": "https://github.com/rust-lang/rust/commit/96197e08730a74bb8d5c724968c99d22aa0ca17a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96197e08730a74bb8d5c724968c99d22aa0ca17a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a40f78f92ad2050d6178dfd70374701c6bc826ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/a40f78f92ad2050d6178dfd70374701c6bc826ae", "html_url": "https://github.com/rust-lang/rust/commit/a40f78f92ad2050d6178dfd70374701c6bc826ae"}], "stats": {"total": 82, "additions": 37, "deletions": 45}, "files": [{"sha": "db8bfbbc3ac52ebd01d2691ff015a7c3b1acfaa9", "filename": "crates/completion/src/lib.rs", "status": "modified", "additions": 37, "deletions": 45, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/96197e08730a74bb8d5c724968c99d22aa0ca17a/crates%2Fcompletion%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96197e08730a74bb8d5c724968c99d22aa0ca17a/crates%2Fcompletion%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Flib.rs?ref=96197e08730a74bb8d5c724968c99d22aa0ca17a", "patch": "@@ -209,24 +209,23 @@ mod tests {\n     fn test_completion_detail_from_macro_generated_struct_fn_doc_attr() {\n         check_detail_and_documentation(\n             r#\"\n-            //- /lib.rs\n-            macro_rules! bar {\n-                () => {\n-                    struct Bar;\n-                    impl Bar {\n-                        #[doc = \"Do the foo\"]\n-                        fn foo(&self) {}\n-                    }\n-                }\n-            }\n+macro_rules! bar {\n+    () => {\n+        struct Bar;\n+        impl Bar {\n+            #[doc = \"Do the foo\"]\n+            fn foo(&self) {}\n+        }\n+    }\n+}\n \n-            bar!();\n+bar!();\n \n-            fn foo() {\n-                let bar = Bar;\n-                bar.fo$0;\n-            }\n-            \"#,\n+fn foo() {\n+    let bar = Bar;\n+    bar.fo$0;\n+}\n+\"#,\n             DetailAndDocumentation { detail: \"-> ()\", documentation: \"Do the foo\" },\n         );\n     }\n@@ -235,48 +234,41 @@ mod tests {\n     fn test_completion_detail_from_macro_generated_struct_fn_doc_comment() {\n         check_detail_and_documentation(\n             r#\"\n-            //- /lib.rs\n-            macro_rules! bar {\n-                () => {\n-                    struct Bar;\n-                    impl Bar {\n-                        /// Do the foo\n-                        fn foo(&self) {}\n-                    }\n-                }\n-            }\n+macro_rules! bar {\n+    () => {\n+        struct Bar;\n+        impl Bar {\n+            /// Do the foo\n+            fn foo(&self) {}\n+        }\n+    }\n+}\n \n-            bar!();\n+bar!();\n \n-            fn foo() {\n-                let bar = Bar;\n-                bar.fo$0;\n-            }\n-            \"#,\n+fn foo() {\n+    let bar = Bar;\n+    bar.fo$0;\n+}\n+\"#,\n             DetailAndDocumentation { detail: \"-> ()\", documentation: \" Do the foo\" },\n         );\n     }\n \n     #[test]\n     fn test_no_completions_required() {\n         // There must be no hint for 'in' keyword.\n-        check_no_completion(\n-            r#\"\n-            fn foo() {\n-                for i i$0\n-            }\n-            \"#,\n-        );\n+        check_no_completion(r#\"fn foo() { for i i$0 }\"#);\n         // After 'in' keyword hints may be spawned.\n         check_detail_and_documentation(\n             r#\"\n-            /// Do the foo\n-            fn foo() -> &'static str { \"foo\" }\n+/// Do the foo\n+fn foo() -> &'static str { \"foo\" }\n \n-            fn bar() {\n-                for c in fo$0\n-            }\n-            \"#,\n+fn bar() {\n+    for c in fo$0\n+}\n+\"#,\n             DetailAndDocumentation { detail: \"-> &str\", documentation: \"Do the foo\" },\n         );\n     }"}]}