{"sha": "fff5600925cf3bbee2befd6957b727016765ebd0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmZjU2MDA5MjVjZjNiYmVlMmJlZmQ2OTU3YjcyNzAxNjc2NWViZDA=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2015-01-25T22:54:09Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2015-01-26T08:12:26Z"}, "message": "Make Unix and Windows impls consistent\n\nThere are some explicit Send/Sync implementations for Window's types\nthat don't exist in Unix. While the end result will be the same, I\nbelieve it's clearer if we keep the explicit implementations consistent\nby making the os-specific types Send/Sync where needed and possible.\n\nThis commit addresses pipe\n\nsrc/libstd/sys/unix/pipe.rs\nunsafe impl Send for UnixListener {}\nunsafe impl Sync for UnixListener {}\n\nsrc/libstd/sys/windows/pipe.rs\nunsafe impl Send for UnixStream {}\nunsafe impl Sync for UnixStream {}\nunsafe impl Send for UnixListener {}\nunsafe impl Sync for UnixListener {}\nunsafe impl Send for UnixAcceptor {}\nunsafe impl Sync for UnixAcceptor {}\nunsafe impl Send for AcceptorState {}\nunsafe impl Sync for AcceptorState {}", "tree": {"sha": "e5278f8e4351e1eea3bae743d6690c3ef88240c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5278f8e4351e1eea3bae743d6690c3ef88240c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fff5600925cf3bbee2befd6957b727016765ebd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fff5600925cf3bbee2befd6957b727016765ebd0", "html_url": "https://github.com/rust-lang/rust/commit/fff5600925cf3bbee2befd6957b727016765ebd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fff5600925cf3bbee2befd6957b727016765ebd0/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c80e556e159af38f86eea5ee2ba796d7c724c92b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c80e556e159af38f86eea5ee2ba796d7c724c92b", "html_url": "https://github.com/rust-lang/rust/commit/c80e556e159af38f86eea5ee2ba796d7c724c92b"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "ef511d13199234fcd1e2ba46751115b3abb06765", "filename": "src/libstd/sys/windows/pipe.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fff5600925cf3bbee2befd6957b727016765ebd0/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fff5600925cf3bbee2befd6957b727016765ebd0/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs?ref=fff5600925cf3bbee2befd6957b727016765ebd0", "patch": "@@ -129,6 +129,9 @@ impl Drop for Event {\n     }\n }\n \n+unsafe impl Send for Event {}\n+unsafe impl Sync for Event {}\n+\n struct Inner {\n     handle: libc::HANDLE,\n     lock: Mutex<()>,\n@@ -156,6 +159,9 @@ impl Drop for Inner {\n     }\n }\n \n+unsafe impl Send for Inner {}\n+unsafe impl Sync for Inner {}\n+\n unsafe fn pipe(name: *const u16, init: bool) -> libc::HANDLE {\n     libc::CreateNamedPipeW(\n         name,\n@@ -220,9 +226,6 @@ pub struct UnixStream {\n     write_deadline: u64,\n }\n \n-unsafe impl Send for UnixStream {}\n-unsafe impl Sync for UnixStream {}\n-\n impl UnixStream {\n     fn try_connect(p: *const u16) -> Option<libc::HANDLE> {\n         // Note that most of this is lifted from the libuv implementation.\n@@ -615,17 +618,11 @@ pub struct UnixAcceptor {\n     deadline: u64,\n }\n \n-unsafe impl Send for UnixAcceptor {}\n-unsafe impl Sync for UnixAcceptor {}\n-\n struct AcceptorState {\n     abort: Event,\n     closed: AtomicBool,\n }\n \n-unsafe impl Send for AcceptorState {}\n-unsafe impl Sync for AcceptorState {}\n-\n impl UnixAcceptor {\n     pub fn accept(&mut self) -> IoResult<UnixStream> {\n         // This function has some funky implementation details when working with"}]}