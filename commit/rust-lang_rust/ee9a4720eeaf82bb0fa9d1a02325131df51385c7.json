{"sha": "ee9a4720eeaf82bb0fa9d1a02325131df51385c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlOWE0NzIwZWVhZjgyYmIwZmE5ZDFhMDIzMjUxMzFkZjUxMzg1Yzc=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-04-20T13:12:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-20T13:12:59Z"}, "message": "Fix bad merge in #49991\n\nWhen I rebased #49991 on `master`, I messed up the merge for this line. I'm reverting this back to the way it was in f15e5c1.", "tree": {"sha": "fb49275472f86481a226b35cbb4a2bc47126ca10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb49275472f86481a226b35cbb4a2bc47126ca10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee9a4720eeaf82bb0fa9d1a02325131df51385c7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa2edbCRBK7hj4Ov3rIwAAdHIIAHBBFPZ6yCQCsVx670vWoTSi\nZWgQmyHUFes4L5YZdJWY//1WY2GG8ydA0JEd9mLpMuVnJAAsxOMeq/p5qzJ8xT6L\nsyq6CSjudUBfzUMSo35dolSTZxD8m3ynTD/vmoLymjBjjD0eFju0BTHCpWtKisa3\nXUSp0FcS3HE3Mf2KlMJreP1nly6WtDiIcJ2J8K9fr31aC2mq4eZ9VlFO3+CuPbnZ\nR9q8vYhUT/8RMqgtu4wQCshLJtmrvUwIIA1ylEPyDzRe8cn+TBRxSOMZkkquyp7a\nu09Q02/Y2hcW4o0B1g6YFSeI3C9XIj0a+Aed9jIVcm6+S+HT4nBYqk0gsA1IReg=\n=8CFH\n-----END PGP SIGNATURE-----\n", "payload": "tree fb49275472f86481a226b35cbb4a2bc47126ca10\nparent 85f5dd489ea1cb93707ba1ddf4a7678d3aee3f74\nauthor Wesley Wiser <wwiser@gmail.com> 1524229979 -0400\ncommitter GitHub <noreply@github.com> 1524229979 -0400\n\nFix bad merge in #49991\n\nWhen I rebased #49991 on `master`, I messed up the merge for this line. I'm reverting this back to the way it was in f15e5c1."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee9a4720eeaf82bb0fa9d1a02325131df51385c7", "html_url": "https://github.com/rust-lang/rust/commit/ee9a4720eeaf82bb0fa9d1a02325131df51385c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee9a4720eeaf82bb0fa9d1a02325131df51385c7/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85f5dd489ea1cb93707ba1ddf4a7678d3aee3f74", "url": "https://api.github.com/repos/rust-lang/rust/commits/85f5dd489ea1cb93707ba1ddf4a7678d3aee3f74", "html_url": "https://github.com/rust-lang/rust/commit/85f5dd489ea1cb93707ba1ddf4a7678d3aee3f74"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b65e9a715facaa0a42dd70801cbe6b5df74e6bc3", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee9a4720eeaf82bb0fa9d1a02325131df51385c7/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee9a4720eeaf82bb0fa9d1a02325131df51385c7/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=ee9a4720eeaf82bb0fa9d1a02325131df51385c7", "patch": "@@ -930,7 +930,7 @@ impl<'a, 'b: 'a, 'tcx: 'b> IsolatedEncoder<'a, 'b, 'tcx> {\n             } else if let hir::ImplItemKind::Method(ref sig, _) = ast_item.node {\n                 let generics = self.tcx.generics_of(def_id);\n                 let types = generics.parent_types as usize + generics.types.len();\n-                let needs_inline = types > 0 || tcx.trans_fn_attrs(def_id).requests_inline() &&\n+                let needs_inline = (types > 0 || tcx.trans_fn_attrs(def_id).requests_inline()) &&\n                     !self.metadata_output_only();\n                 let is_const_fn = sig.constness == hir::Constness::Const;\n                 let always_encode_mir = self.tcx.sess.opts.debugging_opts.always_encode_mir;"}]}