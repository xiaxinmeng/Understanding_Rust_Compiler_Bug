{"sha": "5aa34038ffd8c30ebdce5518a312a187385d3216", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhYTM0MDM4ZmZkOGMzMGViZGNlNTUxOGEzMTJhMTg3Mzg1ZDMyMTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-12T13:59:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-12T13:59:39Z"}, "message": "Auto merge of #42570 - birkenfeld:patch-3, r=frewsxcv\n\nAdd dedicated docstrings to Sum/Product impl of Result\n\n(and fix a minor grammar typo below)", "tree": {"sha": "e5d697db062904dfe366f3ff3f59299b21a8778d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5d697db062904dfe366f3ff3f59299b21a8778d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5aa34038ffd8c30ebdce5518a312a187385d3216", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5aa34038ffd8c30ebdce5518a312a187385d3216", "html_url": "https://github.com/rust-lang/rust/commit/5aa34038ffd8c30ebdce5518a312a187385d3216", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5aa34038ffd8c30ebdce5518a312a187385d3216/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f8b93693da78c2cfe1d7f1dc6834c5ba61e0cc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f8b93693da78c2cfe1d7f1dc6834c5ba61e0cc0", "html_url": "https://github.com/rust-lang/rust/commit/3f8b93693da78c2cfe1d7f1dc6834c5ba61e0cc0"}, {"sha": "2366c464a7aac7e35d9a6f0c43832d31ffd8b4b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/2366c464a7aac7e35d9a6f0c43832d31ffd8b4b8", "html_url": "https://github.com/rust-lang/rust/commit/2366c464a7aac7e35d9a6f0c43832d31ffd8b4b8"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "679cf3a9b23eea9eb38fd05aab601072e687fa3f", "filename": "src/libcore/iter/traits.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5aa34038ffd8c30ebdce5518a312a187385d3216/src%2Flibcore%2Fiter%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5aa34038ffd8c30ebdce5518a312a187385d3216/src%2Flibcore%2Fiter%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits.rs?ref=5aa34038ffd8c30ebdce5518a312a187385d3216", "patch": "@@ -798,6 +798,23 @@ impl<I, T, E> Iterator for ResultShunt<I, E>\n impl<T, U, E> Sum<Result<U, E>> for Result<T, E>\n     where T: Sum<U>,\n {\n+    /// Takes each element in the `Iterator`: if it is an `Err`, no further\n+    /// elements are taken, and the `Err` is returned. Should no `Err` occur,\n+    /// the sum of all elements is returned.\n+    ///\n+    /// # Examples\n+    ///\n+    /// This sums up every integer in a vector, rejecting the sum if a negative\n+    /// element is encountered:\n+    ///\n+    /// ```\n+    /// let v = vec![1, 2];\n+    /// let res: Result<i32, &'static str> = v.iter().map(|&x: &i32|\n+    ///     if x < 0 { Err(\"Negative element found\") }\n+    ///     else { Ok(x) }\n+    /// ).sum();\n+    /// assert_eq!(res, Ok(3));\n+    /// ```\n     fn sum<I>(iter: I) -> Result<T, E>\n         where I: Iterator<Item = Result<U, E>>,\n     {\n@@ -809,6 +826,9 @@ impl<T, U, E> Sum<Result<U, E>> for Result<T, E>\n impl<T, U, E> Product<Result<U, E>> for Result<T, E>\n     where T: Product<U>,\n {\n+    /// Takes each element in the `Iterator`: if it is an `Err`, no further\n+    /// elements are taken, and the `Err` is returned. Should no `Err` occur,\n+    /// the product of all elements is returned.\n     fn product<I>(iter: I) -> Result<T, E>\n         where I: Iterator<Item = Result<U, E>>,\n     {\n@@ -819,7 +839,7 @@ impl<T, U, E> Product<Result<U, E>> for Result<T, E>\n /// An iterator that always continues to yield `None` when exhausted.\n ///\n /// Calling next on a fused iterator that has returned `None` once is guaranteed\n-/// to return [`None`] again. This trait is should be implemented by all iterators\n+/// to return [`None`] again. This trait should be implemented by all iterators\n /// that behave this way because it allows for some significant optimizations.\n ///\n /// Note: In general, you should not use `FusedIterator` in generic bounds if"}]}