{"sha": "b56ff4319eb341ce3393eadba4ff200efe32a4e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1NmZmNDMxOWViMzQxY2UzMzkzZWFkYmE0ZmYyMDBlZmUzMmE0ZTk=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-09-19T03:02:56Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-09-19T03:03:04Z"}, "message": "fix dogfood", "tree": {"sha": "204e7a30497c79da7ca188c3b9f7ed6e2ab84e03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/204e7a30497c79da7ca188c3b9f7ed6e2ab84e03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b56ff4319eb341ce3393eadba4ff200efe32a4e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b56ff4319eb341ce3393eadba4ff200efe32a4e9", "html_url": "https://github.com/rust-lang/rust/commit/b56ff4319eb341ce3393eadba4ff200efe32a4e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b56ff4319eb341ce3393eadba4ff200efe32a4e9/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4da7d09d278b39d66590d85f48938243372782d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4da7d09d278b39d66590d85f48938243372782d", "html_url": "https://github.com/rust-lang/rust/commit/f4da7d09d278b39d66590d85f48938243372782d"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "e6665bbbb4dd62569c0bf11150867282cf8ea4e4", "filename": "src/bit_mask.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b56ff4319eb341ce3393eadba4ff200efe32a4e9/src%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56ff4319eb341ce3393eadba4ff200efe32a4e9/src%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbit_mask.rs?ref=b56ff4319eb341ce3393eadba4ff200efe32a4e9", "patch": "@@ -85,14 +85,13 @@ fn invert_cmp(cmp : BinOp_) -> BinOp_ {\n \n \n fn check_compare(cx: &LateContext, bit_op: &Expr, cmp_op: BinOp_, cmp_value: u64, span: &Span) {\n-    match bit_op.node {\n-        ExprBinary(ref op, ref left, ref right) => {\n-            if op.node != BiBitAnd && op.node != BiBitOr { return; }\n-            fetch_int_literal(cx, right).or_else(|| fetch_int_literal(\n-                cx, left)).map_or((), |mask| check_bit_mask(cx, op.node,\n-                                                            cmp_op, mask, cmp_value, span))\n-        },\n-        _ => ()\n+    if let ExprBinary(ref op, ref left, ref right) = bit_op.node {\n+        if op.node != BiBitAnd && op.node != BiBitOr {\n+            return;\n+        }\n+        fetch_int_literal(cx, right).or_else(|| fetch_int_literal(\n+            cx, left)).map_or((), |mask| check_bit_mask(cx, op.node,\n+                                                        cmp_op, mask, cmp_value, span))\n     }\n }\n "}]}