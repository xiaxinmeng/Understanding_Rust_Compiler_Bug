{"sha": "18d4737fb9845e09bd860860a6a687bd7edd3bcd", "node_id": "C_kwDOAAsO6NoAKDE4ZDQ3MzdmYjk4NDVlMDliZDg2MDg2MGE2YTY4N2JkN2VkZDNiY2Q", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-12T16:17:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-12T16:17:04Z"}, "message": "add cross-crate inlines", "tree": {"sha": "ecd8cd80e9134a0a5162b3f10b64cf8c1a893730", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecd8cd80e9134a0a5162b3f10b64cf8c1a893730"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18d4737fb9845e09bd860860a6a687bd7edd3bcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18d4737fb9845e09bd860860a6a687bd7edd3bcd", "html_url": "https://github.com/rust-lang/rust/commit/18d4737fb9845e09bd860860a6a687bd7edd3bcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18d4737fb9845e09bd860860a6a687bd7edd3bcd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1055a6111adc55e99e5f63884a8f4fbf5e7bb28d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1055a6111adc55e99e5f63884a8f4fbf5e7bb28d", "html_url": "https://github.com/rust-lang/rust/commit/1055a6111adc55e99e5f63884a8f4fbf5e7bb28d"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "de831f0f705a81d073fe4bfe20df0935440e1f52", "filename": "crates/parser/src/tokens.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/18d4737fb9845e09bd860860a6a687bd7edd3bcd/crates%2Fparser%2Fsrc%2Ftokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18d4737fb9845e09bd860860a6a687bd7edd3bcd/crates%2Fparser%2Fsrc%2Ftokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Ftokens.rs?ref=18d4737fb9845e09bd860860a6a687bd7edd3bcd", "patch": "@@ -30,6 +30,7 @@ pub struct Tokens {\n }\n \n impl Tokens {\n+    #[inline]\n     pub fn push(&mut self, kind: SyntaxKind) {\n         self.push_impl(kind, SyntaxKind::EOF)\n     }\n@@ -49,15 +50,18 @@ impl Tokens {\n     /// token.push(curr);\n     /// tokens.push(curr_joint)\n     /// ```\n+    #[inline]\n     pub fn was_joint(&mut self, yes: bool) {\n         let idx = self.len();\n         if yes && idx > 0 {\n             self.set_joint(idx - 1);\n         }\n     }\n+    #[inline]\n     pub fn push_ident(&mut self, contextual_kw: SyntaxKind) {\n         self.push_impl(SyntaxKind::IDENT, contextual_kw)\n     }\n+    #[inline]\n     fn push_impl(&mut self, kind: SyntaxKind, contextual_kw: SyntaxKind) {\n         let idx = self.len();\n         if idx % (bits::BITS as usize) == 0 {\n@@ -80,7 +84,7 @@ impl Tokens {\n         (idx, b_idx)\n     }\n \n-    pub fn len(&self) -> usize {\n+    fn len(&self) -> usize {\n         self.kind.len()\n     }\n     pub(crate) fn get(&self, idx: usize) -> Token {"}]}