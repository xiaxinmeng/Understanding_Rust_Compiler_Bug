{"sha": "abcdc0fadd062fc61290e5fc06793d6df943a779", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiY2RjMGZhZGQwNjJmYzYxMjkwZTVmYzA2NzkzZDZkZjk0M2E3Nzk=", "commit": {"author": {"name": "Ivan Molodetskikh", "email": "yalterz@gmail.com", "date": "2018-09-11T08:09:17Z"}, "committer": {"name": "Ivan Molodetskikh", "email": "yalterz@gmail.com", "date": "2018-09-11T08:09:31Z"}, "message": "Add a test for #2985", "tree": {"sha": "50d72611ab4e428ca75d6444c7b83f252e59f566", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50d72611ab4e428ca75d6444c7b83f252e59f566"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abcdc0fadd062fc61290e5fc06793d6df943a779", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJGBAABCAAwFiEE1hPewaQLbx3Fswa5As442kfp1pEFAluXeDsSHHlhbHRlcnpA\nZ21haWwuY29tAAoJEALOONpH6daRqQYP/RV06kQ109SU236eR6x33G1uxLLqPrmO\nEqG1yUcZYG5DoM+pP8zTBamELI92H134OjrJtvBc1UhHGrRV5Mw03kFzD8pY+Oqe\nR+iVP6IzMz86qfMZ+mpnf59e1G0HDQIrj/15E/AyeBY9sNaSsYjmCzazPyNmkjRc\nyxhozh7vDVZAApzcbUhf9QhwfXYkpt9cV7L+D3DJcC6tsKl98chuv6fTBeYHhl8x\nP1hIbQVjMoGiv1lfGyB/chqApiezFxjewf5DQ5Uhq79hWkLgV8pVJOksfg0HW+kh\nc8+7+RqfyO07xzXgoha5EPbqbiH1r8Sf5QozqtZDpj+zDNEt7eWcVr6QD8uM7uhx\nS02v3I+uyj92XuwzwKOv6oFZdhIbV9GGCyTmyVNIQE1/hJpsgClOdRJqQzbYB3fL\nwZJvQK0VVre+0TchXrT18jvjztkujBza7nJ3GfevQF3J59I+8+f9KZfjgX42rY8f\n1tv1D2mJndBFtJATx776dP7VavKjXxJcEsNzRXUE3shob7S29JTB8Iy4zMJ+5uo1\nyNUYCKkGz+CtFNOfG18mF8gh5pwxDw5AI8utcVIU5OHwjOkQlXIlg8+klrrjgjpw\neRcGAqZND6M7J6q+DYK4ta9hzYwpk2ulTzuiYY8hw0Q5s88/mAfyeNPI8GIkUyxb\nLUvCF765DSS1\n=l6fo\n-----END PGP SIGNATURE-----", "payload": "tree 50d72611ab4e428ca75d6444c7b83f252e59f566\nparent 77824a24ef9ced4bcda52c5238e8c5b07d098e7b\nauthor Ivan Molodetskikh <yalterz@gmail.com> 1536653357 +0300\ncommitter Ivan Molodetskikh <yalterz@gmail.com> 1536653371 +0300\n\nAdd a test for #2985\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abcdc0fadd062fc61290e5fc06793d6df943a779", "html_url": "https://github.com/rust-lang/rust/commit/abcdc0fadd062fc61290e5fc06793d6df943a779", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abcdc0fadd062fc61290e5fc06793d6df943a779/comments", "author": {"login": "YaLTeR", "id": 1794388, "node_id": "MDQ6VXNlcjE3OTQzODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1794388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YaLTeR", "html_url": "https://github.com/YaLTeR", "followers_url": "https://api.github.com/users/YaLTeR/followers", "following_url": "https://api.github.com/users/YaLTeR/following{/other_user}", "gists_url": "https://api.github.com/users/YaLTeR/gists{/gist_id}", "starred_url": "https://api.github.com/users/YaLTeR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YaLTeR/subscriptions", "organizations_url": "https://api.github.com/users/YaLTeR/orgs", "repos_url": "https://api.github.com/users/YaLTeR/repos", "events_url": "https://api.github.com/users/YaLTeR/events{/privacy}", "received_events_url": "https://api.github.com/users/YaLTeR/received_events", "type": "User", "site_admin": false}, "committer": {"login": "YaLTeR", "id": 1794388, "node_id": "MDQ6VXNlcjE3OTQzODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1794388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YaLTeR", "html_url": "https://github.com/YaLTeR", "followers_url": "https://api.github.com/users/YaLTeR/followers", "following_url": "https://api.github.com/users/YaLTeR/following{/other_user}", "gists_url": "https://api.github.com/users/YaLTeR/gists{/gist_id}", "starred_url": "https://api.github.com/users/YaLTeR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YaLTeR/subscriptions", "organizations_url": "https://api.github.com/users/YaLTeR/orgs", "repos_url": "https://api.github.com/users/YaLTeR/repos", "events_url": "https://api.github.com/users/YaLTeR/events{/privacy}", "received_events_url": "https://api.github.com/users/YaLTeR/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77824a24ef9ced4bcda52c5238e8c5b07d098e7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/77824a24ef9ced4bcda52c5238e8c5b07d098e7b", "html_url": "https://github.com/rust-lang/rust/commit/77824a24ef9ced4bcda52c5238e8c5b07d098e7b"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "bde4da8314c13f880b91bb92a815cae891c60245", "filename": "tests/source/issue-2985.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/abcdc0fadd062fc61290e5fc06793d6df943a779/tests%2Fsource%2Fissue-2985.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abcdc0fadd062fc61290e5fc06793d6df943a779/tests%2Fsource%2Fissue-2985.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-2985.rs?ref=abcdc0fadd062fc61290e5fc06793d6df943a779", "patch": "@@ -0,0 +1,35 @@\n+// rustfmt-indent_style: Visual\n+fn foo() {\n+    {\n+        {\n+            let extra_encoder_settings = extra_encoder_settings.iter()\n+                                                               .filter_map(|&(name, value)| {\n+                                                         value.split()\n+                                                              .next()\n+                                                              .something()\n+                                                              .something2()\n+                                                              .something3()\n+                                                              .something4()\n+                                                     });\n+            let extra_encoder_settings = extra_encoder_settings.iter()\n+                                                               .filter_map(|&(name, value)| {\n+                                                                               value.split()\n+                                                                                    .next()\n+                                                                                    .something()\n+                                                                                    .something2()\n+                                                                                    .something3()\n+                                                                                    .something4()\n+                                                                           })\n+                                                               .something();\n+            if let Some(subpod) = pod.subpods.iter().find(|s| {\n+                                                              !s.plaintext\n+                                                                .as_ref()\n+                                                                .map(String::as_ref)\n+                                                                .unwrap_or(\"\")\n+                                                                .is_empty()\n+                                                          }) {\n+                do_something();\n+            }\n+        }\n+    }\n+}"}, {"sha": "c82714aba525cf64082a63b19c209f74f60f651c", "filename": "tests/target/issue-2985.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/abcdc0fadd062fc61290e5fc06793d6df943a779/tests%2Ftarget%2Fissue-2985.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abcdc0fadd062fc61290e5fc06793d6df943a779/tests%2Ftarget%2Fissue-2985.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2985.rs?ref=abcdc0fadd062fc61290e5fc06793d6df943a779", "patch": "@@ -0,0 +1,35 @@\n+// rustfmt-indent_style: Visual\n+fn foo() {\n+    {\n+        {\n+            let extra_encoder_settings = extra_encoder_settings.iter()\n+                                                               .filter_map(|&(name, value)| {\n+                                                                               value.split()\n+                                                                                    .next()\n+                                                                                    .something()\n+                                                                                    .something2()\n+                                                                                    .something3()\n+                                                                                    .something4()\n+                                                                           });\n+            let extra_encoder_settings = extra_encoder_settings.iter()\n+                                                               .filter_map(|&(name, value)| {\n+                                                                               value.split()\n+                                                                                    .next()\n+                                                                                    .something()\n+                                                                                    .something2()\n+                                                                                    .something3()\n+                                                                                    .something4()\n+                                                                           })\n+                                                               .something();\n+            if let Some(subpod) = pod.subpods.iter().find(|s| {\n+                                                              !s.plaintext\n+                                                                .as_ref()\n+                                                                .map(String::as_ref)\n+                                                                .unwrap_or(\"\")\n+                                                                .is_empty()\n+                                                          }) {\n+                do_something();\n+            }\n+        }\n+    }\n+}"}]}