{"sha": "90c361c8376e8ec9d63cbd78b6d68c9647eb32c1", "node_id": "C_kwDOAAsO6NoAKDkwYzM2MWM4Mzc2ZThlYzlkNjNjYmQ3OGI2ZDY4Yzk2NDdlYjMyYzE", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-06-07T12:31:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-07T12:31:31Z"}, "message": "Rollup merge of #112382 - jyn514:test-download-rustc-macos, r=albertlarsan68\n\ndownload-rustc: Fix `x test core` on MacOS\n\nbefore, this hardcoded `.so` as the extension for dynamically linked objects, which is incorrect everywhere except linux.", "tree": {"sha": "f8861cada9423965104c8fb57a7dbfdf1cd68a15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8861cada9423965104c8fb57a7dbfdf1cd68a15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90c361c8376e8ec9d63cbd78b6d68c9647eb32c1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkgHijCRBK7hj4Ov3rIwAAKRkIAGTuIeOwnKrR7Op0tgOC9TSO\nv15wGGz1Oi6KG9bmUzOEdyWUt3I0ztNPQIcWv+67grRI/ptxCCOQbm5S71b0/rQo\nMsD3zUv4qwWwcnGRc6B3jlMvPj1LCvDwhz1UgA1yAKn/v4J5c6GM0Zp21ZMAgkxe\nq01LXD9AOx6gYVqzDTc6449V5aLXJQnUb4LQ0apvl7MbstFirNYWwXsiV+BSYll4\ne9bkOe2xHHbGsobVEbKWf6GHWTv9vAH3X19C1UcYPGUSKQF3Byg0ZqHSEO0fdK0h\nWGuxhIY7HB90y10UnsCxQNQ1GMUSsEpd6oObSKTCmw2fas8IjgMlhCHGPOSHADw=\n=ywOD\n-----END PGP SIGNATURE-----\n", "payload": "tree f8861cada9423965104c8fb57a7dbfdf1cd68a15\nparent 1dc4b4001fe3809535b9405b55e281a42608fb77\nparent a2ab47f1e57a7192bbdb7f6e90e7776a458b3315\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1686141091 +0530\ncommitter GitHub <noreply@github.com> 1686141091 +0530\n\nRollup merge of #112382 - jyn514:test-download-rustc-macos, r=albertlarsan68\n\ndownload-rustc: Fix `x test core` on MacOS\n\nbefore, this hardcoded `.so` as the extension for dynamically linked objects, which is incorrect everywhere except linux.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90c361c8376e8ec9d63cbd78b6d68c9647eb32c1", "html_url": "https://github.com/rust-lang/rust/commit/90c361c8376e8ec9d63cbd78b6d68c9647eb32c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90c361c8376e8ec9d63cbd78b6d68c9647eb32c1/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dc4b4001fe3809535b9405b55e281a42608fb77", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc4b4001fe3809535b9405b55e281a42608fb77", "html_url": "https://github.com/rust-lang/rust/commit/1dc4b4001fe3809535b9405b55e281a42608fb77"}, {"sha": "a2ab47f1e57a7192bbdb7f6e90e7776a458b3315", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2ab47f1e57a7192bbdb7f6e90e7776a458b3315", "html_url": "https://github.com/rust-lang/rust/commit/a2ab47f1e57a7192bbdb7f6e90e7776a458b3315"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "a9e15d8924605b88939a3cbeffda675ed144e8b8", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/90c361c8376e8ec9d63cbd78b6d68c9647eb32c1/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90c361c8376e8ec9d63cbd78b6d68c9647eb32c1/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=90c361c8376e8ec9d63cbd78b6d68c9647eb32c1", "patch": "@@ -1358,7 +1358,12 @@ impl Step for Sysroot {\n             // newly compiled std, not the downloaded std.\n             add_filtered_files(\"lib\", builder.config.ci_rust_std_contents());\n \n-            let filtered_extensions = [OsStr::new(\"rmeta\"), OsStr::new(\"rlib\"), OsStr::new(\"so\")];\n+            let filtered_extensions = [\n+                OsStr::new(\"rmeta\"),\n+                OsStr::new(\"rlib\"),\n+                // FIXME: this is wrong when compiler.host != build, but we don't support that today\n+                OsStr::new(std::env::consts::DLL_EXTENSION),\n+            ];\n             let ci_rustc_dir = builder.ci_rustc_dir(builder.config.build);\n             builder.cp_filtered(&ci_rustc_dir, &sysroot, &|path| {\n                 if path.extension().map_or(true, |ext| !filtered_extensions.contains(&ext)) {"}]}