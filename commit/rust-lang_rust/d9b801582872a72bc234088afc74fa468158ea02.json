{"sha": "d9b801582872a72bc234088afc74fa468158ea02", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5YjgwMTU4Mjg3MmE3MmJjMjM0MDg4YWZjNzRmYTQ2ODE1OGVhMDI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-15T14:07:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-15T14:07:48Z"}, "message": "Auto merge of #26302 - aidanhs:aphs-fix-musl-libc, r=alexcrichton\n\nmusl may not be available on the target user's machine, and even if it is, we may not be able to find it because of how static libraries are searched for.\r\nInstead, use the liblibc archive created at rust compile time which already contains libc.a.\r\n\r\n---\r\n\r\nTo be honest, my brain is bending a bit at this point and I wonder if I'm doing something a bit stupid.\r\n\r\nProblem: building the libc crate with target musl. It says \"could not find native static library `c`, perhaps an -L flag is missing?\".\r\n\r\nSome pondering: the key problem is the way static archives are searched for (note that a musl build attempts to statically link to libc) - they aren't. There are three locations which are checked (including `$PREFIX/lib/rustlib/x86_64-unknown-linux-musl/lib`), but this does not include `$PREFIX/lib`...and it probably shouldn't - rustc is mimicking the way native lib generation works by forcing you to provide the path yourself. You can make it work `cargo rustc` with `-L native=/path/to/musl/lib`, but even if this went in a build script for the libc crate, it wouldn't work if musl isn't installed by the end user.\r\n\r\nI've sprinkled `not(test)` around but I've no idea if I've done it right.\r\n\r\nThis patch allows `cargo build --target x86_64-unknown-linux-musl` to work on a crate with a dependency on libc, where the musl-enabled rust was compiled before this patch. I've not yet kicked off the long process to build a musl-enabled rust with this patch, so it might be broken there.\r\n\r\nSorry for the rambling.\r\n\r\nr? @alexcrichton", "tree": {"sha": "efd844cc879fd96a88e2cd9264be699364f628d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efd844cc879fd96a88e2cd9264be699364f628d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9b801582872a72bc234088afc74fa468158ea02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9b801582872a72bc234088afc74fa468158ea02", "html_url": "https://github.com/rust-lang/rust/commit/d9b801582872a72bc234088afc74fa468158ea02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9b801582872a72bc234088afc74fa468158ea02/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d82fb55dbb9b28798ea7c2004fa91fe3ae23b86", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d82fb55dbb9b28798ea7c2004fa91fe3ae23b86", "html_url": "https://github.com/rust-lang/rust/commit/0d82fb55dbb9b28798ea7c2004fa91fe3ae23b86"}, {"sha": "52862e4cda1ff72e52dfaea21cf82ae93725b3be", "url": "https://api.github.com/repos/rust-lang/rust/commits/52862e4cda1ff72e52dfaea21cf82ae93725b3be", "html_url": "https://github.com/rust-lang/rust/commit/52862e4cda1ff72e52dfaea21cf82ae93725b3be"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "2676d4879b5e397f93b5b778ca4e79246f80cf65", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d9b801582872a72bc234088afc74fa468158ea02/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9b801582872a72bc234088afc74fa468158ea02/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=d9b801582872a72bc234088afc74fa468158ea02", "patch": "@@ -146,7 +146,10 @@ pub use funcs::bsd43::*;\n #[link(name = \"m\")]\n extern {}\n \n-#[cfg(all(target_env = \"musl\", not(test)))]\n+// When compiling rust with musl, statically include libc.a in liblibc.rlib.\n+// A cargo build of the libc crate will therefore automatically pick up the\n+// libc.a symbols because liblibc is transitively linked to by the stdlib.\n+#[cfg(all(target_env = \"musl\", not(feature = \"cargo-build\"), not(test)))]\n #[link(name = \"c\", kind = \"static\")]\n extern {}\n "}]}