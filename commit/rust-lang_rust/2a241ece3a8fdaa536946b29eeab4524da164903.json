{"sha": "2a241ece3a8fdaa536946b29eeab4524da164903", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMjQxZWNlM2E4ZmRhYTUzNjk0NmIyOWVlYWI0NTI0ZGExNjQ5MDM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-03T22:10:36Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-03T22:10:36Z"}, "message": "rustc: Disallow calling type_of() on dynamically-sized types", "tree": {"sha": "89a0406929dbb323b67d64611e6f96887cc48915", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89a0406929dbb323b67d64611e6f96887cc48915"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a241ece3a8fdaa536946b29eeab4524da164903", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a241ece3a8fdaa536946b29eeab4524da164903", "html_url": "https://github.com/rust-lang/rust/commit/2a241ece3a8fdaa536946b29eeab4524da164903", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a241ece3a8fdaa536946b29eeab4524da164903/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dba7a77d2c7396989262da3de5ea055bed151bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dba7a77d2c7396989262da3de5ea055bed151bc", "html_url": "https://github.com/rust-lang/rust/commit/5dba7a77d2c7396989262da3de5ea055bed151bc"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "65f5b135e68711aa7127e21fbb088f596a4afe57", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2a241ece3a8fdaa536946b29eeab4524da164903/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a241ece3a8fdaa536946b29eeab4524da164903/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=2a241ece3a8fdaa536946b29eeab4524da164903", "patch": "@@ -417,7 +417,17 @@ fn T_opaque_obj_ptr(type_names tn) -> TypeRef {\n }\n \n \n+// This function now fails if called on a type with dynamic size (as its\n+// return value was always meaningless in that case anyhow). Beware!\n+//\n+// TODO: Enforce via a predicate.\n fn type_of(@crate_ctxt cx, @ty.t t) -> TypeRef {\n+    if (ty.type_has_dynamic_size(t)) {\n+        log \"type_of() called on a type with dynamic size: \" +\n+            ty.ty_to_str(t);\n+        fail;\n+    }\n+\n     ret type_of_inner(cx, t);\n }\n "}]}