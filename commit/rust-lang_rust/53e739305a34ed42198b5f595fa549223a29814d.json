{"sha": "53e739305a34ed42198b5f595fa549223a29814d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzZTczOTMwNWEzNGVkNDIxOThiNWY1OTVmYTU0OTIyM2EyOTgxNGQ=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-10-09T20:05:19Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-10-10T05:20:31Z"}, "message": "Tweak `tcx` usage in `lub_concrete_regions()`.\n\nSome places use the local `tcx` variable, some use `self.tcx()`. This\ncommit removes the local variable so that all places use `self.tcx()`,\nfor consistency.", "tree": {"sha": "6b4670854b244b456d086aaf4ff825c826804f78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b4670854b244b456d086aaf4ff825c826804f78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53e739305a34ed42198b5f595fa549223a29814d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53e739305a34ed42198b5f595fa549223a29814d", "html_url": "https://github.com/rust-lang/rust/commit/53e739305a34ed42198b5f595fa549223a29814d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53e739305a34ed42198b5f595fa549223a29814d/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20cc75272619cc452e3ae6c131e61974f6aa9929", "url": "https://api.github.com/repos/rust-lang/rust/commits/20cc75272619cc452e3ae6c131e61974f6aa9929", "html_url": "https://github.com/rust-lang/rust/commit/20cc75272619cc452e3ae6c131e61974f6aa9929"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "84960d149d0fc69d02282d565a1c6b4d02efc4e6", "filename": "src/librustc/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/53e739305a34ed42198b5f595fa549223a29814d/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53e739305a34ed42198b5f595fa549223a29814d/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=53e739305a34ed42198b5f595fa549223a29814d", "patch": "@@ -407,8 +407,6 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n \n     /// Returns the smallest region `c` such that `a <= c` and `b <= c`.\n     fn lub_concrete_regions(&self, a: Region<'tcx>, b: Region<'tcx>) -> Region<'tcx> {\n-        let tcx = self.tcx();\n-\n         match (a, b) {\n             (&ty::ReClosureBound(..), _)\n             | (_, &ty::ReClosureBound(..))\n@@ -468,15 +466,15 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n \n                 // otherwise, we don't know what the free region is,\n                 // so we must conservatively say the LUB is static:\n-                tcx.lifetimes.re_static\n+                self.tcx().lifetimes.re_static\n             }\n \n             (&ReScope(a_id), &ReScope(b_id)) => {\n                 // The region corresponding to an outer block is a\n                 // subtype of the region corresponding to an inner\n                 // block.\n                 let lub = self.region_rels.region_scope_tree.nearest_common_ancestor(a_id, b_id);\n-                tcx.mk_region(ReScope(lub))\n+                self.tcx().mk_region(ReScope(lub))\n             }\n \n             (&ReEarlyBound(_), &ReEarlyBound(_))\n@@ -490,7 +488,7 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n                 if a == b {\n                     a\n                 } else {\n-                    tcx.lifetimes.re_static\n+                    self.tcx().lifetimes.re_static\n                 }\n             }\n         }"}]}