{"sha": "2733c29bb1a385779c1d74dbce96180799e15e56", "node_id": "C_kwDOAAsO6NoAKDI3MzNjMjliYjFhMzg1Nzc5YzFkNzRkYmNlOTYxODA3OTllMTVlNTY", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-06T18:05:59Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-06T18:13:07Z"}, "message": "Support multithreaded mode in `OwnedSlice` tests", "tree": {"sha": "e015bd6679cb2393819761cc6cfbcad7f9b96f6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e015bd6679cb2393819761cc6cfbcad7f9b96f6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2733c29bb1a385779c1d74dbce96180799e15e56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2733c29bb1a385779c1d74dbce96180799e15e56", "html_url": "https://github.com/rust-lang/rust/commit/2733c29bb1a385779c1d74dbce96180799e15e56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2733c29bb1a385779c1d74dbce96180799e15e56/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0e39caf842579230bc73d2d32c1e293ca55efcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0e39caf842579230bc73d2d32c1e293ca55efcb", "html_url": "https://github.com/rust-lang/rust/commit/e0e39caf842579230bc73d2d32c1e293ca55efcb"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "e715fb55362dd7b66789296e831d275668952bfa", "filename": "compiler/rustc_data_structures/src/owned_slice/tests.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2733c29bb1a385779c1d74dbce96180799e15e56/compiler%2Frustc_data_structures%2Fsrc%2Fowned_slice%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2733c29bb1a385779c1d74dbce96180799e15e56/compiler%2Frustc_data_structures%2Fsrc%2Fowned_slice%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fowned_slice%2Ftests.rs?ref=2733c29bb1a385779c1d74dbce96180799e15e56", "patch": "@@ -1,4 +1,10 @@\n-use std::{cell::Cell, ops::Deref, rc::Rc};\n+use std::{\n+    ops::Deref,\n+    sync::{\n+        atomic::{self, AtomicBool},\n+        Arc,\n+    },\n+};\n \n use crate::{\n     owned_slice::{slice_owned, try_slice_owned, OwnedSlice},\n@@ -47,18 +53,18 @@ fn boxed() {\n }\n \n #[test]\n-fn drop() {\n-    let flag = Rc::new(Cell::new(false));\n-    let flag_prime = Rc::clone(&flag);\n-    let d = OnDrop(move || flag_prime.set(true));\n+fn drop_drops() {\n+    let flag = Arc::new(AtomicBool::new(false));\n+    let flag_prime = Arc::clone(&flag);\n+    let d = OnDrop(move || flag_prime.store(true, atomic::Ordering::Relaxed));\n \n     let slice = slice_owned(d, |_| &[]);\n \n-    assert_eq!(flag.get(), false);\n+    assert_eq!(flag.load(atomic::Ordering::Relaxed), false);\n \n-    std::mem::drop(slice);\n+    drop(slice);\n \n-    assert_eq!(flag.get(), true);\n+    assert_eq!(flag.load(atomic::Ordering::Relaxed), true);\n }\n \n #[test]"}]}