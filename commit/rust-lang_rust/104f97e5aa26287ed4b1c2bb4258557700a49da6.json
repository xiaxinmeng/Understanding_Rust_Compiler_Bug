{"sha": "104f97e5aa26287ed4b1c2bb4258557700a49da6", "node_id": "C_kwDOAAsO6NoAKDEwNGY5N2U1YWEyNjI4N2VkNGIxYzJiYjQyNTg1NTc3MDBhNDlkYTY", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-08-31T15:23:41Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-09-06T14:18:32Z"}, "message": "Move CTFE handling of nondiverging intrinsics to intrinsics.rs", "tree": {"sha": "60644513764121179efba266cc72d9acfde0463b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60644513764121179efba266cc72d9acfde0463b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/104f97e5aa26287ed4b1c2bb4258557700a49da6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/104f97e5aa26287ed4b1c2bb4258557700a49da6", "html_url": "https://github.com/rust-lang/rust/commit/104f97e5aa26287ed4b1c2bb4258557700a49da6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/104f97e5aa26287ed4b1c2bb4258557700a49da6/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7413511dc85ec01ef4b91785f86614589ac6103", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7413511dc85ec01ef4b91785f86614589ac6103", "html_url": "https://github.com/rust-lang/rust/commit/b7413511dc85ec01ef4b91785f86614589ac6103"}], "stats": {"total": 48, "additions": 29, "deletions": 19}, "files": [{"sha": "2f415a8c9c7090152235f670fa7448f014b548ac", "filename": "compiler/rustc_const_eval/src/interpret/intrinsics.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/104f97e5aa26287ed4b1c2bb4258557700a49da6/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/104f97e5aa26287ed4b1c2bb4258557700a49da6/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs?ref=104f97e5aa26287ed4b1c2bb4258557700a49da6", "patch": "@@ -8,7 +8,7 @@ use rustc_hir::def_id::DefId;\n use rustc_middle::mir::{\n     self,\n     interpret::{ConstValue, GlobalId, InterpResult, PointerArithmetic, Scalar},\n-    BinOp,\n+    BinOp, NonDivergingIntrinsic,\n };\n use rustc_middle::ty;\n use rustc_middle::ty::layout::LayoutOf as _;\n@@ -530,6 +530,32 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         Ok(true)\n     }\n \n+    pub(super) fn emulate_nondiverging_intrinsic(\n+        &mut self,\n+        intrinsic: &NonDivergingIntrinsic<'tcx>,\n+    ) -> InterpResult<'tcx> {\n+        match intrinsic {\n+            NonDivergingIntrinsic::Assume(op) => {\n+                let op = self.eval_operand(op, None)?;\n+                let cond = self.read_scalar(&op)?.to_bool()?;\n+                if !cond {\n+                    throw_ub_format!(\"`assume` called with `false`\");\n+                }\n+                Ok(())\n+            }\n+            NonDivergingIntrinsic::CopyNonOverlapping(mir::CopyNonOverlapping {\n+                count,\n+                src,\n+                dst,\n+            }) => {\n+                let src = self.eval_operand(src, None)?;\n+                let dst = self.eval_operand(dst, None)?;\n+                let count = self.eval_operand(count, None)?;\n+                self.copy_intrinsic(&src, &dst, &count, /* nonoverlapping */ true)\n+            }\n+        }\n+    }\n+\n     pub fn exact_div(\n         &mut self,\n         a: &ImmTy<'tcx, M::Provenance>,"}, {"sha": "c6e04cbfb6bf344200dcc916378ad8df4adcd454", "filename": "compiler/rustc_const_eval/src/interpret/step.rs", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/104f97e5aa26287ed4b1c2bb4258557700a49da6/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/104f97e5aa26287ed4b1c2bb4258557700a49da6/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs?ref=104f97e5aa26287ed4b1c2bb4258557700a49da6", "patch": "@@ -2,8 +2,8 @@\n //!\n //! The main entry point is the `step` method.\n \n+use rustc_middle::mir;\n use rustc_middle::mir::interpret::{InterpResult, Scalar};\n-use rustc_middle::mir::{self, NonDivergingIntrinsic};\n use rustc_middle::ty::layout::LayoutOf;\n \n use super::{InterpCx, Machine};\n@@ -114,23 +114,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 M::retag(self, *kind, &dest)?;\n             }\n \n-            Intrinsic(box NonDivergingIntrinsic::Assume(op)) => {\n-                let op = self.eval_operand(op, None)?;\n-                let cond = self.read_scalar(&op)?.to_bool()?;\n-                if !cond {\n-                    throw_ub_format!(\"`assume` called with `false`\");\n-                }\n-            }\n-            Intrinsic(box NonDivergingIntrinsic::CopyNonOverlapping(mir::CopyNonOverlapping {\n-                ref count,\n-                ref src,\n-                ref dst,\n-            })) => {\n-                let src = self.eval_operand(src, None)?;\n-                let dst = self.eval_operand(dst, None)?;\n-                let count = self.eval_operand(count, None)?;\n-                self.copy_intrinsic(&src, &dst, &count, /* nonoverlapping */ true)?;\n-            }\n+            Intrinsic(box ref intrinsic) => self.emulate_nondiverging_intrinsic(intrinsic)?,\n \n             // Statements we do not track.\n             AscribeUserType(..) => {}"}]}