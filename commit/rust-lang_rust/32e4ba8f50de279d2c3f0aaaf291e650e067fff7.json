{"sha": "32e4ba8f50de279d2c3f0aaaf291e650e067fff7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZTRiYThmNTBkZTI3OWQyYzNmMGFhYWYyOTFlNjUwZTA2N2ZmZjc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2015-10-26T09:31:17Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2015-10-26T09:31:17Z"}, "message": "reference: clarify impl\n\nAnother kind of nominal types in Rust are trait objects, so the following is valid\n\n```rust\ntrait A {\n\n}\n\nimpl A {\n\n}\n```", "tree": {"sha": "fc89a1ee97b09ef18c936420423333c9de9366ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc89a1ee97b09ef18c936420423333c9de9366ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32e4ba8f50de279d2c3f0aaaf291e650e067fff7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32e4ba8f50de279d2c3f0aaaf291e650e067fff7", "html_url": "https://github.com/rust-lang/rust/commit/32e4ba8f50de279d2c3f0aaaf291e650e067fff7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32e4ba8f50de279d2c3f0aaaf291e650e067fff7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72ed590f8b2210fccd26489d2237310cc2db2603", "url": "https://api.github.com/repos/rust-lang/rust/commits/72ed590f8b2210fccd26489d2237310cc2db2603", "html_url": "https://github.com/rust-lang/rust/commit/72ed590f8b2210fccd26489d2237310cc2db2603"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "037fb6a8d98d88ac06cea2853740fc3a19da7ae6", "filename": "src/doc/reference.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/32e4ba8f50de279d2c3f0aaaf291e650e067fff7/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/32e4ba8f50de279d2c3f0aaaf291e650e067fff7/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=32e4ba8f50de279d2c3f0aaaf291e650e067fff7", "patch": "@@ -1520,11 +1520,11 @@ impl Shape for Circle {\n ```\n \n It is possible to define an implementation without referring to a trait. The\n-methods in such an implementation can only be used as direct calls on the\n-values of the type that the implementation targets. In such an implementation,\n-the trait type and `for` after `impl` are omitted. Such implementations are\n-limited to nominal types (enums, structs), and the implementation must appear\n-in the same crate as the `self` type:\n+methods in such an implementation can only be used as direct calls on the values\n+of the type that the implementation targets. In such an implementation, the\n+trait type and `for` after `impl` are omitted. Such implementations are limited\n+to nominal types (enums, structs, trait objects), and the implementation must\n+appear in the same crate as the `self` type:\n \n ```\n struct Point {x: i32, y: i32}"}]}