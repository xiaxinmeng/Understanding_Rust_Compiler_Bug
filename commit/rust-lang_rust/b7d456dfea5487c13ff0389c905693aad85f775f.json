{"sha": "b7d456dfea5487c13ff0389c905693aad85f775f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ZDQ1NmRmZWE1NDg3YzEzZmYwMzg5YzkwNTY5M2FhZDg1Zjc3NWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-03T06:26:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-03T06:26:02Z"}, "message": "auto merge of #16934 : nick29581/rust/dst-bug-6, r=pcwalton\n\nCloses #16911 \r\n\r\nr?", "tree": {"sha": "d33c558d0d3189b0085e109b49c13469ebd8ceb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d33c558d0d3189b0085e109b49c13469ebd8ceb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7d456dfea5487c13ff0389c905693aad85f775f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7d456dfea5487c13ff0389c905693aad85f775f", "html_url": "https://github.com/rust-lang/rust/commit/b7d456dfea5487c13ff0389c905693aad85f775f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7d456dfea5487c13ff0389c905693aad85f775f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7ec95efbb96f8e9bcb8b5e71b5d13803e840dc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7ec95efbb96f8e9bcb8b5e71b5d13803e840dc9", "html_url": "https://github.com/rust-lang/rust/commit/f7ec95efbb96f8e9bcb8b5e71b5d13803e840dc9"}, {"sha": "3c610af6706a66b185807b8ec721f454e16625de", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c610af6706a66b185807b8ec721f454e16625de", "html_url": "https://github.com/rust-lang/rust/commit/3c610af6706a66b185807b8ec721f454e16625de"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "10b6adad1e33d08f56ecd6b8499d7a2f941d7a0a", "filename": "src/librustc/middle/trans/consts.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b7d456dfea5487c13ff0389c905693aad85f775f/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7d456dfea5487c13ff0389c905693aad85f775f/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=b7d456dfea5487c13ff0389c905693aad85f775f", "patch": "@@ -170,7 +170,7 @@ fn const_deref(cx: &CrateContext, v: ValueRef, t: ty::t, explicit: bool)\n             }\n         }\n         None => {\n-            cx.sess().bug(format!(\"can't dereference const of type {}\",\n+            cx.sess().bug(format!(\"cannot dereference const of type {}\",\n                                   ty_to_string(cx.tcx(), t)).as_slice())\n         }\n     }\n@@ -225,10 +225,12 @@ pub fn const_expr(cx: &CrateContext, e: &ast::Expr, is_local: bool) -> (ValueRef\n                 ty::AutoDerefRef(ref adj) => {\n                     let mut ty = ety;\n                     // Save the last autoderef in case we can avoid it.\n-                    for _ in range(0, adj.autoderefs-1) {\n-                        let (dv, dt) = const_deref(cx, llconst, ty, false);\n-                        llconst = dv;\n-                        ty = dt;\n+                    if adj.autoderefs > 0 {\n+                        for _ in range(0, adj.autoderefs-1) {\n+                            let (dv, dt) = const_deref(cx, llconst, ty, false);\n+                            llconst = dv;\n+                            ty = dt;\n+                        }\n                     }\n \n                     match adj.autoref {\n@@ -263,6 +265,8 @@ pub fn const_expr(cx: &CrateContext, e: &ast::Expr, is_local: bool) -> (ValueRef\n                                         // work properly.\n                                         let (_, dt) = const_deref(cx, llconst, ty, false);\n                                         ty = dt;\n+                                    } else {\n+                                        llconst = const_addr_of(cx, llconst, ast::MutImmutable)\n                                     }\n \n                                     match ty::get(ty).sty {"}, {"sha": "43e4950a2444529f420027d2687729500f4563c9", "filename": "src/test/run-pass/const-vecs-and-slices.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b7d456dfea5487c13ff0389c905693aad85f775f/src%2Ftest%2Frun-pass%2Fconst-vecs-and-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7d456dfea5487c13ff0389c905693aad85f775f/src%2Ftest%2Frun-pass%2Fconst-vecs-and-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-vecs-and-slices.rs?ref=b7d456dfea5487c13ff0389c905693aad85f775f", "patch": "@@ -12,11 +12,21 @@ extern crate debug;\n \n static x : [int, ..4] = [1,2,3,4];\n static y : &'static [int] = &[1,2,3,4];\n+static z : &'static [int, ..4] = &[1,2,3,4];\n+static zz : &'static [int] = [1,2,3,4];\n \n pub fn main() {\n     println!(\"{:?}\", x[1]);\n     println!(\"{:?}\", y[1]);\n+    println!(\"{:?}\", z[1]);\n+    println!(\"{:?}\", zz[1]);\n     assert_eq!(x[1], 2);\n     assert_eq!(x[3], 4);\n     assert_eq!(x[3], y[3]);\n+    assert_eq!(z[1], 2);\n+    assert_eq!(z[3], 4);\n+    assert_eq!(z[3], y[3]);\n+    assert_eq!(zz[1], 2);\n+    assert_eq!(zz[3], 4);\n+    assert_eq!(zz[3], y[3]);\n }"}]}