{"sha": "7f36a3fcd788292c56c3a21e6145e7f6c78f0d84", "node_id": "C_kwDOAAsO6NoAKDdmMzZhM2ZjZDc4ODI5MmM1NmMzYTIxZTYxNDVlN2Y2Yzc4ZjBkODQ", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-11T17:07:36Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-18T21:35:02Z"}, "message": "Fix CTFE interpreter.", "tree": {"sha": "470ac055b25c17cc78bf59267f8eb0088d2c9b76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/470ac055b25c17cc78bf59267f8eb0088d2c9b76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f36a3fcd788292c56c3a21e6145e7f6c78f0d84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f36a3fcd788292c56c3a21e6145e7f6c78f0d84", "html_url": "https://github.com/rust-lang/rust/commit/7f36a3fcd788292c56c3a21e6145e7f6c78f0d84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f36a3fcd788292c56c3a21e6145e7f6c78f0d84/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c93145b3304f7d1f4ec7ac284595f3505f4de72", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c93145b3304f7d1f4ec7ac284595f3505f4de72", "html_url": "https://github.com/rust-lang/rust/commit/4c93145b3304f7d1f4ec7ac284595f3505f4de72"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d9a390184d9649245915286350795c1454335260", "filename": "compiler/rustc_const_eval/src/interpret/terminator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f36a3fcd788292c56c3a21e6145e7f6c78f0d84/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f36a3fcd788292c56c3a21e6145e7f6c78f0d84/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs?ref=7f36a3fcd788292c56c3a21e6145e7f6c78f0d84", "patch": "@@ -137,7 +137,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             }\n \n             Assert { ref cond, expected, ref msg, target, cleanup } => {\n-                let ignored = !self.tcx.sess.overflow_checks()\n+                let ignored = M::checked_binop_checks_overflow(self)\n                     && match msg {\n                         mir::AssertKind::OverflowNeg(..) => true,\n                         mir::AssertKind::Overflow(op, ..) => op.is_checkable(),"}]}