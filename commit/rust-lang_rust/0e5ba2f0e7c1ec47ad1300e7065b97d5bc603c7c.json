{"sha": "0e5ba2f0e7c1ec47ad1300e7065b97d5bc603c7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNWJhMmYwZTdjMWVjNDdhZDEzMDBlNzA2NWI5N2Q1YmM2MDNjN2M=", "commit": {"author": {"name": "Krishna Sai Veera Reddy", "email": "veerareddy@email.arizona.edu", "date": "2020-02-09T16:54:23Z"}, "committer": {"name": "Krishna Sai Veera Reddy", "email": "veerareddy@email.arizona.edu", "date": "2020-02-09T16:54:23Z"}, "message": "Account for `expect` being used to unwrap `Option`", "tree": {"sha": "a6ad20b5b05220cfc1a0639f643948f41981aa60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6ad20b5b05220cfc1a0639f643948f41981aa60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e5ba2f0e7c1ec47ad1300e7065b97d5bc603c7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e5ba2f0e7c1ec47ad1300e7065b97d5bc603c7c", "html_url": "https://github.com/rust-lang/rust/commit/0e5ba2f0e7c1ec47ad1300e7065b97d5bc603c7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e5ba2f0e7c1ec47ad1300e7065b97d5bc603c7c/comments", "author": {"login": "krishna-veerareddy", "id": 41484652, "node_id": "MDQ6VXNlcjQxNDg0NjUy", "avatar_url": "https://avatars.githubusercontent.com/u/41484652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krishna-veerareddy", "html_url": "https://github.com/krishna-veerareddy", "followers_url": "https://api.github.com/users/krishna-veerareddy/followers", "following_url": "https://api.github.com/users/krishna-veerareddy/following{/other_user}", "gists_url": "https://api.github.com/users/krishna-veerareddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/krishna-veerareddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krishna-veerareddy/subscriptions", "organizations_url": "https://api.github.com/users/krishna-veerareddy/orgs", "repos_url": "https://api.github.com/users/krishna-veerareddy/repos", "events_url": "https://api.github.com/users/krishna-veerareddy/events{/privacy}", "received_events_url": "https://api.github.com/users/krishna-veerareddy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "krishna-veerareddy", "id": 41484652, "node_id": "MDQ6VXNlcjQxNDg0NjUy", "avatar_url": "https://avatars.githubusercontent.com/u/41484652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krishna-veerareddy", "html_url": "https://github.com/krishna-veerareddy", "followers_url": "https://api.github.com/users/krishna-veerareddy/followers", "following_url": "https://api.github.com/users/krishna-veerareddy/following{/other_user}", "gists_url": "https://api.github.com/users/krishna-veerareddy/gists{/gist_id}", "starred_url": "https://api.github.com/users/krishna-veerareddy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krishna-veerareddy/subscriptions", "organizations_url": "https://api.github.com/users/krishna-veerareddy/orgs", "repos_url": "https://api.github.com/users/krishna-veerareddy/repos", "events_url": "https://api.github.com/users/krishna-veerareddy/events{/privacy}", "received_events_url": "https://api.github.com/users/krishna-veerareddy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be1bc571c3558cf3920e77d5eb3f017aeeac637c", "url": "https://api.github.com/repos/rust-lang/rust/commits/be1bc571c3558cf3920e77d5eb3f017aeeac637c", "html_url": "https://github.com/rust-lang/rust/commit/be1bc571c3558cf3920e77d5eb3f017aeeac637c"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "e84a7dd2db04c09ab92fae13feae7f54f2231552", "filename": "clippy_lints/src/option_env_unwrap.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0e5ba2f0e7c1ec47ad1300e7065b97d5bc603c7c/clippy_lints%2Fsrc%2Foption_env_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5ba2f0e7c1ec47ad1300e7065b97d5bc603c7c/clippy_lints%2Fsrc%2Foption_env_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foption_env_unwrap.rs?ref=0e5ba2f0e7c1ec47ad1300e7065b97d5bc603c7c", "patch": "@@ -38,15 +38,16 @@ impl EarlyLintPass for OptionEnvUnwrap {\n         if_chain! {\n             if !in_external_macro(cx.sess, expr.span);\n             if let ExprKind::MethodCall(path_segment, args) = &expr.kind;\n-            if path_segment.ident.as_str() == \"unwrap\";\n+            let method_name = path_segment.ident.as_str();\n+            if method_name == \"expect\" || method_name == \"unwrap\";\n             if let ExprKind::Call(caller, _) = &args[0].kind;\n             if is_direct_expn_of(caller.span, \"option_env\").is_some();\n             then {\n                 span_lint_and_help(\n                     cx,\n                     OPTION_ENV_UNWRAP,\n                     expr.span,\n-                    \"this will panic at run-time if the environment variable doesn't exist\",\n+                    \"this will panic at run-time if the environment variable doesn't exist at compile-time\",\n                     \"consider using the `env!` macro instead\"\n                 );\n             }"}, {"sha": "c8488da505cc81af713ad85df26313d3162502a5", "filename": "tests/ui/option_env_unwrap.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0e5ba2f0e7c1ec47ad1300e7065b97d5bc603c7c/tests%2Fui%2Foption_env_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5ba2f0e7c1ec47ad1300e7065b97d5bc603c7c/tests%2Fui%2Foption_env_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_env_unwrap.rs?ref=0e5ba2f0e7c1ec47ad1300e7065b97d5bc603c7c", "patch": "@@ -4,9 +4,14 @@ macro_rules! option_env_unwrap {\n     ($env: expr) => {\n         option_env!($env).unwrap()\n     };\n+    ($env: expr, $message: expr) => {\n+        option_env!($env).expect($message)\n+    };\n }\n \n fn main() {\n     let _ = option_env!(\"HOME\").unwrap();\n+    let _ = option_env!(\"HOME\").expect(\"environment variable HOME isn't set\");\n     let _ = option_env_unwrap!(\"HOME\");\n+    let _ = option_env_unwrap!(\"HOME\", \"environment variable HOME isn't set\");\n }"}, {"sha": "2230cc3d8592c3fca71beaedd780c932ca0b165f", "filename": "tests/ui/option_env_unwrap.stderr", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0e5ba2f0e7c1ec47ad1300e7065b97d5bc603c7c/tests%2Fui%2Foption_env_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0e5ba2f0e7c1ec47ad1300e7065b97d5bc603c7c/tests%2Fui%2Foption_env_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_env_unwrap.stderr?ref=0e5ba2f0e7c1ec47ad1300e7065b97d5bc603c7c", "patch": "@@ -1,13 +1,21 @@\n-error: this will panic at run-time if the environment variable doesn't exist\n-  --> $DIR/option_env_unwrap.rs:10:13\n+error: this will panic at run-time if the environment variable doesn't exist at compile-time\n+  --> $DIR/option_env_unwrap.rs:13:13\n    |\n LL |     let _ = option_env!(\"HOME\").unwrap();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::option-env-unwrap` implied by `-D warnings`\n    = help: consider using the `env!` macro instead\n \n-error: this will panic at run-time if the environment variable doesn't exist\n+error: this will panic at run-time if the environment variable doesn't exist at compile-time\n+  --> $DIR/option_env_unwrap.rs:14:13\n+   |\n+LL |     let _ = option_env!(\"HOME\").expect(\"environment variable HOME isn't set\");\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using the `env!` macro instead\n+\n+error: this will panic at run-time if the environment variable doesn't exist at compile-time\n   --> $DIR/option_env_unwrap.rs:5:9\n    |\n LL |         option_env!($env).unwrap()\n@@ -19,5 +27,17 @@ LL |     let _ = option_env_unwrap!(\"HOME\");\n    = help: consider using the `env!` macro instead\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 2 previous errors\n+error: this will panic at run-time if the environment variable doesn't exist at compile-time\n+  --> $DIR/option_env_unwrap.rs:8:9\n+   |\n+LL |         option_env!($env).expect($message)\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     let _ = option_env_unwrap!(\"HOME\", \"environment variable HOME isn't set\");\n+   |             ----------------------------------------------------------------- in this macro invocation\n+   |\n+   = help: consider using the `env!` macro instead\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 4 previous errors\n "}]}