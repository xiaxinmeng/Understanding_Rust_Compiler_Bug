{"sha": "ed7a4adeb326c9957b4a2514a69cbae4276ab028", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkN2E0YWRlYjMyNmM5OTU3YjRhMjUxNGE2OWNiYWU0Mjc2YWIwMjg=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-10-01T10:51:44Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2020-11-04T09:58:59Z"}, "message": "32 bit platforms don't have 64 bit pointers", "tree": {"sha": "ebc36f2230a0e5f11283ddefc4d766dcc9b667ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebc36f2230a0e5f11283ddefc4d766dcc9b667ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed7a4adeb326c9957b4a2514a69cbae4276ab028", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed7a4adeb326c9957b4a2514a69cbae4276ab028", "html_url": "https://github.com/rust-lang/rust/commit/ed7a4adeb326c9957b4a2514a69cbae4276ab028", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed7a4adeb326c9957b4a2514a69cbae4276ab028/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eac309984fc102f15d5d1d3401d3f53b076f371d", "url": "https://api.github.com/repos/rust-lang/rust/commits/eac309984fc102f15d5d1d3401d3f53b076f371d", "html_url": "https://github.com/rust-lang/rust/commit/eac309984fc102f15d5d1d3401d3f53b076f371d"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "fce23abdfce30b0cde27b4b62f77c4613d7c8f85", "filename": "compiler/rustc_mir/src/const_eval/eval_queries.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ed7a4adeb326c9957b4a2514a69cbae4276ab028/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed7a4adeb326c9957b4a2514a69cbae4276ab028/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs?ref=ed7a4adeb326c9957b4a2514a69cbae4276ab028", "patch": "@@ -14,7 +14,7 @@ use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{self, subst::Subst, TyCtxt};\n use rustc_span::source_map::Span;\n use rustc_target::abi::{Abi, LayoutOf};\n-use std::convert::{TryFrom, TryInto};\n+use std::convert::TryInto;\n \n pub fn note_on_undefined_behavior_error() -> &'static str {\n     \"The rules on what exactly is undefined behavior aren't clear, \\\n@@ -140,7 +140,8 @@ pub(super) fn op_to_const<'tcx>(\n         Scalar::Raw(int) => {\n             assert!(mplace.layout.is_zst());\n             assert_eq!(\n-                u64::try_from(int).unwrap() % mplace.layout.align.abi.bytes(),\n+                int.assert_bits(ecx.tcx.data_layout.pointer_size)\n+                    % u128::from(mplace.layout.align.abi.bytes()),\n                 0,\n                 \"this MPlaceTy must come from a validated constant, thus we can assume the \\\n                 alignment is correct\","}]}