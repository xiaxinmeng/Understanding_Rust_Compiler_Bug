{"sha": "031293547383b305beed135c4edcafad4fd5f0f6", "node_id": "C_kwDOAAsO6NoAKDAzMTI5MzU0NzM4M2IzMDViZWVkMTM1YzRlZGNhZmFkNGZkNWYwZjY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-11-02T17:02:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-02T17:02:05Z"}, "message": "Rollup merge of #103862 - compiler-errors:ocx-in-fully-normalize, r=spastorino\n\nUse `ObligationCtxt` in `fully_normalize`\n\nSimplifies the implementation a bit", "tree": {"sha": "7fe2abae17f814352d1b0e5831eff5534c545163", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fe2abae17f814352d1b0e5831eff5534c545163"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/031293547383b305beed135c4edcafad4fd5f0f6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjYqKNCRBK7hj4Ov3rIwAASekIABivK0/xSYIbegodjpKmUHXV\nCP5j0Paq0cDPUfH9FE3C38icUNflYcANhVcHx+T1fNpTWojgOGWUEUGgbRGWJrbE\nmOU6UilEUwzrSguJfZs4JDsR/mxMqEMvv7no0tgz1PX4LJm3fRZG1l5dtMp3sW3g\najcK2pwdNome8AykaOiznY4cbq61R24K9takFdEa3JauQJMLfnwJRZjeflN7x8SY\nsTXNKcAB6byFNlHC4VLPCrXjlgiM6++4RgizJBnD49SiOvlTwkMiiXWMGmiLuZe0\n4O8hfyFoMt7NE82P6inWgyeiFRBO4mXfzFIM60nziI94p425oaSJnsW2JN777EM=\n=/iTl\n-----END PGP SIGNATURE-----\n", "payload": "tree 7fe2abae17f814352d1b0e5831eff5534c545163\nparent cd9173ec40f261994e68c111a582951ab6ba45cd\nparent a9881f52131a2ed745c188ccdecf37a2e2430fe7\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1667408525 +0530\ncommitter GitHub <noreply@github.com> 1667408525 +0530\n\nRollup merge of #103862 - compiler-errors:ocx-in-fully-normalize, r=spastorino\n\nUse `ObligationCtxt` in `fully_normalize`\n\nSimplifies the implementation a bit\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/031293547383b305beed135c4edcafad4fd5f0f6", "html_url": "https://github.com/rust-lang/rust/commit/031293547383b305beed135c4edcafad4fd5f0f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/031293547383b305beed135c4edcafad4fd5f0f6/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd9173ec40f261994e68c111a582951ab6ba45cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd9173ec40f261994e68c111a582951ab6ba45cd", "html_url": "https://github.com/rust-lang/rust/commit/cd9173ec40f261994e68c111a582951ab6ba45cd"}, {"sha": "a9881f52131a2ed745c188ccdecf37a2e2430fe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9881f52131a2ed745c188ccdecf37a2e2430fe7", "html_url": "https://github.com/rust-lang/rust/commit/a9881f52131a2ed745c188ccdecf37a2e2430fe7"}], "stats": {"total": 27, "additions": 9, "deletions": 18}, "files": [{"sha": "9ee6e0a2bf3a20337df5928b9569efd69b572c7c", "filename": "compiler/rustc_trait_selection/src/traits/mod.rs", "status": "modified", "additions": 9, "deletions": 18, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/031293547383b305beed135c4edcafad4fd5f0f6/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/031293547383b305beed135c4edcafad4fd5f0f6/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs?ref=031293547383b305beed135c4edcafad4fd5f0f6", "patch": "@@ -390,6 +390,7 @@ pub fn normalize_param_env_or_error<'tcx>(\n }\n \n /// Normalize a type and process all resulting obligations, returning any errors\n+#[instrument(skip_all)]\n pub fn fully_normalize<'tcx, T>(\n     infcx: &InferCtxt<'tcx>,\n     cause: ObligationCause<'tcx>,\n@@ -399,28 +400,18 @@ pub fn fully_normalize<'tcx, T>(\n where\n     T: TypeFoldable<'tcx>,\n {\n-    debug!(\"fully_normalize_with_fulfillcx(value={:?})\", value);\n-    let selcx = &mut SelectionContext::new(infcx);\n-    let Normalized { value: normalized_value, obligations } =\n-        project::normalize(selcx, param_env, cause, value);\n-    debug!(\n-        \"fully_normalize: normalized_value={:?} obligations={:?}\",\n-        normalized_value, obligations\n-    );\n-\n-    let mut fulfill_cx = FulfillmentContext::new();\n-    for obligation in obligations {\n-        fulfill_cx.register_predicate_obligation(infcx, obligation);\n-    }\n-\n-    debug!(\"fully_normalize: select_all_or_error start\");\n-    let errors = fulfill_cx.select_all_or_error(infcx);\n+    let ocx = ObligationCtxt::new(infcx);\n+    debug!(?value);\n+    let normalized_value = ocx.normalize(cause, param_env, value);\n+    debug!(?normalized_value);\n+    debug!(\"select_all_or_error start\");\n+    let errors = ocx.select_all_or_error();\n     if !errors.is_empty() {\n         return Err(errors);\n     }\n-    debug!(\"fully_normalize: select_all_or_error complete\");\n+    debug!(\"select_all_or_error complete\");\n     let resolved_value = infcx.resolve_vars_if_possible(normalized_value);\n-    debug!(\"fully_normalize: resolved_value={:?}\", resolved_value);\n+    debug!(?resolved_value);\n     Ok(resolved_value)\n }\n "}]}