{"sha": "44c1ef879773fa7893529bcd18f9024bc91bb8f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YzFlZjg3OTc3M2ZhNzg5MzUyOWJjZDE4ZjkwMjRiYzkxYmI4ZjY=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-11T11:39:19Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-12T11:58:44Z"}, "message": "Use () for inherent_impls.", "tree": {"sha": "d76900f5fbc18a448490a6e128b8c88fe3497b31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d76900f5fbc18a448490a6e128b8c88fe3497b31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44c1ef879773fa7893529bcd18f9024bc91bb8f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44c1ef879773fa7893529bcd18f9024bc91bb8f6", "html_url": "https://github.com/rust-lang/rust/commit/44c1ef879773fa7893529bcd18f9024bc91bb8f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44c1ef879773fa7893529bcd18f9024bc91bb8f6/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b03b74734b35649a92500686347a8678b48746e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b03b74734b35649a92500686347a8678b48746e5", "html_url": "https://github.com/rust-lang/rust/commit/b03b74734b35649a92500686347a8678b48746e5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4e0b1ae78dfe39886b6c7ce2f36e8da726619569", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44c1ef879773fa7893529bcd18f9024bc91bb8f6/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44c1ef879773fa7893529bcd18f9024bc91bb8f6/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=44c1ef879773fa7893529bcd18f9024bc91bb8f6", "patch": "@@ -3,7 +3,7 @@\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::in_macro;\n use rustc_hir::def_id::DefIdMap;\n-use rustc_hir::{def_id, Crate, Impl, Item, ItemKind};\n+use rustc_hir::{Crate, Impl, Item, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::Span;\n@@ -68,7 +68,7 @@ impl<'tcx> LateLintPass<'tcx> for MultipleInherentImpl {\n     fn check_crate_post(&mut self, cx: &LateContext<'tcx>, krate: &'tcx Crate<'_>) {\n         if !krate.items.is_empty() {\n             // Retrieve all inherent implementations from the crate, grouped by type\n-            for impls in cx.tcx.crate_inherent_impls(def_id::LOCAL_CRATE).inherent_impls.values() {\n+            for impls in cx.tcx.crate_inherent_impls(()).inherent_impls.values() {\n                 // Filter out implementations that have generic params (type or lifetime)\n                 let mut impl_spans = impls.iter().filter_map(|impl_def| self.impls.get(impl_def));\n                 if let Some(initial_span) = impl_spans.next() {"}]}