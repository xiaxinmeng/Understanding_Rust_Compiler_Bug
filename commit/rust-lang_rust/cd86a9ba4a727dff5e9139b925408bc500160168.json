{"sha": "cd86a9ba4a727dff5e9139b925408bc500160168", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkODZhOWJhNGE3MjdkZmY1ZTkxMzliOTI1NDA4YmM1MDAxNjAxNjg=", "commit": {"author": {"name": "Dennis Schridde", "email": "devurandom@gmx.net", "date": "2017-05-24T07:11:10Z"}, "committer": {"name": "Dennis Schridde", "email": "devurandom@gmx.net", "date": "2017-05-24T08:52:57Z"}, "message": "bootstrap: Use common run() function to call cargo\n\nThis brings verbosity even to invocation of cargo itself", "tree": {"sha": "4dacd7e07432ae3f7cb155b5d8cd545af0752db6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dacd7e07432ae3f7cb155b5d8cd545af0752db6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd86a9ba4a727dff5e9139b925408bc500160168", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd86a9ba4a727dff5e9139b925408bc500160168", "html_url": "https://github.com/rust-lang/rust/commit/cd86a9ba4a727dff5e9139b925408bc500160168", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd86a9ba4a727dff5e9139b925408bc500160168/comments", "author": {"login": "devurandom", "id": 63082, "node_id": "MDQ6VXNlcjYzMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/63082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devurandom", "html_url": "https://github.com/devurandom", "followers_url": "https://api.github.com/users/devurandom/followers", "following_url": "https://api.github.com/users/devurandom/following{/other_user}", "gists_url": "https://api.github.com/users/devurandom/gists{/gist_id}", "starred_url": "https://api.github.com/users/devurandom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devurandom/subscriptions", "organizations_url": "https://api.github.com/users/devurandom/orgs", "repos_url": "https://api.github.com/users/devurandom/repos", "events_url": "https://api.github.com/users/devurandom/events{/privacy}", "received_events_url": "https://api.github.com/users/devurandom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devurandom", "id": 63082, "node_id": "MDQ6VXNlcjYzMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/63082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devurandom", "html_url": "https://github.com/devurandom", "followers_url": "https://api.github.com/users/devurandom/followers", "following_url": "https://api.github.com/users/devurandom/following{/other_user}", "gists_url": "https://api.github.com/users/devurandom/gists{/gist_id}", "starred_url": "https://api.github.com/users/devurandom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devurandom/subscriptions", "organizations_url": "https://api.github.com/users/devurandom/orgs", "repos_url": "https://api.github.com/users/devurandom/repos", "events_url": "https://api.github.com/users/devurandom/events{/privacy}", "received_events_url": "https://api.github.com/users/devurandom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "604f716dbe8f5aac191d4208cf53e31fd241011e", "url": "https://api.github.com/repos/rust-lang/rust/commits/604f716dbe8f5aac191d4208cf53e31fd241011e", "html_url": "https://github.com/rust-lang/rust/commit/604f716dbe8f5aac191d4208cf53e31fd241011e"}], "stats": {"total": 30, "additions": 12, "deletions": 18}, "files": [{"sha": "0f85ba81d1268c90176e9935ead434cf1fb17daa", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/cd86a9ba4a727dff5e9139b925408bc500160168/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/cd86a9ba4a727dff5e9139b925408bc500160168/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=cd86a9ba4a727dff5e9139b925408bc500160168", "patch": "@@ -127,13 +127,13 @@ def unpack(tarball, dst, verbose=False, match=None):\n             shutil.move(tp, fp)\n     shutil.rmtree(os.path.join(dst, fname))\n \n-def run(args, verbose=False, exception=False, cwd=None):\n+def run(args, verbose=False, exception=False, cwd=None, env=None):\n     if verbose:\n         print(\"running: \" + ' '.join(args))\n     sys.stdout.flush()\n     # Use Popen here instead of call() as it apparently allows powershell on\n     # Windows to not lock up waiting for input presumably.\n-    ret = subprocess.Popen(args, cwd=cwd)\n+    ret = subprocess.Popen(args, cwd=cwd, env=env)\n     code = ret.wait()\n     if code != 0:\n         err = \"failed to run: \" + ' '.join(args)\n@@ -393,13 +393,7 @@ def build_bootstrap(self):\n             args.append(\"--locked\")\n         if self.use_vendored_sources:\n             args.append(\"--frozen\")\n-        self.run(args, env)\n-\n-    def run(self, args, env=None, cwd=None):\n-        proc = subprocess.Popen(args, env=env, cwd=cwd)\n-        ret = proc.wait()\n-        if ret != 0:\n-            sys.exit(ret)\n+        run(args, env=env, verbose=self.verbose)\n \n     def output(self, args, env=None, cwd=None):\n         default_encoding = sys.getdefaultencoding()\n@@ -571,7 +565,7 @@ def update_submodules(self):\n             path = line[1:].split(' ')[1]\n             submodules.append([path, line[0]])\n \n-        self.run([\"git\", \"submodule\", \"sync\"], cwd=self.rust_root)\n+        run([\"git\", \"submodule\", \"sync\"], cwd=self.rust_root)\n \n         for submod in submodules:\n             path, status = submod\n@@ -584,15 +578,15 @@ def update_submodules(self):\n             submod_path = os.path.join(self.rust_root, path)\n \n             if status == ' ':\n-                self.run([\"git\", \"reset\", \"--hard\"], cwd=submod_path)\n-                self.run([\"git\", \"clean\", \"-fdx\"], cwd=submod_path)\n+                run([\"git\", \"reset\", \"--hard\"], cwd=submod_path)\n+                run([\"git\", \"clean\", \"-fdx\"], cwd=submod_path)\n             elif status == '+':\n-                self.run([\"git\", \"submodule\", \"update\", path], cwd=self.rust_root)\n-                self.run([\"git\", \"reset\", \"--hard\"], cwd=submod_path)\n-                self.run([\"git\", \"clean\", \"-fdx\"], cwd=submod_path)\n+                run([\"git\", \"submodule\", \"update\", path], cwd=self.rust_root)\n+                run([\"git\", \"reset\", \"--hard\"], cwd=submod_path)\n+                run([\"git\", \"clean\", \"-fdx\"], cwd=submod_path)\n             elif status == '-':\n-                self.run([\"git\", \"submodule\", \"init\", path], cwd=self.rust_root)\n-                self.run([\"git\", \"submodule\", \"update\", path], cwd=self.rust_root)\n+                run([\"git\", \"submodule\", \"init\", path], cwd=self.rust_root)\n+                run([\"git\", \"submodule\", \"update\", path], cwd=self.rust_root)\n             else:\n                 raise ValueError('unknown submodule status: ' + status)\n \n@@ -685,7 +679,7 @@ def bootstrap():\n     env[\"BUILD\"] = rb.build\n     env[\"SRC\"] = rb.rust_root\n     env[\"BOOTSTRAP_PARENT_ID\"] = str(os.getpid())\n-    rb.run(args, env)\n+    run(args, env=env, verbose=rb.verbose)\n \n def main():\n     start_time = time()"}]}