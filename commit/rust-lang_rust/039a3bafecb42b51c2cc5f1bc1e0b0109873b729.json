{"sha": "039a3bafecb42b51c2cc5f1bc1e0b0109873b729", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzOWEzYmFmZWNiNDJiNTFjMmNjNWYxYmMxZTBiMDEwOTg3M2I3Mjk=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-05-31T04:27:29Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-07-08T21:55:58Z"}, "message": "Add another codegen test, array_eq_zero\n\nShowing that this avoids an alloca and private constant.", "tree": {"sha": "7878730af788f30dae1bcab0959a86636fef6d04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7878730af788f30dae1bcab0959a86636fef6d04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/039a3bafecb42b51c2cc5f1bc1e0b0109873b729", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/039a3bafecb42b51c2cc5f1bc1e0b0109873b729", "html_url": "https://github.com/rust-lang/rust/commit/039a3bafecb42b51c2cc5f1bc1e0b0109873b729", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/039a3bafecb42b51c2cc5f1bc1e0b0109873b729/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12163534a94b24a8a754fffe6e601904c2c6f31f", "url": "https://api.github.com/repos/rust-lang/rust/commits/12163534a94b24a8a754fffe6e601904c2c6f31f", "html_url": "https://github.com/rust-lang/rust/commit/12163534a94b24a8a754fffe6e601904c2c6f31f"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "aa56e32e26ce879915b2ca2cd0f269ad7a276d34", "filename": "src/test/codegen/array-equality.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/039a3bafecb42b51c2cc5f1bc1e0b0109873b729/src%2Ftest%2Fcodegen%2Farray-equality.rs", "raw_url": "https://github.com/rust-lang/rust/raw/039a3bafecb42b51c2cc5f1bc1e0b0109873b729/src%2Ftest%2Fcodegen%2Farray-equality.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Farray-equality.rs?ref=039a3bafecb42b51c2cc5f1bc1e0b0109873b729", "patch": "@@ -34,3 +34,12 @@ pub fn array_eq_long(a: &[u16; 1234], b: &[u16; 1234]) -> bool {\n     // CHECK-NEXT: ret i1 %[[EQ]]\n     a == b\n }\n+\n+// CHECK-LABEL: @array_eq_zero(i128 %0)\n+#[no_mangle]\n+pub fn array_eq_zero(x: [u16; 8]) -> bool {\n+    // CHECK-NEXT: start:\n+    // CHECK-NEXT: %[[EQ:.+]] = icmp eq i128 %0, 0\n+    // CHECK-NEXT: ret i1 %[[EQ]]\n+    x == [0; 8]\n+}"}]}