{"sha": "ba361428509ddabfcee5b4274d4068d4d612f963", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMzYxNDI4NTA5ZGRhYmZjZWU1YjQyNzRkNDA2OGQ0ZDYxMmY5NjM=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-23T04:26:29Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-24T23:21:48Z"}, "message": "Finally (finally) ((finally!!!!)) fix spans for the standard library", "tree": {"sha": "4ec310972a673846253e614b57142241ccbe9cca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ec310972a673846253e614b57142241ccbe9cca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba361428509ddabfcee5b4274d4068d4d612f963", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba361428509ddabfcee5b4274d4068d4d612f963", "html_url": "https://github.com/rust-lang/rust/commit/ba361428509ddabfcee5b4274d4068d4d612f963", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba361428509ddabfcee5b4274d4068d4d612f963/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c44c64df711e407ef10f8ae62100e46f0323065f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c44c64df711e407ef10f8ae62100e46f0323065f", "html_url": "https://github.com/rust-lang/rust/commit/c44c64df711e407ef10f8ae62100e46f0323065f"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "607a634c1bced5fbb7be140e5b1347c6ec13e58b", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ba361428509ddabfcee5b4274d4068d4d612f963/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba361428509ddabfcee5b4274d4068d4d612f963/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=ba361428509ddabfcee5b4274d4068d4d612f963", "patch": "@@ -264,8 +264,12 @@ impl Item {\n     }\n \n     crate fn span(&self, tcx: TyCtxt<'_>) -> Span {\n+        let kind = match &*self.kind {\n+            ItemKind::StrippedItem(k) => k,\n+            _ => &*self.kind,\n+        };\n         if let ItemKind::ModuleItem(Module { span, .. }) | ItemKind::ImplItem(Impl { span, .. }) =\n-            &*self.kind\n+            kind\n         {\n             *span\n         } else if self.is_fake() {"}]}