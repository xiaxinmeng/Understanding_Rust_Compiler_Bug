{"sha": "a20b8d751bb59becb19c9edbb5e3f3ffe31bbcf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyMGI4ZDc1MWJiNTliZWNiMTljOWVkYmI1ZTNmM2ZmZTMxYmJjZjM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-21T08:30:54Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-21T08:30:54Z"}, "message": "Propagate cargo.target to checkOnSave", "tree": {"sha": "55be1108d5e71b6bf9a233a32cfef907007d60b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55be1108d5e71b6bf9a233a32cfef907007d60b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a20b8d751bb59becb19c9edbb5e3f3ffe31bbcf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a20b8d751bb59becb19c9edbb5e3f3ffe31bbcf3", "html_url": "https://github.com/rust-lang/rust/commit/a20b8d751bb59becb19c9edbb5e3f3ffe31bbcf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a20b8d751bb59becb19c9edbb5e3f3ffe31bbcf3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3432afcbd2fa69fe7da02506123a32baba083f7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3432afcbd2fa69fe7da02506123a32baba083f7a", "html_url": "https://github.com/rust-lang/rust/commit/3432afcbd2fa69fe7da02506123a32baba083f7a"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "6e06adaa53a79000daed89a5b1b2b1439675716a", "filename": "crates/flycheck/src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a20b8d751bb59becb19c9edbb5e3f3ffe31bbcf3/crates%2Fflycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a20b8d751bb59becb19c9edbb5e3f3ffe31bbcf3/crates%2Fflycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fflycheck%2Fsrc%2Flib.rs?ref=a20b8d751bb59becb19c9edbb5e3f3ffe31bbcf3", "patch": "@@ -22,6 +22,7 @@ pub use cargo_metadata::diagnostic::{\n pub enum FlycheckConfig {\n     CargoCommand {\n         command: String,\n+        target_tripple: Option<String>,\n         all_targets: bool,\n         all_features: bool,\n         features: Vec<String>,\n@@ -178,6 +179,7 @@ impl FlycheckActor {\n         let mut cmd = match &self.config {\n             FlycheckConfig::CargoCommand {\n                 command,\n+                target_tripple,\n                 all_targets,\n                 all_features,\n                 extra_args,\n@@ -187,6 +189,10 @@ impl FlycheckActor {\n                 cmd.arg(command);\n                 cmd.args(&[\"--workspace\", \"--message-format=json\", \"--manifest-path\"])\n                     .arg(self.workspace_root.join(\"Cargo.toml\"));\n+\n+                if let Some(target) = target_tripple {\n+                    cmd.args(&[\"--target\", target.as_str()]);\n+                }\n                 if *all_targets {\n                     cmd.arg(\"--all-targets\");\n                 }"}, {"sha": "11086360b63b2d4a0bb0bc1eb74ed720b4d81633", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a20b8d751bb59becb19c9edbb5e3f3ffe31bbcf3/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a20b8d751bb59becb19c9edbb5e3f3ffe31bbcf3/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=a20b8d751bb59becb19c9edbb5e3f3ffe31bbcf3", "patch": "@@ -148,6 +148,7 @@ impl Config {\n             rustfmt: RustfmtConfig::Rustfmt { extra_args: Vec::new() },\n             flycheck: Some(FlycheckConfig::CargoCommand {\n                 command: \"check\".to_string(),\n+                target_tripple: None,\n                 all_targets: true,\n                 all_features: false,\n                 extra_args: Vec::new(),\n@@ -198,7 +199,7 @@ impl Config {\n             all_features: data.cargo_allFeatures,\n             features: data.cargo_features.clone(),\n             load_out_dirs_from_check: data.cargo_loadOutDirsFromCheck,\n-            target: data.cargo_target,\n+            target: data.cargo_target.clone(),\n         };\n \n         self.proc_macro_srv = if data.procMacro_enable {\n@@ -223,6 +224,7 @@ impl Config {\n                 }\n                 Some(_) | None => FlycheckConfig::CargoCommand {\n                     command: data.checkOnSave_command,\n+                    target_tripple: data.checkOnSave_target.or(data.cargo_target),\n                     all_targets: data.checkOnSave_allTargets,\n                     all_features: data.checkOnSave_allFeatures.unwrap_or(data.cargo_allFeatures),\n                     features: data.checkOnSave_features.unwrap_or(data.cargo_features),\n@@ -384,10 +386,11 @@ config_data! {\n         cargo_noDefaultFeatures: bool    = false,\n         cargo_target: Option<String>     = None,\n \n+        checkOnSave_enable: bool                         = false,\n         checkOnSave_allFeatures: Option<bool>            = None,\n         checkOnSave_allTargets: bool                     = true,\n         checkOnSave_command: String                      = \"check\".into(),\n-        checkOnSave_enable: bool                         = false,\n+        checkOnSave_target: Option<String>               = None,\n         checkOnSave_extraArgs: Vec<String>               = Vec::new(),\n         checkOnSave_features: Option<Vec<String>>        = None,\n         checkOnSave_overrideCommand: Option<Vec<String>> = None,"}]}