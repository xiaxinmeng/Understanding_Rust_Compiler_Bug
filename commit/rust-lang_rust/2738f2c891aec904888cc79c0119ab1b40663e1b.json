{"sha": "2738f2c891aec904888cc79c0119ab1b40663e1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3MzhmMmM4OTFhZWM5MDQ4ODhjYzc5YzAxMTlhYjFiNDA2NjNlMWI=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-12-31T08:14:09Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-12-31T08:16:06Z"}, "message": "Address comments", "tree": {"sha": "314af19883b0a2272fcb6091b8380f9492d56246", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/314af19883b0a2272fcb6091b8380f9492d56246"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2738f2c891aec904888cc79c0119ab1b40663e1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2738f2c891aec904888cc79c0119ab1b40663e1b", "html_url": "https://github.com/rust-lang/rust/commit/2738f2c891aec904888cc79c0119ab1b40663e1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2738f2c891aec904888cc79c0119ab1b40663e1b/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18d6b37f2c275075f5ad0c9e34b5bcfa95d33da5", "url": "https://api.github.com/repos/rust-lang/rust/commits/18d6b37f2c275075f5ad0c9e34b5bcfa95d33da5", "html_url": "https://github.com/rust-lang/rust/commit/18d6b37f2c275075f5ad0c9e34b5bcfa95d33da5"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "961638151a2a8758042692c8ab4e7bb3a8fe5047", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2738f2c891aec904888cc79c0119ab1b40663e1b/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2738f2c891aec904888cc79c0119ab1b40663e1b/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=2738f2c891aec904888cc79c0119ab1b40663e1b", "patch": "@@ -189,7 +189,7 @@ impl DepGraph {\n                 reads: SmallVec::new(),\n                 read_set: Default::default(),\n             })),\n-            |data, key, f, task| data.borrow_mut().complete_task(key, task, f))\n+            |data, key, fingerprint, task| data.borrow_mut().complete_task(key, task, fingerprint))\n     }\n \n     /// Creates a new dep-graph input with value `input`\n@@ -207,7 +207,9 @@ impl DepGraph {\n \n         self.with_task_impl(key, cx, input, true, identity_fn,\n             |_| OpenTask::Ignore,\n-            |data, key, f, _| data.borrow_mut().alloc_node(key, SmallVec::new(), f))\n+            |data, key, fingerprint, _| {\n+                data.borrow_mut().alloc_node(key, SmallVec::new(), fingerprint)\n+            })\n     }\n \n     fn with_task_impl<'gcx, C, A, R>(\n@@ -343,7 +345,9 @@ impl DepGraph {\n     {\n         self.with_task_impl(key, cx, arg, false, task,\n             |key| OpenTask::EvalAlways { node: key },\n-            |data, key, f, task| data.borrow_mut().complete_eval_always_task(key, task, f))\n+            |data, key, fingerprint, task| {\n+                data.borrow_mut().complete_eval_always_task(key, task, fingerprint)\n+            })\n     }\n \n     #[inline]"}, {"sha": "78acea9f588144c259f1f31bc8216af8ac531685", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2738f2c891aec904888cc79c0119ab1b40663e1b/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2738f2c891aec904888cc79c0119ab1b40663e1b/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=2738f2c891aec904888cc79c0119ab1b40663e1b", "patch": "@@ -47,13 +47,13 @@ pub(super) struct NodeCollector<'a, 'hir> {\n fn input_dep_node_and_hash<'a, I>(\n     dep_graph: &DepGraph,\n     hcx: &mut StableHashingContext<'a>,\n-    def_node: DepNode,\n+    dep_node: DepNode,\n     input: I,\n ) -> (DepNodeIndex, Fingerprint)\n where\n     I: HashStable<StableHashingContext<'a>>,\n {\n-    let dep_node_index = dep_graph.input_task(def_node, &mut *hcx, &input).1;\n+    let dep_node_index = dep_graph.input_task(dep_node, &mut *hcx, &input).1;\n \n     let hash = if dep_graph.is_fully_enabled() {\n         dep_graph.fingerprint_of(dep_node_index)\n@@ -66,7 +66,7 @@ where\n     (dep_node_index, hash)\n }\n \n-fn hir_dep_nodes<'a, I>(\n+fn alloc_hir_dep_nodes<'a, I>(\n     dep_graph: &DepGraph,\n     hcx: &mut StableHashingContext<'a>,\n     def_path_hash: DefPathHash,\n@@ -121,7 +121,7 @@ impl<'a, 'hir> NodeCollector<'a, 'hir> {\n                 body_ids: _,\n             } = *krate;\n \n-            hir_dep_nodes(\n+            alloc_hir_dep_nodes(\n                 dep_graph,\n                 &mut hcx,\n                 root_mod_def_path_hash,\n@@ -172,10 +172,8 @@ impl<'a, 'hir> NodeCollector<'a, 'hir> {\n         let node_hashes = self\n             .hir_body_nodes\n             .iter()\n-            .fold(Fingerprint::ZERO, |fingerprint, &(def_path_hash, hash)| {\n-                fingerprint.combine(\n-                    def_path_hash.0.combine(hash)\n-                )\n+            .fold(Fingerprint::ZERO, |combined_fingerprint, &(def_path_hash, fingerprint)| {\n+                combined_fingerprint.combine(def_path_hash.0.combine(fingerprint))\n             });\n \n         let mut upstream_crates: Vec<_> = cstore.crates_untracked().iter().map(|&cnum| {\n@@ -296,7 +294,7 @@ impl<'a, 'hir> NodeCollector<'a, 'hir> {\n \n         let def_path_hash = self.definitions.def_path_hash(dep_node_owner);\n \n-        let (signature_dep_index, full_dep_index) = hir_dep_nodes(\n+        let (signature_dep_index, full_dep_index) = alloc_hir_dep_nodes(\n             self.dep_graph,\n             &mut self.hcx,\n             def_path_hash,"}]}