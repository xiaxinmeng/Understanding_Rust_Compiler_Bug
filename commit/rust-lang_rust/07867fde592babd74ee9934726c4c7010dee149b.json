{"sha": "07867fde592babd74ee9934726c4c7010dee149b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ODY3ZmRlNTkyYmFiZDc0ZWU5OTM0NzI2YzRjNzAxMGRlZTE0OWI=", "commit": {"author": {"name": "JarredAllen", "email": "jarredallen73@gmail.com", "date": "2020-07-16T23:58:21Z"}, "committer": {"name": "JarredAllen", "email": "jarredallen73@gmail.com", "date": "2020-07-16T23:58:21Z"}, "message": "Clean up dogfood fallout", "tree": {"sha": "e4df27a7282f28cd57af991a64d15d80e04ddbd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4df27a7282f28cd57af991a64d15d80e04ddbd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07867fde592babd74ee9934726c4c7010dee149b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07867fde592babd74ee9934726c4c7010dee149b", "html_url": "https://github.com/rust-lang/rust/commit/07867fde592babd74ee9934726c4c7010dee149b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07867fde592babd74ee9934726c4c7010dee149b/comments", "author": {"login": "JarredAllen", "id": 19656507, "node_id": "MDQ6VXNlcjE5NjU2NTA3", "avatar_url": "https://avatars.githubusercontent.com/u/19656507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JarredAllen", "html_url": "https://github.com/JarredAllen", "followers_url": "https://api.github.com/users/JarredAllen/followers", "following_url": "https://api.github.com/users/JarredAllen/following{/other_user}", "gists_url": "https://api.github.com/users/JarredAllen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JarredAllen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JarredAllen/subscriptions", "organizations_url": "https://api.github.com/users/JarredAllen/orgs", "repos_url": "https://api.github.com/users/JarredAllen/repos", "events_url": "https://api.github.com/users/JarredAllen/events{/privacy}", "received_events_url": "https://api.github.com/users/JarredAllen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JarredAllen", "id": 19656507, "node_id": "MDQ6VXNlcjE5NjU2NTA3", "avatar_url": "https://avatars.githubusercontent.com/u/19656507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JarredAllen", "html_url": "https://github.com/JarredAllen", "followers_url": "https://api.github.com/users/JarredAllen/followers", "following_url": "https://api.github.com/users/JarredAllen/following{/other_user}", "gists_url": "https://api.github.com/users/JarredAllen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JarredAllen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JarredAllen/subscriptions", "organizations_url": "https://api.github.com/users/JarredAllen/orgs", "repos_url": "https://api.github.com/users/JarredAllen/repos", "events_url": "https://api.github.com/users/JarredAllen/events{/privacy}", "received_events_url": "https://api.github.com/users/JarredAllen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70a41a92815a79c88dd9a2e8aa02503a3b95eae8", "url": "https://api.github.com/repos/rust-lang/rust/commits/70a41a92815a79c88dd9a2e8aa02503a3b95eae8", "html_url": "https://github.com/rust-lang/rust/commit/70a41a92815a79c88dd9a2e8aa02503a3b95eae8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6379dffd22e372ac8305f8fce41fe8a50ad2e555", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07867fde592babd74ee9934726c4c7010dee149b/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07867fde592babd74ee9934726c4c7010dee149b/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=07867fde592babd74ee9934726c4c7010dee149b", "patch": "@@ -97,7 +97,7 @@ impl<'tcx> LateLintPass<'tcx> for PanicUnimplemented {\n             if let ExprKind::Block(ref block, _) = expr.kind;\n             if let Some(ref ex) = block.expr;\n             if let Some(params) = match_function_call(cx, ex, &paths::BEGIN_PANIC)\n-                .or(match_function_call(cx, ex, &paths::BEGIN_PANIC_FMT));\n+                .or_else(|| match_function_call(cx, ex, &paths::BEGIN_PANIC_FMT));\n             then {\n                 let span = get_outer_span(expr);\n                 if is_expn_of(expr.span, \"unimplemented\").is_some() {"}]}