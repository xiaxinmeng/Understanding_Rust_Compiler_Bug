{"sha": "c15b55ace6ae247fa1ca0001d8840c974644a817", "node_id": "C_kwDOAAsO6NoAKGMxNWI1NWFjZTZhZTI0N2ZhMWNhMDAwMWQ4ODQwYzk3NDY0NGE4MTc", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-11-10T18:25:54Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-11-12T14:22:48Z"}, "message": "Add Vec::retain_mut", "tree": {"sha": "ec8c153f86b30769583516c0998151ad4f0ea991", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec8c153f86b30769583516c0998151ad4f0ea991"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c15b55ace6ae247fa1ca0001d8840c974644a817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c15b55ace6ae247fa1ca0001d8840c974644a817", "html_url": "https://github.com/rust-lang/rust/commit/c15b55ace6ae247fa1ca0001d8840c974644a817", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c15b55ace6ae247fa1ca0001d8840c974644a817/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d34cb4efccb6ec47c2eb478e4cc900936dfe387", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d34cb4efccb6ec47c2eb478e4cc900936dfe387", "html_url": "https://github.com/rust-lang/rust/commit/1d34cb4efccb6ec47c2eb478e4cc900936dfe387"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "4989244b50e27e4638631fa36d2d80092023f95f", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c15b55ace6ae247fa1ca0001d8840c974644a817/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c15b55ace6ae247fa1ca0001d8840c974644a817/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=c15b55ace6ae247fa1ca0001d8840c974644a817", "patch": "@@ -1444,6 +1444,34 @@ impl<T, A: Allocator> Vec<T, A> {\n     pub fn retain<F>(&mut self, mut f: F)\n     where\n         F: FnMut(&T) -> bool,\n+    {\n+        self.retain_mut(|elem| f(elem));\n+    }\n+\n+    /// Retains only the elements specified by the predicate, passing a mutable reference to it.\n+    ///\n+    /// In other words, remove all elements `e` such that `f(&mut e)` returns `false`.\n+    /// This method operates in place, visiting each element exactly once in the\n+    /// original order, and preserves the order of the retained elements.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(vec_retain_mut)]\n+    ///\n+    /// let mut vec = vec![1, 2, 3, 4];\n+    /// vec.retain_mut(|x| if *x > 3 {\n+    ///     false\n+    /// } else {\n+    ///     *x += 1;\n+    ///     true\n+    /// });\n+    /// assert_eq!(vec, [2, 3, 4]);\n+    /// ```\n+    #[unstable(feature = \"vec_retain_mut\", issue = \"90829\")]\n+    pub fn retain_mut<F>(&mut self, mut f: F)\n+    where\n+        F: FnMut(&mut T) -> bool,\n     {\n         let original_len = self.len();\n         // Avoid double drop if the drop guard is not executed,\n@@ -1496,7 +1524,7 @@ impl<T, A: Allocator> Vec<T, A> {\n             g: &mut BackshiftOnDrop<'_, T, A>,\n         ) -> bool\n         where\n-            F: FnMut(&T) -> bool,\n+            F: FnMut(&mut T) -> bool,\n         {\n             // SAFETY: Unchecked element must be valid.\n             let cur = unsafe { &mut *g.v.as_mut_ptr().add(g.processed_len) };"}]}