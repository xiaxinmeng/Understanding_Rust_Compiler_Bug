{"sha": "f89abd63ca10662439692dd085a52b5757bc3259", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4OWFiZDYzY2ExMDY2MjQzOTY5MmRkMDg1YTUyYjU3NTdiYzMyNTk=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-02-27T18:47:49Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-03-05T20:43:44Z"}, "message": "uncomment whitelist", "tree": {"sha": "c28821343982276c4224c4cc51e90b41f5138c23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c28821343982276c4224c4cc51e90b41f5138c23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f89abd63ca10662439692dd085a52b5757bc3259", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f89abd63ca10662439692dd085a52b5757bc3259", "html_url": "https://github.com/rust-lang/rust/commit/f89abd63ca10662439692dd085a52b5757bc3259", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f89abd63ca10662439692dd085a52b5757bc3259/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3a374ac7d1c166e963981aff3b59c37eb7270a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3a374ac7d1c166e963981aff3b59c37eb7270a6", "html_url": "https://github.com/rust-lang/rust/commit/e3a374ac7d1c166e963981aff3b59c37eb7270a6"}], "stats": {"total": 110, "additions": 55, "deletions": 55}, "files": [{"sha": "cd089b70d779a133ad358bff561b3f389d14a2cd", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 55, "deletions": 55, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/f89abd63ca10662439692dd085a52b5757bc3259/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f89abd63ca10662439692dd085a52b5757bc3259/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=f89abd63ca10662439692dd085a52b5757bc3259", "patch": "@@ -53,61 +53,61 @@ static WHITELIST_CRATES: &'static [Crate] = &[Crate(\"rustc\"), Crate(\"rustc_trans\n \n /// Whitelist of crates rustc is allowed to depend on. Avoid adding to the list if possible.\n static WHITELIST: &'static [Crate] = &[\n-//    Crate(\"ar \"),\n-//    Crate(\"arena \"),\n-//    Crate(\"backtrace \"),\n-//    Crate(\"backtrace-sys \"),\n-//    Crate(\"bitflags \"),\n-//    Crate(\"build_helper \"),\n-//    Crate(\"byteorder \"),\n-//    Crate(\"cc \"),\n-//    Crate(\"cfg-if \"),\n-//    Crate(\"cmake \"),\n-//    Crate(\"filetime \"),\n-//    Crate(\"flate2 \"),\n-//    Crate(\"fmt_macros \"),\n-//    Crate(\"fuchsia-zircon \"),\n-//    Crate(\"fuchsia-zircon-sys \"),\n-//    Crate(\"graphviz \"),\n-//    Crate(\"jobserver \"),\n-//    Crate(\"kernel32-sys \"),\n-//    Crate(\"lazy_static \"),\n-//    Crate(\"libc \"),\n-//    Crate(\"log \"),\n-//    Crate(\"log_settings \"),\n-//    Crate(\"miniz-sys \"),\n-//    Crate(\"num_cpus \"),\n-//    Crate(\"owning_ref \"),\n-//    Crate(\"parking_lot \"),\n-//    Crate(\"parking_lot_core \"),\n-//    Crate(\"rand \"),\n-//    Crate(\"redox_syscall \"),\n-//    Crate(\"rustc \"),\n-//    Crate(\"rustc-demangle \"),\n-//    Crate(\"rustc_allocator \"),\n-//    Crate(\"rustc_apfloat \"),\n-//    Crate(\"rustc_back \"),\n-//    Crate(\"rustc_binaryen \"),\n-//    Crate(\"rustc_const_eval \"),\n-//    Crate(\"rustc_const_math \"),\n-//    Crate(\"rustc_cratesio_shim \"),\n-//    Crate(\"rustc_data_structures \"),\n-//    Crate(\"rustc_errors \"),\n-//    Crate(\"rustc_incremental \"),\n-//    Crate(\"rustc_llvm \"),\n-//    Crate(\"rustc_mir \"),\n-//    Crate(\"rustc_platform_intrinsics \"),\n-//    Crate(\"rustc_trans \"),\n-//    Crate(\"rustc_trans_utils \"),\n-//    Crate(\"serialize \"),\n-//    Crate(\"smallvec \"),\n-//    Crate(\"stable_deref_trait \"),\n-//    Crate(\"syntax \"),\n-//    Crate(\"syntax_pos \"),\n-//    Crate(\"tempdir \"),\n-//    Crate(\"unicode-width \"),\n-//    Crate(\"winapi \"),\n-//    Crate(\"winapi-build\"),\n+    Crate(\"ar \"),\n+    Crate(\"arena \"),\n+    Crate(\"backtrace \"),\n+    Crate(\"backtrace-sys \"),\n+    Crate(\"bitflags \"),\n+    Crate(\"build_helper \"),\n+    Crate(\"byteorder \"),\n+    Crate(\"cc \"),\n+    Crate(\"cfg-if \"),\n+    Crate(\"cmake \"),\n+    Crate(\"filetime \"),\n+    Crate(\"flate2 \"),\n+    Crate(\"fmt_macros \"),\n+    Crate(\"fuchsia-zircon \"),\n+    Crate(\"fuchsia-zircon-sys \"),\n+    Crate(\"graphviz \"),\n+    Crate(\"jobserver \"),\n+    Crate(\"kernel32-sys \"),\n+    Crate(\"lazy_static \"),\n+    Crate(\"libc \"),\n+    Crate(\"log \"),\n+    Crate(\"log_settings \"),\n+    Crate(\"miniz-sys \"),\n+    Crate(\"num_cpus \"),\n+    Crate(\"owning_ref \"),\n+    Crate(\"parking_lot \"),\n+    Crate(\"parking_lot_core \"),\n+    Crate(\"rand \"),\n+    Crate(\"redox_syscall \"),\n+    Crate(\"rustc \"),\n+    Crate(\"rustc-demangle \"),\n+    Crate(\"rustc_allocator \"),\n+    Crate(\"rustc_apfloat \"),\n+    Crate(\"rustc_back \"),\n+    Crate(\"rustc_binaryen \"),\n+    Crate(\"rustc_const_eval \"),\n+    Crate(\"rustc_const_math \"),\n+    Crate(\"rustc_cratesio_shim \"),\n+    Crate(\"rustc_data_structures \"),\n+    Crate(\"rustc_errors \"),\n+    Crate(\"rustc_incremental \"),\n+    Crate(\"rustc_llvm \"),\n+    Crate(\"rustc_mir \"),\n+    Crate(\"rustc_platform_intrinsics \"),\n+    Crate(\"rustc_trans \"),\n+    Crate(\"rustc_trans_utils \"),\n+    Crate(\"serialize \"),\n+    Crate(\"smallvec \"),\n+    Crate(\"stable_deref_trait \"),\n+    Crate(\"syntax \"),\n+    Crate(\"syntax_pos \"),\n+    Crate(\"tempdir \"),\n+    Crate(\"unicode-width \"),\n+    Crate(\"winapi \"),\n+    Crate(\"winapi-build\"),\n ];\n \n // Some types for Serde to deserialize the output of `cargo metadata` to..."}]}