{"sha": "f6caae52c1622a3c4f154eadaad615b577ceb6a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2Y2FhZTUyYzE2MjJhM2M0ZjE1NGVhZGFhZDYxNWI1NzdjZWI2YTg=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2021-01-17T13:05:02Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2021-02-07T17:08:45Z"}, "message": "Feature gate macro attributes in `#[derive]` output", "tree": {"sha": "f12c1b7f31102b6f27d96f8d7944e7a4a6e0bfec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f12c1b7f31102b6f27d96f8d7944e7a4a6e0bfec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6caae52c1622a3c4f154eadaad615b577ceb6a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6caae52c1622a3c4f154eadaad615b577ceb6a8", "html_url": "https://github.com/rust-lang/rust/commit/f6caae52c1622a3c4f154eadaad615b577ceb6a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6caae52c1622a3c4f154eadaad615b577ceb6a8/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbdbd30bf2cb0d48c8bbce83c2458592664dbb18", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbdbd30bf2cb0d48c8bbce83c2458592664dbb18", "html_url": "https://github.com/rust-lang/rust/commit/dbdbd30bf2cb0d48c8bbce83c2458592664dbb18"}], "stats": {"total": 153, "additions": 124, "deletions": 29}, "files": [{"sha": "2d0009c225c59e717b22154c6b2b2953b7057bd3", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6caae52c1622a3c4f154eadaad615b577ceb6a8/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6caae52c1622a3c4f154eadaad615b577ceb6a8/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=f6caae52c1622a3c4f154eadaad615b577ceb6a8", "patch": "@@ -634,6 +634,10 @@ declare_features! (\n \n     /// Lessens the requirements for structs to implement `Unsize`.\n     (active, relaxed_struct_unsize, \"1.51.0\", Some(1), None),\n+\n+    /// Allows macro attributes to observe output of `#[derive]`.\n+    (active, macro_attributes_in_derive_output, \"1.51.0\", Some(81119), None),\n+\n     // -------------------------------------------------------------------------\n     // feature-group-end: actual feature gates\n     // -------------------------------------------------------------------------"}, {"sha": "f7010ca94bd2c5b9b1c7e2c7f87269d8253c5e66", "filename": "compiler/rustc_resolve/src/macros.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f6caae52c1622a3c4f154eadaad615b577ceb6a8/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6caae52c1622a3c4f154eadaad615b577ceb6a8/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs?ref=f6caae52c1622a3c4f154eadaad615b577ceb6a8", "patch": "@@ -280,6 +280,36 @@ impl<'a> ResolverExpand for Resolver<'a> {\n         if let Res::Def(_, _) = res {\n             let normal_module_def_id = self.macro_def_scope(invoc_id).nearest_parent_mod;\n             self.definitions.add_parent_module_of_macro_def(invoc_id, normal_module_def_id);\n+\n+            // Gate macro attributes in `#[derive]` output.\n+            if !self.session.features_untracked().macro_attributes_in_derive_output\n+                && kind == MacroKind::Attr\n+                && ext.builtin_name != Some(sym::derive)\n+            {\n+                let mut expn_id = parent_scope.expansion;\n+                loop {\n+                    // Helper attr table is a quick way to determine whether the attr is `derive`.\n+                    if self.helper_attrs.contains_key(&expn_id) {\n+                        feature_err(\n+                            &self.session.parse_sess,\n+                            sym::macro_attributes_in_derive_output,\n+                            path.span,\n+                            \"macro attributes in `#[derive]` output are unstable\",\n+                        )\n+                        .emit();\n+                        break;\n+                    } else {\n+                        let expn_data = expn_id.expn_data();\n+                        match expn_data.kind {\n+                            ExpnKind::Root\n+                            | ExpnKind::Macro(MacroKind::Bang | MacroKind::Derive, _) => {\n+                                break;\n+                            }\n+                            _ => expn_id = expn_data.parent,\n+                        }\n+                    }\n+                }\n+            }\n         }\n \n         Ok(ext)"}, {"sha": "20e4f7262acb96ff9ac7f373947df8d721fd1443", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f6caae52c1622a3c4f154eadaad615b577ceb6a8/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6caae52c1622a3c4f154eadaad615b577ceb6a8/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=f6caae52c1622a3c4f154eadaad615b577ceb6a8", "patch": "@@ -679,6 +679,7 @@ symbols! {\n         loop_break_value,\n         lt,\n         macro_at_most_once_rep,\n+        macro_attributes_in_derive_output,\n         macro_escape,\n         macro_export,\n         macro_lifetime_matcher,"}, {"sha": "74751a23d7983ea9bd2d2d7644103cf47d457622", "filename": "src/test/ui/proc-macro/attribute-after-derive-feature-gate.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f6caae52c1622a3c4f154eadaad615b577ceb6a8/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6caae52c1622a3c4f154eadaad615b577ceb6a8/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive-feature-gate.rs?ref=f6caae52c1622a3c4f154eadaad615b577ceb6a8", "patch": "@@ -0,0 +1,28 @@\n+// gate-test-macro_attributes_in_derive_output\n+// aux-build: test-macros.rs\n+\n+#![feature(proc_macro_hygiene)]\n+#![feature(stmt_expr_attributes)]\n+\n+#[macro_use]\n+extern crate test_macros;\n+\n+#[derive(Empty)]\n+#[empty_attr] //~ ERROR macro attributes in `#[derive]` output are unstable\n+struct S1 {\n+    field: [u8; 10],\n+}\n+\n+#[derive(Empty)]\n+#[empty_helper]\n+#[empty_attr] //~ ERROR macro attributes in `#[derive]` output are unstable\n+struct S2 {\n+    field: [u8; 10],\n+}\n+\n+#[derive(Empty)]\n+struct S3 {\n+    field: [u8; #[identity_attr] 10], //~ ERROR macro attributes in `#[derive]` output are unstable\n+}\n+\n+fn main() {}"}, {"sha": "74cace628b94c94bfd76b84a6003bdbdab72d423", "filename": "src/test/ui/proc-macro/attribute-after-derive-feature-gate.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f6caae52c1622a3c4f154eadaad615b577ceb6a8/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6caae52c1622a3c4f154eadaad615b577ceb6a8/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive-feature-gate.stderr?ref=f6caae52c1622a3c4f154eadaad615b577ceb6a8", "patch": "@@ -0,0 +1,30 @@\n+error[E0658]: macro attributes in `#[derive]` output are unstable\n+  --> $DIR/attribute-after-derive-feature-gate.rs:11:3\n+   |\n+LL | #[empty_attr]\n+   |   ^^^^^^^^^^\n+   |\n+   = note: see issue #81119 <https://github.com/rust-lang/rust/issues/81119> for more information\n+   = help: add `#![feature(macro_attributes_in_derive_output)]` to the crate attributes to enable\n+\n+error[E0658]: macro attributes in `#[derive]` output are unstable\n+  --> $DIR/attribute-after-derive-feature-gate.rs:18:3\n+   |\n+LL | #[empty_attr]\n+   |   ^^^^^^^^^^\n+   |\n+   = note: see issue #81119 <https://github.com/rust-lang/rust/issues/81119> for more information\n+   = help: add `#![feature(macro_attributes_in_derive_output)]` to the crate attributes to enable\n+\n+error[E0658]: macro attributes in `#[derive]` output are unstable\n+  --> $DIR/attribute-after-derive-feature-gate.rs:25:19\n+   |\n+LL |     field: [u8; #[identity_attr] 10],\n+   |                   ^^^^^^^^^^^^^\n+   |\n+   = note: see issue #81119 <https://github.com/rust-lang/rust/issues/81119> for more information\n+   = help: add `#![feature(macro_attributes_in_derive_output)]` to the crate attributes to enable\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "ac3f28b6ef3ea119e50cfce971341cf175e6399a", "filename": "src/test/ui/proc-macro/attribute-after-derive.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6caae52c1622a3c4f154eadaad615b577ceb6a8/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6caae52c1622a3c4f154eadaad615b577ceb6a8/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive.rs?ref=f6caae52c1622a3c4f154eadaad615b577ceb6a8", "patch": "@@ -5,6 +5,8 @@\n // compile-flags: -Z span-debug\n // aux-build: test-macros.rs\n \n+#![feature(macro_attributes_in_derive_output)]\n+\n #![no_std] // Don't load unnecessary hygiene information from std\n extern crate std;\n "}, {"sha": "11f492353271a9bfe45de1a98096ca0cf568d7c0", "filename": "src/test/ui/proc-macro/attribute-after-derive.stdout", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/f6caae52c1622a3c4f154eadaad615b577ceb6a8/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/f6caae52c1622a3c4f154eadaad615b577ceb6a8/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-after-derive.stdout?ref=f6caae52c1622a3c4f154eadaad615b577ceb6a8", "patch": "@@ -3,146 +3,146 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: '#',\n         spacing: Alone,\n-        span: $DIR/attribute-after-derive.rs:15:1: 15:2 (#0),\n+        span: $DIR/attribute-after-derive.rs:17:1: 17:2 (#0),\n     },\n     Group {\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n                 ident: \"derive\",\n-                span: $DIR/attribute-after-derive.rs:15:3: 15:9 (#0),\n+                span: $DIR/attribute-after-derive.rs:17:3: 17:9 (#0),\n             },\n             Group {\n                 delimiter: Parenthesis,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"Print\",\n-                        span: $DIR/attribute-after-derive.rs:15:10: 15:15 (#0),\n+                        span: $DIR/attribute-after-derive.rs:17:10: 17:15 (#0),\n                     },\n                 ],\n-                span: $DIR/attribute-after-derive.rs:15:9: 15:16 (#0),\n+                span: $DIR/attribute-after-derive.rs:17:9: 17:16 (#0),\n             },\n         ],\n-        span: $DIR/attribute-after-derive.rs:15:2: 15:17 (#0),\n+        span: $DIR/attribute-after-derive.rs:17:2: 17:17 (#0),\n     },\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/attribute-after-derive.rs:16:1: 16:7 (#0),\n+        span: $DIR/attribute-after-derive.rs:18:1: 18:7 (#0),\n     },\n     Ident {\n         ident: \"AttributeDerive\",\n-        span: $DIR/attribute-after-derive.rs:16:8: 16:23 (#0),\n+        span: $DIR/attribute-after-derive.rs:18:8: 18:23 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [\n             Punct {\n                 ch: '#',\n                 spacing: Alone,\n-                span: $DIR/attribute-after-derive.rs:17:5: 17:6 (#0),\n+                span: $DIR/attribute-after-derive.rs:19:5: 19:6 (#0),\n             },\n             Group {\n                 delimiter: Bracket,\n                 stream: TokenStream [\n                     Ident {\n                         ident: \"cfg\",\n-                        span: $DIR/attribute-after-derive.rs:17:7: 17:10 (#0),\n+                        span: $DIR/attribute-after-derive.rs:19:7: 19:10 (#0),\n                     },\n                     Group {\n                         delimiter: Parenthesis,\n                         stream: TokenStream [\n                             Ident {\n                                 ident: \"FALSE\",\n-                                span: $DIR/attribute-after-derive.rs:17:11: 17:16 (#0),\n+                                span: $DIR/attribute-after-derive.rs:19:11: 19:16 (#0),\n                             },\n                         ],\n-                        span: $DIR/attribute-after-derive.rs:17:10: 17:17 (#0),\n+                        span: $DIR/attribute-after-derive.rs:19:10: 19:17 (#0),\n                     },\n                 ],\n-                span: $DIR/attribute-after-derive.rs:17:6: 17:18 (#0),\n+                span: $DIR/attribute-after-derive.rs:19:6: 19:18 (#0),\n             },\n             Ident {\n                 ident: \"field\",\n-                span: $DIR/attribute-after-derive.rs:18:5: 18:10 (#0),\n+                span: $DIR/attribute-after-derive.rs:20:5: 20:10 (#0),\n             },\n             Punct {\n                 ch: ':',\n                 spacing: Alone,\n-                span: $DIR/attribute-after-derive.rs:18:10: 18:11 (#0),\n+                span: $DIR/attribute-after-derive.rs:20:10: 20:11 (#0),\n             },\n             Ident {\n                 ident: \"u8\",\n-                span: $DIR/attribute-after-derive.rs:18:12: 18:14 (#0),\n+                span: $DIR/attribute-after-derive.rs:20:12: 20:14 (#0),\n             },\n             Punct {\n                 ch: ',',\n                 spacing: Alone,\n-                span: $DIR/attribute-after-derive.rs:18:14: 18:15 (#0),\n+                span: $DIR/attribute-after-derive.rs:20:14: 20:15 (#0),\n             },\n         ],\n-        span: $DIR/attribute-after-derive.rs:16:24: 19:2 (#0),\n+        span: $DIR/attribute-after-derive.rs:18:24: 21:2 (#0),\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): struct AttributeDerive { }\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/attribute-after-derive.rs:16:1: 19:2 (#0),\n+        span: $DIR/attribute-after-derive.rs:18:1: 21:2 (#0),\n     },\n     Ident {\n         ident: \"AttributeDerive\",\n-        span: $DIR/attribute-after-derive.rs:16:1: 19:2 (#0),\n+        span: $DIR/attribute-after-derive.rs:18:1: 21:2 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [],\n-        span: $DIR/attribute-after-derive.rs:16:1: 19:2 (#0),\n+        span: $DIR/attribute-after-derive.rs:18:1: 21:2 (#0),\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): struct DeriveAttribute { }\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/attribute-after-derive.rs:23:1: 26:2 (#0),\n+        span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n     },\n     Ident {\n         ident: \"DeriveAttribute\",\n-        span: $DIR/attribute-after-derive.rs:23:1: 26:2 (#0),\n+        span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [],\n-        span: $DIR/attribute-after-derive.rs:23:1: 26:2 (#0),\n+        span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): #[print_attr] struct DeriveAttribute { }\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Punct {\n         ch: '#',\n         spacing: Alone,\n-        span: $DIR/attribute-after-derive.rs:23:1: 26:2 (#0),\n+        span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n     },\n     Group {\n         delimiter: Bracket,\n         stream: TokenStream [\n             Ident {\n                 ident: \"print_attr\",\n-                span: $DIR/attribute-after-derive.rs:23:1: 26:2 (#0),\n+                span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n             },\n         ],\n-        span: $DIR/attribute-after-derive.rs:23:1: 26:2 (#0),\n+        span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n     },\n     Ident {\n         ident: \"struct\",\n-        span: $DIR/attribute-after-derive.rs:23:1: 26:2 (#0),\n+        span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n     },\n     Ident {\n         ident: \"DeriveAttribute\",\n-        span: $DIR/attribute-after-derive.rs:23:1: 26:2 (#0),\n+        span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n     },\n     Group {\n         delimiter: Brace,\n         stream: TokenStream [],\n-        span: $DIR/attribute-after-derive.rs:23:1: 26:2 (#0),\n+        span: $DIR/attribute-after-derive.rs:25:1: 28:2 (#0),\n     },\n ]"}]}