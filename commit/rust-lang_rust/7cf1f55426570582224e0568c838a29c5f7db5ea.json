{"sha": "7cf1f55426570582224e0568c838a29c5f7db5ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjZjFmNTU0MjY1NzA1ODIyMjRlMDU2OGM4MzhhMjljNWY3ZGI1ZWE=", "commit": {"author": {"name": "Graham Fawcett", "email": "graham.fawcett@gmail.com", "date": "2014-10-09T14:02:07Z"}, "committer": {"name": "Graham Fawcett", "email": "graham.fawcett@gmail.com", "date": "2014-10-09T14:02:07Z"}, "message": "In sieve example, end iteration sooner\n\nThe Sieve algorithm only requires checking all elements up to and including the square root of the maximum prime you're looking for. After that, the remaining elements are guaranteed to be prime.", "tree": {"sha": "ffe8b5d2dbea41b61b21caf4e9726a8e35b730f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffe8b5d2dbea41b61b21caf4e9726a8e35b730f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cf1f55426570582224e0568c838a29c5f7db5ea", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cf1f55426570582224e0568c838a29c5f7db5ea", "html_url": "https://github.com/rust-lang/rust/commit/7cf1f55426570582224e0568c838a29c5f7db5ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cf1f55426570582224e0568c838a29c5f7db5ea/comments", "author": {"login": "gmfawcett", "id": 49970, "node_id": "MDQ6VXNlcjQ5OTcw", "avatar_url": "https://avatars.githubusercontent.com/u/49970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmfawcett", "html_url": "https://github.com/gmfawcett", "followers_url": "https://api.github.com/users/gmfawcett/followers", "following_url": "https://api.github.com/users/gmfawcett/following{/other_user}", "gists_url": "https://api.github.com/users/gmfawcett/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmfawcett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmfawcett/subscriptions", "organizations_url": "https://api.github.com/users/gmfawcett/orgs", "repos_url": "https://api.github.com/users/gmfawcett/repos", "events_url": "https://api.github.com/users/gmfawcett/events{/privacy}", "received_events_url": "https://api.github.com/users/gmfawcett/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gmfawcett", "id": 49970, "node_id": "MDQ6VXNlcjQ5OTcw", "avatar_url": "https://avatars.githubusercontent.com/u/49970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmfawcett", "html_url": "https://github.com/gmfawcett", "followers_url": "https://api.github.com/users/gmfawcett/followers", "following_url": "https://api.github.com/users/gmfawcett/following{/other_user}", "gists_url": "https://api.github.com/users/gmfawcett/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmfawcett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmfawcett/subscriptions", "organizations_url": "https://api.github.com/users/gmfawcett/orgs", "repos_url": "https://api.github.com/users/gmfawcett/repos", "events_url": "https://api.github.com/users/gmfawcett/events{/privacy}", "received_events_url": "https://api.github.com/users/gmfawcett/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6cfb56a5cee28b08ae9d2dcbb2552497ce922c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6cfb56a5cee28b08ae9d2dcbb2552497ce922c1", "html_url": "https://github.com/rust-lang/rust/commit/e6cfb56a5cee28b08ae9d2dcbb2552497ce922c1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6da998b136f9e9abe101209b1aa9d51d60cb52aa", "filename": "src/libcollections/bitv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cf1f55426570582224e0568c838a29c5f7db5ea/src%2Flibcollections%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cf1f55426570582224e0568c838a29c5f7db5ea/src%2Flibcollections%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbitv.rs?ref=7cf1f55426570582224e0568c838a29c5f7db5ea", "patch": "@@ -33,7 +33,7 @@\n //!     bv.set(0, false);\n //!     bv.set(1, false);\n //!\n-//!     for i in range(2, max_prime) {\n+//!     for i in iter::range_inclusive(2, (max_prime as f64).sqrt() as uint) {\n //!         // if i is a prime\n //!         if bv[i] {\n //!             // Mark all multiples of i as non-prime (any multiples below i * i"}]}