{"sha": "f38b83b3609b060df5ab3d2a57e98020b8b29efb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzOGI4M2IzNjA5YjA2MGRmNWFiM2QyYTU3ZTk4MDIwYjhiMjllZmI=", "commit": {"author": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-02-28T12:31:55Z"}, "committer": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-02-28T12:31:55Z"}, "message": "Avoid unnecessary mutability for UnusedResults.", "tree": {"sha": "72fcdb97c6fcf1427c1240e234de570b16836a18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72fcdb97c6fcf1427c1240e234de570b16836a18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f38b83b3609b060df5ab3d2a57e98020b8b29efb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f38b83b3609b060df5ab3d2a57e98020b8b29efb", "html_url": "https://github.com/rust-lang/rust/commit/f38b83b3609b060df5ab3d2a57e98020b8b29efb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f38b83b3609b060df5ab3d2a57e98020b8b29efb/comments", "author": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a37f7f07ca6bc3e3f19c6bb33b25bbc35f561a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a37f7f07ca6bc3e3f19c6bb33b25bbc35f561a2", "html_url": "https://github.com/rust-lang/rust/commit/2a37f7f07ca6bc3e3f19c6bb33b25bbc35f561a2"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "6252c372009b253e001c1fc93319bc7ef9d6cfce", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f38b83b3609b060df5ab3d2a57e98020b8b29efb/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f38b83b3609b060df5ab3d2a57e98020b8b29efb/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=f38b83b3609b060df5ab3d2a57e98020b8b29efb", "patch": "@@ -741,23 +741,24 @@ impl LintPass for UnusedResults {\n         }\n \n         let t = ty::expr_ty(cx.tcx, expr);\n-        let mut warned = false;\n-        match t.sty {\n+        let warned = match t.sty {\n             ty::ty_tup(ref tys) if tys.is_empty() => return,\n             ty::ty_bool => return,\n             ty::ty_struct(did, _) |\n             ty::ty_enum(did, _) => {\n                 if ast_util::is_local(did) {\n                     if let ast_map::NodeItem(it) = cx.tcx.map.get(did.node) {\n-                        warned |= check_must_use(cx, &it.attrs, s.span);\n+                        check_must_use(cx, &it.attrs, s.span)\n+                    } else {\n+                        false\n                     }\n                 } else {\n                     let attrs = csearch::get_item_attrs(&cx.sess().cstore, did);\n-                    warned |= check_must_use(cx, &attrs[..], s.span);\n+                    check_must_use(cx, &attrs[..], s.span)\n                 }\n             }\n-            _ => {}\n-        }\n+            _ => false,\n+        };\n         if !warned {\n             cx.span_lint(UNUSED_RESULTS, s.span, \"unused result\");\n         }"}]}