{"sha": "74e92566d5cbe670a74a4ce340973716760479db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ZTkyNTY2ZDVjYmU2NzBhNzRhNGNlMzQwOTczNzE2NzYwNDc5ZGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-14T05:59:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-14T05:59:26Z"}, "message": "Auto merge of #5453 - rabisg0:fix/redundant_clone, r=phansch\n\nFixes #5405: redundant clone false positive with arrays\n\nCheck whether slice elements implement Copy before suggesting to drop\nthe clone method\n\nchangelog: add a check for slice indexing on redundant_clone lint", "tree": {"sha": "72e3a57192c874002f121eee27f4c8e69e9f4e91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72e3a57192c874002f121eee27f4c8e69e9f4e91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74e92566d5cbe670a74a4ce340973716760479db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74e92566d5cbe670a74a4ce340973716760479db", "html_url": "https://github.com/rust-lang/rust/commit/74e92566d5cbe670a74a4ce340973716760479db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74e92566d5cbe670a74a4ce340973716760479db/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa08c39b117ddaa62a19421be726f341bb95a1f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa08c39b117ddaa62a19421be726f341bb95a1f6", "html_url": "https://github.com/rust-lang/rust/commit/aa08c39b117ddaa62a19421be726f341bb95a1f6"}, {"sha": "ab3946d7e9d83e8d177073f27d8ec704b399d687", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab3946d7e9d83e8d177073f27d8ec704b399d687", "html_url": "https://github.com/rust-lang/rust/commit/ab3946d7e9d83e8d177073f27d8ec704b399d687"}], "stats": {"total": 47, "additions": 36, "deletions": 11}, "files": [{"sha": "aedbafd408b0ef091123988216520113ce2e37d1", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/74e92566d5cbe670a74a4ce340973716760479db/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e92566d5cbe670a74a4ce340973716760479db/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=74e92566d5cbe670a74a4ce340973716760479db", "patch": "@@ -341,16 +341,21 @@ fn base_local_and_movability<'tcx>(\n     let mut deref = false;\n     // Accessing a field of an ADT that has `Drop`. Moving the field out will cause E0509.\n     let mut field = false;\n+    // If projection is a slice index then clone can be removed only if the\n+    // underlying type implements Copy\n+    let mut slice = false;\n \n     let PlaceRef { local, mut projection } = place.as_ref();\n     while let [base @ .., elem] = projection {\n         projection = base;\n         deref |= matches!(elem, mir::ProjectionElem::Deref);\n         field |= matches!(elem, mir::ProjectionElem::Field(..))\n             && has_drop(cx, mir::Place::ty_from(local, projection, &mir.local_decls, cx.tcx).ty);\n+        slice |= matches!(elem, mir::ProjectionElem::Index(..))\n+            && !is_copy(cx, mir::Place::ty_from(local, projection, &mir.local_decls, cx.tcx).ty);\n     }\n \n-    Some((local, deref || field))\n+    Some((local, deref || field || slice))\n }\n \n struct LocalUseVisitor {"}, {"sha": "764c10a6d398feaa87957ed4bdbe7f353f7fb657", "filename": "tests/ui/redundant_clone.fixed", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/74e92566d5cbe670a74a4ce340973716760479db/tests%2Fui%2Fredundant_clone.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/74e92566d5cbe670a74a4ce340973716760479db/tests%2Fui%2Fredundant_clone.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.fixed?ref=74e92566d5cbe670a74a4ce340973716760479db", "patch": "@@ -51,6 +51,7 @@ fn main() {\n     cannot_move_from_type_with_drop();\n     borrower_propagation();\n     not_consumed();\n+    issue_5405();\n }\n \n #[derive(Clone)]\n@@ -160,3 +161,12 @@ fn not_consumed() {\n         println!(\"{}\", x);\n     }\n }\n+\n+#[allow(clippy::clone_on_copy)]\n+fn issue_5405() {\n+    let a: [String; 1] = [String::from(\"foo\")];\n+    let _b: String = a[0].clone();\n+\n+    let c: [usize; 2] = [2, 3];\n+    let _d: usize = c[1].clone();\n+}"}, {"sha": "839747b131d77da22c7d559d0133f7006bd2d246", "filename": "tests/ui/redundant_clone.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/74e92566d5cbe670a74a4ce340973716760479db/tests%2Fui%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e92566d5cbe670a74a4ce340973716760479db/tests%2Fui%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.rs?ref=74e92566d5cbe670a74a4ce340973716760479db", "patch": "@@ -51,6 +51,7 @@ fn main() {\n     cannot_move_from_type_with_drop();\n     borrower_propagation();\n     not_consumed();\n+    issue_5405();\n }\n \n #[derive(Clone)]\n@@ -160,3 +161,12 @@ fn not_consumed() {\n         println!(\"{}\", x);\n     }\n }\n+\n+#[allow(clippy::clone_on_copy)]\n+fn issue_5405() {\n+    let a: [String; 1] = [String::from(\"foo\")];\n+    let _b: String = a[0].clone();\n+\n+    let c: [usize; 2] = [2, 3];\n+    let _d: usize = c[1].clone();\n+}"}, {"sha": "eced198283ce8f5db36ef3fa7c4c2f93d38ec859", "filename": "tests/ui/redundant_clone.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/74e92566d5cbe670a74a4ce340973716760479db/tests%2Fui%2Fredundant_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/74e92566d5cbe670a74a4ce340973716760479db/tests%2Fui%2Fredundant_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_clone.stderr?ref=74e92566d5cbe670a74a4ce340973716760479db", "patch": "@@ -108,61 +108,61 @@ LL |     let _t = tup.0.clone();\n    |              ^^^^^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:60:22\n+  --> $DIR/redundant_clone.rs:61:22\n    |\n LL |         (a.clone(), a.clone())\n    |                      ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:60:21\n+  --> $DIR/redundant_clone.rs:61:21\n    |\n LL |         (a.clone(), a.clone())\n    |                     ^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:120:15\n+  --> $DIR/redundant_clone.rs:121:15\n    |\n LL |     let _s = s.clone();\n    |               ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:120:14\n+  --> $DIR/redundant_clone.rs:121:14\n    |\n LL |     let _s = s.clone();\n    |              ^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:121:15\n+  --> $DIR/redundant_clone.rs:122:15\n    |\n LL |     let _t = t.clone();\n    |               ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:121:14\n+  --> $DIR/redundant_clone.rs:122:14\n    |\n LL |     let _t = t.clone();\n    |              ^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:131:19\n+  --> $DIR/redundant_clone.rs:132:19\n    |\n LL |         let _f = f.clone();\n    |                   ^^^^^^^^ help: remove this\n    |\n note: this value is dropped without further use\n-  --> $DIR/redundant_clone.rs:131:18\n+  --> $DIR/redundant_clone.rs:132:18\n    |\n LL |         let _f = f.clone();\n    |                  ^\n \n error: redundant clone\n-  --> $DIR/redundant_clone.rs:143:14\n+  --> $DIR/redundant_clone.rs:144:14\n    |\n LL |     let y = x.clone().join(\"matthias\");\n    |              ^^^^^^^^ help: remove this\n    |\n note: cloned value is neither consumed nor mutated\n-  --> $DIR/redundant_clone.rs:143:13\n+  --> $DIR/redundant_clone.rs:144:13\n    |\n LL |     let y = x.clone().join(\"matthias\");\n    |             ^^^^^^^^^"}]}