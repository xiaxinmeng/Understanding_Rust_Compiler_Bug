{"sha": "8d0d7521d65eff290183e9d19858c6ca8779fe01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMGQ3NTIxZDY1ZWZmMjkwMTgzZTlkMTk4NThjNmNhODc3OWZlMDE=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-04T15:53:03Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-05T22:22:16Z"}, "message": "typeck: remove dead code", "tree": {"sha": "343a2166902644c9461dbb3e091d4723e5b83d45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/343a2166902644c9461dbb3e091d4723e5b83d45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d0d7521d65eff290183e9d19858c6ca8779fe01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d0d7521d65eff290183e9d19858c6ca8779fe01", "html_url": "https://github.com/rust-lang/rust/commit/8d0d7521d65eff290183e9d19858c6ca8779fe01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d0d7521d65eff290183e9d19858c6ca8779fe01/comments", "author": null, "committer": null, "parents": [{"sha": "643826150b502eddcc9b736e4320cb76ccedff8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/643826150b502eddcc9b736e4320cb76ccedff8a", "html_url": "https://github.com/rust-lang/rust/commit/643826150b502eddcc9b736e4320cb76ccedff8a"}], "stats": {"total": 26, "additions": 3, "deletions": 23}, "files": [{"sha": "7671ad36971ac768c4d4ecaa48e8bc2d936cc88f", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8d0d7521d65eff290183e9d19858c6ca8779fe01/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d0d7521d65eff290183e9d19858c6ca8779fe01/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=8d0d7521d65eff290183e9d19858c6ca8779fe01", "patch": "@@ -13,20 +13,18 @@\n use super::{check_fn, Expectation, FnCtxt};\n \n use astconv;\n-use middle::infer;\n use middle::region::CodeExtent;\n use middle::subst;\n use middle::ty::{self, ToPolyTraitRef, Ty};\n use rscope::RegionScope;\n use syntax::abi;\n use syntax::ast;\n-use syntax::ast::CaptureClause::*;\n use syntax::ast_util;\n use util::ppaux::Repr;\n \n pub fn check_expr_closure<'a,'tcx>(fcx: &FnCtxt<'a,'tcx>,\n                                    expr: &ast::Expr,\n-                                   capture: ast::CaptureClause,\n+                                   _capture: ast::CaptureClause,\n                                    opt_kind: Option<ast::UnboxedClosureKind>,\n                                    decl: &ast::FnDecl,\n                                    body: &ast::Block,"}, {"sha": "5a8263263808ee1eab07c18217294bfbac925867", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8d0d7521d65eff290183e9d19858c6ca8779fe01/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d0d7521d65eff290183e9d19858c6ca8779fe01/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=8d0d7521d65eff290183e9d19858c6ca8779fe01", "patch": "@@ -856,10 +856,8 @@ fn check_expr_fn_block(rcx: &mut Rcx,\n \n fn constrain_callee(rcx: &mut Rcx,\n                     callee_id: ast::NodeId,\n-                    call_expr: &ast::Expr,\n-                    callee_expr: &ast::Expr) {\n-    let call_region = ty::ReScope(CodeExtent::from_node_id(call_expr.id));\n-\n+                    _call_expr: &ast::Expr,\n+                    _callee_expr: &ast::Expr) {\n     let callee_ty = rcx.resolve_node_type(callee_id);\n     match callee_ty.sty {\n         ty::ty_bare_fn(..) => { }"}, {"sha": "7a9961e750c217fb30deed5c03beea4257fa5263", "filename": "src/librustc_typeck/check/regionmanip.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8d0d7521d65eff290183e9d19858c6ca8779fe01/src%2Flibrustc_typeck%2Fcheck%2Fregionmanip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d0d7521d65eff290183e9d19858c6ca8779fe01/src%2Flibrustc_typeck%2Fcheck%2Fregionmanip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionmanip.rs?ref=8d0d7521d65eff290183e9d19858c6ca8779fe01", "patch": "@@ -319,22 +319,6 @@ impl<'a, 'tcx> Wf<'a, 'tcx> {\n         }\n     }\n \n-    fn accumulate_from_closure_ty(&mut self,\n-                                  ty: Ty<'tcx>,\n-                                  c: &ty::ClosureTy<'tcx>)\n-    {\n-        match c.store {\n-            ty::RegionTraitStore(r_b, _) => {\n-                self.push_region_constraint_from_top(r_b);\n-            }\n-            ty::UniqTraitStore => { }\n-        }\n-\n-        let required_region_bounds =\n-            ty::object_region_bounds(self.tcx, None, c.bounds.builtin_bounds);\n-        self.accumulate_from_object_ty(ty, c.bounds.region_bound, required_region_bounds);\n-    }\n-\n     fn accumulate_from_object_ty(&mut self,\n                                  ty: Ty<'tcx>,\n                                  region_bound: ty::Region,"}]}