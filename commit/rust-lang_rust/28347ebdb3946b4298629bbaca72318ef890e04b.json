{"sha": "28347ebdb3946b4298629bbaca72318ef890e04b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MzQ3ZWJkYjM5NDZiNDI5ODYyOWJiYWNhNzIzMThlZjg5MGUwNGI=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-02-12T13:08:14Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-02-12T13:08:14Z"}, "message": "Drop an unnecessary intermediate variable\n\nNeither does it shorten the code nor does it provide a helpful name.", "tree": {"sha": "e20940a1ce1be32d43b267929677ad9caad0e5fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e20940a1ce1be32d43b267929677ad9caad0e5fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28347ebdb3946b4298629bbaca72318ef890e04b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28347ebdb3946b4298629bbaca72318ef890e04b", "html_url": "https://github.com/rust-lang/rust/commit/28347ebdb3946b4298629bbaca72318ef890e04b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28347ebdb3946b4298629bbaca72318ef890e04b/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9920ef7749d11fc71cc32ca4ba055bcfeaab945", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9920ef7749d11fc71cc32ca4ba055bcfeaab945", "html_url": "https://github.com/rust-lang/rust/commit/e9920ef7749d11fc71cc32ca4ba055bcfeaab945"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "411f3bbbf630f76aea6019aa3a7d69474983e411", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/28347ebdb3946b4298629bbaca72318ef890e04b/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28347ebdb3946b4298629bbaca72318ef890e04b/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=28347ebdb3946b4298629bbaca72318ef890e04b", "patch": "@@ -260,8 +260,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         // local crate or were inlined into it along with some function.\n         // This may change if abstract return types of some sort are\n         // implemented.\n-        let tcx = self.tcx;\n-\n         self.typeck_results\n             .borrow()\n             .closure_min_captures_flattened(closure_id)\n@@ -276,7 +274,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n                 match capture {\n                     ty::UpvarCapture::ByValue(_) => upvar_ty,\n-                    ty::UpvarCapture::ByRef(borrow) => tcx.mk_ref(\n+                    ty::UpvarCapture::ByRef(borrow) => self.tcx.mk_ref(\n                         borrow.region,\n                         ty::TypeAndMut { ty: upvar_ty, mutbl: borrow.kind.to_mutbl_lossy() },\n                     ),"}]}