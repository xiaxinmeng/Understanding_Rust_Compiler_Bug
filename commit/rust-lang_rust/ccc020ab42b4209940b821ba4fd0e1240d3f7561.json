{"sha": "ccc020ab42b4209940b821ba4fd0e1240d3f7561", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYzAyMGFiNDJiNDIwOTk0MGI4MjFiYTRmZDBlMTI0MGQzZjc1NjE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-10-02T22:31:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-02T22:31:10Z"}, "message": "Rollup merge of #77182 - GuillaumeGomez:missing-examples-fd-traits, r=pickfire\n\nAdd missing examples for Fd traits\n\nNot sure what happened here... This is a reopening of #77142\n\nr? @Dylan-DPC", "tree": {"sha": "35df3aa67bf19c6bf67b1d4a696b5eb749d72012", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35df3aa67bf19c6bf67b1d4a696b5eb749d72012"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccc020ab42b4209940b821ba4fd0e1240d3f7561", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfd6ovCRBK7hj4Ov3rIwAAdHIIACnZPOU6XGJbKmKWy2YowyIH\n6pHmxhrnkMEGaEZrbcjffiwMU9nb4ikXDDcZ6x7R3OfuNELkRx0ObXSWXXrSAGdp\nXjd0DiMzNOc+Dh02Fy9O6xUJZcmiZvxSkWiq4apRDUjWYIpPs1/sz+VIclR+TiKH\nxx8Hr0HJR1n2jknGa4JagcezWOxunx6Z3QEXGyV5U0RlSA2tT4Gx716O810zqv/c\nNSmSA5dvv1gctuuwQd5lp6Mleit0wf/kM4x1RSPc3M+BwAhYtM0KLuF0H9PIN1YC\nbuhtzqQ2pw66Sxk03UlrwRca+dmEMTAd9cCAlIpHEZzB9Ld2jFGS6GNBHvKDbj8=\n=ypwK\n-----END PGP SIGNATURE-----\n", "payload": "tree 35df3aa67bf19c6bf67b1d4a696b5eb749d72012\nparent 389f7cf7d6c333b490e208bcbda3406b9e0ef437\nparent d6b838b93a7e0acd51e0cc9bbb3415a517b7b3cd\nauthor Jonas Schievink <jonasschievink@gmail.com> 1601677870 +0200\ncommitter GitHub <noreply@github.com> 1601677870 +0200\n\nRollup merge of #77182 - GuillaumeGomez:missing-examples-fd-traits, r=pickfire\n\nAdd missing examples for Fd traits\n\nNot sure what happened here... This is a reopening of #77142\n\nr? @Dylan-DPC\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccc020ab42b4209940b821ba4fd0e1240d3f7561", "html_url": "https://github.com/rust-lang/rust/commit/ccc020ab42b4209940b821ba4fd0e1240d3f7561", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccc020ab42b4209940b821ba4fd0e1240d3f7561/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "389f7cf7d6c333b490e208bcbda3406b9e0ef437", "url": "https://api.github.com/repos/rust-lang/rust/commits/389f7cf7d6c333b490e208bcbda3406b9e0ef437", "html_url": "https://github.com/rust-lang/rust/commit/389f7cf7d6c333b490e208bcbda3406b9e0ef437"}, {"sha": "d6b838b93a7e0acd51e0cc9bbb3415a517b7b3cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6b838b93a7e0acd51e0cc9bbb3415a517b7b3cd", "html_url": "https://github.com/rust-lang/rust/commit/d6b838b93a7e0acd51e0cc9bbb3415a517b7b3cd"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "ef3c689bd392144b4e03a6b9bb14b93bd5b05dc6", "filename": "library/std/src/sys/unix/ext/io.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/ccc020ab42b4209940b821ba4fd0e1240d3f7561/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccc020ab42b4209940b821ba4fd0e1240d3f7561/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fio.rs?ref=ccc020ab42b4209940b821ba4fd0e1240d3f7561", "patch": "@@ -25,6 +25,19 @@ pub trait AsRawFd {\n     /// This method does **not** pass ownership of the raw file descriptor\n     /// to the caller. The descriptor is only guaranteed to be valid while\n     /// the original object has not yet been destroyed.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```no_run\n+    /// use std::fs::File;\n+    /// # use std::io;\n+    /// use std::os::unix::io::{AsRawFd, RawFd};\n+    ///\n+    /// let mut f = File::open(\"foo.txt\")?;\n+    /// // Note that `raw_fd` is only valid as long as `f` exists.\n+    /// let raw_fd: RawFd = f.as_raw_fd();\n+    /// # Ok::<(), io::Error>(())\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn as_raw_fd(&self) -> RawFd;\n }\n@@ -45,6 +58,21 @@ pub trait FromRawFd {\n     /// descriptor they are wrapping. Usage of this function could\n     /// accidentally allow violating this contract which can cause memory\n     /// unsafety in code that relies on it being true.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```no_run\n+    /// use std::fs::File;\n+    /// # use std::io;\n+    /// use std::os::unix::io::{FromRawFd, IntoRawFd, RawFd};\n+    ///\n+    /// let f = File::open(\"foo.txt\")?;\n+    /// let raw_fd: RawFd = f.into_raw_fd();\n+    /// // SAFETY: no other functions should call `from_raw_fd`, so there\n+    /// // is only one owner for the file descriptor.\n+    /// let f = unsafe { File::from_raw_fd(raw_fd) };\n+    /// # Ok::<(), io::Error>(())\n+    /// ```\n     #[stable(feature = \"from_raw_os\", since = \"1.1.0\")]\n     unsafe fn from_raw_fd(fd: RawFd) -> Self;\n }\n@@ -58,6 +86,18 @@ pub trait IntoRawFd {\n     /// This function **transfers ownership** of the underlying file descriptor\n     /// to the caller. Callers are then the unique owners of the file descriptor\n     /// and must close the descriptor once it's no longer needed.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```no_run\n+    /// use std::fs::File;\n+    /// # use std::io;\n+    /// use std::os::unix::io::{IntoRawFd, RawFd};\n+    ///\n+    /// let f = File::open(\"foo.txt\")?;\n+    /// let raw_fd: RawFd = f.into_raw_fd();\n+    /// # Ok::<(), io::Error>(())\n+    /// ```\n     #[stable(feature = \"into_raw_os\", since = \"1.4.0\")]\n     fn into_raw_fd(self) -> RawFd;\n }"}]}