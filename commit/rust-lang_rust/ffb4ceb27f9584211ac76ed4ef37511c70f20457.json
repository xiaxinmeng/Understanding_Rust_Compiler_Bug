{"sha": "ffb4ceb27f9584211ac76ed4ef37511c70f20457", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmYjRjZWIyN2Y5NTg0MjExYWM3NmVkNGVmMzc1MTFjNzBmMjA0NTc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-28T09:49:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-28T09:49:04Z"}, "message": "Rollup merge of #61242 - spastorino:dest-needs-borrow-iterate, r=oli-obk\n\nMake dest_needs_borrow iterate instead of recurse\n\nr? @oli-obk", "tree": {"sha": "241145ba93592ad202a2d806629e8cdfd9a5075e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/241145ba93592ad202a2d806629e8cdfd9a5075e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffb4ceb27f9584211ac76ed4ef37511c70f20457", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc7QQQCRBK7hj4Ov3rIwAAdHIIAKjJ0lqN+tt1Lp1xcsNcaN4n\nlQZI3eTIS+p4Jq3sH7wgdP4VZ644oPZfBWp69J1MsHc1Uw6JypDNiLPMPZAjGsZ6\nAv2PxTLeweUb2+FsXxwWL2OUTYKQOGUJAF6yhUZWiKEbSaCwgSDG6SvHLrnH8aov\nOGAwbHFd4i1DQh8+9x0s52hob0ECond6RGwQB79nbGedrcJspOHKEgev2dll3HnO\nY9Q4hu/6Ea2D/AKtTFcN8YA0RANBOe5xgtaNj5P2cOVuOTzlsEBldvt5IzoRAQ9/\nd8w636P6gPXXEOXBpzfCnNlc/PmFkO01/yfYwC1KcCFI0Lsg48GMzqTcMeNqKmo=\n=jSq+\n-----END PGP SIGNATURE-----\n", "payload": "tree 241145ba93592ad202a2d806629e8cdfd9a5075e\nparent c33b3492e7877a88ffbefb6fa9dbdfc7c8729abf\nparent b922e8a97d12e2b10d918ee54ecd0bc99df050f2\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1559036944 +0200\ncommitter GitHub <noreply@github.com> 1559036944 +0200\n\nRollup merge of #61242 - spastorino:dest-needs-borrow-iterate, r=oli-obk\n\nMake dest_needs_borrow iterate instead of recurse\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffb4ceb27f9584211ac76ed4ef37511c70f20457", "html_url": "https://github.com/rust-lang/rust/commit/ffb4ceb27f9584211ac76ed4ef37511c70f20457", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffb4ceb27f9584211ac76ed4ef37511c70f20457/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c33b3492e7877a88ffbefb6fa9dbdfc7c8729abf", "url": "https://api.github.com/repos/rust-lang/rust/commits/c33b3492e7877a88ffbefb6fa9dbdfc7c8729abf", "html_url": "https://github.com/rust-lang/rust/commit/c33b3492e7877a88ffbefb6fa9dbdfc7c8729abf"}, {"sha": "b922e8a97d12e2b10d918ee54ecd0bc99df050f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b922e8a97d12e2b10d918ee54ecd0bc99df050f2", "html_url": "https://github.com/rust-lang/rust/commit/b922e8a97d12e2b10d918ee54ecd0bc99df050f2"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "782af3024ad2c448b1fb6f776e199decad28cdf1", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ffb4ceb27f9584211ac76ed4ef37511c70f20457/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffb4ceb27f9584211ac76ed4ef37511c70f20457/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=ffb4ceb27f9584211ac76ed4ef37511c70f20457", "patch": "@@ -440,19 +440,22 @@ impl<'a, 'tcx> Inliner<'a, 'tcx> {\n                 // writes to `i`. To prevent this we need to create a temporary\n                 // borrow of the place and pass the destination as `*temp` instead.\n                 fn dest_needs_borrow(place: &Place<'_>) -> bool {\n-                    match *place {\n-                        Place::Projection(ref p) => {\n-                            match p.elem {\n+                    place.iterate(|place_base, place_projection| {\n+                        for proj in place_projection {\n+                            match proj.elem {\n                                 ProjectionElem::Deref |\n-                                ProjectionElem::Index(_) => true,\n-                                _ => dest_needs_borrow(&p.base)\n+                                ProjectionElem::Index(_) => return true,\n+                                _ => {}\n                             }\n                         }\n-                        // Static variables need a borrow because the callee\n-                        // might modify the same static.\n-                        Place::Base(PlaceBase::Static(_)) => true,\n-                        _ => false\n-                    }\n+\n+                        match place_base {\n+                            // Static variables need a borrow because the callee\n+                            // might modify the same static.\n+                            PlaceBase::Static(_) => true,\n+                            _ => false\n+                        }\n+                    })\n                 }\n \n                 let dest = if dest_needs_borrow(&destination.0) {"}]}