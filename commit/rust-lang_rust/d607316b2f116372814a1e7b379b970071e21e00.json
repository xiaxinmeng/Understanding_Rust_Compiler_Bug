{"sha": "d607316b2f116372814a1e7b379b970071e21e00", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2MDczMTZiMmYxMTYzNzI4MTRhMWU3YjM3OWI5NzAwNzFlMjFlMDA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-20T20:48:22Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-20T20:48:22Z"}, "message": "rustc: Pass actual tydescs to upcall_malloc", "tree": {"sha": "b1cb0f40cddf285fb8cedc068f6efb6929219ac6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1cb0f40cddf285fb8cedc068f6efb6929219ac6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d607316b2f116372814a1e7b379b970071e21e00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d607316b2f116372814a1e7b379b970071e21e00", "html_url": "https://github.com/rust-lang/rust/commit/d607316b2f116372814a1e7b379b970071e21e00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d607316b2f116372814a1e7b379b970071e21e00/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78147452b8c589edfae72ab6a17e71c25adc9f8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/78147452b8c589edfae72ab6a17e71c25adc9f8f", "html_url": "https://github.com/rust-lang/rust/commit/78147452b8c589edfae72ab6a17e71c25adc9f8f"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "271b77585b608bf446ed569d19318e36f0845928", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d607316b2f116372814a1e7b379b970071e21e00/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d607316b2f116372814a1e7b379b970071e21e00/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=d607316b2f116372814a1e7b379b970071e21e00", "patch": "@@ -837,13 +837,17 @@ fn trans_malloc_boxed_raw(cx: @block_ctxt, t: ty::t) -> result {\n     // wants.\n     // FIXME: Could avoid this check with a postcondition on mk_imm_box?\n     // (requires Issue #586)\n-    let ccx = bcx_ccx(cx);\n-    let sp = cx.sp;\n+    let ccx = bcx_ccx(bcx);\n+    let sp = bcx.sp;\n     check (type_has_static_size(ccx, box_ptr));\n     let llty = type_of(ccx, sp, box_ptr);\n \n-    let tydesc = C_null(T_ptr(ccx.tydesc_type));\n-    let rval = Call(cx, ccx.upcalls.malloc, [cx.fcx.lltaskptr, llsz, tydesc]);\n+    let ti = none;\n+    let tydesc_result = get_tydesc(bcx, t, true, tps_normal, ti);\n+    let lltydesc = tydesc_result.result.val; bcx = tydesc_result.result.bcx;\n+\n+    let rval = Call(cx, ccx.upcalls.malloc,\n+                    [cx.fcx.lltaskptr, llsz, lltydesc]);\n     ret rslt(cx, PointerCast(cx, rval, llty));\n }\n "}]}