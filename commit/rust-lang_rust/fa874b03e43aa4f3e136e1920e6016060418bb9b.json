{"sha": "fa874b03e43aa4f3e136e1920e6016060418bb9b", "node_id": "C_kwDOAAsO6NoAKGZhODc0YjAzZTQzYWE0ZjNlMTM2ZTE5MjBlNjAxNjA2MDQxOGJiOWI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-10T20:31:01Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2023-03-01T03:00:40Z"}, "message": "Simplify some iterator combinators", "tree": {"sha": "6b305cffc0231e5ff941b8078e35d44d89619f8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b305cffc0231e5ff941b8078e35d44d89619f8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa874b03e43aa4f3e136e1920e6016060418bb9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa874b03e43aa4f3e136e1920e6016060418bb9b", "html_url": "https://github.com/rust-lang/rust/commit/fa874b03e43aa4f3e136e1920e6016060418bb9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa874b03e43aa4f3e136e1920e6016060418bb9b/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a1d3241b4f998d136afe188072dc36f006d026c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a1d3241b4f998d136afe188072dc36f006d026c", "html_url": "https://github.com/rust-lang/rust/commit/3a1d3241b4f998d136afe188072dc36f006d026c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f303628715286663d41b2f27db63b4075af9244b", "filename": "src/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa874b03e43aa4f3e136e1920e6016060418bb9b/src%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa874b03e43aa4f3e136e1920e6016060418bb9b/src%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuilder.rs?ref=fa874b03e43aa4f3e136e1920e6016060418bb9b", "patch": "@@ -1365,7 +1365,7 @@ impl<'a, 'gcc, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'gcc, 'tcx> {\n     ) -> RValue<'gcc> {\n         // FIXME(antoyo): remove when having a proper API.\n         let gcc_func = unsafe { std::mem::transmute(func) };\n-        let call = if self.functions.borrow().values().find(|value| **value == gcc_func).is_some() {\n+        let call = if self.functions.borrow().values().any(|value| *value == gcc_func) {\n             self.function_call(func, args, funclet)\n         }\n         else {"}, {"sha": "9bd3710ac8ada8350fab359ca6d1af7e5264e0d9", "filename": "src/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa874b03e43aa4f3e136e1920e6016060418bb9b/src%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa874b03e43aa4f3e136e1920e6016060418bb9b/src%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcontext.rs?ref=fa874b03e43aa4f3e136e1920e6016060418bb9b", "patch": "@@ -258,8 +258,8 @@ impl<'gcc, 'tcx> CodegenCx<'gcc, 'tcx> {\n \n     pub fn rvalue_as_function(&self, value: RValue<'gcc>) -> Function<'gcc> {\n         let function: Function<'gcc> = unsafe { std::mem::transmute(value) };\n-        debug_assert!(self.functions.borrow().values().find(|value| **value == function).is_some(),\n-            \"{:?} is not a function\", function);\n+        debug_assert!(self.functions.borrow().values().any(|value| *value == function),\n+            \"{:?} ({:?}) is not a function\", value, value.get_type());\n         function\n     }\n "}]}