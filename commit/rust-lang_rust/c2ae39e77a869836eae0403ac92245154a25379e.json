{"sha": "c2ae39e77a869836eae0403ac92245154a25379e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyYWUzOWU3N2E4Njk4MzZlYWUwNDAzYWM5MjI0NTE1NGEyNTM3OWU=", "commit": {"author": {"name": "Michael Bebenita", "email": "mbebenita@gmail.com", "date": "2018-07-17T17:17:04Z"}, "committer": {"name": "Michael Bebenita", "email": "mbebenita@gmail.com", "date": "2018-07-17T17:17:36Z"}, "message": "Add max_width option for all heuristics.\n\nThis is useful when working with very small max_widths like 79 chars.", "tree": {"sha": "d6a9409bceb8238d3a765b212088c979aa663def", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6a9409bceb8238d3a765b212088c979aa663def"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2ae39e77a869836eae0403ac92245154a25379e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2ae39e77a869836eae0403ac92245154a25379e", "html_url": "https://github.com/rust-lang/rust/commit/c2ae39e77a869836eae0403ac92245154a25379e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2ae39e77a869836eae0403ac92245154a25379e/comments", "author": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b28a0cd6e68e342aa026e25dcc651cb9bc5007f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b28a0cd6e68e342aa026e25dcc651cb9bc5007f8", "html_url": "https://github.com/rust-lang/rust/commit/b28a0cd6e68e342aa026e25dcc651cb9bc5007f8"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "2a9df314417e75dfddfd1a72ab12bb730840bc5d", "filename": "Configurations.md", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c2ae39e77a869836eae0403ac92245154a25379e/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/c2ae39e77a869836eae0403ac92245154a25379e/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=c2ae39e77a869836eae0403ac92245154a25379e", "patch": "@@ -276,7 +276,7 @@ fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n Whether to use different formatting for items and expressions if they satisfy a heuristic notion of 'small'.\n \n - **Default value**: `Default`\n-- **Possible values**: `Default`, `Off`\n+- **Possible values**: `Default`, `Off`, `Max`\n - **Stable**: Yes\n \n #### `Default` (default):\n@@ -337,6 +337,24 @@ fn main() {\n }\n ```\n \n+#### `Max`:\n+\n+```rust\n+enum Lorem {\n+    Ipsum,\n+    Dolor(bool),\n+    Sit { amet: Consectetur, adipiscing: Elit },\n+}\n+\n+fn main() {\n+    lorem(\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\");\n+\n+    let lorem = Lorem { ipsum: dolor, sit: amet };\n+\n+    let lorem = if ipsum { dolor } else { sit };\n+}\n+```\n+\n ## `binop_separator`\n \n Where to put a binary operator when a binary expression goes multiline."}, {"sha": "82cf0e19a8fe8b9e69310d428ef7838df51c4ecb", "filename": "src/config/config_type.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c2ae39e77a869836eae0403ac92245154a25379e/src%2Fconfig%2Fconfig_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ae39e77a869836eae0403ac92245154a25379e/src%2Fconfig%2Fconfig_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fconfig_type.rs?ref=c2ae39e77a869836eae0403ac92245154a25379e", "patch": "@@ -403,6 +403,9 @@ macro_rules! create_config {\n                 if self.use_small_heuristics.2 == Heuristics::Default {\n                     let max_width = self.max_width.2;\n                     self.set().width_heuristics(WidthHeuristics::scaled(max_width));\n+                } else if self.use_small_heuristics.2 == Heuristics::Max {\n+                    let max_width = self.max_width.2;\n+                    self.set().width_heuristics(WidthHeuristics::set(max_width));\n                 } else {\n                     self.set().width_heuristics(WidthHeuristics::null());\n                 }"}, {"sha": "a581cdef43df65a248df2ed75102393ba3086828", "filename": "src/config/options.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c2ae39e77a869836eae0403ac92245154a25379e/src%2Fconfig%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ae39e77a869836eae0403ac92245154a25379e/src%2Fconfig%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Foptions.rs?ref=c2ae39e77a869836eae0403ac92245154a25379e", "patch": "@@ -154,6 +154,8 @@ configuration_option_enum! { TypeDensity:\n configuration_option_enum! { Heuristics:\n     // Turn off any heuristics\n     Off,\n+    // Turn on max heuristics\n+    Max,\n     // Use Rustfmt's defaults\n     Default,\n }\n@@ -257,6 +259,17 @@ impl WidthHeuristics {\n         }\n     }\n \n+    pub fn set(max_width: usize) -> WidthHeuristics {\n+        WidthHeuristics {\n+            fn_call_width: max_width,\n+            struct_lit_width: max_width,\n+            struct_variant_width: max_width,\n+            array_width: max_width,\n+            chain_width: max_width,\n+            single_line_if_else_max_width: max_width,\n+        }\n+    }\n+\n     // scale the default WidthHeuristics according to max_width\n     pub fn scaled(max_width: usize) -> WidthHeuristics {\n         const DEFAULT_MAX_WIDTH: usize = 100;"}, {"sha": "8d30932e2c24d5cfc1a67b3108d97759d690becf", "filename": "tests/source/configs/use_small_heuristics/max.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c2ae39e77a869836eae0403ac92245154a25379e/tests%2Fsource%2Fconfigs%2Fuse_small_heuristics%2Fmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ae39e77a869836eae0403ac92245154a25379e/tests%2Fsource%2Fconfigs%2Fuse_small_heuristics%2Fmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fuse_small_heuristics%2Fmax.rs?ref=c2ae39e77a869836eae0403ac92245154a25379e", "patch": "@@ -0,0 +1,25 @@\n+// rustfmt-use_small_heuristics: Max\n+\n+enum Lorem {\n+    Ipsum,\n+    Dolor(bool),\n+    Sit {\n+        amet: Consectetur,\n+        adipiscing: Elit,\n+    },\n+}\n+\n+fn main() {\n+    lorem(\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\");\n+\n+    let lorem = Lorem {\n+        ipsum: dolor,\n+        sit: amet,\n+    };\n+\n+    let lorem = if ipsum {\n+        dolor\n+    } else {\n+        sit\n+    };\n+}"}, {"sha": "785dfbea01439665faf696137684eb01bd2d7b6c", "filename": "tests/target/configs/use_small_heuristics/max.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c2ae39e77a869836eae0403ac92245154a25379e/tests%2Ftarget%2Fconfigs%2Fuse_small_heuristics%2Fmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ae39e77a869836eae0403ac92245154a25379e/tests%2Ftarget%2Fconfigs%2Fuse_small_heuristics%2Fmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fuse_small_heuristics%2Fmax.rs?ref=c2ae39e77a869836eae0403ac92245154a25379e", "patch": "@@ -0,0 +1,15 @@\n+// rustfmt-use_small_heuristics: Max\n+\n+enum Lorem {\n+    Ipsum,\n+    Dolor(bool),\n+    Sit { amet: Consectetur, adipiscing: Elit },\n+}\n+\n+fn main() {\n+    lorem(\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\");\n+\n+    let lorem = Lorem { ipsum: dolor, sit: amet };\n+\n+    let lorem = if ipsum { dolor } else { sit };\n+}"}]}