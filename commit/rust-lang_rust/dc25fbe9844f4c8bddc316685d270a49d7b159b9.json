{"sha": "dc25fbe9844f4c8bddc316685d270a49d7b159b9", "node_id": "C_kwDOAAsO6NoAKGRjMjVmYmU5ODQ0ZjRjOGJkZGMzMTY2ODVkMjcwYTQ5ZDdiMTU5Yjk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-06-04T16:41:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-06-04T16:41:37Z"}, "message": "Auto merge of #112176 - jyn514:ci-debugging, r=clubby789\n\nPrint the full arguments passed to `./configure` in CI\n\nThis is useful to replicate CI failures locally. Before, the arguments would be truncated and it would be hard to tell what it was actually doing.\n\nBefore:\n```\nconfigure: build.configure-args := ['--build=x86_64-unknown-linux-gnu', '--save-t ...\n```\n\nAfter:\n```\nconfigure: build.configure-args := ['--build=x86_64-unknown-linux-gnu', '--save-toolstates=/tmp/toolstate/toolstates.json', '--enable-verbose', '--enable-sccache', '--disable-manage-submodules', '--enable-locked-deps', '--enable-cargo-native-static', '--set', 'rust.codegen-units-std=1', '--set', 'dist.compression-profile=balanced', '--dist-compression-formats=xz', '--disable-dist-src', '--set', 'rust.download-rustc=if-unchanged', '--release-channel=nightly', '--enable-debug-assertions', '--enable-overflow-checks', '--enable-llvm-assertions', '--set', 'rust.verify-llvm-ir', '--set', 'llvm.download-ci-llvm=if-available', '--enable-missing-tools']\n```", "tree": {"sha": "16d8bd582299b7029f82e9b5649eb541d7715b00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16d8bd582299b7029f82e9b5649eb541d7715b00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc25fbe9844f4c8bddc316685d270a49d7b159b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc25fbe9844f4c8bddc316685d270a49d7b159b9", "html_url": "https://github.com/rust-lang/rust/commit/dc25fbe9844f4c8bddc316685d270a49d7b159b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc25fbe9844f4c8bddc316685d270a49d7b159b9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e04e19d2229a48f5b4cb68e832121f9cadbb2fa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e04e19d2229a48f5b4cb68e832121f9cadbb2fa3", "html_url": "https://github.com/rust-lang/rust/commit/e04e19d2229a48f5b4cb68e832121f9cadbb2fa3"}, {"sha": "42a9898fd1a6a5302b3b5b0661c8d08532594087", "url": "https://api.github.com/repos/rust-lang/rust/commits/42a9898fd1a6a5302b3b5b0661c8d08532594087", "html_url": "https://github.com/rust-lang/rust/commit/42a9898fd1a6a5302b3b5b0661c8d08532594087"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "4481e1668b60f32a05e472fd277620bada52431c", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/dc25fbe9844f4c8bddc316685d270a49d7b159b9/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/dc25fbe9844f4c8bddc316685d270a49d7b159b9/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=dc25fbe9844f4c8bddc316685d270a49d7b159b9", "patch": "@@ -45,7 +45,6 @@ def v(*args):\n o(\"llvm-link-shared\", \"llvm.link-shared\", \"prefer shared linking to LLVM (llvm-config --link-shared)\")\n o(\"rpath\", \"rust.rpath\", \"build rpaths into rustc itself\")\n o(\"codegen-tests\", \"rust.codegen-tests\", \"run the tests/codegen tests\")\n-o(\"option-checking\", None, \"complain about unrecognized options in this configure script\")\n o(\"ninja\", \"llvm.ninja\", \"build LLVM using the Ninja generator (for MSVC, requires building in the correct environment)\")\n o(\"locked-deps\", \"build.locked-deps\", \"force Cargo.lock to be up to date\")\n o(\"vendor\", \"build.vendor\", \"enable usage of vendored Rust crates\")\n@@ -170,6 +169,9 @@ def v(*args):\n v(\"host\", None, \"List of GNUs ./configure syntax LLVM host triples\")\n v(\"target\", None, \"List of GNUs ./configure syntax LLVM target triples\")\n \n+# Options specific to this configure script\n+o(\"option-checking\", None, \"complain about unrecognized options in this configure script\")\n+o(\"verbose-configure\", None, \"don't truncate options when printing them in this configure script\")\n v(\"set\", None, \"set arbitrary key/value pairs in TOML configuration\")\n \n \n@@ -211,6 +213,8 @@ def is_value_list(key):\n     print('be passed with `--disable-foo` to forcibly disable the option')\n     sys.exit(0)\n \n+VERBOSE = False\n+\n # Parse all command line arguments into one of these three lists, handling\n # boolean and value-based options separately\n def parse_args(args):\n@@ -271,6 +275,9 @@ def parse_args(args):\n         if len(need_value_args) > 0:\n             err(\"Option '{0}' needs a value ({0}=val)\".format(need_value_args[0]))\n \n+    global VERBOSE\n+    VERBOSE = 'verbose-configure' in known_args\n+\n     config = {}\n \n     set('build.configure-args', sys.argv[1:], config)\n@@ -290,7 +297,7 @@ def set(key, value, config):\n         value = [v for v in value if v]\n \n     s = \"{:20} := {}\".format(key, value)\n-    if len(s) < 70:\n+    if len(s) < 70 or VERBOSE:\n         p(s)\n     else:\n         p(s[:70] + \" ...\")\n@@ -371,7 +378,7 @@ def apply_args(known_args, option_checking, config):\n             set('rust.lld', True, config)\n             set('rust.llvm-tools', True, config)\n             set('build.extended', True, config)\n-        elif option.name == 'option-checking':\n+        elif option.name in ['option-checking', 'verbose-configure']:\n             # this was handled above\n             pass\n         elif option.name == 'dist-compression-formats':"}, {"sha": "5363086f68b6543fa4538ad587d0c6a735acabb3", "filename": "src/ci/run.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dc25fbe9844f4c8bddc316685d270a49d7b159b9/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dc25fbe9844f4c8bddc316685d270a49d7b159b9/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=dc25fbe9844f4c8bddc316685d270a49d7b159b9", "patch": "@@ -53,6 +53,7 @@ if ! isCI || isCiBranch auto || isCiBranch beta || isCiBranch try || isCiBranch\n     HAS_METRICS=1\n fi\n \n+RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-verbose-configure\"\n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-sccache\"\n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-manage-submodules\"\n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-locked-deps\""}]}