{"sha": "fa4c04036f450a557f2e39a210fc0110be244c5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNGMwNDAzNmY0NTBhNTU3ZjJlMzlhMjEwZmMwMTEwYmUyNDRjNWE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-24T15:25:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-24T15:25:46Z"}, "message": "Merge pull request #631 from RalfJung/btree\n\ntest BTree a bit more", "tree": {"sha": "a8908127f57082250b919f93a8b2572a517fe8b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8908127f57082250b919f93a8b2572a517fe8b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa4c04036f450a557f2e39a210fc0110be244c5a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJccrd6CRBK7hj4Ov3rIwAAdHIIAHD+W9jTZc+3zTSoWxZh34Ed\n7yksSsZXbxY7egKdnnt42bAzNyc81OQSJ9vDGrnilFiGlqiq+tIUG8N6YIBFd5wg\n1ndTaX6P9wrTM7s0u4fiXjv17TPb82o0JkPEE8OX9vox2meoo89mUU8WO72yCEZi\nUOaZZqLQ5gKWwDW5gkvanHk+dRvKVG44z7AUI8mYX50MsYmZ4OlazlB91GF259LC\nC+ILilPp/+hBItiOOmsn4NA5uLu6sXQm09NbWsr+fXVaBONsM5eKjYYdLBAT3+vi\nj7FHO9e/Ulh1NKhU0VNdJ72wN2QOQ4vufgtAptZyMnXuF47REGF3lU0TSwTpb60=\n=3YAh\n-----END PGP SIGNATURE-----\n", "payload": "tree a8908127f57082250b919f93a8b2572a517fe8b0\nparent e9be42280b8174cc1f397bee410a429c68bf6f2a\nparent 8a779bc260646f7fb16ab24a463ad977a9e05c90\nauthor Ralf Jung <post@ralfj.de> 1551021946 +0100\ncommitter GitHub <noreply@github.com> 1551021946 +0100\n\nMerge pull request #631 from RalfJung/btree\n\ntest BTree a bit more"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa4c04036f450a557f2e39a210fc0110be244c5a", "html_url": "https://github.com/rust-lang/rust/commit/fa4c04036f450a557f2e39a210fc0110be244c5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa4c04036f450a557f2e39a210fc0110be244c5a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9be42280b8174cc1f397bee410a429c68bf6f2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9be42280b8174cc1f397bee410a429c68bf6f2a", "html_url": "https://github.com/rust-lang/rust/commit/e9be42280b8174cc1f397bee410a429c68bf6f2a"}, {"sha": "8a779bc260646f7fb16ab24a463ad977a9e05c90", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a779bc260646f7fb16ab24a463ad977a9e05c90", "html_url": "https://github.com/rust-lang/rust/commit/8a779bc260646f7fb16ab24a463ad977a9e05c90"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "091e10fde3c24f5a5984710a7ee9fba7137e21e5", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa4c04036f450a557f2e39a210fc0110be244c5a/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/fa4c04036f450a557f2e39a210fc0110be244c5a/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=fa4c04036f450a557f2e39a210fc0110be244c5a", "patch": "@@ -1 +1 @@\n-nightly-2019-02-15\n+nightly-2019-02-24"}, {"sha": "e2049d9480322b4337f7356f3b5dd2a81016d0d1", "filename": "tests/run-pass/btreemap.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fa4c04036f450a557f2e39a210fc0110be244c5a/tests%2Frun-pass%2Fbtreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa4c04036f450a557f2e39a210fc0110be244c5a/tests%2Frun-pass%2Fbtreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbtreemap.rs?ref=fa4c04036f450a557f2e39a210fc0110be244c5a", "patch": "@@ -1,3 +1,5 @@\n+use std::collections::{BTreeMap, BTreeSet};\n+\n #[derive(PartialEq, Eq, PartialOrd, Ord)]\n pub enum Foo {\n     A(&'static str),\n@@ -6,11 +8,22 @@ pub enum Foo {\n }\n \n pub fn main() {\n-    let mut b = std::collections::BTreeSet::new();\n+    let mut b = BTreeSet::new();\n     b.insert(Foo::A(\"\\'\"));\n     b.insert(Foo::A(\"/=\"));\n     b.insert(Foo::A(\"#\"));\n     b.insert(Foo::A(\"0o\"));\n     assert!(b.remove(&Foo::A(\"/=\")));\n     assert!(!b.remove(&Foo::A(\"/=\")));\n+\n+    // Also test a lower-alignment type, where the NodeHeader overlaps with\n+    // the keys.\n+    let mut b = BTreeSet::new();\n+    b.insert(1024);\n+    b.insert(7);\n+\n+    let mut b = BTreeMap::new();\n+    b.insert(\"bar\", 1024);\n+    b.insert(\"baz\", 7);\n+    for _val in b.iter_mut() {}\n }"}]}