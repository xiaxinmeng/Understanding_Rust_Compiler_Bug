{"sha": "87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZDFmYjc0N2Y4ZWQzZGRlM2NkMzZjMTdkMWVmNzM1ODcyYTdiZjk=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2021-08-25T13:40:39Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2021-08-27T10:09:32Z"}, "message": "rustc_target: require `TyAbiInterface` in `LayoutOf`.", "tree": {"sha": "0557567511048be5e9f425d3d0e7ad7fcb4c9e17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0557567511048be5e9f425d3d0e7ad7fcb4c9e17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9", "html_url": "https://github.com/rust-lang/rust/commit/87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8486571a10ce57b02ae19bfb1b31736fb2a1b4fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/8486571a10ce57b02ae19bfb1b31736fb2a1b4fe", "html_url": "https://github.com/rust-lang/rust/commit/8486571a10ce57b02ae19bfb1b31736fb2a1b4fe"}], "stats": {"total": 52, "additions": 47, "deletions": 5}, "files": [{"sha": "7dbc3d60439c4e64881e645197f6eaebf01180ea", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9", "patch": "@@ -41,7 +41,7 @@ use rustc_session::Session;\n use rustc_session::SessionLintStore;\n use rustc_span::lev_distance::find_best_match_for_name;\n use rustc_span::{symbol::Symbol, MultiSpan, Span, DUMMY_SP};\n-use rustc_target::abi::LayoutOf;\n+use rustc_target::abi::{self, LayoutOf};\n use tracing::debug;\n \n use std::cell::Cell;\n@@ -1059,6 +1059,27 @@ impl<'tcx> LateContext<'tcx> {\n     }\n }\n \n+impl<'tcx> abi::HasDataLayout for LateContext<'tcx> {\n+    #[inline]\n+    fn data_layout(&self) -> &abi::TargetDataLayout {\n+        &self.tcx.data_layout\n+    }\n+}\n+\n+impl<'tcx> ty::layout::HasTyCtxt<'tcx> for LateContext<'tcx> {\n+    #[inline]\n+    fn tcx(&self) -> TyCtxt<'tcx> {\n+        self.tcx\n+    }\n+}\n+\n+impl<'tcx> ty::layout::HasParamEnv<'tcx> for LateContext<'tcx> {\n+    #[inline]\n+    fn param_env(&self) -> ty::ParamEnv<'tcx> {\n+        self.param_env\n+    }\n+}\n+\n impl<'tcx> LayoutOf<'tcx> for LateContext<'tcx> {\n     type Ty = Ty<'tcx>;\n     type TyAndLayout = Result<TyAndLayout<'tcx>, LayoutError<'tcx>>;"}, {"sha": "df5e6b2da99155ceff7451a3eb72ba0d23d8cdd1", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9", "patch": "@@ -2034,6 +2034,20 @@ impl<'tcx> HasTyCtxt<'tcx> for TyCtxt<'tcx> {\n     }\n }\n \n+impl<'tcx> HasDataLayout for ty::query::TyCtxtAt<'tcx> {\n+    #[inline]\n+    fn data_layout(&self) -> &TargetDataLayout {\n+        &self.data_layout\n+    }\n+}\n+\n+impl<'tcx> HasTyCtxt<'tcx> for ty::query::TyCtxtAt<'tcx> {\n+    #[inline]\n+    fn tcx(&self) -> TyCtxt<'tcx> {\n+        **self\n+    }\n+}\n+\n impl<'tcx, C> HasParamEnv<'tcx> for LayoutCx<'tcx, C> {\n     fn param_env(&self) -> ty::ParamEnv<'tcx> {\n         self.param_env"}, {"sha": "5c51aa4ed679b8bb449d32be6795b67270b14425", "filename": "compiler/rustc_mir/src/transform/const_prop.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs?ref=87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9", "patch": "@@ -17,7 +17,7 @@ use rustc_middle::mir::{\n     Location, Operand, Place, Rvalue, SourceInfo, SourceScope, SourceScopeData, Statement,\n     StatementKind, Terminator, TerminatorKind, UnOp, RETURN_PLACE,\n };\n-use rustc_middle::ty::layout::{HasTyCtxt, LayoutError, TyAndLayout};\n+use rustc_middle::ty::layout::{LayoutError, TyAndLayout};\n use rustc_middle::ty::subst::{InternalSubsts, Subst};\n use rustc_middle::ty::{\n     self, ConstInt, ConstKind, Instance, ParamEnv, ScalarInt, Ty, TyCtxt, TypeFoldable,\n@@ -346,13 +346,20 @@ impl<'mir, 'tcx> HasDataLayout for ConstPropagator<'mir, 'tcx> {\n     }\n }\n \n-impl<'mir, 'tcx> HasTyCtxt<'tcx> for ConstPropagator<'mir, 'tcx> {\n+impl<'mir, 'tcx> ty::layout::HasTyCtxt<'tcx> for ConstPropagator<'mir, 'tcx> {\n     #[inline]\n     fn tcx(&self) -> TyCtxt<'tcx> {\n         self.tcx\n     }\n }\n \n+impl<'mir, 'tcx> ty::layout::HasParamEnv<'tcx> for ConstPropagator<'mir, 'tcx> {\n+    #[inline]\n+    fn param_env(&self) -> ty::ParamEnv<'tcx> {\n+        self.param_env\n+    }\n+}\n+\n impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n     fn new(\n         body: &Body<'tcx>,"}, {"sha": "367071926fe69075191fe6040853435092713f20", "filename": "compiler/rustc_target/src/abi/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs?ref=87d1fb747f8ed3dde3cd36c17d1ef735872a7bf9", "patch": "@@ -1174,8 +1174,8 @@ impl<'a, Ty> Deref for TyAndLayout<'a, Ty> {\n }\n \n /// Trait for context types that can compute layouts of things.\n-pub trait LayoutOf<'a> {\n-    type Ty;\n+pub trait LayoutOf<'a>: Sized {\n+    type Ty: TyAbiInterface<'a, Self>;\n     type TyAndLayout: MaybeResult<TyAndLayout<'a, Self::Ty>>;\n \n     fn layout_of(&self, ty: Self::Ty) -> Self::TyAndLayout;"}]}