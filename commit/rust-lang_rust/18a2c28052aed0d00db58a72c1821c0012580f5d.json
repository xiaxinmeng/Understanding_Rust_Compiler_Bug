{"sha": "18a2c28052aed0d00db58a72c1821c0012580f5d", "node_id": "C_kwDOAAsO6NoAKDE4YTJjMjgwNTJhZWQwZDAwZGI1OGE3MmMxODIxYzAwMTI1ODBmNWQ", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-30T12:10:41Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-06T18:59:47Z"}, "message": "Bless 32 bit tests", "tree": {"sha": "7036014bb30aedcfeb1c647a3d4d00df30ad1487", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7036014bb30aedcfeb1c647a3d4d00df30ad1487"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18a2c28052aed0d00db58a72c1821c0012580f5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18a2c28052aed0d00db58a72c1821c0012580f5d", "html_url": "https://github.com/rust-lang/rust/commit/18a2c28052aed0d00db58a72c1821c0012580f5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18a2c28052aed0d00db58a72c1821c0012580f5d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ccac16ef604230d83145ba8147033efe1378770", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ccac16ef604230d83145ba8147033efe1378770", "html_url": "https://github.com/rust-lang/rust/commit/1ccac16ef604230d83145ba8147033efe1378770"}], "stats": {"total": 202, "additions": 120, "deletions": 82}, "files": [{"sha": "563f3ffd6744f0650cab1cd129d4688a99440c0f", "filename": "src/test/ui/const-ptr/forbidden_slices.32bit.stderr", "status": "modified", "additions": 110, "deletions": 77, "changes": 187, "blob_url": "https://github.com/rust-lang/rust/blob/18a2c28052aed0d00db58a72c1821c0012580f5d/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18a2c28052aed0d00db58a72c1821c0012580f5d/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-ptr%2Fforbidden_slices.32bit.stderr?ref=18a2c28052aed0d00db58a72c1821c0012580f5d", "patch": "@@ -2,43 +2,52 @@ error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n LL |         &*ptr::slice_from_raw_parts(data, len)\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |         |\n-   |         dereferencing pointer failed: null pointer is a dangling pointer (it has no provenance)\n-   |         inside `std::slice::from_raw_parts::<'_, u32>`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereferencing pointer failed: null pointer is a dangling pointer (it has no provenance)\n+   |\n+note: inside `std::slice::from_raw_parts::<'_, u32>`\n+  --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:18:34\n+LL |         &*ptr::slice_from_raw_parts(data, len)\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `S0`\n+  --> $DIR/forbidden_slices.rs:18:34\n    |\n LL | pub static S0: &[u32] = unsafe { from_raw_parts(ptr::null(), 0) };\n-   |                                  ------------------------------ inside `S0`\n+   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n LL |         &*ptr::slice_from_raw_parts(data, len)\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |         |\n-   |         dereferencing pointer failed: null pointer is a dangling pointer (it has no provenance)\n-   |         inside `std::slice::from_raw_parts::<'_, ()>`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereferencing pointer failed: null pointer is a dangling pointer (it has no provenance)\n+   |\n+note: inside `std::slice::from_raw_parts::<'_, ()>`\n+  --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:19:33\n+LL |         &*ptr::slice_from_raw_parts(data, len)\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `S1`\n+  --> $DIR/forbidden_slices.rs:19:33\n    |\n LL | pub static S1: &[()] = unsafe { from_raw_parts(ptr::null(), 0) };\n-   |                                 ------------------------------ inside `S1`\n+   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n LL |         &*ptr::slice_from_raw_parts(data, len)\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |         |\n-   |         dereferencing pointer failed: ALLOC_ID has size 4, so pointer to 8 bytes starting at offset 0 is out-of-bounds\n-   |         inside `std::slice::from_raw_parts::<'_, u32>`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereferencing pointer failed: ALLOC_ID has size 4, so pointer to 8 bytes starting at offset 0 is out-of-bounds\n+   |\n+note: inside `std::slice::from_raw_parts::<'_, u32>`\n+  --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:22:34\n+LL |         &*ptr::slice_from_raw_parts(data, len)\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `S2`\n+  --> $DIR/forbidden_slices.rs:22:34\n    |\n LL | pub static S2: &[u32] = unsafe { from_raw_parts(&D0, 2) };\n-   |                                  ---------------------- inside `S2`\n+   |                                  ^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0080]: it is undefined behavior to use this value\n   --> $DIR/forbidden_slices.rs:25:1\n@@ -89,72 +98,85 @@ error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n LL |         &*ptr::slice_from_raw_parts(data, len)\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |         |\n-   |         dereferencing pointer failed: ALLOC_ID has size 8, so pointer to 8 bytes starting at offset 1 is out-of-bounds\n-   |         inside `std::slice::from_raw_parts::<'_, u64>`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ dereferencing pointer failed: ALLOC_ID has size 8, so pointer to 8 bytes starting at offset 1 is out-of-bounds\n    |\n-  ::: $DIR/forbidden_slices.rs:43:5\n+note: inside `std::slice::from_raw_parts::<'_, u64>`\n+  --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n+   |\n+LL |         &*ptr::slice_from_raw_parts(data, len)\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `S8`\n+  --> $DIR/forbidden_slices.rs:43:5\n    |\n LL |     from_raw_parts(ptr, 1)\n-   |     ---------------------- inside `S8`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |                  |\n-   |                  out-of-bounds offset_from: null pointer is a dangling pointer (it has no provenance)\n-   |                  inside `ptr::const_ptr::<impl *const u32>::sub_ptr`\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds offset_from: null pointer is a dangling pointer (it has no provenance)\n    |\n-  ::: $SRC_DIR/core/src/slice/raw.rs:LL:COL\n+note: inside `ptr::const_ptr::<impl *const u32>::sub_ptr`\n+  --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n-LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n-   |                                          ------------------------------ inside `from_ptr_range::<'_, u32>`\n+LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `from_ptr_range::<'_, u32>`\n+  --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:46:34\n+LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n+   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `R0`\n+  --> $DIR/forbidden_slices.rs:46:34\n    |\n LL | pub static R0: &[u32] = unsafe { from_ptr_range(ptr::null()..ptr::null()) };\n-   |                                  ---------------------------------------- inside `R0`\n+   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n LL |         assert!(0 < pointee_size && pointee_size <= isize::MAX as usize);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |         |\n-   |         the evaluated program panicked at 'assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize', $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n-   |         inside `ptr::const_ptr::<impl *const ()>::sub_ptr`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize', $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n-  ::: $SRC_DIR/core/src/slice/raw.rs:LL:COL\n+note: inside `ptr::const_ptr::<impl *const ()>::sub_ptr`\n+  --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n-LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n-   |                                          ------------------------------ inside `from_ptr_range::<'_, ()>`\n+LL |         assert!(0 < pointee_size && pointee_size <= isize::MAX as usize);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `from_ptr_range::<'_, ()>`\n+  --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:47:33\n+LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n+   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `R1`\n+  --> $DIR/forbidden_slices.rs:47:33\n    |\n LL | pub static R1: &[()] = unsafe { from_ptr_range(ptr::null()..ptr::null()) };\n-   |                                 ---------------------------------------- inside `R1`\n-   |\n+   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: this error originates in the macro `assert` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n+LL |         unsafe { intrinsics::offset(self, count) }\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds pointer arithmetic: ALLOC_ID has size 4, so pointer to 8 bytes starting at offset 0 is out-of-bounds\n+   |\n+note: inside `ptr::const_ptr::<impl *const u32>::offset`\n+  --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n+   |\n LL |         unsafe { intrinsics::offset(self, count) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |                  |\n-   |                  out-of-bounds pointer arithmetic: ALLOC_ID has size 4, so pointer to 8 bytes starting at offset 0 is out-of-bounds\n-   |                  inside `ptr::const_ptr::<impl *const u32>::offset`\n-...\n-LL |         unsafe { self.offset(count as isize) }\n-   |                  --------------------------- inside `ptr::const_ptr::<impl *const u32>::add`\n+note: inside `ptr::const_ptr::<impl *const u32>::add`\n+  --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:50:25\n+LL |         unsafe { self.offset(count as isize) }\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `R2`\n+  --> $DIR/forbidden_slices.rs:50:25\n    |\n LL |     from_ptr_range(ptr..ptr.add(2))\n-   |                         ---------- inside `R2`\n+   |                         ^^^^^^^^^^\n \n error[E0080]: it is undefined behavior to use this value\n   --> $DIR/forbidden_slices.rs:52:1\n@@ -204,57 +226,68 @@ LL | pub static R7: &[u16] = unsafe {\n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n+LL |         unsafe { intrinsics::offset(self, count) }\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ out-of-bounds pointer arithmetic: ALLOC_ID has size 8, so pointer to 8 bytes starting at offset 1 is out-of-bounds\n+   |\n+note: inside `ptr::const_ptr::<impl *const u64>::offset`\n+  --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n+   |\n LL |         unsafe { intrinsics::offset(self, count) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |                  |\n-   |                  out-of-bounds pointer arithmetic: ALLOC_ID has size 8, so pointer to 8 bytes starting at offset 1 is out-of-bounds\n-   |                  inside `ptr::const_ptr::<impl *const u64>::offset`\n-...\n-LL |         unsafe { self.offset(count as isize) }\n-   |                  --------------------------- inside `ptr::const_ptr::<impl *const u64>::add`\n+note: inside `ptr::const_ptr::<impl *const u64>::add`\n+  --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:74:25\n+LL |         unsafe { self.offset(count as isize) }\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `R8`\n+  --> $DIR/forbidden_slices.rs:74:25\n    |\n LL |     from_ptr_range(ptr..ptr.add(1))\n-   |                         ---------- inside `R8`\n+   |                         ^^^^^^^^^^\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |                  |\n-   |                  `ptr_offset_from_unsigned` called on pointers into different allocations\n-   |                  inside `ptr::const_ptr::<impl *const u32>::sub_ptr`\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `ptr_offset_from_unsigned` called on pointers into different allocations\n    |\n-  ::: $SRC_DIR/core/src/slice/raw.rs:LL:COL\n+note: inside `ptr::const_ptr::<impl *const u32>::sub_ptr`\n+  --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n-LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n-   |                                          ------------------------------ inside `from_ptr_range::<'_, u32>`\n+LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `from_ptr_range::<'_, u32>`\n+  --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:79:34\n+LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n+   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `R9`\n+  --> $DIR/forbidden_slices.rs:79:34\n    |\n LL | pub static R9: &[u32] = unsafe { from_ptr_range(&D0..(&D0 as *const u32).add(1)) };\n-   |                                  ----------------------------------------------- inside `R9`\n+   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0080]: could not evaluate static initializer\n   --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |                  |\n-   |                  `ptr_offset_from_unsigned` called on pointers into different allocations\n-   |                  inside `ptr::const_ptr::<impl *const u32>::sub_ptr`\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `ptr_offset_from_unsigned` called on pointers into different allocations\n    |\n-  ::: $SRC_DIR/core/src/slice/raw.rs:LL:COL\n+note: inside `ptr::const_ptr::<impl *const u32>::sub_ptr`\n+  --> $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |\n-LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n-   |                                          ------------------------------ inside `from_ptr_range::<'_, u32>`\n+LL |         unsafe { intrinsics::ptr_offset_from_unsigned(self, origin) }\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `from_ptr_range::<'_, u32>`\n+  --> $SRC_DIR/core/src/slice/raw.rs:LL:COL\n    |\n-  ::: $DIR/forbidden_slices.rs:80:35\n+LL |     unsafe { from_raw_parts(range.start, range.end.sub_ptr(range.start)) }\n+   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `R10`\n+  --> $DIR/forbidden_slices.rs:80:35\n    |\n LL | pub static R10: &[u32] = unsafe { from_ptr_range(&D0..&D0) };\n-   |                                   ------------------------ inside `R10`\n+   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 18 previous errors\n "}, {"sha": "9710bf476ecc913b26808998c73240d9bad37f3f", "filename": "src/test/ui/consts/const-eval/validate_uninhabited_zsts.32bit.stderr", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/18a2c28052aed0d00db58a72c1821c0012580f5d/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fvalidate_uninhabited_zsts.32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18a2c28052aed0d00db58a72c1821c0012580f5d/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fvalidate_uninhabited_zsts.32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fvalidate_uninhabited_zsts.32bit.stderr?ref=18a2c28052aed0d00db58a72c1821c0012580f5d", "patch": "@@ -13,14 +13,19 @@ LL |     unsafe { std::mem::transmute(()) }\n error[E0080]: evaluation of constant value failed\n   --> $DIR/validate_uninhabited_zsts.rs:4:14\n    |\n+LL |     unsafe { std::mem::transmute(()) }\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^ transmuting to uninhabited type\n+   |\n+note: inside `foo`\n+  --> $DIR/validate_uninhabited_zsts.rs:4:14\n+   |\n LL |     unsafe { std::mem::transmute(()) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^\n-   |              |\n-   |              transmuting to uninhabited type\n-   |              inside `foo`\n-...\n+note: inside `FOO`\n+  --> $DIR/validate_uninhabited_zsts.rs:19:33\n+   |\n LL | const FOO: [empty::Empty; 3] = [foo(); 3];\n-   |                                 ----- inside `FOO`\n+   |                                 ^^^^^\n \n error[E0080]: it is undefined behavior to use this value\n   --> $DIR/validate_uninhabited_zsts.rs:21:1"}]}