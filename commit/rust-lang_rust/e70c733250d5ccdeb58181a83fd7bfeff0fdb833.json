{"sha": "e70c733250d5ccdeb58181a83fd7bfeff0fdb833", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MGM3MzMyNTBkNWNjZGViNTgxODFhODNmZDdiZmVmZjBmZGI4MzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-12-05T05:30:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-12-05T05:30:47Z"}, "message": "Auto merge of #30211 - pnkfelix:fix-getopts-for-issue-30204, r=alexcrichton\n\nFix internal `getopts` so `--a=b=c` acts like `--a b=c` rather than `--a b`.\n\nFix #30204", "tree": {"sha": "e615b033a450251351f01f3c0acd959dd2c5303b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e615b033a450251351f01f3c0acd959dd2c5303b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e70c733250d5ccdeb58181a83fd7bfeff0fdb833", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e70c733250d5ccdeb58181a83fd7bfeff0fdb833", "html_url": "https://github.com/rust-lang/rust/commit/e70c733250d5ccdeb58181a83fd7bfeff0fdb833", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e70c733250d5ccdeb58181a83fd7bfeff0fdb833/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e2ebaa9183d8e58693de408685e05ac2ad8ee31", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e2ebaa9183d8e58693de408685e05ac2ad8ee31", "html_url": "https://github.com/rust-lang/rust/commit/3e2ebaa9183d8e58693de408685e05ac2ad8ee31"}, {"sha": "288034bda2e70e4de5cb6a01495916d3e88de34c", "url": "https://api.github.com/repos/rust-lang/rust/commits/288034bda2e70e4de5cb6a01495916d3e88de34c", "html_url": "https://github.com/rust-lang/rust/commit/288034bda2e70e4de5cb6a01495916d3e88de34c"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "228ceb92da661e3d228ee8447e4b864a8b30ff76", "filename": "src/libgetopts/lib.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e70c733250d5ccdeb58181a83fd7bfeff0fdb833/src%2Flibgetopts%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e70c733250d5ccdeb58181a83fd7bfeff0fdb833/src%2Flibgetopts%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgetopts%2Flib.rs?ref=e70c733250d5ccdeb58181a83fd7bfeff0fdb833", "patch": "@@ -598,7 +598,7 @@ pub fn getopts(args: &[String], optgrps: &[OptGroup]) -> Result {\n             let mut i_arg = None;\n             if cur.as_bytes()[1] == b'-' {\n                 let tail = &cur[2..curlen];\n-                let tail_eq: Vec<&str> = tail.split('=').collect();\n+                let tail_eq: Vec<&str> = tail.splitn(2, '=').collect();\n                 if tail_eq.len() <= 1 {\n                     names = vec![Long(tail.to_owned())];\n                 } else {\n@@ -1626,4 +1626,18 @@ Options:\n         debug!(\"generated: <<{}>>\", generated_usage);\n         assert_eq!(generated_usage, expected);\n     }\n+\n+    #[test]\n+    fn test_args_with_equals() {\n+        let args = vec!(\"--one\".to_string(), \"A=B\".to_string(),\n+                        \"--two=C=D\".to_string());\n+        let opts = vec![optopt(\"o\", \"one\", \"One\", \"INFO\"),\n+                        optopt(\"t\", \"two\", \"Two\", \"INFO\")];\n+        let matches = &match getopts(&args, &opts) {\n+            result::Result::Ok(m) => m,\n+            result::Result::Err(e) => panic!(\"{}\", e)\n+        };\n+        assert_eq!(matches.opts_str(&[\"o\".to_string()]).unwrap(), \"A=B\");\n+        assert_eq!(matches.opts_str(&[\"t\".to_string()]).unwrap(), \"C=D\");\n+    }\n }"}, {"sha": "6cfa7043a2e382b53adf69da58d03782dbe1ab19", "filename": "src/test/run-make/output-type-permutations/Makefile", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e70c733250d5ccdeb58181a83fd7bfeff0fdb833/src%2Ftest%2Frun-make%2Foutput-type-permutations%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/e70c733250d5ccdeb58181a83fd7bfeff0fdb833/src%2Ftest%2Frun-make%2Foutput-type-permutations%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Foutput-type-permutations%2FMakefile?ref=e70c733250d5ccdeb58181a83fd7bfeff0fdb833", "patch": "@@ -27,56 +27,74 @@ all:\n \trm $(TMPDIR)/foo\n \t$(RUSTC) foo.rs --emit asm=$(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n+\t$(RUSTC) foo.rs --emit=asm=$(TMPDIR)/foo\n+\trm $(TMPDIR)/foo\n \t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n \n \t$(RUSTC) foo.rs --emit llvm-bc -o $(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n \t$(RUSTC) foo.rs --emit llvm-bc=$(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n+\t$(RUSTC) foo.rs --emit=llvm-bc=$(TMPDIR)/foo\n+\trm $(TMPDIR)/foo\n \t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n \n \t$(RUSTC) foo.rs --emit llvm-ir -o $(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n \t$(RUSTC) foo.rs --emit llvm-ir=$(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n+\t$(RUSTC) foo.rs --emit=llvm-ir=$(TMPDIR)/foo\n+\trm $(TMPDIR)/foo\n \t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n \n \t$(RUSTC) foo.rs --emit obj -o $(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n \t$(RUSTC) foo.rs --emit obj=$(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n+\t$(RUSTC) foo.rs --emit=obj=$(TMPDIR)/foo\n+\trm $(TMPDIR)/foo\n \t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n \n \t$(RUSTC) foo.rs --emit link -o $(TMPDIR)/$(call BIN,foo)\n \trm $(TMPDIR)/$(call BIN,foo)\n \t$(RUSTC) foo.rs --emit link=$(TMPDIR)/$(call BIN,foo)\n \trm $(TMPDIR)/$(call BIN,foo)\n+\t$(RUSTC) foo.rs --emit=link=$(TMPDIR)/$(call BIN,foo)\n+\trm $(TMPDIR)/$(call BIN,foo)\n \trm -f $(TMPDIR)/foo.pdb\n \t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n \n \t$(RUSTC) foo.rs --crate-type=rlib -o $(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n \t$(RUSTC) foo.rs --crate-type=rlib --emit link=$(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n+\t$(RUSTC) foo.rs --crate-type=rlib --emit=link=$(TMPDIR)/foo\n+\trm $(TMPDIR)/foo\n \t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n \n \t$(RUSTC) foo.rs --crate-type=dylib -o $(TMPDIR)/$(call BIN,foo)\n \trm $(TMPDIR)/$(call BIN,foo)\n \t$(RUSTC) foo.rs --crate-type=dylib --emit link=$(TMPDIR)/$(call BIN,foo)\n \trm $(TMPDIR)/$(call BIN,foo)\n+\t$(RUSTC) foo.rs --crate-type=dylib --emit=link=$(TMPDIR)/$(call BIN,foo)\n+\trm $(TMPDIR)/$(call BIN,foo)\n \trm -f $(TMPDIR)/foo.{exp,lib,pdb}\n \t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n \n \t$(RUSTC) foo.rs --crate-type=staticlib -o $(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n \t$(RUSTC) foo.rs --crate-type=staticlib --emit link=$(TMPDIR)/foo\n \trm $(TMPDIR)/foo\n+\t$(RUSTC) foo.rs --crate-type=staticlib --emit=link=$(TMPDIR)/foo\n+\trm $(TMPDIR)/foo\n \t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n \n \t$(RUSTC) foo.rs --crate-type=bin -o $(TMPDIR)/$(call BIN,foo)\n \trm $(TMPDIR)/$(call BIN,foo)\n \t$(RUSTC) foo.rs --crate-type=bin --emit link=$(TMPDIR)/$(call BIN,foo)\n \trm $(TMPDIR)/$(call BIN,foo)\n+\t$(RUSTC) foo.rs --crate-type=bin --emit=link=$(TMPDIR)/$(call BIN,foo)\n+\trm $(TMPDIR)/$(call BIN,foo)\n \trm -f $(TMPDIR)/foo.pdb\n \t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n \n@@ -98,6 +116,17 @@ all:\n \trm $(TMPDIR)/bc\n \trm $(TMPDIR)/obj\n \trm $(TMPDIR)/link\n+\t$(RUSTC) foo.rs --emit=asm=$(TMPDIR)/asm \\\n+\t\t\t--emit llvm-ir=$(TMPDIR)/ir \\\n+\t\t\t--emit=llvm-bc=$(TMPDIR)/bc \\\n+\t\t        --emit obj=$(TMPDIR)/obj \\\n+\t\t\t--emit=link=$(TMPDIR)/link \\\n+\t\t\t--crate-type=staticlib\n+\trm $(TMPDIR)/asm\n+\trm $(TMPDIR)/ir\n+\trm $(TMPDIR)/bc\n+\trm $(TMPDIR)/obj\n+\trm $(TMPDIR)/link\n \t[ \"$$(ls -1 $(TMPDIR) | wc -l)\" -eq \"0\" ]\n \n \t$(RUSTC) foo.rs --emit=asm,llvm-ir,llvm-bc,obj,link --crate-type=staticlib"}]}