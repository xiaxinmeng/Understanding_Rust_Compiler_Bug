{"sha": "2bafbba655888c288e43ce107cc4bfdf6e758ca3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiYWZiYmE2NTU4ODhjMjg4ZTQzY2UxMDdjYzRiZmRmNmU3NThjYTM=", "commit": {"author": {"name": "Sergey Pepyakin", "email": "s.pepyakin@gmail.com", "date": "2017-01-19T19:31:57Z"}, "committer": {"name": "Sergey Pepyakin", "email": "s.pepyakin@gmail.com", "date": "2017-01-19T19:33:15Z"}, "message": "tell emcc stip exception handling if panic rt used", "tree": {"sha": "de46384c7a3ae8e6027292dcc0f855c115e903da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de46384c7a3ae8e6027292dcc0f855c115e903da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bafbba655888c288e43ce107cc4bfdf6e758ca3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bafbba655888c288e43ce107cc4bfdf6e758ca3", "html_url": "https://github.com/rust-lang/rust/commit/2bafbba655888c288e43ce107cc4bfdf6e758ca3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bafbba655888c288e43ce107cc4bfdf6e758ca3/comments", "author": {"login": "pepyakin", "id": 2205845, "node_id": "MDQ6VXNlcjIyMDU4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2205845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pepyakin", "html_url": "https://github.com/pepyakin", "followers_url": "https://api.github.com/users/pepyakin/followers", "following_url": "https://api.github.com/users/pepyakin/following{/other_user}", "gists_url": "https://api.github.com/users/pepyakin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pepyakin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pepyakin/subscriptions", "organizations_url": "https://api.github.com/users/pepyakin/orgs", "repos_url": "https://api.github.com/users/pepyakin/repos", "events_url": "https://api.github.com/users/pepyakin/events{/privacy}", "received_events_url": "https://api.github.com/users/pepyakin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pepyakin", "id": 2205845, "node_id": "MDQ6VXNlcjIyMDU4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2205845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pepyakin", "html_url": "https://github.com/pepyakin", "followers_url": "https://api.github.com/users/pepyakin/followers", "following_url": "https://api.github.com/users/pepyakin/following{/other_user}", "gists_url": "https://api.github.com/users/pepyakin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pepyakin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pepyakin/subscriptions", "organizations_url": "https://api.github.com/users/pepyakin/orgs", "repos_url": "https://api.github.com/users/pepyakin/repos", "events_url": "https://api.github.com/users/pepyakin/events{/privacy}", "received_events_url": "https://api.github.com/users/pepyakin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47965f51e6d91ae33bf2b0da0f5510f03766feac", "url": "https://api.github.com/repos/rust-lang/rust/commits/47965f51e6d91ae33bf2b0da0f5510f03766feac", "html_url": "https://github.com/rust-lang/rust/commit/47965f51e6d91ae33bf2b0da0f5510f03766feac"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "4d38b0d1705962afa24e58c81801073ea0569d67", "filename": "src/librustc_back/target/asmjs_unknown_emscripten.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2bafbba655888c288e43ce107cc4bfdf6e758ca3/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bafbba655888c288e43ce107cc4bfdf6e758ca3/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs?ref=2bafbba655888c288e43ce107cc4bfdf6e758ca3", "patch": "@@ -22,6 +22,7 @@ pub fn target() -> Result<Target, String> {\n         linker_is_gnu: true,\n         allow_asm: false,\n         obj_is_bitcode: true,\n+        is_like_emscripten: true,\n         max_atomic_width: Some(32),\n         post_link_args: vec![\"-s\".to_string(), \"ERROR_ON_UNDEFINED_SYMBOLS=1\".to_string()],\n         target_family: Some(\"unix\".to_string()),"}, {"sha": "9c30057d4189c620176aafbee46235ebe963d5df", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2bafbba655888c288e43ce107cc4bfdf6e758ca3/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bafbba655888c288e43ce107cc4bfdf6e758ca3/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=2bafbba655888c288e43ce107cc4bfdf6e758ca3", "patch": "@@ -330,6 +330,10 @@ pub struct TargetOptions {\n     /// Whether the target toolchain is like Android's. Only useful for compiling against Android.\n     /// Defaults to false.\n     pub is_like_android: bool,\n+    /// Whether the target toolchain is like Emscripten's. Only useful for compiling with\n+    /// Emscripten toolchain.\n+    /// Defaults to false.\n+    pub is_like_emscripten: bool,\n     /// Whether the linker support GNU-like arguments such as -O. Defaults to false.\n     pub linker_is_gnu: bool,\n     /// The MinGW toolchain has a known issue that prevents it from correctly\n@@ -428,6 +432,7 @@ impl Default for TargetOptions {\n             is_like_solaris: false,\n             is_like_windows: false,\n             is_like_android: false,\n+            is_like_emscripten: false,\n             is_like_msvc: false,\n             linker_is_gnu: false,\n             allows_weak_linkage: true,"}, {"sha": "b1967fa8f37a7aea5c3052d48d45e24bfbbf4098", "filename": "src/librustc_back/target/wasm32_unknown_emscripten.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2bafbba655888c288e43ce107cc4bfdf6e758ca3/src%2Flibrustc_back%2Ftarget%2Fwasm32_unknown_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bafbba655888c288e43ce107cc4bfdf6e758ca3/src%2Flibrustc_back%2Ftarget%2Fwasm32_unknown_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwasm32_unknown_emscripten.rs?ref=2bafbba655888c288e43ce107cc4bfdf6e758ca3", "patch": "@@ -24,6 +24,7 @@ pub fn target() -> Result<Target, String> {\n         linker_is_gnu: true,\n         allow_asm: false,\n         obj_is_bitcode: true,\n+        is_like_emscripten: true,\n         max_atomic_width: Some(32),\n         post_link_args: vec![\"-s\".to_string(), \"BINARYEN=1\".to_string(),\n                              \"-s\".to_string(), \"ERROR_ON_UNDEFINED_SYMBOLS=1\".to_string()],"}, {"sha": "2da042da8aa50907939d1e452bb4bdfd14d2a712", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2bafbba655888c288e43ce107cc4bfdf6e758ca3/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bafbba655888c288e43ce107cc4bfdf6e758ca3/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=2bafbba655888c288e43ce107cc4bfdf6e758ca3", "patch": "@@ -29,6 +29,7 @@ use rustc::dep_graph::DepNode;\n use rustc::hir::def_id::CrateNum;\n use rustc::hir::svh::Svh;\n use rustc_back::tempdir::TempDir;\n+use rustc_back::PanicStrategy;\n use rustc_incremental::IncrementalHashesMap;\n \n use std::ascii;\n@@ -712,6 +713,11 @@ fn link_natively(sess: &Session,\n         cmd.arg(root.join(obj));\n     }\n \n+    if sess.target.target.options.is_like_emscripten &&\n+       sess.panic_strategy() == PanicStrategy::Abort {\n+        cmd.arg(\"-s DISABLE_EXCEPTION_CATCHING=1\");\n+    }\n+\n     {\n         let mut linker = trans.linker_info.to_linker(&mut cmd, &sess);\n         link_args(&mut *linker, sess, crate_type, tmpdir,"}]}