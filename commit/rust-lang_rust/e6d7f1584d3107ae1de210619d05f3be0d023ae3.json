{"sha": "e6d7f1584d3107ae1de210619d05f3be0d023ae3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ZDdmMTU4NGQzMTA3YWUxZGUyMTA2MTlkMDVmM2JlMGQwMjNhZTM=", "commit": {"author": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-02-25T14:39:01Z"}, "committer": {"name": "Markus Westerlind", "email": "markus.westerlind@distilnetworks.com", "date": "2020-05-05T09:24:36Z"}, "message": "simplify", "tree": {"sha": "e90c1a7012557d75f2193fe81983e6c0d9a3212e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e90c1a7012557d75f2193fe81983e6c0d9a3212e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6d7f1584d3107ae1de210619d05f3be0d023ae3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6d7f1584d3107ae1de210619d05f3be0d023ae3", "html_url": "https://github.com/rust-lang/rust/commit/e6d7f1584d3107ae1de210619d05f3be0d023ae3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6d7f1584d3107ae1de210619d05f3be0d023ae3/comments", "author": null, "committer": null, "parents": [{"sha": "f45d852dcc399991a3bcd2cf58921735e560b22c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f45d852dcc399991a3bcd2cf58921735e560b22c", "html_url": "https://github.com/rust-lang/rust/commit/f45d852dcc399991a3bcd2cf58921735e560b22c"}], "stats": {"total": 26, "additions": 6, "deletions": 20}, "files": [{"sha": "a2cf772e86ec1f925810bd5b7770cb7030fbcd44", "filename": "src/librustc_infer/infer/mod.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e6d7f1584d3107ae1de210619d05f3be0d023ae3/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6d7f1584d3107ae1de210619d05f3be0d023ae3/src%2Flibrustc_infer%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fmod.rs?ref=e6d7f1584d3107ae1de210619d05f3be0d023ae3", "patch": "@@ -347,7 +347,7 @@ pub(crate) type UnificationTable<'a, 'tcx, T> =\n     ut::UnificationTable<ut::InPlace<T, &'a mut ut::UnificationStorage<T>, &'a mut Logs<'tcx>>>;\n \n struct RollbackView<'tcx, 'a> {\n-    type_variables: type_variable::RollbackView<'tcx, 'a>,\n+    type_variables: &'a mut type_variable::TypeVariableStorage<'tcx>,\n     const_unification_table: &'a mut ut::UnificationStorage<ty::ConstVid<'tcx>>,\n     int_unification_table: &'a mut ut::UnificationStorage<ty::IntVid>,\n     float_unification_table: &'a mut ut::UnificationStorage<ty::FloatVid>,\n@@ -420,7 +420,8 @@ impl<'tcx> Snapshots<UndoLog<'tcx>> for Logs<'tcx> {\n     }\n \n     fn start_snapshot(&mut self) -> Self::Snapshot {\n-        unreachable!()\n+        self.num_open_snapshots += 1;\n+        Snapshot { undo_len: self.logs.len(), _marker: PhantomData }\n     }\n \n     fn rollback_to<R>(&mut self, values: impl FnOnce() -> R, snapshot: Self::Snapshot)\n@@ -1056,10 +1057,8 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n \n         let mut inner = self.inner.borrow_mut();\n \n-        inner.undo_log.num_open_snapshots += 1;\n-        let undo_snapshot = Snapshot { undo_len: inner.undo_log.logs.len(), _marker: PhantomData };\n         CombinedSnapshot {\n-            undo_snapshot,\n+            undo_snapshot: inner.undo_log.start_snapshot(),\n             universe: self.universe(),\n             was_in_snapshot: in_snapshot,\n             // Borrow tables \"in progress\" (i.e., during typeck)\n@@ -1089,7 +1088,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         } = &mut *self.inner.borrow_mut();\n         undo_log.rollback_to(\n             || RollbackView {\n-                type_variables: type_variable::RollbackView::from(type_variables),\n+                type_variables,\n                 const_unification_table,\n                 int_unification_table,\n                 float_unification_table,"}, {"sha": "26673cff1e8f63456a424a0e977d69af5f9276f8", "filename": "src/librustc_infer/infer/type_variable.rs", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e6d7f1584d3107ae1de210619d05f3be0d023ae3/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6d7f1584d3107ae1de210619d05f3be0d023ae3/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ftype_variable.rs?ref=e6d7f1584d3107ae1de210619d05f3be0d023ae3", "patch": "@@ -43,20 +43,7 @@ impl<'tcx> From<Instantiate> for UndoLog<'tcx> {\n     }\n }\n \n-pub(crate) struct RollbackView<'tcx, 'a> {\n-    pub(crate) eq_relations: &'a mut ut::UnificationStorage<TyVidEqKey<'tcx>>,\n-    pub(crate) sub_relations: &'a mut ut::UnificationStorage<ty::TyVid>,\n-    pub(crate) values: &'a mut Vec<TypeVariableData>,\n-}\n-\n-impl<'tcx, 'a> From<&'a mut TypeVariableStorage<'tcx>> for RollbackView<'tcx, 'a> {\n-    fn from(l: &'a mut TypeVariableStorage<'tcx>) -> Self {\n-        let TypeVariableStorage { eq_relations, sub_relations, values } = l;\n-        Self { eq_relations, sub_relations, values }\n-    }\n-}\n-\n-impl<'tcx> Rollback<UndoLog<'tcx>> for RollbackView<'tcx, '_> {\n+impl<'tcx> Rollback<UndoLog<'tcx>> for TypeVariableStorage<'tcx> {\n     fn reverse(&mut self, undo: UndoLog<'tcx>) {\n         match undo {\n             UndoLog::EqRelation(undo) => self.eq_relations.reverse(undo),"}]}