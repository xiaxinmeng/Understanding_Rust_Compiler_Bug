{"sha": "7ffd5233548b841b770b05a915ac6d103334c64f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmZmQ1MjMzNTQ4Yjg0MWI3NzBiMDVhOTE1YWM2ZDEwMzMzNGM2NGY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-16T02:08:50Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-20T22:19:35Z"}, "message": "core: Update clone docs", "tree": {"sha": "5899020e7b1b205530ce34fb1bcd3f5e3e04a8fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5899020e7b1b205530ce34fb1bcd3f5e3e04a8fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ffd5233548b841b770b05a915ac6d103334c64f", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ffd5233548b841b770b05a915ac6d103334c64f", "html_url": "https://github.com/rust-lang/rust/commit/7ffd5233548b841b770b05a915ac6d103334c64f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ffd5233548b841b770b05a915ac6d103334c64f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26babaafcdbcfdf2e842d84dbeabbed0dae6efef", "url": "https://api.github.com/repos/rust-lang/rust/commits/26babaafcdbcfdf2e842d84dbeabbed0dae6efef", "html_url": "https://github.com/rust-lang/rust/commit/26babaafcdbcfdf2e842d84dbeabbed0dae6efef"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "2965b31a8c390a9dfe49db01667a669788af2825", "filename": "src/libcore/clone.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7ffd5233548b841b770b05a915ac6d103334c64f/src%2Flibcore%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ffd5233548b841b770b05a915ac6d103334c64f/src%2Flibcore%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fclone.rs?ref=7ffd5233548b841b770b05a915ac6d103334c64f", "patch": "@@ -25,8 +25,9 @@ by convention implementing the `Clone` trait and calling the\n use core::kinds::Const;\n \n pub trait Clone {\n-    /// Return a deep copy of the owned object tree. Types with shared ownership like managed boxes\n-    /// are cloned with a shallow copy.\n+    /// Returns a copy of the value. The contents of owned pointers\n+    /// are copied to maintain uniqueness, while the contents of\n+    /// managed pointers are not copied.\n     fn clone(&self) -> Self;\n }\n \n@@ -85,8 +86,9 @@ clone_impl!(bool)\n clone_impl!(char)\n \n pub trait DeepClone {\n-    /// Return a deep copy of the object tree. Types with shared ownership are also copied via a\n-    /// deep copy, unlike `Clone`.\n+    /// Return a deep copy of the value. Unlike `Clone`, the contents of shared pointer types\n+    /// *are* copied. Note that this is currently unimplemented for managed boxes, as\n+    /// it would need to handle cycles, but it is implemented for other smart-pointer types.\n     fn deep_clone(&self) -> Self;\n }\n "}]}