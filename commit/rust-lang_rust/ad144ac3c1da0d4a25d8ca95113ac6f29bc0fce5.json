{"sha": "ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkMTQ0YWMzYzFkYTBkNGEyNWQ4Y2E5NTExM2FjNmYyOWJjMGZjZTU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-10-23T17:07:34Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-10-23T17:07:34Z"}, "message": "Modify invalid macro in expression context diagnostic", "tree": {"sha": "b5f92e6875f8e8e002a8bf51b93f52f439ca222e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5f92e6875f8e8e002a8bf51b93f52f439ca222e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5", "html_url": "https://github.com/rust-lang/rust/commit/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8544db0faa9e0f7a70323ad5f3e75358bba6820d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8544db0faa9e0f7a70323ad5f3e75358bba6820d", "html_url": "https://github.com/rust-lang/rust/commit/8544db0faa9e0f7a70323ad5f3e75358bba6820d"}], "stats": {"total": 125, "additions": 91, "deletions": 34}, "files": [{"sha": "436e0b53a76915c732c618cb212b191bb0d945db", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5", "patch": "@@ -1036,10 +1036,26 @@ impl<'a> Parser<'a> {\n             // Avoid emitting backtrace info twice.\n             let def_site_span = self.span.with_ctxt(SyntaxContext::empty());\n             let mut err = self.diagnostic().struct_span_err(def_site_span, &msg);\n-            let msg = format!(\"caused by the macro expansion here; the usage \\\n-                               of `{}!` is likely invalid in {} context\",\n-                               macro_path, kind_name);\n-            err.span_note(span, &msg).emit();\n+            err.span_label(span, \"caused by the macro expansion here\");\n+            let msg = format!(\n+                \"the usage of `{}!` is likely invalid in {} context\",\n+                macro_path,\n+                kind_name,\n+            );\n+            err.note(&msg);\n+            let semi_span = self.sess.source_map().next_point(span);\n+            match self.sess.source_map().span_to_snippet(semi_span) {\n+                Ok(ref snippet) if &snippet[..] != \";\" && kind_name == \"expression\" => {\n+                    err.span_suggestion_with_applicability(\n+                        semi_span,\n+                        \"you might be missing a semicolon here\",\n+                        \";\".to_owned(),\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                }\n+                _ => {}\n+            }\n+            err.emit();\n         }\n     }\n }"}, {"sha": "028ed048d6525c768d29334178b0f0fcc2fd4401", "filename": "src/test/ui/issues/issue-30007.stderr", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/src%2Ftest%2Fui%2Fissues%2Fissue-30007.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/src%2Ftest%2Fui%2Fissues%2Fissue-30007.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30007.stderr?ref=ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5", "patch": "@@ -3,12 +3,11 @@ error: macro expansion ignores token `;` and any following\n    |\n LL |     () => ( String ; );     //~ ERROR macro expansion ignores token `;`\n    |                    ^\n-   |\n-note: caused by the macro expansion here; the usage of `t!` is likely invalid in type context\n-  --> $DIR/issue-30007.rs:16:16\n-   |\n+...\n LL |     let i: Vec<t!()>;\n-   |                ^^^^\n+   |                ---- caused by the macro expansion here\n+   |\n+   = note: the usage of `t!` is likely invalid in type context\n \n error: aborting due to previous error\n "}, {"sha": "5ea7825080c2449fe116559d99bd243205facb49", "filename": "src/test/ui/macros/macro-context.stderr", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/src%2Ftest%2Fui%2Fmacros%2Fmacro-context.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/src%2Ftest%2Fui%2Fmacros%2Fmacro-context.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-context.stderr?ref=ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5", "patch": "@@ -3,36 +3,35 @@ error: macro expansion ignores token `;` and any following\n    |\n LL |     () => ( i ; typeof );   //~ ERROR expected expression, found reserved keyword `typeof`\n    |               ^\n-   |\n-note: caused by the macro expansion here; the usage of `m!` is likely invalid in type context\n-  --> $DIR/macro-context.rs:20:12\n-   |\n+...\n LL |     let a: m!();\n-   |            ^^^^\n+   |            ---- caused by the macro expansion here\n+   |\n+   = note: the usage of `m!` is likely invalid in type context\n \n error: macro expansion ignores token `typeof` and any following\n   --> $DIR/macro-context.rs:13:17\n    |\n LL |     () => ( i ; typeof );   //~ ERROR expected expression, found reserved keyword `typeof`\n    |                 ^^^^^^\n-   |\n-note: caused by the macro expansion here; the usage of `m!` is likely invalid in expression context\n-  --> $DIR/macro-context.rs:21:13\n-   |\n+...\n LL |     let i = m!();\n-   |             ^^^^\n+   |             ----- help: you might be missing a semicolon here: `;`\n+   |             |\n+   |             caused by the macro expansion here\n+   |\n+   = note: the usage of `m!` is likely invalid in expression context\n \n error: macro expansion ignores token `;` and any following\n   --> $DIR/macro-context.rs:13:15\n    |\n LL |     () => ( i ; typeof );   //~ ERROR expected expression, found reserved keyword `typeof`\n    |               ^\n-   |\n-note: caused by the macro expansion here; the usage of `m!` is likely invalid in pattern context\n-  --> $DIR/macro-context.rs:23:9\n-   |\n+...\n LL |         m!() => {}\n-   |         ^^^^\n+   |         ---- caused by the macro expansion here\n+   |\n+   = note: the usage of `m!` is likely invalid in pattern context\n \n error: expected expression, found reserved keyword `typeof`\n   --> $DIR/macro-context.rs:13:17"}, {"sha": "df36db0f49e72b6a46186e169bd7c34bc3a426db", "filename": "src/test/ui/macros/macro-in-expression-context.fixed", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.fixed?ref=ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5", "patch": "@@ -0,0 +1,15 @@\n+// run-rustfix\n+\n+macro_rules! foo {\n+    () => {\n+        assert_eq!(\"A\", \"A\");\n+        assert_eq!(\"B\", \"B\");\n+    }\n+    //~^^ ERROR macro expansion ignores token `assert_eq` and any following\n+    //~| NOTE the usage of `foo!` is likely invalid in expression context\n+}\n+\n+fn main() {\n+    foo!();\n+    //~^ NOTE caused by the macro expansion here\n+}"}, {"sha": "b3f5e568967e8604a1ae0153575140d0e6113128", "filename": "src/test/ui/macros/macro-in-expression-context.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.rs?ref=ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5", "patch": "@@ -0,0 +1,15 @@\n+// run-rustfix\n+\n+macro_rules! foo {\n+    () => {\n+        assert_eq!(\"A\", \"A\");\n+        assert_eq!(\"B\", \"B\");\n+    }\n+    //~^^ ERROR macro expansion ignores token `assert_eq` and any following\n+    //~| NOTE the usage of `foo!` is likely invalid in expression context\n+}\n+\n+fn main() {\n+    foo!()\n+    //~^ NOTE caused by the macro expansion here\n+}"}, {"sha": "d27d6fbaef7a68fef3f963bf260ca75ba5a375a6", "filename": "src/test/ui/macros/macro-in-expression-context.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context.stderr?ref=ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5", "patch": "@@ -0,0 +1,15 @@\n+error: macro expansion ignores token `assert_eq` and any following\n+  --> $DIR/macro-in-expression-context.rs:6:9\n+   |\n+LL |         assert_eq!(\"B\", \"B\");\n+   |         ^^^^^^^^^\n+...\n+LL |     foo!()\n+   |     ------- help: you might be missing a semicolon here: `;`\n+   |     |\n+   |     caused by the macro expansion here\n+   |\n+   = note: the usage of `foo!` is likely invalid in expression context\n+\n+error: aborting due to previous error\n+"}, {"sha": "806aca511d0ae9483b79a6258421b903a65b85f7", "filename": "src/test/ui/parser/macro/macro-incomplete-parse.stderr", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-incomplete-parse.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-incomplete-parse.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-incomplete-parse.stderr?ref=ad144ac3c1da0d4a25d8ca95113ac6f29bc0fce5", "patch": "@@ -3,12 +3,11 @@ error: macro expansion ignores token `,` and any following\n    |\n LL |         , //~ ERROR macro expansion ignores token `,`\n    |         ^\n-   |\n-note: caused by the macro expansion here; the usage of `ignored_item!` is likely invalid in item context\n-  --> $DIR/macro-incomplete-parse.rs:31:1\n-   |\n+...\n LL | ignored_item!();\n-   | ^^^^^^^^^^^^^^^^\n+   | ---------------- caused by the macro expansion here\n+   |\n+   = note: the usage of `ignored_item!` is likely invalid in item context\n \n error: expected one of `.`, `;`, `?`, `}`, or an operator, found `,`\n   --> $DIR/macro-incomplete-parse.rs:22:14\n@@ -24,12 +23,11 @@ error: macro expansion ignores token `,` and any following\n    |\n LL |     () => ( 1, 2 ) //~ ERROR macro expansion ignores token `,`\n    |              ^\n-   |\n-note: caused by the macro expansion here; the usage of `ignored_pat!` is likely invalid in pattern context\n-  --> $DIR/macro-incomplete-parse.rs:36:9\n-   |\n+...\n LL |         ignored_pat!() => (),\n-   |         ^^^^^^^^^^^^^^\n+   |         -------------- caused by the macro expansion here\n+   |\n+   = note: the usage of `ignored_pat!` is likely invalid in pattern context\n \n error: aborting due to 3 previous errors\n "}]}