{"sha": "f354d72536fee00eb7e0522c8185879c7d1b0641", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNTRkNzI1MzZmZWUwMGViN2UwNTIyYzgxODU4NzljN2QxYjA2NDE=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2016-10-19T05:00:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-19T05:00:05Z"}, "message": "Rollup merge of #37267 - nnethercote:opt-write_metadata, r=eddyb\n\nOptimize `write_metadata`.\n\n`write_metadata` currently generates metadata unnecessarily in some\ncases, and also compresses it unnecessarily in some cases. This commit\nfixes that. It speeds up three of the rustc-benchmarks by 1--4%.\n\nr? @eddyb, who deserves much of the credit because he (a) identified the problem from the profile data I provided in #37086, and (b) explained to me how to fix it. Thank you, @eddyb!", "tree": {"sha": "607bd7e44e220b55cfad4f5789fa45eb53265d47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/607bd7e44e220b55cfad4f5789fa45eb53265d47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f354d72536fee00eb7e0522c8185879c7d1b0641", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f354d72536fee00eb7e0522c8185879c7d1b0641", "html_url": "https://github.com/rust-lang/rust/commit/f354d72536fee00eb7e0522c8185879c7d1b0641", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f354d72536fee00eb7e0522c8185879c7d1b0641/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "988831319e96a0cf9abcb3feb9a8da899bdb5624", "url": "https://api.github.com/repos/rust-lang/rust/commits/988831319e96a0cf9abcb3feb9a8da899bdb5624", "html_url": "https://github.com/rust-lang/rust/commit/988831319e96a0cf9abcb3feb9a8da899bdb5624"}, {"sha": "016f69f459d1b3819aa7c9d632a0dc78c7764406", "url": "https://api.github.com/repos/rust-lang/rust/commits/016f69f459d1b3819aa7c9d632a0dc78c7764406", "html_url": "https://github.com/rust-lang/rust/commit/016f69f459d1b3819aa7c9d632a0dc78c7764406"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "02aa7c069f9b3d478a2fc1ba5d38ca37fb85115c", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f354d72536fee00eb7e0522c8185879c7d1b0641/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f354d72536fee00eb7e0522c8185879c7d1b0641/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=f354d72536fee00eb7e0522c8185879c7d1b0641", "patch": "@@ -1250,12 +1250,27 @@ fn write_metadata(cx: &SharedCrateContext,\n                   reachable_ids: &NodeSet) -> Vec<u8> {\n     use flate;\n \n-    let any_library = cx.sess()\n-                        .crate_types\n-                        .borrow()\n-                        .iter()\n-                        .any(|ty| *ty != config::CrateTypeExecutable);\n-    if !any_library {\n+    #[derive(PartialEq, Eq, PartialOrd, Ord)]\n+    enum MetadataKind {\n+        None,\n+        Uncompressed,\n+        Compressed\n+    }\n+\n+    let kind = cx.sess().crate_types.borrow().iter().map(|ty| {\n+        match *ty {\n+            config::CrateTypeExecutable |\n+            config::CrateTypeStaticlib |\n+            config::CrateTypeCdylib => MetadataKind::None,\n+\n+            config::CrateTypeRlib => MetadataKind::Uncompressed,\n+\n+            config::CrateTypeDylib |\n+            config::CrateTypeProcMacro => MetadataKind::Compressed,\n+        }\n+    }).max().unwrap();\n+\n+    if kind == MetadataKind::None {\n         return Vec::new();\n     }\n \n@@ -1265,6 +1280,11 @@ fn write_metadata(cx: &SharedCrateContext,\n                                           cx.link_meta(),\n                                           reachable_ids,\n                                           cx.mir_map());\n+    if kind == MetadataKind::Uncompressed {\n+        return metadata;\n+    }\n+\n+    assert!(kind == MetadataKind::Compressed);\n     let mut compressed = cstore.metadata_encoding_version().to_vec();\n     compressed.extend_from_slice(&flate::deflate_bytes(&metadata));\n "}]}