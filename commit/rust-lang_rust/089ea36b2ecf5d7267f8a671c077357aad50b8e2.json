{"sha": "089ea36b2ecf5d7267f8a671c077357aad50b8e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4OWVhMzZiMmVjZjVkNzI2N2Y4YTY3MWMwNzczNTdhYWQ1MGI4ZTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-24T15:11:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-24T15:11:07Z"}, "message": "Don't watch dirs if not asked to", "tree": {"sha": "f235bc9d229feda0490f2e10fb4373dcee8e071c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f235bc9d229feda0490f2e10fb4373dcee8e071c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/089ea36b2ecf5d7267f8a671c077357aad50b8e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/089ea36b2ecf5d7267f8a671c077357aad50b8e2", "html_url": "https://github.com/rust-lang/rust/commit/089ea36b2ecf5d7267f8a671c077357aad50b8e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/089ea36b2ecf5d7267f8a671c077357aad50b8e2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a3b507a007d0373a83bde203d780b860ea55ce1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a3b507a007d0373a83bde203d780b860ea55ce1", "html_url": "https://github.com/rust-lang/rust/commit/1a3b507a007d0373a83bde203d780b860ea55ce1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2e60fe23bdcbf3d45924bebc41a0f0b9cefde6e0", "filename": "crates/vfs-notify/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/089ea36b2ecf5d7267f8a671c077357aad50b8e2/crates%2Fvfs-notify%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/089ea36b2ecf5d7267f8a671c077357aad50b8e2/crates%2Fvfs-notify%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs-notify%2Fsrc%2Flib.rs?ref=089ea36b2ecf5d7267f8a671c077357aad50b8e2", "patch": "@@ -199,7 +199,7 @@ impl LoaderActor {\n                         let is_dir = entry.file_type().is_dir();\n                         let is_file = entry.file_type().is_file();\n                         let abs_path = AbsPathBuf::try_from(entry.into_path()).unwrap();\n-                        if is_dir {\n+                        if is_dir && watch {\n                             self.watch(abs_path.clone());\n                         }\n                         let rel_path = abs_path.strip_prefix(&path)?;"}]}