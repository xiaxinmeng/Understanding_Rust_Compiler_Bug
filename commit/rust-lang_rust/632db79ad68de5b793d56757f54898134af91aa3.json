{"sha": "632db79ad68de5b793d56757f54898134af91aa3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMmRiNzlhZDY4ZGU1Yjc5M2Q1Njc1N2Y1NDg5ODEzNGFmOTFhYTM=", "commit": {"author": {"name": "Surya Midatala", "email": "surya.midatala@nutanix.com", "date": "2020-08-19T04:59:31Z"}, "committer": {"name": "Surya Midatala", "email": "surya.midatala@nutanix.com", "date": "2020-08-19T04:59:31Z"}, "message": "Apply suggestions from code review", "tree": {"sha": "728ded3afff89b26ec9aa23ba109bd6772d55d32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/728ded3afff89b26ec9aa23ba109bd6772d55d32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/632db79ad68de5b793d56757f54898134af91aa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/632db79ad68de5b793d56757f54898134af91aa3", "html_url": "https://github.com/rust-lang/rust/commit/632db79ad68de5b793d56757f54898134af91aa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/632db79ad68de5b793d56757f54898134af91aa3/comments", "author": {"login": "surya-midatala", "id": 53327806, "node_id": "MDQ6VXNlcjUzMzI3ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/53327806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/surya-midatala", "html_url": "https://github.com/surya-midatala", "followers_url": "https://api.github.com/users/surya-midatala/followers", "following_url": "https://api.github.com/users/surya-midatala/following{/other_user}", "gists_url": "https://api.github.com/users/surya-midatala/gists{/gist_id}", "starred_url": "https://api.github.com/users/surya-midatala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/surya-midatala/subscriptions", "organizations_url": "https://api.github.com/users/surya-midatala/orgs", "repos_url": "https://api.github.com/users/surya-midatala/repos", "events_url": "https://api.github.com/users/surya-midatala/events{/privacy}", "received_events_url": "https://api.github.com/users/surya-midatala/received_events", "type": "User", "site_admin": false}, "committer": {"login": "surya-midatala", "id": 53327806, "node_id": "MDQ6VXNlcjUzMzI3ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/53327806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/surya-midatala", "html_url": "https://github.com/surya-midatala", "followers_url": "https://api.github.com/users/surya-midatala/followers", "following_url": "https://api.github.com/users/surya-midatala/following{/other_user}", "gists_url": "https://api.github.com/users/surya-midatala/gists{/gist_id}", "starred_url": "https://api.github.com/users/surya-midatala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/surya-midatala/subscriptions", "organizations_url": "https://api.github.com/users/surya-midatala/orgs", "repos_url": "https://api.github.com/users/surya-midatala/repos", "events_url": "https://api.github.com/users/surya-midatala/events{/privacy}", "received_events_url": "https://api.github.com/users/surya-midatala/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11f69796ee967b39c68a766eb49a9eaed205ff8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/11f69796ee967b39c68a766eb49a9eaed205ff8b", "html_url": "https://github.com/rust-lang/rust/commit/11f69796ee967b39c68a766eb49a9eaed205ff8b"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "30b4bb51eb70e49975bf5b19a10204836c8ee849", "filename": "library/alloc/src/vec.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/632db79ad68de5b793d56757f54898134af91aa3/library%2Falloc%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/632db79ad68de5b793d56757f54898134af91aa3/library%2Falloc%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec.rs?ref=632db79ad68de5b793d56757f54898134af91aa3", "patch": "@@ -368,7 +368,7 @@ impl<T> Vec<T> {\n     /// into a `Vec` with the [`from_raw_parts`] function, allowing\n     /// the destructor to perform the cleanup.\n     ///\n-    /// [`from_raw_parts`]: #method.from_raw_parts\n+    /// [`from_raw_parts`]: Vec::from_raw_parts\n     ///\n     /// # Examples\n     ///\n@@ -722,8 +722,8 @@ impl<T> Vec<T> {\n     /// assert_eq!(vec, []);\n     /// ```\n     ///\n-    /// [`clear`]: #method.clear\n-    /// [`drain`]: #method.drain\n+    /// [`clear`]: Vec::clear\n+    /// [`drain`]: Vec::drain\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn truncate(&mut self, len: usize) {\n         // This is safe because:\n@@ -802,7 +802,7 @@ impl<T> Vec<T> {\n     /// }\n     /// ```\n     ///\n-    /// [`as_mut_ptr`]: #method.as_mut_ptr\n+    /// [`as_mut_ptr`]: Vec::as_mut_ptr\n     #[stable(feature = \"vec_as_ptr\", since = \"1.37.0\")]\n     #[inline]\n     pub fn as_ptr(&self) -> *const T {\n@@ -858,17 +858,17 @@ impl<T> Vec<T> {\n     /// is done using one of the safe operations instead, such as\n     /// [`truncate`], [`resize`], [`extend`], or [`clear`].\n     ///\n-    /// [`truncate`]: #method.truncate\n-    /// [`resize`]: #method.resize\n+    /// [`truncate`]: Vec::truncate\n+    /// [`resize`]: Vec::resize\n     /// [`extend`]: Extend::extend\n-    /// [`clear`]: #method.clear\n+    /// [`clear`]: Vec::clear\n     ///\n     /// # Safety\n     ///\n     /// - `new_len` must be less than or equal to [`capacity()`].\n     /// - The elements at `old_len..new_len` must be initialized.\n     ///\n-    /// [`capacity()`]: #method.capacity\n+    /// [`capacity()`]: Vec::capacity\n     ///\n     /// # Examples\n     ///\n@@ -1470,7 +1470,7 @@ impl<T> Vec<T> {\n     /// assert_eq!(vec, [2, 4, 8, 16]);\n     /// ```\n     ///\n-    /// [`resize`]: #method.resize\n+    /// [`resize`]: Vec::resize\n     #[stable(feature = \"vec_resize_with\", since = \"1.33.0\")]\n     pub fn resize_with<F>(&mut self, new_len: usize, f: F)\n     where\n@@ -1521,7 +1521,7 @@ impl<T> Vec<T> {\n     /// reading from a file) before marking the data as initialized using the\n     /// [`set_len`] method.\n     ///\n-    /// [`set_len`]: #method.set_len\n+    /// [`set_len`]: Vec::set_len\n     ///\n     /// # Examples\n     ///\n@@ -1580,7 +1580,7 @@ impl<T: Clone> Vec<T> {\n     /// assert_eq!(vec, [1, 2]);\n     /// ```\n     ///\n-    /// [`resize_with`]: #method.resize_with\n+    /// [`resize_with`]: Vec::resize_with\n     #[stable(feature = \"vec_resize\", since = \"1.5.0\")]\n     pub fn resize(&mut self, new_len: usize, value: T) {\n         let len = self.len();\n@@ -1642,8 +1642,7 @@ impl<T: Default> Vec<T> {\n     /// assert_eq!(vec, [1, 2]);\n     /// ```\n     ///\n-    /// [`resize`]: #method.resize\n-    /// [`Default::default()`]: Default::default\n+    /// [`resize`]: Vec::resize\n     #[unstable(feature = \"vec_resize_default\", issue = \"41758\")]\n     #[rustc_deprecated(\n         reason = \"This is moving towards being removed in favor \\"}]}