{"sha": "2d7f8b31db062b695175c940d7f0c13281e45bb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkN2Y4YjMxZGIwNjJiNjk1MTc1Yzk0MGQ3ZjBjMTMyODFlNDViYjI=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-01-24T16:43:57Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-01-24T16:43:57Z"}, "message": "Use Self instead of self return type", "tree": {"sha": "90a9becb9a4b0471561120dbafda732cc4956bfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90a9becb9a4b0471561120dbafda732cc4956bfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d7f8b31db062b695175c940d7f0c13281e45bb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d7f8b31db062b695175c940d7f0c13281e45bb2", "html_url": "https://github.com/rust-lang/rust/commit/2d7f8b31db062b695175c940d7f0c13281e45bb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d7f8b31db062b695175c940d7f0c13281e45bb2/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dee12bb2b7d75cce8fc8f21b5d7ea0da920df5e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dee12bb2b7d75cce8fc8f21b5d7ea0da920df5e5", "html_url": "https://github.com/rust-lang/rust/commit/dee12bb2b7d75cce8fc8f21b5d7ea0da920df5e5"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "8ba0e422e8f1358820c785bc146882735f2ad012", "filename": "src/libcore/fmt/builders.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2d7f8b31db062b695175c940d7f0c13281e45bb2/src%2Flibcore%2Ffmt%2Fbuilders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d7f8b31db062b695175c940d7f0c13281e45bb2/src%2Flibcore%2Ffmt%2Fbuilders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fbuilders.rs?ref=2d7f8b31db062b695175c940d7f0c13281e45bb2", "patch": "@@ -133,7 +133,7 @@ impl<'a, 'b: 'a> DebugStruct<'a, 'b> {\n     /// );\n     /// ```\n     #[stable(feature = \"debug_builders\", since = \"1.2.0\")]\n-    pub fn field(&mut self, name: &str, value: &dyn fmt::Debug) -> &mut DebugStruct<'a, 'b> {\n+    pub fn field(&mut self, name: &str, value: &dyn fmt::Debug) -> &mut Self {\n         self.result = self.result.and_then(|_| {\n             if self.is_pretty() {\n                 if !self.has_fields {\n@@ -330,7 +330,7 @@ impl<'a, 'b: 'a> DebugTuple<'a, 'b> {\n     /// );\n     /// ```\n     #[stable(feature = \"debug_builders\", since = \"1.2.0\")]\n-    pub fn field(&mut self, value: &dyn fmt::Debug) -> &mut DebugTuple<'a, 'b> {\n+    pub fn field(&mut self, value: &dyn fmt::Debug) -> &mut Self {\n         self.result = self.result.and_then(|_| {\n             if self.is_pretty() {\n                 if self.fields == 0 {\n@@ -492,7 +492,7 @@ impl<'a, 'b: 'a> DebugSet<'a, 'b> {\n     /// );\n     /// ```\n     #[stable(feature = \"debug_builders\", since = \"1.2.0\")]\n-    pub fn entry(&mut self, entry: &dyn fmt::Debug) -> &mut DebugSet<'a, 'b> {\n+    pub fn entry(&mut self, entry: &dyn fmt::Debug) -> &mut Self {\n         self.inner.entry(entry);\n         self\n     }\n@@ -521,7 +521,7 @@ impl<'a, 'b: 'a> DebugSet<'a, 'b> {\n     /// );\n     /// ```\n     #[stable(feature = \"debug_builders\", since = \"1.2.0\")]\n-    pub fn entries<D, I>(&mut self, entries: I) -> &mut DebugSet<'a, 'b>\n+    pub fn entries<D, I>(&mut self, entries: I) -> &mut Self\n     where\n         D: fmt::Debug,\n         I: IntoIterator<Item = D>,\n@@ -624,7 +624,7 @@ impl<'a, 'b: 'a> DebugList<'a, 'b> {\n     /// );\n     /// ```\n     #[stable(feature = \"debug_builders\", since = \"1.2.0\")]\n-    pub fn entry(&mut self, entry: &dyn fmt::Debug) -> &mut DebugList<'a, 'b> {\n+    pub fn entry(&mut self, entry: &dyn fmt::Debug) -> &mut Self {\n         self.inner.entry(entry);\n         self\n     }\n@@ -653,7 +653,7 @@ impl<'a, 'b: 'a> DebugList<'a, 'b> {\n     /// );\n     /// ```\n     #[stable(feature = \"debug_builders\", since = \"1.2.0\")]\n-    pub fn entries<D, I>(&mut self, entries: I) -> &mut DebugList<'a, 'b>\n+    pub fn entries<D, I>(&mut self, entries: I) -> &mut Self\n     where\n         D: fmt::Debug,\n         I: IntoIterator<Item = D>,\n@@ -760,7 +760,7 @@ impl<'a, 'b: 'a> DebugMap<'a, 'b> {\n     /// );\n     /// ```\n     #[stable(feature = \"debug_builders\", since = \"1.2.0\")]\n-    pub fn entry(&mut self, key: &dyn fmt::Debug, value: &dyn fmt::Debug) -> &mut DebugMap<'a, 'b> {\n+    pub fn entry(&mut self, key: &dyn fmt::Debug, value: &dyn fmt::Debug) -> &mut Self {\n         self.key(key).value(value)\n     }\n \n@@ -797,7 +797,7 @@ impl<'a, 'b: 'a> DebugMap<'a, 'b> {\n     /// );\n     /// ```\n     #[unstable(feature = \"debug_map_key_value\", reason = \"recently added\", issue = \"62482\")]\n-    pub fn key(&mut self, key: &dyn fmt::Debug) -> &mut DebugMap<'a, 'b> {\n+    pub fn key(&mut self, key: &dyn fmt::Debug) -> &mut Self {\n         self.result = self.result.and_then(|_| {\n             assert!(\n                 !self.has_key,\n@@ -862,7 +862,7 @@ impl<'a, 'b: 'a> DebugMap<'a, 'b> {\n     /// );\n     /// ```\n     #[unstable(feature = \"debug_map_key_value\", reason = \"recently added\", issue = \"62482\")]\n-    pub fn value(&mut self, value: &dyn fmt::Debug) -> &mut DebugMap<'a, 'b> {\n+    pub fn value(&mut self, value: &dyn fmt::Debug) -> &mut Self {\n         self.result = self.result.and_then(|_| {\n             assert!(self.has_key, \"attempted to format a map value before its key\");\n \n@@ -908,7 +908,7 @@ impl<'a, 'b: 'a> DebugMap<'a, 'b> {\n     /// );\n     /// ```\n     #[stable(feature = \"debug_builders\", since = \"1.2.0\")]\n-    pub fn entries<K, V, I>(&mut self, entries: I) -> &mut DebugMap<'a, 'b>\n+    pub fn entries<K, V, I>(&mut self, entries: I) -> &mut Self\n     where\n         K: fmt::Debug,\n         V: fmt::Debug,"}]}