{"sha": "6b54b7c9f44713e565743aff3d07ad475c553131", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiNTRiN2M5ZjQ0NzEzZTU2NTc0M2FmZjNkMDdhZDQ3NWM1NTMxMzE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-05T10:16:05Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-05T10:16:05Z"}, "message": "Remove sign extension for ty::Int from CValue::const_val", "tree": {"sha": "26bd6b7afdf11066984d6a6a56eac89c1d93873f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26bd6b7afdf11066984d6a6a56eac89c1d93873f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b54b7c9f44713e565743aff3d07ad475c553131", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b54b7c9f44713e565743aff3d07ad475c553131", "html_url": "https://github.com/rust-lang/rust/commit/6b54b7c9f44713e565743aff3d07ad475c553131", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b54b7c9f44713e565743aff3d07ad475c553131/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "648b634e21a7d8541d84fc454700d5cb7fd7f3f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/648b634e21a7d8541d84fc454700d5cb7fd7f3f4", "html_url": "https://github.com/rust-lang/rust/commit/648b634e21a7d8541d84fc454700d5cb7fd7f3f4"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "5ddaf09caea9e88f4f2d3a31e4cfec7324225f9b", "filename": "src/value_and_place.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6b54b7c9f44713e565743aff3d07ad475c553131/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b54b7c9f44713e565743aff3d07ad475c553131/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=6b54b7c9f44713e565743aff3d07ad475c553131", "patch": "@@ -217,17 +217,13 @@ impl<'tcx> CValue<'tcx> {\n                     .iconst(types::I64, (const_val >> 64) as u64 as i64);\n                 fx.bcx.ins().iconcat(lsb, msb)\n             }\n-            ty::Bool | ty::Char | ty::Uint(_) | ty::Ref(..)\n+            ty::Bool | ty::Char | ty::Uint(_) | ty::Int(_) | ty::Ref(..)\n             | ty::RawPtr(..) => {\n                 fx\n                     .bcx\n                     .ins()\n                     .iconst(clif_ty, u64::try_from(const_val).expect(\"uint\") as i64)\n             }\n-            ty::Int(_) => {\n-                let const_val = rustc_middle::mir::interpret::sign_extend(const_val, layout.size);\n-                fx.bcx.ins().iconst(clif_ty, i64::try_from(const_val as i128).unwrap())\n-            }\n             ty::Float(FloatTy::F32) => {\n                 fx.bcx.ins().f32const(Ieee32::with_bits(u32::try_from(const_val).unwrap()))\n             }"}]}