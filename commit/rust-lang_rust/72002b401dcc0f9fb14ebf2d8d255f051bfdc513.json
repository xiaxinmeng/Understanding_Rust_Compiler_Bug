{"sha": "72002b401dcc0f9fb14ebf2d8d255f051bfdc513", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMDAyYjQwMWRjYzBmOWZiMTRlYmYyZDhkMjU1ZjA1MWJmZGM1MTM=", "commit": {"author": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-06-09T06:49:12Z"}, "committer": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-08-04T14:15:23Z"}, "message": "internal: allow ambiguous unsize coercion.", "tree": {"sha": "c10ca6831c7451bbb9227a7d7e2a54d03ab19d34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c10ca6831c7451bbb9227a7d7e2a54d03ab19d34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72002b401dcc0f9fb14ebf2d8d255f051bfdc513", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72002b401dcc0f9fb14ebf2d8d255f051bfdc513", "html_url": "https://github.com/rust-lang/rust/commit/72002b401dcc0f9fb14ebf2d8d255f051bfdc513", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72002b401dcc0f9fb14ebf2d8d255f051bfdc513/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3981373b9389d8fb36de5b18f22b18c5f7aaa873", "url": "https://api.github.com/repos/rust-lang/rust/commits/3981373b9389d8fb36de5b18f22b18c5f7aaa873", "html_url": "https://github.com/rust-lang/rust/commit/3981373b9389d8fb36de5b18f22b18c5f7aaa873"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "0e6b474486aa38beb09c83b6c48d7ae399496e62", "filename": "crates/hir_ty/src/infer/coerce.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/72002b401dcc0f9fb14ebf2d8d255f051bfdc513/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72002b401dcc0f9fb14ebf2d8d255f051bfdc513/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs?ref=72002b401dcc0f9fb14ebf2d8d255f051bfdc513", "patch": "@@ -17,8 +17,8 @@ use crate::{\n         Adjust, Adjustment, AutoBorrow, InferOk, InferResult, InferenceContext, OverloadedDeref,\n         PointerCast, TypeError, TypeMismatch,\n     },\n-    static_lifetime, Canonical, DomainGoal, FnPointer, FnSig, InEnvironment, Interner, Solution,\n-    Substitution, Ty, TyBuilder, TyExt, TyKind,\n+    static_lifetime, Canonical, DomainGoal, FnPointer, FnSig, Guidance, InEnvironment, Interner,\n+    Solution, Substitution, Ty, TyBuilder, TyExt, TyKind,\n };\n \n pub(crate) type CoerceResult = Result<InferOk<(Vec<Adjustment>, Ty)>, TypeError>;\n@@ -541,7 +541,7 @@ impl<'a> InferenceContext<'a> {\n             _ => return Err(TypeError),\n         };\n \n-        let trait_ref = {\n+        let coerce_unsized_tref = {\n             let b = TyBuilder::trait_ref(self.db, coerce_unsized_trait);\n             if b.remaining() != 2 {\n                 // The CoerceUnsized trait should have two generic params: Self and T.\n@@ -551,7 +551,7 @@ impl<'a> InferenceContext<'a> {\n         };\n \n         let goal: InEnvironment<DomainGoal> =\n-            InEnvironment::new(&self.trait_env.env, trait_ref.cast(&Interner));\n+            InEnvironment::new(&self.trait_env.env, coerce_unsized_tref.cast(&Interner));\n \n         let canonicalized = self.canonicalize(goal);\n \n@@ -575,8 +575,11 @@ impl<'a> InferenceContext<'a> {\n                     },\n                 );\n             }\n-            // FIXME: should we accept ambiguous results here?\n-            _ => return Err(TypeError),\n+            Solution::Ambig(guidance) => {\n+                if let Guidance::Definite(subst) = guidance {\n+                    canonicalized.apply_solution(&mut self.table, subst);\n+                }\n+            }\n         };\n         let unsize =\n             Adjustment { kind: Adjust::Pointer(PointerCast::Unsize), target: to_ty.clone() };"}]}