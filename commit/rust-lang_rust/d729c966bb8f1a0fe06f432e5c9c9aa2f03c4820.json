{"sha": "d729c966bb8f1a0fe06f432e5c9c9aa2f03c4820", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MjljOTY2YmI4ZjFhMGZlMDZmNDMyZTVjOWM5YWEyZjAzYzQ4MjA=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-12-18T15:02:25Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-12-18T15:02:25Z"}, "message": "serialize: silence some warnings", "tree": {"sha": "60ff6345c6c1bf2df768cc7e14e336a02fab900d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60ff6345c6c1bf2df768cc7e14e336a02fab900d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d729c966bb8f1a0fe06f432e5c9c9aa2f03c4820", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d729c966bb8f1a0fe06f432e5c9c9aa2f03c4820", "html_url": "https://github.com/rust-lang/rust/commit/d729c966bb8f1a0fe06f432e5c9c9aa2f03c4820", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d729c966bb8f1a0fe06f432e5c9c9aa2f03c4820/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11d9175a90b90bfe019b34d1a98a6edceda7a6b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/11d9175a90b90bfe019b34d1a98a6edceda7a6b2", "html_url": "https://github.com/rust-lang/rust/commit/11d9175a90b90bfe019b34d1a98a6edceda7a6b2"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "a04f56793f8872f7a6f58f9dafd7a19c5ecca773", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d729c966bb8f1a0fe06f432e5c9c9aa2f03c4820/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d729c966bb8f1a0fe06f432e5c9c9aa2f03c4820/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=d729c966bb8f1a0fe06f432e5c9c9aa2f03c4820", "patch": "@@ -2071,7 +2071,7 @@ impl ::Decoder<DecoderError> for Decoder {\n         expect!(self.pop(), String)\n     }\n \n-    fn read_enum<T, F>(&mut self, name: &str, f: F) -> DecodeResult<T> where\n+    fn read_enum<T, F>(&mut self, _name: &str, f: F) -> DecodeResult<T> where\n         F: FnOnce(&mut Decoder) -> DecodeResult<T>,\n     {\n         f(self)\n@@ -2120,7 +2120,7 @@ impl ::Decoder<DecoderError> for Decoder {\n         f(self, idx)\n     }\n \n-    fn read_enum_variant_arg<T, F>(&mut self, idx: uint, f: F) -> DecodeResult<T> where\n+    fn read_enum_variant_arg<T, F>(&mut self, _idx: uint, f: F) -> DecodeResult<T> where\n         F: FnOnce(&mut Decoder) -> DecodeResult<T>,\n     {\n         f(self)\n@@ -2134,7 +2134,7 @@ impl ::Decoder<DecoderError> for Decoder {\n \n \n     fn read_enum_struct_variant_field<T, F>(&mut self,\n-                                         name: &str,\n+                                         _name: &str,\n                                          idx: uint,\n                                          f: F)\n                                          -> DecodeResult<T> where\n@@ -2143,7 +2143,7 @@ impl ::Decoder<DecoderError> for Decoder {\n         self.read_enum_variant_arg(idx, f)\n     }\n \n-    fn read_struct<T, F>(&mut self, name: &str, len: uint, f: F) -> DecodeResult<T> where\n+    fn read_struct<T, F>(&mut self, _name: &str, _len: uint, f: F) -> DecodeResult<T> where\n         F: FnOnce(&mut Decoder) -> DecodeResult<T>,\n     {\n         let value = try!(f(self));\n@@ -2153,7 +2153,7 @@ impl ::Decoder<DecoderError> for Decoder {\n \n     fn read_struct_field<T, F>(&mut self,\n                                name: &str,\n-                               idx: uint,\n+                               _idx: uint,\n                                f: F)\n                                -> DecodeResult<T> where\n         F: FnOnce(&mut Decoder) -> DecodeResult<T>,\n@@ -2198,7 +2198,7 @@ impl ::Decoder<DecoderError> for Decoder {\n     }\n \n     fn read_tuple_struct<T, F>(&mut self,\n-                               name: &str,\n+                               _name: &str,\n                                len: uint,\n                                f: F)\n                                -> DecodeResult<T> where\n@@ -2236,7 +2236,7 @@ impl ::Decoder<DecoderError> for Decoder {\n         f(self, len)\n     }\n \n-    fn read_seq_elt<T, F>(&mut self, idx: uint, f: F) -> DecodeResult<T> where\n+    fn read_seq_elt<T, F>(&mut self, _idx: uint, f: F) -> DecodeResult<T> where\n         F: FnOnce(&mut Decoder) -> DecodeResult<T>,\n     {\n         f(self)\n@@ -2254,13 +2254,13 @@ impl ::Decoder<DecoderError> for Decoder {\n         f(self, len)\n     }\n \n-    fn read_map_elt_key<T, F>(&mut self, idx: uint, f: F) -> DecodeResult<T> where\n+    fn read_map_elt_key<T, F>(&mut self, _idx: uint, f: F) -> DecodeResult<T> where\n        F: FnOnce(&mut Decoder) -> DecodeResult<T>,\n     {\n         f(self)\n     }\n \n-    fn read_map_elt_val<T, F>(&mut self, idx: uint, f: F) -> DecodeResult<T> where\n+    fn read_map_elt_val<T, F>(&mut self, _idx: uint, f: F) -> DecodeResult<T> where\n        F: FnOnce(&mut Decoder) -> DecodeResult<T>,\n     {\n         f(self)"}]}