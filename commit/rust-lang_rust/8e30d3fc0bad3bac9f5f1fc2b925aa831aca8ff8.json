{"sha": "8e30d3fc0bad3bac9f5f1fc2b925aa831aca8ff8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlMzBkM2ZjMGJhZDNiYWM5ZjVmMWZjMmI5MjVhYTgzMWFjYThmZjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-30T23:33:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-30T23:33:41Z"}, "message": "auto merge of #5636 : thestinger/rust/vim, r=luqmana", "tree": {"sha": "c459daa46c7480bb981b2892221a7e366ab8315f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c459daa46c7480bb981b2892221a7e366ab8315f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e30d3fc0bad3bac9f5f1fc2b925aa831aca8ff8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e30d3fc0bad3bac9f5f1fc2b925aa831aca8ff8", "html_url": "https://github.com/rust-lang/rust/commit/8e30d3fc0bad3bac9f5f1fc2b925aa831aca8ff8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e30d3fc0bad3bac9f5f1fc2b925aa831aca8ff8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dd20c8186e1eb2819f50d09ddba6941b7ff85b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dd20c8186e1eb2819f50d09ddba6941b7ff85b8", "html_url": "https://github.com/rust-lang/rust/commit/6dd20c8186e1eb2819f50d09ddba6941b7ff85b8"}, {"sha": "47011e3b710e9ef43a753defc467fefe5dcfd9f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/47011e3b710e9ef43a753defc467fefe5dcfd9f3", "html_url": "https://github.com/rust-lang/rust/commit/47011e3b710e9ef43a753defc467fefe5dcfd9f3"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "87f4059716b35506f941a5846806c1a1d4fca426", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8e30d3fc0bad3bac9f5f1fc2b925aa831aca8ff8/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/8e30d3fc0bad3bac9f5f1fc2b925aa831aca8ff8/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=8e30d3fc0bad3bac9f5f1fc2b925aa831aca8ff8", "patch": "@@ -10,17 +10,20 @@ elseif exists(\"b:current_syntax\")\n   finish\n endif\n \n-syn match     rustAssert      \"\\<assert\\(\\w\\)*\"\n-syn keyword   rustKeyword     as break\n-syn keyword   rustKeyword     copy do drop else extern\n+syn keyword   rustConditional match if else\n+syn keyword   rustOperator    as\n+\n+syn keyword   rustKeyword     break copy do drop extern\n syn keyword   rustKeyword     for if impl let log\n-syn keyword   rustKeyword     loop match mod once priv pub pure\n-syn keyword   rustKeyword     ref return static\n+syn keyword   rustKeyword     copy do drop extern\n+syn keyword   rustKeyword     for impl let log\n+syn keyword   rustKeyword     loop mod once priv pub\n+syn keyword   rustKeyword     return\n syn keyword   rustKeyword     unsafe use while\n \" FIXME: Scoped impl's name is also fallen in this category\n syn keyword   rustKeyword     mod trait struct enum type nextgroup=rustIdentifier skipwhite\n syn keyword   rustKeyword     fn nextgroup=rustFuncName skipwhite\n-syn keyword   rustStorage     const mut\n+syn keyword   rustStorage     const mut ref static\n \n syn match     rustIdentifier  contains=rustIdentifierPrime \"\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\%([^[:cntrl:][:punct:][:space:]]\\|_\\)*\" display contained\n syn match     rustFuncName    \"\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\%([^[:cntrl:][:punct:][:space:]]\\|_\\)*\" display contained\n@@ -71,8 +74,8 @@ syn keyword   rustConstant    STDIN_FILENO STDOUT_FILENO STDERR_FILENO\n syn match     rustModPath     \"\\w\\(\\w\\)*::[^<]\"he=e-3,me=e-3\n syn match     rustModPathSep  \"::\"\n \n-syn match     rustFuncCall    \"\\w\\(\\w\\)*(\"he=e-1,me=e-1 contains=rustAssert\n-syn match     rustFuncCall    \"\\w\\(\\w\\)*::<\"he=e-3,me=e-3 contains=rustAssert \" foo::<T>();\n+syn match     rustFuncCall    \"\\w\\(\\w\\)*(\"he=e-1,me=e-1\n+syn match     rustFuncCall    \"\\w\\(\\w\\)*::<\"he=e-3,me=e-3 \" foo::<T>();\n \n syn match     rustMacro       '\\w\\(\\w\\)*!'\n syn match     rustMacro       '#\\w\\(\\w\\)*'\n@@ -110,8 +113,7 @@ syn match   rustCharacter   \"'\\([^'\\\\]\\|\\\\\\(['nrt\\\\\\\"]\\|x\\x\\{2}\\|u\\x\\{4}\\|U\\x\\{8\n syn region    rustComment     start=\"/\\*\" end=\"\\*/\" contains=rustComment,rustTodo\n syn region    rustComment     start=\"//\" skip=\"\\\\$\" end=\"$\" contains=rustTodo keepend\n \n-\n-syn keyword   rustTodo        TODO FIXME XXX NB unsafe\n+syn keyword rustTodo contained TODO FIXME XXX NB\n \n hi def link rustHexNumber       rustNumber\n hi def link rustBinNumber       rustNumber\n@@ -126,8 +128,9 @@ hi def link rustBoolean       Boolean\n hi def link rustConstant      Constant\n hi def link rustSelf          Constant\n hi def link rustFloat         Float\n-hi def link rustAssert        Keyword\n+hi def link rustOperator      Operator\n hi def link rustKeyword       Keyword\n+hi def link rustConditional   Conditional\n hi def link rustIdentifier    Identifier\n hi def link rustModPath       Include\n hi def link rustFuncName      Function\n@@ -140,7 +143,6 @@ hi def link rustStorage       StorageClass\n hi def link rustLifetime      Special\n \n \" Other Suggestions:\n-\" hi rustAssert ctermfg=yellow\n \" hi rustMacro ctermfg=magenta\n \n syn sync minlines=200"}]}