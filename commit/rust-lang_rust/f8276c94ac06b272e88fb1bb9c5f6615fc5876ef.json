{"sha": "f8276c94ac06b272e88fb1bb9c5f6615fc5876ef", "node_id": "C_kwDOAAsO6NoAKGY4Mjc2Yzk0YWMwNmIyNzJlODhmYjFiYjljNWY2NjE1ZmM1ODc2ZWY", "commit": {"author": {"name": "Ibraheem Ahmed", "email": "ibraheem@ibraheem.ca", "date": "2023-01-11T02:54:53Z"}, "committer": {"name": "Ibraheem Ahmed", "email": "ibraheem@ibraheem.ca", "date": "2023-01-11T02:54:53Z"}, "message": "add `SyncSender::send_timeout` test", "tree": {"sha": "888bf877a29e526d0476d5bc20064940ac543a1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/888bf877a29e526d0476d5bc20064940ac543a1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8276c94ac06b272e88fb1bb9c5f6615fc5876ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8276c94ac06b272e88fb1bb9c5f6615fc5876ef", "html_url": "https://github.com/rust-lang/rust/commit/f8276c94ac06b272e88fb1bb9c5f6615fc5876ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8276c94ac06b272e88fb1bb9c5f6615fc5876ef/comments", "author": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2538c0c17095834c994cbfdc4909338a31f83fb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2538c0c17095834c994cbfdc4909338a31f83fb7", "html_url": "https://github.com/rust-lang/rust/commit/2538c0c17095834c994cbfdc4909338a31f83fb7"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "7a602cecd3b896455a8882b66a9517b3885670ca", "filename": "library/std/src/sync/mpmc/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8276c94ac06b272e88fb1bb9c5f6615fc5876ef/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8276c94ac06b272e88fb1bb9c5f6615fc5876ef/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Fmod.rs?ref=f8276c94ac06b272e88fb1bb9c5f6615fc5876ef", "patch": "@@ -43,7 +43,7 @@ mod zero;\n use crate::fmt;\n use crate::panic::{RefUnwindSafe, UnwindSafe};\n use crate::time::{Duration, Instant};\n-use error::*;\n+pub use error::*;\n \n /// Creates a channel of unbounded capacity.\n ///"}, {"sha": "6e3c28f10bb1ba9e31298fa90d34b54029ae32bd", "filename": "library/std/src/sync/mpsc/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f8276c94ac06b272e88fb1bb9c5f6615fc5876ef/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8276c94ac06b272e88fb1bb9c5f6615fc5876ef/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs?ref=f8276c94ac06b272e88fb1bb9c5f6615fc5876ef", "patch": "@@ -738,6 +738,15 @@ impl<T> SyncSender<T> {\n     pub fn try_send(&self, t: T) -> Result<(), TrySendError<T>> {\n         self.inner.try_send(t)\n     }\n+\n+    // Attempts to send for a value on this receiver, returning an error if the\n+    // corresponding channel has hung up, or if it waits more than `timeout`.\n+    //\n+    // This method is currently private and only used for tests.\n+    #[allow(unused)]\n+    fn send_timeout(&self, t: T, timeout: Duration) -> Result<(), mpmc::SendTimeoutError<T>> {\n+        self.inner.send_timeout(t, timeout)\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "9d2f92ffc9b1415ec6e93a93189f10f64ed35042", "filename": "library/std/src/sync/mpsc/sync_tests.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f8276c94ac06b272e88fb1bb9c5f6615fc5876ef/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fsync_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8276c94ac06b272e88fb1bb9c5f6615fc5876ef/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fsync_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fsync_tests.rs?ref=f8276c94ac06b272e88fb1bb9c5f6615fc5876ef", "patch": "@@ -1,5 +1,6 @@\n use super::*;\n use crate::env;\n+use crate::sync::mpmc::SendTimeoutError;\n use crate::thread;\n use crate::time::Duration;\n \n@@ -41,6 +42,13 @@ fn recv_timeout() {\n     assert_eq!(rx.recv_timeout(Duration::from_millis(1)), Ok(1));\n }\n \n+#[test]\n+fn send_timeout() {\n+    let (tx, _rx) = sync_channel::<i32>(1);\n+    assert_eq!(tx.send_timeout(1, Duration::from_millis(1)), Ok(()));\n+    assert_eq!(tx.send_timeout(1, Duration::from_millis(1)), Err(SendTimeoutError::Timeout(1)));\n+}\n+\n #[test]\n fn smoke_threads() {\n     let (tx, rx) = sync_channel::<i32>(0);"}]}