{"sha": "822dd41ad907b2147340541ffc3d28b6eb6109db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMmRkNDFhZDkwN2IyMTQ3MzQwNTQxZmZjM2QyOGI2ZWI2MTA5ZGI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-08T08:21:30Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-08T08:21:30Z"}, "message": "Put lhs and rhs of binop on the same line if lhs is short", "tree": {"sha": "54538c781ded4bc8537dff136d0146a034d16e59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54538c781ded4bc8537dff136d0146a034d16e59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/822dd41ad907b2147340541ffc3d28b6eb6109db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/822dd41ad907b2147340541ffc3d28b6eb6109db", "html_url": "https://github.com/rust-lang/rust/commit/822dd41ad907b2147340541ffc3d28b6eb6109db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/822dd41ad907b2147340541ffc3d28b6eb6109db/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e660e4c7630842e79732ea1cb92885a8f450b9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e660e4c7630842e79732ea1cb92885a8f450b9b", "html_url": "https://github.com/rust-lang/rust/commit/0e660e4c7630842e79732ea1cb92885a8f450b9b"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "d6603659c7fa9c4b0ad2ab6cebaab53ae8a2cbd0", "filename": "src/expr.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/822dd41ad907b2147340541ffc3d28b6eb6109db/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/822dd41ad907b2147340541ffc3d28b6eb6109db/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=822dd41ad907b2147340541ffc3d28b6eb6109db", "patch": "@@ -352,13 +352,15 @@ where\n         .and_then(|s| s.sub_width(pp.suffix.len()))\n         .and_then(|rhs_shape| rhs.rewrite(context, rhs_shape));\n     if let Some(ref rhs_result) = rhs_orig_result {\n-        // If the rhs looks like block expression, we allow it to stay on the same line\n-        // with the lhs even if it is multi-lined.\n-        let allow_same_line = rhs_result\n-            .lines()\n-            .next()\n-            .map(|first_line| first_line.ends_with('{'))\n-            .unwrap_or(false);\n+        // If the length of the lhs is equal to or shorter than the tab width or\n+        // the rhs looks like block expression, we put the rhs on the same\n+        // line with the lhs even if the rhs is multi-lined.\n+        let allow_same_line = lhs_result.len() <= context.config.tab_spaces()\n+            || rhs_result\n+                .lines()\n+                .next()\n+                .map(|first_line| first_line.ends_with('{'))\n+                .unwrap_or(false);\n         if !rhs_result.contains('\\n') || allow_same_line {\n             let one_line_width = last_line_width(&lhs_result) + pp.infix.len()\n                 + first_line_width(rhs_result) + pp.suffix.len();"}]}