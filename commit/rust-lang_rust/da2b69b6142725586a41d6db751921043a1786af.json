{"sha": "da2b69b6142725586a41d6db751921043a1786af", "node_id": "C_kwDOAAsO6NoAKGRhMmI2OWI2MTQyNzI1NTg2YTQxZDZkYjc1MTkyMTA0M2ExNzg2YWY", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-08-20T10:42:56Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2021-10-01T16:34:18Z"}, "message": "polymorphize: remove predicate logic\n\nThis commit removes all logic which marks parameters as used based on\ntheir presence in predicates - given rust-lang/rust#75675, this will\nenable more polymorphization and avoid the symbol clashes that predicate\nlogic previously sidestepped.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "fdf459edcf6e380b5709bc5b09de6561ca4b89c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdf459edcf6e380b5709bc5b09de6561ca4b89c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da2b69b6142725586a41d6db751921043a1786af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da2b69b6142725586a41d6db751921043a1786af", "html_url": "https://github.com/rust-lang/rust/commit/da2b69b6142725586a41d6db751921043a1786af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da2b69b6142725586a41d6db751921043a1786af/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50433a0bf4a1d75f4d68c7d7b0acf5a75522421b", "url": "https://api.github.com/repos/rust-lang/rust/commits/50433a0bf4a1d75f4d68c7d7b0acf5a75522421b", "html_url": "https://github.com/rust-lang/rust/commit/50433a0bf4a1d75f4d68c7d7b0acf5a75522421b"}], "stats": {"total": 85, "additions": 43, "deletions": 42}, "files": [{"sha": "bb04f91e5acaa43a950bfb0b507a883650eac276", "filename": "compiler/rustc_monomorphize/src/polymorphize.rs", "status": "modified", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/da2b69b6142725586a41d6db751921043a1786af/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da2b69b6142725586a41d6db751921043a1786af/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs?ref=da2b69b6142725586a41d6db751921043a1786af", "patch": "@@ -89,9 +89,6 @@ fn unused_generic_params(tcx: TyCtxt<'_>, def_id: DefId) -> FiniteBitSet<u32> {\n     };\n     let mut vis = MarkUsedGenericParams { tcx, def_id, unused_parameters: &mut unused_parameters };\n     vis.visit_body(body);\n-    debug!(?unused_parameters, \"(after visitor)\");\n-\n-    mark_used_by_predicates(tcx, def_id, &mut unused_parameters);\n     debug!(?unused_parameters, \"(end)\");\n \n     // Emit errors for debugging and testing if enabled.\n@@ -161,44 +158,6 @@ fn mark_used_by_default_parameters<'tcx>(\n     }\n }\n \n-/// Search the predicates on used generic parameters for any unused generic parameters, and mark\n-/// those as used.\n-#[instrument(level = \"debug\", skip(tcx, def_id))]\n-fn mark_used_by_predicates<'tcx>(\n-    tcx: TyCtxt<'tcx>,\n-    def_id: DefId,\n-    unused_parameters: &mut FiniteBitSet<u32>,\n-) {\n-    let def_id = tcx.closure_base_def_id(def_id);\n-    let predicates = tcx.explicit_predicates_of(def_id);\n-\n-    let mut current_unused_parameters = FiniteBitSet::new_empty();\n-    // Run to a fixed point to support `where T: Trait<U>, U: Trait<V>`, starting with an empty\n-    // bit set so that this is skipped if all parameters are already used.\n-    while current_unused_parameters != *unused_parameters {\n-        debug!(?current_unused_parameters, ?unused_parameters);\n-        current_unused_parameters = *unused_parameters;\n-\n-        for (predicate, _) in predicates.predicates {\n-            // Consider all generic params in a predicate as used if any other parameter in the\n-            // predicate is used.\n-            let any_param_used = {\n-                let mut vis = HasUsedGenericParams { tcx, unused_parameters };\n-                predicate.visit_with(&mut vis).is_break()\n-            };\n-\n-            if any_param_used {\n-                let mut vis = MarkUsedGenericParams { tcx, def_id, unused_parameters };\n-                predicate.visit_with(&mut vis);\n-            }\n-        }\n-    }\n-\n-    if let Some(parent) = predicates.parent {\n-        mark_used_by_predicates(tcx, parent, unused_parameters);\n-    }\n-}\n-\n /// Emit errors for the function annotated by `#[rustc_polymorphize_error]`, labelling each generic\n /// parameter which was unused.\n #[instrument(level = \"debug\", skip(tcx, generics))]"}, {"sha": "dea1e21e77fe359e30662c39c9291d4ed53cc4e0", "filename": "src/test/ui/polymorphization/predicates.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/da2b69b6142725586a41d6db751921043a1786af/src%2Ftest%2Fui%2Fpolymorphization%2Fpredicates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da2b69b6142725586a41d6db751921043a1786af/src%2Ftest%2Fui%2Fpolymorphization%2Fpredicates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fpredicates.rs?ref=da2b69b6142725586a41d6db751921043a1786af", "patch": "@@ -12,6 +12,7 @@ fn bar<I>() {\n \n #[rustc_polymorphize_error]\n fn foo<I, T>(_: I)\n+//~^ ERROR item has unused generic parameters\n where\n     I: Iterator<Item = T>,\n {\n@@ -20,6 +21,7 @@ where\n \n #[rustc_polymorphize_error]\n fn baz<I, T>(_: I)\n+//~^ ERROR item has unused generic parameters\n where\n     std::iter::Repeat<I>: Iterator<Item = T>,\n {\n@@ -40,6 +42,7 @@ where\n     #[rustc_polymorphize_error]\n     fn next(&mut self) -> Option<Self::Item> {\n         self.find(|_| true)\n+        //~^ ERROR item has unused generic parameters\n     }\n }\n \n@@ -53,6 +56,7 @@ impl Baz<u32> for u16 {}\n \n #[rustc_polymorphize_error]\n fn quux<A, B, C: Default>() -> usize\n+//~^ ERROR item has unused generic parameters\n where\n     A: Baz<B>,\n     B: Baz<C>,\n@@ -69,6 +73,7 @@ impl Foobar<u32, u32> for () {}\n \n #[rustc_polymorphize_error]\n fn foobar<F, G>() -> usize\n+//~^ ERROR item has unused generic parameters\n where\n     (): Foobar<F, G>,\n {"}, {"sha": "5fc51e58d728a3ec3d5a191ef65abd0a4c956bb1", "filename": "src/test/ui/polymorphization/predicates.stderr", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/da2b69b6142725586a41d6db751921043a1786af/src%2Ftest%2Fui%2Fpolymorphization%2Fpredicates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/da2b69b6142725586a41d6db751921043a1786af/src%2Ftest%2Fui%2Fpolymorphization%2Fpredicates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fpredicates.stderr?ref=da2b69b6142725586a41d6db751921043a1786af", "patch": "@@ -1,8 +1,45 @@\n+error: item has unused generic parameters\n+  --> $DIR/predicates.rs:14:4\n+   |\n+LL | fn foo<I, T>(_: I)\n+   |    ^^^    - generic parameter `T` is unused\n+\n+error: item has unused generic parameters\n+  --> $DIR/predicates.rs:23:4\n+   |\n+LL | fn baz<I, T>(_: I)\n+   |    ^^^    - generic parameter `T` is unused\n+\n+error: item has unused generic parameters\n+  --> $DIR/predicates.rs:44:19\n+   |\n+LL | impl<'a, I, T: 'a, E> Iterator for Foo<'a, I, E>\n+   |          -         - generic parameter `E` is unused\n+   |          |\n+   |          generic parameter `I` is unused\n+...\n+LL |         self.find(|_| true)\n+   |                   ^^^^^^^^\n+\n+error: item has unused generic parameters\n+  --> $DIR/predicates.rs:58:4\n+   |\n+LL | fn quux<A, B, C: Default>() -> usize\n+   |    ^^^^ -  - generic parameter `B` is unused\n+   |         |\n+   |         generic parameter `A` is unused\n+\n+error: item has unused generic parameters\n+  --> $DIR/predicates.rs:75:4\n+   |\n+LL | fn foobar<F, G>() -> usize\n+   |    ^^^^^^ - generic parameter `F` is unused\n+\n error: item has unused generic parameters\n   --> $DIR/predicates.rs:9:4\n    |\n LL | fn bar<I>() {\n    |    ^^^ - generic parameter `I` is unused\n \n-error: aborting due to previous error\n+error: aborting due to 6 previous errors\n "}]}