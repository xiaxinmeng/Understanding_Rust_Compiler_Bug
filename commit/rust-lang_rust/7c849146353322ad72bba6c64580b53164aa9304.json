{"sha": "7c849146353322ad72bba6c64580b53164aa9304", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjODQ5MTQ2MzUzMzIyYWQ3MmJiYTZjNjQ1ODBiNTMxNjRhYTkzMDQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-06-25T20:11:22Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-07-06T21:36:48Z"}, "message": "Make suggestion include the line number\n\nWhen there're more than one suggestions in the same diagnostic, they are\ndisplayed in their own block, instead of inline. In order to reduce\nconfusion, those blocks now display the line number.", "tree": {"sha": "40fa7e0308e6736f742ee361c9701a7bd87a229e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40fa7e0308e6736f742ee361c9701a7bd87a229e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c849146353322ad72bba6c64580b53164aa9304", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c849146353322ad72bba6c64580b53164aa9304", "html_url": "https://github.com/rust-lang/rust/commit/7c849146353322ad72bba6c64580b53164aa9304", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c849146353322ad72bba6c64580b53164aa9304/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd72f2e269357ea4da4d0cf5502af35f4f9dab9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd72f2e269357ea4da4d0cf5502af35f4f9dab9e", "html_url": "https://github.com/rust-lang/rust/commit/cd72f2e269357ea4da4d0cf5502af35f4f9dab9e"}], "stats": {"total": 70, "additions": 37, "deletions": 33}, "files": [{"sha": "cc2a519087df9f15c393c82a1c597bbc449eb724", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7c849146353322ad72bba6c64580b53164aa9304/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c849146353322ad72bba6c64580b53164aa9304/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=7c849146353322ad72bba6c64580b53164aa9304", "patch": "@@ -1071,20 +1071,24 @@ impl EmitterWriter {\n             buffer.append(0, &level.to_string(), Style::Level(level.clone()));\n             buffer.append(0, \": \", Style::HeaderMsg);\n             self.msg_to_buffer(&mut buffer,\n-                            &[(suggestion.msg.to_owned(), Style::NoStyle)],\n-                            max_line_num_len,\n-                            \"suggestion\",\n-                            Some(Style::HeaderMsg));\n+                               &[(suggestion.msg.to_owned(), Style::NoStyle)],\n+                               max_line_num_len,\n+                               \"suggestion\",\n+                               Some(Style::HeaderMsg));\n \n             let suggestions = suggestion.splice_lines(cm.borrow());\n+            let line_start = cm.lookup_char_pos(primary_span.lo).line - 1;\n             let mut row_num = 1;\n             for complete in suggestions.iter().take(MAX_SUGGESTIONS) {\n \n-                // print the suggestion without any line numbers, but leave\n-                // space for them. This helps with lining up with previous\n-                // snippets from the actual error being reported.\n                 let mut lines = complete.lines();\n                 for line in lines.by_ref().take(MAX_HIGHLIGHT_LINES) {\n+                    // print the span column to avoid confusion\n+                    buffer.puts(row_num,\n+                                0,\n+                                &((line_start + row_num).to_string()),\n+                                Style::LineNumber);\n+                    // print the suggestion\n                     draw_col_separator(&mut buffer, row_num, max_line_num_len + 1);\n                     buffer.append(row_num, line, Style::NoStyle);\n                     row_num += 1;"}, {"sha": "034bc0d128220d3815ae55ccb6e3da253f7da03e", "filename": "src/test/ui/issue-22644.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fissue-22644.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fissue-22644.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-22644.stderr?ref=7c849146353322ad72bba6c64580b53164aa9304", "patch": "@@ -7,7 +7,7 @@ error: `<` is interpreted as a start of generic arguments for `usize`, not a com\n    |                               not interpreted as comparison\n    |\n help: if you want to compare the casted value then write:\n-   |     println!(\"{}\", (a as usize) < b);\n+16 |     println!(\"{}\", (a as usize) < b);\n \n error: `<` is interpreted as a start of generic arguments for `usize`, not a comparison\n   --> $DIR/issue-22644.rs:17:33\n@@ -18,7 +18,7 @@ error: `<` is interpreted as a start of generic arguments for `usize`, not a com\n    |                               not interpreted as comparison\n    |\n help: if you want to compare the casted value then write:\n-   |     println!(\"{}\", (a as usize) < 4);\n+17 |     println!(\"{}\", (a as usize) < 4);\n \n error: aborting due to 2 previous errors\n "}, {"sha": "87ca26695b06320602afcfac92a371cae05f6466", "filename": "src/test/ui/resolve/enums-are-namespaced-xc.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr?ref=7c849146353322ad72bba6c64580b53164aa9304", "patch": "@@ -5,7 +5,7 @@ error[E0425]: cannot find value `A` in module `namespaced_enums`\n    |                               ^ not found in `namespaced_enums`\n    |\n help: possible candidate is found in another module, you can import it into scope\n-   | use namespaced_enums::Foo::A;\n+12 | use namespaced_enums::Foo::A;\n \n error[E0425]: cannot find function `B` in module `namespaced_enums`\n   --> $DIR/enums-are-namespaced-xc.rs:18:31\n@@ -14,7 +14,7 @@ error[E0425]: cannot find function `B` in module `namespaced_enums`\n    |                               ^ not found in `namespaced_enums`\n    |\n help: possible candidate is found in another module, you can import it into scope\n-   | use namespaced_enums::Foo::B;\n+12 | use namespaced_enums::Foo::B;\n \n error[E0422]: cannot find struct, variant or union type `C` in module `namespaced_enums`\n   --> $DIR/enums-are-namespaced-xc.rs:21:31\n@@ -23,7 +23,7 @@ error[E0422]: cannot find struct, variant or union type `C` in module `namespace\n    |                               ^ not found in `namespaced_enums`\n    |\n help: possible candidate is found in another module, you can import it into scope\n-   | use namespaced_enums::Foo::C;\n+12 | use namespaced_enums::Foo::C;\n \n error: aborting due to 3 previous errors\n "}, {"sha": "184ab557548326385edec3a0347448d040a40440", "filename": "src/test/ui/resolve/issue-16058.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr?ref=7c849146353322ad72bba6c64580b53164aa9304", "patch": "@@ -5,9 +5,9 @@ error[E0574]: expected struct, variant or union type, found enum `Result`\n    |         ^^^^^^ not a struct, variant or union type\n    |\n help: possible better candidates are found in other modules, you can import them into scope\n-   | use std::fmt::Result;\n-   | use std::io::Result;\n-   | use std::thread::Result;\n+12 | use std::fmt::Result;\n+13 | use std::io::Result;\n+14 | use std::thread::Result;\n \n error: aborting due to previous error\n "}, {"sha": "ced4919e47a1c9ae8d4f5c55a05a217595bd6b2a", "filename": "src/test/ui/resolve/issue-17518.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr?ref=7c849146353322ad72bba6c64580b53164aa9304", "patch": "@@ -5,7 +5,7 @@ error[E0422]: cannot find struct, variant or union type `E` in this scope\n    |     ^ not found in this scope\n    |\n help: possible candidate is found in another module, you can import it into scope\n-   | use SomeEnum::E;\n+11 | use SomeEnum::E;\n \n error: aborting due to previous error\n "}, {"sha": "1f4fe01dee068d6156ea0db9c72a05a6142ba598", "filename": "src/test/ui/resolve/issue-21221-1.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr?ref=7c849146353322ad72bba6c64580b53164aa9304", "patch": "@@ -5,9 +5,9 @@ error[E0405]: cannot find trait `Mul` in this scope\n    |      ^^^ not found in this scope\n    |\n help: possible candidates are found in other modules, you can import them into scope\n-   | use mul1::Mul;\n-   | use mul2::Mul;\n-   | use std::ops::Mul;\n+11 | use mul1::Mul;\n+12 | use mul2::Mul;\n+13 | use std::ops::Mul;\n \n error[E0412]: cannot find type `Mul` in this scope\n   --> $DIR/issue-21221-1.rs:72:16\n@@ -16,10 +16,10 @@ error[E0412]: cannot find type `Mul` in this scope\n    |                ^^^ not found in this scope\n    |\n help: possible candidates are found in other modules, you can import them into scope\n-   | use mul1::Mul;\n-   | use mul2::Mul;\n-   | use mul3::Mul;\n-   | use mul4::Mul;\n+11 | use mul1::Mul;\n+12 | use mul2::Mul;\n+13 | use mul3::Mul;\n+14 | use mul4::Mul;\n and 2 other candidates\n \n error[E0405]: cannot find trait `ThisTraitReallyDoesntExistInAnyModuleReally` in this scope\n@@ -35,7 +35,7 @@ error[E0405]: cannot find trait `Div` in this scope\n    |      ^^^ not found in this scope\n    |\n help: possible candidate is found in another module, you can import it into scope\n-   | use std::ops::Div;\n+11 | use std::ops::Div;\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "74490efed7a16453d578757f2786a70bdbb9485d", "filename": "src/test/ui/resolve/issue-21221-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-2.stderr?ref=7c849146353322ad72bba6c64580b53164aa9304", "patch": "@@ -5,7 +5,7 @@ error[E0405]: cannot find trait `T` in this scope\n    |      ^ not found in this scope\n    |\n help: possible candidate is found in another module, you can import it into scope\n-   | use foo::bar::T;\n+11 | use foo::bar::T;\n \n error[E0601]: main function not found\n "}, {"sha": "54f3773a8d7a9b6849da25e8f170789378ea8a3b", "filename": "src/test/ui/resolve/issue-21221-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-3.stderr?ref=7c849146353322ad72bba6c64580b53164aa9304", "patch": "@@ -5,7 +5,7 @@ error[E0405]: cannot find trait `OuterTrait` in this scope\n    |      ^^^^^^^^^^ not found in this scope\n    |\n help: possible candidate is found in another module, you can import it into scope\n-   | use issue_21221_3::outer::OuterTrait;\n+16 | use issue_21221_3::outer::OuterTrait;\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "739a06ca8b362a3e234667be8740874eeb02011d", "filename": "src/test/ui/resolve/issue-21221-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-4.stderr?ref=7c849146353322ad72bba6c64580b53164aa9304", "patch": "@@ -5,7 +5,7 @@ error[E0405]: cannot find trait `T` in this scope\n    |      ^ not found in this scope\n    |\n help: possible candidate is found in another module, you can import it into scope\n-   | use issue_21221_4::T;\n+16 | use issue_21221_4::T;\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "d1df59408c76f5c4090a49bb10dbda763d4293db", "filename": "src/test/ui/resolve/issue-3907.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-3907.stderr?ref=7c849146353322ad72bba6c64580b53164aa9304", "patch": "@@ -5,7 +5,7 @@ error[E0404]: expected trait, found type alias `Foo`\n    |      ^^^ type aliases cannot be used for traits\n    |\n help: possible better candidate is found in another module, you can import it into scope\n-   | use issue_3907::Foo;\n+12 | use issue_3907::Foo;\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "6d75efffe6262bd9c2006206e662f97858202ec6", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=7c849146353322ad72bba6c64580b53164aa9304", "patch": "@@ -9,7 +9,7 @@ error[E0423]: expected value, found struct `Z`\n    |         constructor is not visible here due to private fields\n    |\n help: possible better candidate is found in another module, you can import it into scope\n-   | use m::n::Z;\n+15 | use m::n::Z;\n \n error[E0423]: expected value, found struct `S`\n   --> $DIR/privacy-struct-ctor.rs:36:5\n@@ -21,7 +21,7 @@ error[E0423]: expected value, found struct `S`\n    |     constructor is not visible here due to private fields\n    |\n help: possible better candidate is found in another module, you can import it into scope\n-   | use m::S;\n+13 | use m::S;\n \n error[E0423]: expected value, found struct `xcrate::S`\n   --> $DIR/privacy-struct-ctor.rs:42:5\n@@ -33,7 +33,7 @@ error[E0423]: expected value, found struct `xcrate::S`\n    |     constructor is not visible here due to private fields\n    |\n help: possible better candidate is found in another module, you can import it into scope\n-   | use m::S;\n+13 | use m::S;\n \n error[E0603]: tuple struct `Z` is private\n   --> $DIR/privacy-struct-ctor.rs:25:9"}, {"sha": "d44c29ad7393438c30c453b7fd9f123ec437e40a", "filename": "src/test/ui/span/issue-35987.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-35987.stderr?ref=7c849146353322ad72bba6c64580b53164aa9304", "patch": "@@ -5,7 +5,7 @@ error[E0404]: expected trait, found type parameter `Add`\n    |                     ^^^ not a trait\n    |\n help: possible better candidate is found in another module, you can import it into scope\n-   | use std::ops::Add;\n+11 | use std::ops::Add;\n \n error[E0601]: main function not found\n "}, {"sha": "3129dc1a67170483197c0994a5ad2544b5d72884", "filename": "src/test/ui/span/issue-39018.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c849146353322ad72bba6c64580b53164aa9304/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr?ref=7c849146353322ad72bba6c64580b53164aa9304", "patch": "@@ -5,7 +5,7 @@ error[E0369]: binary operation `+` cannot be applied to type `&'static str`\n    |             ^^^^^^^^^^^^^^^^^^^ `+` can't be used to concatenate two `&str` strings\n    |\n help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left.\n-   |     let x = \"Hello \".to_owned() + \"World!\";\n+12 |     let x = \"Hello \".to_owned() + \"World!\";\n \n error[E0369]: binary operation `+` cannot be applied to type `World`\n   --> $DIR/issue-39018.rs:17:13"}]}