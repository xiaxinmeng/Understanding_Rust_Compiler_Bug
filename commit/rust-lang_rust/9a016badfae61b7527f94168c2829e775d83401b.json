{"sha": "9a016badfae61b7527f94168c2829e775d83401b", "node_id": "C_kwDOAAsO6NoAKDlhMDE2YmFkZmFlNjFiNzUyN2Y5NDE2OGMyODI5ZTc3NWQ4MzQwMWI", "commit": {"author": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2021-11-02T12:38:51Z"}, "committer": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2021-11-02T12:38:51Z"}, "message": "Clarify dependency requirements in the face of cross-compilation\n\nThe requirement on dependencies was phrased in terms of \"host tools\",\nbut it was also intended to apply equally to targets that only support\ncross-compilation. Only the exception (for libraries commonly needed for\nbinaries on the target) was intended to apply to host tools. Reword the\nrequirement to talk about the dependencies required for \"compiling,\nlinking,and emitting functional binaries, libraries, or other code for\nthe target\", rather than generically in terms of dependencies for\nrustc/cargo.\n\nThis doesn't change the net effect of the requirements, since other\nrequirements already stated that the target can't make the Rust\ntoolchain depend on proprietary libraries. However, this should make the\nrequirements clearer.", "tree": {"sha": "ce214a662b7c843484b10294dfef6a17b934e940", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce214a662b7c843484b10294dfef6a17b934e940"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a016badfae61b7527f94168c2829e775d83401b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a016badfae61b7527f94168c2829e775d83401b", "html_url": "https://github.com/rust-lang/rust/commit/9a016badfae61b7527f94168c2829e775d83401b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a016badfae61b7527f94168c2829e775d83401b/comments", "author": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "470b49bac9ca58e48a92a0f69aef2745413fe9b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/470b49bac9ca58e48a92a0f69aef2745413fe9b4", "html_url": "https://github.com/rust-lang/rust/commit/470b49bac9ca58e48a92a0f69aef2745413fe9b4"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "025f7e3984e257052dca63f8af0491acecb578b7", "filename": "src/doc/rustc/src/target-tier-policy.md", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9a016badfae61b7527f94168c2829e775d83401b/src%2Fdoc%2Frustc%2Fsrc%2Ftarget-tier-policy.md", "raw_url": "https://github.com/rust-lang/rust/raw/9a016badfae61b7527f94168c2829e775d83401b/src%2Fdoc%2Frustc%2Fsrc%2Ftarget-tier-policy.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Ftarget-tier-policy.md?ref=9a016badfae61b7527f94168c2829e775d83401b", "patch": "@@ -141,17 +141,19 @@ approved by the appropriate team for that shared code before acceptance.\n     or binary. In other words, the introduction of the target must not cause a\n     user installing or running a version of Rust or the Rust tools to be\n     subject to any new license requirements.\n-  - If the target supports building host tools (such as `rustc` or `cargo`),\n-    those host tools must not depend on proprietary (non-FOSS) libraries, other\n-    than ordinary runtime libraries supplied by the platform and commonly used\n-    by other binaries built for the target. For instance, `rustc` built for the\n-    target may depend on a common proprietary C runtime library or console\n-    output library, but must not depend on a proprietary code generation\n-    library or code optimization library. Rust's license permits such\n-    combinations, but the Rust project has no interest in maintaining such\n-    combinations within the scope of Rust itself, even at tier 3.\n-  - Targets should not require proprietary (non-FOSS) components to link a\n-    functional binary or library.\n+  - Compiling, linking, and emitting functional binaries, libraries, or other\n+    code for the target (whether hosted on the target itself or cross-compiling\n+    from another target) must not depend on proprietary (non-FOSS) libraries.\n+    Host tools built for the target itself may depend on the ordinary runtime\n+    libraries supplied by the platform and commonly used by other applications\n+    built for the target, but those libraries must not be required for code\n+    generation for the target; cross-compilation to the target must not require\n+    such libraries at all. For instance, `rustc` built for the target may\n+    depend on a common proprietary C runtime library or console output library,\n+    but must not depend on a proprietary code generation library or code\n+    optimization library. Rust's license permits such combinations, but the\n+    Rust project has no interest in maintaining such combinations within the\n+    scope of Rust itself, even at tier 3.\n   - \"onerous\" here is an intentionally subjective term. At a minimum, \"onerous\"\n     legal/licensing terms include but are *not* limited to: non-disclosure\n     requirements, non-compete requirements, contributor license agreements"}]}