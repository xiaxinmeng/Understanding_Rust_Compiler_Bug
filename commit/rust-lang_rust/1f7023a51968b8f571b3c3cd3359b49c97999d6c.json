{"sha": "1f7023a51968b8f571b3c3cd3359b49c97999d6c", "node_id": "C_kwDOAAsO6NoAKDFmNzAyM2E1MTk2OGI4ZjU3MWIzYzNjZDMzNTliNDljOTc5OTlkNmM", "commit": {"author": {"name": "Jacob Hughes", "email": "j@distanthills.org", "date": "2022-03-14T10:58:58Z"}, "committer": {"name": "Jacob Hughes", "email": "j@distanthills.org", "date": "2022-06-14T17:54:10Z"}, "message": "btreemap-alloc: adjust ui test", "tree": {"sha": "3fffaf559b9916a49b4fefef8de52ee089165dc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fffaf559b9916a49b4fefef8de52ee089165dc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f7023a51968b8f571b3c3cd3359b49c97999d6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f7023a51968b8f571b3c3cd3359b49c97999d6c", "html_url": "https://github.com/rust-lang/rust/commit/1f7023a51968b8f571b3c3cd3359b49c97999d6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f7023a51968b8f571b3c3cd3359b49c97999d6c/comments", "author": {"login": "exrook", "id": 534850, "node_id": "MDQ6VXNlcjUzNDg1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/534850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exrook", "html_url": "https://github.com/exrook", "followers_url": "https://api.github.com/users/exrook/followers", "following_url": "https://api.github.com/users/exrook/following{/other_user}", "gists_url": "https://api.github.com/users/exrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/exrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exrook/subscriptions", "organizations_url": "https://api.github.com/users/exrook/orgs", "repos_url": "https://api.github.com/users/exrook/repos", "events_url": "https://api.github.com/users/exrook/events{/privacy}", "received_events_url": "https://api.github.com/users/exrook/received_events", "type": "User", "site_admin": false}, "committer": {"login": "exrook", "id": 534850, "node_id": "MDQ6VXNlcjUzNDg1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/534850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exrook", "html_url": "https://github.com/exrook", "followers_url": "https://api.github.com/users/exrook/followers", "following_url": "https://api.github.com/users/exrook/following{/other_user}", "gists_url": "https://api.github.com/users/exrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/exrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exrook/subscriptions", "organizations_url": "https://api.github.com/users/exrook/orgs", "repos_url": "https://api.github.com/users/exrook/repos", "events_url": "https://api.github.com/users/exrook/events{/privacy}", "received_events_url": "https://api.github.com/users/exrook/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "417b20835d9409ecfc9aa62e25368a5c1040b7ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/417b20835d9409ecfc9aa62e25368a5c1040b7ee", "html_url": "https://github.com/rust-lang/rust/commit/417b20835d9409ecfc9aa62e25368a5c1040b7ee"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "6f79100217aac97bf7eb6c5331309b8aca96770a", "filename": "src/test/ui/variance/variance-btree-invariant-types.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1f7023a51968b8f571b3c3cd3359b49c97999d6c/src%2Ftest%2Fui%2Fvariance%2Fvariance-btree-invariant-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f7023a51968b8f571b3c3cd3359b49c97999d6c/src%2Ftest%2Fui%2Fvariance%2Fvariance-btree-invariant-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-btree-invariant-types.stderr?ref=1f7023a51968b8f571b3c3cd3359b49c97999d6c", "patch": "@@ -104,7 +104,7 @@ LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n    |\n    = note: requirement occurs because of the type `std::collections::btree_map::OccupiedEntry<'_, &(), ()>`, which makes the generic argument `&()` invariant\n-   = note: the struct `std::collections::btree_map::OccupiedEntry<'a, K, V>` is invariant over the parameter `K`\n+   = note: the struct `std::collections::btree_map::OccupiedEntry<'a, K, V, A>` is invariant over the parameter `K`\n    = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance\n \n error: lifetime may not live long enough\n@@ -117,7 +117,7 @@ LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n    |\n    = note: requirement occurs because of the type `std::collections::btree_map::OccupiedEntry<'_, (), &()>`, which makes the generic argument `()` invariant\n-   = note: the struct `std::collections::btree_map::OccupiedEntry<'a, K, V>` is invariant over the parameter `K`\n+   = note: the struct `std::collections::btree_map::OccupiedEntry<'a, K, V, A>` is invariant over the parameter `K`\n    = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance\n \n error: lifetime may not live long enough\n@@ -130,7 +130,7 @@ LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n    |\n    = note: requirement occurs because of the type `std::collections::btree_map::OccupiedEntry<'_, &(), ()>`, which makes the generic argument `&()` invariant\n-   = note: the struct `std::collections::btree_map::OccupiedEntry<'a, K, V>` is invariant over the parameter `K`\n+   = note: the struct `std::collections::btree_map::OccupiedEntry<'a, K, V, A>` is invariant over the parameter `K`\n    = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance\n \n error: lifetime may not live long enough\n@@ -143,7 +143,7 @@ LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n    |\n    = note: requirement occurs because of the type `std::collections::btree_map::OccupiedEntry<'_, (), &()>`, which makes the generic argument `()` invariant\n-   = note: the struct `std::collections::btree_map::OccupiedEntry<'a, K, V>` is invariant over the parameter `K`\n+   = note: the struct `std::collections::btree_map::OccupiedEntry<'a, K, V, A>` is invariant over the parameter `K`\n    = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance\n \n error: lifetime may not live long enough\n@@ -156,7 +156,7 @@ LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n    |\n    = note: requirement occurs because of the type `std::collections::btree_map::VacantEntry<'_, &(), ()>`, which makes the generic argument `&()` invariant\n-   = note: the struct `std::collections::btree_map::VacantEntry<'a, K, V>` is invariant over the parameter `K`\n+   = note: the struct `std::collections::btree_map::VacantEntry<'a, K, V, A>` is invariant over the parameter `K`\n    = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance\n \n error: lifetime may not live long enough\n@@ -169,7 +169,7 @@ LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n    |\n    = note: requirement occurs because of the type `std::collections::btree_map::VacantEntry<'_, (), &()>`, which makes the generic argument `()` invariant\n-   = note: the struct `std::collections::btree_map::VacantEntry<'a, K, V>` is invariant over the parameter `K`\n+   = note: the struct `std::collections::btree_map::VacantEntry<'a, K, V, A>` is invariant over the parameter `K`\n    = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance\n \n error: lifetime may not live long enough\n@@ -182,7 +182,7 @@ LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n    |\n    = note: requirement occurs because of the type `std::collections::btree_map::VacantEntry<'_, &(), ()>`, which makes the generic argument `&()` invariant\n-   = note: the struct `std::collections::btree_map::VacantEntry<'a, K, V>` is invariant over the parameter `K`\n+   = note: the struct `std::collections::btree_map::VacantEntry<'a, K, V, A>` is invariant over the parameter `K`\n    = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance\n \n error: lifetime may not live long enough\n@@ -195,7 +195,7 @@ LL |     v\n    |     ^ returning this value requires that `'new` must outlive `'static`\n    |\n    = note: requirement occurs because of the type `std::collections::btree_map::VacantEntry<'_, (), &()>`, which makes the generic argument `()` invariant\n-   = note: the struct `std::collections::btree_map::VacantEntry<'a, K, V>` is invariant over the parameter `K`\n+   = note: the struct `std::collections::btree_map::VacantEntry<'a, K, V, A>` is invariant over the parameter `K`\n    = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance\n \n error: aborting due to 16 previous errors"}]}