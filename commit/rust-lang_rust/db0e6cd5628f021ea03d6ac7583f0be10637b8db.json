{"sha": "db0e6cd5628f021ea03d6ac7583f0be10637b8db", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMGU2Y2Q1NjI4ZjAyMWVhMDNkNmFjNzU4M2YwYmUxMDYzN2I4ZGI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-12-03T21:15:54Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-12-04T12:13:59Z"}, "message": "fixup clean/types.rs imports", "tree": {"sha": "976077736df163d3c992d8c726cdc0554b0a08e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/976077736df163d3c992d8c726cdc0554b0a08e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db0e6cd5628f021ea03d6ac7583f0be10637b8db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db0e6cd5628f021ea03d6ac7583f0be10637b8db", "html_url": "https://github.com/rust-lang/rust/commit/db0e6cd5628f021ea03d6ac7583f0be10637b8db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db0e6cd5628f021ea03d6ac7583f0be10637b8db/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81e549cc76813acd718497e357e0f15ab73463cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/81e549cc76813acd718497e357e0f15ab73463cf", "html_url": "https://github.com/rust-lang/rust/commit/81e549cc76813acd718497e357e0f15ab73463cf"}], "stats": {"total": 74, "additions": 26, "deletions": 48}, "files": [{"sha": "973548b7492649b3f52de91bf7273c88fc8dc2cd", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 26, "deletions": 48, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/db0e6cd5628f021ea03d6ac7583f0be10637b8db/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db0e6cd5628f021ea03d6ac7583f0be10637b8db/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=db0e6cd5628f021ea03d6ac7583f0be10637b8db", "patch": "@@ -1,67 +1,45 @@\n // ignore-tidy-filelength\n \n-//! This module contains the \"cleaned\" pieces of the AST, and the functions\n-//! that clean them.\n-\n-pub mod inline;\n-pub mod cfg;\n-mod simplify;\n-mod auto_trait;\n-mod blanket_impl;\n+use std::fmt;\n+use std::hash::{Hash, Hasher};\n+use std::default::Default;\n+use std::{slice, vec};\n+use std::num::NonZeroU32;\n+use std::iter::FromIterator;\n+use std::rc::Rc;\n+use std::cell::RefCell;\n+use std::sync::Arc;\n \n-use rustc_index::vec::{IndexVec, Idx};\n-use rustc_target::spec::abi::Abi;\n-use rustc_typeck::hir_ty_to_ty;\n-use rustc::infer::region_constraints::{RegionConstraintData, Constraint};\n-use rustc::middle::resolve_lifetime as rl;\n use rustc::middle::lang_items;\n use rustc::middle::stability;\n-use rustc::mir::interpret::GlobalId;\n use rustc::hir;\n-use rustc::hir::def::{CtorKind, DefKind, Res};\n-use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n-use rustc::hir::ptr::P;\n-use rustc::ty::subst::{InternalSubsts, SubstsRef, GenericArgKind};\n-use rustc::ty::{self, DefIdTree, TyCtxt, Region, RegionVid, Ty, AdtKind};\n-use rustc::ty::fold::TypeFolder;\n+use rustc::hir::def::Res;\n+use rustc::hir::def_id::{CrateNum, DefId};\n use rustc::ty::layout::VariantIdx;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n+use rustc_index::vec::IndexVec;\n+use rustc_target::spec::abi::Abi;\n use syntax::ast::{self, Attribute, AttrStyle, AttrKind, Ident};\n use syntax::attr;\n use syntax::util::comments;\n use syntax::source_map::DUMMY_SP;\n-use syntax_pos::symbol::{Symbol, kw, sym};\n use syntax_pos::hygiene::MacroKind;\n-use syntax_pos::{self, Pos, FileName};\n-\n-use std::collections::hash_map::Entry;\n-use std::fmt;\n-use std::hash::{Hash, Hasher};\n-use std::default::Default;\n-use std::{mem, slice, vec};\n-use std::num::NonZeroU32;\n-use std::iter::FromIterator;\n-use std::rc::Rc;\n-use std::cell::RefCell;\n-use std::sync::Arc;\n-use std::u32;\n-\n-use crate::core::{self, DocContext, ImplTraitParam};\n+use syntax_pos::symbol::{Symbol, sym};\n+use syntax_pos::{self, FileName};\n+\n+use crate::core::DocContext;\n+use crate::clean::cfg::Cfg;\n+use crate::clean::inline;\n+use crate::clean::external_path;\n+use crate::clean::types::Type::{QPath, ResolvedPath};\n use crate::doctree;\n-use crate::html::render::{cache, ExternalLocation};\n use crate::html::item_type::ItemType;\n+use crate::html::render::{cache, ExternalLocation};\n \n-\n-use self::cfg::Cfg;\n-use self::auto_trait::AutoTraitFinder;\n-use self::blanket_impl::BlanketImplFinder;\n-\n-pub use self::Type::*;\n-pub use self::Mutability::*;\n-pub use self::ItemEnum::*;\n-pub use self::SelfTy::*;\n-pub use self::FunctionRetTy::*;\n-pub use self::Visibility::{Public, Inherited};\n+use self::Type::*;\n+use self::ItemEnum::*;\n+use self::SelfTy::*;\n+use self::FunctionRetTy::*;\n \n thread_local!(pub static MAX_DEF_ID: RefCell<FxHashMap<CrateNum, DefId>> = Default::default());\n "}]}