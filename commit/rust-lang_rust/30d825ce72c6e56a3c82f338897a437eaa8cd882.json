{"sha": "30d825ce72c6e56a3c82f338897a437eaa8cd882", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwZDgyNWNlNzJjNmU1NmEzYzgyZjMzODg5N2E0MzdlYWE4Y2Q4ODI=", "commit": {"author": {"name": "Josef Reinhard Brandl", "email": "mail@josefbrandl.de", "date": "2018-06-27T18:15:24Z"}, "committer": {"name": "Josef Reinhard Brandl", "email": "mail@josefbrandl.de", "date": "2018-06-27T18:22:49Z"}, "message": "Fix doc links", "tree": {"sha": "15f403f38e584a1b81bc61e64ee60b7add7a653e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15f403f38e584a1b81bc61e64ee60b7add7a653e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30d825ce72c6e56a3c82f338897a437eaa8cd882", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30d825ce72c6e56a3c82f338897a437eaa8cd882", "html_url": "https://github.com/rust-lang/rust/commit/30d825ce72c6e56a3c82f338897a437eaa8cd882", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30d825ce72c6e56a3c82f338897a437eaa8cd882/comments", "author": {"login": "MajorBreakfast", "id": 340142, "node_id": "MDQ6VXNlcjM0MDE0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/340142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MajorBreakfast", "html_url": "https://github.com/MajorBreakfast", "followers_url": "https://api.github.com/users/MajorBreakfast/followers", "following_url": "https://api.github.com/users/MajorBreakfast/following{/other_user}", "gists_url": "https://api.github.com/users/MajorBreakfast/gists{/gist_id}", "starred_url": "https://api.github.com/users/MajorBreakfast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MajorBreakfast/subscriptions", "organizations_url": "https://api.github.com/users/MajorBreakfast/orgs", "repos_url": "https://api.github.com/users/MajorBreakfast/repos", "events_url": "https://api.github.com/users/MajorBreakfast/events{/privacy}", "received_events_url": "https://api.github.com/users/MajorBreakfast/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MajorBreakfast", "id": 340142, "node_id": "MDQ6VXNlcjM0MDE0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/340142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MajorBreakfast", "html_url": "https://github.com/MajorBreakfast", "followers_url": "https://api.github.com/users/MajorBreakfast/followers", "following_url": "https://api.github.com/users/MajorBreakfast/following{/other_user}", "gists_url": "https://api.github.com/users/MajorBreakfast/gists{/gist_id}", "starred_url": "https://api.github.com/users/MajorBreakfast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MajorBreakfast/subscriptions", "organizations_url": "https://api.github.com/users/MajorBreakfast/orgs", "repos_url": "https://api.github.com/users/MajorBreakfast/repos", "events_url": "https://api.github.com/users/MajorBreakfast/events{/privacy}", "received_events_url": "https://api.github.com/users/MajorBreakfast/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed0350e94569d74bdfe0e612fedfd5ab173f5242", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed0350e94569d74bdfe0e612fedfd5ab173f5242", "html_url": "https://github.com/rust-lang/rust/commit/ed0350e94569d74bdfe0e612fedfd5ab173f5242"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "153cd6c0724d6a2adbe7a19845030ba54ecb409c", "filename": "src/libcore/future.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/30d825ce72c6e56a3c82f338897a437eaa8cd882/src%2Flibcore%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30d825ce72c6e56a3c82f338897a437eaa8cd882/src%2Flibcore%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffuture.rs?ref=30d825ce72c6e56a3c82f338897a437eaa8cd882", "patch": "@@ -45,18 +45,18 @@ pub trait Future {\n     ///\n     /// This function returns:\n     ///\n-    /// - `Poll::Pending` if the future is not ready yet\n-    /// - `Poll::Ready(val)` with the result `val` of this future if it finished\n-    /// successfully.\n+    /// - [`Poll::Pending`] if the future is not ready yet\n+    /// - [`Poll::Ready(val)`] with the result `val` of this future if it\n+    ///   finished successfully.\n     ///\n     /// Once a future has finished, clients should not `poll` it again.\n     ///\n     /// When a future is not ready yet, `poll` returns\n-    /// [`Poll::Pending`](::task::Poll). The future will *also* register the\n+    /// `Poll::Pending`. The future will *also* register the\n     /// interest of the current task in the value being produced. For example,\n     /// if the future represents the availability of data on a socket, then the\n     /// task is recorded so that when data arrives, it is woken up (via\n-    /// [`cx.waker()`](::task::Context::waker)). Once a task has been woken up,\n+    /// [`cx.waker()`]). Once a task has been woken up,\n     /// it should attempt to `poll` the future again, which may or may not\n     /// produce a final value.\n     ///\n@@ -90,6 +90,10 @@ pub trait Future {\n     /// then any future calls to `poll` may panic, block forever, or otherwise\n     /// cause bad behavior. The `Future` trait itself provides no guarantees\n     /// about the behavior of `poll` after a future has completed.\n+    ///\n+    /// [`Poll::Pending`]: ../task/enum.Poll.html#variant.Pending\n+    /// [`Poll::Ready(val)`]: ../task/enum.Poll.html#variant.Ready\n+    /// [`cx.waker()`]: ../task/struct.Context.html#method.waker\n     fn poll(self: PinMut<Self>, cx: &mut task::Context) -> Poll<Self::Output>;\n }\n "}, {"sha": "1958915602f839b3492c3984acbe06f59ba84629", "filename": "src/libstd/error.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/30d825ce72c6e56a3c82f338897a437eaa8cd882/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30d825ce72c6e56a3c82f338897a437eaa8cd882/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=30d825ce72c6e56a3c82f338897a437eaa8cd882", "patch": "@@ -49,6 +49,7 @@ use string;\n ///\n /// [`Result<T, E>`]: ../result/enum.Result.html\n /// [`Display`]: ../fmt/trait.Display.html\n+/// [`Debug`]: ../fmt/trait.Debug.html\n /// [`cause`]: trait.Error.html#method.cause\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Error: Debug + Display {"}]}