{"sha": "4e5d5ba1ed7365f515b438b3ab4fcda31b182faf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNWQ1YmExZWQ3MzY1ZjUxNWI0MzhiM2FiNGZjZGEzMWIxODJmYWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-02T23:01:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-02T23:01:06Z"}, "message": "auto merge of #16850 : vks/rust/hash-num, r=alexcrichton\n\nUpdates #15294.", "tree": {"sha": "7521b9e0178ae0b2669b0d2e339822797bdf25e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7521b9e0178ae0b2669b0d2e339822797bdf25e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e5d5ba1ed7365f515b438b3ab4fcda31b182faf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e5d5ba1ed7365f515b438b3ab4fcda31b182faf", "html_url": "https://github.com/rust-lang/rust/commit/4e5d5ba1ed7365f515b438b3ab4fcda31b182faf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e5d5ba1ed7365f515b438b3ab4fcda31b182faf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e7e107ad69cc6f7facdc9401456a333361b5555", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e7e107ad69cc6f7facdc9401456a333361b5555", "html_url": "https://github.com/rust-lang/rust/commit/0e7e107ad69cc6f7facdc9401456a333361b5555"}, {"sha": "46e6e42d7a17d33da0fd13f2afd81a566ec08ceb", "url": "https://api.github.com/repos/rust-lang/rust/commits/46e6e42d7a17d33da0fd13f2afd81a566ec08ceb", "html_url": "https://github.com/rust-lang/rust/commit/46e6e42d7a17d33da0fd13f2afd81a566ec08ceb"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "24c99a38bd91a0497a0044491e5bbeccde9c740c", "filename": "src/libnum/complex.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4e5d5ba1ed7365f515b438b3ab4fcda31b182faf/src%2Flibnum%2Fcomplex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5d5ba1ed7365f515b438b3ab4fcda31b182faf/src%2Flibnum%2Fcomplex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Fcomplex.rs?ref=4e5d5ba1ed7365f515b438b3ab4fcda31b182faf", "patch": "@@ -12,13 +12,13 @@\n //! Complex numbers.\n \n use std::fmt;\n-use std::num::{Zero,One,ToStrRadix};\n+use std::num::{Zero, One, ToStrRadix};\n \n // FIXME #1284: handle complex NaN & infinity etc. This\n // probably doesn't map to C's _Complex correctly.\n \n /// A complex number in Cartesian form.\n-#[deriving(PartialEq,Clone)]\n+#[deriving(PartialEq, Clone, Hash)]\n pub struct Complex<T> {\n     /// Real portion of the complex number\n     pub re: T,\n@@ -36,10 +36,8 @@ impl<T: Clone + Num> Complex<T> {\n         Complex { re: re, im: im }\n     }\n \n-    /**\n-    Returns the square of the norm (since `T` doesn't necessarily\n-    have a sqrt function), i.e. `re^2 + im^2`.\n-    */\n+    /// Returns the square of the norm (since `T` doesn't necessarily\n+    /// have a sqrt function), i.e. `re^2 + im^2`.\n     #[inline]\n     pub fn norm_sqr(&self) -> T {\n         self.re * self.re + self.im * self.im\n@@ -193,7 +191,8 @@ mod test {\n     #![allow(non_uppercase_statics)]\n \n     use super::{Complex64, Complex};\n-    use std::num::{Zero,One,Float};\n+    use std::num::{Zero, One, Float};\n+    use std::hash::hash;\n \n     pub static _0_0i : Complex64 = Complex { re: 0.0, im: 0.0 };\n     pub static _1_0i : Complex64 = Complex { re: 1.0, im: 0.0 };\n@@ -367,4 +366,14 @@ mod test {\n         test(-_neg1_1i, \"1-1i\".to_string());\n         test(_05_05i, \"0.5+0.5i\".to_string());\n     }\n+\n+    #[test]\n+    fn test_hash() {\n+        let a = Complex::new(0i32, 0i32);\n+        let b = Complex::new(1i32, 0i32);\n+        let c = Complex::new(0i32, 1i32);\n+        assert!(hash(&a) != hash(&b));\n+        assert!(hash(&b) != hash(&c));\n+        assert!(hash(&c) != hash(&a));\n+    }\n }"}, {"sha": "56f3f532533fe9bbc7db02db0daaf09a0aee37b2", "filename": "src/libnum/rational.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4e5d5ba1ed7365f515b438b3ab4fcda31b182faf/src%2Flibnum%2Frational.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5d5ba1ed7365f515b438b3ab4fcda31b182faf/src%2Flibnum%2Frational.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Frational.rs?ref=4e5d5ba1ed7365f515b438b3ab4fcda31b182faf", "patch": "@@ -21,7 +21,7 @@ use std::num::{Zero, One, ToStrRadix, FromStrRadix};\n use bigint::{BigInt, BigUint, Sign, Plus, Minus};\n \n /// Represents the ratio between 2 numbers.\n-#[deriving(Clone)]\n+#[deriving(Clone, Hash)]\n #[allow(missing_doc)]\n pub struct Ratio<T> {\n     numer: T,\n@@ -380,6 +380,7 @@ mod test {\n     use super::{Ratio, Rational, BigRational};\n     use std::num::{Zero, One, FromStrRadix, FromPrimitive, ToStrRadix};\n     use std::from_str::FromStr;\n+    use std::hash::hash;\n     use std::num;\n \n     pub static _0 : Rational = Ratio { numer: 0, denom: 1};\n@@ -751,4 +752,10 @@ mod test {\n         assert!(! _neg1_2.is_positive());\n         assert!(! _1_2.is_negative());\n     }\n+\n+    #[test]\n+    fn test_hash() {\n+        assert!(hash(&_0) != hash(&_1));\n+        assert!(hash(&_0) != hash(&_3_2));\n+    }\n }"}]}