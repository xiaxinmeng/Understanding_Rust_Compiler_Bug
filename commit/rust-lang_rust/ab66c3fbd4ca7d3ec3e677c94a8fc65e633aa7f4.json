{"sha": "ab66c3fbd4ca7d3ec3e677c94a8fc65e633aa7f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNjZjM2ZiZDRjYTdkM2VjM2U2NzdjOTRhOGZjNjVlNjMzYWE3ZjQ=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-06-19T14:49:06Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-06-29T23:08:30Z"}, "message": "Add comment with reasoning for non-determinism", "tree": {"sha": "505b5e7b95ae1017614a046419db3361ebcff0c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/505b5e7b95ae1017614a046419db3361ebcff0c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab66c3fbd4ca7d3ec3e677c94a8fc65e633aa7f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab66c3fbd4ca7d3ec3e677c94a8fc65e633aa7f4", "html_url": "https://github.com/rust-lang/rust/commit/ab66c3fbd4ca7d3ec3e677c94a8fc65e633aa7f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab66c3fbd4ca7d3ec3e677c94a8fc65e633aa7f4/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a59fafeb13aa39991c3b8c704c66289fd8fd9253", "url": "https://api.github.com/repos/rust-lang/rust/commits/a59fafeb13aa39991c3b8c704c66289fd8fd9253", "html_url": "https://github.com/rust-lang/rust/commit/a59fafeb13aa39991c3b8c704c66289fd8fd9253"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "550eb84fc877025622d64c5d531f5be409c281df", "filename": "compiler/rustc_middle/src/mir/interpret/allocation.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ab66c3fbd4ca7d3ec3e677c94a8fc65e633aa7f4/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab66c3fbd4ca7d3ec3e677c94a8fc65e633aa7f4/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs?ref=ab66c3fbd4ca7d3ec3e677c94a8fc65e633aa7f4", "patch": "@@ -127,6 +127,15 @@ impl<Tag> Allocation<Tag> {\n     pub fn uninit(size: Size, align: Align) -> InterpResult<'static, Self> {\n         let mut bytes = Vec::new();\n         bytes.try_reserve(size.bytes_usize()).map_err(|_| {\n+            // This results in an error that can happen non-deterministically, since the memory\n+            // available to the compiler can change between runs. Normally queries are always\n+            // deterministic. However, we can be non-determinstic here because all uses of const\n+            // evaluation do one of:\n+            // - cause a fatal compiler error when they see this error as the result of const\n+            //   evaluation\n+            // - panic on evaluation failure\n+            // - always evaluate very small constants that are practically unlikely to result in\n+            //   memory exhaustion\n             InterpError::ResourceExhaustion(ResourceExhaustionInfo::MemoryExhausted)\n         })?;\n         bytes.resize(size.bytes_usize(), 0);"}]}