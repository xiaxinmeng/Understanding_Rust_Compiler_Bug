{"sha": "91a096a9b8c05011c1a76e7ceb578000ce1e91f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxYTA5NmE5YjhjMDUwMTFjMWE3NmU3Y2ViNTc4MDAwY2UxZTkxZjY=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-10-04T14:31:28Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-10-04T15:11:33Z"}, "message": "move middle::liveness to rustc_passes", "tree": {"sha": "bad1a36d40188347d4336b97bca3c0587fdd236f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bad1a36d40188347d4336b97bca3c0587fdd236f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91a096a9b8c05011c1a76e7ceb578000ce1e91f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91a096a9b8c05011c1a76e7ceb578000ce1e91f6", "html_url": "https://github.com/rust-lang/rust/commit/91a096a9b8c05011c1a76e7ceb578000ce1e91f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91a096a9b8c05011c1a76e7ceb578000ce1e91f6/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e35a2811d8c65e9473176b8656a3201b7e152c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e35a2811d8c65e9473176b8656a3201b7e152c7", "html_url": "https://github.com/rust-lang/rust/commit/9e35a2811d8c65e9473176b8656a3201b7e152c7"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "b522de7d43d38f7300b49e0ebb3036b26d086613", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/91a096a9b8c05011c1a76e7ceb578000ce1e91f6/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91a096a9b8c05011c1a76e7ceb578000ce1e91f6/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=91a096a9b8c05011c1a76e7ceb578000ce1e91f6", "patch": "@@ -111,7 +111,6 @@ pub mod middle {\n     pub mod intrinsicck;\n     pub mod lib_features;\n     pub mod lang_items;\n-    pub mod liveness;\n     pub mod mem_categorization;\n     pub mod privacy;\n     pub mod reachable;"}, {"sha": "ef9da5c2bde8fad56b01e06bb51ae5bd5a963e95", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/91a096a9b8c05011c1a76e7ceb578000ce1e91f6/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91a096a9b8c05011c1a76e7ceb578000ce1e91f6/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=91a096a9b8c05011c1a76e7ceb578000ce1e91f6", "patch": "@@ -781,7 +781,6 @@ pub fn default_provide(providers: &mut ty::query::Providers<'_>) {\n     traits::provide(providers);\n     stability::provide(providers);\n     middle::intrinsicck::provide(providers);\n-    middle::liveness::provide(providers);\n     reachable::provide(providers);\n     rustc_passes::provide(providers);\n     rustc_traits::provide(providers);"}, {"sha": "7aa353cec082b23e90fda8e441c232e7bdc1e871", "filename": "src/librustc_passes/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91a096a9b8c05011c1a76e7ceb578000ce1e91f6/src%2Flibrustc_passes%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91a096a9b8c05011c1a76e7ceb578000ce1e91f6/src%2Flibrustc_passes%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flib.rs?ref=91a096a9b8c05011c1a76e7ceb578000ce1e91f6", "patch": "@@ -22,7 +22,9 @@ pub mod ast_validation;\n pub mod hir_stats;\n pub mod layout_test;\n pub mod loops;\n+mod liveness;\n \n pub fn provide(providers: &mut Providers<'_>) {\n     loops::provide(providers);\n+    liveness::provide(providers);\n }"}, {"sha": "fb06808619f66f096719656fc0fc507a061a9d03", "filename": "src/librustc_passes/liveness.rs", "status": "renamed", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/91a096a9b8c05011c1a76e7ceb578000ce1e91f6/src%2Flibrustc_passes%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91a096a9b8c05011c1a76e7ceb578000ce1e91f6/src%2Flibrustc_passes%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fliveness.rs?ref=91a096a9b8c05011c1a76e7ceb578000ce1e91f6", "patch": "@@ -96,17 +96,17 @@\n use self::LiveNodeKind::*;\n use self::VarKind::*;\n \n-use crate::hir;\n-use crate::hir::{Expr, HirId};\n-use crate::hir::def::*;\n-use crate::hir::def_id::DefId;\n-use crate::hir::intravisit::{self, Visitor, FnKind, NestedVisitorMap};\n-use crate::hir::Node;\n-use crate::hir::ptr::P;\n-use crate::ty::{self, TyCtxt};\n-use crate::ty::query::Providers;\n-use crate::lint;\n-use crate::util::nodemap::{HirIdMap, HirIdSet};\n+use rustc::hir;\n+use rustc::hir::{Expr, HirId};\n+use rustc::hir::def::*;\n+use rustc::hir::def_id::DefId;\n+use rustc::hir::intravisit::{self, Visitor, FnKind, NestedVisitorMap};\n+use rustc::hir::Node;\n+use rustc::hir::ptr::P;\n+use rustc::ty::{self, TyCtxt};\n+use rustc::ty::query::Providers;\n+use rustc::lint;\n+use rustc::util::nodemap::{HirIdMap, HirIdSet};\n \n use errors::Applicability;\n use rustc_data_structures::fx::FxIndexMap;\n@@ -373,7 +373,7 @@ fn visit_fn<'tcx>(\n \n     for param in &body.params {\n         let is_shorthand = match param.pat.kind {\n-            crate::hir::PatKind::Struct(..) => true,\n+            rustc::hir::PatKind::Struct(..) => true,\n             _ => false,\n         };\n         param.pat.each_binding(|_bm, hir_id, _x, ident| {\n@@ -411,7 +411,7 @@ fn add_from_pat(ir: &mut IrMaps<'_>, pat: &P<hir::Pat>) {\n     let mut pats = VecDeque::new();\n     pats.push_back(pat);\n     while let Some(pat) = pats.pop_front() {\n-        use crate::hir::PatKind::*;\n+        use rustc::hir::PatKind::*;\n         match &pat.kind {\n             Binding(.., inner_pat) => {\n                 pats.extend(inner_pat.iter());", "previous_filename": "src/librustc/middle/liveness.rs"}]}