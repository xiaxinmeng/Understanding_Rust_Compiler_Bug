{"sha": "f8aa73d3dd951d69903e962054f2614b083c5b9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YWE3M2QzZGQ5NTFkNjk5MDNlOTYyMDU0ZjI2MTRiMDgzYzViOWM=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-09-15T11:28:10Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-09-15T11:48:27Z"}, "message": "Coerce const FnDefs to implement const Fn traits", "tree": {"sha": "505a93c3c6e2f02e2ef3af176a3bcc0c93ae13f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/505a93c3c6e2f02e2ef3af176a3bcc0c93ae13f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8aa73d3dd951d69903e962054f2614b083c5b9c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEQ7Fl7qPq2YcWF1dqAn35M4hird0FAmFB3YwACgkQAn35M4hi\nrd3ZFQ/+Ny2RvP8rPM3nHC2O+FzMDtaD2BqtWbsJvljtJDOGsVNX71WbMQHYBz3g\nIlRddScmT5zxSa1xJvUtf76LcDeyczAjDQUUAayfQVVS5Wj4KdIy6405h+uShUsl\nEz/an0iI2D3o/RRM851cicECuo0v3Os0+i0uPp4xdIe7N1BEqbcseLZJ+4IogjbW\nTarnlNSSMUjDwwfE14HVWy0UiVYn+DiJLKScWuH7sR5s6w0q8OOSEq0uMSiP4NZw\nlMK3P+xy4Lqwx5vOErmJ4ajNgTGrfH7sSGIzblRuX1TH1zUljKjyaH348viGw9o0\nxDFP+54stgbC4pDbrbighwYx9qb35ziKahjVd32d5lvY6vKf2+wP2NUP9VYRubIf\ngm1mxd2KBz919VCzj53N6+gtyM580dhKQF95RSW6ZlnEDBB0mCTXHNgsv2PMlhup\n9x5n2RdesNhGPCz8oT0W5jrmceHsz6jT+kGXtLnxi4Jd2L/i7V+jkj7MmGhVn3by\nGRrmBltDoS/IlvdwiC+BmGiN5hFoNlYXVvxGCsrXZ47kiV8qRD9hy9o+nenf+HXg\nAMmJbwzN+L6tGYcrvp7QDYRBT9prH57//kntv7X8EtcFNdhI/F7yDi/jTMMAcLmq\npNcQt9n/wUga2A3D1aVwPc903ntmpMlC+kiQZXF7a0hGo+ef8Mk=\n=ZZvS\n-----END PGP SIGNATURE-----", "payload": "tree 505a93c3c6e2f02e2ef3af176a3bcc0c93ae13f0\nparent d3f981b144c742c3e886a6234002a716a177bc98\nauthor Deadbeef <ent3rm4n@gmail.com> 1631705290 +0000\ncommitter Deadbeef <ent3rm4n@gmail.com> 1631706507 +0000\n\nCoerce const FnDefs to implement const Fn traits\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8aa73d3dd951d69903e962054f2614b083c5b9c", "html_url": "https://github.com/rust-lang/rust/commit/f8aa73d3dd951d69903e962054f2614b083c5b9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8aa73d3dd951d69903e962054f2614b083c5b9c/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3f981b144c742c3e886a6234002a716a177bc98", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3f981b144c742c3e886a6234002a716a177bc98", "html_url": "https://github.com/rust-lang/rust/commit/d3f981b144c742c3e886a6234002a716a177bc98"}], "stats": {"total": 68, "additions": 55, "deletions": 13}, "files": [{"sha": "c1cb5326ca35a0d2901cd10c192de04450bc132d", "filename": "compiler/rustc_const_eval/src/transform/promote_consts.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f8aa73d3dd951d69903e962054f2614b083c5b9c/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8aa73d3dd951d69903e962054f2614b083c5b9c/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fpromote_consts.rs?ref=f8aa73d3dd951d69903e962054f2614b083c5b9c", "patch": "@@ -655,8 +655,7 @@ impl<'tcx> Validator<'_, 'tcx> {\n \n         let is_const_fn = match *fn_ty.kind() {\n             ty::FnDef(def_id, _) => {\n-                self.tcx.is_const_fn_raw(def_id)\n-                    || is_lang_panic_fn(self.tcx, def_id)\n+                self.tcx.is_const_fn_raw(def_id) || is_lang_panic_fn(self.tcx, def_id)\n             }\n             _ => false,\n         };"}, {"sha": "e236c4712c883c4bf3e486eca75eba86a884da8e", "filename": "compiler/rustc_middle/src/traits/select.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f8aa73d3dd951d69903e962054f2614b083c5b9c/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8aa73d3dd951d69903e962054f2614b083c5b9c/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fselect.rs?ref=f8aa73d3dd951d69903e962054f2614b083c5b9c", "patch": "@@ -120,7 +120,9 @@ pub enum SelectionCandidate<'tcx> {\n \n     /// Implementation of a `Fn`-family trait by one of the anonymous\n     /// types generated for a fn pointer type (e.g., `fn(int) -> int`)\n-    FnPointerCandidate,\n+    FnPointerCandidate {\n+        is_const: bool,\n+    },\n \n     /// Builtin implementation of `DiscriminantKind`.\n     DiscriminantKindCandidate,"}, {"sha": "8cbae81f67348d0d824445c4d90b4c0914d4e3eb", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f8aa73d3dd951d69903e962054f2614b083c5b9c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8aa73d3dd951d69903e962054f2614b083c5b9c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=f8aa73d3dd951d69903e962054f2614b083c5b9c", "patch": "@@ -2750,7 +2750,10 @@ impl<'tcx> TyCtxt<'tcx> {\n                 Some(stability) if stability.level.is_unstable() => {\n                     // has a `rustc_const_unstable` attribute, check whether the user enabled the\n                     // corresponding feature gate.\n-                    self.features().declared_lib_features.iter().any(|&(sym, _)| sym == stability.feature)\n+                    self.features()\n+                        .declared_lib_features\n+                        .iter()\n+                        .any(|&(sym, _)| sym == stability.feature)\n                 }\n                 // functions without const stability are either stable user written\n                 // const fn or the user is using feature gates and we thus don't"}, {"sha": "d31ae216d3a57e4ffbc36d5ec81872c04c0544ac", "filename": "compiler/rustc_trait_selection/src/traits/select/candidate_assembly.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f8aa73d3dd951d69903e962054f2614b083c5b9c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8aa73d3dd951d69903e962054f2614b083c5b9c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs?ref=f8aa73d3dd951d69903e962054f2614b083c5b9c", "patch": "@@ -475,7 +475,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                     ..\n                 } = self_ty.fn_sig(self.tcx()).skip_binder()\n                 {\n-                    candidates.vec.push(FnPointerCandidate);\n+                    candidates.vec.push(FnPointerCandidate { is_const: false });\n                 }\n             }\n             // Provide an impl for suitable functions, rejecting `#[target_feature]` functions (RFC 2396).\n@@ -488,7 +488,9 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 } = self_ty.fn_sig(self.tcx()).skip_binder()\n                 {\n                     if self.tcx().codegen_fn_attrs(def_id).target_features.is_empty() {\n-                        candidates.vec.push(FnPointerCandidate);\n+                        candidates\n+                            .vec\n+                            .push(FnPointerCandidate { is_const: self.tcx().is_const_fn(def_id) });\n                     }\n                 }\n             }"}, {"sha": "b3ebd1cb1c440e4339a6f3a42d1e21121e9fbd07", "filename": "compiler/rustc_trait_selection/src/traits/select/confirmation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8aa73d3dd951d69903e962054f2614b083c5b9c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8aa73d3dd951d69903e962054f2614b083c5b9c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs?ref=f8aa73d3dd951d69903e962054f2614b083c5b9c", "patch": "@@ -92,7 +92,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 Ok(ImplSource::Generator(vtable_generator))\n             }\n \n-            FnPointerCandidate => {\n+            FnPointerCandidate { .. } => {\n                 let data = self.confirm_fn_pointer_candidate(obligation)?;\n                 Ok(ImplSource::FnPointer(data))\n             }"}, {"sha": "8dfd71e9cfb65db8d494c25e10163ecb8836f7ee", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f8aa73d3dd951d69903e962054f2614b083c5b9c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8aa73d3dd951d69903e962054f2614b083c5b9c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=f8aa73d3dd951d69903e962054f2614b083c5b9c", "patch": "@@ -1100,6 +1100,8 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 // generator, this will raise error in other places\n                 // or ignore error with const_async_blocks feature\n                 GeneratorCandidate => {}\n+                // FnDef where the function is const\n+                FnPointerCandidate { is_const: true } => {}\n                 ConstDropCandidate => {}\n                 _ => {\n                     // reject all other types of candidates\n@@ -1513,6 +1515,9 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 }\n             }\n \n+            // Drop otherwise equivalent non-const fn pointer candidates\n+            (FnPointerCandidate { .. }, FnPointerCandidate { is_const: false }) => true,\n+\n             // Global bounds from the where clause should be ignored\n             // here (see issue #50825). Otherwise, we have a where\n             // clause so don't go around looking for impls.\n@@ -1523,7 +1528,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 ImplCandidate(..)\n                 | ClosureCandidate\n                 | GeneratorCandidate\n-                | FnPointerCandidate\n+                | FnPointerCandidate { .. }\n                 | BuiltinObjectCandidate\n                 | BuiltinUnsizeCandidate\n                 | TraitUpcastingUnsizeCandidate(_)\n@@ -1541,7 +1546,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 ImplCandidate(_)\n                 | ClosureCandidate\n                 | GeneratorCandidate\n-                | FnPointerCandidate\n+                | FnPointerCandidate { .. }\n                 | BuiltinObjectCandidate\n                 | BuiltinUnsizeCandidate\n                 | TraitUpcastingUnsizeCandidate(_)\n@@ -1571,7 +1576,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 ImplCandidate(..)\n                 | ClosureCandidate\n                 | GeneratorCandidate\n-                | FnPointerCandidate\n+                | FnPointerCandidate { .. }\n                 | BuiltinObjectCandidate\n                 | BuiltinUnsizeCandidate\n                 | TraitUpcastingUnsizeCandidate(_)\n@@ -1583,7 +1588,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 ImplCandidate(..)\n                 | ClosureCandidate\n                 | GeneratorCandidate\n-                | FnPointerCandidate\n+                | FnPointerCandidate { .. }\n                 | BuiltinObjectCandidate\n                 | BuiltinUnsizeCandidate\n                 | TraitUpcastingUnsizeCandidate(_)\n@@ -1664,7 +1669,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 ImplCandidate(_)\n                 | ClosureCandidate\n                 | GeneratorCandidate\n-                | FnPointerCandidate\n+                | FnPointerCandidate { .. }\n                 | BuiltinObjectCandidate\n                 | BuiltinUnsizeCandidate\n                 | TraitUpcastingUnsizeCandidate(_)\n@@ -1673,7 +1678,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 ImplCandidate(_)\n                 | ClosureCandidate\n                 | GeneratorCandidate\n-                | FnPointerCandidate\n+                | FnPointerCandidate { .. }\n                 | BuiltinObjectCandidate\n                 | BuiltinUnsizeCandidate\n                 | TraitUpcastingUnsizeCandidate(_)"}, {"sha": "99e608797ff650c2c2b943c83d04d4acdb8084f0", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-closures.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f8aa73d3dd951d69903e962054f2614b083c5b9c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-closures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8aa73d3dd951d69903e962054f2614b083c5b9c/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-closures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-closures.rs?ref=f8aa73d3dd951d69903e962054f2614b083c5b9c", "patch": "@@ -0,0 +1,31 @@\n+// run-pass\n+\n+#![feature(const_trait_impl)]\n+#![feature(const_fn_trait_bound)]\n+\n+const fn answer_p1<F>(f: &F) -> u8\n+    where\n+        F: ~const FnOnce() -> u8,\n+        F: ~const FnMut() -> u8,\n+        F: ~const Fn() -> u8,\n+{\n+    f() * 7\n+}\n+\n+const fn three() -> u8 {\n+    3\n+}\n+\n+const fn answer_p2() -> u8 {\n+    answer_p1(&three)\n+}\n+\n+const fn answer<F: ~const Fn() -> u8>(f: &F) -> u8 {\n+    f() + f()\n+}\n+\n+const ANSWER: u8 = answer(&answer_p2);\n+\n+fn main() {\n+    assert_eq!(ANSWER, 42)\n+}"}]}