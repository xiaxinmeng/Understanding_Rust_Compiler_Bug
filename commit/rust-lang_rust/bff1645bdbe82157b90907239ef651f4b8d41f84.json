{"sha": "bff1645bdbe82157b90907239ef651f4b8d41f84", "node_id": "C_kwDOAAsO6NoAKGJmZjE2NDViZGJlODIxNTdiOTA5MDcyMzllZjY1MWY0YjhkNDFmODQ", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-11-23T02:47:58Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-11-23T02:47:58Z"}, "message": "fix(doctest): detect extern crate items in statement doctests\n\nThis partially reverts #91026, because rustdoc needs to detect the extern statements,\neven when they appear inside implicit `main()`. It does not entirely revert it,\nso the old bug is still fixed, by duplicating some of the logic from `parse_mod`\ninstead of trying to use it directly.\n\nFixes #91134", "tree": {"sha": "f015a66fb4d735e722180a3828a72f70c22b494d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f015a66fb4d735e722180a3828a72f70c22b494d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bff1645bdbe82157b90907239ef651f4b8d41f84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bff1645bdbe82157b90907239ef651f4b8d41f84", "html_url": "https://github.com/rust-lang/rust/commit/bff1645bdbe82157b90907239ef651f4b8d41f84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bff1645bdbe82157b90907239ef651f4b8d41f84/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "214ad2f5b5ff529548ce13dabcda8d5841df0bd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/214ad2f5b5ff529548ce13dabcda8d5841df0bd7", "html_url": "https://github.com/rust-lang/rust/commit/214ad2f5b5ff529548ce13dabcda8d5841df0bd7"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "17e79a02360e8478e0c550bdc340b43489de0151", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bff1645bdbe82157b90907239ef651f4b8d41f84/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bff1645bdbe82157b90907239ef651f4b8d41f84/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=bff1645bdbe82157b90907239ef651f4b8d41f84", "patch": "@@ -1121,7 +1121,7 @@ impl<'a> Parser<'a> {\n         Ok(P(T::recovered(Some(QSelf { ty, path_span, position: 0 }), path)))\n     }\n \n-    pub(super) fn maybe_consume_incorrect_semicolon(&mut self, items: &[P<Item>]) -> bool {\n+    pub fn maybe_consume_incorrect_semicolon(&mut self, items: &[P<Item>]) -> bool {\n         if self.eat(&token::Semi) {\n             let mut err = self.struct_span_err(self.prev_token.span, \"expected item, found `;`\");\n             err.span_suggestion_short("}, {"sha": "de4a3732e736bbcc68b89fadb052d71d375a56f4", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/bff1645bdbe82157b90907239ef651f4b8d41f84/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bff1645bdbe82157b90907239ef651f4b8d41f84/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=bff1645bdbe82157b90907239ef651f4b8d41f84", "patch": "@@ -1,4 +1,4 @@\n-use rustc_ast::{self as ast, token};\n+use rustc_ast as ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::{ColorConfig, ErrorReported, FatalError};\n@@ -537,6 +537,7 @@ crate fn make_test(\n             use rustc_errors::emitter::{Emitter, EmitterWriter};\n             use rustc_errors::Handler;\n             use rustc_parse::maybe_new_parser_from_source_str;\n+            use rustc_parse::parser::ForceCollect;\n             use rustc_session::parse::ParseSess;\n             use rustc_span::source_map::FilePathMapping;\n \n@@ -572,9 +573,9 @@ crate fn make_test(\n                 }\n             };\n \n-            match parser.parse_mod(&token::Eof) {\n-                Ok((_attrs, items, _span)) => {\n-                    for item in items {\n+            loop {\n+                match parser.parse_item(ForceCollect::No) {\n+                    Ok(Some(item)) => {\n                         if !found_main {\n                             if let ast::ItemKind::Fn(..) = item.kind {\n                                 if item.ident.name == sym::main {\n@@ -606,10 +607,16 @@ crate fn make_test(\n                             break;\n                         }\n                     }\n+                    Ok(None) => break,\n+                    Err(mut e) => {\n+                        e.cancel();\n+                        break;\n+                    }\n                 }\n-                Err(mut e) => {\n-                    e.cancel();\n-                }\n+\n+                // The supplied slice is only used for diagnostics,\n+                // which are swallowed here anyway.\n+                parser.maybe_consume_incorrect_semicolon(&[]);\n             }\n \n             // Reset errors so that they won't be reported as compiler bugs when dropping the"}, {"sha": "877810f15d7fe7f69c5f70c659393d9c4f932151", "filename": "src/test/rustdoc-ui/auxiliary/empty-fn.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bff1645bdbe82157b90907239ef651f4b8d41f84/src%2Ftest%2Frustdoc-ui%2Fauxiliary%2Fempty-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bff1645bdbe82157b90907239ef651f4b8d41f84/src%2Ftest%2Frustdoc-ui%2Fauxiliary%2Fempty-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fauxiliary%2Fempty-fn.rs?ref=bff1645bdbe82157b90907239ef651f4b8d41f84", "patch": "@@ -0,0 +1,3 @@\n+// no-prefer-dynamic\n+#![crate_type = \"lib\"]\n+pub fn empty() {}"}, {"sha": "d2ff3a252266f4705836d4ebd7a10f1ad1a8c731", "filename": "src/test/rustdoc-ui/issue-91134.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bff1645bdbe82157b90907239ef651f4b8d41f84/src%2Ftest%2Frustdoc-ui%2Fissue-91134.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bff1645bdbe82157b90907239ef651f4b8d41f84/src%2Ftest%2Frustdoc-ui%2Fissue-91134.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-91134.rs?ref=bff1645bdbe82157b90907239ef651f4b8d41f84", "patch": "@@ -0,0 +1,14 @@\n+// compile-flags: --test --crate-name=empty_fn --extern=empty_fn --test-args=--test-threads=1\n+// aux-build:empty-fn.rs\n+// check-pass\n+// normalize-stdout-test: \"src/test/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n+// edition:2021\n+\n+/// <https://github.com/rust-lang/rust/issues/91134>\n+///\n+/// ```\n+/// extern crate empty_fn;\n+/// empty_fn::empty();\n+/// ```\n+pub struct Something;"}, {"sha": "8e65c2f3cd169d6430196ce54bde09401222e7c1", "filename": "src/test/rustdoc-ui/issue-91134.stdout", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bff1645bdbe82157b90907239ef651f4b8d41f84/src%2Ftest%2Frustdoc-ui%2Fissue-91134.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/bff1645bdbe82157b90907239ef651f4b8d41f84/src%2Ftest%2Frustdoc-ui%2Fissue-91134.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-91134.stdout?ref=bff1645bdbe82157b90907239ef651f4b8d41f84", "patch": "@@ -0,0 +1,6 @@\n+\n+running 1 test\n+test $DIR/issue-91134.rs - something (line 10) ... ok\n+\n+test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME\n+"}]}