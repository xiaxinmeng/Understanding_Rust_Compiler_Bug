{"sha": "a7c1c47c8344d9d567968866db7232713b6b8902", "node_id": "C_kwDOAAsO6NoAKGE3YzFjNDdjODM0NGQ5ZDU2Nzk2ODg2NmRiNzIzMjcxM2I2Yjg5MDI", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-02-25T16:25:32Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-02-25T16:25:32Z"}, "message": "Fix review comments", "tree": {"sha": "4061ddc97d09c5e6571448e3ef4b9f01db0d7890", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4061ddc97d09c5e6571448e3ef4b9f01db0d7890"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7c1c47c8344d9d567968866db7232713b6b8902", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c1c47c8344d9d567968866db7232713b6b8902", "html_url": "https://github.com/rust-lang/rust/commit/a7c1c47c8344d9d567968866db7232713b6b8902", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7c1c47c8344d9d567968866db7232713b6b8902/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62e9b50f8d894cad16bf514241e1f65bdf582022", "url": "https://api.github.com/repos/rust-lang/rust/commits/62e9b50f8d894cad16bf514241e1f65bdf582022", "html_url": "https://github.com/rust-lang/rust/commit/62e9b50f8d894cad16bf514241e1f65bdf582022"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "d3513ddde48364f3c0da03d7c3717978a12f64aa", "filename": "src/builder.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a7c1c47c8344d9d567968866db7232713b6b8902/src%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c1c47c8344d9d567968866db7232713b6b8902/src%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuilder.rs?ref=a7c1c47c8344d9d567968866db7232713b6b8902", "patch": "@@ -114,7 +114,7 @@ impl<'a, 'gcc, 'tcx> Builder<'a, 'gcc, 'tcx> {\n         let after_block = func.new_block(\"after_while\");\n         self.llbb().end_with_jump(None, while_block);\n \n-        // NOTE: since jumps were added and compare_exchange doesn't expect this, the current blocks in the\n+        // NOTE: since jumps were added and compare_exchange doesn't expect this, the current block in the\n         // state need to be updated.\n         self.switch_to_block(while_block);\n \n@@ -131,7 +131,7 @@ impl<'a, 'gcc, 'tcx> Builder<'a, 'gcc, 'tcx> {\n \n         while_block.end_with_conditional(None, cond, while_block, after_block);\n \n-        // NOTE: since jumps were added in a place rustc does not expect, the current blocks in the\n+        // NOTE: since jumps were added in a place rustc does not expect, the current block in the\n         // state need to be updated.\n         self.switch_to_block(after_block);\n \n@@ -906,6 +906,11 @@ impl<'a, 'gcc, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'gcc, 'tcx> {\n     }\n \n     fn inttoptr(&mut self, value: RValue<'gcc>, dest_ty: Type<'gcc>) -> RValue<'gcc> {\n+        assert_eq!(\n+            value.get_type(),\n+            self.cx.type_isize(),\n+            \"cg_ssa currently only calls this function with an isize argument\",\n+        );\n         self.cx.const_bitcast(value, dest_ty)\n     }\n \n@@ -1007,7 +1012,7 @@ impl<'a, 'gcc, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'gcc, 'tcx> {\n         else_block.add_assignment(None, variable, else_val);\n         else_block.end_with_jump(None, after_block);\n \n-        // NOTE: since jumps were added in a place rustc does not expect, the current blocks in the\n+        // NOTE: since jumps were added in a place rustc does not expect, the current block in the\n         // state need to be updated.\n         self.switch_to_block(after_block);\n "}, {"sha": "81f841e72cf7cd347d86c35776ecb1d0df096d27", "filename": "src/intrinsic/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a7c1c47c8344d9d567968866db7232713b6b8902/src%2Fintrinsic%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c1c47c8344d9d567968866db7232713b6b8902/src%2Fintrinsic%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic%2Fmod.rs?ref=a7c1c47c8344d9d567968866db7232713b6b8902", "patch": "@@ -184,7 +184,7 @@ impl<'a, 'gcc, 'tcx> IntrinsicCallMethods<'tcx> for Builder<'a, 'gcc, 'tcx> {\n                                     then_block.end_with_jump(None, after_block);\n \n                                     // NOTE: since jumps were added in a place\n-                                    // count_leading_zeroes() does not expect, the current blocks\n+                                    // count_leading_zeroes() does not expect, the current block\n                                     // in the state need to be updated.\n                                     self.switch_to_block(else_block);\n \n@@ -198,7 +198,7 @@ impl<'a, 'gcc, 'tcx> IntrinsicCallMethods<'tcx> for Builder<'a, 'gcc, 'tcx> {\n                                     self.llbb().end_with_jump(None, after_block);\n \n                                     // NOTE: since jumps were added in a place rustc does not\n-                                    // expect, the current blocks in the state need to be updated.\n+                                    // expect, the current block in the state need to be updated.\n                                     self.switch_to_block(after_block);\n \n                                     result.to_rvalue()\n@@ -1000,7 +1000,7 @@ impl<'a, 'gcc, 'tcx> Builder<'a, 'gcc, 'tcx> {\n             self.llbb().end_with_conditional(None, overflow, then_block, after_block);\n \n             // NOTE: since jumps were added in a place rustc does not\n-            // expect, the current blocks in the state need to be updated.\n+            // expect, the current block in the state need to be updated.\n             self.switch_to_block(after_block);\n \n             res.to_rvalue()\n@@ -1070,7 +1070,7 @@ impl<'a, 'gcc, 'tcx> Builder<'a, 'gcc, 'tcx> {\n             self.llbb().end_with_conditional(None, overflow, then_block, after_block);\n \n             // NOTE: since jumps were added in a place rustc does not\n-            // expect, the current blocks in the state need to be updated.\n+            // expect, the current block in the state need to be updated.\n             self.switch_to_block(after_block);\n \n             res.to_rvalue()"}]}