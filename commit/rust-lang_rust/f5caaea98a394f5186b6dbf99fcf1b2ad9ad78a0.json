{"sha": "f5caaea98a394f5186b6dbf99fcf1b2ad9ad78a0", "node_id": "C_kwDOAAsO6NoAKGY1Y2FhZWE5OGEzOTRmNTE4NmI2ZGJmOTlmY2YxYjJhZDlhZDc4YTA", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-13T11:14:59Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-13T11:23:53Z"}, "message": "add is_sized method on Abi and Layout, and use it", "tree": {"sha": "b7b8376df14945cec335332b03b147d5e18c5319", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7b8376df14945cec335332b03b147d5e18c5319"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5caaea98a394f5186b6dbf99fcf1b2ad9ad78a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5caaea98a394f5186b6dbf99fcf1b2ad9ad78a0", "html_url": "https://github.com/rust-lang/rust/commit/f5caaea98a394f5186b6dbf99fcf1b2ad9ad78a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5caaea98a394f5186b6dbf99fcf1b2ad9ad78a0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ade426fa83a4840a3940aee184e8b65ecfeeb6aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/ade426fa83a4840a3940aee184e8b65ecfeeb6aa", "html_url": "https://github.com/rust-lang/rust/commit/ade426fa83a4840a3940aee184e8b65ecfeeb6aa"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "df1150ec0b8ce266e610de2a0a52052ebd9dc992", "filename": "src/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5caaea98a394f5186b6dbf99fcf1b2ad9ad78a0/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5caaea98a394f5186b6dbf99fcf1b2ad9ad78a0/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=f5caaea98a394f5186b6dbf99fcf1b2ad9ad78a0", "patch": "@@ -128,7 +128,7 @@ pub(crate) fn codegen_const_value<'tcx>(\n     ty: Ty<'tcx>,\n ) -> CValue<'tcx> {\n     let layout = fx.layout_of(ty);\n-    assert!(!layout.is_unsized(), \"sized const value\");\n+    assert!(layout.is_sized(), \"unsized const value\");\n \n     if layout.is_zst() {\n         return CValue::by_ref(crate::Pointer::dangling(layout.align.pref), layout);"}, {"sha": "c5bd574623df68d2644ce5908d136d696b12e979", "filename": "src/value_and_place.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5caaea98a394f5186b6dbf99fcf1b2ad9ad78a0/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5caaea98a394f5186b6dbf99fcf1b2ad9ad78a0/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=f5caaea98a394f5186b6dbf99fcf1b2ad9ad78a0", "patch": "@@ -19,7 +19,7 @@ fn codegen_field<'tcx>(\n     };\n \n     if let Some(extra) = extra {\n-        if !field_layout.is_unsized() {\n+        if field_layout.is_sized() {\n             return simple(fx);\n         }\n         match field_layout.ty.kind() {\n@@ -364,7 +364,7 @@ impl<'tcx> CPlace<'tcx> {\n         fx: &mut FunctionCx<'_, '_, 'tcx>,\n         layout: TyAndLayout<'tcx>,\n     ) -> CPlace<'tcx> {\n-        assert!(!layout.is_unsized());\n+        assert!(layout.is_sized());\n         if layout.size.bytes() == 0 {\n             return CPlace {\n                 inner: CPlaceInner::Addr(Pointer::dangling(layout.align.pref), None),\n@@ -825,7 +825,7 @@ impl<'tcx> CPlace<'tcx> {\n         fx: &FunctionCx<'_, '_, 'tcx>,\n         variant: VariantIdx,\n     ) -> Self {\n-        assert!(!self.layout().is_unsized());\n+        assert!(self.layout().is_sized());\n         let layout = self.layout().for_variant(fx, variant);\n         CPlace { inner: self.inner, layout }\n     }"}]}