{"sha": "20c3b8e13f8f8549af221762300c3222d72ccae0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYzNiOGUxM2Y4Zjg1NDlhZjIyMTc2MjMwMGMzMjIyZDcyY2NhZTA=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2021-05-24T23:07:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-24T23:07:12Z"}, "message": "Merge pull request #120 from miguelraz/simd_fsqrt\n\nadd simd_fsqrt intrinsic", "tree": {"sha": "ca46a0d5d141a46c83b416c5450ef04b92e0d85d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca46a0d5d141a46c83b416c5450ef04b92e0d85d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20c3b8e13f8f8549af221762300c3222d72ccae0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgrDGgCRBK7hj4Ov3rIwAA13gIABqfbkZL1DIu3htiBlO2JIJm\nNMJxevpemOqYHkmA7LAO3Ly/ttkCcDMRdxRqm40l5I8jdLGbrQV2+yMFFcJogg3m\n5mJAbQpJCAbN65Phxc56u/+9+5QuH/hqeg45codWhr97AO1cvBcTjBZfnFP1i+Rj\nSAjBU53uHCbw9+UReihPgpbV3Gz37HebumWrOLRF166cwdcJGgnco5K+tzikvX1z\ng49h2J1ErHxuhcskSeBTatmW6kk322HpHWVjuFNsj7xeJzNDNrCwJKiViKEDj+lY\ndMmGqOCDNTxPbkh8FfpzqoEJSvSolwcdtcxhViai2GUzqD1JJRF/3mJ5PdpAva0=\n=/Yuf\n-----END PGP SIGNATURE-----\n", "payload": "tree ca46a0d5d141a46c83b416c5450ef04b92e0d85d\nparent 1c18f8fd59b9d7e4632393076bf2780d7c97ba12\nparent d6795814d402ec47c98c023dd3f298c6a3f5bfa1\nauthor Caleb Zulawski <caleb.zulawski@gmail.com> 1621897632 -0400\ncommitter GitHub <noreply@github.com> 1621897632 -0400\n\nMerge pull request #120 from miguelraz/simd_fsqrt\n\nadd simd_fsqrt intrinsic"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20c3b8e13f8f8549af221762300c3222d72ccae0", "html_url": "https://github.com/rust-lang/rust/commit/20c3b8e13f8f8549af221762300c3222d72ccae0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20c3b8e13f8f8549af221762300c3222d72ccae0/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c18f8fd59b9d7e4632393076bf2780d7c97ba12", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c18f8fd59b9d7e4632393076bf2780d7c97ba12", "html_url": "https://github.com/rust-lang/rust/commit/1c18f8fd59b9d7e4632393076bf2780d7c97ba12"}, {"sha": "d6795814d402ec47c98c023dd3f298c6a3f5bfa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6795814d402ec47c98c023dd3f298c6a3f5bfa1", "html_url": "https://github.com/rust-lang/rust/commit/d6795814d402ec47c98c023dd3f298c6a3f5bfa1"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "7adf4c24e104ee79518f85167fe55495517bda72", "filename": "crates/core_simd/src/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/20c3b8e13f8f8549af221762300c3222d72ccae0/crates%2Fcore_simd%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20c3b8e13f8f8549af221762300c3222d72ccae0/crates%2Fcore_simd%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fintrinsics.rs?ref=20c3b8e13f8f8549af221762300c3222d72ccae0", "patch": "@@ -45,6 +45,9 @@ extern \"platform-intrinsic\" {\n \n     /// fabs\n     pub(crate) fn simd_fabs<T>(x: T) -> T;\n+    \n+    /// fsqrt\n+    pub(crate) fn simd_fsqrt<T>(x: T) -> T;\n \n     pub(crate) fn simd_eq<T, U>(x: T, y: T) -> U;\n     pub(crate) fn simd_ne<T, U>(x: T, y: T) -> U;"}, {"sha": "c4565a9dd900bb3afb9fd3cf0e924b573a7b8d45", "filename": "crates/core_simd/src/vector/float.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/20c3b8e13f8f8549af221762300c3222d72ccae0/crates%2Fcore_simd%2Fsrc%2Fvector%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20c3b8e13f8f8549af221762300c3222d72ccae0/crates%2Fcore_simd%2Fsrc%2Fvector%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvector%2Ffloat.rs?ref=20c3b8e13f8f8549af221762300c3222d72ccae0", "patch": "@@ -35,6 +35,14 @@ macro_rules! impl_float_vector {\n             pub fn abs(self) -> Self {\n                 unsafe { crate::intrinsics::simd_fabs(self) }\n             }\n+\n+            /// Produces a vector where every lane has the square root value\n+            /// of the equivalently-indexed lane in `self`\n+            #[inline]\n+            #[cfg(feature = \"std\")]\n+            pub fn sqrt(self) -> Self {\n+                unsafe { crate::intrinsics::simd_fsqrt(self) }\n+            }\n         }\n \n         impl<const LANES: usize> $name<LANES>"}, {"sha": "83c6fec69e883c357ed5e094b785d2ec056b705b", "filename": "crates/core_simd/tests/ops_macros.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/20c3b8e13f8f8549af221762300c3222d72ccae0/crates%2Fcore_simd%2Ftests%2Fops_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20c3b8e13f8f8549af221762300c3222d72ccae0/crates%2Fcore_simd%2Ftests%2Fops_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Ftests%2Fops_macros.rs?ref=20c3b8e13f8f8549af221762300c3222d72ccae0", "patch": "@@ -426,6 +426,13 @@ macro_rules! impl_float_tests {\n                     )\n                 }\n \n+                fn sqrt<const LANES: usize>() {\n+                    test_helpers::test_unary_elementwise(\n+                        &Vector::<LANES>::sqrt,\n+                        &Scalar::sqrt,\n+                        &|_| true,\n+                    )\n+                }\n                 fn horizontal_sum<const LANES: usize>() {\n                     test_helpers::test_1(&|x| {\n                         test_helpers::prop_assert_biteq! ("}]}