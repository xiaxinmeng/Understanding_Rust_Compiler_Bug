{"sha": "58002faca0ac45589c6092030a5459eae9720e3d", "node_id": "C_kwDOAAsO6NoAKDU4MDAyZmFjYTBhYzQ1NTg5YzYwOTIwMzBhNTQ1OWVhZTk3MjBlM2Q", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-05-01T06:06:43Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-05-04T03:11:51Z"}, "message": "Reorder some `MemDecoder` methods.\n\nSo they match the order in the `Decoder` trait.", "tree": {"sha": "1c624a242a01eee5d66bd00278df4e7e66f9f5b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c624a242a01eee5d66bd00278df4e7e66f9f5b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58002faca0ac45589c6092030a5459eae9720e3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58002faca0ac45589c6092030a5459eae9720e3d", "html_url": "https://github.com/rust-lang/rust/commit/58002faca0ac45589c6092030a5459eae9720e3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58002faca0ac45589c6092030a5459eae9720e3d/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b71ce293e843f17e27bd2868981dead23691019e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b71ce293e843f17e27bd2868981dead23691019e", "html_url": "https://github.com/rust-lang/rust/commit/b71ce293e843f17e27bd2868981dead23691019e"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "b0e158a8f5d01a91e94f9b77e5c1db0d32183491", "filename": "compiler/rustc_middle/src/ty/codec.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/58002faca0ac45589c6092030a5459eae9720e3d/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcodec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58002faca0ac45589c6092030a5459eae9720e3d/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcodec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcodec.rs?ref=58002faca0ac45589c6092030a5459eae9720e3d", "patch": "@@ -506,19 +506,19 @@ macro_rules! implement_ty_decoder {\n \n             impl<$($typaram ),*> Decoder for $DecoderName<$($typaram),*> {\n                 $crate::__impl_decoder_methods! {\n+                    read_usize -> usize;\n                     read_u128 -> u128;\n                     read_u64 -> u64;\n                     read_u32 -> u32;\n                     read_u16 -> u16;\n                     read_u8 -> u8;\n-                    read_usize -> usize;\n \n+                    read_isize -> isize;\n                     read_i128 -> i128;\n                     read_i64 -> i64;\n                     read_i32 -> i32;\n                     read_i16 -> i16;\n                     read_i8 -> i8;\n-                    read_isize -> isize;\n \n                     read_bool -> bool;\n                     read_char -> char;\n@@ -531,13 +531,13 @@ macro_rules! implement_ty_decoder {\n                 }\n \n                 #[inline]\n-                fn position(&self) -> usize {\n-                    self.opaque.position()\n+                fn peek_byte(&self) -> u8 {\n+                    self.opaque.peek_byte()\n                 }\n \n                 #[inline]\n-                fn peek_byte(&self) -> u8 {\n-                    self.opaque.peek_byte()\n+                fn position(&self) -> usize {\n+                    self.opaque.position()\n                 }\n             }\n         }"}, {"sha": "bb722b9ad66dd181b2b6316d2143fd3d51f2cd2c", "filename": "compiler/rustc_serialize/src/opaque.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/58002faca0ac45589c6092030a5459eae9720e3d/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58002faca0ac45589c6092030a5459eae9720e3d/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fopaque.rs?ref=58002faca0ac45589c6092030a5459eae9720e3d", "patch": "@@ -442,9 +442,8 @@ macro_rules! read_leb128 {\n \n impl<'a> Decoder for MemDecoder<'a> {\n     #[inline]\n-    fn position(&self) -> usize {\n-        // SAFETY: This type guarantees start <= current\n-        unsafe { self.current.sub_ptr(self.start) }\n+    fn read_usize(&mut self) -> usize {\n+        read_leb128!(self, read_usize_leb128)\n     }\n \n     #[inline]\n@@ -481,8 +480,8 @@ impl<'a> Decoder for MemDecoder<'a> {\n     }\n \n     #[inline]\n-    fn read_usize(&mut self) -> usize {\n-        read_leb128!(self, read_usize_leb128)\n+    fn read_isize(&mut self) -> isize {\n+        read_leb128!(self, read_isize_leb128)\n     }\n \n     #[inline]\n@@ -505,11 +504,6 @@ impl<'a> Decoder for MemDecoder<'a> {\n         i16::from_le_bytes(self.read_array())\n     }\n \n-    #[inline]\n-    fn read_isize(&mut self) -> isize {\n-        read_leb128!(self, read_isize_leb128)\n-    }\n-\n     #[inline]\n     fn read_raw_bytes(&mut self, bytes: usize) -> &'a [u8] {\n         if bytes > self.remaining() {\n@@ -532,6 +526,12 @@ impl<'a> Decoder for MemDecoder<'a> {\n         // Since we just checked current == end, the current pointer must be inbounds.\n         unsafe { *self.current }\n     }\n+\n+    #[inline]\n+    fn position(&self) -> usize {\n+        // SAFETY: This type guarantees start <= current\n+        unsafe { self.current.sub_ptr(self.start) }\n+    }\n }\n \n // Specializations for contiguous byte sequences follow. The default implementations for slices"}, {"sha": "06166cabc187212eca09d6a8567bc9342d21560c", "filename": "compiler/rustc_serialize/src/serialize.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/58002faca0ac45589c6092030a5459eae9720e3d/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58002faca0ac45589c6092030a5459eae9720e3d/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs?ref=58002faca0ac45589c6092030a5459eae9720e3d", "patch": "@@ -31,13 +31,13 @@ const STR_SENTINEL: u8 = 0xC1;\n /// really makes sense to store floating-point values at all.\n /// (If you need it, revert <https://github.com/rust-lang/rust/pull/109984>.)\n pub trait Encoder {\n-    // Primitive types:\n     fn emit_usize(&mut self, v: usize);\n     fn emit_u128(&mut self, v: u128);\n     fn emit_u64(&mut self, v: u64);\n     fn emit_u32(&mut self, v: u32);\n     fn emit_u16(&mut self, v: u16);\n     fn emit_u8(&mut self, v: u8);\n+\n     fn emit_isize(&mut self, v: isize);\n     fn emit_i128(&mut self, v: i128);\n     fn emit_i64(&mut self, v: i64);\n@@ -89,13 +89,13 @@ pub trait Encoder {\n /// really makes sense to store floating-point values at all.\n /// (If you need it, revert <https://github.com/rust-lang/rust/pull/109984>.)\n pub trait Decoder {\n-    // Primitive types:\n     fn read_usize(&mut self) -> usize;\n     fn read_u128(&mut self) -> u128;\n     fn read_u64(&mut self) -> u64;\n     fn read_u32(&mut self) -> u32;\n     fn read_u16(&mut self) -> u16;\n     fn read_u8(&mut self) -> u8;\n+\n     fn read_isize(&mut self) -> isize;\n     fn read_i128(&mut self) -> i128;\n     fn read_i64(&mut self) -> i64;"}]}