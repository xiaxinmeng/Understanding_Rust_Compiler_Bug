{"sha": "ebc236e91c40d74372ced762433d892829284459", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViYzIzNmU5MWM0MGQ3NDM3MmNlZDc2MjQzM2Q4OTI4MjkyODQ0NTk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-03T00:45:07Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-03T00:50:46Z"}, "message": "rustc: Time the Rust translation and LLVM passes separately", "tree": {"sha": "e11430739522bb1a1c80fb1cb6c30ad93d2f1389", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e11430739522bb1a1c80fb1cb6c30ad93d2f1389"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebc236e91c40d74372ced762433d892829284459", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebc236e91c40d74372ced762433d892829284459", "html_url": "https://github.com/rust-lang/rust/commit/ebc236e91c40d74372ced762433d892829284459", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebc236e91c40d74372ced762433d892829284459/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a833f152baa17460e8414355e832d30d5161f8e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a833f152baa17460e8414355e832d30d5161f8e8", "html_url": "https://github.com/rust-lang/rust/commit/a833f152baa17460e8414355e832d30d5161f8e8"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "634c6512b2a774834834e0565e6e8729ff1a72ae", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ebc236e91c40d74372ced762433d892829284459/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc236e91c40d74372ced762433d892829284459/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=ebc236e91c40d74372ced762433d892829284459", "patch": "@@ -11,6 +11,7 @@ import middle.capture;\n import middle.ty;\n import middle.typeck;\n import middle.typestate_check;\n+import lib.llvm;\n import util.common;\n \n import std.map.mk_hashmap;\n@@ -112,9 +113,13 @@ fn compile_input(session.session sess,\n             bind typestate_check.check_crate(crate));\n     }\n \n-    time[()](time_passes, \"translation\",\n-        bind trans.trans_crate(sess, crate, ty_cx, type_cache, output, shared,\n-                               optimize, verify, save_temps, ot));\n+    auto llmod = time[llvm.ModuleRef](time_passes, \"translation\",\n+        bind trans.trans_crate(sess, crate, ty_cx, type_cache, output,\n+                               shared));\n+\n+    time[()](time_passes, \"LLVM passes\",\n+        bind trans.run_passes(llmod, optimize, verify, save_temps, output,\n+                              ot));\n }\n \n fn pretty_print_input(session.session sess,"}, {"sha": "e8138392d79ad177a33409351e0b9fa2aa739f07", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ebc236e91c40d74372ced762433d892829284459/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc236e91c40d74372ced762433d892829284459/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=ebc236e91c40d74372ced762433d892829284459", "patch": "@@ -7748,8 +7748,8 @@ fn create_crate_map(@crate_ctxt ccx) -> ValueRef {\n }\n \n fn trans_crate(session.session sess, @ast.crate crate, ty.ctxt tcx,\n-               ty.type_cache type_cache, str output, bool shared,\n-               bool optimize, bool verify, bool save_temps, output_type ot) {\n+               ty.type_cache type_cache, str output, bool shared)\n+        -> ModuleRef {\n     auto llmod =\n         llvm.LLVMModuleCreateWithNameInContext(_str.buf(\"rust_out\"),\n                                                llvm.LLVMGetGlobalContext());\n@@ -7816,7 +7816,7 @@ fn trans_crate(session.session sess, @ast.crate crate, ty.ctxt tcx,\n     // Translate the metadata.\n     middle.metadata.write_metadata(cx.ccx, shared, crate);\n \n-    run_passes(llmod, optimize, verify, save_temps, output, ot);\n+    ret llmod;\n }\n \n //"}]}