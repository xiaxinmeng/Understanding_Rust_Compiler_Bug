{"sha": "041f3b64dd0509b87c62ae8b76163127fa488c3e", "node_id": "C_kwDOAAsO6NoAKDA0MWYzYjY0ZGQwNTA5Yjg3YzYyYWU4Yjc2MTYzMTI3ZmE0ODhjM2U", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-29T21:54:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-29T21:54:38Z"}, "message": "Rollup merge of #96527 - durin42:llvm-15-werror-wswitch, r=nikic\n\nRustWrapper: explicitly don't handle DXILPointerTyID\n\nThis new enum entry was introduced in https://reviews.llvm.org/D122268,\nand if I'm reading correctly there's no case where we'd ever encounter\nit in our uses of LLVM. To preserve the ability to compile this file\nwith -Werror -Wswitch we add an explicit case for this entry.\n\nr? nikic", "tree": {"sha": "eb7564073f3b64e476e624603a8144dc3ab9270e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb7564073f3b64e476e624603a8144dc3ab9270e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/041f3b64dd0509b87c62ae8b76163127fa488c3e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJibF6eCRBK7hj4Ov3rIwAAjjIIALHn+F6mn92lusKI8aZS644U\nqRowrrWg+vqnb2lZqGgtxrx1W62Xtr+yY3hnWIOyCKM1ycDkBqTec2IEn018VOs3\nw79zCN72keZmp0Cr+TcDrwW8D1dE7KT/8yuFyfyp6D4ng6QEiwZraLr9X9DcJn4l\nE5ft0xRZ2InKZY6jfihSpOGlQa1pdOAJbgcWF08/oc3Web+hBqe0f0q+rmC6PtnT\nF3DaLFj0JeKjj7sWnAJzhLosuxnFiHssC7Icjsc4fDOPiGNCfdH7RluyTQmPB1RD\nyEawOK5YUN3jngo/k8jganp3g6Y9iv+TcYEKeSyVDCIOspl+NGwzgwV8ZdLZDK8=\n=VxDY\n-----END PGP SIGNATURE-----\n", "payload": "tree eb7564073f3b64e476e624603a8144dc3ab9270e\nparent bfb13ec691dc60eec49f58c7ccbe0b34c2680280\nparent e8ae06a31bcfa8b276664323fb825af5fce0a885\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1651269278 +0200\ncommitter GitHub <noreply@github.com> 1651269278 +0200\n\nRollup merge of #96527 - durin42:llvm-15-werror-wswitch, r=nikic\n\nRustWrapper: explicitly don't handle DXILPointerTyID\n\nThis new enum entry was introduced in https://reviews.llvm.org/D122268,\nand if I'm reading correctly there's no case where we'd ever encounter\nit in our uses of LLVM. To preserve the ability to compile this file\nwith -Werror -Wswitch we add an explicit case for this entry.\n\nr? nikic\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/041f3b64dd0509b87c62ae8b76163127fa488c3e", "html_url": "https://github.com/rust-lang/rust/commit/041f3b64dd0509b87c62ae8b76163127fa488c3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/041f3b64dd0509b87c62ae8b76163127fa488c3e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfb13ec691dc60eec49f58c7ccbe0b34c2680280", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfb13ec691dc60eec49f58c7ccbe0b34c2680280", "html_url": "https://github.com/rust-lang/rust/commit/bfb13ec691dc60eec49f58c7ccbe0b34c2680280"}, {"sha": "e8ae06a31bcfa8b276664323fb825af5fce0a885", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8ae06a31bcfa8b276664323fb825af5fce0a885", "html_url": "https://github.com/rust-lang/rust/commit/e8ae06a31bcfa8b276664323fb825af5fce0a885"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "6d79e662a42796d17a60b859e14e73abb3067782", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/041f3b64dd0509b87c62ae8b76163127fa488c3e/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/041f3b64dd0509b87c62ae8b76163127fa488c3e/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=041f3b64dd0509b87c62ae8b76163127fa488c3e", "patch": "@@ -1217,6 +1217,11 @@ extern \"C\" LLVMTypeKind LLVMRustGetTypeKind(LLVMTypeRef Ty) {\n     return LLVMBFloatTypeKind;\n   case Type::X86_AMXTyID:\n     return LLVMX86_AMXTypeKind;\n+#if LLVM_VERSION_GE(15, 0)\n+  case Type::DXILPointerTyID:\n+    report_fatal_error(\"Rust does not support DirectX typed pointers.\");\n+    break;\n+#endif\n   }\n   report_fatal_error(\"Unhandled TypeID.\");\n }"}]}