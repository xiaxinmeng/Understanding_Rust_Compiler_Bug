{"sha": "cd4245d318b04c8b44aed7e682c49b0507086d6c", "node_id": "C_kwDOAAsO6NoAKGNkNDI0NWQzMThiMDRjOGI0NGFlZDdlNjgyYzQ5YjA1MDcwODZkNmM", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-01-26T21:25:17Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-01-26T21:30:33Z"}, "message": "Make char::DecodeUtf16::size_hist more precise\n\nNew implementation takes into account contents of `self.buf` and rounds\nlower bound up instead of down.", "tree": {"sha": "8b306ca96c0a2b56866d1c2913136e4c22a6da87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b306ca96c0a2b56866d1c2913136e4c22a6da87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd4245d318b04c8b44aed7e682c49b0507086d6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd4245d318b04c8b44aed7e682c49b0507086d6c", "html_url": "https://github.com/rust-lang/rust/commit/cd4245d318b04c8b44aed7e682c49b0507086d6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd4245d318b04c8b44aed7e682c49b0507086d6c/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7f375789bab1a4e4a291c963081a8ca7d2b6bd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7f375789bab1a4e4a291c963081a8ca7d2b6bd7", "html_url": "https://github.com/rust-lang/rust/commit/a7f375789bab1a4e4a291c963081a8ca7d2b6bd7"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "f3fef85ef1de55142ffec58393b3335b9bed19c2", "filename": "library/core/src/char/decode.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cd4245d318b04c8b44aed7e682c49b0507086d6c/library%2Fcore%2Fsrc%2Fchar%2Fdecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd4245d318b04c8b44aed7e682c49b0507086d6c/library%2Fcore%2Fsrc%2Fchar%2Fdecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fchar%2Fdecode.rs?ref=cd4245d318b04c8b44aed7e682c49b0507086d6c", "patch": "@@ -120,9 +120,21 @@ impl<I: Iterator<Item = u16>> Iterator for DecodeUtf16<I> {\n     #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         let (low, high) = self.iter.size_hint();\n-        // we could be entirely valid surrogates (2 elements per\n-        // char), or entirely non-surrogates (1 element per char)\n-        (low / 2, high)\n+\n+        // `self.buf` will never contain the first part of a surrogate,\n+        // so the presence of `buf == Some(...)` always means +1\n+        // on lower and upper bound.\n+        let addition_from_buf = self.buf.is_some() as usize;\n+\n+        // `self.iter` could contain entirely valid surrogates (2 elements per\n+        // char), or entirely non-surrogates (1 element per char).\n+        //\n+        // On odd lower bound, at least one element must stay unpaired\n+        // (with other elements from `self.iter`), so we round up.\n+        let low = low.div_ceil(2) + addition_from_buf;\n+        let high = high.and_then(|h| h.checked_add(addition_from_buf));\n+\n+        (low, high)\n     }\n }\n "}]}