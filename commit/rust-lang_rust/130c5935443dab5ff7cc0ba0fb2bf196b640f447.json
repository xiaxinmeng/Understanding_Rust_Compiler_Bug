{"sha": "130c5935443dab5ff7cc0ba0fb2bf196b640f447", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzMGM1OTM1NDQzZGFiNWZmN2NjMGJhMGZiMmJmMTk2YjY0MGY0NDc=", "commit": {"author": {"name": "sinkuu", "email": "sinkuupump@gmail.com", "date": "2016-08-23T12:00:43Z"}, "committer": {"name": "sinkuu", "email": "sinkuupump@gmail.com", "date": "2016-08-28T07:40:03Z"}, "message": "Fix #977", "tree": {"sha": "35e9378574d26ad3e11ca6be37cbe5180a7a5197", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35e9378574d26ad3e11ca6be37cbe5180a7a5197"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/130c5935443dab5ff7cc0ba0fb2bf196b640f447", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/130c5935443dab5ff7cc0ba0fb2bf196b640f447", "html_url": "https://github.com/rust-lang/rust/commit/130c5935443dab5ff7cc0ba0fb2bf196b640f447", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/130c5935443dab5ff7cc0ba0fb2bf196b640f447/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d022f05f340b9aa4956ca315f5e424a6d3ab3248", "url": "https://api.github.com/repos/rust-lang/rust/commits/d022f05f340b9aa4956ca315f5e424a6d3ab3248", "html_url": "https://github.com/rust-lang/rust/commit/d022f05f340b9aa4956ca315f5e424a6d3ab3248"}], "stats": {"total": 65, "additions": 53, "deletions": 12}, "files": [{"sha": "55b4f8b9dcd6e52dada155f8d4199b6d3485c245", "filename": "src/items.rs", "status": "modified", "additions": 25, "deletions": 12, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/130c5935443dab5ff7cc0ba0fb2bf196b640f447/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/130c5935443dab5ff7cc0ba0fb2bf196b640f447/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=130c5935443dab5ff7cc0ba0fb2bf196b640f447", "patch": "@@ -85,20 +85,26 @@ impl<'a> FmtVisitor<'a> {\n         let snippet = self.snippet(span);\n         let brace_pos = snippet.find_uncommented(\"{\").unwrap();\n \n-        if fm.items.is_empty() && !contains_comment(&snippet[brace_pos..]) {\n-            self.buffer.push_str(\"{\");\n-        } else {\n+        self.buffer.push_str(\"{\");\n+        if !fm.items.is_empty() || contains_comment(&snippet[brace_pos..]) {\n             // FIXME: this skips comments between the extern keyword and the opening\n             // brace.\n-            self.last_pos = span.lo + BytePos(brace_pos as u32);\n+            self.last_pos = span.lo + BytePos(brace_pos as u32 + 1);\n             self.block_indent = self.block_indent.block_indent(self.config);\n \n-            for item in &fm.items {\n-                self.format_foreign_item(&*item);\n-            }\n+            if fm.items.is_empty() {\n+                self.format_missing_no_indent(span.hi - BytePos(1));\n+                self.block_indent = self.block_indent.block_unindent(self.config);\n+\n+                self.buffer.push_str(&self.block_indent.to_string(self.config));\n+            } else {\n+                for item in &fm.items {\n+                    self.format_foreign_item(&*item);\n+                }\n \n-            self.block_indent = self.block_indent.block_unindent(self.config);\n-            self.format_missing_with_indent(span.hi - BytePos(1));\n+                self.block_indent = self.block_indent.block_unindent(self.config);\n+                self.format_missing_with_indent(span.hi - BytePos(1));\n+            }\n         }\n \n         self.buffer.push_str(\"}\");\n@@ -299,7 +305,8 @@ impl<'a> FmtVisitor<'a> {\n         self.buffer.push_str(&format_header(\"enum \", ident, vis));\n \n         let enum_snippet = self.snippet(span);\n-        let body_start = span.lo + BytePos(enum_snippet.find_uncommented(\"{\").unwrap() as u32 + 1);\n+        let brace_pos = enum_snippet.find_uncommented(\"{\").unwrap();\n+        let body_start = span.lo + BytePos(brace_pos as u32 + 1);\n         let generics_str = format_generics(&self.get_context(),\n                                            generics,\n                                            \"{\",\n@@ -318,11 +325,17 @@ impl<'a> FmtVisitor<'a> {\n         let variant_list = self.format_variant_list(enum_def, body_start, span.hi - BytePos(1));\n         match variant_list {\n             Some(ref body_str) => self.buffer.push_str(&body_str),\n-            None => self.format_missing(span.hi - BytePos(1)),\n+            None => {\n+                if contains_comment(&enum_snippet[brace_pos..]) {\n+                    self.format_missing_no_indent(span.hi - BytePos(1))\n+                } else {\n+                    self.format_missing(span.hi - BytePos(1))\n+                }\n+            }\n         }\n         self.block_indent = self.block_indent.block_unindent(self.config);\n \n-        if variant_list.is_some() {\n+        if variant_list.is_some() || contains_comment(&enum_snippet[brace_pos..]) {\n             self.buffer.push_str(&self.block_indent.to_string(self.config));\n         }\n         self.buffer.push_str(\"}\");"}, {"sha": "5a737ebdee88329a48f8ad0c3d261f05d841f11a", "filename": "src/missed_spans.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/130c5935443dab5ff7cc0ba0fb2bf196b640f447/src%2Fmissed_spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/130c5935443dab5ff7cc0ba0fb2bf196b640f447/src%2Fmissed_spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmissed_spans.rs?ref=130c5935443dab5ff7cc0ba0fb2bf196b640f447", "patch": "@@ -34,6 +34,12 @@ impl<'a> FmtVisitor<'a> {\n         })\n     }\n \n+    pub fn format_missing_no_indent(&mut self, end: BytePos) {\n+        self.format_missing_inner(end, |this, last_snippet, _| {\n+            this.buffer.push_str(last_snippet.trim_right());\n+        })\n+    }\n+\n     fn format_missing_inner<F: Fn(&mut FmtVisitor, &str, &str)>(&mut self,\n                                                                 end: BytePos,\n                                                                 process_last_snippet: F) {"}, {"sha": "dc2663d581b6dd0bf5f08c2b8e487a741745e1d2", "filename": "tests/source/issue-977.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/130c5935443dab5ff7cc0ba0fb2bf196b640f447/tests%2Fsource%2Fissue-977.rs", "raw_url": "https://github.com/rust-lang/rust/raw/130c5935443dab5ff7cc0ba0fb2bf196b640f447/tests%2Fsource%2Fissue-977.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-977.rs?ref=130c5935443dab5ff7cc0ba0fb2bf196b640f447", "patch": "@@ -0,0 +1,7 @@\n+// FIXME(#919)\n+\n+trait NameC { /* comment */ }\n+struct FooC { /* comment */ }\n+enum MooC { /* comment */ }\n+mod BarC { /* comment */ }\n+extern { /* comment */ }"}, {"sha": "ad7c2bd4e5c2b489fa8460f027fe98bce5b0e31a", "filename": "tests/target/issue-977.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/130c5935443dab5ff7cc0ba0fb2bf196b640f447/tests%2Ftarget%2Fissue-977.rs", "raw_url": "https://github.com/rust-lang/rust/raw/130c5935443dab5ff7cc0ba0fb2bf196b640f447/tests%2Ftarget%2Fissue-977.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-977.rs?ref=130c5935443dab5ff7cc0ba0fb2bf196b640f447", "patch": "@@ -0,0 +1,15 @@\n+// FIXME(#919)\n+\n+trait NameC {\n+    // comment\n+}\n+struct FooC { /* comment */ }\n+enum MooC {\n+    // comment\n+}\n+mod BarC {\n+    // comment\n+}\n+extern \"C\" {\n+    // comment\n+}"}]}