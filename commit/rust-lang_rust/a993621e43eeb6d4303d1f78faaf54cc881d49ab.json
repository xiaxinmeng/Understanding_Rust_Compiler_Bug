{"sha": "a993621e43eeb6d4303d1f78faaf54cc881d49ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5OTM2MjFlNDNlZWI2ZDQzMDNkMWY3OGZhYWY1NGNjODgxZDQ5YWI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-22T00:07:29Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-22T00:08:40Z"}, "message": "Log and compare unique boxes\n\nIssue #409", "tree": {"sha": "4e3fbedd50ee65aa78acc8772b2595e98b4709d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e3fbedd50ee65aa78acc8772b2595e98b4709d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a993621e43eeb6d4303d1f78faaf54cc881d49ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a993621e43eeb6d4303d1f78faaf54cc881d49ab", "html_url": "https://github.com/rust-lang/rust/commit/a993621e43eeb6d4303d1f78faaf54cc881d49ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a993621e43eeb6d4303d1f78faaf54cc881d49ab/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42fd2a9d89e87e8840324873df23ab76ed2f4d3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/42fd2a9d89e87e8840324873df23ab76ed2f4d3d", "html_url": "https://github.com/rust-lang/rust/commit/42fd2a9d89e87e8840324873df23ab76ed2f4d3d"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "c6ee35717dc9001a3165ad1f29bec31f4f5345de", "filename": "src/rt/rust_shape.cpp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a993621e43eeb6d4303d1f78faaf54cc881d49ab/src%2Frt%2Frust_shape.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/a993621e43eeb6d4303d1f78faaf54cc881d49ab/src%2Frt%2Frust_shape.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.cpp?ref=a993621e43eeb6d4303d1f78faaf54cc881d49ab", "patch": "@@ -279,6 +279,12 @@ class cmp : public data<cmp,ptr_pair> {\n         result = sub.result;\n     }\n \n+    inline void walk_uniq_contents(cmp &sub) {\n+        sub.align = true;\n+        sub.walk();\n+        result = sub.result;\n+    }\n+\n     inline void cmp_two_pointers() {\n         ALIGN_TO(alignof<void *>() * 2);\n         data_pair<uint8_t *> fst = bump_dp<uint8_t *>(dp);\n@@ -341,6 +347,10 @@ class cmp : public data<cmp,ptr_pair> {\n         data<cmp,ptr_pair>::walk_box_contents();\n     }\n \n+    void walk_uniq() {\n+        data<cmp,ptr_pair>::walk_uniq_contents();\n+    }\n+\n     void walk_fn()  { return cmp_two_pointers(); }\n     void walk_obj() { return cmp_two_pointers(); }\n "}, {"sha": "1f1490a36c8ac68c8132503dee4cb326c807ee74", "filename": "src/rt/rust_shape.h", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/a993621e43eeb6d4303d1f78faaf54cc881d49ab/src%2Frt%2Frust_shape.h", "raw_url": "https://github.com/rust-lang/rust/raw/a993621e43eeb6d4303d1f78faaf54cc881d49ab/src%2Frt%2Frust_shape.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.h?ref=a993621e43eeb6d4303d1f78faaf54cc881d49ab", "patch": "@@ -46,6 +46,7 @@ const uint8_t SHAPE_FN = 18u;\n const uint8_t SHAPE_OBJ = 19u;\n const uint8_t SHAPE_RES = 20u;\n const uint8_t SHAPE_VAR = 21u;\n+const uint8_t SHAPE_UNIQ = 22u;\n \n #ifdef _LP64\n const uint8_t SHAPE_PTR = SHAPE_U64;\n@@ -244,6 +245,7 @@ class ctxt {\n     void walk_vec();\n     void walk_tag();\n     void walk_box();\n+    void walk_uniq();\n     void walk_struct();\n     void walk_res();\n     void walk_var();\n@@ -346,6 +348,7 @@ ctxt<T>::walk() {\n     case SHAPE_OBJ:     WALK_SIMPLE(walk_obj);  break;\n     case SHAPE_RES:     walk_res();             break;\n     case SHAPE_VAR:     walk_var();             break;\n+    case SHAPE_UNIQ:    walk_uniq();            break;\n     default:            abort();\n     }\n }\n@@ -441,6 +444,17 @@ ctxt<T>::walk_box() {\n     sp = end_sp;\n }\n \n+template<typename T>\n+void\n+ctxt<T>::walk_uniq() {\n+    uint16_t sp_size = get_u16_bump(sp);\n+    const uint8_t *end_sp = sp + sp_size;\n+\n+    static_cast<T *>(this)->walk_uniq();\n+\n+    sp = end_sp;\n+}\n+\n template<typename T>\n void\n ctxt<T>::walk_struct() {\n@@ -760,6 +774,7 @@ class data : public ctxt< data<T,U> > {\n     U end_dp;\n \n     void walk_box_contents();\n+    void walk_uniq_contents();\n     void walk_fn_contents(ptr &dp);\n     void walk_obj_contents(ptr &dp);\n     void walk_variant(tag_info &tinfo, uint32_t variant);\n@@ -790,6 +805,8 @@ class data : public ctxt< data<T,U> > {\n \n     void walk_box()     { DATA_SIMPLE(void *, walk_box()); }\n \n+    void walk_uniq() { DATA_SIMPLE(void *, walk_uniq()); }\n+\n     void walk_fn() {\n         ALIGN_TO(alignof<void *>());\n         U next_dp = dp + sizeof(void *) * 2;\n@@ -834,6 +851,15 @@ data<T,U>::walk_box_contents() {\n     static_cast<T *>(this)->walk_box_contents(sub, ref_count_dp);\n }\n \n+template<typename T,typename U>\n+void\n+data<T,U>::walk_uniq_contents() {\n+    typename U::template data<uint8_t *>::t box_ptr = bump_dp<uint8_t *>(dp);\n+    U data_ptr(box_ptr);\n+    T sub(*static_cast<T *>(this), data_ptr);\n+    static_cast<T *>(this)->walk_uniq_contents(sub);\n+}\n+\n template<typename T,typename U>\n void\n data<T,U>::walk_variant(tag_info &tinfo, uint32_t variant_id) {\n@@ -993,6 +1019,12 @@ class log : public data<log,ptr> {\n         data<log,ptr>::walk_box_contents();\n     }\n \n+    void walk_uniq() {\n+\tout << prefix << \"~\";\n+\tprefix = \"\";\n+\tdata<log,ptr>::walk_uniq_contents();\n+    }\n+\n     void walk_fn() {\n         out << prefix << \"fn\";\n         prefix = \"\";\n@@ -1017,6 +1049,12 @@ class log : public data<log,ptr> {\n         }\n     }\n \n+    void walk_uniq_contents(log &sub) {\n+\tout << prefix;\n+\tsub.align = true;\n+\tsub.walk();\n+    }\n+\n     void walk_struct(const uint8_t *end_sp);\n     void walk_vec(bool is_pod, const std::pair<ptr,ptr> &data);\n     void walk_variant(tag_info &tinfo, uint32_t variant_id,"}, {"sha": "2e5c37949c28717021fbfde4cc7d5a4c7f36c88c", "filename": "src/test/run-pass/unique-cmp.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a993621e43eeb6d4303d1f78faaf54cc881d49ab/src%2Ftest%2Frun-pass%2Funique-cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a993621e43eeb6d4303d1f78faaf54cc881d49ab/src%2Ftest%2Frun-pass%2Funique-cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-cmp.rs?ref=a993621e43eeb6d4303d1f78faaf54cc881d49ab", "patch": "@@ -0,0 +1,8 @@\n+fn main() {\n+    let i = ~100;\n+    assert i == ~100;\n+    assert i < ~101;\n+    assert i <= ~100;\n+    assert i > ~99;\n+    assert i >= ~99;\n+}\n\\ No newline at end of file"}, {"sha": "91ce7e504d914928cbb810c2b3a27a897b31b7fe", "filename": "src/test/run-pass/unique-log.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a993621e43eeb6d4303d1f78faaf54cc881d49ab/src%2Ftest%2Frun-pass%2Funique-log.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a993621e43eeb6d4303d1f78faaf54cc881d49ab/src%2Ftest%2Frun-pass%2Funique-log.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-log.rs?ref=a993621e43eeb6d4303d1f78faaf54cc881d49ab", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let i = ~100;\n+    log_err i;\n+}\n\\ No newline at end of file"}]}