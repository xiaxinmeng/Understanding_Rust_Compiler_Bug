{"sha": "ce577f7f121f22e01c390d34de23a9a0536964e5", "node_id": "C_kwDOAAsO6NoAKGNlNTc3ZjdmMTIxZjIyZTAxYzM5MGQzNGRlMjNhOWEwNTM2OTY0ZTU", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-03-17T19:59:39Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-03-17T19:59:39Z"}, "message": "Fix and re-enable some rustc tests\n\n* Set `config.opts.trimmed_def_paths` to `GoodPath` to trim def paths in\n  error messages as expected by the rustc test suite\n* Fix `$SRC_DIR` normalization for out of tree compiled standard library", "tree": {"sha": "602c55e5bd27cbb73c0dd40366257f563989641a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/602c55e5bd27cbb73c0dd40366257f563989641a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce577f7f121f22e01c390d34de23a9a0536964e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce577f7f121f22e01c390d34de23a9a0536964e5", "html_url": "https://github.com/rust-lang/rust/commit/ce577f7f121f22e01c390d34de23a9a0536964e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce577f7f121f22e01c390d34de23a9a0536964e5/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a8da8c64a12bc564a938f3d2e0bd92f6f3f4b00", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a8da8c64a12bc564a938f3d2e0bd92f6f3f4b00", "html_url": "https://github.com/rust-lang/rust/commit/9a8da8c64a12bc564a938f3d2e0bd92f6f3f4b00"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "ddcf05ec25227f69d0462a9ed446555b4ad025c3", "filename": "scripts/setup_rust_fork.sh", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ce577f7f121f22e01c390d34de23a9a0536964e5/scripts%2Fsetup_rust_fork.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ce577f7f121f22e01c390d34de23a9a0536964e5/scripts%2Fsetup_rust_fork.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Fsetup_rust_fork.sh?ref=ce577f7f121f22e01c390d34de23a9a0536964e5", "patch": "@@ -53,9 +53,28 @@ index 887d27fd6dca4..2c2239f2b83d1 100644\n \n      let rustc_has_profiler_support = env::var_os(\"RUSTC_PROFILER_SUPPORT\").is_some();\n \n+diff --git a/src/tools/compiletest/src/runtest.rs b/src/tools/compiletest/src/runtest.rs\n+index 8431aa7b818..a3ff7e68ce5 100644\n+--- a/src/tools/compiletest/src/runtest.rs\n++++ b/src/tools/compiletest/src/runtest.rs\n+@@ -3489,11 +3489,7 @@ fn normalize_output(&self, output: &str, custom_rules: &[(String, String)]) -> S\n+             .join(\"library\");\n+         normalize_path(&src_dir, \"$(echo '$SRC_DIR')\");\n+\n+-        if let Some(virtual_rust_source_base_dir) =\n+-            option_env!(\"CFG_VIRTUAL_RUST_SOURCE_BASE_DIR\").map(PathBuf::from)\n+-        {\n+-            normalize_path(&virtual_rust_source_base_dir.join(\"library\"), \"$(echo '$SRC_DIR')\");\n+-        }\n++        normalize_path(&Path::new(\"$(cd ../build_sysroot/sysroot_src/library; pwd)\"), \"$(echo '$SRC_DIR')\");\n+\n+         // Paths into the build directory\n+         let test_build_dir = &self.config.build_base;\n EOF\n \n cat > config.toml <<EOF\n+changelog-seen = 2\n+\n [llvm]\n ninja = false\n "}, {"sha": "c9f21d8f9cb4065c32c5328aa16589f2a735d5b4", "filename": "scripts/test_rustc_tests.sh", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ce577f7f121f22e01c390d34de23a9a0536964e5/scripts%2Ftest_rustc_tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ce577f7f121f22e01c390d34de23a9a0536964e5/scripts%2Ftest_rustc_tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Ftest_rustc_tests.sh?ref=ce577f7f121f22e01c390d34de23a9a0536964e5", "patch": "@@ -72,15 +72,7 @@ rm -r src/test/run-make/emit-named-files # requires full --emit support\n \n rm -r src/test/run-pass-valgrind/unsized-locals\n \n-rm src/test/ui/json-bom-plus-crlf-multifile.rs # differing warning\n-rm src/test/ui/json-bom-plus-crlf.rs # same\n rm src/test/ui/intrinsics/const-eval-select-x86_64.rs # same\n-rm src/test/ui/match/issue-82392.rs # differing error\n-rm src/test/ui/consts/min_const_fn/address_of_const.rs # same\n-rm src/test/ui/consts/issue-miri-1910.rs # same\n-rm src/test/ui/generic-associated-types/bugs/issue-80626.rs # same\n-rm src/test/ui/generic-associated-types/bugs/issue-89008.rs # same\n-rm src/test/ui/chalkify/bugs/async.rs # same\n rm src/test/ui/type-alias-impl-trait/cross_crate_ice*.rs # requires removed aux dep\n \n rm src/test/ui/allocator/no_std-alloc-error-handler-default.rs # missing rust_oom definition"}, {"sha": "fe5d80b2a923930d5460fb5131184b07e41dbebc", "filename": "src/base.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ce577f7f121f22e01c390d34de23a9a0536964e5/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce577f7f121f22e01c390d34de23a9a0536964e5/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=ce577f7f121f22e01c390d34de23a9a0536964e5", "patch": "@@ -4,6 +4,7 @@ use rustc_ast::InlineAsmOptions;\n use rustc_index::vec::IndexVec;\n use rustc_middle::ty::adjustment::PointerCast;\n use rustc_middle::ty::layout::FnAbiOf;\n+use rustc_middle::ty::print::with_no_trimmed_paths;\n \n use indexmap::IndexSet;\n \n@@ -258,7 +259,9 @@ fn codegen_fn_content(fx: &mut FunctionCx<'_, '_, '_>) {\n \n         if fx.clif_comments.enabled() {\n             let mut terminator_head = \"\\n\".to_string();\n-            bb_data.terminator().kind.fmt_head(&mut terminator_head).unwrap();\n+            with_no_trimmed_paths!({\n+                bb_data.terminator().kind.fmt_head(&mut terminator_head).unwrap();\n+            });\n             let inst = fx.bcx.func.layout.last_inst(block).unwrap();\n             fx.add_comment(inst, terminator_head);\n         }"}, {"sha": "5984ec8412ad71acfdf304f10faf98183d929762", "filename": "src/bin/cg_clif.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce577f7f121f22e01c390d34de23a9a0536964e5/src%2Fbin%2Fcg_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce577f7f121f22e01c390d34de23a9a0536964e5/src%2Fbin%2Fcg_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcg_clif.rs?ref=ce577f7f121f22e01c390d34de23a9a0536964e5", "patch": "@@ -13,7 +13,7 @@ use std::panic;\n \n use rustc_data_structures::profiling::{get_resident_set_size, print_time_passes_entry};\n use rustc_interface::interface;\n-use rustc_session::config::ErrorOutputType;\n+use rustc_session::config::{ErrorOutputType, TrimmedDefPaths};\n use rustc_session::early_error;\n use rustc_target::spec::PanicStrategy;\n \n@@ -55,6 +55,8 @@ impl rustc_driver::Callbacks for CraneliftPassesCallbacks {\n         config.opts.maybe_sysroot = Some(config.opts.maybe_sysroot.clone().unwrap_or_else(|| {\n             std::env::current_exe().unwrap().parent().unwrap().parent().unwrap().to_owned()\n         }));\n+\n+        config.opts.trimmed_def_paths = TrimmedDefPaths::GoodPath;\n     }\n }\n "}]}