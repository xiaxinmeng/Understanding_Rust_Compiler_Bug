{"sha": "4bd03737570c6f07e92b1bd1116bc3e56c571216", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZDAzNzM3NTcwYzZmMDdlOTJiMWJkMTExNmJjM2U1NmM1NzEyMTY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-09-06T10:24:14Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-09-06T10:24:14Z"}, "message": "No cloning", "tree": {"sha": "f48178a971168d3cf317384573e94faccd4e443e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f48178a971168d3cf317384573e94faccd4e443e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bd03737570c6f07e92b1bd1116bc3e56c571216", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd03737570c6f07e92b1bd1116bc3e56c571216", "html_url": "https://github.com/rust-lang/rust/commit/4bd03737570c6f07e92b1bd1116bc3e56c571216", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bd03737570c6f07e92b1bd1116bc3e56c571216/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d748cf4c87d0892f79ac8c1ae23e7b6be24da99", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d748cf4c87d0892f79ac8c1ae23e7b6be24da99", "html_url": "https://github.com/rust-lang/rust/commit/0d748cf4c87d0892f79ac8c1ae23e7b6be24da99"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "296c254ea87b0cd8fcddc39c97945ab12eeec5f4", "filename": "src/visitor.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4bd03737570c6f07e92b1bd1116bc3e56c571216/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bd03737570c6f07e92b1bd1116bc3e56c571216/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=4bd03737570c6f07e92b1bd1116bc3e56c571216", "patch": "@@ -300,7 +300,8 @@ impl<'a> FmtVisitor<'a> {\n         // complex in the module case. It is complex because the module could be\n         // in a separate file and there might be attributes in both files, but\n         // the AST lumps them all together.\n-        let mut attrs = item.attrs.clone();\n+        let filterd_attrs;\n+        let mut attrs = &item.attrs;\n         match item.node {\n             ast::ItemKind::Mod(ref m) => {\n                 let outer_file = self.codemap.lookup_char_pos(item.span.lo()).file;\n@@ -318,7 +319,7 @@ impl<'a> FmtVisitor<'a> {\n                 } else {\n                     // Module is not inline and should not be skipped. We want\n                     // to process only the attributes in the current file.\n-                    let filterd_attrs = item.attrs\n+                    filterd_attrs = item.attrs\n                         .iter()\n                         .filter_map(|a| {\n                             let attr_file = self.codemap.lookup_char_pos(a.span.lo()).file;\n@@ -332,7 +333,7 @@ impl<'a> FmtVisitor<'a> {\n                     // Assert because if we should skip it should be caught by\n                     // the above case.\n                     assert!(!self.visit_attrs(&filterd_attrs, ast::AttrStyle::Outer));\n-                    attrs = filterd_attrs;\n+                    attrs = &filterd_attrs;\n                 }\n             }\n             _ => if self.visit_attrs(&item.attrs, ast::AttrStyle::Outer) {"}]}