{"sha": "e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ZDIxNzA3NGQxZjJjOTIyY2Y4YzVhMjQ3Y2EwNWZhMDZiMGI3ZWQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-12-31T17:59:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-31T17:59:59Z"}, "message": "Merge #2711\n\n2711: Add semicolons r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "1df182b9755a83c460c928ad8a0bf5ff76548e3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1df182b9755a83c460c928ad8a0bf5ff76548e3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeC4yfCRBK7hj4Ov3rIwAAdHIIAHRbA/qXF/hkUzpZJiHEfuyu\n6c1DNNSQzMau125Pda1Vv5diE1usVOi2F7vKUAYC+7r+SFyNcN7ceWm6eTvnrqo1\nXskjXTLgpxyPKWTIRzCwXtFUqZ26yu642BVVgNJbJUbsAvujlk/MXsVzf7hDdBZu\nWF/UdcHvv62xDk0ERQpOnpQY5F4CW1wQEWlyd/PNVWSBqEEgIO96ss2k66RHI7a4\n1mEyo7Ha+L8ZLSOV7pCzEEv0u+wYV2EMp0cobPQIyWL3O3HN7LSn9UHTun0iNQ82\nFfrNpuSjA0o+KqNlsvvZxdGA3sw0gn0s2BhBdxrrjRI7qQ50fN4kpGRGrqEPJ8s=\n=7RNv\n-----END PGP SIGNATURE-----\n", "payload": "tree 1df182b9755a83c460c928ad8a0bf5ff76548e3c\nparent c8b98c46675396c4f9d26c6b001e01c81d84b89e\nparent ff0ceb30a9ab4162d0f1241d8b0f9aa531c3c9d2\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1577815199 +0000\ncommitter GitHub <noreply@github.com> 1577815199 +0000\n\nMerge #2711\n\n2711: Add semicolons r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "html_url": "https://github.com/rust-lang/rust/commit/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8b98c46675396c4f9d26c6b001e01c81d84b89e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8b98c46675396c4f9d26c6b001e01c81d84b89e", "html_url": "https://github.com/rust-lang/rust/commit/c8b98c46675396c4f9d26c6b001e01c81d84b89e"}, {"sha": "ff0ceb30a9ab4162d0f1241d8b0f9aa531c3c9d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff0ceb30a9ab4162d0f1241d8b0f9aa531c3c9d2", "html_url": "https://github.com/rust-lang/rust/commit/ff0ceb30a9ab4162d0f1241d8b0f9aa531c3c9d2"}], "stats": {"total": 198, "additions": 160, "deletions": 38}, "files": [{"sha": "adb01760a1e0e407b84a2cbb70e32606d3c390a4", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/rust-lang/rust/blob/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "patch": "@@ -4,6 +4,26 @@\n     \"lockfileVersion\": 1,\n     \"requires\": true,\n     \"dependencies\": {\n+        \"@babel/code-frame\": {\n+            \"version\": \"7.5.5\",\n+            \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.5.5.tgz\",\n+            \"integrity\": \"sha512-27d4lZoomVyo51VegxI20xZPuSHusqbQag/ztrBC7wegWoQ1nLREPVSKSW8byhTlzTKyNE4ifaTA6lCp7JjpFw==\",\n+            \"dev\": true,\n+            \"requires\": {\n+                \"@babel/highlight\": \"^7.0.0\"\n+            }\n+        },\n+        \"@babel/highlight\": {\n+            \"version\": \"7.5.0\",\n+            \"resolved\": \"https://registry.npmjs.org/@babel/highlight/-/highlight-7.5.0.tgz\",\n+            \"integrity\": \"sha512-7dV4eu9gBxoM0dAnj/BCFDW9LFU0zvTrkq0ugM7pnHEgguOEeOz1so2ZghEdzviYzQEED0r4EAgpsBChKy1TRQ==\",\n+            \"dev\": true,\n+            \"requires\": {\n+                \"chalk\": \"^2.0.0\",\n+                \"esutils\": \"^2.0.2\",\n+                \"js-tokens\": \"^4.0.0\"\n+            }\n+        },\n         \"@rollup/plugin-commonjs\": {\n             \"version\": \"11.0.0\",\n             \"resolved\": \"https://registry.npmjs.org/@rollup/plugin-commonjs/-/plugin-commonjs-11.0.0.tgz\",\n@@ -240,6 +260,12 @@\n             \"integrity\": \"sha1-6S7f2tplN9SE1zwBcv0eugxJdv8=\",\n             \"dev\": true\n         },\n+        \"diff\": {\n+            \"version\": \"4.0.1\",\n+            \"resolved\": \"https://registry.npmjs.org/diff/-/diff-4.0.1.tgz\",\n+            \"integrity\": \"sha512-s2+XdvhPCOF01LRQBC8hf4vhbVmI2CGS5aZnxLJlT5FtdhPCDFq80q++zK2KlrVorVDdL5BOGZ/VfLrVtYNF+Q==\",\n+            \"dev\": true\n+        },\n         \"dom-serializer\": {\n             \"version\": \"0.1.1\",\n             \"resolved\": \"https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.1.1.tgz\",\n@@ -307,12 +333,24 @@\n             \"integrity\": \"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\",\n             \"dev\": true\n         },\n+        \"esprima\": {\n+            \"version\": \"4.0.1\",\n+            \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n+            \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n+            \"dev\": true\n+        },\n         \"estree-walker\": {\n             \"version\": \"0.6.1\",\n             \"resolved\": \"https://registry.npmjs.org/estree-walker/-/estree-walker-0.6.1.tgz\",\n             \"integrity\": \"sha512-SqmZANLWS0mnatqbSfRP5g8OXZC12Fgg1IwNtLsyHDzJizORW4khDfjPqJZsemPWBB2uqykUah5YpQ6epsqC/w==\",\n             \"dev\": true\n         },\n+        \"esutils\": {\n+            \"version\": \"2.0.3\",\n+            \"resolved\": \"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz\",\n+            \"integrity\": \"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\",\n+            \"dev\": true\n+        },\n         \"fd-slicer\": {\n             \"version\": \"1.1.0\",\n             \"resolved\": \"https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz\",\n@@ -401,6 +439,22 @@\n                 }\n             }\n         },\n+        \"js-tokens\": {\n+            \"version\": \"4.0.0\",\n+            \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n+            \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\",\n+            \"dev\": true\n+        },\n+        \"js-yaml\": {\n+            \"version\": \"3.13.1\",\n+            \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-3.13.1.tgz\",\n+            \"integrity\": \"sha512-YfbcO7jXDdyj0DGxYVSlSeQNHbD7XPWvrVWeVUujrQEoZzWJIRrCPoyk6kL6IAjAG2IolMK4T0hNUe0HOUs5Jw==\",\n+            \"dev\": true,\n+            \"requires\": {\n+                \"argparse\": \"^1.0.7\",\n+                \"esprima\": \"^4.0.0\"\n+            }\n+        },\n         \"jsonc-parser\": {\n             \"version\": \"2.2.0\",\n             \"resolved\": \"https://registry.npmjs.org/jsonc-parser/-/jsonc-parser-2.2.0.tgz\",\n@@ -474,6 +528,21 @@\n                 \"brace-expansion\": \"^1.1.7\"\n             }\n         },\n+        \"minimist\": {\n+            \"version\": \"0.0.8\",\n+            \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz\",\n+            \"integrity\": \"sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\",\n+            \"dev\": true\n+        },\n+        \"mkdirp\": {\n+            \"version\": \"0.5.1\",\n+            \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz\",\n+            \"integrity\": \"sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=\",\n+            \"dev\": true,\n+            \"requires\": {\n+                \"minimist\": \"0.0.8\"\n+            }\n+        },\n         \"mute-stream\": {\n             \"version\": \"0.0.8\",\n             \"resolved\": \"https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.8.tgz\",\n@@ -683,6 +752,50 @@\n             \"integrity\": \"sha512-qOebF53frne81cf0S9B41ByenJ3/IuH8yJKngAX35CmiZySA0khhkovshKK+jGCaMnVomla7gVlIcc3EvKPbTQ==\",\n             \"dev\": true\n         },\n+        \"tslint\": {\n+            \"version\": \"5.20.1\",\n+            \"resolved\": \"https://registry.npmjs.org/tslint/-/tslint-5.20.1.tgz\",\n+            \"integrity\": \"sha512-EcMxhzCFt8k+/UP5r8waCf/lzmeSyVlqxqMEDQE7rWYiQky8KpIBz1JAoYXfROHrPZ1XXd43q8yQnULOLiBRQg==\",\n+            \"dev\": true,\n+            \"requires\": {\n+                \"@babel/code-frame\": \"^7.0.0\",\n+                \"builtin-modules\": \"^1.1.1\",\n+                \"chalk\": \"^2.3.0\",\n+                \"commander\": \"^2.12.1\",\n+                \"diff\": \"^4.0.1\",\n+                \"glob\": \"^7.1.1\",\n+                \"js-yaml\": \"^3.13.1\",\n+                \"minimatch\": \"^3.0.4\",\n+                \"mkdirp\": \"^0.5.1\",\n+                \"resolve\": \"^1.3.2\",\n+                \"semver\": \"^5.3.0\",\n+                \"tslib\": \"^1.8.0\",\n+                \"tsutils\": \"^2.29.0\"\n+            },\n+            \"dependencies\": {\n+                \"builtin-modules\": {\n+                    \"version\": \"1.1.1\",\n+                    \"resolved\": \"https://registry.npmjs.org/builtin-modules/-/builtin-modules-1.1.1.tgz\",\n+                    \"integrity\": \"sha1-Jw8HbFpywC9bZaR9+Uxf46J4iS8=\",\n+                    \"dev\": true\n+                },\n+                \"semver\": {\n+                    \"version\": \"5.7.1\",\n+                    \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.7.1.tgz\",\n+                    \"integrity\": \"sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==\",\n+                    \"dev\": true\n+                }\n+            }\n+        },\n+        \"tsutils\": {\n+            \"version\": \"2.29.0\",\n+            \"resolved\": \"https://registry.npmjs.org/tsutils/-/tsutils-2.29.0.tgz\",\n+            \"integrity\": \"sha512-g5JVHCIJwzfISaXpXE1qvNalca5Jwob6FjI4AoPlqMusJ6ftFE7IkkFoMhVLRgK+4Kx3gkzb8UZK5t5yTTvEmA==\",\n+            \"dev\": true,\n+            \"requires\": {\n+                \"tslib\": \"^1.8.1\"\n+            }\n+        },\n         \"tunnel\": {\n             \"version\": \"0.0.4\",\n             \"resolved\": \"https://registry.npmjs.org/tunnel/-/tunnel-0.0.4.tgz\","}, {"sha": "7d809a2d37b253184241624de506fe3651584d9a", "filename": "editors/code/package.json", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "patch": "@@ -19,7 +19,7 @@\n         \"vscode:prepublish\": \"rollup -c\",\n         \"package\": \"vsce package\",\n         \"watch\": \"tsc -watch -p ./\",\n-        \"fmt\": \"tsfmt -r\"\n+        \"fmt\": \"tsfmt -r && tslint -c tslint.json 'src/**/*.ts' --fix\"\n     },\n     \"dependencies\": {\n         \"jsonc-parser\": \"^2.1.0\",\n@@ -35,6 +35,7 @@\n         \"@types/vscode\": \"^1.41.0\",\n         \"rollup\": \"^1.27.14\",\n         \"tslib\": \"^1.10.0\",\n+        \"tslint\": \"^5.20.1\",\n         \"typescript\": \"^3.7.3\",\n         \"typescript-formatter\": \"^7.2.2\",\n         \"vsce\": \"^1.71.0\""}, {"sha": "743384bd783b9ec25cd2b14f6cdf3e00d85ca611", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "patch": "@@ -79,7 +79,7 @@ export function createClient(config: Config): lc.LanguageClient {\n             }\n         },\n     };\n-    res.registerProposedFeatures()\n+    res.registerProposedFeatures();\n     return res;\n }\n function expandPathResolving(path: string) {"}, {"sha": "cbad47f3571de67c5c3a11a29c5dd51ba514539e", "filename": "editors/code/src/color_theme.ts", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fcolor_theme.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fcolor_theme.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcolor_theme.ts?ref=e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "patch": "@@ -32,29 +32,29 @@ export class ColorTheme {\n                 ? [rule.scope]\n                 : rule.scope;\n             for (const scope of scopes) {\n-                res.rules.set(scope, rule.settings)\n+                res.rules.set(scope, rule.settings);\n             }\n         }\n-        return res\n+        return res;\n     }\n \n     lookup(scopes: string[]): TextMateRuleSettings {\n-        let res: TextMateRuleSettings = {}\n+        let res: TextMateRuleSettings = {};\n         for (const scope of scopes) {\n             this.rules.forEach((value, key) => {\n                 if (scope.startsWith(key)) {\n-                    res = mergeRuleSettings(res, value)\n+                    res = mergeRuleSettings(res, value);\n                 }\n-            })\n+            });\n         }\n-        return res\n+        return res;\n     }\n \n     mergeFrom(other: ColorTheme) {\n         other.rules.forEach((value, key) => {\n-            const merged = mergeRuleSettings(this.rules.get(key), value)\n-            this.rules.set(key, merged)\n-        })\n+            const merged = mergeRuleSettings(this.rules.get(key), value);\n+            this.rules.set(key, merged);\n+        });\n     }\n }\n \n@@ -73,23 +73,23 @@ function loadThemeNamed(themeName: string): ColorTheme {\n             return ext.packageJSON.contributes.themes\n                 .filter((it: any) => (it.id || it.label) === themeName)\n                 .map((it: any) => path.join(ext.extensionPath, it.path));\n-        })\n+        });\n \n     const res = new ColorTheme();\n     for (const themePath of themePaths) {\n-        res.mergeFrom(loadThemeFile(themePath))\n+        res.mergeFrom(loadThemeFile(themePath));\n     }\n \n     const customizations: any = vscode.workspace.getConfiguration('editor').get('tokenColorCustomizations');\n-    res.mergeFrom(ColorTheme.fromRules(customizations?.textMateRules ?? []))\n+    res.mergeFrom(ColorTheme.fromRules(customizations?.textMateRules ?? []));\n \n     return res;\n }\n \n function loadThemeFile(themePath: string): ColorTheme {\n     let text;\n     try {\n-        text = fs.readFileSync(themePath, 'utf8')\n+        text = fs.readFileSync(themePath, 'utf8');\n     } catch {\n         return new ColorTheme();\n     }\n@@ -119,5 +119,5 @@ function mergeRuleSettings(\n         foreground: override.foreground ?? defaultSetting?.foreground,\n         background: override.background ?? defaultSetting?.background,\n         fontStyle: override.fontStyle ?? defaultSetting?.fontStyle,\n-    }\n+    };\n }"}, {"sha": "cfe7d1af057f0b0451d2d204b545dd38206b590d", "filename": "editors/code/src/commands/analyzer_status.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts?ref=e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "patch": "@@ -49,7 +49,7 @@ class TextDocumentContentProvider\n         _uri: vscode.Uri,\n     ): vscode.ProviderResult<string> {\n         const editor = vscode.window.activeTextEditor;\n-        const client = this.ctx.client\n+        const client = this.ctx.client;\n         if (!editor || !client) return '';\n \n         return client.sendRequest<string>("}, {"sha": "dcdde78af5a962728b04e17fbaee49fb7c2e40f7", "filename": "editors/code/src/commands/expand_macro.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fcommands%2Fexpand_macro.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fcommands%2Fexpand_macro.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fexpand_macro.ts?ref=e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "patch": "@@ -52,7 +52,7 @@ class TextDocumentContentProvider\n \n     async provideTextDocumentContent(_uri: vscode.Uri): Promise<string> {\n         const editor = vscode.window.activeTextEditor;\n-        const client = this.ctx.client\n+        const client = this.ctx.client;\n         if (!editor || !client) return '';\n \n         const position = editor.selection.active;"}, {"sha": "9a1697dcbe6baf7b065c516b40cf5f5a75079e60", "filename": "editors/code/src/commands/index.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts?ref=e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "patch": "@@ -36,14 +36,14 @@ function showReferences(ctx: Ctx): Cmd {\n function applySourceChange(ctx: Ctx): Cmd {\n     return async (change: sourceChange.SourceChange) => {\n         sourceChange.applySourceChange(ctx, change);\n-    }\n+    };\n }\n \n function reload(ctx: Ctx): Cmd {\n     return async () => {\n         vscode.window.showInformationMessage('Reloading rust-analyzer...');\n         await ctx.restartServer();\n-    }\n+    };\n }\n \n export {"}, {"sha": "02ea9f166782f912e0557c240392619d367566d4", "filename": "editors/code/src/commands/syntax_tree.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fcommands%2Fsyntax_tree.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fcommands%2Fsyntax_tree.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fsyntax_tree.ts?ref=e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "patch": "@@ -76,7 +76,7 @@ class TextDocumentContentProvider\n \n     provideTextDocumentContent(uri: vscode.Uri): vscode.ProviderResult<string> {\n         const editor = vscode.window.activeTextEditor;\n-        const client = this.ctx.client\n+        const client = this.ctx.client;\n         if (!editor || !client) return '';\n \n         let range: lc.Range | undefined;"}, {"sha": "a2a4e42a9b6d5e449f1d91e3be7596849d577eb0", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "patch": "@@ -1,7 +1,7 @@\n import * as vscode from 'vscode';\n import * as lc from 'vscode-languageclient';\n import { Config } from './config';\n-import { createClient } from './client'\n+import { createClient } from './client';\n \n export class Ctx {\n     readonly config: Config;\n@@ -10,28 +10,28 @@ export class Ctx {\n     // deal with it.\n     //\n     // Ideally, this should be replaced with async getter though.\n-    client: lc.LanguageClient | null = null\n+    client: lc.LanguageClient | null = null;\n     private extCtx: vscode.ExtensionContext;\n     private onDidRestartHooks: Array<(client: lc.LanguageClient) => void> = [];\n \n     constructor(extCtx: vscode.ExtensionContext) {\n-        this.config = new Config(extCtx)\n+        this.config = new Config(extCtx);\n         this.extCtx = extCtx;\n     }\n \n     async restartServer() {\n         let old = this.client;\n         if (old) {\n-            await old.stop()\n+            await old.stop();\n         }\n         this.client = null;\n         const client = createClient(this.config);\n         this.pushCleanup(client.start());\n         await client.onReady();\n \n-        this.client = client\n+        this.client = client;\n         for (const hook of this.onDidRestartHooks) {\n-            hook(client)\n+            hook(client);\n         }\n     }\n \n@@ -80,7 +80,7 @@ export class Ctx {\n     }\n \n     onDidRestart(hook: (client: lc.LanguageClient) => void) {\n-        this.onDidRestartHooks.push(hook)\n+        this.onDidRestartHooks.push(hook);\n     }\n }\n "}, {"sha": "014e96f7534c0f12f412bc3d1dc511cc37ef640b", "filename": "editors/code/src/highlighting.ts", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fhighlighting.ts?ref=e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "patch": "@@ -30,7 +30,7 @@ export function activateHighlighting(ctx: Ctx) {\n                 highlighter.setHighlights(targetEditor, params.decorations);\n             },\n         );\n-    })\n+    });\n \n     vscode.workspace.onDidChangeConfiguration(\n         _ => highlighter.removeHighlights(),\n@@ -173,13 +173,13 @@ class Highlighter {\n \n function initDecorations(): Map<string, vscode.TextEditorDecorationType> {\n     const theme = ColorTheme.load();\n-    const res = new Map()\n+    const res = new Map();\n     TAG_TO_SCOPES.forEach((scopes, tag) => {\n-        if (!scopes) throw `unmapped tag: ${tag}`\n-        let rule = theme.lookup(scopes)\n+        if (!scopes) throw `unmapped tag: ${tag}`;\n+        let rule = theme.lookup(scopes);\n         const decor = createDecorationFromTextmate(rule);\n-        res.set(tag, decor)\n-    })\n+        res.set(tag, decor);\n+    });\n     return res;\n }\n "}, {"sha": "6dd767d724be24dd390cf950b623374020296912", "filename": "editors/code/src/inlay_hints.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finlay_hints.ts?ref=e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "patch": "@@ -19,7 +19,7 @@ export function activateInlayHints(ctx: Ctx) {\n         hintsUpdater.setEnabled(ctx.config.displayInlayHints);\n     }, ctx.subscriptions);\n \n-    ctx.onDidRestart(_ => hintsUpdater.setEnabled(ctx.config.displayInlayHints))\n+    ctx.onDidRestart(_ => hintsUpdater.setEnabled(ctx.config.displayInlayHints));\n }\n \n interface InlayHintsParams {\n@@ -96,7 +96,7 @@ class HintsUpdater {\n \n     private async queryHints(documentUri: string): Promise<InlayHint[] | null> {\n         let client = this.ctx.client;\n-        if (!client) return null\n+        if (!client) return null;\n         const request: InlayHintsParams = {\n             textDocument: { uri: documentUri },\n         };"}, {"sha": "a336269baa8bdec26658993a97eb709bb145b090", "filename": "editors/code/src/source_change.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fsource_change.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fsource_change.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fsource_change.ts?ref=e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "patch": "@@ -11,7 +11,7 @@ export interface SourceChange {\n \n export async function applySourceChange(ctx: Ctx, change: SourceChange) {\n     const client = ctx.client;\n-    if (!client) return\n+    if (!client) return;\n \n     const wsEdit = client.protocol2CodeConverter.asWorkspaceEdit(\n         change.workspaceEdit,"}, {"sha": "08cdc8bdf639d85aed27922a91b51dcc7ca3fd63", "filename": "editors/code/src/status_display.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fstatus_display.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Fsrc%2Fstatus_display.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fstatus_display.ts?ref=e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "patch": "@@ -9,7 +9,7 @@ export function activateStatusDisplay(ctx: Ctx) {\n     ctx.pushCleanup(statusDisplay);\n     ctx.onDidRestart(client => {\n         client.onNotification('$/progress', params => statusDisplay.handleProgressNotification(params));\n-    })\n+    });\n }\n \n class StatusDisplay implements vscode.Disposable {"}, {"sha": "318e02b4b3a1f6f3b1ad4d5ddc5b95d2ba26f124", "filename": "editors/code/tslint.json", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Ftslint.json", "raw_url": "https://github.com/rust-lang/rust/raw/e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed/editors%2Fcode%2Ftslint.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Ftslint.json?ref=e4d217074d1f2c922cf8c5a247ca05fa06b0b7ed", "patch": "@@ -0,0 +1,8 @@\n+{\n+    \"rules\": {\n+        \"semicolon\": [\n+            true,\n+            \"always\"\n+        ]\n+    }\n+}"}]}