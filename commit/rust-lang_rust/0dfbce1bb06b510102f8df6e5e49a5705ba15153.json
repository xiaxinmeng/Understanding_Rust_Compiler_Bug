{"sha": "0dfbce1bb06b510102f8df6e5e49a5705ba15153", "node_id": "C_kwDOAAsO6NoAKDBkZmJjZTFiYjA2YjUxMDEwMmY4ZGY2ZTVlNDlhNTcwNWJhMTUxNTM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-01T00:21:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-01T00:21:56Z"}, "message": "Rollup merge of #108376 - liushuyu:fix-sysroot-infer-103660, r=ozkanonur\n\ncompiler/rustc_session: fix sysroot detection logic\n\nThis pull request fixes the sysroot detection logic on systems where `/usr/lib` contains a multi-arch structure (e.g. installs `rustc_driver` into `/usr/lib/x86_64-linux-gnu` folder).\n\nThis fixes a regression for various Linux systems introduced in #103660. On Debian and Ubuntu systems, the logic in the pull request, as mentioned earlier, will resolve the sysroot to `/usr/lib`, making `rustc --print target-libdir` to return `/usr/lib/lib/rustlib/x86_64-unknown-linux-gnu/lib` (notice the extra `lib` at the beginning).\n\nThe fix is not very \"clean\" according to the standard. If you have any suggestions on improving the logic, you are more than welcome to comment below!", "tree": {"sha": "69c3c53074026312ab92a0a213ac4462aed56d9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69c3c53074026312ab92a0a213ac4462aed56d9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0dfbce1bb06b510102f8df6e5e49a5705ba15153", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj/pqkCRBK7hj4Ov3rIwAAXlcIAJ+9oT+9WK3yKUVn40kUhKZO\njw68/akUQEADoH0zmhoEVueaSNz+9i+ZDcvsaVPpa6k0aWOAqB/+EyXxKHGHkAz4\nnf5jmVBuzv87hFn8oSloJAL7bznXOXSgkJ0dYRTrl7Y7nrB6COUjbm0+MmQuK8Vb\nCH/wdWmE9WS1LUMvfQg1RRPVChQApQ1sz3FKGFW2Z95yapWtJFG6KkuCW6eQ2W8b\n7GFRGVUldUDsyhkhdQQvLdOq/CpF82T0pf2bQDp1ejAZXhTGjioI70FRAPH/ykfR\ndM5aQtz8HPQhbJhBKn0JEag7PBuJfeNxiqpqeKgmfXMgkeX/Qk8YdMGewuqOuAc=\n=C5v3\n-----END PGP SIGNATURE-----\n", "payload": "tree 69c3c53074026312ab92a0a213ac4462aed56d9c\nparent 31f858d9a511f24fedb8ed997b28304fec809630\nparent 2186358e5a124d486f55a20220f720fb8f9a0694\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1677630116 +0100\ncommitter GitHub <noreply@github.com> 1677630116 +0100\n\nRollup merge of #108376 - liushuyu:fix-sysroot-infer-103660, r=ozkanonur\n\ncompiler/rustc_session: fix sysroot detection logic\n\nThis pull request fixes the sysroot detection logic on systems where `/usr/lib` contains a multi-arch structure (e.g. installs `rustc_driver` into `/usr/lib/x86_64-linux-gnu` folder).\n\nThis fixes a regression for various Linux systems introduced in #103660. On Debian and Ubuntu systems, the logic in the pull request, as mentioned earlier, will resolve the sysroot to `/usr/lib`, making `rustc --print target-libdir` to return `/usr/lib/lib/rustlib/x86_64-unknown-linux-gnu/lib` (notice the extra `lib` at the beginning).\n\nThe fix is not very \"clean\" according to the standard. If you have any suggestions on improving the logic, you are more than welcome to comment below!\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0dfbce1bb06b510102f8df6e5e49a5705ba15153", "html_url": "https://github.com/rust-lang/rust/commit/0dfbce1bb06b510102f8df6e5e49a5705ba15153", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0dfbce1bb06b510102f8df6e5e49a5705ba15153/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31f858d9a511f24fedb8ed997b28304fec809630", "url": "https://api.github.com/repos/rust-lang/rust/commits/31f858d9a511f24fedb8ed997b28304fec809630", "html_url": "https://github.com/rust-lang/rust/commit/31f858d9a511f24fedb8ed997b28304fec809630"}, {"sha": "2186358e5a124d486f55a20220f720fb8f9a0694", "url": "https://api.github.com/repos/rust-lang/rust/commits/2186358e5a124d486f55a20220f720fb8f9a0694", "html_url": "https://github.com/rust-lang/rust/commit/2186358e5a124d486f55a20220f720fb8f9a0694"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "f1fbf38217d64b82d09f36cb57c51e392e6170e4", "filename": "compiler/rustc_session/src/filesearch.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0dfbce1bb06b510102f8df6e5e49a5705ba15153/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dfbce1bb06b510102f8df6e5e49a5705ba15153/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs?ref=0dfbce1bb06b510102f8df6e5e49a5705ba15153", "patch": "@@ -182,7 +182,17 @@ pub fn get_or_default_sysroot() -> Result<PathBuf, String> {\n         if dir.ends_with(crate::config::host_triple()) {\n             dir.parent() // chop off `$target`\n                 .and_then(|p| p.parent()) // chop off `rustlib`\n-                .and_then(|p| p.parent()) // chop off `lib`\n+                .and_then(|p| {\n+                    // chop off `lib` (this could be also $arch dir if the host sysroot uses a\n+                    // multi-arch layout like Debian or Ubuntu)\n+                    match p.parent() {\n+                        Some(p) => match p.file_name() {\n+                            Some(f) if f == \"lib\" => p.parent(), // first chop went for $arch, so chop again for `lib`\n+                            _ => Some(p),\n+                        },\n+                        None => None,\n+                    }\n+                })\n                 .map(|s| s.to_owned())\n                 .ok_or(format!(\n                     \"Could not move 3 levels upper using `parent()` on {}\","}]}