{"sha": "486a082c58c60959328e0b394f9e58850b3c6341", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NmEwODJjNThjNjA5NTkzMjhlMGIzOTRmOWU1ODg1MGIzYzYzNDE=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-03-06T18:54:19Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-03-16T08:36:28Z"}, "message": "Unpack type arguments for QueryLookup.", "tree": {"sha": "5d3257692f3d0d9a8fbffc42229e2566c904e368", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d3257692f3d0d9a8fbffc42229e2566c904e368"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/486a082c58c60959328e0b394f9e58850b3c6341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/486a082c58c60959328e0b394f9e58850b3c6341", "html_url": "https://github.com/rust-lang/rust/commit/486a082c58c60959328e0b394f9e58850b3c6341", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/486a082c58c60959328e0b394f9e58850b3c6341/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b08943358ec8adc2d8e542659c7dcd2514311918", "url": "https://api.github.com/repos/rust-lang/rust/commits/b08943358ec8adc2d8e542659c7dcd2514311918", "html_url": "https://github.com/rust-lang/rust/commit/b08943358ec8adc2d8e542659c7dcd2514311918"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "67f0fdfcd5488aea9e21828bfa543fa213dbeb23", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/486a082c58c60959328e0b394f9e58850b3c6341/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486a082c58c60959328e0b394f9e58850b3c6341/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=486a082c58c60959328e0b394f9e58850b3c6341", "patch": "@@ -74,7 +74,7 @@ impl<'tcx, Q: QueryAccessors<'tcx>> QueryState<'tcx, Q> {\n \n         let shard = self.shards.get_shard_index_by_hash(key_hash);\n         let lock = self.shards.get_shard_by_index(shard).lock();\n-        QueryLookup { key_hash, shard, lock }\n+        QueryLookupImpl { key_hash, shard, lock }\n     }\n }\n \n@@ -115,10 +115,11 @@ impl<'tcx, M: QueryAccessors<'tcx>> Default for QueryState<'tcx, M> {\n }\n \n /// Values used when checking a query cache which can be reused on a cache-miss to execute the query.\n-pub(crate) struct QueryLookup<'tcx, Q: QueryAccessors<'tcx>> {\n+pub(crate) type QueryLookup<'tcx, Q> = QueryLookupImpl<'tcx, QueryStateShard<'tcx, Q>>;\n+pub(crate) struct QueryLookupImpl<'tcx, QSS> {\n     pub(super) key_hash: u64,\n     pub(super) shard: usize,\n-    pub(super) lock: LockGuard<'tcx, QueryStateShard<'tcx, Q>>,\n+    pub(super) lock: LockGuard<'tcx, QSS>,\n }\n \n /// A type representing the responsibility to execute the job in the `job` field."}]}