{"sha": "ebbcafbfa3d7dde58a548621a2003d26c1005fd4", "node_id": "C_kwDOAAsO6NoAKGViYmNhZmJmYTNkN2RkZTU4YTU0ODYyMWEyMDAzZDI2YzEwMDVmZDQ", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-03T19:40:53Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-03T19:40:53Z"}, "message": "Fix implementation of `clean::Path::whole_name()`\n\nI think that before this commit, the path `::std::vec::Vec` would have\nrendered as `{{root}}::std::vec::Vec`. Now, it should render correctly\nas `::std::vec::Vec`.", "tree": {"sha": "313837553e553a71950aba24a6a79f432fcf2909", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/313837553e553a71950aba24a6a79f432fcf2909"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebbcafbfa3d7dde58a548621a2003d26c1005fd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebbcafbfa3d7dde58a548621a2003d26c1005fd4", "html_url": "https://github.com/rust-lang/rust/commit/ebbcafbfa3d7dde58a548621a2003d26c1005fd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebbcafbfa3d7dde58a548621a2003d26c1005fd4/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f359b316df4e42369b91cbd39fec2925fe1a2fd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f359b316df4e42369b91cbd39fec2925fe1a2fd7", "html_url": "https://github.com/rust-lang/rust/commit/f359b316df4e42369b91cbd39fec2925fe1a2fd7"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "2e09768a8ef75722a8a524388d4cacc83fe8fc6c", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ebbcafbfa3d7dde58a548621a2003d26c1005fd4/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebbcafbfa3d7dde58a548621a2003d26c1005fd4/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=ebbcafbfa3d7dde58a548621a2003d26c1005fd4", "patch": "@@ -1958,7 +1958,11 @@ impl Path {\n     }\n \n     crate fn whole_name(&self) -> String {\n-        self.segments.iter().map(|s| s.name.to_string()).intersperse(\"::\".into()).collect()\n+        self.segments\n+            .iter()\n+            .map(|s| if s.name == kw::PathRoot { String::new() } else { s.name.to_string() })\n+            .intersperse(\"::\".into())\n+            .collect()\n     }\n \n     /// Checks if this is a `T::Name` path for an associated type."}]}