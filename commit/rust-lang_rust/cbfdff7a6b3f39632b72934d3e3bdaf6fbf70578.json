{"sha": "cbfdff7a6b3f39632b72934d3e3bdaf6fbf70578", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZmRmZjdhNmIzZjM5NjMyYjcyOTM0ZDNlM2JkYWY2ZmJmNzA1Nzg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-06-09T23:06:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-09T23:06:25Z"}, "message": "Rollup merge of #73098 - jyn514:rustdoc-is-fake, r=GuillaumeGomez\n\nAdd Item::is_fake for rustdoc\n\nI wasn't aware items _could_ be fake, so I think having a function\nmentioning it could be helpful. Also, I'd need to make this change for\ncross-crate intra-doc links anyway, so I figured it's better to make the\nrefactor separate.", "tree": {"sha": "6dcd467b03e5a035addfe6746bd8f4a79794d392", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dcd467b03e5a035addfe6746bd8f4a79794d392"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbfdff7a6b3f39632b72934d3e3bdaf6fbf70578", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe4BXxCRBK7hj4Ov3rIwAAdHIIAJt21iwo8XZX4wMYTS2hKbhN\nF6QZNydkOV2GP++VZt+dGdYN347Icak4naXqhHRSf8by2pFIWoquYUtmT30ctGU8\nbibNeL0DlaSrrTik3bw4sHrkYuDcSw0A0MPTUSOhNYsw0TxsMCDPmm7hW6AgwPk1\nyLBBQ9fNkWMdcOv6bmleanp1XwzqnBBlnZFQuxa7S0WVKQoozFCVEhFdFw2NyfVC\nij5Gdw0MIQpxzVpfP+aFi/dW5+bvJE6/fb55yOZ5NBmDYPu7u0bmSso9R/QLv7UY\noqvSSTFQeDqvJPX3qo18Y4jv/UBHwbA3n8WI+dwTDT//vOuyF11MxUOw1CgOkI8=\n=lUqw\n-----END PGP SIGNATURE-----\n", "payload": "tree 6dcd467b03e5a035addfe6746bd8f4a79794d392\nparent 860e6bdd2fffbc98e67851eaaec87fb430bdd16b\nparent 1f11331894cb7543211660f4a9282755ac7c4ac7\nauthor Dylan DPC <dylan.dpc@gmail.com> 1591743985 +0200\ncommitter GitHub <noreply@github.com> 1591743985 +0200\n\nRollup merge of #73098 - jyn514:rustdoc-is-fake, r=GuillaumeGomez\n\nAdd Item::is_fake for rustdoc\n\nI wasn't aware items _could_ be fake, so I think having a function\nmentioning it could be helpful. Also, I'd need to make this change for\ncross-crate intra-doc links anyway, so I figured it's better to make the\nrefactor separate.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbfdff7a6b3f39632b72934d3e3bdaf6fbf70578", "html_url": "https://github.com/rust-lang/rust/commit/cbfdff7a6b3f39632b72934d3e3bdaf6fbf70578", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbfdff7a6b3f39632b72934d3e3bdaf6fbf70578/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "860e6bdd2fffbc98e67851eaaec87fb430bdd16b", "url": "https://api.github.com/repos/rust-lang/rust/commits/860e6bdd2fffbc98e67851eaaec87fb430bdd16b", "html_url": "https://github.com/rust-lang/rust/commit/860e6bdd2fffbc98e67851eaaec87fb430bdd16b"}, {"sha": "1f11331894cb7543211660f4a9282755ac7c4ac7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f11331894cb7543211660f4a9282755ac7c4ac7", "html_url": "https://github.com/rust-lang/rust/commit/1f11331894cb7543211660f4a9282755ac7c4ac7"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "5c76c840b1ddd1910238457bd4aadbdd011fe404", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cbfdff7a6b3f39632b72934d3e3bdaf6fbf70578/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbfdff7a6b3f39632b72934d3e3bdaf6fbf70578/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=cbfdff7a6b3f39632b72934d3e3bdaf6fbf70578", "patch": "@@ -85,9 +85,7 @@ pub struct Item {\n \n impl fmt::Debug for Item {\n     fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        let fake = MAX_DEF_ID.with(|m| {\n-            m.borrow().get(&self.def_id.krate).map(|id| self.def_id >= *id).unwrap_or(false)\n-        });\n+        let fake = self.is_fake();\n         let def_id: &dyn fmt::Debug = if fake { &\"**FAKE**\" } else { &self.def_id };\n \n         fmt.debug_struct(\"Item\")\n@@ -238,6 +236,13 @@ impl Item {\n             _ => false,\n         }\n     }\n+\n+    /// See comments on next_def_id\n+    pub fn is_fake(&self) -> bool {\n+        MAX_DEF_ID.with(|m| {\n+            m.borrow().get(&self.def_id.krate).map(|id| self.def_id >= *id).unwrap_or(false)\n+        })\n+    }\n }\n \n #[derive(Clone, Debug)]"}]}