{"sha": "9a55e9edc57fa939185542be7e2d5b89418c78c9", "node_id": "C_kwDOAAsO6NoAKDlhNTVlOWVkYzU3ZmE5MzkxODU1NDJiZTdlMmQ1Yjg5NDE4Yzc4Yzk", "commit": {"author": {"name": "Josh Soref", "email": "2119212+jsoref@users.noreply.github.com", "date": "2023-04-19T03:48:30Z"}, "committer": {"name": "Josh Soref", "email": "2119212+jsoref@users.noreply.github.com", "date": "2023-04-26T06:11:13Z"}, "message": "rewrite: line_long_tail_not_flushed description\n\nSigned-off-by: Josh Soref <2119212+jsoref@users.noreply.github.com>", "tree": {"sha": "86de4adc863ac7c5bdc0630e6e44ace764b31de6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86de4adc863ac7c5bdc0630e6e44ace764b31de6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a55e9edc57fa939185542be7e2d5b89418c78c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a55e9edc57fa939185542be7e2d5b89418c78c9", "html_url": "https://github.com/rust-lang/rust/commit/9a55e9edc57fa939185542be7e2d5b89418c78c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a55e9edc57fa939185542be7e2d5b89418c78c9/comments", "author": {"login": "jsoref", "id": 2119212, "node_id": "MDQ6VXNlcjIxMTkyMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2119212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsoref", "html_url": "https://github.com/jsoref", "followers_url": "https://api.github.com/users/jsoref/followers", "following_url": "https://api.github.com/users/jsoref/following{/other_user}", "gists_url": "https://api.github.com/users/jsoref/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsoref/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsoref/subscriptions", "organizations_url": "https://api.github.com/users/jsoref/orgs", "repos_url": "https://api.github.com/users/jsoref/repos", "events_url": "https://api.github.com/users/jsoref/events{/privacy}", "received_events_url": "https://api.github.com/users/jsoref/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsoref", "id": 2119212, "node_id": "MDQ6VXNlcjIxMTkyMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2119212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsoref", "html_url": "https://github.com/jsoref", "followers_url": "https://api.github.com/users/jsoref/followers", "following_url": "https://api.github.com/users/jsoref/following{/other_user}", "gists_url": "https://api.github.com/users/jsoref/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsoref/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsoref/subscriptions", "organizations_url": "https://api.github.com/users/jsoref/orgs", "repos_url": "https://api.github.com/users/jsoref/repos", "events_url": "https://api.github.com/users/jsoref/events{/privacy}", "received_events_url": "https://api.github.com/users/jsoref/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1042b2c7ff9fb78d46682a840efe1998a5b084a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1042b2c7ff9fb78d46682a840efe1998a5b084a8", "html_url": "https://github.com/rust-lang/rust/commit/1042b2c7ff9fb78d46682a840efe1998a5b084a8"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "35a5291a34769ee3ec49e06d82ffed7b62aa43c2", "filename": "library/std/src/io/buffered/tests.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9a55e9edc57fa939185542be7e2d5b89418c78c9/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a55e9edc57fa939185542be7e2d5b89418c78c9/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Ftests.rs?ref=9a55e9edc57fa939185542be7e2d5b89418c78c9", "patch": "@@ -844,9 +844,10 @@ fn long_line_flushed() {\n }\n \n /// Test that, given a very long partial line *after* successfully\n-/// flushing a complete line, that that line is buffered unconditionally,\n-/// and no additional writes take place. This assures the property that\n-/// `write` should make at-most-one attempt to write new data.\n+/// flushing a complete line, the very long partial line is buffered\n+/// unconditionally, and no additional writes take place. This assures\n+/// the property that `write` should make at-most-one attempt to write\n+/// new data.\n #[test]\n fn line_long_tail_not_flushed() {\n     let writer = ProgrammableSink::default();"}]}