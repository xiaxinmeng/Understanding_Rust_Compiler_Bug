{"sha": "7353ef744e1ff4e8b511f77969eab316e8e06f5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNTNlZjc0NGUxZmY0ZThiNTExZjc3OTY5ZWFiMzE2ZThlMDZmNWI=", "commit": {"author": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2018-02-18T13:39:26Z"}, "committer": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2018-03-22T20:42:12Z"}, "message": "Replace `structurally_resolve_type` in unary expr check.\n\n`resolve_type_vars_with_obligations` is the same but doesn't error on unresolved type variables.\nIn theory this could make more code compile because we don't error or could ommit an otherwise useful error.\nIn practice I couldn't observe any effect.", "tree": {"sha": "cbbbabc8abc784b4e76faf9a778fabcef13c1280", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbbbabc8abc784b4e76faf9a778fabcef13c1280"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7353ef744e1ff4e8b511f77969eab316e8e06f5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7353ef744e1ff4e8b511f77969eab316e8e06f5b", "html_url": "https://github.com/rust-lang/rust/commit/7353ef744e1ff4e8b511f77969eab316e8e06f5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7353ef744e1ff4e8b511f77969eab316e8e06f5b/comments", "author": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7719f534196c9fe5216161e313ad7624f1beadee", "url": "https://api.github.com/repos/rust-lang/rust/commits/7719f534196c9fe5216161e313ad7624f1beadee", "html_url": "https://github.com/rust-lang/rust/commit/7719f534196c9fe5216161e313ad7624f1beadee"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e5d3e84e840d2136eca49db47999bbae00bd64a4", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7353ef744e1ff4e8b511f77969eab316e8e06f5b/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7353ef744e1ff4e8b511f77969eab316e8e06f5b/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=7353ef744e1ff4e8b511f77969eab316e8e06f5b", "patch": "@@ -3639,7 +3639,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                                                                needs);\n \n             if !oprnd_t.references_error() {\n-                oprnd_t = self.structurally_resolved_type(expr.span, oprnd_t);\n+                oprnd_t = self.resolve_type_vars_with_obligations(&oprnd_t);\n                 match unop {\n                     hir::UnDeref => {\n                         if let Some(mt) = oprnd_t.builtin_deref(true) {"}]}