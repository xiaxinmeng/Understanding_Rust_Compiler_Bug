{"sha": "838511e3aa58045a88d76dd431c643fa94f4c6da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzODUxMWUzYWE1ODA0NWE4OGQ3NmRkNDMxYzY0M2ZhOTRmNGM2ZGE=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-07-21T23:27:50Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-07-22T23:05:51Z"}, "message": "Folding recv_val into trans_recv, since this is its only use.", "tree": {"sha": "459ba6e8d39ff80b36d3a068792e8f7a9250379c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/459ba6e8d39ff80b36d3a068792e8f7a9250379c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/838511e3aa58045a88d76dd431c643fa94f4c6da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/838511e3aa58045a88d76dd431c643fa94f4c6da", "html_url": "https://github.com/rust-lang/rust/commit/838511e3aa58045a88d76dd431c643fa94f4c6da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/838511e3aa58045a88d76dd431c643fa94f4c6da/comments", "author": null, "committer": null, "parents": [{"sha": "e71f261e3f9ca6921d166671f1e5b7a38e8e3a8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e71f261e3f9ca6921d166671f1e5b7a38e8e3a8b", "html_url": "https://github.com/rust-lang/rust/commit/e71f261e3f9ca6921d166671f1e5b7a38e8e3a8b"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "8882379135ce42be072af535edd4617a0f18a5f0", "filename": "src/comp/middle/trans_comm.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/838511e3aa58045a88d76dd431c643fa94f4c6da/src%2Fcomp%2Fmiddle%2Ftrans_comm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/838511e3aa58045a88d76dd431c643fa94f4c6da/src%2Fcomp%2Fmiddle%2Ftrans_comm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_comm.rs?ref=838511e3aa58045a88d76dd431c643fa94f4c6da", "patch": "@@ -207,7 +207,6 @@ fn trans_send(&@block_ctxt cx, &@ast::expr lhs, &@ast::expr rhs,\n     auto data = trans_lval(bcx, rhs);\n     bcx = data.res.bcx;\n     auto chan_ty = node_id_type(cx.fcx.lcx.ccx, id);\n-    auto unit_ty;\n     alt (ty::struct(cx.fcx.lcx.ccx.tcx, chan_ty)) {\n         case (ty::ty_chan(?t)) { unit_ty = t; }\n         case (_) { bcx.fcx.lcx.ccx.sess.bug(\"non-chan type in trans_send\"); }\n@@ -223,6 +222,7 @@ fn trans_send(&@block_ctxt cx, &@ast::expr lhs, &@ast::expr rhs,\n     bcx.build.Call(bcx.fcx.lcx.ccx.upcalls.send,\n                    ~[bcx.fcx.lltaskptr, llchanval, lldataptr]);\n     ret rslt(bcx, chn.val);\n+    auto unit_ty;\n }\n \n fn trans_recv(&@block_ctxt cx, &@ast::expr lhs, &@ast::expr rhs,\n@@ -234,20 +234,16 @@ fn trans_recv(&@block_ctxt cx, &@ast::expr lhs, &@ast::expr rhs,\n     auto unit_ty = node_id_type(bcx.fcx.lcx.ccx, id);\n     // FIXME: calculate copy init-ness in typestate.\n \n-    ret recv_val(bcx, data.res.val, lhs, unit_ty, DROP_EXISTING);\n-}\n-\n-fn recv_val(&@block_ctxt cx, ValueRef to, &@ast::expr from, &ty::t unit_ty,\n-            copy_action action) -> result {\n-    auto bcx = cx;\n-    auto prt = trans_expr(bcx, from);\n+    auto prt = trans_expr(bcx, lhs);\n     bcx = prt.bcx;\n-    auto lldataptr = bcx.build.PointerCast(to, T_ptr(T_ptr(T_i8())));\n+    auto lldataptr = bcx.build.PointerCast(data.res.val,\n+                                           T_ptr(T_ptr(T_i8())));\n     auto llportptr = bcx.build.PointerCast(prt.val, T_opaque_port_ptr());\n     bcx.build.Call(bcx.fcx.lcx.ccx.upcalls.recv,\n                    ~[bcx.fcx.lltaskptr, lldataptr, llportptr]);\n-    auto data_load = load_if_immediate(bcx, to, unit_ty);\n-    //auto cp = copy_val(bcx, action, to, data_load, unit_ty);\n+    auto data_load = load_if_immediate(bcx, data.res.val, unit_ty);\n+    //auto cp = copy_val(bcx, DROP_EXISTING,\n+    //                   data.res.val, data_load, unit_ty);\n     //bcx = cp.bcx;\n \n     add_clean_temp(cx, data_load, unit_ty);"}]}