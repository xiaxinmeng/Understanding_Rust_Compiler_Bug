{"sha": "af424c1813eca41024da5290e064ead85f68dc0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmNDI0YzE4MTNlY2E0MTAyNGRhNTI5MGUwNjRlYWQ4NWY2OGRjMGI=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-02-01T09:31:05Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-02-01T09:46:48Z"}, "message": "Implement SourceIterator and InPlaceIterable for ResultShunt", "tree": {"sha": "5ba85b29e2cf7f119dc3ac5baeea651134e7fef0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ba85b29e2cf7f119dc3ac5baeea651134e7fef0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af424c1813eca41024da5290e064ead85f68dc0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af424c1813eca41024da5290e064ead85f68dc0b", "html_url": "https://github.com/rust-lang/rust/commit/af424c1813eca41024da5290e064ead85f68dc0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af424c1813eca41024da5290e064ead85f68dc0b/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fee0d31397c5ac46d08867e903131d1d73825a9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fee0d31397c5ac46d08867e903131d1d73825a9e", "html_url": "https://github.com/rust-lang/rust/commit/fee0d31397c5ac46d08867e903131d1d73825a9e"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "f72e642620090677c3d5eaa440be7211a6606979", "filename": "library/core/src/iter/adapters/mod.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/af424c1813eca41024da5290e064ead85f68dc0b/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af424c1813eca41024da5290e064ead85f68dc0b/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs?ref=af424c1813eca41024da5290e064ead85f68dc0b", "patch": "@@ -191,3 +191,26 @@ where\n         self.try_fold(init, ok(fold)).unwrap()\n     }\n }\n+\n+#[unstable(issue = \"none\", feature = \"inplace_iteration\")]\n+unsafe impl<S: Iterator, I, E> SourceIter for ResultShunt<'_, I, E>\n+where\n+    I: SourceIter<Source = S>,\n+{\n+    type Source = S;\n+\n+    #[inline]\n+    unsafe fn as_inner(&mut self) -> &mut S {\n+        // SAFETY: unsafe function forwarding to unsafe function with the same requirements\n+        unsafe { SourceIter::as_inner(&mut self.iter) }\n+    }\n+}\n+\n+// SAFETY: ResultShunt::next calls I::find, which has to advance `iter` in order to\n+// return `Some(_)`. Since `iter` has type `I: InPlaceIterable` it's guaranteed that\n+// at least one item will be moved out from the underlying source.\n+#[unstable(issue = \"none\", feature = \"inplace_iteration\")]\n+unsafe impl<I, T, E> InPlaceIterable for ResultShunt<'_, I, E> where\n+    I: Iterator<Item = Result<T, E>> + InPlaceIterable\n+{\n+}"}]}