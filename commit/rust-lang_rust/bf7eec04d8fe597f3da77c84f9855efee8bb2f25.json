{"sha": "bf7eec04d8fe597f3da77c84f9855efee8bb2f25", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmN2VlYzA0ZDhmZTU5N2YzZGE3N2M4NGY5ODU1ZWZlZThiYjJmMjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-26T10:16:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-26T10:16:52Z"}, "message": "Auto merge of #29312 - apasel422:issue-21410, r=alexcrichton\n\nCloses #21410.\r\nCloses #24972.", "tree": {"sha": "c672788d1e070dc9cd4b89e67e1d8a9d7408ba55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c672788d1e070dc9cd4b89e67e1d8a9d7408ba55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf7eec04d8fe597f3da77c84f9855efee8bb2f25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf7eec04d8fe597f3da77c84f9855efee8bb2f25", "html_url": "https://github.com/rust-lang/rust/commit/bf7eec04d8fe597f3da77c84f9855efee8bb2f25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf7eec04d8fe597f3da77c84f9855efee8bb2f25/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c44316d4a1ad0fe01ae366e163993aa3980c755f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c44316d4a1ad0fe01ae366e163993aa3980c755f", "html_url": "https://github.com/rust-lang/rust/commit/c44316d4a1ad0fe01ae366e163993aa3980c755f"}, {"sha": "fbc53e5a63339875922c47b1b87731d012e89848", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbc53e5a63339875922c47b1b87731d012e89848", "html_url": "https://github.com/rust-lang/rust/commit/fbc53e5a63339875922c47b1b87731d012e89848"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "bc525ba54c3548fdaeaaa2274a8d50be23834541", "filename": "src/test/run-pass/issue-21410.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bf7eec04d8fe597f3da77c84f9855efee8bb2f25/src%2Ftest%2Frun-pass%2Fissue-21410.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf7eec04d8fe597f3da77c84f9855efee8bb2f25/src%2Ftest%2Frun-pass%2Fissue-21410.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-21410.rs?ref=bf7eec04d8fe597f3da77c84f9855efee8bb2f25", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn g<F>(_: F) where F: FnOnce(Option<F>) {}\n+\n+fn main() {\n+    g(|_| {  });\n+}"}, {"sha": "ae7eb84d3e8eca8524feafae48d2b9ed2c102efc", "filename": "src/test/run-pass/issue-24972.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/bf7eec04d8fe597f3da77c84f9855efee8bb2f25/src%2Ftest%2Frun-pass%2Fissue-24972.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf7eec04d8fe597f3da77c84f9855efee8bb2f25/src%2Ftest%2Frun-pass%2Fissue-24972.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-24972.rs?ref=bf7eec04d8fe597f3da77c84f9855efee8bb2f25", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_private)]\n+\n+extern crate serialize;\n+\n+use serialize::{Encodable, Decodable};\n+use std::fmt::Display;\n+\n+pub trait Entity : Decodable + Encodable + Sized {\n+    type Key: Clone + Decodable + Encodable + ToString + Display + Eq + Ord + Sized;\n+\n+    fn id(&self) -> Self::Key;\n+\n+    fn find_by_id(id: Self::Key) -> Option<Self>;\n+}\n+\n+pub struct DbRef<E: Entity> {\n+    pub id: E::Key,\n+}\n+\n+impl<E> DbRef<E> where E: Entity {\n+    fn get(self) -> Option<E> {\n+        E::find_by_id(self.id)\n+    }\n+}\n+\n+fn main() {}"}]}