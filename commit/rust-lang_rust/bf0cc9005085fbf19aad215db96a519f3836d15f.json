{"sha": "bf0cc9005085fbf19aad215db96a519f3836d15f", "node_id": "C_kwDOAAsO6NoAKGJmMGNjOTAwNTA4NWZiZjE5YWFkMjE1ZGI5NmE1MTlmMzgzNmQxNWY", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-22T03:05:38Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-22T20:07:43Z"}, "message": "Replace `GetDefId` with inherent methods\n\nNow that it's only implemented for `Type`, using inherent methods\ninstead means that imports are no longer necessary. Also, `GetDefId` is\nonly meant to be used with `Type`, so it shouldn't be a trait.", "tree": {"sha": "26bcb59af0b30f9f82b58761f7d655d090d8d351", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26bcb59af0b30f9f82b58761f7d655d090d8d351"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf0cc9005085fbf19aad215db96a519f3836d15f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf0cc9005085fbf19aad215db96a519f3836d15f", "html_url": "https://github.com/rust-lang/rust/commit/bf0cc9005085fbf19aad215db96a519f3836d15f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf0cc9005085fbf19aad215db96a519f3836d15f/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fb13062757e0140bca4d1b2653a2cbc104d0edd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fb13062757e0140bca4d1b2653a2cbc104d0edd", "html_url": "https://github.com/rust-lang/rust/commit/7fb13062757e0140bca4d1b2653a2cbc104d0edd"}], "stats": {"total": 52, "additions": 20, "deletions": 32}, "files": [{"sha": "20cf0eec1ace3baa165cd611e823ee5a1620496f", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cc9005085fbf19aad215db96a519f3836d15f/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cc9005085fbf19aad215db96a519f3836d15f/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=bf0cc9005085fbf19aad215db96a519f3836d15f", "patch": "@@ -14,9 +14,7 @@ use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::hygiene::MacroKind;\n use rustc_span::symbol::{kw, sym, Symbol};\n \n-use crate::clean::{\n-    self, utils, Attributes, AttributesExt, GetDefId, ItemId, NestedAttributesExt, Type,\n-};\n+use crate::clean::{self, utils, Attributes, AttributesExt, ItemId, NestedAttributesExt, Type};\n use crate::core::DocContext;\n use crate::formats::item_type::ItemType;\n "}, {"sha": "0395c6a729e4e2d952646161fe04840e9dbd122f", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 14, "deletions": 22, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cc9005085fbf19aad215db96a519f3836d15f/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cc9005085fbf19aad215db96a519f3836d15f/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=bf0cc9005085fbf19aad215db96a519f3836d15f", "patch": "@@ -1451,24 +1451,6 @@ crate enum Type {\n #[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n rustc_data_structures::static_assert_size!(Type, 72);\n \n-crate trait GetDefId {\n-    /// Use this method to get the [`DefId`] of a [`clean`] AST node.\n-    /// This will return [`None`] when called on a primitive [`clean::Type`].\n-    /// Use [`Self::def_id_full`] if you want to include primitives.\n-    ///\n-    /// [`clean`]: crate::clean\n-    /// [`clean::Type`]: crate::clean::Type\n-    // FIXME: get rid of this function and always use `def_id_full`\n-    fn def_id(&self) -> Option<DefId>;\n-\n-    /// Use this method to get the [DefId] of a [clean] AST node, including [PrimitiveType]s.\n-    ///\n-    /// See [`Self::def_id`] for more.\n-    ///\n-    /// [clean]: crate::clean\n-    fn def_id_full(&self, cache: &Cache) -> Option<DefId>;\n-}\n-\n impl Type {\n     crate fn primitive_type(&self) -> Option<PrimitiveType> {\n         match *self {\n@@ -1549,14 +1531,24 @@ impl Type {\n         };\n         cache.and_then(|c| Primitive(t).def_id_full(c))\n     }\n-}\n \n-impl GetDefId for Type {\n-    fn def_id(&self) -> Option<DefId> {\n+    /// Use this method to get the [`DefId`] of a [`clean`] AST node.\n+    /// This will return [`None`] when called on a primitive [`clean::Type`].\n+    /// Use [`Self::def_id_full`] if you want to include primitives.\n+    ///\n+    /// [`clean`]: crate::clean\n+    /// [`clean::Type`]: crate::clean::Type\n+    // FIXME: get rid of this function and always use `def_id_full`\n+    crate fn def_id(&self) -> Option<DefId> {\n         self.inner_def_id(None)\n     }\n \n-    fn def_id_full(&self, cache: &Cache) -> Option<DefId> {\n+    /// Use this method to get the [DefId] of a [clean] AST node, including [PrimitiveType]s.\n+    ///\n+    /// See [`Self::def_id`] for more.\n+    ///\n+    /// [clean]: crate::clean\n+    crate fn def_id_full(&self, cache: &Cache) -> Option<DefId> {\n         self.inner_def_id(Some(cache))\n     }\n }"}, {"sha": "37371a4b69eec20b7badab4547a1285deddc573d", "filename": "src/librustdoc/formats/cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cc9005085fbf19aad215db96a519f3836d15f/src%2Flibrustdoc%2Fformats%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cc9005085fbf19aad215db96a519f3836d15f/src%2Flibrustdoc%2Fformats%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Fcache.rs?ref=bf0cc9005085fbf19aad215db96a519f3836d15f", "patch": "@@ -6,7 +6,7 @@ use rustc_middle::middle::privacy::AccessLevels;\n use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::sym;\n \n-use crate::clean::{self, GetDefId, ItemId, PrimitiveType};\n+use crate::clean::{self, ItemId, PrimitiveType};\n use crate::config::RenderOptions;\n use crate::fold::DocFolder;\n use crate::formats::item_type::ItemType;"}, {"sha": "4cc037f933e1e18544895bd640fe719eedef7481", "filename": "src/librustdoc/html/render/cache.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cc9005085fbf19aad215db96a519f3836d15f/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cc9005085fbf19aad215db96a519f3836d15f/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs?ref=bf0cc9005085fbf19aad215db96a519f3836d15f", "patch": "@@ -6,9 +6,7 @@ use rustc_span::symbol::Symbol;\n use serde::ser::{Serialize, SerializeStruct, Serializer};\n \n use crate::clean;\n-use crate::clean::types::{\n-    FnDecl, FnRetTy, GenericBound, Generics, GetDefId, Type, WherePredicate,\n-};\n+use crate::clean::types::{FnDecl, FnRetTy, GenericBound, Generics, Type, WherePredicate};\n use crate::formats::cache::Cache;\n use crate::formats::item_type::ItemType;\n use crate::html::markdown::short_markdown_summary;"}, {"sha": "b9ad917371c6c6462e2f73131c7bbd32c2c81d39", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cc9005085fbf19aad215db96a519f3836d15f/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cc9005085fbf19aad215db96a519f3836d15f/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=bf0cc9005085fbf19aad215db96a519f3836d15f", "patch": "@@ -57,7 +57,7 @@ use rustc_span::symbol::{kw, sym, Symbol};\n use serde::ser::SerializeSeq;\n use serde::{Serialize, Serializer};\n \n-use crate::clean::{self, GetDefId, ItemId, RenderedLink, SelfTy};\n+use crate::clean::{self, ItemId, RenderedLink, SelfTy};\n use crate::docfs::PathError;\n use crate::error::Error;\n use crate::formats::cache::Cache;"}, {"sha": "4b439b8ed713256f31f38be3d8ba5ae3f0345a20", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cc9005085fbf19aad215db96a519f3836d15f/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cc9005085fbf19aad215db96a519f3836d15f/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=bf0cc9005085fbf19aad215db96a519f3836d15f", "patch": "@@ -21,7 +21,7 @@ use super::{\n     render_impl, render_stability_since_raw, write_srclink, AssocItemLink, Context,\n     ImplRenderingParameters,\n };\n-use crate::clean::{self, GetDefId};\n+use crate::clean::{self};\n use crate::formats::item_type::ItemType;\n use crate::formats::{AssocItemRender, Impl, RenderMode};\n use crate::html::escape::Escape;"}, {"sha": "a160e31a450da229250faabdde5ba15a6c27e407", "filename": "src/librustdoc/passes/stripper.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf0cc9005085fbf19aad215db96a519f3836d15f/src%2Flibrustdoc%2Fpasses%2Fstripper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0cc9005085fbf19aad215db96a519f3836d15f/src%2Flibrustdoc%2Fpasses%2Fstripper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstripper.rs?ref=bf0cc9005085fbf19aad215db96a519f3836d15f", "patch": "@@ -2,7 +2,7 @@ use rustc_hir::def_id::DefId;\n use rustc_middle::middle::privacy::AccessLevels;\n use std::mem;\n \n-use crate::clean::{self, GetDefId, Item, ItemIdSet};\n+use crate::clean::{self, Item, ItemIdSet};\n use crate::fold::{strip_item, DocFolder};\n \n crate struct Stripper<'a> {"}]}