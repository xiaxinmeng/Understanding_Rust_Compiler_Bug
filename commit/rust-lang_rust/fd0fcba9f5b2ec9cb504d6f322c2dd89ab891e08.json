{"sha": "fd0fcba9f5b2ec9cb504d6f322c2dd89ab891e08", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMGZjYmE5ZjViMmVjOWNiNTA0ZDZmMzIyYzJkZDg5YWI4OTFlMDg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-09-18T04:25:18Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-09-18T04:25:18Z"}, "message": "std: Fix an invalid read in from_c_multistring\n\nWhen `count` is `Some` this function was reading a byte past the end\nof the buffer.", "tree": {"sha": "c566374c964b6592f5d9729cdfb07bdb81f14ccf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c566374c964b6592f5d9729cdfb07bdb81f14ccf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd0fcba9f5b2ec9cb504d6f322c2dd89ab891e08", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd0fcba9f5b2ec9cb504d6f322c2dd89ab891e08", "html_url": "https://github.com/rust-lang/rust/commit/fd0fcba9f5b2ec9cb504d6f322c2dd89ab891e08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd0fcba9f5b2ec9cb504d6f322c2dd89ab891e08/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "460021bdf2106ee76daf7d81ec7e50e972e26901", "url": "https://api.github.com/repos/rust-lang/rust/commits/460021bdf2106ee76daf7d81ec7e50e972e26901", "html_url": "https://github.com/rust-lang/rust/commit/460021bdf2106ee76daf7d81ec7e50e972e26901"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9707d592a2e8524f387ea122f78ec725559398dc", "filename": "src/libstd/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fd0fcba9f5b2ec9cb504d6f322c2dd89ab891e08/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd0fcba9f5b2ec9cb504d6f322c2dd89ab891e08/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=fd0fcba9f5b2ec9cb504d6f322c2dd89ab891e08", "patch": "@@ -1107,8 +1107,8 @@ pub mod raw {\n             Some(limit) => (true, limit),\n             None => (false, 0)\n         };\n-        while(*(curr_ptr as *libc::c_char) != 0 as libc::c_char\n-             && ((limited_count && ctr < limit) || !limited_count)) {\n+        while(((limited_count && ctr < limit) || !limited_count)\n+              && *(curr_ptr as *libc::c_char) != 0 as libc::c_char) {\n             let env_pair = from_c_str(\n                 curr_ptr as *libc::c_char);\n             result.push(env_pair);"}]}