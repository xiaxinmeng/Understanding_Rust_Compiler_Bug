{"sha": "c56ec7b02a96131967a16907bb8b24aa3790ca9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1NmVjN2IwMmE5NjEzMTk2N2ExNjkwN2JiOGIyNGFhMzc5MGNhOWU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-23T22:28:47Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-23T22:28:47Z"}, "message": "test: Add a version of the \"mock-trans\" regions test case that uses impls", "tree": {"sha": "208b2356e78e7e5f9180b2dbaf82c9ab1e2cd9bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/208b2356e78e7e5f9180b2dbaf82c9ab1e2cd9bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c56ec7b02a96131967a16907bb8b24aa3790ca9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c56ec7b02a96131967a16907bb8b24aa3790ca9e", "html_url": "https://github.com/rust-lang/rust/commit/c56ec7b02a96131967a16907bb8b24aa3790ca9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c56ec7b02a96131967a16907bb8b24aa3790ca9e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9c4dbeb33b529b27079149c379b28472558d6b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9c4dbeb33b529b27079149c379b28472558d6b6", "html_url": "https://github.com/rust-lang/rust/commit/b9c4dbeb33b529b27079149c379b28472558d6b6"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "566e1892bcb1bed7c57a80a479f7e8f0cf5cefa6", "filename": "src/test/run-pass/regions-mock-trans-impls.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/c56ec7b02a96131967a16907bb8b24aa3790ca9e/src%2Ftest%2Frun-pass%2Fregions-mock-trans-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c56ec7b02a96131967a16907bb8b24aa3790ca9e/src%2Ftest%2Frun-pass%2Fregions-mock-trans-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-mock-trans-impls.rs?ref=c56ec7b02a96131967a16907bb8b24aa3790ca9e", "patch": "@@ -0,0 +1,46 @@\n+import libc, sys, unsafe;\n+\n+enum arena = ();\n+\n+type bcx = {\n+    fcx: &fcx\n+};\n+\n+type fcx = {\n+    arena: &arena,\n+    ccx: &ccx\n+};\n+\n+type ccx = {\n+    x: int\n+};\n+\n+impl arena for arena {\n+    fn alloc(sz: uint, _align: uint) -> *() unsafe {\n+        ret unsafe::reinterpret_cast(libc::malloc(sz));\n+    }\n+}\n+\n+fn h(bcx : &bcx) -> &bcx {\n+    ret new(*bcx.fcx.arena) { fcx: fcx };\n+}\n+\n+fn g(fcx : &fcx) {\n+    let bcx = { fcx: fcx };\n+    let bcx2 = h(&bcx);\n+    unsafe {\n+        libc::free(unsafe::reinterpret_cast(bcx2));\n+    }\n+}\n+\n+fn f(ccx : &ccx) {\n+    let a = arena(());\n+    let fcx = { arena: &a, ccx: ccx };\n+    ret g(&fcx);\n+}\n+\n+fn main() {\n+    let ccx = { x: 0 };\n+    f(&ccx);\n+}\n+"}]}