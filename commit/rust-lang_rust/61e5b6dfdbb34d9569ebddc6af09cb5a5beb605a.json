{"sha": "61e5b6dfdbb34d9569ebddc6af09cb5a5beb605a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxZTViNmRmZGJiMzRkOTU2OWViZGRjNmFmMDljYjVhNWJlYjYwNWE=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-11-03T10:04:36Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-11-03T10:04:36Z"}, "message": "Warn unused_assignments for arguments", "tree": {"sha": "73ae8359e82004793d77845af920c06bd4399cc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73ae8359e82004793d77845af920c06bd4399cc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61e5b6dfdbb34d9569ebddc6af09cb5a5beb605a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61e5b6dfdbb34d9569ebddc6af09cb5a5beb605a", "html_url": "https://github.com/rust-lang/rust/commit/61e5b6dfdbb34d9569ebddc6af09cb5a5beb605a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61e5b6dfdbb34d9569ebddc6af09cb5a5beb605a/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7fbfb658e0e3e3be37c5b6704fd6b4d5991ae8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7fbfb658e0e3e3be37c5b6704fd6b4d5991ae8c", "html_url": "https://github.com/rust-lang/rust/commit/b7fbfb658e0e3e3be37c5b6704fd6b4d5991ae8c"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "b25ad66fd1fa57be9fd117e3e3e8d14e09a1d650", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/61e5b6dfdbb34d9569ebddc6af09cb5a5beb605a/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61e5b6dfdbb34d9569ebddc6af09cb5a5beb605a/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=61e5b6dfdbb34d9569ebddc6af09cb5a5beb605a", "patch": "@@ -1555,7 +1555,11 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n                 // Ignore unused self.\n                 let name = path1.node;\n                 if name != special_idents::self_.name {\n-                    self.warn_about_unused(sp, p_id, entry_ln, var);\n+                    if !self.warn_about_unused(sp, p_id, entry_ln, var) {\n+                        if self.live_on_entry(entry_ln, var).is_none() {\n+                            self.report_dead_assign(p_id, sp, var, true);\n+                        }\n+                    }\n                 }\n             })\n         }\n@@ -1609,11 +1613,19 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n                               ln: LiveNode,\n                               var: Variable) {\n         if self.live_on_exit(ln, var).is_none() {\n-            let r = self.should_warn(var);\n-            if let Some(name) = r {\n+            self.report_dead_assign(id, sp, var, false);\n+        }\n+    }\n+\n+    fn report_dead_assign(&self, id: NodeId, sp: Span, var: Variable, is_argument: bool) {\n+        if let Some(name) = self.should_warn(var) {\n+            if is_argument {\n+                self.ir.tcx.sess.add_lint(lint::builtin::UNUSED_ASSIGNMENTS, id, sp,\n+                    format!(\"value passed to `{}` is never read\", name));\n+            } else {\n                 self.ir.tcx.sess.add_lint(lint::builtin::UNUSED_ASSIGNMENTS, id, sp,\n                     format!(\"value assigned to `{}` is never read\", name));\n             }\n         }\n     }\n- }\n+}"}, {"sha": "ddd8fc68c43a3ef8caaab3a9c61f8ab45659b507", "filename": "src/test/compile-fail/liveness-dead.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/61e5b6dfdbb34d9569ebddc6af09cb5a5beb605a/src%2Ftest%2Fcompile-fail%2Fliveness-dead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61e5b6dfdbb34d9569ebddc6af09cb5a5beb605a/src%2Ftest%2Fcompile-fail%2Fliveness-dead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-dead.rs?ref=61e5b6dfdbb34d9569ebddc6af09cb5a5beb605a", "patch": "@@ -27,4 +27,14 @@ fn f3() {\n     x = 4; //~ ERROR: value assigned to `x` is never read\n }\n \n+fn f4(mut x: i32) { //~ ERROR: value passed to `x` is never read\n+    x = 4;\n+    x.clone();\n+}\n+\n+fn f5(mut x: i32) {\n+    x.clone();\n+    x = 4; //~ ERROR: value assigned to `x` is never read\n+}\n+\n fn main() {}"}]}