{"sha": "48dded95c68b61df02b4c7b175c3219e6d7f4e4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ZGRlZDk1YzY4YjYxZGYwMmI0YzdiMTc1YzMyMTllNmQ3ZjRlNGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-21T06:11:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-21T06:11:50Z"}, "message": "auto merge of #8580 : bytewiseand/rust/tuple-struct-ctor-ptr, r=alexcrichton\n\nFixes #5315", "tree": {"sha": "6dff84fe494bf002bbb56172965bd772522398cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dff84fe494bf002bbb56172965bd772522398cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48dded95c68b61df02b4c7b175c3219e6d7f4e4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48dded95c68b61df02b4c7b175c3219e6d7f4e4d", "html_url": "https://github.com/rust-lang/rust/commit/48dded95c68b61df02b4c7b175c3219e6d7f4e4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48dded95c68b61df02b4c7b175c3219e6d7f4e4d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00dd9e9cc57d1925df8362d02c6504b01d8105e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/00dd9e9cc57d1925df8362d02c6504b01d8105e3", "html_url": "https://github.com/rust-lang/rust/commit/00dd9e9cc57d1925df8362d02c6504b01d8105e3"}, {"sha": "29ab2daa5efebb59b5ad4a2710d570e89696e583", "url": "https://api.github.com/repos/rust-lang/rust/commits/29ab2daa5efebb59b5ad4a2710d570e89696e583", "html_url": "https://github.com/rust-lang/rust/commit/29ab2daa5efebb59b5ad4a2710d570e89696e583"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "725b525233e3df01bda586dbeed3aec8000b45e0", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48dded95c68b61df02b4c7b175c3219e6d7f4e4d/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48dded95c68b61df02b4c7b175c3219e6d7f4e4d/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=48dded95c68b61df02b4c7b175c3219e6d7f4e4d", "patch": "@@ -795,14 +795,18 @@ fn trans_def_dps_unadjusted(bcx: @mut Block, ref_expr: &ast::expr,\n                 return bcx;\n             }\n         }\n-        ast::def_struct(*) => {\n+        ast::def_struct(def_id) => {\n             let ty = expr_ty(bcx, ref_expr);\n             match ty::get(ty).sty {\n                 ty::ty_struct(did, _) if ty::has_dtor(ccx.tcx, did) => {\n                     let repr = adt::represent_type(ccx, ty);\n                     adt::trans_start_init(bcx, repr, lldest, 0);\n                 }\n-                _ => {}\n+                ty::ty_bare_fn(*) => {\n+                    let fn_data = callee::trans_fn_ref(bcx, def_id, ref_expr.id);\n+                    Store(bcx, fn_data.llfn, lldest);\n+                }\n+                _ => ()\n             }\n             return bcx;\n         }"}, {"sha": "dbb5db649ef31dd59ccc9057fc72faa3cb7bf529", "filename": "src/test/run-pass/tuple-struct-constructor-pointer.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/48dded95c68b61df02b4c7b175c3219e6d7f4e4d/src%2Ftest%2Frun-pass%2Ftuple-struct-constructor-pointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48dded95c68b61df02b4c7b175c3219e6d7f4e4d/src%2Ftest%2Frun-pass%2Ftuple-struct-constructor-pointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftuple-struct-constructor-pointer.rs?ref=48dded95c68b61df02b4c7b175c3219e6d7f4e4d", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[deriving(Eq)]\n+struct Foo(int);\n+#[deriving(Eq)]\n+struct Bar(int, int);\n+\n+fn main() {\n+    let f: extern fn(int) -> Foo = Foo;\n+    let g: extern fn(int, int) -> Bar = Bar;\n+    assert_eq!(f(42), Foo(42));\n+    assert_eq!(g(4, 7), Bar(4, 7));\n+}"}]}