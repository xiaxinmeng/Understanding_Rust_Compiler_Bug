{"sha": "57d01a9aeea505b2f4b0c420e1b9975d51690ff8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZDAxYTlhZWVhNTA1YjJmNGIwYzQyMGUxYjk5NzVkNTE2OTBmZjg=", "commit": {"author": {"name": "Simon Vandel Sillesen", "email": "simon.vandel@gmail.com", "date": "2020-10-22T20:22:17Z"}, "committer": {"name": "Simon Vandel Sillesen", "email": "simon.vandel@gmail.com", "date": "2020-10-22T20:23:56Z"}, "message": "Check which places are dead\n\nFixes #78192", "tree": {"sha": "ecdf945d788aa991d447e553c594ee0dbfa5828d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecdf945d788aa991d447e553c594ee0dbfa5828d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57d01a9aeea505b2f4b0c420e1b9975d51690ff8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57d01a9aeea505b2f4b0c420e1b9975d51690ff8", "html_url": "https://github.com/rust-lang/rust/commit/57d01a9aeea505b2f4b0c420e1b9975d51690ff8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57d01a9aeea505b2f4b0c420e1b9975d51690ff8/comments", "author": {"login": "simonvandel", "id": 2770647, "node_id": "MDQ6VXNlcjI3NzA2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2770647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonvandel", "html_url": "https://github.com/simonvandel", "followers_url": "https://api.github.com/users/simonvandel/followers", "following_url": "https://api.github.com/users/simonvandel/following{/other_user}", "gists_url": "https://api.github.com/users/simonvandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonvandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonvandel/subscriptions", "organizations_url": "https://api.github.com/users/simonvandel/orgs", "repos_url": "https://api.github.com/users/simonvandel/repos", "events_url": "https://api.github.com/users/simonvandel/events{/privacy}", "received_events_url": "https://api.github.com/users/simonvandel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "simonvandel", "id": 2770647, "node_id": "MDQ6VXNlcjI3NzA2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2770647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonvandel", "html_url": "https://github.com/simonvandel", "followers_url": "https://api.github.com/users/simonvandel/followers", "following_url": "https://api.github.com/users/simonvandel/following{/other_user}", "gists_url": "https://api.github.com/users/simonvandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonvandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonvandel/subscriptions", "organizations_url": "https://api.github.com/users/simonvandel/orgs", "repos_url": "https://api.github.com/users/simonvandel/repos", "events_url": "https://api.github.com/users/simonvandel/events{/privacy}", "received_events_url": "https://api.github.com/users/simonvandel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9cd294cf2775441e713c7ee2918b728733b99f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9cd294cf2775441e713c7ee2918b728733b99f5", "html_url": "https://github.com/rust-lang/rust/commit/a9cd294cf2775441e713c7ee2918b728733b99f5"}], "stats": {"total": 64, "additions": 55, "deletions": 9}, "files": [{"sha": "c5c14ca7caeb522c05cd6d297b8817c65922c7f0", "filename": "compiler/rustc_mir/src/transform/instcombine.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/57d01a9aeea505b2f4b0c420e1b9975d51690ff8/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finstcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57d01a9aeea505b2f4b0c420e1b9975d51690ff8/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finstcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finstcombine.rs?ref=57d01a9aeea505b2f4b0c420e1b9975d51690ff8", "patch": "@@ -119,11 +119,6 @@ impl OptimizationFinder<'b, 'tcx> {\n     }\n \n     fn find_deref_of_address(&mut self, rvalue: &Rvalue<'tcx>, location: Location) -> Option<()> {\n-        // FIXME(#78192): This optimization can result in unsoundness.\n-        if !self.tcx.sess.opts.debugging_opts.unsound_mir_opts {\n-            return None;\n-        }\n-\n         // Look for the sequence\n         //\n         // _2 = &_1;\n@@ -137,6 +132,8 @@ impl OptimizationFinder<'b, 'tcx> {\n                 _ => None,\n             }?;\n \n+            let mut dead_locals_seen = vec![];\n+\n             let stmt_index = location.statement_index;\n             // Look behind for statement that assigns the local from a address of operator.\n             // 6 is chosen as a heuristic determined by seeing the number of times\n@@ -160,6 +157,11 @@ impl OptimizationFinder<'b, 'tcx> {\n                                 BorrowKind::Shared,\n                                 place_taken_address_of,\n                             ) => {\n+                                // Make sure that the place has not been marked dead\n+                                if dead_locals_seen.contains(&place_taken_address_of.local) {\n+                                    return None;\n+                                }\n+\n                                 self.optimizations\n                                     .unneeded_deref\n                                     .insert(location, *place_taken_address_of);\n@@ -178,13 +180,19 @@ impl OptimizationFinder<'b, 'tcx> {\n                     // Inline asm can do anything, so bail out of the optimization.\n                     rustc_middle::mir::StatementKind::LlvmInlineAsm(_) => return None,\n \n+                    // Remember `StorageDead`s, as the local being marked dead could be the\n+                    // place RHS we are looking for, in which case we need to abort to avoid UB\n+                    // using an uninitialized place\n+                    rustc_middle::mir::StatementKind::StorageDead(dead) => {\n+                        dead_locals_seen.push(*dead)\n+                    }\n+\n                     // Check that `local_being_deref` is not being used in a mutating way which can cause misoptimization.\n                     rustc_middle::mir::StatementKind::Assign(box (_, _))\n                     | rustc_middle::mir::StatementKind::Coverage(_)\n                     | rustc_middle::mir::StatementKind::Nop\n                     | rustc_middle::mir::StatementKind::FakeRead(_, _)\n                     | rustc_middle::mir::StatementKind::StorageLive(_)\n-                    | rustc_middle::mir::StatementKind::StorageDead(_)\n                     | rustc_middle::mir::StatementKind::Retag(_, _)\n                     | rustc_middle::mir::StatementKind::AscribeUserType(_, _)\n                     | rustc_middle::mir::StatementKind::SetDiscriminant { .. } => {"}, {"sha": "feef65f52ebe0f6d830d04a437d75fa13a96c1f7", "filename": "src/test/mir-opt/const_prop/ref_deref.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57d01a9aeea505b2f4b0c420e1b9975d51690ff8/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/57d01a9aeea505b2f4b0c420e1b9975d51690ff8/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref.main.ConstProp.diff?ref=57d01a9aeea505b2f4b0c420e1b9975d51690ff8", "patch": "@@ -19,7 +19,7 @@\n                                            // + span: $DIR/ref_deref.rs:5:6: 5:10\n                                            // + literal: Const { ty: &i32, val: Unevaluated(WithOptConstParam { did: DefId(0:3 ~ ref_deref[317d]::main), const_param_did: None }, [], Some(promoted[0])) }\n           _2 = _4;                         // scope 0 at $DIR/ref_deref.rs:5:6: 5:10\n--         _1 = (*_2);                      // scope 0 at $DIR/ref_deref.rs:5:5: 5:10\n+-         _1 = (*_4);                      // scope 0 at $DIR/ref_deref.rs:5:5: 5:10\n +         _1 = const 4_i32;                // scope 0 at $DIR/ref_deref.rs:5:5: 5:10\n           StorageDead(_2);                 // scope 0 at $DIR/ref_deref.rs:5:10: 5:11\n           StorageDead(_1);                 // scope 0 at $DIR/ref_deref.rs:5:10: 5:11"}, {"sha": "7ec0751263fb13b8e8214b4029d1b4d4fad736aa", "filename": "src/test/mir-opt/const_prop/ref_deref_project.main.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57d01a9aeea505b2f4b0c420e1b9975d51690ff8/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/57d01a9aeea505b2f4b0c420e1b9975d51690ff8/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.ConstProp.diff?ref=57d01a9aeea505b2f4b0c420e1b9975d51690ff8", "patch": "@@ -19,7 +19,7 @@\n                                            // + span: $DIR/ref_deref_project.rs:5:6: 5:17\n                                            // + literal: Const { ty: &(i32, i32), val: Unevaluated(WithOptConstParam { did: DefId(0:3 ~ ref_deref_project[317d]::main), const_param_did: None }, [], Some(promoted[0])) }\n           _2 = &((*_4).1: i32);            // scope 0 at $DIR/ref_deref_project.rs:5:6: 5:17\n-          _1 = (*_2);                      // scope 0 at $DIR/ref_deref_project.rs:5:5: 5:17\n+          _1 = ((*_4).1: i32);             // scope 0 at $DIR/ref_deref_project.rs:5:5: 5:17\n           StorageDead(_2);                 // scope 0 at $DIR/ref_deref_project.rs:5:17: 5:18\n           StorageDead(_1);                 // scope 0 at $DIR/ref_deref_project.rs:5:17: 5:18\n           _0 = const ();                   // scope 0 at $DIR/ref_deref_project.rs:4:11: 6:2"}, {"sha": "3be8c2f3ac732c8d9e71c2ef83cfcb1091bd21b9", "filename": "src/test/mir-opt/inst_combine_deref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57d01a9aeea505b2f4b0c420e1b9975d51690ff8/src%2Ftest%2Fmir-opt%2Finst_combine_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57d01a9aeea505b2f4b0c420e1b9975d51690ff8/src%2Ftest%2Fmir-opt%2Finst_combine_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finst_combine_deref.rs?ref=57d01a9aeea505b2f4b0c420e1b9975d51690ff8", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -O -Zunsound-mir-opts\n+// compile-flags: -O\n // EMIT_MIR inst_combine_deref.simple_opt.InstCombine.diff\n fn simple_opt() -> u64 {\n     let x = 5;"}, {"sha": "906d094f72b4a1b45b838babfc42698c8a3e67de", "filename": "src/test/mir-opt/issue-78192.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/57d01a9aeea505b2f4b0c420e1b9975d51690ff8/src%2Ftest%2Fmir-opt%2Fissue-78192.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57d01a9aeea505b2f4b0c420e1b9975d51690ff8/src%2Ftest%2Fmir-opt%2Fissue-78192.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-78192.rs?ref=57d01a9aeea505b2f4b0c420e1b9975d51690ff8", "patch": "@@ -0,0 +1,9 @@\n+// EMIT_MIR issue_78192.f.InstCombine.diff\n+pub fn f<T>(a: &T) -> *const T {\n+    let b: &*const T = &(a as *const T);\n+    *b\n+}\n+\n+fn main() {\n+    f(&2);\n+}"}, {"sha": "ec3be78525802eea27f0fec6a03e4068e67629a0", "filename": "src/test/mir-opt/issue_78192.f.InstCombine.diff", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/57d01a9aeea505b2f4b0c420e1b9975d51690ff8/src%2Ftest%2Fmir-opt%2Fissue_78192.f.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/57d01a9aeea505b2f4b0c420e1b9975d51690ff8/src%2Ftest%2Fmir-opt%2Fissue_78192.f.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_78192.f.InstCombine.diff?ref=57d01a9aeea505b2f4b0c420e1b9975d51690ff8", "patch": "@@ -0,0 +1,29 @@\n+- // MIR for `f` before InstCombine\n++ // MIR for `f` after InstCombine\n+  \n+  fn f(_1: &T) -> *const T {\n+      debug a => _1;                       // in scope 0 at $DIR/issue-78192.rs:2:13: 2:14\n+      let mut _0: *const T;                // return place in scope 0 at $DIR/issue-78192.rs:2:23: 2:31\n+      let _2: &*const T;                   // in scope 0 at $DIR/issue-78192.rs:3:9: 3:10\n+      let _3: &*const T;                   // in scope 0 at $DIR/issue-78192.rs:3:24: 3:40\n+      let _4: *const T;                    // in scope 0 at $DIR/issue-78192.rs:3:25: 3:40\n+      scope 1 {\n+          debug b => _2;                   // in scope 1 at $DIR/issue-78192.rs:3:9: 3:10\n+      }\n+  \n+      bb0: {\n+          StorageLive(_2);                 // scope 0 at $DIR/issue-78192.rs:3:9: 3:10\n+          StorageLive(_3);                 // scope 0 at $DIR/issue-78192.rs:3:24: 3:40\n+          StorageLive(_4);                 // scope 0 at $DIR/issue-78192.rs:3:25: 3:40\n+          _4 = &raw const (*_1);           // scope 0 at $DIR/issue-78192.rs:3:26: 3:27\n+          _3 = &_4;                        // scope 0 at $DIR/issue-78192.rs:3:24: 3:40\n+-         _2 = &(*_3);                     // scope 0 at $DIR/issue-78192.rs:3:24: 3:40\n++         _2 = _3;                         // scope 0 at $DIR/issue-78192.rs:3:24: 3:40\n+          StorageDead(_3);                 // scope 0 at $DIR/issue-78192.rs:3:40: 3:41\n+          _0 = (*_2);                      // scope 1 at $DIR/issue-78192.rs:4:5: 4:7\n+          StorageDead(_4);                 // scope 0 at $DIR/issue-78192.rs:5:1: 5:2\n+          StorageDead(_2);                 // scope 0 at $DIR/issue-78192.rs:5:1: 5:2\n+          return;                          // scope 0 at $DIR/issue-78192.rs:5:2: 5:2\n+      }\n+  }\n+  "}]}