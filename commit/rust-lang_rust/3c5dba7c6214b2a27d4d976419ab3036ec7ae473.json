{"sha": "3c5dba7c6214b2a27d4d976419ab3036ec7ae473", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNWRiYTdjNjIxNGIyYTI3ZDRkOTc2NDE5YWIzMDM2ZWM3YWU0NzM=", "commit": {"author": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-05-20T20:52:30Z"}, "committer": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-05-21T16:07:47Z"}, "message": "Use `HirId` in value of `ResolverOutputs::trait_map` instead of `NodeId`", "tree": {"sha": "1c3e1e08b14786094d8f6e3a6a3bbf1365b5dcbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c3e1e08b14786094d8f6e3a6a3bbf1365b5dcbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c5dba7c6214b2a27d4d976419ab3036ec7ae473", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c5dba7c6214b2a27d4d976419ab3036ec7ae473", "html_url": "https://github.com/rust-lang/rust/commit/3c5dba7c6214b2a27d4d976419ab3036ec7ae473", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c5dba7c6214b2a27d4d976419ab3036ec7ae473/comments", "author": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5728c5371dc27aa0572c99c692cede23a019b7ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/5728c5371dc27aa0572c99c692cede23a019b7ff", "html_url": "https://github.com/rust-lang/rust/commit/5728c5371dc27aa0572c99c692cede23a019b7ff"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "8b96b0eaab3c542a5ec918f4ab6101be255f5fed", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3c5dba7c6214b2a27d4d976419ab3036ec7ae473/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c5dba7c6214b2a27d4d976419ab3036ec7ae473/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=3c5dba7c6214b2a27d4d976419ab3036ec7ae473", "patch": "@@ -1115,10 +1115,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         let mut trait_map: FxHashMap<_, FxHashMap<_, _>> = FxHashMap::default();\n         for (hir_id, v) in resolutions.trait_map.into_iter() {\n             let map = trait_map.entry(hir_id.owner).or_default();\n-            let v = v\n-                .into_iter()\n-                .map(|tc| tc.map_import_ids(|id| definitions.node_id_to_hir_id(id)))\n-                .collect();\n             map.insert(hir_id.local_id, StableVec::new(v));\n         }\n "}, {"sha": "46715b8e737a9b25a235ae1abded7413cb5d6ded", "filename": "src/librustc_middle/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c5dba7c6214b2a27d4d976419ab3036ec7ae473/src%2Flibrustc_middle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c5dba7c6214b2a27d4d976419ab3036ec7ae473/src%2Flibrustc_middle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fmod.rs?ref=3c5dba7c6214b2a27d4d976419ab3036ec7ae473", "patch": "@@ -121,7 +121,7 @@ pub struct ResolverOutputs {\n     pub definitions: rustc_hir::definitions::Definitions,\n     pub cstore: Box<CrateStoreDyn>,\n     pub extern_crate_map: NodeMap<CrateNum>,\n-    pub trait_map: FxHashMap<hir::HirId, Vec<hir::TraitCandidate<NodeId>>>,\n+    pub trait_map: FxHashMap<hir::HirId, Vec<hir::TraitCandidate<hir::HirId>>>,\n     pub maybe_unused_trait_imports: NodeSet,\n     pub maybe_unused_extern_crates: Vec<(NodeId, Span)>,\n     pub export_map: ExportMap<NodeId>,"}, {"sha": "0b6b1fbdc34a0631e7982cf273a9f2785c886e4e", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3c5dba7c6214b2a27d4d976419ab3036ec7ae473/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c5dba7c6214b2a27d4d976419ab3036ec7ae473/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=3c5dba7c6214b2a27d4d976419ab3036ec7ae473", "patch": "@@ -1273,15 +1273,21 @@ impl<'a> Resolver<'a> {\n     }\n \n     pub fn into_outputs(self) -> ResolverOutputs {\n+        let definitions = self.definitions;\n         let trait_map = {\n             let mut map = FxHashMap::default();\n             for (k, v) in self.trait_map.into_iter() {\n-                map.insert(self.definitions.node_id_to_hir_id(k), v);\n+                map.insert(\n+                    definitions.node_id_to_hir_id(k),\n+                    v.into_iter()\n+                        .map(|tc| tc.map_import_ids(|id| definitions.node_id_to_hir_id(id)))\n+                        .collect(),\n+                );\n             }\n             map\n         };\n         ResolverOutputs {\n-            definitions: self.definitions,\n+            definitions: definitions,\n             cstore: Box::new(self.crate_loader.into_cstore()),\n             extern_crate_map: self.extern_crate_map,\n             export_map: self.export_map,\n@@ -1306,7 +1312,15 @@ impl<'a> Resolver<'a> {\n             trait_map: {\n                 let mut map = FxHashMap::default();\n                 for (k, v) in self.trait_map.iter() {\n-                    map.insert(self.definitions.node_id_to_hir_id(k.clone()), v.clone());\n+                    map.insert(\n+                        self.definitions.node_id_to_hir_id(k.clone()),\n+                        v.iter()\n+                            .map(|tc| {\n+                                tc.clone()\n+                                    .map_import_ids(|id| self.definitions.node_id_to_hir_id(id))\n+                            })\n+                            .collect(),\n+                    );\n                 }\n                 map\n             },"}]}