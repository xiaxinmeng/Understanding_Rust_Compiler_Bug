{"sha": "cc31d9cabcc6c8ad396c1aae6257a4b5ea25cb46", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMzFkOWNhYmNjNmM4YWQzOTZjMWFhZTYyNTdhNGI1ZWEyNWNiNDY=", "commit": {"author": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2014-10-04T23:27:42Z"}, "committer": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2014-10-05T01:16:32Z"}, "message": "Give a more descriptive error when marking non-test items as #[test]\n\nCloses #14772.", "tree": {"sha": "aa51200e0faf139ddd8662f79229cbceb172bed1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa51200e0faf139ddd8662f79229cbceb172bed1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc31d9cabcc6c8ad396c1aae6257a4b5ea25cb46", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc31d9cabcc6c8ad396c1aae6257a4b5ea25cb46", "html_url": "https://github.com/rust-lang/rust/commit/cc31d9cabcc6c8ad396c1aae6257a4b5ea25cb46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc31d9cabcc6c8ad396c1aae6257a4b5ea25cb46/comments", "author": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a29df44f51f950549957128ad1b65b2576a48383", "url": "https://api.github.com/repos/rust-lang/rust/commits/a29df44f51f950549957128ad1b65b2576a48383", "html_url": "https://github.com/rust-lang/rust/commit/a29df44f51f950549957128ad1b65b2576a48383"}], "stats": {"total": 53, "additions": 41, "deletions": 12}, "files": [{"sha": "d2c0ebd4393191ab364bfb1cb829098c2546eec9", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 25, "deletions": 12, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/cc31d9cabcc6c8ad396c1aae6257a4b5ea25cb46/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc31d9cabcc6c8ad396c1aae6257a4b5ea25cb46/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=cc31d9cabcc6c8ad396c1aae6257a4b5ea25cb46", "patch": "@@ -274,30 +274,43 @@ fn strip_test_functions(krate: ast::Crate) -> ast::Crate {\n fn is_test_fn(cx: &TestCtxt, i: &ast::Item) -> bool {\n     let has_test_attr = attr::contains_name(i.attrs.as_slice(), \"test\");\n \n-    fn has_test_signature(i: &ast::Item) -> bool {\n+    #[deriving(PartialEq)]\n+    enum HasTestSignature {\n+        Yes,\n+        No,\n+        NotEvenAFunction,\n+    }\n+\n+    fn has_test_signature(i: &ast::Item) -> HasTestSignature {\n         match &i.node {\n           &ast::ItemFn(ref decl, _, _, ref generics, _) => {\n             let no_output = match decl.output.node {\n                 ast::TyNil => true,\n-                _ => false\n+                _ => false,\n             };\n-            decl.inputs.is_empty()\n-                && no_output\n-                && !generics.is_parameterized()\n+            if decl.inputs.is_empty()\n+                   && no_output\n+                   && !generics.is_parameterized() {\n+                Yes\n+            } else {\n+                No\n+            }\n           }\n-          _ => false\n+          _ => NotEvenAFunction,\n         }\n     }\n \n-    if has_test_attr && !has_test_signature(i) {\n+    if has_test_attr {\n         let diag = cx.span_diagnostic;\n-        diag.span_err(\n-            i.span,\n-            \"functions used as tests must have signature fn() -> ().\"\n-        );\n+        match has_test_signature(i) {\n+            Yes => {},\n+            No => diag.span_err(i.span, \"functions used as tests must have signature fn() -> ()\"),\n+            NotEvenAFunction => diag.span_err(i.span,\n+                                              \"only functions may be used as tests\"),\n+        }\n     }\n \n-    return has_test_attr && has_test_signature(i);\n+    return has_test_attr && has_test_signature(i) == Yes;\n }\n \n fn is_bench_fn(cx: &TestCtxt, i: &ast::Item) -> bool {"}, {"sha": "aaaad67be52dd9beb7f98779db8ae4043d42c0f1", "filename": "src/test/compile-fail/issue-14772.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cc31d9cabcc6c8ad396c1aae6257a4b5ea25cb46/src%2Ftest%2Fcompile-fail%2Fissue-14772.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc31d9cabcc6c8ad396c1aae6257a4b5ea25cb46/src%2Ftest%2Fcompile-fail%2Fissue-14772.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-14772.rs?ref=cc31d9cabcc6c8ad396c1aae6257a4b5ea25cb46", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --test\n+\n+#[test]\n+mod foo {} //~ ERROR only functions may be used as tests\n+\n+fn main() {}"}]}