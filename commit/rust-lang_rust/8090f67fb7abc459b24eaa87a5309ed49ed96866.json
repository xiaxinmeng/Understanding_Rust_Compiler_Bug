{"sha": "8090f67fb7abc459b24eaa87a5309ed49ed96866", "node_id": "C_kwDOAAsO6NoAKDgwOTBmNjdmYjdhYmM0NTliMjRlYWE4N2E1MzA5ZWQ0OWVkOTY4NjY", "commit": {"author": {"name": "Hudson Ayers", "email": "hayers@stanford.edu", "date": "2021-10-14T17:46:07Z"}, "committer": {"name": "Hudson Ayers", "email": "hayers@stanford.edu", "date": "2021-10-21T17:44:13Z"}, "message": "document the unstable location-detail flag", "tree": {"sha": "04633b6bf52af9f4c69eb23012f1157ba2ae2a4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04633b6bf52af9f4c69eb23012f1157ba2ae2a4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8090f67fb7abc459b24eaa87a5309ed49ed96866", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8090f67fb7abc459b24eaa87a5309ed49ed96866", "html_url": "https://github.com/rust-lang/rust/commit/8090f67fb7abc459b24eaa87a5309ed49ed96866", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8090f67fb7abc459b24eaa87a5309ed49ed96866/comments", "author": {"login": "hudson-ayers", "id": 32688905, "node_id": "MDQ6VXNlcjMyNjg4OTA1", "avatar_url": "https://avatars.githubusercontent.com/u/32688905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hudson-ayers", "html_url": "https://github.com/hudson-ayers", "followers_url": "https://api.github.com/users/hudson-ayers/followers", "following_url": "https://api.github.com/users/hudson-ayers/following{/other_user}", "gists_url": "https://api.github.com/users/hudson-ayers/gists{/gist_id}", "starred_url": "https://api.github.com/users/hudson-ayers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hudson-ayers/subscriptions", "organizations_url": "https://api.github.com/users/hudson-ayers/orgs", "repos_url": "https://api.github.com/users/hudson-ayers/repos", "events_url": "https://api.github.com/users/hudson-ayers/events{/privacy}", "received_events_url": "https://api.github.com/users/hudson-ayers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hudson-ayers", "id": 32688905, "node_id": "MDQ6VXNlcjMyNjg4OTA1", "avatar_url": "https://avatars.githubusercontent.com/u/32688905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hudson-ayers", "html_url": "https://github.com/hudson-ayers", "followers_url": "https://api.github.com/users/hudson-ayers/followers", "following_url": "https://api.github.com/users/hudson-ayers/following{/other_user}", "gists_url": "https://api.github.com/users/hudson-ayers/gists{/gist_id}", "starred_url": "https://api.github.com/users/hudson-ayers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hudson-ayers/subscriptions", "organizations_url": "https://api.github.com/users/hudson-ayers/orgs", "repos_url": "https://api.github.com/users/hudson-ayers/repos", "events_url": "https://api.github.com/users/hudson-ayers/events{/privacy}", "received_events_url": "https://api.github.com/users/hudson-ayers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1d94b8fd1ca1a1de6a56a3c53bb105fefacdd9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1d94b8fd1ca1a1de6a56a3c53bb105fefacdd9c", "html_url": "https://github.com/rust-lang/rust/commit/e1d94b8fd1ca1a1de6a56a3c53bb105fefacdd9c"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "08d937cc28200fc266785d350720c229ff72f2ed", "filename": "src/doc/unstable-book/src/compiler-flags/location-detail.md", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/8090f67fb7abc459b24eaa87a5309ed49ed96866/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Flocation-detail.md", "raw_url": "https://github.com/rust-lang/rust/raw/8090f67fb7abc459b24eaa87a5309ed49ed96866/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Flocation-detail.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Flocation-detail.md?ref=8090f67fb7abc459b24eaa87a5309ed49ed96866", "patch": "@@ -0,0 +1,43 @@\n+# `location-detail`\n+\n+The tracking issue for this feature is: [#70580](https://github.com/rust-lang/rust/issues/70580).\n+\n+------------------------\n+\n+Option `-Z location-detail=val` controls what location details are tracked when\n+using `caller_location`. This allows users to control what location details\n+are printed as part of panic messages, by allowing them to exclude any combination\n+of filenames, line numbers, and column numbers. This option is intended to provide\n+users with a way to mitigate the size impact of `#[track_caller]`.\n+\n+This option supports a comma separated list of location details to be included. Valid options\n+within this list are:\n+\n+- `file` - the filename of the panic will be included in the panic output\n+- `line` - the source line of the panic will be included in the panic output\n+- `column` - the source column of the panic will be included in the panic output\n+\n+Any combination of these three options are supported. If this option is not specified,\n+all three are included by default.\n+\n+An example of a panic output when using `-Z location-detail=line`:\n+```text\n+panicked at 'Process blink had a fault', <redacted>:323:0\n+```\n+\n+The code size savings from this option are two-fold. First, the `&'static str` values\n+for each path to a file containing a panic are removed from the binary. For projects\n+with deep directory structures and many files with panics, this can add up. This category\n+of savings can only be realized by excluding filenames from the panic output. Second,\n+savings can be realized by allowing multiple panics to be fused into a single panicking\n+branch. It is often the case that within a single file, multiple panics with the same\n+panic message exist -- e.g. two calls to `Option::unwrap()` in a single line, or\n+two calls to `Result::expect()` on adjacent lines. If column and line information\n+are included in the `Location` struct passed to the panic handler, these branches cannot\n+be fused, as the output is different depending on which panic occurs. However if line\n+and column information is identical for all panics, these branches can be fused, which\n+can lead to substantial code size savings, especially for small embedded binaries with\n+many panics.\n+\n+The savings from this option are amplified when combined with the use of `-Zbuild-std`, as\n+otherwise paths for panics within the standard library are still included in your binary."}]}