{"sha": "77e36125812c257c68a89d56e6dad30e6c081ebe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZTM2MTI1ODEyYzI1N2M2OGE4OWQ1NmU2ZGFkMzBlNmMwODFlYmU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-12-13T14:08:11Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-12-13T14:24:14Z"}, "message": "Move emit_module a bit up", "tree": {"sha": "6fea8fd8f0a4d45f34f5d8bd88397322b28adfd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fea8fd8f0a4d45f34f5d8bd88397322b28adfd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77e36125812c257c68a89d56e6dad30e6c081ebe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77e36125812c257c68a89d56e6dad30e6c081ebe", "html_url": "https://github.com/rust-lang/rust/commit/77e36125812c257c68a89d56e6dad30e6c081ebe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77e36125812c257c68a89d56e6dad30e6c081ebe/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "978add369838ff5dda91508a892b6be0b87956dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/978add369838ff5dda91508a892b6be0b87956dc", "html_url": "https://github.com/rust-lang/rust/commit/978add369838ff5dda91508a892b6be0b87956dc"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "c7b328b5d8812feb66f0c63e2ab9f194bcb97ce9", "filename": "src/lib.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/77e36125812c257c68a89d56e6dad30e6c081ebe/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77e36125812c257c68a89d56e6dad30e6c081ebe/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=77e36125812c257c68a89d56e6dad30e6c081ebe", "patch": "@@ -237,13 +237,6 @@ impl CodegenBackend for CraneliftCodegenBackend {\n                 module\n             };\n \n-            let mut faerie_module = new_module(\"some_file\".to_string());\n-\n-            codegen_cgus(tcx, &mut faerie_module, &mut log);\n-            crate::allocator::codegen(tcx.sess, &mut faerie_module);\n-\n-            tcx.sess.abort_if_errors();\n-\n             let emit_module = |name: &str, kind: ModuleKind, mut module: Module<FaerieBackend>| {\n                 module.finalize_definitions();\n                 let artifact = module.finish().artifact;\n@@ -262,6 +255,13 @@ impl CodegenBackend for CraneliftCodegenBackend {\n                 }\n             };\n \n+            let mut faerie_module = new_module(\"some_file\".to_string());\n+\n+            codegen_cgus(tcx, &mut faerie_module, &mut log);\n+            crate::allocator::codegen(tcx.sess, &mut faerie_module);\n+\n+            tcx.sess.abort_if_errors();\n+\n             return Box::new(CodegenResults {\n                 crate_name: tcx.crate_name(LOCAL_CRATE),\n                 modules: vec![emit_module(\"dummy_name\", ModuleKind::Regular, faerie_module)],"}]}