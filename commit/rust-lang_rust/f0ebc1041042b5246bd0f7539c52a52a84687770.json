{"sha": "f0ebc1041042b5246bd0f7539c52a52a84687770", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZWJjMTA0MTA0MmI1MjQ2YmQwZjc1MzljNTJhNTJhODQ2ODc3NzA=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-14T04:07:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-14T04:07:30Z"}, "message": "Rollup merge of #82617 - camelid:everybody_loops-docs, r=jyn514\n\nDocument `everybody_loops`\n\ncc `@jyn514`", "tree": {"sha": "6f72053a7d96606003de887f2ba8464b15821a0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f72053a7d96606003de887f2ba8464b15821a0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0ebc1041042b5246bd0f7539c52a52a84687770", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgTYwCCRBK7hj4Ov3rIwAAdHIIAJM4eUmEsoIrxw50Rom2mCbU\nwrGPbyuuGEHBq/XLXpmUh9xG3iJvJ82tbZiHZubpyMHPuFsPGk6imXd5W0yc2AxW\n+nNPPUe+GmZMaSvb5WGlOPjbwfZeNIzodtD8gZkd4hYv734MsZ1GpCTHalzjqjof\nKVg2CUxM9yU8MDvAB4Fef9WC3Euhk8opk8uksGvfhjGJazlYvRcQBDOWLukIYGrm\nCkJVdjl/xPedfh32v834HEYBckQc9Mhe96XAw/SGMQ4A1o8jk14ZmzF5rq+IGcOq\nrPMvaC1Df2CssnzxysG4inZk6EcxUbED9E8vgYWSv5/KQ4AFAygRGb4S8Qg4+uE=\n=Ss9y\n-----END PGP SIGNATURE-----\n", "payload": "tree 6f72053a7d96606003de887f2ba8464b15821a0d\nparent 67bc866e5934e19c37fd7a115cdc8142fcb8c51d\nparent 8164a74eefd4f6b098b5f86c8c4205edf6382f54\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1615694850 +0900\ncommitter GitHub <noreply@github.com> 1615694850 +0900\n\nRollup merge of #82617 - camelid:everybody_loops-docs, r=jyn514\n\nDocument `everybody_loops`\n\ncc `@jyn514`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0ebc1041042b5246bd0f7539c52a52a84687770", "html_url": "https://github.com/rust-lang/rust/commit/f0ebc1041042b5246bd0f7539c52a52a84687770", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0ebc1041042b5246bd0f7539c52a52a84687770/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67bc866e5934e19c37fd7a115cdc8142fcb8c51d", "url": "https://api.github.com/repos/rust-lang/rust/commits/67bc866e5934e19c37fd7a115cdc8142fcb8c51d", "html_url": "https://github.com/rust-lang/rust/commit/67bc866e5934e19c37fd7a115cdc8142fcb8c51d"}, {"sha": "8164a74eefd4f6b098b5f86c8c4205edf6382f54", "url": "https://api.github.com/repos/rust-lang/rust/commits/8164a74eefd4f6b098b5f86c8c4205edf6382f54", "html_url": "https://github.com/rust-lang/rust/commit/8164a74eefd4f6b098b5f86c8c4205edf6382f54"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "341cfa479002783655f4fca3c493a230d2c918c4", "filename": "compiler/rustc_interface/src/util.rs", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f0ebc1041042b5246bd0f7539c52a52a84687770/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0ebc1041042b5246bd0f7539c52a52a84687770/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Futil.rs?ref=f0ebc1041042b5246bd0f7539c52a52a84687770", "patch": "@@ -712,16 +712,24 @@ pub fn non_durable_rename(src: &Path, dst: &Path) -> std::io::Result<()> {\n     std::fs::rename(src, dst)\n }\n \n-// Note: Also used by librustdoc, see PR #43348. Consider moving this struct elsewhere.\n-//\n-// FIXME: Currently the `everybody_loops` transformation is not applied to:\n-//  * `const fn`, due to issue #43636 that `loop` is not supported for const evaluation. We are\n-//    waiting for miri to fix that.\n-//  * `impl Trait`, due to issue #43869 that functions returning impl Trait cannot be diverging.\n-//    Solving this may require `!` to implement every trait, which relies on the an even more\n-//    ambitious form of the closed RFC #1637. See also [#34511].\n-//\n-// [#34511]: https://github.com/rust-lang/rust/issues/34511#issuecomment-322340401\n+/// Replaces function bodies with `loop {}` (an infinite loop). This gets rid of\n+/// all semantic errors in the body while still satisfying the return type,\n+/// except in certain cases, see below for more.\n+///\n+/// This pass is known as `everybody_loops`. Very punny.\n+///\n+/// As of March 2021, `everybody_loops` is only used for the\n+/// `-Z unpretty=everybody_loops` debugging option.\n+///\n+/// FIXME: Currently the `everybody_loops` transformation is not applied to:\n+///  * `const fn`; support could be added, but hasn't. Originally `const fn`\n+///    was skipped due to issue #43636 that `loop` was not supported for\n+///    const evaluation.\n+///  * `impl Trait`, due to issue #43869 that functions returning impl Trait cannot be diverging.\n+///    Solving this may require `!` to implement every trait, which relies on the an even more\n+///    ambitious form of the closed RFC #1637. See also [#34511].\n+///\n+/// [#34511]: https://github.com/rust-lang/rust/issues/34511#issuecomment-322340401\n pub struct ReplaceBodyWithLoop<'a, 'b> {\n     within_static_or_const: bool,\n     nested_blocks: Option<Vec<ast::Block>>,"}]}