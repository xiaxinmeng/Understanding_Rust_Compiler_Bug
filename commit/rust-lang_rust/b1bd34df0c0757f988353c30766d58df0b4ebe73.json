{"sha": "b1bd34df0c0757f988353c30766d58df0b4ebe73", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxYmQzNGRmMGMwNzU3Zjk4ODM1M2MzMDc2NmQ1OGRmMGI0ZWJlNzM=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-08-10T09:57:20Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-09-19T08:36:36Z"}, "message": "`turn_into_const` is infallible", "tree": {"sha": "56218a31425079b4c21c303f09541c0fd557144f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56218a31425079b4c21c303f09541c0fd557144f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1bd34df0c0757f988353c30766d58df0b4ebe73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1bd34df0c0757f988353c30766d58df0b4ebe73", "html_url": "https://github.com/rust-lang/rust/commit/b1bd34df0c0757f988353c30766d58df0b4ebe73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1bd34df0c0757f988353c30766d58df0b4ebe73/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4397d66d428509ef6867bae78b13a33c828573d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4397d66d428509ef6867bae78b13a33c828573d0", "html_url": "https://github.com/rust-lang/rust/commit/4397d66d428509ef6867bae78b13a33c828573d0"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "e52b90dffdecd2bd2c845ab1252a7765e733840d", "filename": "compiler/rustc_mir/src/const_eval/eval_queries.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b1bd34df0c0757f988353c30766d58df0b4ebe73/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1bd34df0c0757f988353c30766d58df0b4ebe73/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs?ref=b1bd34df0c0757f988353c30766d58df0b4ebe73", "patch": "@@ -188,26 +188,22 @@ fn turn_into_const<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     constant: RawConst<'tcx>,\n     key: ty::ParamEnvAnd<'tcx, GlobalId<'tcx>>,\n-) -> ::rustc_middle::mir::interpret::ConstEvalResult<'tcx> {\n+) -> ConstValue<'tcx> {\n     let cid = key.value;\n     let def_id = cid.instance.def.def_id();\n     let is_static = tcx.is_static(def_id);\n     let ecx = mk_eval_cx(tcx, tcx.def_span(key.value.instance.def_id()), key.param_env, is_static);\n \n-    let mplace = ecx.raw_const_to_mplace(constant).map_err(|error| {\n-        // FIXME: Can the above ever error and not be a compiler bug or can we just ICE here?\n-        let err = ConstEvalErr::new(&ecx, error, None);\n-        err.struct_error(ecx.tcx, \"it is undefined behavior to use this value\", |mut diag| {\n-            diag.note(note_on_undefined_behavior_error());\n-            diag.emit();\n-        })\n-    })?;\n+    let mplace = ecx.raw_const_to_mplace(constant).expect(\n+        \"can only fail if layout computation failed, \\\n+        which should have given a good error before ever invoking this function\",\n+    );\n     assert!(\n         !is_static || cid.promoted.is_some(),\n         \"the const eval query should not be used for statics, use `const_eval_raw` instead\"\n     );\n     // Turn this into a proper constant.\n-    Ok(op_to_const(&ecx, mplace.into()))\n+    op_to_const(&ecx, mplace.into())\n }\n \n pub fn const_eval_validated_provider<'tcx>(\n@@ -241,7 +237,7 @@ pub fn const_eval_validated_provider<'tcx>(\n         });\n     }\n \n-    tcx.const_eval_raw(key).and_then(|val| turn_into_const(tcx, val, key))\n+    tcx.const_eval_raw(key).map(|val| turn_into_const(tcx, val, key))\n }\n \n pub fn const_eval_raw_provider<'tcx>("}]}