{"sha": "6864546049d8f41b0521ee7dc5dedac4850f6c88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4NjQ1NDYwNDlkOGY0MWIwNTIxZWU3ZGM1ZGVkYWM0ODUwZjZjODg=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-07-08T23:12:59Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-07-09T21:39:46Z"}, "message": "Add a help to use `in_band_lifetimes` in nightly", "tree": {"sha": "902d3dc5b48d25ca35a323327d24c5a2dc589d5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/902d3dc5b48d25ca35a323327d24c5a2dc589d5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6864546049d8f41b0521ee7dc5dedac4850f6c88", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXmatGLoofN5+9u4rsJhshcDi2qEFAl8HjqIACgkQsJhshcDi\n2qFm5g/9G/Mv+VFYZtfX8qI/zD+K99sWp993pNvvxzQi7rH9OaWCGreLOH+cD60+\nN3ZxQKE6cpHN8pRangqGLDKhBnfoinuUWu55g4auicjSQlequ+W1iFKhrZ6/uZrp\nVWVCNTQ3y2+u20F5Gx7S4zCOeIdxE7AxAseH/isELbnfH/74RB60PCiCROSWc/mW\njT2CRV2+OHtAVaJeIKsLqnxL6vo0qF8G93Ek9wDjEW9pBzfAc0+kR9nN84L8pESn\nemHrIPofw/9H6IASxKylXz2WteQrdttKGOw5eZZzlz9qkNECyYTRL0WMeYX6gHzF\n3ghajjeEnEojpqqZy3Ph6nw6U/EsQpF09sFGOJjd7KjTLuGsQwRLE2WcMo6u7pnB\ngsGvcSeiV0ri3EqQ3YWZ2Fr+86W8JaIiRWSYIXV4rl4azTULjxTqVPJgTjIO4vWl\n/XGkPW0P34T9098xfUs5p0zqGjZeWM8+bbUkickcOuLrOds/kixDtAiERmx7Qs4J\nJ5fbix49iBnyDqTDmugxjRw9KlCIMkPlb/jNhnohq2i0VqnVObrvYAp3C0NloRZa\no0PJqRBM8irGuWI66IwWIvL0MStq7y8CKguWTuP43x3TXTFQnHJ6EEg2xpLuVdk5\n26JmCgJWjYf+TFnJBBF9KqmLztLX1pfeXWrdKPIgyutlzuPpCIY=\n=lqRj\n-----END PGP SIGNATURE-----", "payload": "tree 902d3dc5b48d25ca35a323327d24c5a2dc589d5a\nparent 5db778affee7c6600c8e7a177c48282dab3f6292\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1594249979 +0900\ncommitter Yuki Okushi <huyuumi.dev@gmail.com> 1594330786 +0900\n\nAdd a help to use `in_band_lifetimes` in nightly\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6864546049d8f41b0521ee7dc5dedac4850f6c88", "html_url": "https://github.com/rust-lang/rust/commit/6864546049d8f41b0521ee7dc5dedac4850f6c88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6864546049d8f41b0521ee7dc5dedac4850f6c88/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5db778affee7c6600c8e7a177c48282dab3f6292", "url": "https://api.github.com/repos/rust-lang/rust/commits/5db778affee7c6600c8e7a177c48282dab3f6292", "html_url": "https://github.com/rust-lang/rust/commit/5db778affee7c6600c8e7a177c48282dab3f6292"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "bc97341243f278c1ba27828e82f2de0f58f50fa4", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=6864546049d8f41b0521ee7dc5dedac4850f6c88", "patch": "@@ -1044,6 +1044,7 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n             lifetime_ref\n         );\n         err.span_label(lifetime_ref.span, \"undeclared lifetime\");\n+        let mut suggests_in_band = false;\n         for missing in &self.missing_named_lifetime_spots {\n             match missing {\n                 MissingLifetimeSpot::Generics(generics) => {\n@@ -1057,6 +1058,7 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n                         }) {\n                         (param.span.shrink_to_lo(), format!(\"{}, \", lifetime_ref))\n                     } else {\n+                        suggests_in_band = true;\n                         (generics.span, format!(\"<{}>\", lifetime_ref))\n                     };\n                     err.span_suggestion(\n@@ -1084,6 +1086,15 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n                 }\n             }\n         }\n+        if nightly_options::is_nightly_build()\n+            && !self.tcx.features().in_band_lifetimes\n+            && suggests_in_band\n+        {\n+            err.help(\n+                \"if you want to use in-band lifetime bindings, \\\n+                    add `#![feature(in_band_lifetimes)]` to the crate attributes\",\n+            );\n+        }\n         err.emit();\n     }\n "}, {"sha": "f37e28d072db4c2300ab9af4776046bac3b1d8fb", "filename": "src/test/ui/error-codes/E0261.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Ferror-codes%2FE0261.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Ferror-codes%2FE0261.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0261.stderr?ref=6864546049d8f41b0521ee7dc5dedac4850f6c88", "patch": "@@ -5,6 +5,8 @@ LL | fn foo(x: &'a str) { }\n    |       -    ^^ undeclared lifetime\n    |       |\n    |       help: consider introducing lifetime `'a` here: `<'a>`\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/E0261.rs:5:9\n@@ -13,6 +15,8 @@ LL | struct Foo {\n    |           - help: consider introducing lifetime `'a` here: `<'a>`\n LL |     x: &'a str,\n    |         ^^ undeclared lifetime\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error: aborting due to 2 previous errors\n "}, {"sha": "71a41c61f0dc72ec3482ede6b8fe4df00f7b7cd0", "filename": "src/test/ui/feature-gates/feature-gate-in_band_lifetimes.stderr", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-in_band_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-in_band_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-in_band_lifetimes.stderr?ref=6864546049d8f41b0521ee7dc5dedac4850f6c88", "patch": "@@ -5,6 +5,8 @@ LL | fn foo(x: &'x u8) -> &'x u8 { x }\n    |       -    ^^ undeclared lifetime\n    |       |\n    |       help: consider introducing lifetime `'x` here: `<'x>`\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'x`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:3:23\n@@ -13,6 +15,8 @@ LL | fn foo(x: &'x u8) -> &'x u8 { x }\n    |       -               ^^ undeclared lifetime\n    |       |\n    |       help: consider introducing lifetime `'x` here: `<'x>`\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:15:12\n@@ -28,6 +32,7 @@ error[E0261]: use of undeclared lifetime name `'b`\n LL |     fn inner_2(&self) -> &'b u8 {\n    |                           ^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'b` here\n    |\n LL | impl<'b, 'a> X<'b> {\n@@ -44,13 +49,16 @@ LL | impl X<'b> {\n    |     -  ^^ undeclared lifetime\n    |     |\n    |     help: consider introducing lifetime `'b` here: `<'b>`\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:25:27\n    |\n LL |     fn inner_3(&self) -> &'b u8 {\n    |                           ^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'b` here\n    |\n LL | impl<'b> X<'b> {\n@@ -67,13 +75,16 @@ LL | impl Y<&'a u8> {\n    |     -   ^^ undeclared lifetime\n    |     |\n    |     help: consider introducing lifetime `'a` here: `<'a>`\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:35:25\n    |\n LL |     fn inner(&self) -> &'a u8 {\n    |                         ^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'a` here\n    |\n LL | impl<'a> Y<&'a u8> {\n@@ -89,6 +100,7 @@ error[E0261]: use of undeclared lifetime name `'b`\n LL |     fn any_lifetime() -> &'b u8;\n    |                           ^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'b` here\n    |\n LL | trait MyTrait<'b, 'a> {\n@@ -104,6 +116,7 @@ error[E0261]: use of undeclared lifetime name `'b`\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8;\n    |                           ^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'b` here\n    |\n LL | trait MyTrait<'b, 'a> {\n@@ -119,6 +132,7 @@ error[E0261]: use of undeclared lifetime name `'b`\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8;\n    |                                        ^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'b` here\n    |\n LL | trait MyTrait<'b, 'a> {\n@@ -135,6 +149,8 @@ LL | impl MyTrait<'a> for Y<&'a u8> {\n    |     -        ^^ undeclared lifetime\n    |     |\n    |     help: consider introducing lifetime `'a` here: `<'a>`\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:50:25\n@@ -143,13 +159,16 @@ LL | impl MyTrait<'a> for Y<&'a u8> {\n    |     -                   ^^ undeclared lifetime\n    |     |\n    |     help: consider introducing lifetime `'a` here: `<'a>`\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/feature-gate-in_band_lifetimes.rs:53:31\n    |\n LL |     fn my_lifetime(&self) -> &'a u8 { self.0 }\n    |                               ^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'a` here\n    |\n LL | impl<'a> MyTrait<'a> for Y<&'a u8> {\n@@ -165,6 +184,7 @@ error[E0261]: use of undeclared lifetime name `'b`\n LL |     fn any_lifetime() -> &'b u8 { &0 }\n    |                           ^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'b` here\n    |\n LL | impl<'b> MyTrait<'a> for Y<&'a u8> {\n@@ -180,6 +200,7 @@ error[E0261]: use of undeclared lifetime name `'b`\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8 { &*self.0 }\n    |                           ^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'b` here\n    |\n LL | impl<'b> MyTrait<'a> for Y<&'a u8> {\n@@ -195,6 +216,7 @@ error[E0261]: use of undeclared lifetime name `'b`\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8 { &*self.0 }\n    |                                        ^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'b` here\n    |\n LL | impl<'b> MyTrait<'a> for Y<&'a u8> {"}, {"sha": "0e0fcebd0427ce4f4acf519b301fcc05fc2313b8", "filename": "src/test/ui/generic-associated-types/generic_associated_type_undeclared_lifetimes.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgeneric_associated_type_undeclared_lifetimes.stderr?ref=6864546049d8f41b0521ee7dc5dedac4850f6c88", "patch": "@@ -4,6 +4,7 @@ error[E0261]: use of undeclared lifetime name `'b`\n LL |         + Deref<Target = Self::Item<'b>>;\n    |                                     ^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'b` here\n    |\n LL | trait Iterable<'b> {\n@@ -19,6 +20,7 @@ error[E0261]: use of undeclared lifetime name `'undeclared`\n LL |     fn iter<'a>(&'a self) -> Self::Iter<'undeclared>;\n    |                                         ^^^^^^^^^^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'undeclared` here\n    |\n LL | trait Iterable<'undeclared> {"}, {"sha": "ed8da3dcddf99c68ab1b2f38c6f6aa8bf8c63536", "filename": "src/test/ui/methods/method-call-lifetime-args-unresolved.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-unresolved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-unresolved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-unresolved.stderr?ref=6864546049d8f41b0521ee7dc5dedac4850f6c88", "patch": "@@ -5,6 +5,8 @@ LL | fn main() {\n    |        - help: consider introducing lifetime `'a` here: `<'a>`\n LL |     0.clone::<'a>();\n    |               ^^ undeclared lifetime\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error: aborting due to previous error\n "}, {"sha": "c20612346dce18308fe5124ca0148892fbffaa96", "filename": "src/test/ui/regions/regions-in-enums.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Fregions%2Fregions-in-enums.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Fregions%2Fregions-in-enums.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-in-enums.stderr?ref=6864546049d8f41b0521ee7dc5dedac4850f6c88", "patch": "@@ -5,6 +5,8 @@ LL | enum No0 {\n    |         - help: consider introducing lifetime `'foo` here: `<'foo>`\n LL |     X5(&'foo usize)\n    |         ^^^^ undeclared lifetime\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-in-enums.rs:17:9\n@@ -13,6 +15,8 @@ LL | enum No1 {\n    |         - help: consider introducing lifetime `'a` here: `<'a>`\n LL |     X6(&'a usize)\n    |         ^^ undeclared lifetime\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error: aborting due to 2 previous errors\n "}, {"sha": "e65eb6f40b8ff176a27882d4fc9794d1ef6e3ec6", "filename": "src/test/ui/regions/regions-in-structs.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Fregions%2Fregions-in-structs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Fregions%2Fregions-in-structs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-in-structs.stderr?ref=6864546049d8f41b0521ee7dc5dedac4850f6c88", "patch": "@@ -5,6 +5,8 @@ LL | struct StructDecl {\n    |                  - help: consider introducing lifetime `'a` here: `<'a>`\n LL |     a: &'a isize,\n    |         ^^ undeclared lifetime\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-in-structs.rs:11:9\n@@ -14,6 +16,8 @@ LL | struct StructDecl {\n LL |     a: &'a isize,\n LL |     b: &'a isize,\n    |         ^^ undeclared lifetime\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error: aborting due to 2 previous errors\n "}, {"sha": "abcc68a02934875d4ed35d82516459e101e24a5b", "filename": "src/test/ui/regions/regions-name-undeclared.stderr", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Fregions%2Fregions-name-undeclared.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Fregions%2Fregions-name-undeclared.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-name-undeclared.stderr?ref=6864546049d8f41b0521ee7dc5dedac4850f6c88", "patch": "@@ -4,6 +4,7 @@ error[E0261]: use of undeclared lifetime name `'b`\n LL |     fn m4(&self, arg: &'b isize) { }\n    |                        ^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'b` here\n    |\n LL | impl<'b, 'a> Foo<'a> {\n@@ -19,6 +20,7 @@ error[E0261]: use of undeclared lifetime name `'b`\n LL |     fn m5(&'b self) { }\n    |            ^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'b` here\n    |\n LL | impl<'b, 'a> Foo<'a> {\n@@ -34,6 +36,7 @@ error[E0261]: use of undeclared lifetime name `'b`\n LL |     fn m6(&self, arg: Foo<'b>) { }\n    |                           ^^ undeclared lifetime\n    |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'b` here\n    |\n LL | impl<'b, 'a> Foo<'a> {\n@@ -50,6 +53,8 @@ LL |     type X = Option<&'a isize>;\n    |           -          ^^ undeclared lifetime\n    |           |\n    |           help: consider introducing lifetime `'a` here: `<'a>`\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-name-undeclared.rs:27:13\n@@ -58,6 +63,8 @@ LL |     enum E {\n    |           - help: consider introducing lifetime `'a` here: `<'a>`\n LL |         E1(&'a isize)\n    |             ^^ undeclared lifetime\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-name-undeclared.rs:30:13\n@@ -66,6 +73,8 @@ LL |     struct S {\n    |             - help: consider introducing lifetime `'a` here: `<'a>`\n LL |         f: &'a isize\n    |             ^^ undeclared lifetime\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-name-undeclared.rs:32:14\n@@ -74,6 +83,8 @@ LL |     fn f(a: &'a isize) { }\n    |         -    ^^ undeclared lifetime\n    |         |\n    |         help: consider introducing lifetime `'a` here: `<'a>`\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-name-undeclared.rs:40:17\n@@ -82,6 +93,8 @@ LL | fn fn_types(a: &'a isize,\n    |            -    ^^ undeclared lifetime\n    |            |\n    |            help: consider introducing lifetime `'a` here: `<'a>`\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/regions-name-undeclared.rs:42:36\n@@ -90,6 +103,7 @@ LL | ...                   &'b isize,\n    |                        ^^ undeclared lifetime\n    |\n    = note: for more information on higher-ranked polymorphism, visit https://doc.rust-lang.org/nomicon/hrtb.html\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'b` here\n    |\n LL | fn fn_types<'b>(a: &'a isize,\n@@ -106,6 +120,7 @@ LL | ...                   &'b isize)>,\n    |                        ^^ undeclared lifetime\n    |\n    = note: for more information on higher-ranked polymorphism, visit https://doc.rust-lang.org/nomicon/hrtb.html\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n help: consider introducing lifetime `'b` here\n    |\n LL | fn fn_types<'b>(a: &'a isize,\n@@ -123,6 +138,8 @@ LL | fn fn_types(a: &'a isize,\n ...\n LL |             c: &'a isize)\n    |                 ^^ undeclared lifetime\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error: aborting due to 11 previous errors\n "}, {"sha": "9dff312df48e942347f6ddad5baf791ec223d7b2", "filename": "src/test/ui/regions/regions-undeclared.stderr", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Fregions%2Fregions-undeclared.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Fregions%2Fregions-undeclared.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-undeclared.stderr?ref=6864546049d8f41b0521ee7dc5dedac4850f6c88", "patch": "@@ -11,6 +11,8 @@ LL | enum EnumDecl {\n    |              - help: consider introducing lifetime `'a` here: `<'a>`\n LL |     Foo(&'a isize),\n    |          ^^ undeclared lifetime\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-undeclared.rs:5:10\n@@ -20,6 +22,8 @@ LL | enum EnumDecl {\n LL |     Foo(&'a isize),\n LL |     Bar(&'a isize),\n    |          ^^ undeclared lifetime\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-undeclared.rs:8:15\n@@ -28,6 +32,8 @@ LL | fn fnDecl(x: &'a isize,\n    |          -    ^^ undeclared lifetime\n    |          |\n    |          help: consider introducing lifetime `'a` here: `<'a>`\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'a`\n   --> $DIR/regions-undeclared.rs:9:15\n@@ -36,6 +42,8 @@ LL | fn fnDecl(x: &'a isize,\n    |          - help: consider introducing lifetime `'a` here: `<'a>`\n LL |           y: &'a isize)\n    |               ^^ undeclared lifetime\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error: aborting due to 5 previous errors\n "}, {"sha": "22b2d264516a240fb0ae443fef896836bac2c36e", "filename": "src/test/ui/where-clauses/where-lifetime-resolution.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Fwhere-clauses%2Fwhere-lifetime-resolution.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6864546049d8f41b0521ee7dc5dedac4850f6c88/src%2Ftest%2Fui%2Fwhere-clauses%2Fwhere-lifetime-resolution.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwhere-clauses%2Fwhere-lifetime-resolution.stderr?ref=6864546049d8f41b0521ee7dc5dedac4850f6c88", "patch": "@@ -6,6 +6,8 @@ LL | fn f() where\n LL |     for<'a> dyn Trait1<'a>: Trait1<'a>, // OK\n LL |     (dyn for<'a> Trait1<'a>): Trait1<'a>,\n    |                                      ^^ undeclared lifetime\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error[E0261]: use of undeclared lifetime name `'b`\n   --> $DIR/where-lifetime-resolution.rs:8:52\n@@ -15,6 +17,8 @@ LL | fn f() where\n ...\n LL |     for<'a> dyn for<'b> Trait2<'a, 'b>: Trait2<'a, 'b>,\n    |                                                    ^^ undeclared lifetime\n+   |\n+   = help: if you want to use in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n \n error: aborting due to 2 previous errors\n "}]}