{"sha": "e1a9626bb3202568e97bd580a13c1bf61ca4d6e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYTk2MjZiYjMyMDI1NjhlOTdiZDU4MGExM2MxYmY2MWNhNGQ2ZTU=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-02-07T14:17:05Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-03-14T21:52:28Z"}, "message": "Update item functions", "tree": {"sha": "45539ed3e268b5b1892ee6eb1d680b8745069546", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45539ed3e268b5b1892ee6eb1d680b8745069546"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1a9626bb3202568e97bd580a13c1bf61ca4d6e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1a9626bb3202568e97bd580a13c1bf61ca4d6e5", "html_url": "https://github.com/rust-lang/rust/commit/e1a9626bb3202568e97bd580a13c1bf61ca4d6e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1a9626bb3202568e97bd580a13c1bf61ca4d6e5/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "518c78fbd30849b379e25c54584c6d8541d33eb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/518c78fbd30849b379e25c54584c6d8541d33eb1", "html_url": "https://github.com/rust-lang/rust/commit/518c78fbd30849b379e25c54584c6d8541d33eb1"}], "stats": {"total": 27, "additions": 12, "deletions": 15}, "files": [{"sha": "c5499e7fe1793fd7027a772b6c090269f1e92717", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e1a9626bb3202568e97bd580a13c1bf61ca4d6e5/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a9626bb3202568e97bd580a13c1bf61ca4d6e5/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=e1a9626bb3202568e97bd580a13c1bf61ca4d6e5", "patch": "@@ -404,27 +404,24 @@ impl<'hir> Map<'hir> {\n     }\n \n     pub fn item(&self, id: HirId) -> &'hir Item<'hir> {\n-        self.read(id);\n-\n-        // N.B., intentionally bypass `self.krate()` so that we\n-        // do not trigger a read of the whole krate here\n-        self.krate.item(id)\n+        match self.find(id).unwrap() {\n+            Node::Item(item) => item,\n+            _ => bug!(),\n+        }\n     }\n \n     pub fn trait_item(&self, id: TraitItemId) -> &'hir TraitItem<'hir> {\n-        self.read(id.hir_id);\n-\n-        // N.B., intentionally bypass `self.krate()` so that we\n-        // do not trigger a read of the whole krate here\n-        self.krate.trait_item(id)\n+        match self.find(id.hir_id).unwrap() {\n+            Node::TraitItem(item) => item,\n+            _ => bug!(),\n+        }\n     }\n \n     pub fn impl_item(&self, id: ImplItemId) -> &'hir ImplItem<'hir> {\n-        self.read(id.hir_id);\n-\n-        // N.B., intentionally bypass `self.krate()` so that we\n-        // do not trigger a read of the whole krate here\n-        self.krate.impl_item(id)\n+        match self.find(id.hir_id).unwrap() {\n+            Node::ImplItem(item) => item,\n+            _ => bug!(),\n+        }\n     }\n \n     pub fn body(&self, id: BodyId) -> &'hir Body<'hir> {"}]}