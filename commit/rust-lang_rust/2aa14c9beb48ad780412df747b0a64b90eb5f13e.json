{"sha": "2aa14c9beb48ad780412df747b0a64b90eb5f13e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhYTE0YzliZWI0OGFkNzgwNDEyZGY3NDdiMGE2NGI5MGViNWYxM2U=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-03-01T16:36:14Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-03-04T08:11:07Z"}, "message": "Add restrictive pat use in full binded struct", "tree": {"sha": "0ddab660877766400529a4b6f6515c4b6656bdc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ddab660877766400529a4b6f6515c4b6656bdc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2aa14c9beb48ad780412df747b0a64b90eb5f13e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2aa14c9beb48ad780412df747b0a64b90eb5f13e", "html_url": "https://github.com/rust-lang/rust/commit/2aa14c9beb48ad780412df747b0a64b90eb5f13e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2aa14c9beb48ad780412df747b0a64b90eb5f13e/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c93f04c90ba36bca069aebe1bf508d29aa52b94", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c93f04c90ba36bca069aebe1bf508d29aa52b94", "html_url": "https://github.com/rust-lang/rust/commit/9c93f04c90ba36bca069aebe1bf508d29aa52b94"}], "stats": {"total": 130, "additions": 125, "deletions": 5}, "files": [{"sha": "4d8e24943897073e0b9b36ba065259e18b49cc91", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2aa14c9beb48ad780412df747b0a64b90eb5f13e/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/2aa14c9beb48ad780412df747b0a64b90eb5f13e/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=2aa14c9beb48ad780412df747b0a64b90eb5f13e", "patch": "@@ -1321,6 +1321,7 @@ Released 2018-09-13\n [`ref_in_deref`]: https://rust-lang.github.io/rust-clippy/master/index.html#ref_in_deref\n [`regex_macro`]: https://rust-lang.github.io/rust-clippy/master/index.html#regex_macro\n [`replace_consts`]: https://rust-lang.github.io/rust-clippy/master/index.html#replace_consts\n+[`rest_pat_in_fully_bound_structs`]: https://rust-lang.github.io/rust-clippy/master/index.html#rest_pat_in_fully_bound_structs\n [`result_expect_used`]: https://rust-lang.github.io/rust-clippy/master/index.html#result_expect_used\n [`result_map_unit_fn`]: https://rust-lang.github.io/rust-clippy/master/index.html#result_map_unit_fn\n [`result_map_unwrap_or_else`]: https://rust-lang.github.io/rust-clippy/master/index.html#result_map_unwrap_or_else"}, {"sha": "6915b1bde025e37344052ff9b9b3394e92b612e8", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2aa14c9beb48ad780412df747b0a64b90eb5f13e/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/2aa14c9beb48ad780412df747b0a64b90eb5f13e/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=2aa14c9beb48ad780412df747b0a64b90eb5f13e", "patch": "@@ -5,7 +5,7 @@\n \n A collection of lints to catch common mistakes and improve your [Rust](https://github.com/rust-lang/rust) code.\n \n-[There are 358 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n+[There are 359 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n \n We have a bunch of lint categories to allow you to choose how much Clippy is supposed to ~~annoy~~ help you:\n "}, {"sha": "327cc56cafa526584d6bb9c73ce55b646b0b094a", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2aa14c9beb48ad780412df747b0a64b90eb5f13e/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aa14c9beb48ad780412df747b0a64b90eb5f13e/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=2aa14c9beb48ad780412df747b0a64b90eb5f13e", "patch": "@@ -610,6 +610,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &matches::MATCH_REF_PATS,\n         &matches::MATCH_SINGLE_BINDING,\n         &matches::MATCH_WILD_ERR_ARM,\n+        &matches::REST_PAT_IN_FULLY_BOUND_STRUCTS,\n         &matches::SINGLE_MATCH,\n         &matches::SINGLE_MATCH_ELSE,\n         &matches::WILDCARD_ENUM_MATCH_ARM,\n@@ -1026,6 +1027,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&integer_division::INTEGER_DIVISION),\n         LintId::of(&let_underscore::LET_UNDERSCORE_MUST_USE),\n         LintId::of(&literal_representation::DECIMAL_LITERAL_REPRESENTATION),\n+        LintId::of(&matches::REST_PAT_IN_FULLY_BOUND_STRUCTS),\n         LintId::of(&matches::WILDCARD_ENUM_MATCH_ARM),\n         LintId::of(&mem_forget::MEM_FORGET),\n         LintId::of(&methods::CLONE_ON_REF_PTR),"}, {"sha": "9668c5d83499117f31fcf43bc76a305105660325", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 56, "deletions": 3, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/2aa14c9beb48ad780412df747b0a64b90eb5f13e/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aa14c9beb48ad780412df747b0a64b90eb5f13e/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=2aa14c9beb48ad780412df747b0a64b90eb5f13e", "patch": "@@ -14,8 +14,8 @@ use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::def::CtorKind;\n use rustc_hir::{\n-    print, Arm, BindingAnnotation, Block, BorrowKind, Expr, ExprKind, Local, MatchSource, Mutability, PatKind, QPath,\n-    RangeEnd,\n+    print, Arm, BindingAnnotation, Block, BorrowKind, Expr, ExprKind, Local, MatchSource, Mutability, Pat, PatKind,\n+    QPath, RangeEnd,\n };\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n@@ -311,6 +311,36 @@ declare_clippy_lint! {\n     \"a match with a single binding instead of using `let` statement\"\n }\n \n+declare_clippy_lint! {\n+    /// **What it does:** Checks for unnecessary '..' pattern binding on struct when all fields are explicitly matched.\n+    ///\n+    /// **Why is this bad?** Correctness and readability. It's like having a wildcard pattern after\n+    /// matching all enum variants explicitly.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    /// ```rust\n+    /// # struct A { a: i32 }\n+    /// let a = A { a: 5 };\n+    ///\n+    /// // Bad\n+    /// match a {\n+    ///     A { a: 5, .. } => {},\n+    ///     _ => {},\n+    /// }\n+    ///\n+    /// // Good\n+    /// match a {\n+    ///     A { a: 5 } => {},\n+    ///     _ => {},\n+    /// }\n+    /// ```\n+    pub REST_PAT_IN_FULLY_BOUND_STRUCTS,\n+    restriction,\n+    \"a match on a struct that binds all fields but still uses the wildcard pattern\"\n+}\n+\n #[derive(Default)]\n pub struct Matches {\n     infallible_destructuring_match_linted: bool,\n@@ -327,7 +357,8 @@ impl_lint_pass!(Matches => [\n     WILDCARD_ENUM_MATCH_ARM,\n     WILDCARD_IN_OR_PATTERNS,\n     MATCH_SINGLE_BINDING,\n-    INFALLIBLE_DESTRUCTURING_MATCH\n+    INFALLIBLE_DESTRUCTURING_MATCH,\n+    REST_PAT_IN_FULLY_BOUND_STRUCTS\n ]);\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Matches {\n@@ -388,6 +419,28 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Matches {\n             }\n         }\n     }\n+\n+    fn check_pat(&mut self, cx: &LateContext<'a, 'tcx>, pat: &'tcx Pat<'_>) {\n+        if_chain! {\n+            if let PatKind::Struct(ref qpath, fields, true) = pat.kind;\n+            if let QPath::Resolved(_, ref path) = qpath;\n+            if let Some(def_id) = path.res.opt_def_id();\n+            let ty = cx.tcx.type_of(def_id);\n+            if let ty::Adt(def, _) = ty.kind;\n+            if def.is_struct() || def.is_union();\n+            if fields.len() == def.non_enum_variant().fields.len();\n+\n+            then {\n+                span_lint_and_help(\n+                    cx,\n+                    REST_PAT_IN_FULLY_BOUND_STRUCTS,\n+                    pat.span,\n+                    \"unnecessary use of `..` pattern in struct binding. All fields were already bound\",\n+                    \"consider removing `..` from this binding\",\n+                );\n+            }\n+        }\n+    }\n }\n \n #[rustfmt::skip]"}, {"sha": "2b93e4279f0dd7797b5a29d920b9d7489c47f126", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2aa14c9beb48ad780412df747b0a64b90eb5f13e/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aa14c9beb48ad780412df747b0a64b90eb5f13e/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=2aa14c9beb48ad780412df747b0a64b90eb5f13e", "patch": "@@ -6,7 +6,7 @@ pub use lint::Lint;\n pub use lint::LINT_LEVELS;\n \n // begin lint list, do not remove this comment, it\u2019s used in `update_lints`\n-pub const ALL_LINTS: [Lint; 358] = [\n+pub const ALL_LINTS: [Lint; 359] = [\n     Lint {\n         name: \"absurd_extreme_comparisons\",\n         group: \"correctness\",\n@@ -1785,6 +1785,13 @@ pub const ALL_LINTS: [Lint; 358] = [\n         deprecation: None,\n         module: \"replace_consts\",\n     },\n+    Lint {\n+        name: \"rest_pat_in_fully_bound_structs\",\n+        group: \"restriction\",\n+        desc: \"a match on a struct that binds all fields but still uses the wildcard pattern\",\n+        deprecation: None,\n+        module: \"matches\",\n+    },\n     Lint {\n         name: \"result_expect_used\",\n         group: \"restriction\","}, {"sha": "22e4d4edd783f6c1eeeb26f6a8eba797135f119f", "filename": "tests/ui/rest_pat_in_fully_bound_structs.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2aa14c9beb48ad780412df747b0a64b90eb5f13e/tests%2Fui%2Frest_pat_in_fully_bound_structs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aa14c9beb48ad780412df747b0a64b90eb5f13e/tests%2Fui%2Frest_pat_in_fully_bound_structs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frest_pat_in_fully_bound_structs.rs?ref=2aa14c9beb48ad780412df747b0a64b90eb5f13e", "patch": "@@ -0,0 +1,30 @@\n+#![warn(clippy::rest_pat_in_fully_bound_structs)]\n+\n+struct A {\n+    a: i32,\n+    b: i64,\n+    c: &'static str,\n+}\n+\n+fn main() {\n+    let a_struct = A { a: 5, b: 42, c: \"A\" };\n+\n+    match a_struct {\n+        A { a: 5, b: 42, c: \"\", .. } => {}, // Lint\n+        A { a: 0, b: 0, c: \"\", .. } => {},  // Lint\n+        _ => {},\n+    }\n+\n+    match a_struct {\n+        A { a: 5, b: 42, .. } => {},\n+        A { a: 0, b: 0, c: \"\", .. } => {}, // Lint\n+        _ => {},\n+    }\n+\n+    // No lint\n+    match a_struct {\n+        A { a: 5, .. } => {},\n+        A { a: 0, b: 0, .. } => {},\n+        _ => {},\n+    }\n+}"}, {"sha": "effa46b4b0fa388a30eaa4a071feebda63820465", "filename": "tests/ui/rest_pat_in_fully_bound_structs.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/2aa14c9beb48ad780412df747b0a64b90eb5f13e/tests%2Fui%2Frest_pat_in_fully_bound_structs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2aa14c9beb48ad780412df747b0a64b90eb5f13e/tests%2Fui%2Frest_pat_in_fully_bound_structs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frest_pat_in_fully_bound_structs.stderr?ref=2aa14c9beb48ad780412df747b0a64b90eb5f13e", "patch": "@@ -0,0 +1,27 @@\n+error: unnecessary use of `..` pattern in struct binding. All fields were already bound\n+  --> $DIR/rest_pat_in_fully_bound_structs.rs:13:9\n+   |\n+LL |         A { a: 5, b: 42, c: \"\", .. } => {}, // Lint\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::rest-pat-in-fully-bound-structs` implied by `-D warnings`\n+   = help: consider removing `..` from this binding\n+\n+error: unnecessary use of `..` pattern in struct binding. All fields were already bound\n+  --> $DIR/rest_pat_in_fully_bound_structs.rs:14:9\n+   |\n+LL |         A { a: 0, b: 0, c: \"\", .. } => {},  // Lint\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider removing `..` from this binding\n+\n+error: unnecessary use of `..` pattern in struct binding. All fields were already bound\n+  --> $DIR/rest_pat_in_fully_bound_structs.rs:20:9\n+   |\n+LL |         A { a: 0, b: 0, c: \"\", .. } => {}, // Lint\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider removing `..` from this binding\n+\n+error: aborting due to 3 previous errors\n+"}]}