{"sha": "5c023d68d8b54d651e1775a69e999503ae5b2b30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjMDIzZDY4ZDhiNTRkNjUxZTE3NzVhNjllOTk5NTAzYWU1YjJiMzA=", "commit": {"author": {"name": "Patryk Wychowaniec", "email": "wychowaniec.patryk@gmail.com", "date": "2019-10-27T15:43:42Z"}, "committer": {"name": "Patryk Wychowaniec", "email": "wychowaniec.patryk@gmail.com", "date": "2019-10-28T17:44:08Z"}, "message": "Improve pretty-printing for compound qualified paths.", "tree": {"sha": "0086a3142b742a8db84befb859b3f0e90dd8804d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0086a3142b742a8db84befb859b3f0e90dd8804d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c023d68d8b54d651e1775a69e999503ae5b2b30", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGWq/7God0ex1lPjR9iVH0HXgl2cFAl23KOoACgkQ9iVH0HXg\nl2cO6g//VSJ+CYixh7ALf3u2DkHRtdteAmstKA0HzM542Qwn9Du/upw92MSWbbCq\n9/NLlga9OQuqezN3LFdOxP7g3vzCY+dI/VS/gvyt+6+u/EMMqJRdQ7sh+hF0CCSC\nwIXNijLVNLH7G3FddaAigsR2RpqI0QCWqFPRIGtfAQNGjP+vQzdk9rtUiMkKwyRC\nkA0G1t6Gi2MdMIrgwXgjxBOXATByXMw3MvZiCU6tQGQivWJr0qBkTAL+m1usd5K3\n4Xj2Y7sn76RUPANs4y+HWlLAJEy3FCPKe9NaFJmt8BrbuoT3akE1ulwTGVZ1kWHt\nEg03xqvhNNuzI7fq8jHaoQiMwiss5K2fi/xfCtJLYNu8xL0Hzb9hmKZGeeioTneH\n9eWxpdH6PJ2rqRKBwImB6DPdqi7prOHc1YH/WzrhY/PrlSdn9bpxsf6cOCBaqJai\nnwQY+qEwSWoFxc0m8AT7oQIIb1RyChkMql3/0GStFwrST7e4XI2i5t5p9fpP5SnE\nwZPauypddK82Xv/JlZE6gF4GS+uObSzjnjI/NMntOBcqf+5r+9Tg+zlUCJZJiRsj\nuxpHqaUyd/Q4Vnah6J/FN0PIkZ6Ur7tSPfTSs+GJwh0xNJUES7rArFpq/kNDSOtG\nZc09YV5VqYvZYe3YQYJv9/rCMnPcuEqEmNV3GfK6qdIwzGxCzK0=\n=PXCi\n-----END PGP SIGNATURE-----", "payload": "tree 0086a3142b742a8db84befb859b3f0e90dd8804d\nparent e188e2db8471aba78c912ef77e222beceb2ea532\nauthor Patryk Wychowaniec <wychowaniec.patryk@gmail.com> 1572191022 +0100\ncommitter Patryk Wychowaniec <wychowaniec.patryk@gmail.com> 1572284648 +0100\n\nImprove pretty-printing for compound qualified paths.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c023d68d8b54d651e1775a69e999503ae5b2b30", "html_url": "https://github.com/rust-lang/rust/commit/5c023d68d8b54d651e1775a69e999503ae5b2b30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c023d68d8b54d651e1775a69e999503ae5b2b30/comments", "author": {"login": "Patryk27", "id": 3395477, "node_id": "MDQ6VXNlcjMzOTU0Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3395477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Patryk27", "html_url": "https://github.com/Patryk27", "followers_url": "https://api.github.com/users/Patryk27/followers", "following_url": "https://api.github.com/users/Patryk27/following{/other_user}", "gists_url": "https://api.github.com/users/Patryk27/gists{/gist_id}", "starred_url": "https://api.github.com/users/Patryk27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Patryk27/subscriptions", "organizations_url": "https://api.github.com/users/Patryk27/orgs", "repos_url": "https://api.github.com/users/Patryk27/repos", "events_url": "https://api.github.com/users/Patryk27/events{/privacy}", "received_events_url": "https://api.github.com/users/Patryk27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Patryk27", "id": 3395477, "node_id": "MDQ6VXNlcjMzOTU0Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3395477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Patryk27", "html_url": "https://github.com/Patryk27", "followers_url": "https://api.github.com/users/Patryk27/followers", "following_url": "https://api.github.com/users/Patryk27/following{/other_user}", "gists_url": "https://api.github.com/users/Patryk27/gists{/gist_id}", "starred_url": "https://api.github.com/users/Patryk27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Patryk27/subscriptions", "organizations_url": "https://api.github.com/users/Patryk27/orgs", "repos_url": "https://api.github.com/users/Patryk27/repos", "events_url": "https://api.github.com/users/Patryk27/events{/privacy}", "received_events_url": "https://api.github.com/users/Patryk27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e188e2db8471aba78c912ef77e222beceb2ea532", "url": "https://api.github.com/repos/rust-lang/rust/commits/e188e2db8471aba78c912ef77e222beceb2ea532", "html_url": "https://github.com/rust-lang/rust/commit/e188e2db8471aba78c912ef77e222beceb2ea532"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "64b355f6ec9d1b6693526181b691324037daa932", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5c023d68d8b54d651e1775a69e999503ae5b2b30/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c023d68d8b54d651e1775a69e999503ae5b2b30/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=5c023d68d8b54d651e1775a69e999503ae5b2b30", "patch": "@@ -1523,7 +1523,17 @@ impl<'a> State<'a> {\n                                         colons_before_params)\n             }\n             hir::QPath::TypeRelative(ref qself, ref item_segment) => {\n-                self.print_type(qself);\n+                // If we've got a compound-qualified-path, let's push an additional pair of angle\n+                // brackets, so that we pretty-print `<<A::B>::C>` as `<A::B>::C`, instead of just\n+                // `A::B::C` (since the latter could be ambiguous to the user)\n+                if let hir::TyKind::Path(hir::QPath::Resolved(None, _)) = &qself.kind {\n+                    self.print_type(qself);\n+                } else {\n+                    self.s.word(\"<\");\n+                    self.print_type(qself);\n+                    self.s.word(\">\");\n+                }\n+\n                 self.s.word(\"::\");\n                 self.print_ident(item_segment.ident);\n                 self.print_generic_args(item_segment.generic_args(),"}, {"sha": "b1b60b4b73fb9dbd6e0e8420b29fafb8b4ffbd42", "filename": "src/test/ui/qualified/qualified-path-params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c023d68d8b54d651e1775a69e999503ae5b2b30/src%2Ftest%2Fui%2Fqualified%2Fqualified-path-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c023d68d8b54d651e1775a69e999503ae5b2b30/src%2Ftest%2Fui%2Fqualified%2Fqualified-path-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fqualified%2Fqualified-path-params.rs?ref=5c023d68d8b54d651e1775a69e999503ae5b2b30", "patch": "@@ -18,7 +18,7 @@ impl S {\n fn main() {\n     match 10 {\n         <S as Tr>::A::f::<u8> => {}\n-    //~^ ERROR expected unit struct, unit variant or constant, found method `<S as Tr>::A::f<u8>`\n+    //~^ ERROR expected unit struct, unit variant or constant, found method `<<S as Tr>::A>::f<u8>`\n         0 ..= <S as Tr>::A::f::<u8> => {} //~ ERROR only char and numeric types are allowed in range\n     }\n }"}, {"sha": "92792f2e86a83a82ab421ef06d04939a5598122d", "filename": "src/test/ui/qualified/qualified-path-params.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c023d68d8b54d651e1775a69e999503ae5b2b30/src%2Ftest%2Fui%2Fqualified%2Fqualified-path-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c023d68d8b54d651e1775a69e999503ae5b2b30/src%2Ftest%2Fui%2Fqualified%2Fqualified-path-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fqualified%2Fqualified-path-params.stderr?ref=5c023d68d8b54d651e1775a69e999503ae5b2b30", "patch": "@@ -1,4 +1,4 @@\n-error[E0533]: expected unit struct, unit variant or constant, found method `<S as Tr>::A::f<u8>`\n+error[E0533]: expected unit struct, unit variant or constant, found method `<<S as Tr>::A>::f<u8>`\n   --> $DIR/qualified-path-params.rs:20:9\n    |\n LL |         <S as Tr>::A::f::<u8> => {}"}]}