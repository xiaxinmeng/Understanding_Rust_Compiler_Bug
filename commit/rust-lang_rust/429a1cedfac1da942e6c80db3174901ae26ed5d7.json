{"sha": "429a1cedfac1da942e6c80db3174901ae26ed5d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyOWExY2VkZmFjMWRhOTQyZTZjODBkYjMxNzQ5MDFhZTI2ZWQ1ZDc=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-08-12T10:22:56Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-08-13T14:55:16Z"}, "message": "merge `as_local_hir_id` with `local_def_id_to_hir_id`", "tree": {"sha": "b0046f6b743e4755dba636fe3c9299d616491115", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0046f6b743e4755dba636fe3c9299d616491115"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/429a1cedfac1da942e6c80db3174901ae26ed5d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/429a1cedfac1da942e6c80db3174901ae26ed5d7", "html_url": "https://github.com/rust-lang/rust/commit/429a1cedfac1da942e6c80db3174901ae26ed5d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/429a1cedfac1da942e6c80db3174901ae26ed5d7/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdc2f879f14a5dc59d63e9683ed48c608b3ebac0", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdc2f879f14a5dc59d63e9683ed48c608b3ebac0", "html_url": "https://github.com/rust-lang/rust/commit/fdc2f879f14a5dc59d63e9683ed48c608b3ebac0"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "58b0704294b566622dd6028c290066e5dd605f7b", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/429a1cedfac1da942e6c80db3174901ae26ed5d7/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/429a1cedfac1da942e6c80db3174901ae26ed5d7/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=429a1cedfac1da942e6c80db3174901ae26ed5d7", "patch": "@@ -224,7 +224,7 @@ fn check_hash_peq<'tcx>(\n                         mess,\n                         |diag| {\n                             if let Some(local_def_id) = impl_id.as_local() {\n-                                let hir_id = cx.tcx.hir().as_local_hir_id(local_def_id);\n+                                let hir_id = cx.tcx.hir().local_def_id_to_hir_id(local_def_id);\n                                 diag.span_note(\n                                     cx.tcx.hir().span(hir_id),\n                                     \"`PartialEq` implemented here\"\n@@ -278,7 +278,7 @@ fn check_ord_partial_ord<'tcx>(\n                         mess,\n                         |diag| {\n                             if let Some(local_def_id) = impl_id.as_local() {\n-                                let hir_id = cx.tcx.hir().as_local_hir_id(local_def_id);\n+                                let hir_id = cx.tcx.hir().local_def_id_to_hir_id(local_def_id);\n                                 diag.span_note(\n                                     cx.tcx.hir().span(hir_id),\n                                     \"`PartialOrd` implemented here\"\n@@ -341,7 +341,7 @@ fn check_unsafe_derive_deserialize<'tcx>(\n     ty: Ty<'tcx>,\n ) {\n     fn item_from_def_id<'tcx>(cx: &LateContext<'tcx>, def_id: DefId) -> &'tcx Item<'tcx> {\n-        let hir_id = cx.tcx.hir().as_local_hir_id(def_id.expect_local());\n+        let hir_id = cx.tcx.hir().local_def_id_to_hir_id(def_id.expect_local());\n         cx.tcx.hir().expect_item(hir_id)\n     }\n \n@@ -355,7 +355,7 @@ fn check_unsafe_derive_deserialize<'tcx>(\n         if match_path(&trait_ref.path, &paths::SERDE_DESERIALIZE);\n         if let ty::Adt(def, _) = ty.kind;\n         if let Some(local_def_id) = def.did.as_local();\n-        let adt_hir_id = cx.tcx.hir().as_local_hir_id(local_def_id);\n+        let adt_hir_id = cx.tcx.hir().local_def_id_to_hir_id(local_def_id);\n         if !is_allowed(cx, UNSAFE_DERIVE_DESERIALIZE, adt_hir_id);\n         if cx.tcx.inherent_impls(def.did)\n             .iter()"}, {"sha": "28d1322e94626c604cced668546593bb2193e02e", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/429a1cedfac1da942e6c80db3174901ae26ed5d7/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/429a1cedfac1da942e6c80db3174901ae26ed5d7/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=429a1cedfac1da942e6c80db3174901ae26ed5d7", "patch": "@@ -103,7 +103,7 @@ impl<'tcx> LateLintPass<'tcx> for NewWithoutDefault {\n                                         cx.tcx.for_each_impl(default_trait_id, |d| {\n                                             if let Some(ty_def) = cx.tcx.type_of(d).ty_adt_def() {\n                                                 if let Some(local_def_id) = ty_def.did.as_local() {\n-                                                    impls.insert(cx.tcx.hir().as_local_hir_id(local_def_id));\n+                                                    impls.insert(cx.tcx.hir().local_def_id_to_hir_id(local_def_id));\n                                                 }\n                                             }\n                                         });"}]}