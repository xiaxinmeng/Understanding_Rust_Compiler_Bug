{"sha": "41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxYzg5MmY1ZTE0MWE0YmQzNDI1MmVjNDZmM2I5ZGViYzNjZGFmZGQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-02-05T08:32:33Z"}, "committer": {"name": "Oliver 'ker' Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-02-09T15:53:42Z"}, "message": "make `MirMap` a struct instead of a type alias for `NodeMap`", "tree": {"sha": "1f8d0222b74e1600e89cbb0da35b7b119d75ae0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f8d0222b74e1600e89cbb0da35b7b119d75ae0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "html_url": "https://github.com/rust-lang/rust/commit/41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6630a0819553898c3fc0d060cc72a94d62ae1330", "url": "https://api.github.com/repos/rust-lang/rust/commits/6630a0819553898c3fc0d060cc72a94d62ae1330", "html_url": "https://github.com/rust-lang/rust/commit/6630a0819553898c3fc0d060cc72a94d62ae1330"}], "stats": {"total": 80, "additions": 50, "deletions": 30}, "files": [{"sha": "92cebb48b693a0cfbdc91d32131d1684b9d0621c", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "patch": "@@ -126,6 +126,7 @@ pub mod mir {\n     pub mod repr;\n     pub mod tcx;\n     pub mod visit;\n+    pub mod mir_map;\n }\n \n pub mod session;"}, {"sha": "1e21d6aabe97b74f0f13ab498b727d7672d7abdc", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "patch": "@@ -29,6 +29,7 @@ use middle::lang_items;\n use middle::ty::{self, Ty, VariantKind};\n use middle::def_id::{DefId, DefIndex};\n use mir::repr::Mir;\n+use mir::mir_map::MirMap;\n use session::Session;\n use session::search_paths::PathKind;\n use util::nodemap::{FnvHashMap, NodeMap, NodeSet};\n@@ -244,7 +245,7 @@ pub trait CrateStore<'tcx> : Any {\n                        item_symbols: &RefCell<NodeMap<String>>,\n                        link_meta: &LinkMeta,\n                        reachable: &NodeSet,\n-                       mir_map: &NodeMap<Mir<'tcx>>,\n+                       mir_map: &MirMap<'tcx>,\n                        krate: &hir::Crate) -> Vec<u8>;\n     fn metadata_encoding_version(&self) -> &[u8];\n }\n@@ -428,7 +429,7 @@ impl<'tcx> CrateStore<'tcx> for DummyCrateStore {\n                        item_symbols: &RefCell<NodeMap<String>>,\n                        link_meta: &LinkMeta,\n                        reachable: &NodeSet,\n-                       mir_map: &NodeMap<Mir<'tcx>>,\n+                       mir_map: &MirMap<'tcx>,\n                        krate: &hir::Crate) -> Vec<u8> { vec![] }\n     fn metadata_encoding_version(&self) -> &[u8] { unimplemented!() }\n }"}, {"sha": "4fc59676ee417e9648da14789aba23c4add51dec", "filename": "src/librustc/mir/mir_map.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc%2Fmir%2Fmir_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc%2Fmir%2Fmir_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmir_map.rs?ref=41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use util::nodemap::NodeMap;\n+use mir::repr::Mir;\n+\n+pub struct MirMap<'tcx> {\n+    pub map: NodeMap<Mir<'tcx>>,\n+}\n+"}, {"sha": "42a52e17e8a157f847a04fe558dca8aed3de8ac5", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "patch": "@@ -12,7 +12,7 @@ use rustc::dep_graph::DepGraph;\n use rustc::front;\n use rustc::front::map as hir_map;\n use rustc_mir as mir;\n-use rustc_mir::mir_map::MirMap;\n+use rustc::mir::mir_map::MirMap;\n use rustc::session::{Session, CompileResult, compile_result_from_err_count};\n use rustc::session::config::{self, Input, OutputFilenames, OutputType};\n use rustc::session::search_paths::PathKind;"}, {"sha": "06a2727ea28ae8c3229531995e586ab3709ceb95", "filename": "src/librustc_metadata/csearch.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_metadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_metadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcsearch.rs?ref=41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "patch": "@@ -23,6 +23,7 @@ use middle::def_id::{DefId, DefIndex};\n \n use rustc::front::map as hir_map;\n use rustc::mir::repr::Mir;\n+use rustc::mir::mir_map::MirMap;\n use rustc::util::nodemap::{FnvHashMap, NodeMap, NodeSet};\n \n use std::cell::RefCell;\n@@ -502,7 +503,7 @@ impl<'tcx> CrateStore<'tcx> for cstore::CStore {\n                        item_symbols: &RefCell<NodeMap<String>>,\n                        link_meta: &LinkMeta,\n                        reachable: &NodeSet,\n-                       mir_map: &NodeMap<Mir<'tcx>>,\n+                       mir_map: &MirMap<'tcx>,\n                        krate: &hir::Crate) -> Vec<u8>\n     {\n         let encode_inlined_item: encoder::EncodeInlinedItem ="}, {"sha": "50030ced0abb5740ccc8ac42fe8e8ad788122dd3", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "patch": "@@ -30,7 +30,7 @@ use middle::ty::{self, Ty};\n use rustc::back::svh::Svh;\n use rustc::front::map::{LinkedPath, PathElem, PathElems};\n use rustc::front::map as ast_map;\n-use rustc::mir::repr::Mir;\n+use rustc::mir::mir_map::MirMap;\n use rustc::session::config;\n use rustc::util::nodemap::{FnvHashMap, NodeMap, NodeSet};\n \n@@ -66,7 +66,7 @@ pub struct EncodeParams<'a, 'tcx: 'a> {\n     pub cstore: &'a cstore::CStore,\n     pub encode_inlined_item: EncodeInlinedItem<'a>,\n     pub reachable: &'a NodeSet,\n-    pub mir_map: &'a NodeMap<Mir<'tcx>>,\n+    pub mir_map: &'a MirMap<'tcx>,\n }\n \n pub struct EncodeContext<'a, 'tcx: 'a> {\n@@ -79,7 +79,7 @@ pub struct EncodeContext<'a, 'tcx: 'a> {\n     pub encode_inlined_item: RefCell<EncodeInlinedItem<'a>>,\n     pub type_abbrevs: tyencode::abbrev_map<'tcx>,\n     pub reachable: &'a NodeSet,\n-    pub mir_map: &'a NodeMap<Mir<'tcx>>,\n+    pub mir_map: &'a MirMap<'tcx>,\n }\n \n impl<'a, 'tcx> EncodeContext<'a,'tcx> {\n@@ -824,7 +824,7 @@ fn encode_inlined_item(ecx: &EncodeContext,\n }\n \n fn encode_mir(ecx: &EncodeContext, rbml_w: &mut Encoder, node_id: NodeId) {\n-    if let Some(mir) = ecx.mir_map.get(&node_id) {\n+    if let Some(mir) = ecx.mir_map.map.get(&node_id) {\n         rbml_w.start_tag(tag_mir as usize);\n         rbml_w.emit_opaque(|opaque_encoder| {\n             tls::enter_encoding_context(ecx, opaque_encoder, |_, opaque_encoder| {\n@@ -1447,7 +1447,7 @@ fn my_visit_expr(expr: &hir::Expr,\n \n             ecx.tcx.map.with_path(expr.id, |path| encode_path(rbml_w, path));\n \n-            assert!(ecx.mir_map.contains_key(&expr.id));\n+            assert!(ecx.mir_map.map.contains_key(&expr.id));\n             encode_mir(ecx, rbml_w, expr.id);\n \n             rbml_w.end_tag();"}, {"sha": "f7a0642fd9708714c6ff97288c76801b052575b7", "filename": "src/librustc_mir/mir_map.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_mir%2Fmir_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_mir%2Fmir_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmir_map.rs?ref=41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "patch": "@@ -17,7 +17,6 @@\n //! - `#[rustc_mir(pretty=\"file.mir\")]`\n \n extern crate syntax;\n-extern crate rustc;\n extern crate rustc_front;\n \n use build;\n@@ -29,21 +28,22 @@ use rustc::mir::repr::Mir;\n use hair::cx::Cx;\n use std::fs::File;\n \n-use self::rustc::middle::infer;\n-use self::rustc::middle::region::CodeExtentData;\n-use self::rustc::middle::ty::{self, Ty};\n-use self::rustc::util::common::ErrorReported;\n-use self::rustc::util::nodemap::NodeMap;\n-use self::rustc_front::hir;\n-use self::rustc_front::intravisit::{self, Visitor};\n-use self::syntax::ast;\n-use self::syntax::attr::AttrMetaMethods;\n-use self::syntax::codemap::Span;\n-\n-pub type MirMap<'tcx> = NodeMap<Mir<'tcx>>;\n+use rustc::mir::mir_map::MirMap;\n+use rustc::middle::infer;\n+use rustc::middle::region::CodeExtentData;\n+use rustc::middle::ty::{self, Ty};\n+use rustc::util::common::ErrorReported;\n+use rustc::util::nodemap::NodeMap;\n+use rustc_front::hir;\n+use rustc_front::intravisit::{self, Visitor};\n+use syntax::ast;\n+use syntax::attr::AttrMetaMethods;\n+use syntax::codemap::Span;\n \n pub fn build_mir_for_crate<'tcx>(tcx: &ty::ctxt<'tcx>) -> MirMap<'tcx> {\n-    let mut map = NodeMap();\n+    let mut map = MirMap {\n+        map: NodeMap(),\n+    };\n     {\n         let mut dump = OuterDump {\n             tcx: tcx,\n@@ -182,7 +182,7 @@ impl<'a, 'm, 'tcx> Visitor<'tcx> for InnerDump<'a,'m,'tcx> {\n                     }\n                 }\n \n-                let previous = self.map.insert(id, mir);\n+                let previous = self.map.map.insert(id, mir);\n                 assert!(previous.is_none());\n             }\n             Err(ErrorReported) => {}"}, {"sha": "0f0317b6b192c5ae25febdf6bce82673082ca9f7", "filename": "src/librustc_mir/transform/erase_regions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs?ref=41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "patch": "@@ -15,14 +15,14 @@\n use rustc::middle::ty;\n use rustc::mir::repr::*;\n use rustc::mir::visit::MutVisitor;\n-use mir_map::MirMap;\n use transform::MirPass;\n+use rustc::mir::mir_map::MirMap;\n \n pub fn erase_regions<'tcx>(tcx: &ty::ctxt<'tcx>, mir_map: &mut MirMap<'tcx>) {\n     let mut eraser = EraseRegions::new(tcx);\n \n-    for mir in mir_map.iter_mut().map(|(_, v)| v) {\n         eraser.run_on_mir(mir);\n+    for (_, mir) in &mut mir_map.map {\n     }\n }\n "}, {"sha": "720ec3f16891c252308053732461e5898746a824", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "patch": "@@ -48,7 +48,7 @@ use middle::ty::adjustment::CustomCoerceUnsized;\n use rustc::dep_graph::DepNode;\n use rustc::front::map as hir_map;\n use rustc::util::common::time;\n-use rustc_mir::mir_map::MirMap;\n+use rustc::mir::mir_map::MirMap;\n use session::config::{self, NoDebugInfo, FullDebugInfo};\n use session::Session;\n use trans::_match;\n@@ -1596,7 +1596,7 @@ pub fn new_fn_ctxt<'a, 'tcx>(ccx: &'a CrateContext<'a, 'tcx>,\n         false\n     };\n \n-    let mir = ccx.mir_map().get(&id);\n+    let mir = ccx.mir_map().map.get(&id);\n \n     let mut fcx = FunctionContext {\n         mir: mir,"}, {"sha": "df86685e236bdcdf0893b43f28165300f9e87e9e", "filename": "src/librustc_trans/trans/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_trans%2Ftrans%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_trans%2Ftrans%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcollector.rs?ref=41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "patch": "@@ -400,7 +400,7 @@ fn load_mir<'a, 'tcx: 'a>(ccx: &CrateContext<'a, 'tcx>,\n \n     if def_id.is_local() {\n         let node_id = ccx.tcx().map.as_local_node_id(def_id).unwrap();\n-        let mir_opt = ccx.mir_map().get(&node_id);\n+        let mir_opt = ccx.mir_map().map.get(&node_id);\n         let mir = errors::expect(ccx.sess().diagnostic(),\n                              mir_opt,\n                              mir_not_found_error_message);"}, {"sha": "b2ebaac665be3d05b73134c73947164e0b4e6b1f", "filename": "src/librustc_trans/trans/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41c892f5e141a4bd34252ec46f3b9debc3cdafdd/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs?ref=41c892f5e141a4bd34252ec46f3b9debc3cdafdd", "patch": "@@ -15,7 +15,7 @@ use middle::cstore::LinkMeta;\n use middle::def::ExportMap;\n use middle::def_id::DefId;\n use middle::traits;\n-use rustc_mir::mir_map::MirMap;\n+use rustc::mir::mir_map::MirMap;\n use trans::adt;\n use trans::base;\n use trans::builder::Builder;"}]}