{"sha": "045272558309a7600cb4618db5a2c52384f1d14e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NTI3MjU1ODMwOWE3NjAwY2I0NjE4ZGI1YTJjNTIzODRmMWQxNGU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-04-23T17:49:00Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-04-26T08:18:48Z"}, "message": "codegen_llvm: `RelocMode` -> `RelocModel`", "tree": {"sha": "831ad2dc8471f5b1c8ac048e6fd18a97674ee38b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/831ad2dc8471f5b1c8ac048e6fd18a97674ee38b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/045272558309a7600cb4618db5a2c52384f1d14e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/045272558309a7600cb4618db5a2c52384f1d14e", "html_url": "https://github.com/rust-lang/rust/commit/045272558309a7600cb4618db5a2c52384f1d14e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/045272558309a7600cb4618db5a2c52384f1d14e/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb91e5ed2fe72c6ce38abe0ec2ca47cbeac78d8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb91e5ed2fe72c6ce38abe0ec2ca47cbeac78d8d", "html_url": "https://github.com/rust-lang/rust/commit/fb91e5ed2fe72c6ce38abe0ec2ca47cbeac78d8d"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "8fa577d87129510d250d2a469a65823b8cd27679", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/045272558309a7600cb4618db5a2c52384f1d14e/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/045272558309a7600cb4618db5a2c52384f1d14e/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=045272558309a7600cb4618db5a2c52384f1d14e", "patch": "@@ -117,14 +117,14 @@ fn to_pass_builder_opt_level(cfg: config::OptLevel) -> llvm::PassBuilderOptLevel\n     }\n }\n \n-fn to_llvm_relocation_model(relocation_model: RelocModel) -> llvm::RelocMode {\n+fn to_llvm_relocation_model(relocation_model: RelocModel) -> llvm::RelocModel {\n     match relocation_model {\n-        RelocModel::Static => llvm::RelocMode::Static,\n-        RelocModel::Pic => llvm::RelocMode::PIC,\n-        RelocModel::DynamicNoPic => llvm::RelocMode::DynamicNoPic,\n-        RelocModel::Ropi => llvm::RelocMode::ROPI,\n-        RelocModel::Rwpi => llvm::RelocMode::RWPI,\n-        RelocModel::RopiRwpi => llvm::RelocMode::ROPI_RWPI,\n+        RelocModel::Static => llvm::RelocModel::Static,\n+        RelocModel::Pic => llvm::RelocModel::PIC,\n+        RelocModel::DynamicNoPic => llvm::RelocModel::DynamicNoPic,\n+        RelocModel::Ropi => llvm::RelocModel::ROPI,\n+        RelocModel::Rwpi => llvm::RelocModel::RWPI,\n+        RelocModel::RopiRwpi => llvm::RelocModel::ROPI_RWPI,\n     }\n }\n "}, {"sha": "fd03812cccdae8ccfa135d620d87512dd73d9dd8", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/045272558309a7600cb4618db5a2c52384f1d14e/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/045272558309a7600cb4618db5a2c52384f1d14e/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=045272558309a7600cb4618db5a2c52384f1d14e", "patch": "@@ -445,7 +445,7 @@ pub struct SanitizerOptions {\n /// LLVMRelocMode\n #[derive(Copy, Clone, PartialEq)]\n #[repr(C)]\n-pub enum RelocMode {\n+pub enum RelocModel {\n     Static,\n     PIC,\n     DynamicNoPic,\n@@ -1945,7 +1945,7 @@ extern \"C\" {\n         Features: *const c_char,\n         Abi: *const c_char,\n         Model: CodeModel,\n-        Reloc: RelocMode,\n+        Reloc: RelocModel,\n         Level: CodeGenOptLevel,\n         UseSoftFP: bool,\n         PositionIndependentExecutable: bool,"}, {"sha": "e31dd77d8afdc3eeb77925f030c3a7dd44ee63ee", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/045272558309a7600cb4618db5a2c52384f1d14e/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/045272558309a7600cb4618db5a2c52384f1d14e/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=045272558309a7600cb4618db5a2c52384f1d14e", "patch": "@@ -346,7 +346,7 @@ static PassBuilder::OptimizationLevel fromRust(LLVMRustPassBuilderOptLevel Level\n   }\n }\n \n-enum class LLVMRustRelocMode {\n+enum class LLVMRustRelocModel {\n   Static,\n   PIC,\n   DynamicNoPic,\n@@ -355,19 +355,19 @@ enum class LLVMRustRelocMode {\n   ROPIRWPI,\n };\n \n-static Reloc::Model fromRust(LLVMRustRelocMode RustReloc) {\n+static Reloc::Model fromRust(LLVMRustRelocModel RustReloc) {\n   switch (RustReloc) {\n-  case LLVMRustRelocMode::Static:\n+  case LLVMRustRelocModel::Static:\n     return Reloc::Static;\n-  case LLVMRustRelocMode::PIC:\n+  case LLVMRustRelocModel::PIC:\n     return Reloc::PIC_;\n-  case LLVMRustRelocMode::DynamicNoPic:\n+  case LLVMRustRelocModel::DynamicNoPic:\n     return Reloc::DynamicNoPIC;\n-  case LLVMRustRelocMode::ROPI:\n+  case LLVMRustRelocModel::ROPI:\n     return Reloc::ROPI;\n-  case LLVMRustRelocMode::RWPI:\n+  case LLVMRustRelocModel::RWPI:\n     return Reloc::RWPI;\n-  case LLVMRustRelocMode::ROPIRWPI:\n+  case LLVMRustRelocModel::ROPIRWPI:\n     return Reloc::ROPI_RWPI;\n   }\n   report_fatal_error(\"Bad RelocModel.\");\n@@ -437,7 +437,7 @@ extern \"C\" const char* LLVMRustGetHostCPUName(size_t *len) {\n \n extern \"C\" LLVMTargetMachineRef LLVMRustCreateTargetMachine(\n     const char *TripleStr, const char *CPU, const char *Feature,\n-    const char *ABIStr, LLVMRustCodeModel RustCM, LLVMRustRelocMode RustReloc,\n+    const char *ABIStr, LLVMRustCodeModel RustCM, LLVMRustRelocModel RustReloc,\n     LLVMRustCodeGenOptLevel RustOptLevel, bool UseSoftFloat,\n     bool PositionIndependentExecutable, bool FunctionSections,\n     bool DataSections,"}]}