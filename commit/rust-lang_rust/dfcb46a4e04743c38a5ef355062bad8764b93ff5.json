{"sha": "dfcb46a4e04743c38a5ef355062bad8764b93ff5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmY2I0NmE0ZTA0NzQzYzM4YTVlZjM1NTA2MmJhZDg3NjRiOTNmZjU=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-03T11:39:16Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-03T11:39:16Z"}, "message": "Update syscall FIXME to include note about 'wrong' types.", "tree": {"sha": "d2c4571e561891c2b2a2f897559d6f1833c7b28f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2c4571e561891c2b2a2f897559d6f1833c7b28f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfcb46a4e04743c38a5ef355062bad8764b93ff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfcb46a4e04743c38a5ef355062bad8764b93ff5", "html_url": "https://github.com/rust-lang/rust/commit/dfcb46a4e04743c38a5ef355062bad8764b93ff5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfcb46a4e04743c38a5ef355062bad8764b93ff5/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc36988f388258f8ff10441f04f6b9fb30578165", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc36988f388258f8ff10441f04f6b9fb30578165", "html_url": "https://github.com/rust-lang/rust/commit/dc36988f388258f8ff10441f04f6b9fb30578165"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "364cfde6c0721a96cef188cebe4cd2db07edfb95", "filename": "src/shims/posix/linux/foreign_items.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dfcb46a4e04743c38a5ef355062bad8764b93ff5/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfcb46a4e04743c38a5ef355062bad8764b93ff5/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Flinux%2Fforeign_items.rs?ref=dfcb46a4e04743c38a5ef355062bad8764b93ff5", "patch": "@@ -116,10 +116,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 // FIXME: The libc syscall() function is a variadic function.\n                 // It's valid to call it with more arguments than a syscall\n                 // needs, so none of these syscalls should use check_arg_count.\n-                // However, depending on the calling convention it might depend\n-                // on the type and size of the arguments whether a call with\n-                // the wrong number of arguments (or types) is valid or not.\n+                // It's even valid to call it with the wrong type of arguments,\n+                // as long as they'd end up in the same place with the calling\n+                // convention used. (E.g. using a `usize` instead of a pointer.)\n+                // It's not directly clear which number, size, and type of arguments\n+                // are acceptable in which cases and which aren't. (E.g. some\n+                // types might take up the space of two registers.)\n                 // So this needs to be researched first.\n+\n                 let sys_getrandom = this\n                     .eval_libc(\"SYS_getrandom\")?\n                     .to_machine_usize(this)?;"}]}