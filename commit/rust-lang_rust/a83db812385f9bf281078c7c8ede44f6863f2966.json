{"sha": "a83db812385f9bf281078c7c8ede44f6863f2966", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4M2RiODEyMzg1ZjliZjI4MTA3OGM3YzhlZGU0NGY2ODYzZjI5NjY=", "commit": {"author": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2015-03-11T09:57:12Z"}, "committer": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2015-03-11T20:17:27Z"}, "message": "Update tests", "tree": {"sha": "368e3c531e1da6c7a2a28652d3fa1317cf8dab65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/368e3c531e1da6c7a2a28652d3fa1317cf8dab65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a83db812385f9bf281078c7c8ede44f6863f2966", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a83db812385f9bf281078c7c8ede44f6863f2966", "html_url": "https://github.com/rust-lang/rust/commit/a83db812385f9bf281078c7c8ede44f6863f2966", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a83db812385f9bf281078c7c8ede44f6863f2966/comments", "author": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47f1d6747c01a36534ebd08bab497e7abd02c7cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/47f1d6747c01a36534ebd08bab497e7abd02c7cd", "html_url": "https://github.com/rust-lang/rust/commit/47f1d6747c01a36534ebd08bab497e7abd02c7cd"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "121581412202cdc882e168f51372689d7803408e", "filename": "src/test/compile-fail/repeat_count.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a83db812385f9bf281078c7c8ede44f6863f2966/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a83db812385f9bf281078c7c8ede44f6863f2966/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frepeat_count.rs?ref=a83db812385f9bf281078c7c8ede44f6863f2966", "patch": "@@ -19,7 +19,7 @@ fn main() {\n //~| found `()`\n //~| expected usize\n //~| found ()\n-//~| ERROR expected constant integer for repeat count, found non-constant expression\n+//~| ERROR expected positive integer for repeat count, found tuple\n     let c = [0; true];\n     //~^ ERROR mismatched types\n     //~| expected `usize`"}, {"sha": "35e053110dfc7ec2be2e5c9fb83fffa2d29dccf0", "filename": "src/test/run-pass/issue-19244.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a83db812385f9bf281078c7c8ede44f6863f2966/src%2Ftest%2Frun-pass%2Fissue-19244.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a83db812385f9bf281078c7c8ede44f6863f2966/src%2Ftest%2Frun-pass%2Fissue-19244.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-19244.rs?ref=a83db812385f9bf281078c7c8ede44f6863f2966", "patch": "@@ -8,14 +8,35 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-struct MyStruct { field: uint }\n+struct MyStruct { field: usize }\n+struct Nested { nested: MyStruct }\n+struct Mix2 { nested: ((usize,),) }\n+\n const STRUCT: MyStruct = MyStruct { field: 42 };\n-const TUP: (uint,) = (43,);\n+const TUP: (usize,) = (43,);\n+const NESTED_S: Nested = Nested { nested: MyStruct { field: 5 } };\n+const NESTED_T: ((usize,),) = ((4,),);\n+const MIX_1: ((Nested,),) = ((Nested { nested: MyStruct { field: 3 } },),);\n+const MIX_2: Mix2 = Mix2 { nested: ((2,),) };\n+const INSTANT_1: usize = (MyStruct { field: 1 }).field;\n+const INSTANT_2: usize = (0,).0;\n \n fn main() {\n     let a = [0; STRUCT.field];\n     let b = [0; TUP.0];\n+    let c = [0; NESTED_S.nested.field];\n+    let d = [0; (NESTED_T.0).0];\n+    let e = [0; (MIX_1.0).0.nested.field];\n+    let f = [0; (MIX_2.nested.0).0];\n+    let g = [0; INSTANT_1];\n+    let h = [0; INSTANT_2];\n \n-    assert!(a.len() == 42);\n-    assert!(b.len() == 43);\n+    assert_eq!(a.len(), 42);\n+    assert_eq!(b.len(), 43);\n+    assert_eq!(c.len(), 5);\n+    assert_eq!(d.len(), 4);\n+    assert_eq!(e.len(), 3);\n+    assert_eq!(f.len(), 2);\n+    assert_eq!(g.len(), 1);\n+    assert_eq!(h.len(), 0);\n }"}]}