{"sha": "74e9057905c3c24303245a4a2c5671d80a9503b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ZTkwNTc5MDVjM2MyNDMwMzI0NWE0YTJjNTY3MWQ4MGE5NTAzYjY=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-12-26T21:03:04Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-12-26T21:03:04Z"}, "message": "modify remaining #[must_use[ messages", "tree": {"sha": "35522fe0887791cf9ddeccf8d18ff259569727d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35522fe0887791cf9ddeccf8d18ff259569727d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74e9057905c3c24303245a4a2c5671d80a9503b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74e9057905c3c24303245a4a2c5671d80a9503b6", "html_url": "https://github.com/rust-lang/rust/commit/74e9057905c3c24303245a4a2c5671d80a9503b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74e9057905c3c24303245a4a2c5671d80a9503b6/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7ce868f8e7ba2df728451bcbeafe387d393a1bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7ce868f8e7ba2df728451bcbeafe387d393a1bc", "html_url": "https://github.com/rust-lang/rust/commit/e7ce868f8e7ba2df728451bcbeafe387d393a1bc"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "e58320ebf569ea350cb7873ace36ad4cc1571e43", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/74e9057905c3c24303245a4a2c5671d80a9503b6/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e9057905c3c24303245a4a2c5671d80a9503b6/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=74e9057905c3c24303245a4a2c5671d80a9503b6", "patch": "@@ -3581,7 +3581,7 @@ impl str {\n     /// let s = \"  \u05e2\u05d1\u05e8\u05d9\u05ea  \";\n     /// assert!(Some('\u05e2') == s.trim_start().chars().next());\n     /// ```\n-    #[must_use = \"this returns the trimmed string as a new allocation, \\\n+    #[must_use = \"this returns the trimmed string as a new slice, \\\n                   without modifying the original\"]\n     #[stable(feature = \"trim_direction\", since = \"1.30.0\")]\n     pub fn trim_start(&self) -> &str {\n@@ -3618,7 +3618,7 @@ impl str {\n     /// let s = \"  \u05e2\u05d1\u05e8\u05d9\u05ea  \";\n     /// assert!(Some('\u05ea') == s.trim_end().chars().rev().next());\n     /// ```\n-    #[must_use = \"this returns the trimmed string as a new allocation, \\\n+    #[must_use = \"this returns the trimmed string as a new slice, \\\n                   without modifying the original\"]\n     #[stable(feature = \"trim_direction\", since = \"1.30.0\")]\n     pub fn trim_end(&self) -> &str {\n@@ -3722,7 +3722,7 @@ impl str {\n     /// ```\n     /// assert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n     /// ```\n-    #[must_use = \"this returns the trimmed string as a new allocation, \\\n+    #[must_use = \"this returns the trimmed string as a new slice, \\\n                   without modifying the original\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn trim_matches<'a, P: Pattern<'a>>(&'a self, pat: P) -> &'a str\n@@ -3769,7 +3769,7 @@ impl str {\n     /// let x: &[_] = &['1', '2'];\n     /// assert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n     /// ```\n-    #[must_use = \"this returns the trimmed string as a new allocation, \\\n+    #[must_use = \"this returns the trimmed string as a new slice, \\\n                   without modifying the original\"]\n     #[stable(feature = \"trim_direction\", since = \"1.30.0\")]\n     pub fn trim_start_matches<'a, P: Pattern<'a>>(&'a self, pat: P) -> &'a str {\n@@ -3814,7 +3814,7 @@ impl str {\n     /// ```\n     /// assert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n     /// ```\n-    #[must_use = \"this returns the trimmed string as a new allocation, \\\n+    #[must_use = \"this returns the trimmed string as a new slice, \\\n                   without modifying the original\"]\n     #[stable(feature = \"trim_direction\", since = \"1.30.0\")]\n     pub fn trim_end_matches<'a, P: Pattern<'a>>(&'a self, pat: P) -> &'a str"}]}