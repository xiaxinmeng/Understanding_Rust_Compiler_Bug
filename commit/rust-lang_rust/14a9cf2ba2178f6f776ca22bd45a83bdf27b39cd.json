{"sha": "14a9cf2ba2178f6f776ca22bd45a83bdf27b39cd", "node_id": "C_kwDOAAsO6NoAKDE0YTljZjJiYTIxNzhmNmY3NzZjYTIyYmQ0NWE4M2JkZjI3YjM5Y2Q", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-30T14:52:05Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-30T14:52:05Z"}, "message": "Generalize some InternedInSet impls", "tree": {"sha": "d125ffdd1be8481f032cbf1dd340e8f228961a3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d125ffdd1be8481f032cbf1dd340e8f228961a3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14a9cf2ba2178f6f776ca22bd45a83bdf27b39cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14a9cf2ba2178f6f776ca22bd45a83bdf27b39cd", "html_url": "https://github.com/rust-lang/rust/commit/14a9cf2ba2178f6f776ca22bd45a83bdf27b39cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14a9cf2ba2178f6f776ca22bd45a83bdf27b39cd/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "907ef227ef22bed182100641564a223a23dcba62", "url": "https://api.github.com/repos/rust-lang/rust/commits/907ef227ef22bed182100641564a223a23dcba62", "html_url": "https://github.com/rust-lang/rust/commit/907ef227ef22bed182100641564a223a23dcba62"}], "stats": {"total": 42, "additions": 6, "deletions": 36}, "files": [{"sha": "89d4ad31d1ec5c0fb00464dd1be25b74fe36fbef", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 6, "deletions": 36, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/14a9cf2ba2178f6f776ca22bd45a83bdf27b39cd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14a9cf2ba2178f6f776ca22bd45a83bdf27b39cd/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=14a9cf2ba2178f6f776ca22bd45a83bdf27b39cd", "patch": "@@ -2163,53 +2163,23 @@ impl<'tcx, T: 'tcx + ?Sized> IntoPointer for InternedInSet<'tcx, T> {\n }\n \n #[allow(rustc::usage_of_ty_tykind)]\n-impl<'tcx> Borrow<TyKind<'tcx>> for InternedInSet<'tcx, WithCachedTypeInfo<TyKind<'tcx>>> {\n-    fn borrow<'a>(&'a self) -> &'a TyKind<'tcx> {\n+impl<'tcx, T> Borrow<T> for InternedInSet<'tcx, WithCachedTypeInfo<T>> {\n+    fn borrow<'a>(&'a self) -> &'a T {\n         &self.0.internee\n     }\n }\n \n-impl<'tcx> PartialEq for InternedInSet<'tcx, WithCachedTypeInfo<TyKind<'tcx>>> {\n-    fn eq(&self, other: &InternedInSet<'tcx, WithCachedTypeInfo<TyKind<'tcx>>>) -> bool {\n+impl<'tcx, T: PartialEq> PartialEq for InternedInSet<'tcx, WithCachedTypeInfo<T>> {\n+    fn eq(&self, other: &InternedInSet<'tcx, WithCachedTypeInfo<T>>) -> bool {\n         // The `Borrow` trait requires that `x.borrow() == y.borrow()` equals\n         // `x == y`.\n         self.0.internee == other.0.internee\n     }\n }\n \n-impl<'tcx> Eq for InternedInSet<'tcx, WithCachedTypeInfo<TyKind<'tcx>>> {}\n+impl<'tcx, T: Eq> Eq for InternedInSet<'tcx, WithCachedTypeInfo<T>> {}\n \n-impl<'tcx> Hash for InternedInSet<'tcx, WithCachedTypeInfo<TyKind<'tcx>>> {\n-    fn hash<H: Hasher>(&self, s: &mut H) {\n-        // The `Borrow` trait requires that `x.borrow().hash(s) == x.hash(s)`.\n-        self.0.internee.hash(s)\n-    }\n-}\n-\n-impl<'tcx> Borrow<Binder<'tcx, PredicateKind<'tcx>>>\n-    for InternedInSet<'tcx, WithCachedTypeInfo<ty::Binder<'tcx, PredicateKind<'tcx>>>>\n-{\n-    fn borrow<'a>(&'a self) -> &'a Binder<'tcx, PredicateKind<'tcx>> {\n-        &self.0.internee\n-    }\n-}\n-\n-impl<'tcx> PartialEq\n-    for InternedInSet<'tcx, WithCachedTypeInfo<ty::Binder<'tcx, PredicateKind<'tcx>>>>\n-{\n-    fn eq(\n-        &self,\n-        other: &InternedInSet<'tcx, WithCachedTypeInfo<ty::Binder<'tcx, PredicateKind<'tcx>>>>,\n-    ) -> bool {\n-        // The `Borrow` trait requires that `x.borrow() == y.borrow()` equals\n-        // `x == y`.\n-        self.0.internee == other.0.internee\n-    }\n-}\n-\n-impl<'tcx> Eq for InternedInSet<'tcx, WithCachedTypeInfo<ty::Binder<'tcx, PredicateKind<'tcx>>>> {}\n-\n-impl<'tcx> Hash for InternedInSet<'tcx, WithCachedTypeInfo<ty::Binder<'tcx, PredicateKind<'tcx>>>> {\n+impl<'tcx, T: Hash> Hash for InternedInSet<'tcx, WithCachedTypeInfo<T>> {\n     fn hash<H: Hasher>(&self, s: &mut H) {\n         // The `Borrow` trait requires that `x.borrow().hash(s) == x.hash(s)`.\n         self.0.internee.hash(s)"}]}