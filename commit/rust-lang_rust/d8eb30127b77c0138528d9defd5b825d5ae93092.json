{"sha": "d8eb30127b77c0138528d9defd5b825d5ae93092", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZWIzMDEyN2I3N2MwMTM4NTI4ZDlkZWZkNWI4MjVkNWFlOTMwOTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-31T13:22:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-31T13:22:43Z"}, "message": "Rollup merge of #76115 - calebcartwright:parser-fn-visibility, r=matklad\n\nRestore public visibility on some parsing functions for rustfmt\n\nIn #74826 the visibility of several parsing functions was reduced. However, rustfmt is an external consumer of some of these functions as well and needs the visibility to be public, similar to other elements in rustc_parse such as `parse_ident`\n\nhttps://github.com/rust-lang/rust/blob/db534b3ac286cf45688c3bbae6aa6e77439e52d2/src/librustc_parse/parser/mod.rs#L433-L436", "tree": {"sha": "9c8f2898afbd31f2972f4f0cde045c1997d8d817", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c8f2898afbd31f2972f4f0cde045c1997d8d817"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8eb30127b77c0138528d9defd5b825d5ae93092", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfTPmjCRBK7hj4Ov3rIwAAdHIIAJRhorWJbTADD25ktfbyPy7z\nv2wXoJEJF56jtoBT4HnbBEucoABkYQ0+Oy+mf03kSOLQnjVtphm2iYGhiRb6gGvd\n40LjaNRUhXyeATaLLcCqNbUxQMfFW37xjkoFxNgR25OX32D1+BufE7FQ6PPmzMnf\nHmuRxKafRXapcRT5UDwu4WrP98++PliZ29m1xq4w918yo0Z3qTQjeHndbtq9YX/R\nvGLZkTGX6ES7WaWx26fF44lIPzwRJ8Rba/xsBSZmkHnE+5vzar14dRe6rFTWbIkG\nzVnO9VV6cHAqFEyPBeoJugx9Lu6yEKqYVH1ESFm5OTPkmlbQFPWq19Rv/ePIb+0=\n=SAC3\n-----END PGP SIGNATURE-----\n", "payload": "tree 9c8f2898afbd31f2972f4f0cde045c1997d8d817\nparent 67f16431aa3315ba81b93cfa15120f36e2e9b987\nparent 883b1e7592dec6e309db018a2a87253d91d50b4a\nauthor Aleksey Kladov <aleksey.kladov@gmail.com> 1598880163 +0200\ncommitter GitHub <noreply@github.com> 1598880163 +0200\n\nRollup merge of #76115 - calebcartwright:parser-fn-visibility, r=matklad\n\nRestore public visibility on some parsing functions for rustfmt\n\nIn #74826 the visibility of several parsing functions was reduced. However, rustfmt is an external consumer of some of these functions as well and needs the visibility to be public, similar to other elements in rustc_parse such as `parse_ident`\n\nhttps://github.com/rust-lang/rust/blob/db534b3ac286cf45688c3bbae6aa6e77439e52d2/src/librustc_parse/parser/mod.rs#L433-L436\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8eb30127b77c0138528d9defd5b825d5ae93092", "html_url": "https://github.com/rust-lang/rust/commit/d8eb30127b77c0138528d9defd5b825d5ae93092", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8eb30127b77c0138528d9defd5b825d5ae93092/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67f16431aa3315ba81b93cfa15120f36e2e9b987", "url": "https://api.github.com/repos/rust-lang/rust/commits/67f16431aa3315ba81b93cfa15120f36e2e9b987", "html_url": "https://github.com/rust-lang/rust/commit/67f16431aa3315ba81b93cfa15120f36e2e9b987"}, {"sha": "883b1e7592dec6e309db018a2a87253d91d50b4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/883b1e7592dec6e309db018a2a87253d91d50b4a", "html_url": "https://github.com/rust-lang/rust/commit/883b1e7592dec6e309db018a2a87253d91d50b4a"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "d90a61cd34af55342abc786c2fa5fd961293ec40", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8eb30127b77c0138528d9defd5b825d5ae93092/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8eb30127b77c0138528d9defd5b825d5ae93092/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=d8eb30127b77c0138528d9defd5b825d5ae93092", "patch": "@@ -1014,7 +1014,8 @@ impl<'a> Parser<'a> {\n     /// If the following element can't be a tuple (i.e., it's a function definition), then\n     /// it's not a tuple struct field), and the contents within the parentheses isn't valid,\n     /// so emit a proper diagnostic.\n-    pub(crate) fn parse_visibility(&mut self, fbt: FollowedByType) -> PResult<'a, Visibility> {\n+    // Public for rustfmt usage.\n+    pub fn parse_visibility(&mut self, fbt: FollowedByType) -> PResult<'a, Visibility> {\n         maybe_whole!(self, NtVis, |x| x);\n \n         self.expected_tokens.push(TokenType::Keyword(kw::Crate));"}, {"sha": "0f522fd788c86a3b900220fb8d04d0a72c026f40", "filename": "compiler/rustc_parse/src/parser/stmt.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8eb30127b77c0138528d9defd5b825d5ae93092/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8eb30127b77c0138528d9defd5b825d5ae93092/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs?ref=d8eb30127b77c0138528d9defd5b825d5ae93092", "patch": "@@ -21,7 +21,8 @@ use std::mem;\n impl<'a> Parser<'a> {\n     /// Parses a statement. This stops just before trailing semicolons on everything but items.\n     /// e.g., a `StmtKind::Semi` parses to a `StmtKind::Expr`, leaving the trailing `;` unconsumed.\n-    pub(super) fn parse_stmt(&mut self) -> PResult<'a, Option<Stmt>> {\n+    // Public for rustfmt usage.\n+    pub fn parse_stmt(&mut self) -> PResult<'a, Option<Stmt>> {\n         Ok(self.parse_stmt_without_recovery().unwrap_or_else(|mut e| {\n             e.emit();\n             self.recover_stmt_(SemiColonMode::Break, BlockMode::Ignore);"}]}