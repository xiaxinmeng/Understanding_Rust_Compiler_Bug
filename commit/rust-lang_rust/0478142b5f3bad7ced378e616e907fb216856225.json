{"sha": "0478142b5f3bad7ced378e616e907fb216856225", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NzgxNDJiNWYzYmFkN2NlZDM3OGU2MTZlOTA3ZmIyMTY4NTYyMjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-22T20:36:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-22T20:36:35Z"}, "message": "auto merge of #11096 : brson/rust/pp, r=alexcrichton", "tree": {"sha": "d1444274d934efe999838ee00aa4188087549c90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1444274d934efe999838ee00aa4188087549c90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0478142b5f3bad7ced378e616e907fb216856225", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0478142b5f3bad7ced378e616e907fb216856225", "html_url": "https://github.com/rust-lang/rust/commit/0478142b5f3bad7ced378e616e907fb216856225", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0478142b5f3bad7ced378e616e907fb216856225/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e4cd83a0aff0fed5281c01cbae7aa74a1a53dee", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e4cd83a0aff0fed5281c01cbae7aa74a1a53dee", "html_url": "https://github.com/rust-lang/rust/commit/2e4cd83a0aff0fed5281c01cbae7aa74a1a53dee"}, {"sha": "a5d26a2e37b201d6adab839c1639edcf769432ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5d26a2e37b201d6adab839c1639edcf769432ab", "html_url": "https://github.com/rust-lang/rust/commit/a5d26a2e37b201d6adab839c1639edcf769432ab"}], "stats": {"total": 44, "additions": 0, "deletions": 44}, "files": [{"sha": "f5fdcd97aa64d6e83ba6aa01447eaacea8b44a7e", "filename": "Makefile.in", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0478142b5f3bad7ced378e616e907fb216856225/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/0478142b5f3bad7ced378e616e907fb216856225/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=0478142b5f3bad7ced378e616e907fb216856225", "patch": "@@ -657,11 +657,6 @@ ifneq ($(strip $(findstring snap,$(MAKECMDGOALS))   \\\n   include $(CFG_SRC_DIR)mk/snap.mk\n endif\n \n-ifneq ($(findstring reformat,$(MAKECMDGOALS)),)\n-  CFG_INFO := $(info cfg: including reformat rules)\n-  include $(CFG_SRC_DIR)mk/pp.mk\n-endif\n-\n ifneq ($(strip $(findstring check,$(MAKECMDGOALS)) \\\n                $(findstring test,$(MAKECMDGOALS))  \\\n                $(findstring perf,$(MAKECMDGOALS))  \\"}, {"sha": "3d2af81f1c811fc5561c00aeb1d191bd049b97de", "filename": "mk/pp.mk", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/2e4cd83a0aff0fed5281c01cbae7aa74a1a53dee/mk%2Fpp.mk", "raw_url": "https://github.com/rust-lang/rust/raw/2e4cd83a0aff0fed5281c01cbae7aa74a1a53dee/mk%2Fpp.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fpp.mk?ref=2e4cd83a0aff0fed5281c01cbae7aa74a1a53dee", "patch": "@@ -1,39 +0,0 @@\n-# Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-# Create a way to reformat just some files\n-ifdef PPFILES\n-  PP_INPUTS_FILTERED := $(wildcard $(PPFILES))\n-else\n-  PP_INPUTS = $(wildcard $(addprefix $(S)src/libstd/,*.rs */*.rs)) \\\n-              $(wildcard $(addprefix $(S)src/libextra/,*.rs */*.rs)) \\\n-              $(wildcard $(addprefix $(S)src/rustc/,*.rs */*.rs */*/*.rs)) \\\n-              $(wildcard $(S)src/test/*/*.rs    \\\n-                         $(S)src/test/*/*/*.rs) \\\n-              $(wildcard $(S)src/rustpkg/*.rs) \\\n-              $(wildcard $(S)src/rust/*.rs)\n-\n-  PP_INPUTS_FILTERED = $(shell echo $(PP_INPUTS) | xargs grep -L \\\n-                       \"no-reformat\\|xfail-pretty\\|xfail-test\")\n-endif\n-\n-reformat: $(SREQ1$(CFG_BUILD))\n-\t@$(call E, reformat [stage1]: $@)\n-\tfor i in $(PP_INPUTS_FILTERED);  \\\n-    do $(call CFG_RUN_TARG_$(CFG_BUILD),1,$(CFG_BUILD)/stage1/rustc$(X_$(CFG_BUILD))) \\\n-       --pretty normal $$i >$$i.tmp; \\\n-    if [ $$? -ne 0 ]; \\\n-        then echo failed to print $$i; rm $$i.tmp; \\\n-        else if cmp --silent $$i.tmp $$i; \\\n-            then echo no changes to $$i; rm $$i.tmp; \\\n-            else echo reformated $$i; mv $$i.tmp $$i; \\\n-        fi; \\\n-    fi; \\\n-    done"}]}