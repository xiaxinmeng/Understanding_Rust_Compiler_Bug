{"sha": "d9dba7699f6f9771f28438c2c49d920536d76a26", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5ZGJhNzY5OWY2Zjk3NzFmMjg0MzhjMmM0OWQ5MjA1MzZkNzZhMjY=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-02-23T05:04:30Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-03-10T05:29:39Z"}, "message": "Prefer 'associated function' over 'static method' in msg.\n\nTRPL seems to refer to 'static functions' as 'associated functions'.\nThis terminology should be used consistently.", "tree": {"sha": "5c4fbc791fa784738f71ae57f6c1d6046a7be661", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c4fbc791fa784738f71ae57f6c1d6046a7be661"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9dba7699f6f9771f28438c2c49d920536d76a26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9dba7699f6f9771f28438c2c49d920536d76a26", "html_url": "https://github.com/rust-lang/rust/commit/d9dba7699f6f9771f28438c2c49d920536d76a26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9dba7699f6f9771f28438c2c49d920536d76a26/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ef8d426050318934d16d962325ec002eaf0c29d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ef8d426050318934d16d962325ec002eaf0c29d", "html_url": "https://github.com/rust-lang/rust/commit/0ef8d426050318934d16d962325ec002eaf0c29d"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "8ac002bc4dffdfea9c5b7103c63fac297422efb3", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d9dba7699f6f9771f28438c2c49d920536d76a26/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9dba7699f6f9771f28438c2c49d920536d76a26/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=d9dba7699f6f9771f28438c2c49d920536d76a26", "patch": "@@ -141,7 +141,8 @@ pub fn report_error<'a, 'tcx>(fcx: &FnCtxt<'a, 'tcx>,\n             if !static_sources.is_empty() {\n                 err.fileline_note(\n                     span,\n-                    \"found defined static methods, maybe a `self` is missing?\");\n+                    \"found the following associated functions; to be used as \\\n+                     methods, functions must have a `self` parameter\");\n \n                 report_candidates(fcx, &mut err, span, item_name, static_sources);\n             }"}, {"sha": "3cb30981b673c0ff0aa8278f4b5915d722dd743b", "filename": "src/test/compile-fail/issue-7575.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d9dba7699f6f9771f28438c2c49d920536d76a26/src%2Ftest%2Fcompile-fail%2Fissue-7575.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9dba7699f6f9771f28438c2c49d920536d76a26/src%2Ftest%2Fcompile-fail%2Fissue-7575.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7575.rs?ref=d9dba7699f6f9771f28438c2c49d920536d76a26", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // Test the mechanism for warning about possible missing `self` declarations.\n+// ignore-tidy-linelength\n \n trait CtxtFn {\n     fn f8(self, usize) -> usize;\n@@ -72,15 +73,15 @@ impl ManyImplTrait for Myisize {}\n fn no_param_bound(u: usize, m: Myisize) -> usize {\n     u.f8(42) + u.f9(342) + m.fff(42)\n             //~^ ERROR no method named `f9` found for type `usize` in the current scope\n-            //~^^ NOTE found defined static methods, maybe a `self` is missing?\n+            //~^^ NOTE found the following associated functions; to be used as methods, functions must have a `self` parameter\n             //~^^^ ERROR no method named `fff` found for type `Myisize` in the current scope\n-            //~^^^^ NOTE found defined static methods, maybe a `self` is missing?\n+            //~^^^^ NOTE found the following associated functions; to be used as methods, functions must have a `self` parameter\n }\n \n fn param_bound<T: ManyImplTrait>(t: T) -> bool {\n     t.is_str()\n     //~^ ERROR no method named `is_str` found for type `T` in the current scope\n-    //~^^ NOTE found defined static methods, maybe a `self` is missing?\n+    //~^^ NOTE found the following associated functions; to be used as methods, functions must have a `self` parameter\n }\n \n fn main() {"}]}