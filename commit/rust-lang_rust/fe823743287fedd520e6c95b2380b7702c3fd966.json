{"sha": "fe823743287fedd520e6c95b2380b7702c3fd966", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlODIzNzQzMjg3ZmVkZDUyMGU2Yzk1YjIzODBiNzcwMmMzZmQ5NjY=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-02-07T01:19:11Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-02-09T21:37:04Z"}, "message": "json bugfixes", "tree": {"sha": "8030dd1472d962bf4f04732d4b41f015321097a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8030dd1472d962bf4f04732d4b41f015321097a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe823743287fedd520e6c95b2380b7702c3fd966", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe823743287fedd520e6c95b2380b7702c3fd966", "html_url": "https://github.com/rust-lang/rust/commit/fe823743287fedd520e6c95b2380b7702c3fd966", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe823743287fedd520e6c95b2380b7702c3fd966/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "765961438d0a3f8f37f1e38160f6dca04870ae10", "url": "https://api.github.com/repos/rust-lang/rust/commits/765961438d0a3f8f37f1e38160f6dca04870ae10", "html_url": "https://github.com/rust-lang/rust/commit/765961438d0a3f8f37f1e38160f6dca04870ae10"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "31f72c76e8c3cb34ade1f7398e26c63430760f2b", "filename": "src/libstd/json.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fe823743287fedd520e6c95b2380b7702c3fd966/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe823743287fedd520e6c95b2380b7702c3fd966/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=fe823743287fedd520e6c95b2380b7702c3fd966", "patch": "@@ -122,24 +122,21 @@ pub impl Encoder: serialize::Encoder {\n     fn emit_managed(&self, f: fn()) { f() }\n \n     fn emit_enum(&self, name: &str, f: fn()) {\n+        f()\n+    }\n+    \n+    fn emit_enum_variant(&self, _name: &str, id: uint, _cnt: uint, f: fn()) {\n         // emitting enums as arrays where the first\n         // element provides the enum variant name\n         self.wr.write_char('[');\n-        self.wr.write_str(name);\n+        self.wr.write_str(escape_str(_name));\n         self.wr.write_char(',');\n         f();\n         self.wr.write_char(']');\n     }\n-    \n-    fn emit_enum_variant(&self, _name: &str, id: uint, _cnt: uint, f: fn()) {\n-        if id == 0 {\n-            self.emit_nil();\n-        } else {\n-            f()\n-        }\n-    }\n     fn emit_enum_variant_arg(&self, _idx: uint, f: fn()) {\n-        f()\n+        if _idx != 0 {self.wr.write_char(',');}\n+        f();\n     }\n \n     fn emit_borrowed_vec(&self, _len: uint, f: fn()) {"}]}