{"sha": "91200e31e3a277670a3615e390eb986c82b2541e", "node_id": "C_kwDOAAsO6NoAKDkxMjAwZTMxZTNhMjc3NjcwYTM2MTVlMzkwZWI5ODZjODJiMjU0MWU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-01-02T10:08:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-02T10:08:10Z"}, "message": "Merge #11161\n\n11161: minor: style nits r=lnicola a=lnicola\n\n - avoid `fold` with a `Vec` seed which could have been a `for_each`\r\n - we can't drop the dependency, but avoid `Itertools::collect_vec`\r\n\r\nbors r+\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "d4e4fe369c4f51901ffcdc732dc05c887dbe92bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4e4fe369c4f51901ffcdc732dc05c887dbe92bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91200e31e3a277670a3615e390eb986c82b2541e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh0XmKCRBK7hj4Ov3rIwAA8hwIAEC6Ih55sbxuPv08UV0v+pJE\nIVBlCIPbvclrcmdxfuvOA2jTYey8ZOzDJJYbPnfbovJAoQFgBXewM2/EH0i1pFA7\noYnppGWu61uWgmG1LzjxM+iWKi6wCpVp1SwUj+jTfJznPWQHXIkkrRN81votwnvw\nwzrhrmN25gphZPWtmESRSVm7LsS303+wpGxCNn66bMY/7k+Q3u4HhfrCuqsVFRfm\nXVYDgYBdQ2wwRSu1wAV32EV2mvxXJJ7kOnGQaREhGBwDlLvkRf7MOakctfY5V+rT\nQ/eqH3j6FGsIF3AnJbzic37qiHE2c/9zzJ92s2RCzmILgZSO/3zkxIbIPSTmucU=\n=L1MH\n-----END PGP SIGNATURE-----\n", "payload": "tree d4e4fe369c4f51901ffcdc732dc05c887dbe92bf\nparent b706ae22dc94231bdbb4bf91632e3ea45dfccce6\nparent 53ddf48df44609db0dae391244927264ac82a15c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1641118090 +0000\ncommitter GitHub <noreply@github.com> 1641118090 +0000\n\nMerge #11161\n\n11161: minor: style nits r=lnicola a=lnicola\n\n - avoid `fold` with a `Vec` seed which could have been a `for_each`\r\n - we can't drop the dependency, but avoid `Itertools::collect_vec`\r\n\r\nbors r+\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91200e31e3a277670a3615e390eb986c82b2541e", "html_url": "https://github.com/rust-lang/rust/commit/91200e31e3a277670a3615e390eb986c82b2541e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91200e31e3a277670a3615e390eb986c82b2541e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b706ae22dc94231bdbb4bf91632e3ea45dfccce6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b706ae22dc94231bdbb4bf91632e3ea45dfccce6", "html_url": "https://github.com/rust-lang/rust/commit/b706ae22dc94231bdbb4bf91632e3ea45dfccce6"}, {"sha": "53ddf48df44609db0dae391244927264ac82a15c", "url": "https://api.github.com/repos/rust-lang/rust/commits/53ddf48df44609db0dae391244927264ac82a15c", "html_url": "https://github.com/rust-lang/rust/commit/53ddf48df44609db0dae391244927264ac82a15c"}], "stats": {"total": 38, "additions": 17, "deletions": 21}, "files": [{"sha": "2872edc9e106c0ac863460ce5ddc6330a70716ae", "filename": "crates/ide_assists/src/handlers/add_turbo_fish.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/91200e31e3a277670a3615e390eb986c82b2541e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91200e31e3a277670a3615e390eb986c82b2541e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_turbo_fish.rs?ref=91200e31e3a277670a3615e390eb986c82b2541e", "patch": "@@ -1,5 +1,4 @@\n use ide_db::defs::{Definition, NameRefClass};\n-use itertools::Itertools;\n use syntax::{ast, AstNode, SyntaxKind, T};\n \n use crate::{\n@@ -79,7 +78,7 @@ pub(crate) fn add_turbo_fish(acc: &mut Assists, ctx: &AssistContext) -> Option<(\n     }\n \n     let number_of_arguments = generics.len();\n-    let fish_head = std::iter::repeat(\"_\").take(number_of_arguments).collect_vec().join(\",\");\n+    let fish_head = std::iter::repeat(\"_\").take(number_of_arguments).collect::<Vec<_>>().join(\",\");\n \n     acc.add(\n         AssistId(\"add_turbo_fish\", AssistKind::RefactorRewrite),"}, {"sha": "5f361f01dc1dadfffcd8c1a299a62355e38a23cc", "filename": "crates/ide_assists/src/handlers/destructure_tuple_binding.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/91200e31e3a277670a3615e390eb986c82b2541e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fdestructure_tuple_binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91200e31e3a277670a3615e390eb986c82b2541e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fdestructure_tuple_binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fdestructure_tuple_binding.rs?ref=91200e31e3a277670a3615e390eb986c82b2541e", "patch": "@@ -3,7 +3,6 @@ use ide_db::{\n     defs::Definition,\n     search::{FileReference, SearchScope, UsageSearchResult},\n };\n-use itertools::Itertools;\n use syntax::{\n     ast::{self, AstNode, FieldExpr, HasName, IdentPat, MethodCallExpr},\n     TextRange,\n@@ -121,7 +120,7 @@ fn collect_data(ident_pat: IdentPat, ctx: &AssistContext) -> Option<TupleData> {\n \n     let field_names = (0..field_types.len())\n         .map(|i| generate_name(ctx, i, &name, &ident_pat, &usages))\n-        .collect_vec();\n+        .collect::<Vec<_>>();\n \n     Some(TupleData { ident_pat, range, ref_type, field_names, usages })\n }"}, {"sha": "6cc311fd7585d3adbf9ea34acff318c91ed43692", "filename": "crates/ide_assists/src/handlers/extract_module.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/91200e31e3a277670a3615e390eb986c82b2541e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91200e31e3a277670a3615e390eb986c82b2541e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs?ref=91200e31e3a277670a3615e390eb986c82b2541e", "patch": "@@ -311,18 +311,17 @@ impl Module {\n         let (body_items, mut replacements, record_field_parents, impls) =\n             get_replacements_for_visibilty_change(self.body_items.clone(), false);\n \n-        let impl_items = impls.into_iter().fold(Vec::new(), |mut impl_items, x| {\n-            let mut this_impl_items =\n-                x.syntax().descendants().fold(Vec::new(), |mut this_impl_items, x| {\n-                    if let Some(item) = ast::Item::cast(x) {\n-                        this_impl_items.push(item);\n-                    }\n-                    return this_impl_items;\n-                });\n+        let mut impl_items = Vec::new();\n+        for impl_ in impls {\n+            let mut this_impl_items = Vec::new();\n+            for node in impl_.syntax().descendants() {\n+                if let Some(item) = ast::Item::cast(node) {\n+                    this_impl_items.push(item);\n+                }\n+            }\n \n             impl_items.append(&mut this_impl_items);\n-            return impl_items;\n-        });\n+        }\n \n         let (_, mut impl_item_replacements, _, _) =\n             get_replacements_for_visibilty_change(impl_items, true);"}, {"sha": "07f5eab514adefa520b7e546aff217d1066f6372", "filename": "crates/ide_assists/src/handlers/generate_function.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/91200e31e3a277670a3615e390eb986c82b2541e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91200e31e3a277670a3615e390eb986c82b2541e/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs?ref=91200e31e3a277670a3615e390eb986c82b2541e", "patch": "@@ -456,10 +456,10 @@ fn fn_args(\n /// assert_eq!(names, expected);\n /// ```\n fn deduplicate_arg_names(arg_names: &mut Vec<String>) {\n-    let arg_name_counts = arg_names.iter().fold(FxHashMap::default(), |mut m, name| {\n-        *m.entry(name).or_insert(0) += 1;\n-        m\n-    });\n+    let mut arg_name_counts = FxHashMap::default();\n+    for name in arg_names.iter() {\n+        *arg_name_counts.entry(name).or_insert(0) += 1;\n+    }\n     let duplicate_arg_names: FxHashSet<String> = arg_name_counts\n         .into_iter()\n         .filter(|(_, count)| *count >= 2)"}, {"sha": "66b66e024ce7ebf6a2b3f8128314b7fbdaa21369", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/91200e31e3a277670a3615e390eb986c82b2541e/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91200e31e3a277670a3615e390eb986c82b2541e/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=91200e31e3a277670a3615e390eb986c82b2541e", "patch": "@@ -14,7 +14,6 @@ use ide::{\n     SourceChange, TextEdit,\n };\n use ide_db::SymbolKind;\n-use itertools::Itertools;\n use lsp_server::ErrorCode;\n use lsp_types::{\n     CallHierarchyIncomingCall, CallHierarchyIncomingCallsParams, CallHierarchyItem,\n@@ -854,7 +853,7 @@ pub(crate) fn handle_completion_resolve(\n         )?\n         .into_iter()\n         .flat_map(|edit| edit.into_iter().map(|indel| to_proto::text_edit(&line_index, indel)))\n-        .collect_vec();\n+        .collect::<Vec<_>>();\n \n     if !all_edits_are_disjoint(&original_completion, &additional_edits) {\n         return Err(LspError::new(\n@@ -1164,7 +1163,7 @@ pub(crate) fn handle_code_action_resolve(\n }\n \n fn parse_action_id(action_id: &str) -> Result<(usize, SingleResolve), String> {\n-    let id_parts = action_id.split(':').collect_vec();\n+    let id_parts = action_id.split(':').collect::<Vec<_>>();\n     match id_parts.as_slice() {\n         [assist_id_string, assist_kind_string, index_string] => {\n             let assist_kind: AssistKind = assist_kind_string.parse()?;"}]}