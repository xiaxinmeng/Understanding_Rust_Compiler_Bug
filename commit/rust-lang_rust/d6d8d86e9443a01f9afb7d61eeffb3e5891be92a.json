{"sha": "d6d8d86e9443a01f9afb7d61eeffb3e5891be92a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2ZDhkODZlOTQ0M2EwMWY5YWZiN2Q2MWVlZmZiM2U1ODkxYmU5MmE=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-07T08:32:19Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-07T08:32:19Z"}, "message": "Replace &Rc<String> with &str", "tree": {"sha": "32045c8b84d76356fb9f7b7b11adfecb692f0063", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32045c8b84d76356fb9f7b7b11adfecb692f0063"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6d8d86e9443a01f9afb7d61eeffb3e5891be92a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6d8d86e9443a01f9afb7d61eeffb3e5891be92a", "html_url": "https://github.com/rust-lang/rust/commit/d6d8d86e9443a01f9afb7d61eeffb3e5891be92a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6d8d86e9443a01f9afb7d61eeffb3e5891be92a/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0eb8c3212d2ebee66ca1b846c2b8a230e8586e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0eb8c3212d2ebee66ca1b846c2b8a230e8586e5", "html_url": "https://github.com/rust-lang/rust/commit/c0eb8c3212d2ebee66ca1b846c2b8a230e8586e5"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "bc4be2131b7f9e23d972b71655f3ebe6ba448223", "filename": "src/visitor.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d6d8d86e9443a01f9afb7d61eeffb3e5891be92a/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6d8d86e9443a01f9afb7d61eeffb3e5891be92a/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=d6d8d86e9443a01f9afb7d61eeffb3e5891be92a", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::rc::Rc;\n use std::cmp;\n \n use strings::string_buffer::StringBuffer;\n@@ -51,7 +50,7 @@ fn is_extern_crate(item: &ast::Item) -> bool {\n /// Creates a string slice corresponding to the specified span.\n pub struct SnippetProvider<'a> {\n     /// A pointer to the content of the file we are formatting.\n-    big_snippet: &'a Rc<String>,\n+    big_snippet: &'a str,\n     /// A position of the start of `big_snippet`, used as an offset.\n     start_pos: usize,\n }\n@@ -63,7 +62,7 @@ impl<'b, 'a: 'b> SnippetProvider<'a> {\n         Some(&self.big_snippet[start_index..end_index])\n     }\n \n-    pub fn new(start_pos: BytePos, big_snippet: &'a Rc<String>) -> Self {\n+    pub fn new(start_pos: BytePos, big_snippet: &'a str) -> Self {\n         let start_pos = start_pos.to_usize();\n         SnippetProvider {\n             big_snippet,"}]}