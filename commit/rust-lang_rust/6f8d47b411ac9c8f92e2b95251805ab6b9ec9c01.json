{"sha": "6f8d47b411ac9c8f92e2b95251805ab6b9ec9c01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmOGQ0N2I0MTFhYzljOGY5MmUyYjk1MjUxODA1YWI2YjllYzljMDE=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-08-14T09:30:39Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-08-14T09:30:39Z"}, "message": "add a few words on dogfood + update_lints", "tree": {"sha": "34691dff79fa18d25476ba6b58be60f2910c768c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34691dff79fa18d25476ba6b58be60f2910c768c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f8d47b411ac9c8f92e2b95251805ab6b9ec9c01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f8d47b411ac9c8f92e2b95251805ab6b9ec9c01", "html_url": "https://github.com/rust-lang/rust/commit/6f8d47b411ac9c8f92e2b95251805ab6b9ec9c01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f8d47b411ac9c8f92e2b95251805ab6b9ec9c01/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1afc5b6235f42fba70440c7beb29a9e1c6859532", "url": "https://api.github.com/repos/rust-lang/rust/commits/1afc5b6235f42fba70440c7beb29a9e1c6859532", "html_url": "https://github.com/rust-lang/rust/commit/1afc5b6235f42fba70440c7beb29a9e1c6859532"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "eebea413f0d4644136d794b6258148f615a709bb", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6f8d47b411ac9c8f92e2b95251805ab6b9ec9c01/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/6f8d47b411ac9c8f92e2b95251805ab6b9ec9c01/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=6f8d47b411ac9c8f92e2b95251805ab6b9ec9c01", "patch": "@@ -35,6 +35,11 @@ T-middle issues can be more involved and require verifying types. The\n lot of methods that are useful, though one of the most useful would be `expr_ty` (gives the type of\n an AST expression). `match_def_path()` in Clippy's `utils` module can also be useful.\n \n+Should you add a lint, try it on clippy itself using `util/dogfood.sh`. You may find that clippy\n+contains some questionable code itself! Also before making a pull request, please run\n+`util/update_lints.py`, which will update `lib.rs` and `README.md` with the lint declarations. Our\n+travis build actually checks for this.\n+\n ## Contributions\n \n Clippy welcomes contributions from everyone."}]}