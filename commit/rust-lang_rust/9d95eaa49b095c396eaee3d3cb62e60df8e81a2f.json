{"sha": "9d95eaa49b095c396eaee3d3cb62e60df8e81a2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkOTVlYWE0OWIwOTVjMzk2ZWFlZTNkM2NiNjJlNjBkZjhlODFhMmY=", "commit": {"author": {"name": "Afnan Enayet", "email": "afnan@afnan.io", "date": "2020-01-04T01:27:14Z"}, "committer": {"name": "Afnan Enayet", "email": "afnan@afnan.io", "date": "2020-01-13T07:21:02Z"}, "message": "Use `report_in_external_macro` for internal lints\n\nAdd the option to report lints in external macros for rustc internal\nlints", "tree": {"sha": "e03def1cf711d1834bf24688990217db327086db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e03def1cf711d1834bf24688990217db327086db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d95eaa49b095c396eaee3d3cb62e60df8e81a2f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEHFGeT+9XV7+zDGNklO7+H9F4BWsFAl4cGl4ACgkQlO7+H9F4\nBWsEaw//S5hgV/s8ddnfp6vcJtUrXxc5tKIjUX92TNzbZQwsFOxe9M9cL4ACoB0x\nFHV2lmpjLfNBt2sWKy2mAVhWaa/Bkxav6tfkQVQ3EGvX0OHLEHtq6R2APnF50pOC\nOovNNw56sKcyBK2qj8Avovh9nRAGaF5GYnq2fRDas6XWCXgzivH+3htZ8NULneQF\nJ5j4RHSutYtaJiN5+0D3KEO0MQh7WEcc9ktHMfXDt7U+7zAW6rEIdUl2h4pWoKLR\nf0Lj/25KZMf2krEu3xAvVA85gHRGBykjmCQnenH9/8kt5pZGUtQavpvEWloigyxS\n4NIW00cDSHDp5uehPvgG3L1TfG1+AL30YIb4ShqrqYDMA4891hrzyHPqRYkXiQ0m\nJ5Wi3bI60DHU5YX/u/+em0sXGY7SmOkN9AldvCm7+r55L0eaC8QBJpBrs9Jqph/s\nWG0GL+651mDdM/87pwLUM1FiYuGpjWqV4n7t/bf+QEujctvTNFGy2lGSLEeEK3Ss\nDBzTNRjxF8NVMYN3PMGlKiaKvHfA+qQ6BzJJdn/IO4TtrzMzGagmHvlvoX77KLjt\nlKJxPQqE6YUhXODxxZGpYC7nVV/KX91htvS6XJkJvKFXxzRl36Zvr56/VBYguUxv\nrmVJHwE8HOXM+cJQg+ppSmJY7IJ2kX/Gg65n84MhlpbMW8OFqYU=\n=XjS4\n-----END PGP SIGNATURE-----", "payload": "tree e03def1cf711d1834bf24688990217db327086db\nparent e82febc78e5a14356de5f713b904eebef1e86956\nauthor Afnan Enayet <afnan@afnan.io> 1578101234 -0800\ncommitter Afnan Enayet <afnan@afnan.io> 1578900062 -0800\n\nUse `report_in_external_macro` for internal lints\n\nAdd the option to report lints in external macros for rustc internal\nlints\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d95eaa49b095c396eaee3d3cb62e60df8e81a2f", "html_url": "https://github.com/rust-lang/rust/commit/9d95eaa49b095c396eaee3d3cb62e60df8e81a2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d95eaa49b095c396eaee3d3cb62e60df8e81a2f/comments", "author": {"login": "afnanenayet", "id": 1750795, "node_id": "MDQ6VXNlcjE3NTA3OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1750795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afnanenayet", "html_url": "https://github.com/afnanenayet", "followers_url": "https://api.github.com/users/afnanenayet/followers", "following_url": "https://api.github.com/users/afnanenayet/following{/other_user}", "gists_url": "https://api.github.com/users/afnanenayet/gists{/gist_id}", "starred_url": "https://api.github.com/users/afnanenayet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afnanenayet/subscriptions", "organizations_url": "https://api.github.com/users/afnanenayet/orgs", "repos_url": "https://api.github.com/users/afnanenayet/repos", "events_url": "https://api.github.com/users/afnanenayet/events{/privacy}", "received_events_url": "https://api.github.com/users/afnanenayet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "afnanenayet", "id": 1750795, "node_id": "MDQ6VXNlcjE3NTA3OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1750795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afnanenayet", "html_url": "https://github.com/afnanenayet", "followers_url": "https://api.github.com/users/afnanenayet/followers", "following_url": "https://api.github.com/users/afnanenayet/following{/other_user}", "gists_url": "https://api.github.com/users/afnanenayet/gists{/gist_id}", "starred_url": "https://api.github.com/users/afnanenayet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afnanenayet/subscriptions", "organizations_url": "https://api.github.com/users/afnanenayet/orgs", "repos_url": "https://api.github.com/users/afnanenayet/repos", "events_url": "https://api.github.com/users/afnanenayet/events{/privacy}", "received_events_url": "https://api.github.com/users/afnanenayet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e82febc78e5a14356de5f713b904eebef1e86956", "url": "https://api.github.com/repos/rust-lang/rust/commits/e82febc78e5a14356de5f713b904eebef1e86956", "html_url": "https://github.com/rust-lang/rust/commit/e82febc78e5a14356de5f713b904eebef1e86956"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "5a5aedc2e9715b33bff96069e1868ab2b43fa0d7", "filename": "src/librustc_lint/internal.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9d95eaa49b095c396eaee3d3cb62e60df8e81a2f/src%2Flibrustc_lint%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d95eaa49b095c396eaee3d3cb62e60df8e81a2f/src%2Flibrustc_lint%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Finternal.rs?ref=9d95eaa49b095c396eaee3d3cb62e60df8e81a2f", "patch": "@@ -12,7 +12,8 @@ use syntax::ast::{Ident, Item, ItemKind};\n declare_tool_lint! {\n     pub rustc::DEFAULT_HASH_TYPES,\n     Allow,\n-    \"forbid HashMap and HashSet and suggest the FxHash* variants\"\n+    \"forbid HashMap and HashSet and suggest the FxHash* variants\",\n+    report_in_external_macro: true\n }\n \n pub struct DefaultHashTypes {\n@@ -52,19 +53,22 @@ impl EarlyLintPass for DefaultHashTypes {\n declare_tool_lint! {\n     pub rustc::USAGE_OF_TY_TYKIND,\n     Allow,\n-    \"usage of `ty::TyKind` outside of the `ty::sty` module\"\n+    \"usage of `ty::TyKind` outside of the `ty::sty` module\",\n+    report_in_external_macro: true\n }\n \n declare_tool_lint! {\n     pub rustc::TY_PASS_BY_REFERENCE,\n     Allow,\n-    \"passing `Ty` or `TyCtxt` by reference\"\n+    \"passing `Ty` or `TyCtxt` by reference\",\n+    report_in_external_macro: true\n }\n \n declare_tool_lint! {\n     pub rustc::USAGE_OF_QUALIFIED_TY,\n     Allow,\n-    \"using `ty::{Ty,TyCtxt}` instead of importing it\"\n+    \"using `ty::{Ty,TyCtxt}` instead of importing it\",\n+    report_in_external_macro: true\n }\n \n declare_lint_pass!(TyTyKind => ["}, {"sha": "889f6099070aebc863863ff68c56d28157ca4a2f", "filename": "src/librustc_span/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d95eaa49b095c396eaee3d3cb62e60df8e81a2f/src%2Flibrustc_span%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d95eaa49b095c396eaee3d3cb62e60df8e81a2f/src%2Flibrustc_span%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsymbol.rs?ref=9d95eaa49b095c396eaee3d3cb62e60df8e81a2f", "patch": "@@ -1049,6 +1049,7 @@ pub mod kw {\n }\n \n // This module has a very short name because it's used a lot.\n+#[allow(rustc::default_hash_types)]\n pub mod sym {\n     use super::Symbol;\n     use std::convert::TryInto;"}]}