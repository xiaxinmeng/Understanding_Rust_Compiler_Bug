{"sha": "b62a77b4905150b14c8b0fd6e685f528e4f90ea7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2MmE3N2I0OTA1MTUwYjE0YzhiMGZkNmU2ODVmNTI4ZTRmOTBlYTc=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-07-08T16:08:54Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-07-09T09:45:46Z"}, "message": "Add joining slices of slices with a slice separator, not just a single item", "tree": {"sha": "88c53ac0e37edab1f065310f98bc8b5a45974483", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88c53ac0e37edab1f065310f98bc8b5a45974483"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b62a77b4905150b14c8b0fd6e685f528e4f90ea7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b62a77b4905150b14c8b0fd6e685f528e4f90ea7", "html_url": "https://github.com/rust-lang/rust/commit/b62a77b4905150b14c8b0fd6e685f528e4f90ea7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b62a77b4905150b14c8b0fd6e685f528e4f90ea7/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "283f6762caebb723a17ce82e1fc120928697cfb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/283f6762caebb723a17ce82e1fc120928697cfb9", "html_url": "https://github.com/rust-lang/rust/commit/283f6762caebb723a17ce82e1fc120928697cfb9"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "d475c628ff193a9b2232e60bfcf245c24bb806a8", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b62a77b4905150b14c8b0fd6e685f528e4f90ea7/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b62a77b4905150b14c8b0fd6e685f528e4f90ea7/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=b62a77b4905150b14c8b0fd6e685f528e4f90ea7", "patch": "@@ -508,6 +508,7 @@ impl<T> [T] {\n     /// ```\n     /// assert_eq!([\"hello\", \"world\"].join(\" \"), \"hello world\");\n     /// assert_eq!([[1, 2], [3, 4]].join(&0), [1, 2, 0, 3, 4]);\n+    /// assert_eq!([[1, 2], [3, 4]].join(&[0, 0][..]), [1, 2, 0, 0, 3, 4]);\n     /// ```\n     #[stable(feature = \"rename_connect_to_join\", since = \"1.3.0\")]\n     pub fn join<Separator>(&self, sep: Separator) -> <Self as Join<Separator>>::Output\n@@ -654,7 +655,7 @@ impl<T: Clone, V: Borrow<[T]>> Join<&'_ T> for [V] {\n             Some(first) => first,\n             None => return vec![],\n         };\n-        let size = slice.iter().map(|slice| slice.borrow().len()).sum::<usize>() + slice.len() - 1;\n+        let size = slice.iter().map(|v| v.borrow().len()).sum::<usize>() + slice.len() - 1;\n         let mut result = Vec::with_capacity(size);\n         result.extend_from_slice(first.borrow());\n \n@@ -666,6 +667,29 @@ impl<T: Clone, V: Borrow<[T]>> Join<&'_ T> for [V] {\n     }\n }\n \n+#[unstable(feature = \"slice_concat_ext\", issue = \"27747\")]\n+impl<T: Clone, V: Borrow<[T]>> Join<&'_ [T]> for [V] {\n+    type Output = Vec<T>;\n+\n+    fn join(slice: &Self, sep: &[T]) -> Vec<T> {\n+        let mut iter = slice.iter();\n+        let first = match iter.next() {\n+            Some(first) => first,\n+            None => return vec![],\n+        };\n+        let size = slice.iter().map(|v| v.borrow().len()).sum::<usize>() +\n+            sep.len() * (slice.len() - 1);\n+        let mut result = Vec::with_capacity(size);\n+        result.extend_from_slice(first.borrow());\n+\n+        for v in iter {\n+            result.extend_from_slice(sep);\n+            result.extend_from_slice(v.borrow())\n+        }\n+        result\n+    }\n+}\n+\n ////////////////////////////////////////////////////////////////////////////////\n // Standard trait implementations for slices\n ////////////////////////////////////////////////////////////////////////////////"}]}