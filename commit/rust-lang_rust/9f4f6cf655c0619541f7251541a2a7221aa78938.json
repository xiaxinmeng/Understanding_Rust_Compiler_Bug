{"sha": "9f4f6cf655c0619541f7251541a2a7221aa78938", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmNGY2Y2Y2NTVjMDYxOTU0MWY3MjUxNTQxYTJhNzIyMWFhNzg5Mzg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-21T08:04:01Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-21T17:26:43Z"}, "message": "rollup merge of #19965: japaric/remove-wrong-add\n\nTL;DR I wrongly implemented these two ops, namely `\"prefix\" + \"suffix\".to_string()` gives back `\"suffixprefix\"`. Let's remove them.\n\nThe correct implementation of these operations (`lhs.clone().push_str(rhs.as_slice())`) is really wasteful, because the lhs has to be cloned and the rhs gets moved/consumed just to be dropped (no buffer reuse). For this reason, I'd prefer to drop the implementation instead of fixing it. This leaves us with the fact that you'll be able to do `String + &str` but not `&str + String`, which may be unexpected.\n\nr? @aturon\nCloses #19952", "tree": {"sha": "586701ad50aeb360f05956accd057cfa3cb98bf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/586701ad50aeb360f05956accd057cfa3cb98bf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f4f6cf655c0619541f7251541a2a7221aa78938", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f4f6cf655c0619541f7251541a2a7221aa78938", "html_url": "https://github.com/rust-lang/rust/commit/9f4f6cf655c0619541f7251541a2a7221aa78938", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f4f6cf655c0619541f7251541a2a7221aa78938/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8722691abbe521fd6ba7b558dec7273ca7cec6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8722691abbe521fd6ba7b558dec7273ca7cec6d", "html_url": "https://github.com/rust-lang/rust/commit/e8722691abbe521fd6ba7b558dec7273ca7cec6d"}, {"sha": "1a996f93c3e205fa62004686a17f26bd4484cc87", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a996f93c3e205fa62004686a17f26bd4484cc87", "html_url": "https://github.com/rust-lang/rust/commit/1a996f93c3e205fa62004686a17f26bd4484cc87"}], "stats": {"total": 17, "additions": 0, "deletions": 17}, "files": [{"sha": "3837dd703beaeff7b9464fcf929590675ef52916", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9f4f6cf655c0619541f7251541a2a7221aa78938/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f4f6cf655c0619541f7251541a2a7221aa78938/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=9f4f6cf655c0619541f7251541a2a7221aa78938", "patch": "@@ -886,14 +886,6 @@ impl<'a> Add<&'a str, String> for String {\n     }\n }\n \n-#[cfg(not(stage0))]  // NOTE(stage0): Remove cfg after a snapshot\n-impl<'a> Add<String, String> for &'a str {\n-    fn add(self, mut other: String) -> String {\n-        other.push_str(self);\n-        other\n-    }\n-}\n-\n impl ops::Slice<uint, str> for String {\n     #[inline]\n     fn as_slice_<'a>(&'a self) -> &'a str {"}, {"sha": "0222a3689bdb44cb7330939fe662d925974d4658", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9f4f6cf655c0619541f7251541a2a7221aa78938/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f4f6cf655c0619541f7251541a2a7221aa78938/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=9f4f6cf655c0619541f7251541a2a7221aa78938", "patch": "@@ -1356,15 +1356,6 @@ impl<'a, T: Clone> Add<&'a [T], Vec<T>> for Vec<T> {\n     }\n }\n \n-#[cfg(not(stage0))]  // NOTE(stage0): Remove impl after a snapshot\n-impl<'a, T: Clone> Add<Vec<T>, Vec<T>> for &'a [T] {\n-    #[inline]\n-    fn add(self, mut rhs: Vec<T>) -> Vec<T> {\n-        rhs.push_all(self);\n-        rhs\n-    }\n-}\n-\n #[unsafe_destructor]\n impl<T> Drop for Vec<T> {\n     fn drop(&mut self) {"}]}