{"sha": "f3266923fe4c9754bfa628dc4fc97dd4b26bbb3d", "node_id": "C_kwDOAAsO6NoAKGYzMjY2OTIzZmU0Yzk3NTRiZmE2MjhkYzRmYzk3ZGQ0YjI2YmJiM2Q", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-28T11:08:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-28T11:08:31Z"}, "message": "Rollup merge of #99723 - bstrie:wasifd, r=yaahc\n\nAllow using stable os::fd::raw items through unstable os::wasi module\n\nThis fixes a regression from stable to nightly.\n\nCloses #99502.", "tree": {"sha": "c265d814949d49e6d23aeb89b67b6024608041ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c265d814949d49e6d23aeb89b67b6024608041ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3266923fe4c9754bfa628dc4fc97dd4b26bbb3d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi4m4vCRBK7hj4Ov3rIwAAcmQIAHTQSTTm8VUmBD4B2KhSXTz7\nvz5QB1l+w3vPG/6RepGMX9QVFkU9eDRlzJzBGoAxLKIeiVFuXnqMpZKIfZum3blH\nd+xvGNBcSZtDJyuL+OCAU1JgCeyr4CvrRv5KowHI2a/hsE86GQLf4OyL8nY3WmBD\nJNhmlaHmSSgkd+eFtZApZK35DAiYnvpxDcWa7jhuE9MMb5R7XA9o21+Enpc0gy5+\ngewFUzUZo3UNapN+R1v8ky13r2EULgK0brdZxuXO3ToSCpOmZZxfXV0GxABnPSbW\nwT4annbpr8FD/ULenV6+MI5jNmRAbaMRNVjaSc1q4BF8/Wy7cG4rPl6THVoH4iA=\n=SOWK\n-----END PGP SIGNATURE-----\n", "payload": "tree c265d814949d49e6d23aeb89b67b6024608041ac\nparent 91b8b9ba4be1de6f6b974f2994a2b722e5794762\nparent 0eb28abcc99476e1456874872545bf51bb2ff7a0\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1659006511 +0530\ncommitter GitHub <noreply@github.com> 1659006511 +0530\n\nRollup merge of #99723 - bstrie:wasifd, r=yaahc\n\nAllow using stable os::fd::raw items through unstable os::wasi module\n\nThis fixes a regression from stable to nightly.\n\nCloses #99502.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3266923fe4c9754bfa628dc4fc97dd4b26bbb3d", "html_url": "https://github.com/rust-lang/rust/commit/f3266923fe4c9754bfa628dc4fc97dd4b26bbb3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3266923fe4c9754bfa628dc4fc97dd4b26bbb3d/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91b8b9ba4be1de6f6b974f2994a2b722e5794762", "url": "https://api.github.com/repos/rust-lang/rust/commits/91b8b9ba4be1de6f6b974f2994a2b722e5794762", "html_url": "https://github.com/rust-lang/rust/commit/91b8b9ba4be1de6f6b974f2994a2b722e5794762"}, {"sha": "0eb28abcc99476e1456874872545bf51bb2ff7a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0eb28abcc99476e1456874872545bf51bb2ff7a0", "html_url": "https://github.com/rust-lang/rust/commit/0eb28abcc99476e1456874872545bf51bb2ff7a0"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "081915ed148b36be114ec2154b30022dab8c658c", "filename": "library/std/src/os/fd/raw.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3266923fe4c9754bfa628dc4fc97dd4b26bbb3d/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3266923fe4c9754bfa628dc4fc97dd4b26bbb3d/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs?ref=f3266923fe4c9754bfa628dc4fc97dd4b26bbb3d", "patch": "@@ -14,6 +14,7 @@ use crate::os::wasi::io::OwnedFd;\n use crate::sys_common::{AsInner, IntoInner};\n \n /// Raw file descriptors.\n+#[cfg_attr(not(bootstrap), rustc_allowed_through_unstable_modules)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub type RawFd = raw::c_int;\n \n@@ -22,6 +23,7 @@ pub type RawFd = raw::c_int;\n /// This is only available on unix and WASI platforms and must be imported in\n /// order to call the method. Windows platforms have a corresponding\n /// `AsRawHandle` and `AsRawSocket` set of traits.\n+#[cfg_attr(not(bootstrap), rustc_allowed_through_unstable_modules)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait AsRawFd {\n     /// Extracts the raw file descriptor.\n@@ -57,6 +59,7 @@ pub trait AsRawFd {\n \n /// A trait to express the ability to construct an object from a raw file\n /// descriptor.\n+#[cfg_attr(not(bootstrap), rustc_allowed_through_unstable_modules)]\n #[stable(feature = \"from_raw_os\", since = \"1.1.0\")]\n pub trait FromRawFd {\n     /// Constructs a new instance of `Self` from the given raw file\n@@ -100,6 +103,7 @@ pub trait FromRawFd {\n \n /// A trait to express the ability to consume an object and acquire ownership of\n /// its raw file descriptor.\n+#[cfg_attr(not(bootstrap), rustc_allowed_through_unstable_modules)]\n #[stable(feature = \"into_raw_os\", since = \"1.4.0\")]\n pub trait IntoRawFd {\n     /// Consumes this object, returning the raw underlying file descriptor."}, {"sha": "da3b36adad409e037a89a505463c2cb7548afaee", "filename": "library/std/src/os/wasi/io/raw.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f3266923fe4c9754bfa628dc4fc97dd4b26bbb3d/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3266923fe4c9754bfa628dc4fc97dd4b26bbb3d/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Fraw.rs?ref=f3266923fe4c9754bfa628dc4fc97dd4b26bbb3d", "patch": "@@ -2,4 +2,19 @@\n \n #![unstable(feature = \"wasi_ext\", issue = \"71213\")]\n \n+// NOTE: despite the fact that this module is unstable,\n+// stable Rust had the capability to access the stable\n+// re-exported items from os::fd::raw through this\n+// unstable module.\n+// In PR #95956 the stability checker was changed to check\n+// all path segments of an item rather than just the last,\n+// which caused the aforementioned stable usage to regress\n+// (see issue #99502).\n+// As a result, the items in os::fd::raw were given the\n+// rustc_allowed_through_unstable_modules attribute.\n+// No regression tests were added to ensure this property,\n+// as CI is not configured to test wasm32-wasi.\n+// If this module is stabilized,\n+// you may want to remove those attributes\n+// (assuming no other unstable modules need them).\n pub use crate::os::fd::raw::*;"}]}