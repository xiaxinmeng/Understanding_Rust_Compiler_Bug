{"sha": "5ddaece6508aeb376dc8483fba029f538307536e", "node_id": "C_kwDOAAsO6NoAKDVkZGFlY2U2NTA4YWViMzc2ZGM4NDgzZmJhMDI5ZjUzODMwNzUzNmU", "commit": {"author": {"name": "Rageking8", "email": "tomleetyt@gmail.com", "date": "2022-10-04T08:46:12Z"}, "committer": {"name": "Rageking8", "email": "tomleetyt@gmail.com", "date": "2022-10-04T11:13:40Z"}, "message": "slightly improve no return for returning function error", "tree": {"sha": "2bdc09f31a610b8c77bbbb20cb57789f46453857", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bdc09f31a610b8c77bbbb20cb57789f46453857"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ddaece6508aeb376dc8483fba029f538307536e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ddaece6508aeb376dc8483fba029f538307536e", "html_url": "https://github.com/rust-lang/rust/commit/5ddaece6508aeb376dc8483fba029f538307536e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ddaece6508aeb376dc8483fba029f538307536e/comments", "author": {"login": "Rageking8", "id": 106309953, "node_id": "U_kgDOBlYpQQ", "avatar_url": "https://avatars.githubusercontent.com/u/106309953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rageking8", "html_url": "https://github.com/Rageking8", "followers_url": "https://api.github.com/users/Rageking8/followers", "following_url": "https://api.github.com/users/Rageking8/following{/other_user}", "gists_url": "https://api.github.com/users/Rageking8/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rageking8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rageking8/subscriptions", "organizations_url": "https://api.github.com/users/Rageking8/orgs", "repos_url": "https://api.github.com/users/Rageking8/repos", "events_url": "https://api.github.com/users/Rageking8/events{/privacy}", "received_events_url": "https://api.github.com/users/Rageking8/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Rageking8", "id": 106309953, "node_id": "U_kgDOBlYpQQ", "avatar_url": "https://avatars.githubusercontent.com/u/106309953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rageking8", "html_url": "https://github.com/Rageking8", "followers_url": "https://api.github.com/users/Rageking8/followers", "following_url": "https://api.github.com/users/Rageking8/following{/other_user}", "gists_url": "https://api.github.com/users/Rageking8/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rageking8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rageking8/subscriptions", "organizations_url": "https://api.github.com/users/Rageking8/orgs", "repos_url": "https://api.github.com/users/Rageking8/repos", "events_url": "https://api.github.com/users/Rageking8/events{/privacy}", "received_events_url": "https://api.github.com/users/Rageking8/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9f8b4b98503e3f88623eb59d4f20432161b840a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9f8b4b98503e3f88623eb59d4f20432161b840a", "html_url": "https://github.com/rust-lang/rust/commit/d9f8b4b98503e3f88623eb59d4f20432161b840a"}], "stats": {"total": 37, "additions": 18, "deletions": 19}, "files": [{"sha": "1338852e11229d49f5a67a507429db9f48a406ff", "filename": "compiler/rustc_hir_analysis/src/check/fn_ctxt/suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddaece6508aeb376dc8483fba029f538307536e/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ddaece6508aeb376dc8483fba029f538307536e/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs?ref=5ddaece6508aeb376dc8483fba029f538307536e", "patch": "@@ -1122,7 +1122,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             } else {\n                 err.span_suggestion_short(\n                     span_semi,\n-                    \"remove this semicolon\",\n+                    \"remove this semicolon to return this value\",\n                     \"\",\n                     Applicability::MachineApplicable,\n                 );"}, {"sha": "9be0367ae383c4b3b7e018df3c33de76d3ad832e", "filename": "src/test/ui/block-result/consider-removing-last-semi.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr?ref=5ddaece6508aeb376dc8483fba029f538307536e", "patch": "@@ -7,7 +7,7 @@ LL | pub fn f() -> String {\n    |        implicitly returns `()` as its body has no tail or `return` expression\n LL |     0u8;\n LL |     \"bla\".to_string();\n-   |                      - help: remove this semicolon\n+   |                      - help: remove this semicolon to return this value\n \n error[E0308]: mismatched types\n   --> $DIR/consider-removing-last-semi.rs:8:15\n@@ -18,7 +18,7 @@ LL | pub fn g() -> String {\n    |        implicitly returns `()` as its body has no tail or `return` expression\n LL |     \"this won't work\".to_string();\n LL |     \"removeme\".to_string();\n-   |                           - help: remove this semicolon\n+   |                           - help: remove this semicolon to return this value\n \n error[E0308]: mismatched types\n   --> $DIR/consider-removing-last-semi.rs:13:25\n@@ -29,7 +29,7 @@ LL | pub fn macro_tests() -> u32 {\n    |        implicitly returns `()` as its body has no tail or `return` expression\n ...\n LL |     mac!();\n-   |           - help: remove this semicolon\n+   |           - help: remove this semicolon to return this value\n \n error: aborting due to 3 previous errors\n "}, {"sha": "42fb3d3d43d4bf33c67d61a091f1c21c67a68fc8", "filename": "src/test/ui/block-result/issue-11714.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.stderr?ref=5ddaece6508aeb376dc8483fba029f538307536e", "patch": "@@ -7,7 +7,7 @@ LL | fn blah() -> i32 {\n    |    implicitly returns `()` as its body has no tail or `return` expression\n ...\n LL |     ;\n-   |     - help: remove this semicolon\n+   |     - help: remove this semicolon to return this value\n \n error: aborting due to previous error\n "}, {"sha": "2b386d10c53c42c3a70087585b3e6c17a0a8f0d1", "filename": "src/test/ui/block-result/issue-13428.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr?ref=5ddaece6508aeb376dc8483fba029f538307536e", "patch": "@@ -15,7 +15,7 @@ LL | fn bar() -> String {\n    |    implicitly returns `()` as its body has no tail or `return` expression\n LL |     \"foobar\".to_string()\n LL |     ;\n-   |     - help: remove this semicolon\n+   |     - help: remove this semicolon to return this value\n \n error: aborting due to 2 previous errors\n "}, {"sha": "8aa9e952b99018faa3836bf10be4e6c3020c164a", "filename": "src/test/ui/closures/old-closure-expression-remove-semicolon.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fclosures%2Fold-closure-expression-remove-semicolon.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fclosures%2Fold-closure-expression-remove-semicolon.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fold-closure-expression-remove-semicolon.fixed?ref=5ddaece6508aeb376dc8483fba029f538307536e", "patch": "@@ -7,6 +7,6 @@ fn foo() -> i32 {\n fn main() {\n     let _x: i32 = {\n         //~^ ERROR mismatched types\n-        foo() //~ HELP remove this semicolon\n+        foo() //~ HELP remove this semicolon to return this value\n     };\n }"}, {"sha": "912c7a3314ac99655c571d0c9f6db8eb289f1641", "filename": "src/test/ui/closures/old-closure-expression-remove-semicolon.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fclosures%2Fold-closure-expression-remove-semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fclosures%2Fold-closure-expression-remove-semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fold-closure-expression-remove-semicolon.rs?ref=5ddaece6508aeb376dc8483fba029f538307536e", "patch": "@@ -7,6 +7,6 @@ fn foo() -> i32 {\n fn main() {\n     let _x: i32 = {\n         //~^ ERROR mismatched types\n-        foo(); //~ HELP remove this semicolon\n+        foo(); //~ HELP remove this semicolon to return this value\n     };\n }"}, {"sha": "bc54ab4d511a5efcbfb27a79eaa6084943f54c44", "filename": "src/test/ui/closures/old-closure-expression-remove-semicolon.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fclosures%2Fold-closure-expression-remove-semicolon.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fclosures%2Fold-closure-expression-remove-semicolon.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fold-closure-expression-remove-semicolon.stderr?ref=5ddaece6508aeb376dc8483fba029f538307536e", "patch": "@@ -5,7 +5,7 @@ LL |       let _x: i32 = {\n    |  ___________________^\n LL | |\n LL | |         foo();\n-   | |              - help: remove this semicolon\n+   | |              - help: remove this semicolon to return this value\n LL | |     };\n    | |_____^ expected `i32`, found `()`\n "}, {"sha": "4c04bb11351692c81e3db9e01238833c819e977a", "filename": "src/test/ui/coercion/coercion-missing-tail-expected-type.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fcoercion%2Fcoercion-missing-tail-expected-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fcoercion%2Fcoercion-missing-tail-expected-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoercion%2Fcoercion-missing-tail-expected-type.stderr?ref=5ddaece6508aeb376dc8483fba029f538307536e", "patch": "@@ -6,7 +6,7 @@ LL | fn plus_one(x: i32) -> i32 {\n    |    |\n    |    implicitly returns `()` as its body has no tail or `return` expression\n LL |     x + 1;\n-   |          - help: remove this semicolon\n+   |          - help: remove this semicolon to return this value\n \n error[E0308]: mismatched types\n   --> $DIR/coercion-missing-tail-expected-type.rs:8:13\n@@ -16,7 +16,7 @@ LL | fn foo() -> Result<u8, u64> {\n    |    |\n    |    implicitly returns `()` as its body has no tail or `return` expression\n LL |     Ok(1);\n-   |          - help: remove this semicolon\n+   |          - help: remove this semicolon to return this value\n    |\n    = note:   expected enum `Result<u8, u64>`\n            found unit type `()`"}, {"sha": "168ececac31ebb05e4ae02b66e631b660c5be1c2", "filename": "src/test/ui/issues/issue-6458-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fissues%2Fissue-6458-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fissues%2Fissue-6458-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-6458-4.stderr?ref=5ddaece6508aeb376dc8483fba029f538307536e", "patch": "@@ -6,7 +6,7 @@ LL | fn foo(b: bool) -> Result<bool,String> {\n    |    |\n    |    implicitly returns `()` as its body has no tail or `return` expression\n LL |     Err(\"bar\".to_string());\n-   |                           - help: remove this semicolon\n+   |                           - help: remove this semicolon to return this value\n    |\n    = note:   expected enum `Result<bool, String>`\n            found unit type `()`"}, {"sha": "dff859429c9b47b8988ff66178e65205643247db", "filename": "src/test/ui/liveness/liveness-return-last-stmt-semi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fliveness%2Fliveness-return-last-stmt-semi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fliveness%2Fliveness-return-last-stmt-semi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-return-last-stmt-semi.rs?ref=5ddaece6508aeb376dc8483fba029f538307536e", "patch": "@@ -1,4 +1,3 @@\n-//\n // regression test for #8005\n \n macro_rules! test { () => { fn foo() -> i32 { 1; } } }"}, {"sha": "de0843aa637f327fe87cd98161270e4516ce1396", "filename": "src/test/ui/liveness/liveness-return-last-stmt-semi.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fliveness%2Fliveness-return-last-stmt-semi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fliveness%2Fliveness-return-last-stmt-semi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-return-last-stmt-semi.stderr?ref=5ddaece6508aeb376dc8483fba029f538307536e", "patch": "@@ -1,31 +1,31 @@\n error[E0308]: mismatched types\n-  --> $DIR/liveness-return-last-stmt-semi.rs:7:19\n+  --> $DIR/liveness-return-last-stmt-semi.rs:6:19\n    |\n LL | fn no_return() -> i32 {}\n    |    ---------      ^^^ expected `i32`, found `()`\n    |    |\n    |    implicitly returns `()` as its body has no tail or `return` expression\n \n error[E0308]: mismatched types\n-  --> $DIR/liveness-return-last-stmt-semi.rs:9:19\n+  --> $DIR/liveness-return-last-stmt-semi.rs:8:19\n    |\n LL | fn bar(x: u32) -> u32 {\n    |    ---            ^^^ expected `u32`, found `()`\n    |    |\n    |    implicitly returns `()` as its body has no tail or `return` expression\n LL |     x * 2;\n-   |          - help: remove this semicolon\n+   |          - help: remove this semicolon to return this value\n \n error[E0308]: mismatched types\n-  --> $DIR/liveness-return-last-stmt-semi.rs:13:19\n+  --> $DIR/liveness-return-last-stmt-semi.rs:12:19\n    |\n LL | fn baz(x: u64) -> u32 {\n    |    ---            ^^^ expected `u32`, found `()`\n    |    |\n    |    implicitly returns `()` as its body has no tail or `return` expression\n \n error[E0308]: mismatched types\n-  --> $DIR/liveness-return-last-stmt-semi.rs:4:41\n+  --> $DIR/liveness-return-last-stmt-semi.rs:3:41\n    |\n LL | macro_rules! test { () => { fn foo() -> i32 { 1; } } }\n    |                                ---      ^^^ expected `i32`, found `()`"}, {"sha": "00aa7d18a968c3ecaa7758bc6a0ecab0e2edbe64", "filename": "src/test/ui/suggestions/match-with-different-arm-types-as-stmt-instead-of-expr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-with-different-arm-types-as-stmt-instead-of-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5ddaece6508aeb376dc8483fba029f538307536e/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-with-different-arm-types-as-stmt-instead-of-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-with-different-arm-types-as-stmt-instead-of-expr.stderr?ref=5ddaece6508aeb376dc8483fba029f538307536e", "patch": "@@ -7,7 +7,7 @@ LL | fn not_all_paths(a: &str) -> u32 {\n    |    implicitly returns `()` as its body has no tail or `return` expression\n ...\n LL |     };\n-   |      - help: remove this semicolon\n+   |      - help: remove this semicolon to return this value\n \n error[E0308]: `match` arms have incompatible types\n   --> $DIR/match-with-different-arm-types-as-stmt-instead-of-expr.rs:26:14"}]}