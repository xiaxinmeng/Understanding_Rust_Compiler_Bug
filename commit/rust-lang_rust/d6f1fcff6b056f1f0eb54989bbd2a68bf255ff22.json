{"sha": "d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2ZjFmY2ZmNmIwNTZmMWYwZWI1NDk4OWJiZDJhNjhiZjI1NWZmMjI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-10T23:10:08Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-10T23:10:08Z"}, "message": "Add --time-llvm-passes.", "tree": {"sha": "71317080577dd8cac3cb0e0ce48e58960a9d1e96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71317080577dd8cac3cb0e0ce48e58960a9d1e96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22", "html_url": "https://github.com/rust-lang/rust/commit/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "813636d52e1d77785e4ec28c0fd5e5f513d2e020", "url": "https://api.github.com/repos/rust-lang/rust/commits/813636d52e1d77785e4ec28c0fd5e5f513d2e020", "html_url": "https://github.com/rust-lang/rust/commit/813636d52e1d77785e4ec28c0fd5e5f513d2e020"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "50f10a804e2024b0a3732e8b25e33bea85f1704e", "filename": "src/comp/back/Link.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22/src%2Fcomp%2Fback%2FLink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22/src%2Fcomp%2Fback%2FLink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2FLink.rs?ref=d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22", "patch": "@@ -75,11 +75,16 @@ mod Write {\n     }\n \n     fn run_passes(session.session sess, ModuleRef llmod, str output) {\n-        link_intrinsics(sess, llmod);\n \n-        auto pm = mk_pass_manager();\n         auto opts = sess.get_opts();\n \n+        if (opts.time_llvm_passes) {\n+          llvm.LLVMRustEnableTimePasses();\n+        }\n+\n+        link_intrinsics(sess, llmod);\n+\n+        auto pm = mk_pass_manager();\n         auto td = mk_target_data(x86.get_data_layout());\n         llvm.LLVMAddTargetData(td.lltd, pm.llpm);\n \n@@ -165,13 +170,20 @@ mod Write {\n                                          Str.buf(output),\n                                          FileType);\n             llvm.LLVMDisposeModule(llmod);\n+            if (opts.time_llvm_passes) {\n+              llvm.LLVMRustPrintPassTimings();\n+            }\n             ret;\n         }\n \n         llvm.LLVMRunPassManager(pm.llpm, llmod);\n \n         llvm.LLVMWriteBitcodeToFile(llmod, Str.buf(output));\n         llvm.LLVMDisposeModule(llmod);\n+\n+        if (opts.time_llvm_passes) {\n+          llvm.LLVMRustPrintPassTimings();\n+        }\n     }\n }\n "}, {"sha": "9ac219e37111f2dd74c3113791c9e656cd5f770f", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22", "patch": "@@ -157,6 +157,7 @@ options:\n     -c                 compile and assemble, but do not link\n     --save-temps       write intermediate files in addition to normal output\n     --time-passes      time the individual phases of the compiler\n+    --time-llvm-passes time the individual phases of the LLVM backend\n     --sysroot <path>   override the system root (default: rustc's directory)\n     --no-typestate     don't run the typestate pass (unsafe!)\\n\\n\");\n }\n@@ -209,8 +210,8 @@ fn main(vec[str] args) {\n                     optflag(\"O\"), optflag(\"shared\"), optmulti(\"L\"),\n                     optflag(\"S\"), optflag(\"c\"), optopt(\"o\"), optopt(\"g\"),\n                     optflag(\"save-temps\"), optopt(\"sysroot\"),\n-                    optflag(\"time-passes\"), optflag(\"no-typestate\"),\n-                    optflag(\"noverify\"));\n+                    optflag(\"time-passes\"), optflag(\"time-llvm-passes\"),\n+                    optflag(\"no-typestate\"), optflag(\"noverify\"));\n     auto binary = Vec.shift[str](args);\n     auto match;\n     alt (GetOpts.getopts(args, opts)) {\n@@ -254,6 +255,7 @@ fn main(vec[str] args) {\n     auto optimize = opt_present(match, \"O\");\n     auto debuginfo = opt_present(match, \"g\");\n     auto time_passes = opt_present(match, \"time-passes\");\n+    auto time_llvm_passes = opt_present(match, \"time-llvm-passes\");\n     auto run_typestate = !opt_present(match, \"no-typestate\");\n     auto sysroot_opt = GetOpts.opt_maybe_str(match, \"sysroot\");\n \n@@ -271,6 +273,7 @@ fn main(vec[str] args) {\n              run_typestate = run_typestate,\n              save_temps = save_temps,\n              time_passes = time_passes,\n+             time_llvm_passes = time_llvm_passes,\n              output_type = output_type,\n              library_search_paths = library_search_paths,\n              sysroot = sysroot);"}, {"sha": "fd3e9b23596fecc937d24fc8bc3569ef9407f641", "filename": "src/comp/driver/session.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22/src%2Fcomp%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22/src%2Fcomp%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fsession.rs?ref=d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22", "patch": "@@ -32,6 +32,7 @@ type options = rec(bool shared,\n                    bool run_typestate,\n                    bool save_temps,\n                    bool time_passes,\n+                   bool time_llvm_passes,\n                    back.Link.output_type output_type,\n                    vec[str] library_search_paths,\n                    str sysroot);"}, {"sha": "bc7338ffffccbb93eed9047c766b657db37f6bae", "filename": "src/comp/lib/llvm.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22/src%2Fcomp%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22/src%2Fcomp%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Flib%2Fllvm.rs?ref=d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22", "patch": "@@ -872,6 +872,12 @@ native mod llvm = llvm_lib {\n     fn LLVMRustConstSmallInt(TypeRef IntTy, uint N,\n                              Bool SignExtend) -> ValueRef;\n \n+    /** Turn on LLVM pass-timing. */\n+    fn LLVMRustEnableTimePasses();\n+\n+    /** Print the pass timings since static dtors aren't picking them up. */\n+    fn LLVMRustPrintPassTimings();\n+\n     /** Links LLVM modules together. `Src` is destroyed by this call and\n         must never be referenced again. */\n     fn LLVMLinkModules(ModuleRef Dest, ModuleRef Src) -> Bool;"}, {"sha": "2a3d8aeb79eef38578d9496b2cd8a5ee158f4be3", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22", "patch": "@@ -16,6 +16,8 @@\n #include \"llvm/PassManager.h\"\n #include \"llvm/ADT/Triple.h\"\n #include \"llvm/Support/FormattedStream.h\"\n+#include \"llvm/Support/Timer.h\"\n+#include \"llvm/Support/raw_ostream.h\"\n #include \"llvm/Target/TargetMachine.h\"\n #include \"llvm/Target/TargetSelect.h\"\n #include \"llvm/Target/TargetRegistry.h\"\n@@ -121,3 +123,13 @@ extern \"C\" LLVMValueRef LLVMRustConstSmallInt(LLVMTypeRef IntTy, unsigned N,\n                                               LLVMBool SignExtend) {\n   return LLVMConstInt(IntTy, (unsigned long long)N, SignExtend);\n }\n+\n+extern bool llvm::TimePassesIsEnabled;\n+extern \"C\" void LLVMRustEnableTimePasses() {\n+  TimePassesIsEnabled = true;\n+}\n+\n+extern \"C\" void LLVMRustPrintPassTimings() {\n+  raw_fd_ostream OS (2, false); // stderr.\n+  TimerGroup::printAll(OS);\n+}"}, {"sha": "212c5be1ed42d8a97612f0b77e79801c36eeb393", "filename": "src/rustllvm/rustllvm.def.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22/src%2Frustllvm%2Frustllvm.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22/src%2Frustllvm%2Frustllvm.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Frustllvm.def.in?ref=d6f1fcff6b056f1f0eb54989bbd2a68bf255ff22", "patch": "@@ -1,9 +1,11 @@\n LLVMRustCreateMemoryBufferWithContentsOfFile\n+LLVMRustEnableTimePasses\n LLVMRustWriteOutputFile\n LLVMRustGetLastError\n LLVMRustGetHostTriple\n LLVMRustConstSmallInt\n LLVMRustParseBitcode\n+LLVMRustPrintPassTimings\n LLVMLinkModules\n LLVMCreateObjectFile\n LLVMDisposeObjectFile"}]}