{"sha": "60ca61ee660c156e0ff3fe0ee12a8156b5a425fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwY2E2MWVlNjYwYzE1NmUwZmYzZmUwZWUxMmE4MTU2YjVhNDI1ZmQ=", "commit": {"author": {"name": "Beno\u00eet CORTIER", "email": "benoit.cortier@fried-world.eu", "date": "2017-07-01T10:01:39Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-21T12:00:56Z"}, "message": "Improve needless_borrowed_ref and add suggestion to it.", "tree": {"sha": "4dfb329d37ddfecbb57d6b6d68ec105790d780ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dfb329d37ddfecbb57d6b6d68ec105790d780ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60ca61ee660c156e0ff3fe0ee12a8156b5a425fd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlmay3sACgkQpp+NIls6\n19lKoxAAsdsifJQzIyp/pE6CLKnaUgowdyYhONNLMWPoeHVerER9ca4iyzfe1Xzt\n+HcCnkDju04ptqKPVdgU8oH5bYfg6/ZcU7Ydwrlh3fJSIN8xRp8vvImUyWV0Rs9O\nGAJGjWHz7dE52SbKl+TwZ5UnG6SZLGAQjpCSj5j+fbAIf2i1g2p2s5W7D3+sqCcI\nr+5qH8wujM1tEvDgpaRLIOXVGeJLeQXAMvWrpSDU5qfISjF/dNI+vYShkzLNe1Jm\n6rqRhkFeER0QMdFWfSjuApvDRY6TqyWSz5qGTxIPNgJ7X+O2PgciykRRkkomrwQR\nF+PCkppxMnVkIeA00CuuVli5nvwayZz7/tSa6zWHKfxepW4EkxSBBwLGNxVv7fSq\nNJaPFSHRxPePgXVnluwg62rYC2IYxxlf260UaiqBFbeIe+cTkK+AR660vR7M7BxC\nI0ianFpdMNRNEwzyF5Gb9diRJzAFOoBTSGaLb3AXKBKK8GXcaHIEBj9vtsU03waO\nqsjMrAvpPx68owuIYF7msAtewA5z6gxznTHD7wR5euPcSN8PF+j0+E6mZ8JAA1GQ\nBRmHzpeyfmnqJaiaKnXL3MBYsKGLRw55U91s/oeQLU+ziIFE0w5+536o2D+GjZFh\nl2qwXfrLVIEsVWGMf+CN6iMrnq6xg14hi77xk67zyPGCP8TdJLk=\n=5LfF\n-----END PGP SIGNATURE-----", "payload": "tree 4dfb329d37ddfecbb57d6b6d68ec105790d780ab\nparent d170e765de3d8f84dc2a6f918219c8efed01d862\nauthor Beno\u00eet CORTIER <benoit.cortier@fried-world.eu> 1498903299 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1503316856 +0200\n\nImprove needless_borrowed_ref and add suggestion to it.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60ca61ee660c156e0ff3fe0ee12a8156b5a425fd", "html_url": "https://github.com/rust-lang/rust/commit/60ca61ee660c156e0ff3fe0ee12a8156b5a425fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60ca61ee660c156e0ff3fe0ee12a8156b5a425fd/comments", "author": {"login": "CBenoit", "id": 3809077, "node_id": "MDQ6VXNlcjM4MDkwNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3809077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CBenoit", "html_url": "https://github.com/CBenoit", "followers_url": "https://api.github.com/users/CBenoit/followers", "following_url": "https://api.github.com/users/CBenoit/following{/other_user}", "gists_url": "https://api.github.com/users/CBenoit/gists{/gist_id}", "starred_url": "https://api.github.com/users/CBenoit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CBenoit/subscriptions", "organizations_url": "https://api.github.com/users/CBenoit/orgs", "repos_url": "https://api.github.com/users/CBenoit/repos", "events_url": "https://api.github.com/users/CBenoit/events{/privacy}", "received_events_url": "https://api.github.com/users/CBenoit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d170e765de3d8f84dc2a6f918219c8efed01d862", "url": "https://api.github.com/repos/rust-lang/rust/commits/d170e765de3d8f84dc2a6f918219c8efed01d862", "html_url": "https://github.com/rust-lang/rust/commit/d170e765de3d8f84dc2a6f918219c8efed01d862"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "db2c2cc95f86f9b79f3fee0cc3b2a81ddf4af4bc", "filename": "clippy_lints/src/needless_borrowed_ref.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/60ca61ee660c156e0ff3fe0ee12a8156b5a425fd/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60ca61ee660c156e0ff3fe0ee12a8156b5a425fd/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs?ref=60ca61ee660c156e0ff3fe0ee12a8156b5a425fd", "patch": "@@ -3,9 +3,14 @@\n //! This lint is **warn** by default\n \n use rustc::lint::*;\n+<<<<<<< HEAD\n use rustc::hir::{MutImmutable, Pat, PatKind, BindingAnnotation};\n+=======\n+use rustc::hir::{MutImmutable, Pat, PatKind};\n+>>>>>>> e30bf721... Improve needless_borrowed_ref and add suggestion to it.\n use rustc::ty;\n-use utils::{span_lint, in_macro};\n+use utils::{span_lint_and_then, in_macro, snippet};\n+use syntax_pos::{Span, BytePos};\n \n /// **What it does:** Checks for useless borrowed references.\n ///\n@@ -53,9 +58,18 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBorrowedRef {\n             // Pattern's type is a reference. Get the type and mutability of referenced value (tam: TypeAndMut).\n             let ty::TyRef(_, ref tam) = cx.tables.pat_ty(pat).sty,\n             // Only lint immutable refs, because `&mut ref T` may be useful.\n-            tam.mutbl == MutImmutable,\n+            let PatKind::Ref(ref sub_pat, MutImmutable) = pat.node,\n+\n+            // Check sub_pat got a 'ref' keyword.\n+            let ty::TyRef(_, _) = cx.tables.pat_ty(sub_pat).sty,\n         ], {\n-            span_lint(cx, NEEDLESS_BORROWED_REFERENCE, pat.span, \"this pattern takes a reference on something that is being de-referenced\")\n+            let part_to_keep = Span{ lo: pat.span.lo + BytePos(5), hi: pat.span.hi, ctxt: pat.span.ctxt };\n+            span_lint_and_then(cx, NEEDLESS_BORROWED_REFERENCE, pat.span,\n+                               \"this pattern takes a reference on something that is being de-referenced\",\n+                               |db| {\n+                                   let hint = snippet(cx, part_to_keep, \"..\").into_owned();\n+                                   db.span_suggestion(pat.span, \"try removing the `&ref` part and just keep\", hint);\n+                               });\n         }}\n     }\n }"}]}