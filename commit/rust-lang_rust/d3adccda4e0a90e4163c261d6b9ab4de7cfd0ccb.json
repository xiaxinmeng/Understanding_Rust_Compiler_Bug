{"sha": "d3adccda4e0a90e4163c261d6b9ab4de7cfd0ccb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYWRjY2RhNGUwYTkwZTQxNjNjMjYxZDZiOWFiNGRlN2NmZDBjY2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-16T21:46:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-16T21:46:21Z"}, "message": "auto merge of #15696 : Zoxc/rust/redzone, r=alexcrichton\n\nDisabling the redzone is required in x86-64's kernel mode to avoid interrupts trashing the stack.\r\n\r\nI'm not sure if decl_fn is the right place to tag all functions with noredzone. It might have interactions with external functions when linking with bitcode built without -C no-redzone although I see no reason to do that.\r\n\r\nI'm not sure how to write a test inspecting the bitcode output for noredzone attributes on all functions either.", "tree": {"sha": "de751d96f9a6b911890f0bc13ac3fc4ed3cbb0a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de751d96f9a6b911890f0bc13ac3fc4ed3cbb0a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3adccda4e0a90e4163c261d6b9ab4de7cfd0ccb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3adccda4e0a90e4163c261d6b9ab4de7cfd0ccb", "html_url": "https://github.com/rust-lang/rust/commit/d3adccda4e0a90e4163c261d6b9ab4de7cfd0ccb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3adccda4e0a90e4163c261d6b9ab4de7cfd0ccb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06c7ee9c56f7c768be94c89f699527b44be664ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/06c7ee9c56f7c768be94c89f699527b44be664ab", "html_url": "https://github.com/rust-lang/rust/commit/06c7ee9c56f7c768be94c89f699527b44be664ab"}, {"sha": "036b9e8e3e79b6454f8b6dc92b6a2490b3910dc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/036b9e8e3e79b6454f8b6dc92b6a2490b3910dc5", "html_url": "https://github.com/rust-lang/rust/commit/036b9e8e3e79b6454f8b6dc92b6a2490b3910dc5"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "3a59c2bbcc350b09a59709b6f6f4d2956c802431", "filename": "src/librustc/driver/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3adccda4e0a90e4163c261d6b9ab4de7cfd0ccb/src%2Flibrustc%2Fdriver%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3adccda4e0a90e4163c261d6b9ab4de7cfd0ccb/src%2Flibrustc%2Fdriver%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fconfig.rs?ref=d3adccda4e0a90e4163c261d6b9ab4de7cfd0ccb", "patch": "@@ -332,6 +332,8 @@ cgoptions!(\n         \"prefer dynamic linking to static linking\"),\n     no_integrated_as: bool = (false, parse_bool,\n         \"use an external assembler rather than LLVM's integrated one\"),\n+    no_redzone: bool = (false, parse_bool,\n+        \"disable the use of the redzone\"),\n     relocation_model: String = (\"pic\".to_string(), parse_string,\n          \"choose the relocation model to use (llc -relocation-model for details)\"),\n     metadata: Vec<String> = (Vec::new(), parse_list,"}, {"sha": "3ca188cf2813afbdcae39d8e35cda3dd7aa235a7", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d3adccda4e0a90e4163c261d6b9ab4de7cfd0ccb/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3adccda4e0a90e4163c261d6b9ab4de7cfd0ccb/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=d3adccda4e0a90e4163c261d6b9ab4de7cfd0ccb", "patch": "@@ -193,6 +193,14 @@ fn decl_fn(ccx: &CrateContext, name: &str, cc: llvm::CallConv,\n         _ => {}\n     }\n \n+    if ccx.tcx.sess.opts.cg.no_redzone {\n+        unsafe {\n+            llvm::LLVMAddFunctionAttribute(llfn,\n+                                           llvm::FunctionIndex as c_uint,\n+                                           llvm::NoRedZoneAttribute as uint64_t)\n+        }\n+    }\n+\n     llvm::SetFunctionCallConv(llfn, cc);\n     // Function addresses in Rust are never significant, allowing functions to be merged.\n     llvm::SetUnnamedAddr(llfn, true);"}]}