{"sha": "46b547cb5861febd3e0401acb0af6f65be775948", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2YjU0N2NiNTg2MWZlYmQzZTA0MDFhY2IwYWY2ZjY1YmU3NzU5NDg=", "commit": {"author": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-08-20T09:55:41Z"}, "committer": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-08-20T09:56:46Z"}, "message": "Assume same alignment in `RawVec`", "tree": {"sha": "2f69c7ddeabb9648836c2a8a4911c1876711e1dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f69c7ddeabb9648836c2a8a4911c1876711e1dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46b547cb5861febd3e0401acb0af6f65be775948", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46b547cb5861febd3e0401acb0af6f65be775948", "html_url": "https://github.com/rust-lang/rust/commit/46b547cb5861febd3e0401acb0af6f65be775948", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46b547cb5861febd3e0401acb0af6f65be775948/comments", "author": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "303ee3fd8382947d0da7a728c728bc672dc0f7be", "url": "https://api.github.com/repos/rust-lang/rust/commits/303ee3fd8382947d0da7a728c728bc672dc0f7be", "html_url": "https://github.com/rust-lang/rust/commit/303ee3fd8382947d0da7a728c728bc672dc0f7be"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "05382d0b5594edfece3d193fb5d1698b8fdcdab0", "filename": "library/alloc/src/raw_vec.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/46b547cb5861febd3e0401acb0af6f65be775948/library%2Falloc%2Fsrc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46b547cb5861febd3e0401acb0af6f65be775948/library%2Falloc%2Fsrc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fraw_vec.rs?ref=46b547cb5861febd3e0401acb0af6f65be775948", "patch": "@@ -3,6 +3,7 @@\n \n use core::alloc::LayoutErr;\n use core::cmp;\n+use core::intrinsics;\n use core::mem::{self, ManuallyDrop, MaybeUninit};\n use core::ops::Drop;\n use core::ptr::{NonNull, Unique};\n@@ -495,7 +496,11 @@ where\n \n     let memory = if let Some((ptr, old_layout)) = current_memory {\n         debug_assert_eq!(old_layout.align(), new_layout.align());\n-        unsafe { alloc.grow(ptr, old_layout, new_layout) }\n+        unsafe {\n+            // The allocator checks for alignment equality\n+            intrinsics::assume(old_layout.align() == new_layout.align());\n+            alloc.grow(ptr, old_layout, new_layout)\n+        }\n     } else {\n         alloc.alloc(new_layout)\n     };"}]}