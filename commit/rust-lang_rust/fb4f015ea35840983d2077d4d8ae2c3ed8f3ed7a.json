{"sha": "fb4f015ea35840983d2077d4d8ae2c3ed8f3ed7a", "node_id": "C_kwDOAAsO6NoAKGZiNGYwMTVlYTM1ODQwOTgzZDIwNzdkNGQ4YWUyYzNlZDhmM2VkN2E", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-20T06:10:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-20T06:10:33Z"}, "message": "Rollup merge of #109337 - frengor:collect_into_doc, r=scottmcm\n\nImprove `Iterator::collect_into` documentation\n\nThis improves the examples in the documentation of `Iterator::collect_into`, replacing the usages of `println!` with `assert_eq!` as suggested on [IRLO](https://internals.rust-lang.org/t/18534/9).", "tree": {"sha": "9973e7cd501d9024b5f633784f33568c73198469", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9973e7cd501d9024b5f633784f33568c73198469"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb4f015ea35840983d2077d4d8ae2c3ed8f3ed7a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkF/jZCRBK7hj4Ov3rIwAAwfUIAFfWMDU3WAadduS+da5f2wHd\nfml/T2MXVxClDWxqHh0n6fHNBshmhVg2Sfk63XLRIG2YWgZMbWgq3unrlVNc5rRz\naiQKn6P8jtvpNPchEAdshJ9kSDugJ7KUIjlwxQH3oBZqwAJtaRor6qO07Qti9glM\nXmEfRtXhj6yIp6K/qNi+yBRsPuA1S8ZLtVcdZYZB2NN31/fTJ/jS4aSMCVGRUQOo\nOpSU4sFq4/4aZJ7fFq1nVRWAXIL0jKeSvR7TtOos1hNFvk0PhCvJ9vuWGzFwOmQ5\nFN97InuUkV5vEslk9qJRpa9TgpCp0Wr3j/cr4bI07mzw2Ir3wHucmVa9uW/S6JA=\n=k95f\n-----END PGP SIGNATURE-----\n", "payload": "tree 9973e7cd501d9024b5f633784f33568c73198469\nparent 272afbe7f8110007a8530ff2ed10f04d8d2f41c6\nparent 0c51d0dc53e07b3fb61fda3a4369308c1b1322e2\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679292633 +0100\ncommitter GitHub <noreply@github.com> 1679292633 +0100\n\nRollup merge of #109337 - frengor:collect_into_doc, r=scottmcm\n\nImprove `Iterator::collect_into` documentation\n\nThis improves the examples in the documentation of `Iterator::collect_into`, replacing the usages of `println!` with `assert_eq!` as suggested on [IRLO](https://internals.rust-lang.org/t/18534/9).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb4f015ea35840983d2077d4d8ae2c3ed8f3ed7a", "html_url": "https://github.com/rust-lang/rust/commit/fb4f015ea35840983d2077d4d8ae2c3ed8f3ed7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb4f015ea35840983d2077d4d8ae2c3ed8f3ed7a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "272afbe7f8110007a8530ff2ed10f04d8d2f41c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/272afbe7f8110007a8530ff2ed10f04d8d2f41c6", "html_url": "https://github.com/rust-lang/rust/commit/272afbe7f8110007a8530ff2ed10f04d8d2f41c6"}, {"sha": "0c51d0dc53e07b3fb61fda3a4369308c1b1322e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c51d0dc53e07b3fb61fda3a4369308c1b1322e2", "html_url": "https://github.com/rust-lang/rust/commit/0c51d0dc53e07b3fb61fda3a4369308c1b1322e2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6c3030336c6b893d0cf526a784e5956107905bc1", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fb4f015ea35840983d2077d4d8ae2c3ed8f3ed7a/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb4f015ea35840983d2077d4d8ae2c3ed8f3ed7a/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=fb4f015ea35840983d2077d4d8ae2c3ed8f3ed7a", "patch": "@@ -2003,7 +2003,7 @@ pub trait Iterator {\n     /// a.iter().map(|&x| x * 2).collect_into(&mut vec);\n     /// a.iter().map(|&x| x * 10).collect_into(&mut vec);\n     ///\n-    /// assert_eq!(vec![0, 1, 2, 4, 6, 10, 20, 30], vec);\n+    /// assert_eq!(vec, vec![0, 1, 2, 4, 6, 10, 20, 30]);\n     /// ```\n     ///\n     /// `Vec` can have a manual set capacity to avoid reallocating it:\n@@ -2018,7 +2018,7 @@ pub trait Iterator {\n     /// a.iter().map(|&x| x * 10).collect_into(&mut vec);\n     ///\n     /// assert_eq!(6, vec.capacity());\n-    /// println!(\"{:?}\", vec);\n+    /// assert_eq!(vec, vec![2, 4, 6, 10, 20, 30]);\n     /// ```\n     ///\n     /// The returned mutable reference can be used to continue the call chain:\n@@ -2032,12 +2032,12 @@ pub trait Iterator {\n     /// let count = a.iter().collect_into(&mut vec).iter().count();\n     ///\n     /// assert_eq!(count, vec.len());\n-    /// println!(\"Vec len is {}\", count);\n+    /// assert_eq!(vec, vec![1, 2, 3]);\n     ///\n     /// let count = a.iter().collect_into(&mut vec).iter().count();\n     ///\n     /// assert_eq!(count, vec.len());\n-    /// println!(\"Vec len now is {}\", count);\n+    /// assert_eq!(vec, vec![1, 2, 3, 1, 2, 3]);\n     /// ```\n     #[inline]\n     #[unstable(feature = \"iter_collect_into\", reason = \"new API\", issue = \"94780\")]"}]}