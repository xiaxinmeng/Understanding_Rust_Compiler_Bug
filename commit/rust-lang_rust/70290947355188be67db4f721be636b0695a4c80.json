{"sha": "70290947355188be67db4f721be636b0695a4c80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMjkwOTQ3MzU1MTg4YmU2N2RiNGY3MjFiZTYzNmIwNjk1YTRjODA=", "commit": {"author": {"name": "Jamie Turner", "email": "jamwt@pobox.com", "date": "2019-02-25T08:33:44Z"}, "committer": {"name": "Jamie Turner", "email": "jamwt@pobox.com", "date": "2019-02-25T08:41:58Z"}, "message": "Test that binop subtyping in rustc_typeck fixes #27949", "tree": {"sha": "092e466d8d8e5f1e7bede23c74bd353c6665a1b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/092e466d8d8e5f1e7bede23c74bd353c6665a1b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70290947355188be67db4f721be636b0695a4c80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70290947355188be67db4f721be636b0695a4c80", "html_url": "https://github.com/rust-lang/rust/commit/70290947355188be67db4f721be636b0695a4c80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70290947355188be67db4f721be636b0695a4c80/comments", "author": {"login": "jamwt", "id": 61509, "node_id": "MDQ6VXNlcjYxNTA5", "avatar_url": "https://avatars.githubusercontent.com/u/61509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamwt", "html_url": "https://github.com/jamwt", "followers_url": "https://api.github.com/users/jamwt/followers", "following_url": "https://api.github.com/users/jamwt/following{/other_user}", "gists_url": "https://api.github.com/users/jamwt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamwt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamwt/subscriptions", "organizations_url": "https://api.github.com/users/jamwt/orgs", "repos_url": "https://api.github.com/users/jamwt/repos", "events_url": "https://api.github.com/users/jamwt/events{/privacy}", "received_events_url": "https://api.github.com/users/jamwt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamwt", "id": 61509, "node_id": "MDQ6VXNlcjYxNTA5", "avatar_url": "https://avatars.githubusercontent.com/u/61509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamwt", "html_url": "https://github.com/jamwt", "followers_url": "https://api.github.com/users/jamwt/followers", "following_url": "https://api.github.com/users/jamwt/following{/other_user}", "gists_url": "https://api.github.com/users/jamwt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamwt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamwt/subscriptions", "organizations_url": "https://api.github.com/users/jamwt/orgs", "repos_url": "https://api.github.com/users/jamwt/repos", "events_url": "https://api.github.com/users/jamwt/events{/privacy}", "received_events_url": "https://api.github.com/users/jamwt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb1df8c8a7b368c31c3bf58074327c7ae7f54710", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb1df8c8a7b368c31c3bf58074327c7ae7f54710", "html_url": "https://github.com/rust-lang/rust/commit/eb1df8c8a7b368c31c3bf58074327c7ae7f54710"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "e905da72aad70ba91d73d189eeb633ad1ae88ece", "filename": "src/test/run-pass/issues/issue-27949.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/70290947355188be67db4f721be636b0695a4c80/src%2Ftest%2Frun-pass%2Fissues%2Fissue-27949.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70290947355188be67db4f721be636b0695a4c80/src%2Ftest%2Frun-pass%2Fissues%2Fissue-27949.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-27949.rs?ref=70290947355188be67db4f721be636b0695a4c80", "patch": "@@ -0,0 +1,41 @@\n+// run-pass\n+//\n+// At one time, the `==` operator (and other binary operators) did not\n+// support subtyping during type checking, and would therefore require\n+// LHS and RHS to be exactly identical--i.e. to have the same lifetimes.\n+//\n+// This was fixed in 1a7fb7dc78439a704f024609ce3dc0beb1386552.\n+\n+#[derive(Copy, Clone)]\n+struct Input<'a> {\n+    foo: &'a u32\n+}\n+\n+impl <'a> std::cmp::PartialEq<Input<'a>> for Input<'a> {\n+    fn eq(&self, other: &Input<'a>) -> bool {\n+        self.foo == other.foo\n+    }\n+\n+    fn ne(&self, other: &Input<'a>) -> bool {\n+        self.foo != other.foo\n+    }\n+}\n+\n+\n+fn check_equal<'a, 'b>(x: Input<'a>, y: Input<'b>) -> bool {\n+    // Type checking error due to 'a != 'b prior to 1a7fb7dc78\n+    x == y\n+}\n+\n+fn main() {\n+    let i = 1u32;\n+    let j = 1u32;\n+    let k = 2u32;\n+\n+    let input_i = Input { foo: &i };\n+    let input_j = Input { foo: &j };\n+    let input_k = Input { foo: &k };\n+    assert!(check_equal(input_i, input_i));\n+    assert!(check_equal(input_i, input_j));\n+    assert!(!check_equal(input_i, input_k));\n+}"}]}