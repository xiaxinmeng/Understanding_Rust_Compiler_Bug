{"sha": "70597f28f6a97015d3d02ee34a7fa076128f3f32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNTk3ZjI4ZjZhOTcwMTVkM2QwMmVlMzRhN2ZhMDc2MTI4ZjNmMzI=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-01-22T14:30:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-22T14:30:21Z"}, "message": "Rollup merge of #81241 - m-ou-se:force-expr-macro-rules, r=oli-obk\n\nTurn alloc's force_expr macro into a regular macro_rules.\n\nThis turns `alloc`'s `force_expr` macro into a regular `macro_rules`.\n\nOtherwise rust-analyzer doesn't understand `vec![]`. See https://github.com/rust-analyzer/rust-analyzer/issues/7349 and https://github.com/rust-lang/rust/pull/81080#issuecomment-764741721\n\nEdit: See https://github.com/rust-lang/rust/pull/81241#issuecomment-764812660 for a discussion of alternatives.", "tree": {"sha": "6090bb2b16e425582d088922699946897da94ff4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6090bb2b16e425582d088922699946897da94ff4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70597f28f6a97015d3d02ee34a7fa076128f3f32", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgCuF9CRBK7hj4Ov3rIwAAdHIIAD+x3bzfxHHK2van1Ex6G8yT\nPINq2MSjeW88z+h1QmPqthA8yeKPftm3Tda2GsN9cItj4D2DXpdZj/gIJm4qzefx\nVyGLlMuTTkxQgpTaSL25XsyE8g3yyQgIp3OjTXs5/BvnR3C4axMoXg+WnxkSA913\nqzGVQVUD8/uFbJNPPiVIqVVksYlALJ5Wq1pyFw2THWalmdgGvZfTMwyWKVHooKiF\nSlPTHyElE0KWE0KDXUYMvJl7LzB6NQt3gLezzYdphry+4vwImLcm8+1T638ZHUmA\nrqeCdGlgB95bp0lfdC6RWajOMs76mC01Wl45H7yy0gSw0LnXfIMY1v38N2qzb8o=\n=a3uQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 6090bb2b16e425582d088922699946897da94ff4\nparent 3682a06dcff54a6b9188fd4395e26b316c7652f7\nparent 1934eaf6d87df0eb557e80f9c6a63af8569c48bd\nauthor Mara Bos <m-ou.se@m-ou.se> 1611325821 +0000\ncommitter GitHub <noreply@github.com> 1611325821 +0000\n\nRollup merge of #81241 - m-ou-se:force-expr-macro-rules, r=oli-obk\n\nTurn alloc's force_expr macro into a regular macro_rules.\n\nThis turns `alloc`'s `force_expr` macro into a regular `macro_rules`.\n\nOtherwise rust-analyzer doesn't understand `vec![]`. See https://github.com/rust-analyzer/rust-analyzer/issues/7349 and https://github.com/rust-lang/rust/pull/81080#issuecomment-764741721\n\nEdit: See https://github.com/rust-lang/rust/pull/81241#issuecomment-764812660 for a discussion of alternatives.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70597f28f6a97015d3d02ee34a7fa076128f3f32", "html_url": "https://github.com/rust-lang/rust/commit/70597f28f6a97015d3d02ee34a7fa076128f3f32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70597f28f6a97015d3d02ee34a7fa076128f3f32/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3682a06dcff54a6b9188fd4395e26b316c7652f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3682a06dcff54a6b9188fd4395e26b316c7652f7", "html_url": "https://github.com/rust-lang/rust/commit/3682a06dcff54a6b9188fd4395e26b316c7652f7"}, {"sha": "1934eaf6d87df0eb557e80f9c6a63af8569c48bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/1934eaf6d87df0eb557e80f9c6a63af8569c48bd", "html_url": "https://github.com/rust-lang/rust/commit/1934eaf6d87df0eb557e80f9c6a63af8569c48bd"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "d7ae353282e799decf035238000f86db0420b5cd", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/70597f28f6a97015d3d02ee34a7fa076128f3f32/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70597f28f6a97015d3d02ee34a7fa076128f3f32/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=70597f28f6a97015d3d02ee34a7fa076128f3f32", "patch": "@@ -189,11 +189,4 @@ pub mod vec;\n #[unstable(feature = \"liballoc_internals\", issue = \"none\", reason = \"implementation detail\")]\n pub mod __export {\n     pub use core::format_args;\n-\n-    /// Force AST node to an expression to improve diagnostics in pattern position.\n-    #[rustc_macro_transparency = \"semitransparent\"]\n-    #[unstable(feature = \"liballoc_internals\", issue = \"none\", reason = \"implementation detail\")]\n-    pub macro force_expr($e:expr) {\n-        $e\n-    }\n }"}, {"sha": "f1e3ee97ccc399f39ac7a9ff01c22c67f24a45f3", "filename": "library/alloc/src/macros.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/70597f28f6a97015d3d02ee34a7fa076128f3f32/library%2Falloc%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70597f28f6a97015d3d02ee34a7fa076128f3f32/library%2Falloc%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fmacros.rs?ref=70597f28f6a97015d3d02ee34a7fa076128f3f32", "patch": "@@ -40,13 +40,13 @@\n #[allow_internal_unstable(box_syntax, liballoc_internals)]\n macro_rules! vec {\n     () => (\n-        $crate::__export::force_expr!($crate::vec::Vec::new())\n+        $crate::__rust_force_expr!($crate::vec::Vec::new())\n     );\n     ($elem:expr; $n:expr) => (\n-        $crate::__export::force_expr!($crate::vec::from_elem($elem, $n))\n+        $crate::__rust_force_expr!($crate::vec::from_elem($elem, $n))\n     );\n     ($($x:expr),+ $(,)?) => (\n-        $crate::__export::force_expr!(<[_]>::into_vec(box [$($x),+]))\n+        $crate::__rust_force_expr!(<[_]>::into_vec(box [$($x),+]))\n     );\n }\n \n@@ -111,3 +111,13 @@ macro_rules! format {\n         res\n     }}\n }\n+\n+/// Force AST node to an expression to improve diagnostics in pattern position.\n+#[doc(hidden)]\n+#[macro_export]\n+#[unstable(feature = \"liballoc_internals\", issue = \"none\", reason = \"implementation detail\")]\n+macro_rules! __rust_force_expr {\n+    ($e:expr) => {\n+        $e\n+    };\n+}"}]}