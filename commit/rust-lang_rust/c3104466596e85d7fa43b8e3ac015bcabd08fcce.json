{"sha": "c3104466596e85d7fa43b8e3ac015bcabd08fcce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMTA0NDY2NTk2ZTg1ZDdmYTQzYjhlM2FjMDE1YmNhYmQwOGZjY2U=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-06T09:03:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-06T09:03:38Z"}, "message": "Merge #7174\n\n7174: Normalize line endings when formatting r=matklad a=Jesse-Bakker\n\nFixes #7166\n\n\nCo-authored-by: Jesse Bakker <github@jessebakker.com>", "tree": {"sha": "78a5476e17bcc07087dc7a7311e42fb2bce64aa0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78a5476e17bcc07087dc7a7311e42fb2bce64aa0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3104466596e85d7fa43b8e3ac015bcabd08fcce", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf9XzqCRBK7hj4Ov3rIwAAdHIIAEPLfEbfOH2ONOVksmu2qbOi\nhT3ciffeSzqWXeWSt68bmV7TpTcmY+vYtEiCLsSzV59RkghHtdZjqLURa7irjTAk\nA5atSkomQEz38K/uJefUj3Ne60/DSrCNzM0493cQ6OhAPiEj8JII9dJyMdmi73XB\nZOGvZVKTeLBPVrBrZJPy3KmlA5OjPybdVJ7/E+IXczTIWQ9z9L9CHWnZJP+WBPsq\nXckbxzXIOwiomWNlckPzRqWMrdSKqBQy1Qm2wFtExEoqFRXZ5TfQqTIcsg54Oez4\n3T2OPRheevDg8hdVJM84VOL5n/vqrlq94BeDRGZ4bM+PECYYQ38nhI3+xKiwb5E=\n=T3DP\n-----END PGP SIGNATURE-----\n", "payload": "tree 78a5476e17bcc07087dc7a7311e42fb2bce64aa0\nparent 861a54727003e054629b5bca5d94f8e7a4554cef\nparent c49d5f757cccc7fc2ef02f6a8b3cf8a459c8f326\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1609923818 +0000\ncommitter GitHub <noreply@github.com> 1609923818 +0000\n\nMerge #7174\n\n7174: Normalize line endings when formatting r=matklad a=Jesse-Bakker\n\nFixes #7166\n\n\nCo-authored-by: Jesse Bakker <github@jessebakker.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3104466596e85d7fa43b8e3ac015bcabd08fcce", "html_url": "https://github.com/rust-lang/rust/commit/c3104466596e85d7fa43b8e3ac015bcabd08fcce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3104466596e85d7fa43b8e3ac015bcabd08fcce/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "861a54727003e054629b5bca5d94f8e7a4554cef", "url": "https://api.github.com/repos/rust-lang/rust/commits/861a54727003e054629b5bca5d94f8e7a4554cef", "html_url": "https://github.com/rust-lang/rust/commit/861a54727003e054629b5bca5d94f8e7a4554cef"}, {"sha": "c49d5f757cccc7fc2ef02f6a8b3cf8a459c8f326", "url": "https://api.github.com/repos/rust-lang/rust/commits/c49d5f757cccc7fc2ef02f6a8b3cf8a459c8f326", "html_url": "https://github.com/rust-lang/rust/commit/c49d5f757cccc7fc2ef02f6a8b3cf8a459c8f326"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "071b34cda5ab93529ace3fbf9e9598dec01dd09a", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c3104466596e85d7fa43b8e3ac015bcabd08fcce/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3104466596e85d7fa43b8e3ac015bcabd08fcce/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=c3104466596e85d7fa43b8e3ac015bcabd08fcce", "patch": "@@ -31,12 +31,13 @@ use serde_json::to_value;\n use stdx::{format_to, split_once};\n use syntax::{algo, ast, AstNode, TextRange, TextSize};\n \n-use crate::diff::diff;\n use crate::{\n     cargo_target_spec::CargoTargetSpec,\n     config::RustfmtConfig,\n+    diff::diff,\n     from_json, from_proto,\n     global_state::{GlobalState, GlobalStateSnapshot},\n+    line_endings::LineEndings,\n     lsp_ext::{self, InlayHint, InlayHintsParams},\n     lsp_utils::all_edits_are_disjoint,\n     to_proto, LspError, Result,\n@@ -906,14 +907,25 @@ pub(crate) fn handle_formatting(\n         }\n     }\n \n-    if *file == captured_stdout {\n+    let (new_text, new_line_endings) = LineEndings::normalize(captured_stdout);\n+\n+    if file_line_endings != new_line_endings {\n+        // If line endings are different, send the entire file.\n+        // Diffing would not work here, as the line endings might be the only\n+        // difference.\n+        Ok(Some(to_proto::text_edit_vec(\n+            &file_line_index,\n+            new_line_endings,\n+            TextEdit::replace(TextRange::up_to(TextSize::of(&*file)), new_text),\n+        )))\n+    } else if *file == new_text {\n         // The document is already formatted correctly -- no edits needed.\n         Ok(None)\n     } else {\n         Ok(Some(to_proto::text_edit_vec(\n             &file_line_index,\n             file_line_endings,\n-            diff(&file, &captured_stdout),\n+            diff(&file, &new_text),\n         )))\n     }\n }"}]}