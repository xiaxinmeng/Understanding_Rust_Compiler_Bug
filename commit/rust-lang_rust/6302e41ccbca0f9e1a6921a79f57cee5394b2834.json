{"sha": "6302e41ccbca0f9e1a6921a79f57cee5394b2834", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMDJlNDFjY2JjYTBmOWUxYTY5MjFhNzlmNTdjZWU1Mzk0YjI4MzQ=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-10-01T20:27:10Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-10-01T20:27:25Z"}, "message": "Improve test coverage of `hir` comparison", "tree": {"sha": "0f543c001659bb3fdb99e21b703dc44152fa37df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f543c001659bb3fdb99e21b703dc44152fa37df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6302e41ccbca0f9e1a6921a79f57cee5394b2834", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJX8BwvAAoJEF5CfHlMukXo9X8P/R8nOX4AXYK3hTP+JORlFkE9\nrulnzfYa796VG8nz/jdl8k/fs7tV4Hm+ZcGobhWVttIpIPKWzDmOiZ/IUqroqeqm\npB+S/UaqwLbPMnzMNDKB9lUTUZhQ/bhvOjVGwmt5B1kWv2plQXhbDA+LvVFvDU+i\n/TTE8a41jYpzki+8IWQNr0LNu/FWN3cmjRc0P+Y2n+cQfbZxokjfML4JB2cMgq10\nJqXAkKlJCeur+Gi4FVwHK4Wj+cIj8iNQjIQi3z7LoJ8POJ73c9Es5xBJgz4FwlnW\nfSVMeGrCqlWzsFEz6o4ZliEssI9wMkKCp+ky0eGyF71cqST/1LlpvvAVa1vkmUwR\nHAQb/Nu2qGTYsIZ5NhnjY/F3cOm696tYr+NTmBn8Szf28gG4zbRwGXw4VJ19ODKr\nCtfwWZlHwnICs2RVq8CiEW8MSZ2nBx10u9xP+DyBIGYKXMJjqZG5Y1X9kxEfmmHt\nctkF+sB/6Rl/vGczmpg3xyhzabUi61sHsahky2XYYHwHvy5kZG28KX3qPVXiiId9\nVstR4UruWe6z60zD3bilnGFjuTyl0mRTKRlZ/S4YSYZdKLMIYNUBjykB1mp3nV/Y\nvvvhcbFC5pR9QFArWptXpFuG1Pl3RT0CMsO5ZCXb5Jnj/0Iek13Skxz56CQlzChu\nQVV5VUYAc2+N+pGdAA7L\n=FIwG\n-----END PGP SIGNATURE-----", "payload": "tree 0f543c001659bb3fdb99e21b703dc44152fa37df\nparent e036a8145a8ddb7a6d3c0185104b0c11539a5946\nauthor mcarton <cartonmartin+git@gmail.com> 1475353630 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1475353645 +0200\n\nImprove test coverage of `hir` comparison\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6302e41ccbca0f9e1a6921a79f57cee5394b2834", "html_url": "https://github.com/rust-lang/rust/commit/6302e41ccbca0f9e1a6921a79f57cee5394b2834", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6302e41ccbca0f9e1a6921a79f57cee5394b2834/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e036a8145a8ddb7a6d3c0185104b0c11539a5946", "url": "https://api.github.com/repos/rust-lang/rust/commits/e036a8145a8ddb7a6d3c0185104b0c11539a5946", "html_url": "https://github.com/rust-lang/rust/commit/e036a8145a8ddb7a6d3c0185104b0c11539a5946"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "c84c1062072b258936b216d6b4dee4453e3cb552", "filename": "tests/compile-fail/copies.rs", "status": "modified", "additions": 51, "deletions": 2, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/6302e41ccbca0f9e1a6921a79f57cee5394b2834/tests%2Fcompile-fail%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6302e41ccbca0f9e1a6921a79f57cee5394b2834/tests%2Fcompile-fail%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fcopies.rs?ref=6302e41ccbca0f9e1a6921a79f57cee5394b2834", "patch": "@@ -48,6 +48,13 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n         Foo { bar: 43 };\n     }\n \n+    if true {\n+        ();\n+    }\n+    else {\n+        ()\n+    }\n+\n     if true {\n         0..10;\n     }\n@@ -66,11 +73,17 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n     let _ = if true {\n         //~^NOTE same as this\n         foo();\n-        42\n+        let mut a = 42 + [23].len() as i32;\n+        a += 7;\n+        a = -31-a;\n+        a\n     }\n     else { //~ERROR this `if` has identical blocks\n         foo();\n-        42\n+        let mut a = 42 + [23].len() as i32;\n+        a += 7;\n+        a = -31-a;\n+        a\n     };\n \n     if true {\n@@ -85,6 +98,28 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n         42\n     };\n \n+    if true {\n+        //~^NOTE same as this\n+        for _ in &[42] {\n+            let foo: &Option<_> = &Some::<u8>(42);\n+            if true {\n+                break;\n+            } else {\n+                continue;\n+            }\n+        }\n+    }\n+    else { //~ERROR this `if` has identical blocks\n+        for _ in &[42] {\n+            let foo: &Option<_> = &Some::<u8>(42);\n+            if true {\n+                break;\n+            } else {\n+                continue;\n+            }\n+        }\n+    }\n+\n     if true {\n         //~^NOTE same as this\n         let bar = if true {\n@@ -167,6 +202,20 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n         if let (.., 1, 3) = (1, 2, 3) {}\n     }\n \n+    if true {\n+        if let Some(42) = None {}\n+    }\n+    else {\n+        if let Option::Some(42) = None {}\n+    }\n+\n+    if true {\n+        if let Some(42) = None::<u8> {}\n+    }\n+    else {\n+        if let Some(42) = None {}\n+    }\n+\n     if true {\n         if let Some(a) = Some(42) {}\n     }"}]}