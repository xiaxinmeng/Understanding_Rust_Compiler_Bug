{"sha": "38bf999f4a5337022211c9b990fcb7dfe0bccf32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4YmY5OTlmNGE1MzM3MDIyMjExYzliOTkwZmNiN2RmZTBiY2NmMzI=", "commit": {"author": {"name": "Jonas Hietala", "email": "tradet.h@gmail.com", "date": "2014-09-04T07:01:51Z"}, "committer": {"name": "Jonas Hietala", "email": "tradet.h@gmail.com", "date": "2014-09-04T07:01:51Z"}, "message": "Print file permissions with 4 digits.", "tree": {"sha": "6deab8e01317ee0e7cb9ed1989915e88cd938114", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6deab8e01317ee0e7cb9ed1989915e88cd938114"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38bf999f4a5337022211c9b990fcb7dfe0bccf32", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38bf999f4a5337022211c9b990fcb7dfe0bccf32", "html_url": "https://github.com/rust-lang/rust/commit/38bf999f4a5337022211c9b990fcb7dfe0bccf32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38bf999f4a5337022211c9b990fcb7dfe0bccf32/comments", "author": {"login": "treeman", "id": 162027, "node_id": "MDQ6VXNlcjE2MjAyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treeman", "html_url": "https://github.com/treeman", "followers_url": "https://api.github.com/users/treeman/followers", "following_url": "https://api.github.com/users/treeman/following{/other_user}", "gists_url": "https://api.github.com/users/treeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/treeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treeman/subscriptions", "organizations_url": "https://api.github.com/users/treeman/orgs", "repos_url": "https://api.github.com/users/treeman/repos", "events_url": "https://api.github.com/users/treeman/events{/privacy}", "received_events_url": "https://api.github.com/users/treeman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "treeman", "id": 162027, "node_id": "MDQ6VXNlcjE2MjAyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treeman", "html_url": "https://github.com/treeman", "followers_url": "https://api.github.com/users/treeman/followers", "following_url": "https://api.github.com/users/treeman/following{/other_user}", "gists_url": "https://api.github.com/users/treeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/treeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treeman/subscriptions", "organizations_url": "https://api.github.com/users/treeman/orgs", "repos_url": "https://api.github.com/users/treeman/repos", "events_url": "https://api.github.com/users/treeman/events{/privacy}", "received_events_url": "https://api.github.com/users/treeman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fca8a1d1510e8a526981eadd3c3fd221b501e6d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/fca8a1d1510e8a526981eadd3c3fd221b501e6d6", "html_url": "https://github.com/rust-lang/rust/commit/fca8a1d1510e8a526981eadd3c3fd221b501e6d6"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "3d6bb96063ee1fe4d44b953e7eb13d4bc1647df0", "filename": "src/libstd/io/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38bf999f4a5337022211c9b990fcb7dfe0bccf32/src%2Flibstd%2Fio%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38bf999f4a5337022211c9b990fcb7dfe0bccf32/src%2Flibstd%2Fio%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ffs.rs?ref=38bf999f4a5337022211c9b990fcb7dfe0bccf32", "patch": "@@ -1274,7 +1274,7 @@ mod test {\n \n         error!(result, \"couldn't recursively mkdir\");\n         error!(result, \"couldn't create directory\");\n-        error!(result, \"mode=700\");\n+        error!(result, \"mode=0700\");\n         error!(result, format!(\"path={}\", file.display()));\n     })\n "}, {"sha": "c7996c549f474fb7dbaa1f3b3af7178552e51fc3", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/38bf999f4a5337022211c9b990fcb7dfe0bccf32/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38bf999f4a5337022211c9b990fcb7dfe0bccf32/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=38bf999f4a5337022211c9b990fcb7dfe0bccf32", "patch": "@@ -1838,7 +1838,7 @@ impl Default for FilePermission {\n impl fmt::Show for FilePermission {\n     fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {\n         formatter.fill = '0';\n-        formatter.width = Some(3);\n+        formatter.width = Some(4);\n         (&self.bits as &fmt::Octal).fmt(formatter)\n     }\n }\n@@ -1949,13 +1949,13 @@ mod tests {\n     fn test_show() {\n         use super::*;\n \n-        assert_eq!(format!(\"{}\", UserRead), \"400\".to_string());\n-        assert_eq!(format!(\"{}\", UserFile), \"644\".to_string());\n-        assert_eq!(format!(\"{}\", UserExec), \"755\".to_string());\n-        assert_eq!(format!(\"{}\", UserRWX),  \"700\".to_string());\n-        assert_eq!(format!(\"{}\", GroupRWX), \"070\".to_string());\n-        assert_eq!(format!(\"{}\", OtherRWX), \"007\".to_string());\n-        assert_eq!(format!(\"{}\", AllPermissions), \"777\".to_string());\n-        assert_eq!(format!(\"{}\", UserRead | UserWrite | OtherWrite), \"602\".to_string());\n+        assert_eq!(format!(\"{}\", UserRead), \"0400\".to_string());\n+        assert_eq!(format!(\"{}\", UserFile), \"0644\".to_string());\n+        assert_eq!(format!(\"{}\", UserExec), \"0755\".to_string());\n+        assert_eq!(format!(\"{}\", UserRWX),  \"0700\".to_string());\n+        assert_eq!(format!(\"{}\", GroupRWX), \"0070\".to_string());\n+        assert_eq!(format!(\"{}\", OtherRWX), \"0007\".to_string());\n+        assert_eq!(format!(\"{}\", AllPermissions), \"0777\".to_string());\n+        assert_eq!(format!(\"{}\", UserRead | UserWrite | OtherWrite), \"0602\".to_string());\n     }\n }"}]}