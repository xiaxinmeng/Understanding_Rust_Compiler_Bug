{"sha": "801e5b453caca90f1d6c283f700a113e18540c1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwMWU1YjQ1M2NhY2E5MGYxZDZjMjgzZjcwMGExMTNlMTg1NDBjMWU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-10-06T17:20:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-10-06T17:20:56Z"}, "message": "Add test makr", "tree": {"sha": "da60bbbcdf00c510a426ac6407e366a7f1f30f3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da60bbbcdf00c510a426ac6407e366a7f1f30f3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/801e5b453caca90f1d6c283f700a113e18540c1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/801e5b453caca90f1d6c283f700a113e18540c1e", "html_url": "https://github.com/rust-lang/rust/commit/801e5b453caca90f1d6c283f700a113e18540c1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/801e5b453caca90f1d6c283f700a113e18540c1e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec1f4599809b6e1b10418fa78e1d7bfc3c817319", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec1f4599809b6e1b10418fa78e1d7bfc3c817319", "html_url": "https://github.com/rust-lang/rust/commit/ec1f4599809b6e1b10418fa78e1d7bfc3c817319"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "02613c4c432b61bf47bf1929b32af74c801060a1", "filename": "crates/hir_def/src/find_path.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/801e5b453caca90f1d6c283f700a113e18540c1e/crates%2Fhir_def%2Fsrc%2Ffind_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/801e5b453caca90f1d6c283f700a113e18540c1e/crates%2Fhir_def%2Fsrc%2Ffind_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ffind_path.rs?ref=801e5b453caca90f1d6c283f700a113e18540c1e", "patch": "@@ -222,6 +222,7 @@ fn find_path_inner(\n                     best_path_len - 1,\n                     prefixed,\n                 )?;\n+                mark::hit!(partially_imported);\n                 path.segments.push(info.path.segments.last().unwrap().clone());\n                 Some(path)\n             })\n@@ -515,6 +516,7 @@ mod tests {\n \n     #[test]\n     fn partially_imported() {\n+        mark::check!(partially_imported);\n         // Tests that short paths are used even for external items, when parts of the path are\n         // already in scope.\n         let code = r#\""}]}