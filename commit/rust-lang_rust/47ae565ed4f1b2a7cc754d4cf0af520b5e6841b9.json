{"sha": "47ae565ed4f1b2a7cc754d4cf0af520b5e6841b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3YWU1NjVlZDRmMWIyYTdjYzc1NGQ0Y2YwYWY1MjBiNWU2ODQxYjk=", "commit": {"author": {"name": "Andreas Molzer", "email": "andreas.molzer@gmx.de", "date": "2020-01-26T20:52:04Z"}, "committer": {"name": "Andreas Molzer", "email": "andreas.molzer@gmx.de", "date": "2020-01-26T20:52:04Z"}, "message": "Add a method to query the capacity of a BufWriter", "tree": {"sha": "b8ef37061264b1fd26c5dd779a315698f6544226", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8ef37061264b1fd26c5dd779a315698f6544226"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47ae565ed4f1b2a7cc754d4cf0af520b5e6841b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47ae565ed4f1b2a7cc754d4cf0af520b5e6841b9", "html_url": "https://github.com/rust-lang/rust/commit/47ae565ed4f1b2a7cc754d4cf0af520b5e6841b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47ae565ed4f1b2a7cc754d4cf0af520b5e6841b9/comments", "author": {"login": "HeroicKatora", "id": 5550310, "node_id": "MDQ6VXNlcjU1NTAzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5550310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HeroicKatora", "html_url": "https://github.com/HeroicKatora", "followers_url": "https://api.github.com/users/HeroicKatora/followers", "following_url": "https://api.github.com/users/HeroicKatora/following{/other_user}", "gists_url": "https://api.github.com/users/HeroicKatora/gists{/gist_id}", "starred_url": "https://api.github.com/users/HeroicKatora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HeroicKatora/subscriptions", "organizations_url": "https://api.github.com/users/HeroicKatora/orgs", "repos_url": "https://api.github.com/users/HeroicKatora/repos", "events_url": "https://api.github.com/users/HeroicKatora/events{/privacy}", "received_events_url": "https://api.github.com/users/HeroicKatora/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HeroicKatora", "id": 5550310, "node_id": "MDQ6VXNlcjU1NTAzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5550310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HeroicKatora", "html_url": "https://github.com/HeroicKatora", "followers_url": "https://api.github.com/users/HeroicKatora/followers", "following_url": "https://api.github.com/users/HeroicKatora/following{/other_user}", "gists_url": "https://api.github.com/users/HeroicKatora/gists{/gist_id}", "starred_url": "https://api.github.com/users/HeroicKatora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HeroicKatora/subscriptions", "organizations_url": "https://api.github.com/users/HeroicKatora/orgs", "repos_url": "https://api.github.com/users/HeroicKatora/repos", "events_url": "https://api.github.com/users/HeroicKatora/events{/privacy}", "received_events_url": "https://api.github.com/users/HeroicKatora/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "698fcd38fa9548e64a2092ff48c9d15ceb57d40c", "url": "https://api.github.com/repos/rust-lang/rust/commits/698fcd38fa9548e64a2092ff48c9d15ceb57d40c", "html_url": "https://github.com/rust-lang/rust/commit/698fcd38fa9548e64a2092ff48c9d15ceb57d40c"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "3d644b13f436147625527ca25458279f4af650bc", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/47ae565ed4f1b2a7cc754d4cf0af520b5e6841b9/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47ae565ed4f1b2a7cc754d4cf0af520b5e6841b9/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=47ae565ed4f1b2a7cc754d4cf0af520b5e6841b9", "patch": "@@ -576,6 +576,25 @@ impl<W: Write> BufWriter<W> {\n         &self.buf\n     }\n \n+    /// Returns the number of bytes the internal buffer can hold without flushing.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```no_run\n+    /// use std::io::BufWriter;\n+    /// use std::net::TcpStream;\n+    ///\n+    /// let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").unwrap());\n+    ///\n+    /// // Check the capacity of the inner buffer\n+    /// let capacity = buf_writer.capacity();\n+    /// // Calculate how many bytes can be written without flushing\n+    /// let without_flush = capacity - buf_writer.buffer().len();\n+    /// ```\n+    pub fn capacity(&self) -> usize {\n+        self.buf.capacity()\n+    }\n+\n     /// Unwraps this `BufWriter<W>`, returning the underlying writer.\n     ///\n     /// The buffer is written out before returning the writer."}]}