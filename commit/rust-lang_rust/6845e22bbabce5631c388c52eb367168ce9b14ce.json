{"sha": "6845e22bbabce5631c388c52eb367168ce9b14ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4NDVlMjJiYmFiY2U1NjMxYzM4OGM1MmViMzY3MTY4Y2U5YjE0Y2U=", "commit": {"author": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2020-12-05T14:40:56Z"}, "committer": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2020-12-05T15:37:59Z"}, "message": "Const parameters can not be inferred with `_`\n\nSmall improvement. Thanks varkor\n\nCo-authored-by: varkor <github@varkor.com>\n\nBless", "tree": {"sha": "fb7e54ebe616df185fd41e065bf41456f7c01d23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb7e54ebe616df185fd41e065bf41456f7c01d23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6845e22bbabce5631c388c52eb367168ce9b14ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6845e22bbabce5631c388c52eb367168ce9b14ce", "html_url": "https://github.com/rust-lang/rust/commit/6845e22bbabce5631c388c52eb367168ce9b14ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6845e22bbabce5631c388c52eb367168ce9b14ce/comments", "author": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6225434fff7d493baac0aa91c57f2da923ea196", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6225434fff7d493baac0aa91c57f2da923ea196", "html_url": "https://github.com/rust-lang/rust/commit/e6225434fff7d493baac0aa91c57f2da923ea196"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "b7e77f389f8575c9500156ed57eebeef00e5b64c", "filename": "compiler/rustc_typeck/src/astconv/generics.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6845e22bbabce5631c388c52eb367168ce9b14ce/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6845e22bbabce5631c388c52eb367168ce9b14ce/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs?ref=6845e22bbabce5631c388c52eb367168ce9b14ce", "patch": "@@ -44,6 +44,13 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             // the match is non-exhaustive.\n             _ => bug!(\"invalid generic parameter kind {}\", kind),\n         };\n+\n+        if let ParamKindOrd::Const { .. } = kind_ord {\n+            if let GenericArg::Type(hir::Ty { kind: hir::TyKind::Infer, .. }) = arg {\n+                err.help(\"const arguments cannot yet be inferred with `_`\");\n+            }\n+        }\n+\n         let arg_ord = match arg {\n             GenericArg::Lifetime(_) => ParamKindOrd::Lifetime,\n             GenericArg::Type(_) => ParamKindOrd::Type,"}, {"sha": "dce2e27c71a139536a0b666c407f9aa9eb2244d7", "filename": "src/test/ui/const-generics/issues/issue-62878.full.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6845e22bbabce5631c388c52eb367168ce9b14ce/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62878.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6845e22bbabce5631c388c52eb367168ce9b14ce/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62878.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62878.full.stderr?ref=6845e22bbabce5631c388c52eb367168ce9b14ce", "patch": "@@ -9,6 +9,8 @@ error[E0747]: type provided when a constant was expected\n    |\n LL |     foo::<_, {[1]}>();\n    |           ^\n+   |\n+   = help: const arguments cannot yet be inferred with `_`\n \n error[E0308]: mismatched types\n   --> $DIR/issue-62878.rs:11:15"}, {"sha": "dcd069ce3b0f42bc890bd5f9200fc1d5f12c9c91", "filename": "src/test/ui/const-generics/min_const_generics/inferred_const.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6845e22bbabce5631c388c52eb367168ce9b14ce/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finferred_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6845e22bbabce5631c388c52eb367168ce9b14ce/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finferred_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finferred_const.rs?ref=6845e22bbabce5631c388c52eb367168ce9b14ce", "patch": "@@ -0,0 +1,8 @@\n+#![feature(min_const_generics)]\n+fn foo<const N: usize, const K: usize>(data: [u32; N]) -> [u32; K] {\n+    [0; K]\n+}\n+fn main() {\n+    let a = foo::<_, 2>([0, 1, 2]);\n+               //~^ ERROR type provided when a constant was expected\n+}"}, {"sha": "e17105b2aa99930c703147412bcf50110ce3cb86", "filename": "src/test/ui/const-generics/min_const_generics/inferred_const.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6845e22bbabce5631c388c52eb367168ce9b14ce/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finferred_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6845e22bbabce5631c388c52eb367168ce9b14ce/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finferred_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Finferred_const.stderr?ref=6845e22bbabce5631c388c52eb367168ce9b14ce", "patch": "@@ -0,0 +1,11 @@\n+error[E0747]: type provided when a constant was expected\n+  --> $DIR/inferred_const.rs:6:19\n+   |\n+LL |     let a = foo::<_, 2>([0, 1, 2]);\n+   |                   ^\n+   |\n+   = help: const arguments cannot yet be inferred with `_`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0747`."}]}