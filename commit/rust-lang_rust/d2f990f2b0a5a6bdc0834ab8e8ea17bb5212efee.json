{"sha": "d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZjk5MGYyYjBhNWE2YmRjMDgzNGFiOGU4ZWExN2JiNTIxMmVmZWU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-11T23:29:51Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-11T23:45:15Z"}, "message": "More test fixes and rebase conflicts", "tree": {"sha": "b0f0c941332106bfa8c771e76f7601838b94f990", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0f0c941332106bfa8c771e76f7601838b94f990"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee", "html_url": "https://github.com/rust-lang/rust/commit/d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adcda460115b1f491a7624752901b7410591dfc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/adcda460115b1f491a7624752901b7410591dfc5", "html_url": "https://github.com/rust-lang/rust/commit/adcda460115b1f491a7624752901b7410591dfc5"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "cf1df4ac423ca1215bc5c4a292979a036280ee56", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee", "patch": "@@ -41,7 +41,6 @@ use cmp::Ordering::{Less, Equal, Greater};\n use cmp;\n use default::Default;\n use iter::*;\n-use num::Int;\n use ops::{FnMut, self, Index};\n use ops::RangeFull;\n use option::Option;"}, {"sha": "905fac07c5d5d76cc0d00cb729a43f59af0397a5", "filename": "src/libstd/sys/common/thread_local.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee/src%2Flibstd%2Fsys%2Fcommon%2Fthread_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee/src%2Flibstd%2Fsys%2Fcommon%2Fthread_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fthread_local.rs?ref=d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee", "patch": "@@ -140,6 +140,7 @@ pub const INIT: StaticKey = StaticKey {\n /// Constant initialization value for the inner part of static TLS keys.\n ///\n /// This value allows specific configuration of the destructor for a TLS key.\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub const INIT_INNER: StaticKeyInner = StaticKeyInner {\n     key: atomic::ATOMIC_USIZE_INIT,\n };"}, {"sha": "3a1b797eeb46107fe7108ef7c47f4f04328fea3b", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee", "patch": "@@ -19,7 +19,9 @@ pub use self::FILE_INFO_BY_HANDLE_CLASS::*;\n pub use libc::consts::os::extra::{\n     FILE_ATTRIBUTE_READONLY,\n     FILE_ATTRIBUTE_DIRECTORY,\n+    WSAPROTOCOL_LEN,\n };\n+pub use libc::types::os::arch::extra::{GROUP, GUID, WSAPROTOCOLCHAIN};\n \n pub const WSADESCRIPTION_LEN: usize = 256;\n pub const WSASYS_STATUS_LEN: usize = 128;\n@@ -41,6 +43,7 @@ pub const WSA_INFINITE: libc::DWORD = libc::INFINITE;\n pub const WSA_WAIT_TIMEOUT: libc::DWORD = libc::consts::os::extra::WAIT_TIMEOUT;\n pub const WSA_WAIT_EVENT_0: libc::DWORD = libc::consts::os::extra::WAIT_OBJECT_0;\n pub const WSA_WAIT_FAILED: libc::DWORD = libc::consts::os::extra::WAIT_FAILED;\n+pub const WSAESHUTDOWN: libc::c_int = 10058;\n \n pub const ERROR_NO_MORE_FILES: libc::DWORD = 18;\n pub const TOKEN_READ: libc::DWORD = 0x20008;\n@@ -80,6 +83,33 @@ pub type LPWSANETWORKEVENTS = *mut WSANETWORKEVENTS;\n \n pub type WSAEVENT = libc::HANDLE;\n \n+#[repr(C)]\n+#[derive(Copy)]\n+pub struct WSAPROTOCOL_INFO {\n+    pub dwServiceFlags1: libc::DWORD,\n+    pub dwServiceFlags2: libc::DWORD,\n+    pub dwServiceFlags3: libc::DWORD,\n+    pub dwServiceFlags4: libc::DWORD,\n+    pub dwProviderFlags: libc::DWORD,\n+    pub ProviderId: GUID,\n+    pub dwCatalogEntryId: libc::DWORD,\n+    pub ProtocolChain: WSAPROTOCOLCHAIN,\n+    pub iVersion: libc::c_int,\n+    pub iAddressFamily: libc::c_int,\n+    pub iMaxSockAddr: libc::c_int,\n+    pub iMinSockAddr: libc::c_int,\n+    pub iSocketType: libc::c_int,\n+    pub iProtocol: libc::c_int,\n+    pub iProtocolMaxOffset: libc::c_int,\n+    pub iNetworkByteOrder: libc::c_int,\n+    pub iSecurityScheme: libc::c_int,\n+    pub dwMessageSize: libc::DWORD,\n+    pub dwProviderReserved: libc::DWORD,\n+    pub szProtocol: [u16; (WSAPROTOCOL_LEN as usize) + 1us],\n+}\n+\n+pub type LPWSAPROTOCOL_INFO = *mut WSAPROTOCOL_INFO;\n+\n #[repr(C)]\n pub struct fd_set {\n     fd_count: libc::c_uint,\n@@ -184,6 +214,7 @@ pub struct FILE_END_OF_FILE_INFO {\n extern \"system\" {\n     pub fn WSAStartup(wVersionRequested: libc::WORD,\n                       lpWSAData: LPWSADATA) -> libc::c_int;\n+    pub fn WSACleanup() -> libc::c_int;\n     pub fn WSAGetLastError() -> libc::c_int;\n     pub fn WSACloseEvent(hEvent: WSAEVENT) -> libc::BOOL;\n     pub fn WSACreateEvent() -> WSAEVENT;\n@@ -200,6 +231,17 @@ extern \"system\" {\n                                 hEventObject: WSAEVENT,\n                                 lpNetworkEvents: LPWSANETWORKEVENTS)\n                                 -> libc::c_int;\n+    pub fn WSADuplicateSocketW(s: libc::SOCKET,\n+                               dwProcessId: libc::DWORD,\n+                               lpProtocolInfo: LPWSAPROTOCOL_INFO)\n+                               -> libc::c_int;\n+    pub fn GetCurrentProcessId() -> libc::DWORD;\n+    pub fn WSASocketW(af: libc::c_int,\n+                      kind: libc::c_int,\n+                      protocol: libc::c_int,\n+                      lpProtocolInfo: LPWSAPROTOCOL_INFO,\n+                      g: GROUP,\n+                      dwFlags: libc::DWORD) -> libc::SOCKET;\n \n     pub fn ioctlsocket(s: libc::SOCKET, cmd: libc::c_long,\n                        argp: *mut libc::c_ulong) -> libc::c_int;"}, {"sha": "3451232f40ab89acb88de0fa53ce591dc2739cbd", "filename": "src/libstd/sys/windows/net.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee/src%2Flibstd%2Fsys%2Fwindows%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee/src%2Flibstd%2Fsys%2Fwindows%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fnet.rs?ref=d2f990f2b0a5a6bdc0834ab8e8ea17bb5212efee", "patch": "@@ -62,7 +62,7 @@ pub fn cvt_r<T: SignedInt, F>(mut f: F) -> io::Result<T> where F: FnMut() -> T {\n \n impl Socket {\n     pub fn new(addr: &SocketAddr, ty: c_int) -> io::Result<Socket> {\n-        let fam = match addr.ip {\n+        let fam = match addr.ip() {\n             IpAddr::V4(..) => libc::AF_INET,\n             IpAddr::V6(..) => libc::AF_INET6,\n         };"}]}