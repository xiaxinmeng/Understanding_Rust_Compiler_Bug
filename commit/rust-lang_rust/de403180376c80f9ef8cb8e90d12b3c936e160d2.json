{"sha": "de403180376c80f9ef8cb8e90d12b3c936e160d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlNDAzMTgwMzc2YzgwZjllZjhjYjhlOTBkMTJiM2M5MzZlMTYwZDI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-02T00:48:07Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-02T03:40:35Z"}, "message": "Tests for copyability and sendability rules for classes\n\nCloses #2296", "tree": {"sha": "dc0add500040ce83aa82d23bddae3c2f0b5902e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc0add500040ce83aa82d23bddae3c2f0b5902e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de403180376c80f9ef8cb8e90d12b3c936e160d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de403180376c80f9ef8cb8e90d12b3c936e160d2", "html_url": "https://github.com/rust-lang/rust/commit/de403180376c80f9ef8cb8e90d12b3c936e160d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de403180376c80f9ef8cb8e90d12b3c936e160d2/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11b4a92fc89705b706cf2d3456cc04a8a7d732cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/11b4a92fc89705b706cf2d3456cc04a8a7d732cd", "html_url": "https://github.com/rust-lang/rust/commit/11b4a92fc89705b706cf2d3456cc04a8a7d732cd"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "da0a0a488f50605840db7f88bc19661b84e77c09", "filename": "src/test/compile-fail/noncopyable-class.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/de403180376c80f9ef8cb8e90d12b3c936e160d2/src%2Ftest%2Fcompile-fail%2Fnoncopyable-class.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de403180376c80f9ef8cb8e90d12b3c936e160d2/src%2Ftest%2Fcompile-fail%2Fnoncopyable-class.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnoncopyable-class.rs?ref=de403180376c80f9ef8cb8e90d12b3c936e160d2", "patch": "@@ -0,0 +1,16 @@\n+// error-pattern: copying a noncopyable value\n+\n+// Test that a class with a non-copyable field can't be\n+// copied\n+class bar {\n+  new() {}\n+  drop {}\n+}\n+\n+class foo {\n+  let i: int;\n+  let j: bar;\n+  new(i:int) { self.i = i; self.j = bar(); }\n+}\n+\n+fn main() { let x <- foo(10); let y = x; log(error, x); }"}, {"sha": "689253ddeef24ae107079747bd3db832c70f0e81", "filename": "src/test/compile-fail/unsendable-class.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/de403180376c80f9ef8cb8e90d12b3c936e160d2/src%2Ftest%2Fcompile-fail%2Funsendable-class.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de403180376c80f9ef8cb8e90d12b3c936e160d2/src%2Ftest%2Fcompile-fail%2Funsendable-class.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsendable-class.rs?ref=de403180376c80f9ef8cb8e90d12b3c936e160d2", "patch": "@@ -0,0 +1,15 @@\n+// Test that a class with an unsendable field can't be\n+// sent\n+\n+class foo {\n+  let i: int;\n+  let j: @str;\n+  new(i:int, j: @str) { self.i = i; self.j = j; }\n+}\n+\n+fn main() {\n+  let cat = \"kitty\";\n+  let po = comm::port();         //! ERROR missing `send`\n+  let ch = comm::chan(po);       //! ERROR missing `send`\n+  comm::send(ch, foo(42, @cat)); //! ERROR missing `send`\n+}\n\\ No newline at end of file"}, {"sha": "b421f8cdf2ef14bc392060736130f29f0c403b47", "filename": "src/test/run-pass/sendable-class.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/de403180376c80f9ef8cb8e90d12b3c936e160d2/src%2Ftest%2Frun-pass%2Fsendable-class.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de403180376c80f9ef8cb8e90d12b3c936e160d2/src%2Ftest%2Frun-pass%2Fsendable-class.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsendable-class.rs?ref=de403180376c80f9ef8cb8e90d12b3c936e160d2", "patch": "@@ -0,0 +1,13 @@\n+// Test that a class with only sendable fields can be sent\n+\n+class foo {\n+  let i: int;\n+  let j: char;\n+  new(i:int, j: char) { self.i = i; self.j = j; }\n+}\n+\n+fn main() {\n+  let po = comm::port::<foo>();\n+  let ch = comm::chan(po);\n+  comm::send(ch, foo(42, 'c'));\n+}\n\\ No newline at end of file"}]}