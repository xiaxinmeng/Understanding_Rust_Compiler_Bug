{"sha": "ffcbd8d767bec1382e401120f01f94fce8851ced", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmY2JkOGQ3NjdiZWMxMzgyZTQwMTEyMGYwMWY5NGZjZTg4NTFjZWQ=", "commit": {"author": {"name": "Andrei Formiga", "email": "archimedes_siracusa@hotmail.com", "date": "2013-11-08T02:00:23Z"}, "committer": {"name": "Andrei Formiga", "email": "archimedes_siracusa@hotmail.com", "date": "2013-11-08T20:42:46Z"}, "message": "Add default 'package_id' link meta for crates (with value equal to 'name')", "tree": {"sha": "5f0da125536a4459727395ba02afcf56c09222bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f0da125536a4459727395ba02afcf56c09222bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffcbd8d767bec1382e401120f01f94fce8851ced", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffcbd8d767bec1382e401120f01f94fce8851ced", "html_url": "https://github.com/rust-lang/rust/commit/ffcbd8d767bec1382e401120f01f94fce8851ced", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffcbd8d767bec1382e401120f01f94fce8851ced/comments", "author": {"login": "tautologico", "id": 62906, "node_id": "MDQ6VXNlcjYyOTA2", "avatar_url": "https://avatars.githubusercontent.com/u/62906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tautologico", "html_url": "https://github.com/tautologico", "followers_url": "https://api.github.com/users/tautologico/followers", "following_url": "https://api.github.com/users/tautologico/following{/other_user}", "gists_url": "https://api.github.com/users/tautologico/gists{/gist_id}", "starred_url": "https://api.github.com/users/tautologico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tautologico/subscriptions", "organizations_url": "https://api.github.com/users/tautologico/orgs", "repos_url": "https://api.github.com/users/tautologico/repos", "events_url": "https://api.github.com/users/tautologico/events{/privacy}", "received_events_url": "https://api.github.com/users/tautologico/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tautologico", "id": 62906, "node_id": "MDQ6VXNlcjYyOTA2", "avatar_url": "https://avatars.githubusercontent.com/u/62906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tautologico", "html_url": "https://github.com/tautologico", "followers_url": "https://api.github.com/users/tautologico/followers", "following_url": "https://api.github.com/users/tautologico/following{/other_user}", "gists_url": "https://api.github.com/users/tautologico/gists{/gist_id}", "starred_url": "https://api.github.com/users/tautologico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tautologico/subscriptions", "organizations_url": "https://api.github.com/users/tautologico/orgs", "repos_url": "https://api.github.com/users/tautologico/repos", "events_url": "https://api.github.com/users/tautologico/events{/privacy}", "received_events_url": "https://api.github.com/users/tautologico/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a594a999fbccf04710c9dfea3ef3d231c14e1bd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a594a999fbccf04710c9dfea3ef3d231c14e1bd1", "html_url": "https://github.com/rust-lang/rust/commit/a594a999fbccf04710c9dfea3ef3d231c14e1bd1"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "ab0763aac9e513a0811b59c221019c105e1f8c3a", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ffcbd8d767bec1382e401120f01f94fce8851ced/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffcbd8d767bec1382e401120f01f94fce8851ced/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=ffcbd8d767bec1382e401120f01f94fce8851ced", "patch": "@@ -634,6 +634,26 @@ pub fn build_link_meta(sess: Session,\n         }\n     }\n \n+    fn crate_meta_pkgid(sess: Session, output: &Path, opt_pkg_id: Option<@str>)\n+        -> @str {\n+        match opt_pkg_id {\n+            Some(v) if !v.is_empty() => v,\n+            _ => {\n+                let pkg_id = session::expect(sess,\n+                                             output.filestem_str(),\n+                                             || format!(\"output file name `{}` doesn't\\\n+                                                      appear to have a stem\",\n+                                                     output.display())).to_managed();\n+                if pkg_id.is_empty() {\n+                    sess.fatal(\"missing crate link meta `package_id`, and the \\\n+                                inferred name is blank\");\n+                }\n+                warn_missing(sess, \"package_id\", pkg_id);\n+                pkg_id\n+            }\n+        }\n+    }\n+\n     let ProvidedMetas {\n         name: opt_name,\n         vers: opt_vers,\n@@ -642,15 +662,16 @@ pub fn build_link_meta(sess: Session,\n     } = provided_link_metas(sess, c);\n     let name = crate_meta_name(sess, output, opt_name);\n     let vers = crate_meta_vers(sess, opt_vers);\n+    let pkg_id = crate_meta_pkgid(sess, output, opt_pkg_id);\n     let dep_hashes = cstore::get_dep_hashes(sess.cstore);\n     let extras_hash =\n         crate_meta_extras_hash(symbol_hasher, cmh_items,\n-                               dep_hashes, opt_pkg_id);\n+                               dep_hashes, Some(pkg_id));\n \n     LinkMeta {\n         name: name,\n         vers: vers,\n-        package_id: opt_pkg_id,\n+        package_id: Some(pkg_id),\n         extras_hash: extras_hash\n     }\n }"}]}