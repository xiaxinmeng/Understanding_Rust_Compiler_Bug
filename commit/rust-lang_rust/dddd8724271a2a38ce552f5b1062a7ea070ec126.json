{"sha": "dddd8724271a2a38ce552f5b1062a7ea070ec126", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkZGQ4NzI0MjcxYTJhMzhjZTU1MmY1YjEwNjJhN2VhMDcwZWMxMjY=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-12-18T15:52:10Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-12-22T01:23:55Z"}, "message": "Implement rustfmt running manually using ignore crate\n\nThis replaces cargo-fmt with rustfmt with --skip-children which should\nallow us to format code without running into rust-lang/rustfmt#3930.\n\nThis also bumps up the version of rustfmt used to a more recent one.", "tree": {"sha": "8cfcd9fccb826db1dc7bf5646c45ce7ee000bcae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cfcd9fccb826db1dc7bf5646c45ce7ee000bcae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dddd8724271a2a38ce552f5b1062a7ea070ec126", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dddd8724271a2a38ce552f5b1062a7ea070ec126", "html_url": "https://github.com/rust-lang/rust/commit/dddd8724271a2a38ce552f5b1062a7ea070ec126", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dddd8724271a2a38ce552f5b1062a7ea070ec126/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b081abe944a7915013e15ae602ac8cfe9f52a77", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b081abe944a7915013e15ae602ac8cfe9f52a77", "html_url": "https://github.com/rust-lang/rust/commit/2b081abe944a7915013e15ae602ac8cfe9f52a77"}], "stats": {"total": 70, "additions": 52, "deletions": 18}, "files": [{"sha": "4c819e88809b207bedb3080ee46338a2ed7daaa8", "filename": "Cargo.lock", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dddd8724271a2a38ce552f5b1062a7ea070ec126/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/dddd8724271a2a38ce552f5b1062a7ea070ec126/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=dddd8724271a2a38ce552f5b1062a7ea070ec126", "patch": "@@ -192,6 +192,7 @@ dependencies = [\n  \"cmake\",\n  \"filetime\",\n  \"getopts\",\n+ \"ignore\",\n  \"lazy_static 1.3.0\",\n  \"libc\",\n  \"num_cpus\",\n@@ -1525,9 +1526,9 @@ checksum = \"c3360c7b59e5ffa2653671fb74b4741a5d343c03f331c0a4aeda42b5c2b0ec7d\"\n \n [[package]]\n name = \"ignore\"\n-version = \"0.4.7\"\n+version = \"0.4.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8dc57fa12805f367736a38541ac1a9fc6a52812a0ca959b1d4d4b640a89eb002\"\n+checksum = \"0ec16832258409d571aaef8273f3c3cc5b060d784e159d1a0f3b0017308f84a7\"\n dependencies = [\n  \"crossbeam-channel\",\n  \"globset\","}, {"sha": "4e38aace15d1bc00d65bb37e0d739a93b6e359f3", "filename": "rustfmt.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dddd8724271a2a38ce552f5b1062a7ea070ec126/rustfmt.toml", "raw_url": "https://github.com/rust-lang/rust/raw/dddd8724271a2a38ce552f5b1062a7ea070ec126/rustfmt.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt.toml?ref=dddd8724271a2a38ce552f5b1062a7ea070ec126", "patch": "@@ -68,6 +68,7 @@ ignore = [\n     \"src/rustllvm/\",\n     \"src/test/\",\n     \"src/tools/\",\n+    \"src/etc\",\n \n     # do not format submodules\n     \"src/doc/book\","}, {"sha": "3ab00a6e147fc5b5342ab97b87aa730fff6a9cb8", "filename": "src/bootstrap/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dddd8724271a2a38ce552f5b1062a7ea070ec126/src%2Fbootstrap%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/dddd8724271a2a38ce552f5b1062a7ea070ec126/src%2Fbootstrap%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.toml?ref=dddd8724271a2a38ce552f5b1062a7ea070ec126", "patch": "@@ -47,6 +47,7 @@ serde_json = \"1.0.2\"\n toml = \"0.5\"\n lazy_static = \"1.3.0\"\n time = \"0.1\"\n+ignore = \"0.4.10\"\n \n [dev-dependencies]\n pretty_assertions = \"0.5\""}, {"sha": "e253e525526aa048b8fcdab7c3755908a9d10bc1", "filename": "src/bootstrap/format.rs", "status": "modified", "additions": 46, "deletions": 15, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/dddd8724271a2a38ce552f5b1062a7ea070ec126/src%2Fbootstrap%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dddd8724271a2a38ce552f5b1062a7ea070ec126/src%2Fbootstrap%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fformat.rs?ref=dddd8724271a2a38ce552f5b1062a7ea070ec126", "patch": "@@ -1,28 +1,59 @@\n //! Runs rustfmt on the repository.\n \n-use crate::{util, Build};\n+use crate::Build;\n use std::process::Command;\n+use ignore::WalkBuilder;\n+use std::path::Path;\n+use build_helper::t;\n \n-pub fn format(build: &Build, check: bool) {\n-    let target = &build.build;\n+fn rustfmt(build: &Build, path: &Path, check: bool) {\n     let rustfmt_path = build.config.initial_rustfmt.as_ref().unwrap_or_else(|| {\n         eprintln!(\"./x.py fmt is not supported on this channel\");\n         std::process::exit(1);\n-    }).clone();\n-    let cargo_fmt_path = rustfmt_path.with_file_name(util::exe(\"cargo-fmt\", &target));\n-    assert!(cargo_fmt_path.is_file(), \"{} not a file\", cargo_fmt_path.display());\n-\n-    let mut cmd = Command::new(&cargo_fmt_path);\n-    // cargo-fmt calls rustfmt as a bare command, so we need it to only find the correct one\n-    cmd.env(\"PATH\", cargo_fmt_path.parent().unwrap());\n-    cmd.current_dir(&build.src);\n-    cmd.arg(\"fmt\");\n+    });\n \n+    let mut cmd = Command::new(&rustfmt_path);\n+    // avoid the submodule config paths from coming into play,\n+    // we only allow a single global config for the workspace for now\n+    cmd.arg(\"--config-path\").arg(&build.src.canonicalize().unwrap());\n+    cmd.arg(\"--unstable-features\");\n+    cmd.arg(\"--skip-children\");\n     if check {\n-        cmd.arg(\"--\");\n         cmd.arg(\"--check\");\n     }\n+    cmd.arg(&path);\n+    let cmd_debug = format!(\"{:?}\", cmd);\n+    let status = cmd.status().expect(\"executing rustfmt\");\n+    assert!(status.success(), \"running {} successful\", cmd_debug);\n+}\n+\n+#[derive(serde::Deserialize)]\n+struct RustfmtConfig {\n+    ignore: Vec<String>,\n+}\n+\n+pub fn format(build: &Build, check: bool) {\n+    let mut builder = ignore::types::TypesBuilder::new();\n+    builder.add_defaults();\n+    builder.select(\"rust\");\n+    let matcher = builder.build().unwrap();\n+\n+    let rustfmt_config = t!(std::fs::read_to_string(build.src.join(\"rustfmt.toml\")));\n+    let rustfmt_config: RustfmtConfig = t!(toml::from_str(&rustfmt_config));\n+    let mut ignore_fmt = ignore::overrides::OverrideBuilder::new(&build.src);\n+    for ignore in rustfmt_config.ignore {\n+        ignore_fmt.add(&format!(\"!{}\", ignore)).expect(&ignore);\n+    }\n+    let ignore_fmt = ignore_fmt.build().unwrap();\n \n-    let status = cmd.status().expect(\"executing cargo-fmt\");\n-    assert!(status.success(), \"cargo-fmt errored with status {:?}\", status);\n+    let walker = WalkBuilder::new(&build.src)\n+        .types(matcher)\n+        .overrides(ignore_fmt)\n+        .build();\n+    for entry in walker {\n+        let entry = t!(entry);\n+        if entry.file_type().map_or(false, |t| t.is_file()) {\n+            rustfmt(build, &entry.path(), check);\n+        }\n+    }\n }"}, {"sha": "494944720d9e801def4701eef1c5d28025f3f639", "filename": "src/stage0.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dddd8724271a2a38ce552f5b1062a7ea070ec126/src%2Fstage0.txt", "raw_url": "https://github.com/rust-lang/rust/raw/dddd8724271a2a38ce552f5b1062a7ea070ec126/src%2Fstage0.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstage0.txt?ref=dddd8724271a2a38ce552f5b1062a7ea070ec126", "patch": "@@ -19,7 +19,7 @@ cargo: beta\n # We use a nightly rustfmt to format the source because it solves some bootstrapping\n # issues with use of new syntax in this repo. If you're looking at the beta/stable branch, this key should be omitted,\n # as we don't want to depend on rustfmt from nightly there.\n-rustfmt: nightly-2019-11-05\n+rustfmt: nightly-2019-12-18\n \n # When making a stable release the process currently looks like:\n #"}]}