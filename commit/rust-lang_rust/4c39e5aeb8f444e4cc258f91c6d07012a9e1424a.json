{"sha": "4c39e5aeb8f444e4cc258f91c6d07012a9e1424a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjMzllNWFlYjhmNDQ0ZTRjYzI1OGY5MWM2ZDA3MDEyYTllMTQyNGE=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-08-15T07:52:11Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-08-15T07:52:11Z"}, "message": "Add fields to FormattingError\n\nis_comment is set to true if the error happened inside comment.\nline_buffer is the line which overflowed.", "tree": {"sha": "145868e0393c2b09a89174e44380656edf04002f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/145868e0393c2b09a89174e44380656edf04002f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c39e5aeb8f444e4cc258f91c6d07012a9e1424a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c39e5aeb8f444e4cc258f91c6d07012a9e1424a", "html_url": "https://github.com/rust-lang/rust/commit/4c39e5aeb8f444e4cc258f91c6d07012a9e1424a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c39e5aeb8f444e4cc258f91c6d07012a9e1424a/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "222ae15c7beeaea774f771e4f19543e332b414b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/222ae15c7beeaea774f771e4f19543e332b414b7", "html_url": "https://github.com/rust-lang/rust/commit/222ae15c7beeaea774f771e4f19543e332b414b7"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "86d5191412e8864e4d8058c193f73f444d60bb39", "filename": "src/lib.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4c39e5aeb8f444e4cc258f91c6d07012a9e1424a/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c39e5aeb8f444e4cc258f91c6d07012a9e1424a/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=4c39e5aeb8f444e4cc258f91c6d07012a9e1424a", "patch": "@@ -468,8 +468,10 @@ impl fmt::Display for ErrorKind {\n \n // Formatting errors that are identified *after* rustfmt has run.\n pub struct FormattingError {\n-    line: u32,\n+    line: usize,\n     kind: ErrorKind,\n+    is_comment: bool,\n+    line_buffer: String,\n }\n \n impl FormattingError {\n@@ -600,6 +602,7 @@ fn format_lines(text: &mut StringBuffer, name: &str, config: &Config, report: &m\n     let mut issue_seeker = BadIssueSeeker::new(config.report_todo(), config.report_fixme());\n     let mut prev_char: Option<char> = None;\n     let mut is_comment = false;\n+    let mut line_buffer = String::with_capacity(config.max_width() * 2);\n \n     for (c, b) in text.chars() {\n         if c == '\\r' {\n@@ -614,6 +617,8 @@ fn format_lines(text: &mut StringBuffer, name: &str, config: &Config, report: &m\n                 errors.push(FormattingError {\n                     line: cur_line,\n                     kind: ErrorKind::BadIssue(issue),\n+                    is_comment: false,\n+                    line_buffer: String::new(),\n                 });\n             }\n         }\n@@ -622,7 +627,7 @@ fn format_lines(text: &mut StringBuffer, name: &str, config: &Config, report: &m\n             if format_line {\n                 // Check for (and record) trailing whitespace.\n                 if let Some(lw) = last_wspace {\n-                    trims.push((cur_line, lw, b));\n+                    trims.push((cur_line, lw, b, line_buffer.clone()));\n                     line_len -= 1;\n                 }\n \n@@ -633,6 +638,8 @@ fn format_lines(text: &mut StringBuffer, name: &str, config: &Config, report: &m\n                     errors.push(FormattingError {\n                         line: cur_line,\n                         kind: ErrorKind::LineOverflow(line_len, config.max_width()),\n+                        is_comment: is_comment,\n+                        line_buffer: line_buffer.clone(),\n                     });\n                 }\n             }\n@@ -643,6 +650,7 @@ fn format_lines(text: &mut StringBuffer, name: &str, config: &Config, report: &m\n             last_wspace = None;\n             prev_char = None;\n             is_comment = false;\n+            line_buffer.clear();\n         } else {\n             newline_count = 0;\n             line_len += 1;\n@@ -660,6 +668,7 @@ fn format_lines(text: &mut StringBuffer, name: &str, config: &Config, report: &m\n                 last_wspace = None;\n             }\n             prev_char = Some(c);\n+            line_buffer.push(c);\n         }\n     }\n \n@@ -669,10 +678,12 @@ fn format_lines(text: &mut StringBuffer, name: &str, config: &Config, report: &m\n         text.truncate(line);\n     }\n \n-    for &(l, _, _) in &trims {\n+    for &(l, _, _, ref b) in &trims {\n         errors.push(FormattingError {\n             line: l,\n             kind: ErrorKind::TrailingWhitespace,\n+            is_comment: false,\n+            line_buffer: b.clone(),\n         });\n     }\n "}]}