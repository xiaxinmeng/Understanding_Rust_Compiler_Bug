{"sha": "7596d34ea13b9401635fb159af9c1fd8df5adc78", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1OTZkMzRlYTEzYjk0MDE2MzVmYjE1OWFmOWMxZmQ4ZGY1YWRjNzg=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-11-12T07:36:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-12T07:36:07Z"}, "message": "Rollup merge of #66257 - mati865:long-section-names-no-more, r=alexcrichton\n\nDrop long-section-names linker workaround for windows-gnu\n\nIf we can trust objdump Rust doesn't emit sections loaded at runtime longer than 8 characters on windows-gnu (but still does on linux-gnu), debug sections are not affected by that limit.\nI've ran tests and built few crates using exactly the same mingw-w64 version as Rusts CI just fine using **x86_64** toolchain.\n\nThe motivation for this change is making LLD work (it doesn't support `--enable-long-section-names`) with this target without hacks.\n\nBit of history:\nThe behaviour of LD changed in Binutils 2.20 released on 2009-10-16 and `--enable-long-section-names` was added to return to the old non conformant behaviour. Looking at the comment I can only guess there was a bug fixed in newer versions.\n\nThis workaround was added in https://github.com/rust-lang/rust/pull/13315 half a decade ago.", "tree": {"sha": "f69e4227841699e33ccbb870e5d949b8cbb367b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f69e4227841699e33ccbb870e5d949b8cbb367b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7596d34ea13b9401635fb159af9c1fd8df5adc78", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdymDnCRBK7hj4Ov3rIwAAdHIIAAqdmtA1jwWn/ldZDUVOJiBj\n4PKaO0kFccGbVgpR1qH2eY3cTOydWAH8trcld3OiLqt63uniwCMZjKdX5IBBAIeX\nF3L/myraQuBaKL16nxsKmVc/ED1I50RMZnQKGGMphbdF9OUQJTSm/7P0oObnJOfb\nP6Q4xUtzMM4VpmiYmwWNkj+o+GcKb2X7pfi7N+YVl7Nylcj9uLjwBllF5DvEVvqj\n+Yr58hIEw8p1ikO6Rti+KWVNhg/wEjaEAWZ7bna0rUnC+RlQXmfkdYtv90gnjr/g\nGy7YIQvDheCyiA82AmJ5S70yk+MpLZK+Vt5r+GYN6lWsdOveOTQTqsPSIOMN8g8=\n=82IO\n-----END PGP SIGNATURE-----\n", "payload": "tree f69e4227841699e33ccbb870e5d949b8cbb367b0\nparent 86df2f6737d8c76d5dd577ebef1842f8657a59fb\nparent d153f4f4936efc8039489083f5561070cf5de029\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1573544167 +0900\ncommitter GitHub <noreply@github.com> 1573544167 +0900\n\nRollup merge of #66257 - mati865:long-section-names-no-more, r=alexcrichton\n\nDrop long-section-names linker workaround for windows-gnu\n\nIf we can trust objdump Rust doesn't emit sections loaded at runtime longer than 8 characters on windows-gnu (but still does on linux-gnu), debug sections are not affected by that limit.\nI've ran tests and built few crates using exactly the same mingw-w64 version as Rusts CI just fine using **x86_64** toolchain.\n\nThe motivation for this change is making LLD work (it doesn't support `--enable-long-section-names`) with this target without hacks.\n\nBit of history:\nThe behaviour of LD changed in Binutils 2.20 released on 2009-10-16 and `--enable-long-section-names` was added to return to the old non conformant behaviour. Looking at the comment I can only guess there was a bug fixed in newer versions.\n\nThis workaround was added in https://github.com/rust-lang/rust/pull/13315 half a decade ago.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7596d34ea13b9401635fb159af9c1fd8df5adc78", "html_url": "https://github.com/rust-lang/rust/commit/7596d34ea13b9401635fb159af9c1fd8df5adc78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7596d34ea13b9401635fb159af9c1fd8df5adc78/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86df2f6737d8c76d5dd577ebef1842f8657a59fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/86df2f6737d8c76d5dd577ebef1842f8657a59fb", "html_url": "https://github.com/rust-lang/rust/commit/86df2f6737d8c76d5dd577ebef1842f8657a59fb"}, {"sha": "d153f4f4936efc8039489083f5561070cf5de029", "url": "https://api.github.com/repos/rust-lang/rust/commits/d153f4f4936efc8039489083f5561070cf5de029", "html_url": "https://github.com/rust-lang/rust/commit/d153f4f4936efc8039489083f5561070cf5de029"}], "stats": {"total": 27, "additions": 0, "deletions": 27}, "files": [{"sha": "ce7b338345caf6e4fed10c2c7313e40d42ca9cbd", "filename": "src/librustc_target/spec/windows_base.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7596d34ea13b9401635fb159af9c1fd8df5adc78/src%2Flibrustc_target%2Fspec%2Fwindows_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7596d34ea13b9401635fb159af9c1fd8df5adc78/src%2Flibrustc_target%2Fspec%2Fwindows_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwindows_base.rs?ref=7596d34ea13b9401635fb159af9c1fd8df5adc78", "patch": "@@ -4,33 +4,6 @@ use std::default::Default;\n pub fn opts() -> TargetOptions {\n     let mut pre_link_args = LinkArgs::new();\n     pre_link_args.insert(LinkerFlavor::Gcc, vec![\n-            // And here, we see obscure linker flags #45. On windows, it has been\n-            // found to be necessary to have this flag to compile liblibc.\n-            //\n-            // First a bit of background. On Windows, the file format is not ELF,\n-            // but COFF (at least according to LLVM). COFF doesn't officially allow\n-            // for section names over 8 characters, apparently. Our metadata\n-            // section, \".note.rustc\", you'll note is over 8 characters.\n-            //\n-            // On more recent versions of gcc on mingw, apparently the section name\n-            // is *not* truncated, but rather stored elsewhere in a separate lookup\n-            // table. On older versions of gcc, they apparently always truncated th\n-            // section names (at least in some cases). Truncating the section name\n-            // actually creates \"invalid\" objects [1] [2], but only for some\n-            // introspection tools, not in terms of whether it can be loaded.\n-            //\n-            // Long story short, passing this flag forces the linker to *not*\n-            // truncate section names (so we can find the metadata section after\n-            // it's compiled). The real kicker is that rust compiled just fine on\n-            // windows for quite a long time *without* this flag, so I have no idea\n-            // why it suddenly started failing for liblibc. Regardless, we\n-            // definitely don't want section name truncation, so we're keeping this\n-            // flag for windows.\n-            //\n-            // [1] - https://sourceware.org/bugzilla/show_bug.cgi?id=13130\n-            // [2] - https://code.google.com/p/go/issues/detail?id=2139\n-            \"-Wl,--enable-long-section-names\".to_string(),\n-\n             // Tell GCC to avoid linker plugins, because we are not bundling\n             // them with Windows installer, and Rust does its own LTO anyways.\n             \"-fno-use-linker-plugin\".to_string(),"}]}