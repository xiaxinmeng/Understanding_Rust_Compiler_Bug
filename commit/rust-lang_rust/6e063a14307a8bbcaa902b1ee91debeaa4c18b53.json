{"sha": "6e063a14307a8bbcaa902b1ee91debeaa4c18b53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMDYzYTE0MzA3YThiYmNhYTkwMmIxZWU5MWRlYmVhYTRjMThiNTM=", "commit": {"author": {"name": "Jan Likar", "email": "likar.jan@gmail.com", "date": "2015-11-16T03:37:08Z"}, "committer": {"name": "Jan Likar", "email": "likar.jan@gmail.com", "date": "2015-11-16T03:37:08Z"}, "message": "Add --version switch\n\nAdd --version switch, which prints a short hash of the current\ncommit. Fix #612", "tree": {"sha": "c075f15b126a4043b7e1f5a0c6d0ccb426edf59c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c075f15b126a4043b7e1f5a0c6d0ccb426edf59c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e063a14307a8bbcaa902b1ee91debeaa4c18b53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e063a14307a8bbcaa902b1ee91debeaa4c18b53", "html_url": "https://github.com/rust-lang/rust/commit/6e063a14307a8bbcaa902b1ee91debeaa4c18b53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e063a14307a8bbcaa902b1ee91debeaa4c18b53/comments", "author": {"login": "JanLikar", "id": 4228250, "node_id": "MDQ6VXNlcjQyMjgyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/4228250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JanLikar", "html_url": "https://github.com/JanLikar", "followers_url": "https://api.github.com/users/JanLikar/followers", "following_url": "https://api.github.com/users/JanLikar/following{/other_user}", "gists_url": "https://api.github.com/users/JanLikar/gists{/gist_id}", "starred_url": "https://api.github.com/users/JanLikar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JanLikar/subscriptions", "organizations_url": "https://api.github.com/users/JanLikar/orgs", "repos_url": "https://api.github.com/users/JanLikar/repos", "events_url": "https://api.github.com/users/JanLikar/events{/privacy}", "received_events_url": "https://api.github.com/users/JanLikar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JanLikar", "id": 4228250, "node_id": "MDQ6VXNlcjQyMjgyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/4228250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JanLikar", "html_url": "https://github.com/JanLikar", "followers_url": "https://api.github.com/users/JanLikar/followers", "following_url": "https://api.github.com/users/JanLikar/following{/other_user}", "gists_url": "https://api.github.com/users/JanLikar/gists{/gist_id}", "starred_url": "https://api.github.com/users/JanLikar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JanLikar/subscriptions", "organizations_url": "https://api.github.com/users/JanLikar/orgs", "repos_url": "https://api.github.com/users/JanLikar/repos", "events_url": "https://api.github.com/users/JanLikar/events{/privacy}", "received_events_url": "https://api.github.com/users/JanLikar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f88345c431d7ace78a0b7db506a32b39ebc91d30", "url": "https://api.github.com/repos/rust-lang/rust/commits/f88345c431d7ace78a0b7db506a32b39ebc91d30", "html_url": "https://github.com/rust-lang/rust/commit/f88345c431d7ace78a0b7db506a32b39ebc91d30"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "bc9c3445aadf6aed52e09eec4b0bc725454e000f", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6e063a14307a8bbcaa902b1ee91debeaa4c18b53/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e063a14307a8bbcaa902b1ee91debeaa4c18b53/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=6e063a14307a8bbcaa902b1ee91debeaa4c18b53", "patch": "@@ -23,6 +23,7 @@ use rustfmt::config::Config;\n use std::env;\n use std::fs::{self, File};\n use std::io::{self, Read, Write};\n+use std::process::Command;\n use std::path::{Path, PathBuf};\n \n use getopts::{Matches, Options};\n@@ -33,6 +34,8 @@ enum Operation {\n     Format(Vec<PathBuf>, WriteMode),\n     /// Print the help message.\n     Help,\n+    // Print version information\n+    Version,\n     /// Print detailed configuration help.\n     ConfigHelp,\n     /// Invalid program input, including reason.\n@@ -82,6 +85,7 @@ fn update_config(config: &mut Config, matches: &Matches) {\n fn execute() -> i32 {\n     let mut opts = Options::new();\n     opts.optflag(\"h\", \"help\", \"show this message\");\n+    opts.optflag(\"\", \"version\", \"show version information\");\n     opts.optflag(\"v\", \"verbose\", \"show progress\");\n     opts.optopt(\"\",\n                 \"write-mode\",\n@@ -111,6 +115,10 @@ fn execute() -> i32 {\n             print_usage(&opts, \"\");\n             0\n         }\n+        Operation::Version => {\n+            print_version();\n+            0\n+        }\n         Operation::ConfigHelp => {\n             Config::print_docs();\n             0\n@@ -168,6 +176,18 @@ fn print_usage(opts: &Options, reason: &str) {\n     println!(\"{}\", opts.usage(&reason));\n }\n \n+fn print_version() {\n+    let cmd = Command::new(\"git\")\n+                  .arg(\"rev-parse\")\n+                  .arg(\"--short\")\n+                  .arg(\"HEAD\")\n+                  .output();\n+    match cmd {\n+        Ok(output) => print!(\"{}\", String::from_utf8(output.stdout).unwrap()),\n+        Err(e) => panic!(\"Unable te get version: {}\", e),\n+    }\n+}\n+\n fn determine_operation(matches: &Matches) -> Operation {\n     if matches.opt_present(\"h\") {\n         return Operation::Help;\n@@ -177,6 +197,10 @@ fn determine_operation(matches: &Matches) -> Operation {\n         return Operation::ConfigHelp;\n     }\n \n+    if matches.opt_present(\"version\") {\n+        return Operation::Version;\n+    }\n+\n     // if no file argument is supplied, read from stdin\n     if matches.free.len() == 0 {\n "}]}