{"sha": "68329648ac080aa4be26c2712aef283cd9ca6ea0", "node_id": "C_kwDOAAsO6NoAKDY4MzI5NjQ4YWMwODBhYTRiZTI2YzI3MTJhZWYyODNjZDljYTZlYTA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-05T13:56:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-05T13:56:51Z"}, "message": "Rollup merge of #95670 - TaKO8Ki:remove-unused-function-parameters, r=davidtwco\n\nRefactor: remove unused function parameters", "tree": {"sha": "082beb2bb24bc827923c1800c258baeabfc3afac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/082beb2bb24bc827923c1800c258baeabfc3afac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68329648ac080aa4be26c2712aef283cd9ca6ea0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiTEqkCRBK7hj4Ov3rIwAACswIAHZCSq26eC2T4l3g9VBa43O0\nVZGiWN4m5qC/3C4kNC4FuockVB82Cj2OyZAqJHZghPhRg8UTL+VoZLX7woVWXtut\nlhoWsp8mtXVtOY4/YLPHhzR+jEcaPPhbx/tHkUo6Q231VCGjcwj9GZWPW7FahabN\nDxtrRLgjEr7oBwuC7npKguU09HePJsMj9gKIH2q/ZMVucPkAmDZoptW+d8aZjhLC\nVvX7gGrm9FVfI9DthiluEaG8mBGu5Dcoe1HIjRsrbEjdL+Flz1er0yr95Vb8goxX\nsY9OZPuGCXT+Yca5NvelXcR44dDm6wvXz6+s5iPM1bJgIT/ZosWgx6FgRoE40kk=\n=dkNC\n-----END PGP SIGNATURE-----\n", "payload": "tree 082beb2bb24bc827923c1800c258baeabfc3afac\nparent b5e763ace3c6e9e5d23cfe201a7aecfa5f8bd050\nparent 975980427bd4b533e4116a8211598fff73780ab0\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1649167011 +0200\ncommitter GitHub <noreply@github.com> 1649167011 +0200\n\nRollup merge of #95670 - TaKO8Ki:remove-unused-function-parameters, r=davidtwco\n\nRefactor: remove unused function parameters\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68329648ac080aa4be26c2712aef283cd9ca6ea0", "html_url": "https://github.com/rust-lang/rust/commit/68329648ac080aa4be26c2712aef283cd9ca6ea0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68329648ac080aa4be26c2712aef283cd9ca6ea0/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5e763ace3c6e9e5d23cfe201a7aecfa5f8bd050", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5e763ace3c6e9e5d23cfe201a7aecfa5f8bd050", "html_url": "https://github.com/rust-lang/rust/commit/b5e763ace3c6e9e5d23cfe201a7aecfa5f8bd050"}, {"sha": "975980427bd4b533e4116a8211598fff73780ab0", "url": "https://api.github.com/repos/rust-lang/rust/commits/975980427bd4b533e4116a8211598fff73780ab0", "html_url": "https://github.com/rust-lang/rust/commit/975980427bd4b533e4116a8211598fff73780ab0"}], "stats": {"total": 15, "additions": 3, "deletions": 12}, "files": [{"sha": "b945d687043b44d61df4f3e9295ed2a81f7a592b", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/68329648ac080aa4be26c2712aef283cd9ca6ea0/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68329648ac080aa4be26c2712aef283cd9ca6ea0/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=68329648ac080aa4be26c2712aef283cd9ca6ea0", "patch": "@@ -772,14 +772,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             Some((issued_span, span)),\n         );\n \n-        self.suggest_using_local_if_applicable(\n-            &mut err,\n-            location,\n-            (place, span),\n-            gen_borrow_kind,\n-            issued_borrow,\n-            explanation,\n-        );\n+        self.suggest_using_local_if_applicable(&mut err, location, issued_borrow, explanation);\n \n         err\n     }\n@@ -789,8 +782,6 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         &self,\n         err: &mut Diagnostic,\n         location: Location,\n-        (place, span): (Place<'tcx>, Span),\n-        gen_borrow_kind: BorrowKind,\n         issued_borrow: &BorrowData<'tcx>,\n         explanation: BorrowExplanation,\n     ) {\n@@ -822,7 +813,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             return;\n         };\n         let inner_param_uses = find_all_local_uses::find(self.body, inner_param.local);\n-        let Some((inner_call_loc,inner_call_term)) = inner_param_uses.into_iter().find_map(|loc| {\n+        let Some((inner_call_loc, inner_call_term)) = inner_param_uses.into_iter().find_map(|loc| {\n             let Either::Right(term) = self.body.stmt_at(loc) else {\n                 debug!(\"{:?} is a statement, so it can't be a call\", loc);\n                 return None;\n@@ -833,7 +824,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             };\n             debug!(\"checking call args for uses of inner_param: {:?}\", args);\n             if args.contains(&Operand::Move(inner_param)) {\n-                Some((loc,term))\n+                Some((loc, term))\n             } else {\n                 None\n             }"}]}