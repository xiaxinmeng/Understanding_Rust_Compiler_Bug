{"sha": "0ed8713d79048ef865f8cbdcd2d2939190c75c2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlZDg3MTNkNzkwNDhlZjg2NWY4Y2JkY2QyZDI5MzkxOTBjNzVjMmE=", "commit": {"author": {"name": "Dmitry Ermolov", "email": "epdmitry@yandex.ru", "date": "2013-07-30T19:23:19Z"}, "committer": {"name": "Dmitry Ermolov", "email": "epdmitry@yandex.ru", "date": "2013-07-30T19:23:19Z"}, "message": "Modify test to expose issue #6492.", "tree": {"sha": "a733a54a45077addbe3d2ba3528988c1da639f1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a733a54a45077addbe3d2ba3528988c1da639f1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ed8713d79048ef865f8cbdcd2d2939190c75c2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ed8713d79048ef865f8cbdcd2d2939190c75c2a", "html_url": "https://github.com/rust-lang/rust/commit/0ed8713d79048ef865f8cbdcd2d2939190c75c2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ed8713d79048ef865f8cbdcd2d2939190c75c2a/comments", "author": {"login": "dim-an", "id": 88889, "node_id": "MDQ6VXNlcjg4ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/88889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dim-an", "html_url": "https://github.com/dim-an", "followers_url": "https://api.github.com/users/dim-an/followers", "following_url": "https://api.github.com/users/dim-an/following{/other_user}", "gists_url": "https://api.github.com/users/dim-an/gists{/gist_id}", "starred_url": "https://api.github.com/users/dim-an/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dim-an/subscriptions", "organizations_url": "https://api.github.com/users/dim-an/orgs", "repos_url": "https://api.github.com/users/dim-an/repos", "events_url": "https://api.github.com/users/dim-an/events{/privacy}", "received_events_url": "https://api.github.com/users/dim-an/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dim-an", "id": 88889, "node_id": "MDQ6VXNlcjg4ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/88889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dim-an", "html_url": "https://github.com/dim-an", "followers_url": "https://api.github.com/users/dim-an/followers", "following_url": "https://api.github.com/users/dim-an/following{/other_user}", "gists_url": "https://api.github.com/users/dim-an/gists{/gist_id}", "starred_url": "https://api.github.com/users/dim-an/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dim-an/subscriptions", "organizations_url": "https://api.github.com/users/dim-an/orgs", "repos_url": "https://api.github.com/users/dim-an/repos", "events_url": "https://api.github.com/users/dim-an/events{/privacy}", "received_events_url": "https://api.github.com/users/dim-an/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "576f395ddfe3a47859df0419a0366abf7a8c185b", "url": "https://api.github.com/repos/rust-lang/rust/commits/576f395ddfe3a47859df0419a0366abf7a8c185b", "html_url": "https://github.com/rust-lang/rust/commit/576f395ddfe3a47859df0419a0366abf7a8c185b"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "0ae4887f7835b691e63888e5fbf44bf9222424ba", "filename": "src/libextra/getopts.rs", "status": "modified", "additions": 31, "deletions": 14, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/0ed8713d79048ef865f8cbdcd2d2939190c75c2a/src%2Flibextra%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ed8713d79048ef865f8cbdcd2d2939190c75c2a/src%2Flibextra%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fgetopts.rs?ref=0ed8713d79048ef865f8cbdcd2d2939190c75c2a", "patch": "@@ -1318,24 +1318,41 @@ mod tests {\n \n     #[test]\n     fn test_multi() {\n-        let args = ~[~\"-e\", ~\"foo\", ~\"--encrypt\", ~\"foo\"];\n         let opts = ~[optopt(\"e\"), optopt(\"encrypt\"), optopt(\"f\")];\n-        let matches = &match getopts(args, opts) {\n+\n+        let args_single = ~[~\"-e\", ~\"foo\"];\n+        let matches_single = &match getopts(args_single, opts) {\n+          result::Ok(m) => m,\n+          result::Err(_) => fail!()\n+        };\n+        assert!(opts_present(matches_single, [~\"e\"]));\n+        assert!(opts_present(matches_single, [~\"encrypt\", ~\"e\"]));\n+        assert!(opts_present(matches_single, [~\"e\", ~\"encrypt\"]));\n+        assert!(!opts_present(matches_single, [~\"encrypt\"]));\n+        assert!(!opts_present(matches_single, [~\"thing\"]));\n+        assert!(!opts_present(matches_single, []));\n+\n+        assert_eq!(opts_str(matches_single, [~\"e\"]), ~\"foo\");\n+        assert_eq!(opts_str(matches_single, [~\"e\", ~\"encrypt\"]), ~\"foo\");\n+        assert_eq!(opts_str(matches_single, [~\"encrypt\", ~\"e\"]), ~\"foo\");\n+\n+        let args_both = ~[~\"-e\", ~\"foo\", ~\"--encrypt\", ~\"foo\"];\n+        let matches_both = &match getopts(args_both, opts) {\n           result::Ok(m) => m,\n           result::Err(_) => fail!()\n         };\n-        assert!(opts_present(matches, [~\"e\"]));\n-        assert!(opts_present(matches, [~\"encrypt\"]));\n-        assert!(opts_present(matches, [~\"encrypt\", ~\"e\"]));\n-        assert!(opts_present(matches, [~\"e\", ~\"encrypt\"]));\n-        assert!(!opts_present(matches, [~\"f\"]));\n-        assert!(!opts_present(matches, [~\"thing\"]));\n-        assert!(!opts_present(matches, []));\n-\n-        assert_eq!(opts_str(matches, [~\"e\"]), ~\"foo\");\n-        assert_eq!(opts_str(matches, [~\"encrypt\"]), ~\"foo\");\n-        assert_eq!(opts_str(matches, [~\"e\", ~\"encrypt\"]), ~\"foo\");\n-        assert_eq!(opts_str(matches, [~\"encrypt\", ~\"e\"]), ~\"foo\");\n+        assert!(opts_present(matches_both, [~\"e\"]));\n+        assert!(opts_present(matches_both, [~\"encrypt\"]));\n+        assert!(opts_present(matches_both, [~\"encrypt\", ~\"e\"]));\n+        assert!(opts_present(matches_both, [~\"e\", ~\"encrypt\"]));\n+        assert!(!opts_present(matches_both, [~\"f\"]));\n+        assert!(!opts_present(matches_both, [~\"thing\"]));\n+        assert!(!opts_present(matches_both, []));\n+\n+        assert_eq!(opts_str(matches_both, [~\"e\"]), ~\"foo\");\n+        assert_eq!(opts_str(matches_both, [~\"encrypt\"]), ~\"foo\");\n+        assert_eq!(opts_str(matches_both, [~\"e\", ~\"encrypt\"]), ~\"foo\");\n+        assert_eq!(opts_str(matches_both, [~\"encrypt\", ~\"e\"]), ~\"foo\");\n     }\n \n     #[test]"}]}