{"sha": "bd6e52d831769ccf86d1bbd66444f13c800cac7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkNmU1MmQ4MzE3NjljY2Y4NmQxYmJkNjY0NDRmMTNjODAwY2FjN2U=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-04T15:37:12Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-04T15:37:12Z"}, "message": "fix the `drop_in_place` intrinsic for fat pointers", "tree": {"sha": "d0f2d52a5ace155b58b275fa59c172f71f153032", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0f2d52a5ace155b58b275fa59c172f71f153032"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd6e52d831769ccf86d1bbd66444f13c800cac7e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYHKsoAAoJEFbW7qD8Z6xGbU8P/AoyDZTj8LDw1yUgDaRT4p44\nA5E5Ths1XSZyPKbRU2bKCSlwTPq+NzQfZwEXDIquf9Yn5p2ER49+tgYkFojyKUOe\nfW9SWtqCwZTbwIWflOfbijuH8rGIz3RE3xfDZhxPNRX6TNu+wZpwoCMC1Db6lCc8\nF1+r8uyPS5YyMhltiNrQtDz3m8lZggbntpiXR7ndSRBKg2cY7WqyT+D3KSbDTKqo\nRRLvlD6iMYfOhVlsd1dERSRtVkLN/SffZZrgdmdHjeutz7kPYLhQ3iCwxI8ceOPY\n6Tegd62YMDXOuXHic7L1d8fiNmfwbboOg0txW99gOB0PduzWH91MEMqQIwacnJ6x\nJvG3E51g7sX02IzFZtQwykM+H6ql3p+yXMQVOCuHv5LGco1523ZxoqtICx/HvxzX\nEWkRNnGKd2gkMdQGYSwq5lBzNjnWGSh9FR/3HguUK9DMjcDsR/hbJvmazUaNdneG\n/bIzgWkV6BgirdfQbIh7B4XKVqXT5RVDz8OHPNaWrw4d0Jldl01IWpTcJMnMX9ax\ncZZKpBDsQGfKpEvqtUrHzZ12P7pWftWiks2VNBBacLC17Bjyz7TqjjndsDGS+2zk\nkaXme2g/0+IWuveuVwFotoz3f+RQndT1lJLtQv7PQSfG+XmIvoFA+3N1GBKXtvqm\nRVzedtfy03x5xSyynxzM\n=vOIh\n-----END PGP SIGNATURE-----", "payload": "tree d0f2d52a5ace155b58b275fa59c172f71f153032\nparent 0420c27c8e662990e884fc93f58eff5ea12dd995\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1478273832 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1478273832 +0100\n\nfix the `drop_in_place` intrinsic for fat pointers"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd6e52d831769ccf86d1bbd66444f13c800cac7e", "html_url": "https://github.com/rust-lang/rust/commit/bd6e52d831769ccf86d1bbd66444f13c800cac7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd6e52d831769ccf86d1bbd66444f13c800cac7e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0420c27c8e662990e884fc93f58eff5ea12dd995", "url": "https://api.github.com/repos/rust-lang/rust/commits/0420c27c8e662990e884fc93f58eff5ea12dd995", "html_url": "https://github.com/rust-lang/rust/commit/0420c27c8e662990e884fc93f58eff5ea12dd995"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "f6dc8778a5f3e6ce4990523b1ac3ba5b301abb3c", "filename": "src/interpreter/terminator/intrinsics.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bd6e52d831769ccf86d1bbd66444f13c800cac7e/src%2Finterpreter%2Fterminator%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd6e52d831769ccf86d1bbd66444f13c800cac7e/src%2Finterpreter%2Fterminator%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fterminator%2Fintrinsics.rs?ref=bd6e52d831769ccf86d1bbd66444f13c800cac7e", "patch": "@@ -123,9 +123,20 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n \n             \"drop_in_place\" => {\n                 let ty = substs.type_at(0);\n-                let ptr = arg_vals[0].read_ptr(&self.memory)?;\n+                let ptr_ty = self.tcx.mk_mut_ptr(ty);\n+                let lvalue = match self.follow_by_ref_value(arg_vals[0], ptr_ty)? {\n+                    Value::ByRef(_) => bug!(\"follow_by_ref_value returned ByRef\"),\n+                    Value::ByVal(ptr) => Lvalue::from_ptr(ptr.expect_ptr(\"drop_in_place first arg not a pointer\")),\n+                    Value::ByValPair(ptr, extra) => Lvalue::Ptr {\n+                        ptr: ptr.expect_ptr(\"drop_in_place first arg not a pointer\"),\n+                        extra: match extra.try_as_ptr() {\n+                            Some(vtable) => LvalueExtra::Vtable(vtable),\n+                            None => LvalueExtra::Length(extra.expect_uint(\"either pointer or not, but not neither\")),\n+                        },\n+                    },\n+                };\n                 let mut drops = Vec::new();\n-                self.drop(Lvalue::from_ptr(ptr), ty, &mut drops)?;\n+                self.drop(lvalue, ty, &mut drops)?;\n                 self.eval_drop_impls(drops)?;\n             }\n "}]}