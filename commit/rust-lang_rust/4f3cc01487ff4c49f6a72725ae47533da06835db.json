{"sha": "4f3cc01487ff4c49f6a72725ae47533da06835db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmM2NjMDE0ODdmZjRjNDlmNmE3MjcyNWFlNDc1MzNkYTA2ODM1ZGI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-02T23:45:20Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-06T02:09:52Z"}, "message": "Fix cross-crate inlining of static functions", "tree": {"sha": "91097009b89cf3b8e969db493b6384b37c6ba6c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91097009b89cf3b8e969db493b6384b37c6ba6c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f3cc01487ff4c49f6a72725ae47533da06835db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f3cc01487ff4c49f6a72725ae47533da06835db", "html_url": "https://github.com/rust-lang/rust/commit/4f3cc01487ff4c49f6a72725ae47533da06835db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f3cc01487ff4c49f6a72725ae47533da06835db/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bf9e6f58be43957b3e79f47b3020667a81630ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bf9e6f58be43957b3e79f47b3020667a81630ef", "html_url": "https://github.com/rust-lang/rust/commit/5bf9e6f58be43957b3e79f47b3020667a81630ef"}], "stats": {"total": 45, "additions": 36, "deletions": 9}, "files": [{"sha": "a9221eed18141d4e185acb349ff7d3c753f926a4", "filename": "src/librustc/middle/trans/inline.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4f3cc01487ff4c49f6a72725ae47533da06835db/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3cc01487ff4c49f6a72725ae47533da06835db/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Finline.rs?ref=4f3cc01487ff4c49f6a72725ae47533da06835db", "patch": "@@ -13,7 +13,7 @@ use syntax::ast;\n use syntax::ast_util::local_def;\n use syntax::ast_map::{path, path_mod, path_name};\n use base::{trans_item, get_item_val, self_arg, trans_fn, impl_owned_self,\n-           impl_self, get_insn_ctxt};\n+           impl_self, no_self, get_insn_ctxt};\n \n // `translate` will be true if this function is allowed to translate the\n // item and false otherwise. Currently, this parameter is set to false when\n@@ -83,14 +83,18 @@ fn maybe_instantiate_inline(ccx: @crate_ctxt, fn_id: ast::def_id,\n                 let path = vec::append(\n                     ty::item_path(ccx.tcx, impl_did),\n                     ~[path_name(mth.ident)]);\n-                let self_ty = ty::node_id_to_type(ccx.tcx, mth.self_id);\n-                debug!(\"calling inline trans_fn with self_ty %s\",\n-                       ty_to_str(ccx.tcx, self_ty));\n-                let self_kind;\n-                match mth.self_ty.node {\n-                    ast::sty_value => self_kind = impl_owned_self(self_ty),\n-                    _ => self_kind = impl_self(self_ty),\n-                }\n+                let self_kind = match mth.self_ty.node {\n+                    ast::sty_static => no_self,\n+                    _ => {\n+                        let self_ty = ty::node_id_to_type(ccx.tcx, mth.self_id);\n+                        debug!(\"calling inline trans_fn with self_ty %s\",\n+                               ty_to_str(ccx.tcx, self_ty));\n+                        match mth.self_ty.node {\n+                            ast::sty_value => impl_owned_self(self_ty),\n+                            _ => impl_self(self_ty),\n+                        }\n+                    }\n+                };\n                 trans_fn(ccx,\n                          path,\n                          mth.decl,"}, {"sha": "d642f6688ad52324c7e6ca97ce691338280ce0f4", "filename": "src/test/auxiliary/static_fn_inline_xc_aux.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4f3cc01487ff4c49f6a72725ae47533da06835db/src%2Ftest%2Fauxiliary%2Fstatic_fn_inline_xc_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3cc01487ff4c49f6a72725ae47533da06835db/src%2Ftest%2Fauxiliary%2Fstatic_fn_inline_xc_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fstatic_fn_inline_xc_aux.rs?ref=4f3cc01487ff4c49f6a72725ae47533da06835db", "patch": "@@ -0,0 +1,14 @@\n+\n+pub mod num {\n+    pub trait Num2 {\n+        static pure fn from_int2(n: int) -> self;\n+    }\n+}\n+\n+pub mod float {\n+    impl float: num::Num2 {\n+        #[inline]\n+        static pure fn from_int2(n: int) -> float { return n as float;  }\n+    }\n+}\n+"}, {"sha": "5e15859d9c8791d2536771b50b77b56949b66577", "filename": "src/test/run-pass/static-fn-inline-xc.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4f3cc01487ff4c49f6a72725ae47533da06835db/src%2Ftest%2Frun-pass%2Fstatic-fn-inline-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f3cc01487ff4c49f6a72725ae47533da06835db/src%2Ftest%2Frun-pass%2Fstatic-fn-inline-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-fn-inline-xc.rs?ref=4f3cc01487ff4c49f6a72725ae47533da06835db", "patch": "@@ -0,0 +1,9 @@\n+// aux-build:static_fn_inline_xc_aux.rs\n+\n+extern mod mycore(name =\"static_fn_inline_xc_aux\");\n+\n+use mycore::num;\n+\n+fn main() {\n+    let _1:float = num::from_int2(1i);\n+}"}]}