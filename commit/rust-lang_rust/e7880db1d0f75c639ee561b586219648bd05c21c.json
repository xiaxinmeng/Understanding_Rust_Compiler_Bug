{"sha": "e7880db1d0f75c639ee561b586219648bd05c21c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ODgwZGIxZDBmNzVjNjM5ZWU1NjFiNTg2MjE5NjQ4YmQwNWMyMWM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-14T06:52:03Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-14T06:57:57Z"}, "message": "Expansion stack scaffold", "tree": {"sha": "cab65bd01e4afbb85befece549e04694309c42f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cab65bd01e4afbb85befece549e04694309c42f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7880db1d0f75c639ee561b586219648bd05c21c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7880db1d0f75c639ee561b586219648bd05c21c", "html_url": "https://github.com/rust-lang/rust/commit/e7880db1d0f75c639ee561b586219648bd05c21c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7880db1d0f75c639ee561b586219648bd05c21c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c89010df2d586eec33b50f3afcc4b2226da32672", "url": "https://api.github.com/repos/rust-lang/rust/commits/c89010df2d586eec33b50f3afcc4b2226da32672", "html_url": "https://github.com/rust-lang/rust/commit/c89010df2d586eec33b50f3afcc4b2226da32672"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "3b262e3bd8e7fc55c042f45f03b67fb73a262728", "filename": "crates/ra_hir_def/src/body.rs", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/e7880db1d0f75c639ee561b586219648bd05c21c/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7880db1d0f75c639ee561b586219648bd05c21c/crates%2Fra_hir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody.rs?ref=e7880db1d0f75c639ee561b586219648bd05c21c", "patch": "@@ -3,7 +3,7 @@ mod lower;\n \n use std::{ops::Index, sync::Arc};\n \n-use hir_expand::{either::Either, HirFileId, MacroDefId, Source};\n+use hir_expand::{either::Either, hygiene::Hygiene, HirFileId, MacroDefId, Source};\n use ra_arena::{map::ArenaMap, Arena};\n use ra_syntax::{ast, AstPtr};\n use rustc_hash::FxHashMap;\n@@ -20,13 +20,34 @@ pub struct Expander {\n     crate_def_map: Arc<CrateDefMap>,\n     original_file_id: HirFileId,\n     current_file_id: HirFileId,\n+    hygiene: Hygiene,\n     module: ModuleId,\n }\n \n impl Expander {\n     pub fn new(db: &impl DefDatabase2, current_file_id: HirFileId, module: ModuleId) -> Expander {\n         let crate_def_map = db.crate_def_map(module.krate);\n-        Expander { crate_def_map, original_file_id: current_file_id, current_file_id, module }\n+        let hygiene = Hygiene::new(db, current_file_id);\n+        Expander {\n+            crate_def_map,\n+            original_file_id: current_file_id,\n+            current_file_id,\n+            hygiene,\n+            module,\n+        }\n+    }\n+\n+    fn enter(&mut self, db: &impl DefDatabase2, file_id: HirFileId) -> Mark {\n+        let mark = Mark { file_id: self.current_file_id };\n+        self.hygiene = Hygiene::new(db, file_id);\n+        self.current_file_id = file_id;\n+        mark\n+    }\n+\n+    fn exit(&mut self, db: &impl DefDatabase2, mark: Mark) {\n+        self.hygiene = Hygiene::new(db, mark.file_id);\n+        self.current_file_id = mark.file_id;\n+        std::mem::forget(mark);\n     }\n \n     // FIXME: remove this.\n@@ -43,6 +64,18 @@ impl Expander {\n     }\n }\n \n+struct Mark {\n+    file_id: HirFileId,\n+}\n+\n+impl Drop for Mark {\n+    fn drop(&mut self) {\n+        if !std::thread::panicking() {\n+            panic!(\"dropped mark\")\n+        }\n+    }\n+}\n+\n /// The body of an item (function, const etc.).\n #[derive(Debug, Eq, PartialEq)]\n pub struct Body {"}, {"sha": "5c291421a134f07b3776b66c817372e84d8aa98a", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e7880db1d0f75c639ee561b586219648bd05c21c/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7880db1d0f75c639ee561b586219648bd05c21c/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=e7880db1d0f75c639ee561b586219648bd05c21c", "patch": "@@ -2,7 +2,6 @@\n \n use hir_expand::{\n     either::Either,\n-    hygiene::Hygiene,\n     name::{self, AsName, Name},\n     AstId, MacroCallLoc, MacroFileKind,\n };\n@@ -447,10 +446,9 @@ where\n                         if let Some(node) = self.db.parse_or_expand(file_id) {\n                             if let Some(expr) = ast::Expr::cast(node) {\n                                 log::debug!(\"macro expansion {:#?}\", expr.syntax());\n-                                let old_file_id =\n-                                    std::mem::replace(&mut self.expander.current_file_id, file_id);\n+                                let mark = self.expander.enter(self.db, file_id);\n                                 let id = self.collect_expr(expr);\n-                                self.expander.current_file_id = old_file_id;\n+                                self.expander.exit(self.db, mark);\n                                 return id;\n                             }\n                         }\n@@ -572,8 +570,7 @@ where\n     }\n \n     fn parse_path(&mut self, path: ast::Path) -> Option<Path> {\n-        let hygiene = Hygiene::new(self.db, self.expander.current_file_id);\n-        Path::from_src(path, &hygiene)\n+        Path::from_src(path, &self.expander.hygiene)\n     }\n }\n "}]}