{"sha": "c77c5c4674c92b342132a56bd1b59f86af3d5a63", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3N2M1YzQ2NzRjOTJiMzQyMTMyYTU2YmQxYjU5Zjg2YWYzZDVhNjM=", "commit": {"author": {"name": "Armin Ronacher", "email": "armin.ronacher@active-4.com", "date": "2013-02-19T01:54:05Z"}, "committer": {"name": "Armin Ronacher", "email": "armin.ronacher@active-4.com", "date": "2013-02-19T01:54:05Z"}, "message": "Added is_restricted() to path", "tree": {"sha": "0d7dba40a542a7a331cb3bbef40216bdc6e6644d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d7dba40a542a7a331cb3bbef40216bdc6e6644d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c77c5c4674c92b342132a56bd1b59f86af3d5a63", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c77c5c4674c92b342132a56bd1b59f86af3d5a63", "html_url": "https://github.com/rust-lang/rust/commit/c77c5c4674c92b342132a56bd1b59f86af3d5a63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c77c5c4674c92b342132a56bd1b59f86af3d5a63/comments", "author": {"login": "mitsuhiko", "id": 7396, "node_id": "MDQ6VXNlcjczOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/7396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitsuhiko", "html_url": "https://github.com/mitsuhiko", "followers_url": "https://api.github.com/users/mitsuhiko/followers", "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}", "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions", "organizations_url": "https://api.github.com/users/mitsuhiko/orgs", "repos_url": "https://api.github.com/users/mitsuhiko/repos", "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}", "received_events_url": "https://api.github.com/users/mitsuhiko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mitsuhiko", "id": 7396, "node_id": "MDQ6VXNlcjczOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/7396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitsuhiko", "html_url": "https://github.com/mitsuhiko", "followers_url": "https://api.github.com/users/mitsuhiko/followers", "following_url": "https://api.github.com/users/mitsuhiko/following{/other_user}", "gists_url": "https://api.github.com/users/mitsuhiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitsuhiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitsuhiko/subscriptions", "organizations_url": "https://api.github.com/users/mitsuhiko/orgs", "repos_url": "https://api.github.com/users/mitsuhiko/repos", "events_url": "https://api.github.com/users/mitsuhiko/events{/privacy}", "received_events_url": "https://api.github.com/users/mitsuhiko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b07eab5faab16a975df89eae8ea5d7276bc44507", "url": "https://api.github.com/repos/rust-lang/rust/commits/b07eab5faab16a975df89eae8ea5d7276bc44507", "html_url": "https://github.com/rust-lang/rust/commit/b07eab5faab16a975df89eae8ea5d7276bc44507"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "1753862649f57387072e06a6b25a9353e1597608", "filename": "src/libcore/path.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c77c5c4674c92b342132a56bd1b59f86af3d5a63/src%2Flibcore%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77c5c4674c92b342132a56bd1b59f86af3d5a63/src%2Flibcore%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpath.rs?ref=c77c5c4674c92b342132a56bd1b59f86af3d5a63", "patch": "@@ -65,6 +65,7 @@ pub trait GenericPath {\n     pure fn pop() -> Self;\n \n     pure fn unsafe_join((&Self)) -> Self;\n+    pure fn is_restricted() -> bool;\n \n     pure fn normalize() -> Self;\n }\n@@ -496,6 +497,10 @@ impl GenericPath for PosixPath {\n         }\n     }\n \n+    pure fn is_restricted() -> bool {\n+        false\n+    }\n+\n     pure fn push_many(cs: &[~str]) -> PosixPath {\n         let mut v = copy self.components;\n         for cs.each |e| {\n@@ -738,6 +743,19 @@ impl GenericPath for WindowsPath {\n         }\n     }\n \n+    pure fn is_restricted() -> bool {\n+        match self.filestem() {\n+            Some(stem) => {\n+                match stem.to_lower() {\n+                    ~\"con\" | ~\"aux\" | ~\"com1\" | ~\"com2\" | ~\"com3\" | ~\"com4\" |\n+                    ~\"lpt1\" | ~\"lpt2\" | ~\"lpt3\" | ~\"prn\" | ~\"nul\" => true,\n+                    _ => false\n+                }\n+            },\n+            None => false\n+        }\n+    }\n+\n     pure fn push_many(cs: &[~str]) -> WindowsPath {\n         let mut v = copy self.components;\n         for cs.each |e| {\n@@ -1094,4 +1112,12 @@ mod tests {\n             .normalize()),\n           \"C:\\\\foo\");\n     }\n+\n+    #[test]\n+    fn test_windows_path_restrictions() {\n+        assert WindowsPath(\"hi\").is_restricted() == false;\n+        assert WindowsPath(\"C:\\\\NUL\").is_restricted() == true;\n+        assert WindowsPath(\"C:\\\\COM1.TXT\").is_restricted() == true;\n+        assert WindowsPath(\"c:\\\\prn.exe\").is_restricted() == true;\n+    }\n }"}]}