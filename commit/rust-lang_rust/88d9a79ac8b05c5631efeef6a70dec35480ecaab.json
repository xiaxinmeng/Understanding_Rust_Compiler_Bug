{"sha": "88d9a79ac8b05c5631efeef6a70dec35480ecaab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZDlhNzlhYzhiMDVjNTYzMWVmZWVmNmE3MGRlYzM1NDgwZWNhYWI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-11T23:57:34Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-11T23:57:34Z"}, "message": "Some ELF correctness issues, but apparently none enough to placate gdb.", "tree": {"sha": "d84071d0a5beabad2610260d07c99ad6cae72111", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d84071d0a5beabad2610260d07c99ad6cae72111"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88d9a79ac8b05c5631efeef6a70dec35480ecaab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88d9a79ac8b05c5631efeef6a70dec35480ecaab", "html_url": "https://github.com/rust-lang/rust/commit/88d9a79ac8b05c5631efeef6a70dec35480ecaab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88d9a79ac8b05c5631efeef6a70dec35480ecaab/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22719e45b81fe2985868afa0935cd7b3a5cf6d05", "url": "https://api.github.com/repos/rust-lang/rust/commits/22719e45b81fe2985868afa0935cd7b3a5cf6d05", "html_url": "https://github.com/rust-lang/rust/commit/22719e45b81fe2985868afa0935cd7b3a5cf6d05"}], "stats": {"total": 75, "additions": 50, "deletions": 25}, "files": [{"sha": "ed21ab36cb24e2cc63506b80821f79b3f905ef14", "filename": "src/boot/be/elf.ml", "status": "modified", "additions": 50, "deletions": 25, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/88d9a79ac8b05c5631efeef6a70dec35480ecaab/src%2Fboot%2Fbe%2Felf.ml", "raw_url": "https://github.com/rust-lang/rust/raw/88d9a79ac8b05c5631efeef6a70dec35480ecaab/src%2Fboot%2Fbe%2Felf.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fbe%2Felf.ml?ref=88d9a79ac8b05c5631efeef6a70dec35480ecaab", "patch": "@@ -177,6 +177,7 @@ let section_header\n     ~(sh_addralign:int64)\n     ~(sh_entsize:int64)\n     ~(sh_link:int64 option)\n+    ~(sh_info:int64 option)\n     : frag =\n   SEQ\n     [|\n@@ -213,7 +214,9 @@ let section_header\n       WORD (TY_u32, (IMM (match sh_link with\n                               None -> 0L\n                             | Some i -> i)));\n-      WORD (TY_u32, (IMM 0L)); (* sh_info *)\n+      WORD (TY_u32, (IMM (match sh_info with\n+                              None -> 0L\n+                            | Some i -> i)));\n       WORD (TY_u32, (IMM sh_addralign));\n       WORD (TY_u32, (IMM sh_entsize));\n     |]\n@@ -633,7 +636,7 @@ let elf32_linux_x86_file\n   let dynsymndx      = 4L in  (* Section index of .dynsym *)\n   let dynstrndx      = 5L in  (* Section index of .dynstr *)\n   (* let hashndx        = 6L in *)  (* Section index of .hash *)\n-  (* let pltndx         = 7L in *)  (* Section index of .plt *)\n+  let pltndx         = 7L in  (* Section index of .plt *)\n   (* let gotpltndx      = 8L in *)  (* Section index of .got.plt *)\n   (* let relapltndx     = 9L in *)  (* Section index of .rela.plt *)\n   let datandx        = 10L in  (* Section index of .data *)\n@@ -695,7 +698,8 @@ let elf32_linux_x86_file\n            ~section_fixup: None\n            ~sh_addralign: 0L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n \n         (* .interp *)\n         (section_header\n@@ -706,7 +710,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some interp_section_fixup)\n            ~sh_addralign: 1L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n \n         (* .text *)\n         (section_header\n@@ -717,7 +722,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some text_section_fixup)\n            ~sh_addralign: 32L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n \n         (* .rodata *)\n         (section_header\n@@ -728,7 +734,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some rodata_section_fixup)\n            ~sh_addralign: 32L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n \n         (* .dynsym *)\n         (section_header\n@@ -737,9 +744,10 @@ let elf32_linux_x86_file\n            ~sh_type: SHT_DYNSYM\n            ~sh_flags: [ SHF_ALLOC ]\n            ~section_fixup: (Some dynsym_section_fixup)\n-           ~sh_addralign: 8L\n+           ~sh_addralign: 4L\n            ~sh_entsize: elf32_symsize\n-           ~sh_link: (Some dynstrndx) );\n+           ~sh_link: (Some dynstrndx)\n+           ~sh_info: None );\n \n         (* .dynstr *)\n         (section_header\n@@ -750,7 +758,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some dynstr_section_fixup)\n            ~sh_addralign: 1L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n \n         (* .hash *)\n         (section_header\n@@ -761,7 +770,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some hash_section_fixup)\n            ~sh_addralign: 4L\n            ~sh_entsize: 4L\n-           ~sh_link: (Some dynsymndx));\n+           ~sh_link: (Some dynsymndx)\n+           ~sh_info: None);\n \n         (* .plt *)\n         (section_header\n@@ -772,7 +782,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some plt_section_fixup)\n            ~sh_addralign: 4L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n \n         (* .got.plt *)\n         (section_header\n@@ -783,7 +794,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some got_plt_section_fixup)\n            ~sh_addralign: 4L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n \n         (* .rela.plt *)\n         (section_header\n@@ -794,7 +806,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some rela_plt_section_fixup)\n            ~sh_addralign: 4L\n            ~sh_entsize: elf32_rela_entsz\n-           ~sh_link: (Some dynsymndx));\n+           ~sh_link: (Some dynsymndx)\n+           ~sh_info: (Some pltndx));\n \n         (* .data *)\n         (section_header\n@@ -805,7 +818,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some data_section_fixup)\n            ~sh_addralign: 32L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n \n         (* .bss *)\n         (section_header\n@@ -816,7 +830,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some bss_section_fixup)\n            ~sh_addralign: 32L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n \n         (* .dynamic *)\n         (section_header\n@@ -827,7 +842,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some dynamic_section_fixup)\n            ~sh_addralign: 8L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: (Some dynstrndx)\n+           ~sh_info: None);\n \n         (* .shstrtab *)\n         (section_header\n@@ -838,7 +854,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some shstrtab_section_fixup)\n            ~sh_addralign: 1L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n \n (* \n    FIXME: uncomment the dwarf section headers as you make use of them;\n@@ -857,7 +874,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some sem.Semant.ctxt_debug_aranges_fixup)\n            ~sh_addralign: 8L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n *)\n         (* .debug_pubnames *)\n (*\n@@ -869,7 +887,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some sem.Semant.ctxt_debug_pubnames_fixup)\n            ~sh_addralign: 1L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n *)\n \n         (* .debug_info *)\n@@ -881,7 +900,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some sem.Semant.ctxt_debug_info_fixup)\n            ~sh_addralign: 1L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n \n         (* .debug_abbrev *)\n         (section_header\n@@ -892,7 +912,9 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some sem.Semant.ctxt_debug_abbrev_fixup)\n            ~sh_addralign: 1L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n+\n         (* .debug_line *)\n (*\n         (section_header\n@@ -903,7 +925,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some sem.Semant.ctxt_debug_line_fixup)\n            ~sh_addralign: 1L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n *)\n \n         (* .debug_frame *)\n@@ -916,7 +939,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some sem.Semant.ctxt_debug_frame_fixup)\n            ~sh_addralign: 4L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n *)\n \n         (* .note.rust *)\n@@ -928,7 +952,8 @@ let elf32_linux_x86_file\n            ~section_fixup: (Some note_rust_section_fixup)\n            ~sh_addralign: 1L\n            ~sh_entsize: 0L\n-           ~sh_link: None);\n+           ~sh_link: None\n+           ~sh_info: None);\n \n       |]\n   in\n@@ -999,7 +1024,7 @@ let elf32_linux_x86_file\n     elf32_header\n       ~sess\n       ~ei_data: ELFDATA2LSB\n-      ~e_type: ET_DYN\n+      ~e_type: (if sess.Session.sess_library_mode then ET_DYN else ET_EXEC)\n       ~e_machine: EM_386\n       ~e_version: EV_CURRENT\n "}]}