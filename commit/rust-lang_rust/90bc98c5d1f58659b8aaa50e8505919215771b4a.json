{"sha": "90bc98c5d1f58659b8aaa50e8505919215771b4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwYmM5OGM1ZDFmNTg2NTliOGFhYTUwZTg1MDU5MTkyMTU3NzFiNGE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-01-10T03:10:45Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-01-10T19:41:12Z"}, "message": "Modify message to match label", "tree": {"sha": "7ea74cc751626752229377e67511c96b85e9bc76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ea74cc751626752229377e67511c96b85e9bc76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90bc98c5d1f58659b8aaa50e8505919215771b4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90bc98c5d1f58659b8aaa50e8505919215771b4a", "html_url": "https://github.com/rust-lang/rust/commit/90bc98c5d1f58659b8aaa50e8505919215771b4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90bc98c5d1f58659b8aaa50e8505919215771b4a/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18908184de3d6f29c8bd2a364b105fd89a7f0377", "url": "https://api.github.com/repos/rust-lang/rust/commits/18908184de3d6f29c8bd2a364b105fd89a7f0377", "html_url": "https://github.com/rust-lang/rust/commit/18908184de3d6f29c8bd2a364b105fd89a7f0377"}], "stats": {"total": 48, "additions": 30, "deletions": 18}, "files": [{"sha": "4529e4bab752cbb51fe1ce2f3526d796d577ed6b", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/90bc98c5d1f58659b8aaa50e8505919215771b4a/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90bc98c5d1f58659b8aaa50e8505919215771b4a/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=90bc98c5d1f58659b8aaa50e8505919215771b4a", "patch": "@@ -772,6 +772,7 @@ impl<'a, 'tcx> BorrowckCtxt<'a, 'tcx> {\n                                                 &move_data::Assignment) {\n         let mut err = self.cannot_reassign_immutable(span,\n                                                      &self.loan_path_to_string(lp),\n+                                                     false,\n                                                      Origin::Ast);\n         err.span_label(span, \"cannot assign twice to immutable variable\");\n         if span != assign.span {"}, {"sha": "a3c1a4bd88c5cafe57e282b9bdb63b6faf8b463e", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/90bc98c5d1f58659b8aaa50e8505919215771b4a/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90bc98c5d1f58659b8aaa50e8505919215771b4a/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=90bc98c5d1f58659b8aaa50e8505919215771b4a", "patch": "@@ -568,25 +568,31 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n         (place, span): (&Place<'tcx>, Span),\n         assigned_span: Span,\n     ) {\n+        let is_arg = if let Place::Local(local) = place {\n+            if let LocalKind::Arg = self.mir.local_kind(*local) {\n+                true\n+            } else {\n+                false\n+            }\n+        } else {\n+            false\n+        };\n+\n         let mut err = self.tcx.cannot_reassign_immutable(\n             span,\n             &self.describe_place(place).unwrap_or(\"_\".to_owned()),\n+            is_arg,\n             Origin::Mir,\n         );\n-        let mut msg = \"cannot assign twice to immutable variable\";\n+        let msg = if is_arg {\n+            \"cannot assign to immutable argument\"\n+        } else {\n+            \"cannot assign twice to immutable variable\"\n+        };\n         if span != assigned_span {\n-            let suggestion = if let Place::Local(local) = place {\n-                if let LocalKind::Arg = self.mir.local_kind(*local) {\n-                    msg = \"cannot assign to immutable argument\";\n-                    err.span_label(assigned_span, \"argument not declared as `mut`\");\n-                    true\n-                } else {\n-                    false\n-                }\n+            if is_arg {\n+                err.span_label(assigned_span, \"argument not declared as `mut`\");\n             } else {\n-                false\n-            };\n-            if !suggestion {\n                 let value_msg = match self.describe_place(place) {\n                     Some(name) => format!(\"`{}`\", name),\n                     None => \"value\".to_owned(),"}, {"sha": "4a7ee397aec00b887fd6382f22c52713e93eb22d", "filename": "src/librustc_mir/util/borrowck_errors.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/90bc98c5d1f58659b8aaa50e8505919215771b4a/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90bc98c5d1f58659b8aaa50e8505919215771b4a/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs?ref=90bc98c5d1f58659b8aaa50e8505919215771b4a", "patch": "@@ -269,12 +269,17 @@ pub trait BorrowckErrors {\n         self.cancel_if_wrong_origin(err, o)\n     }\n \n-    fn cannot_reassign_immutable(&self, span: Span, desc: &str, o: Origin)\n+    fn cannot_reassign_immutable(&self, span: Span, desc: &str, is_arg: bool, o: Origin)\n                                  -> DiagnosticBuilder\n     {\n+        let msg = if is_arg {\n+            \"to immutable argument\"\n+        } else {\n+            \"twice to immutable variable\"\n+        };\n         let err = struct_span_err!(self, span, E0384,\n-                                   \"cannot assign twice to immutable variable `{}`{OGN}\",\n-                                   desc, OGN=o);\n+                                   \"cannot assign {} `{}`{OGN}\",\n+                                   msg, desc, OGN=o);\n \n         self.cancel_if_wrong_origin(err, o)\n     }"}, {"sha": "ecddb4c101fdf7f89d26008f9ff4768dc2e513fd", "filename": "src/test/compile-fail/issue-45199.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90bc98c5d1f58659b8aaa50e8505919215771b4a/src%2Ftest%2Fcompile-fail%2Fissue-45199.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90bc98c5d1f58659b8aaa50e8505919215771b4a/src%2Ftest%2Fcompile-fail%2Fissue-45199.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-45199.rs?ref=90bc98c5d1f58659b8aaa50e8505919215771b4a", "patch": "@@ -33,7 +33,7 @@ fn test_call() {\n fn test_args(b: Box<i32>) {  //[ast]~ NOTE first assignment\n                                 //[mir]~^ NOTE argument not declared as `mut`\n     b = Box::new(2);            //[ast]~ ERROR cannot assign twice to immutable variable\n-                                //[mir]~^ ERROR cannot assign twice to immutable variable `b`\n+                                //[mir]~^ ERROR cannot assign to immutable argument `b`\n                                 //[ast]~| NOTE cannot assign twice to immutable\n                                 //[mir]~| NOTE cannot assign to immutable argument\n }"}, {"sha": "7c387ed080821095adf683cfa791d70179c5858c", "filename": "src/test/ui/borrowck/immutable-arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90bc98c5d1f58659b8aaa50e8505919215771b4a/src%2Ftest%2Fui%2Fborrowck%2Fimmutable-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90bc98c5d1f58659b8aaa50e8505919215771b4a/src%2Ftest%2Fui%2Fborrowck%2Fimmutable-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fimmutable-arg.rs?ref=90bc98c5d1f58659b8aaa50e8505919215771b4a", "patch": "@@ -12,7 +12,7 @@\n \n fn foo(_x: u32) {\n     _x = 4;\n-    //~^ ERROR cannot assign twice to immutable variable `_x` (Mir)\n+    //~^ ERROR cannot assign to immutable argument `_x` (Mir)\n     //~^^ ERROR cannot assign twice to immutable variable `_x` (Ast)\n }\n "}, {"sha": "40e1878f7321421649e319964ba0dc74dac4e655", "filename": "src/test/ui/borrowck/immutable-arg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90bc98c5d1f58659b8aaa50e8505919215771b4a/src%2Ftest%2Fui%2Fborrowck%2Fimmutable-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90bc98c5d1f58659b8aaa50e8505919215771b4a/src%2Ftest%2Fui%2Fborrowck%2Fimmutable-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fimmutable-arg.stderr?ref=90bc98c5d1f58659b8aaa50e8505919215771b4a", "patch": "@@ -6,7 +6,7 @@ error[E0384]: cannot assign twice to immutable variable `_x` (Ast)\n 14 |     _x = 4;\n    |     ^^^^^^ cannot assign twice to immutable variable\n \n-error[E0384]: cannot assign twice to immutable variable `_x` (Mir)\n+error[E0384]: cannot assign to immutable argument `_x` (Mir)\n   --> $DIR/immutable-arg.rs:14:5\n    |\n 13 | fn foo(_x: u32) {"}]}