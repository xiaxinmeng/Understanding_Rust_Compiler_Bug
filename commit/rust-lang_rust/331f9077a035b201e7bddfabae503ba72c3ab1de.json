{"sha": "331f9077a035b201e7bddfabae503ba72c3ab1de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzMWY5MDc3YTAzNWIyMDFlN2JkZGZhYmFlNTAzYmE3MmMzYWIxZGU=", "commit": {"author": {"name": "Luca Bruno", "email": "lucab@debian.org", "date": "2014-03-07T23:27:49Z"}, "committer": {"name": "Luca Bruno", "email": "lucab@debian.org", "date": "2014-03-08T08:10:12Z"}, "message": "doc: add two missing char methods doc-strings\n\nXID_* property are defined in UAX #31, just reference it here.\n\nSigned-off-by: Luca Bruno <lucab@debian.org>", "tree": {"sha": "f2e61c4cdaf5cbd858cc3251774f1936ba59f60f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2e61c4cdaf5cbd858cc3251774f1936ba59f60f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/331f9077a035b201e7bddfabae503ba72c3ab1de", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/331f9077a035b201e7bddfabae503ba72c3ab1de", "html_url": "https://github.com/rust-lang/rust/commit/331f9077a035b201e7bddfabae503ba72c3ab1de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/331f9077a035b201e7bddfabae503ba72c3ab1de/comments", "author": {"login": "lucab", "id": 98086, "node_id": "MDQ6VXNlcjk4MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/98086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucab", "html_url": "https://github.com/lucab", "followers_url": "https://api.github.com/users/lucab/followers", "following_url": "https://api.github.com/users/lucab/following{/other_user}", "gists_url": "https://api.github.com/users/lucab/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucab/subscriptions", "organizations_url": "https://api.github.com/users/lucab/orgs", "repos_url": "https://api.github.com/users/lucab/repos", "events_url": "https://api.github.com/users/lucab/events{/privacy}", "received_events_url": "https://api.github.com/users/lucab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lucab", "id": 98086, "node_id": "MDQ6VXNlcjk4MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/98086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucab", "html_url": "https://github.com/lucab", "followers_url": "https://api.github.com/users/lucab/followers", "following_url": "https://api.github.com/users/lucab/following{/other_user}", "gists_url": "https://api.github.com/users/lucab/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucab/subscriptions", "organizations_url": "https://api.github.com/users/lucab/orgs", "repos_url": "https://api.github.com/users/lucab/repos", "events_url": "https://api.github.com/users/lucab/events{/privacy}", "received_events_url": "https://api.github.com/users/lucab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b3c63bdd5ef9d772e3c74061761e5c0b326f9c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b3c63bdd5ef9d772e3c74061761e5c0b326f9c0", "html_url": "https://github.com/rust-lang/rust/commit/9b3c63bdd5ef9d772e3c74061761e5c0b326f9c0"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "4c0f77586db44eacb01cb6a56acac82e4ce22889", "filename": "src/libstd/char.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/331f9077a035b201e7bddfabae503ba72c3ab1de/src%2Flibstd%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/331f9077a035b201e7bddfabae503ba72c3ab1de/src%2Flibstd%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fchar.rs?ref=331f9077a035b201e7bddfabae503ba72c3ab1de", "patch": "@@ -94,9 +94,19 @@ pub fn from_u32(i: u32) -> Option<char> {\n /// Returns whether the specified `char` is considered a Unicode alphabetic\n /// code point\n pub fn is_alphabetic(c: char) -> bool   { derived_property::Alphabetic(c) }\n-#[allow(missing_doc)]\n+\n+/// Returns whether the specified `char` satisfies the 'XID_Start' Unicode property\n+///\n+/// 'XID_Start' is a Unicode Derived Property specified in\n+/// [UAX #31](http://unicode.org/reports/tr31/#NFKC_Modifications),\n+/// mostly similar to ID_Start but modified for closure under NFKx.\n pub fn is_XID_start(c: char) -> bool    { derived_property::XID_Start(c) }\n-#[allow(missing_doc)]\n+\n+/// Returns whether the specified `char` satisfies the 'XID_Continue' Unicode property\n+///\n+/// 'XID_Continue' is a Unicode Derived Property specified in\n+/// [UAX #31](http://unicode.org/reports/tr31/#NFKC_Modifications),\n+/// mostly similar to 'ID_Continue' but modified for closure under NFKx.\n pub fn is_XID_continue(c: char) -> bool { derived_property::XID_Continue(c) }\n \n ///"}]}