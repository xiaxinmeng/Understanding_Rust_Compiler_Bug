{"sha": "cdddd205f600c844ef1bae3038bb1da48c382b11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkZGRkMjA1ZjYwMGM4NDRlZjFiYWUzMDM4YmIxZGE0OGMzODJiMTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-24T19:03:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-24T19:03:49Z"}, "message": "Fix metrics", "tree": {"sha": "ce84e06d602cc35d279e1ae615ee8d428860e8f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce84e06d602cc35d279e1ae615ee8d428860e8f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdddd205f600c844ef1bae3038bb1da48c382b11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdddd205f600c844ef1bae3038bb1da48c382b11", "html_url": "https://github.com/rust-lang/rust/commit/cdddd205f600c844ef1bae3038bb1da48c382b11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdddd205f600c844ef1bae3038bb1da48c382b11/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0b2b15123e500e5af90138646f20024ca746f86", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0b2b15123e500e5af90138646f20024ca746f86", "html_url": "https://github.com/rust-lang/rust/commit/c0b2b15123e500e5af90138646f20024ca746f86"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "4c8249b8ef29da1ef1aa2209bbf56b1f64d5714e", "filename": "xtask/src/metrics.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/cdddd205f600c844ef1bae3038bb1da48c382b11/xtask%2Fsrc%2Fmetrics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdddd205f600c844ef1bae3038bb1da48c382b11/xtask%2Fsrc%2Fmetrics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmetrics.rs?ref=cdddd205f600c844ef1bae3038bb1da48c382b11", "patch": "@@ -29,8 +29,7 @@ pub fn run_metrics() -> Result<()> {\n         run!(\"git -c user.name=Bot -c user.email=dummy@example.com commit --message \ud83d\udcc8\")?;\n         run!(\"git push origin master\")?;\n     }\n-    eprintln!(\"{:#?}\\n\", metrics);\n-    eprintln!(\"{}\", metrics.json());\n+    eprintln!(\"{:#?}\", metrics);\n     Ok(())\n }\n \n@@ -152,26 +151,32 @@ impl Host {\n     }\n }\n \n+struct State {\n+    obj: bool,\n+    first: bool,\n+}\n+\n #[derive(Default)]\n struct Json {\n-    object_comma: bool,\n-    array_comma: bool,\n+    stack: Vec<State>,\n     buf: String,\n }\n \n impl Json {\n     fn begin_object(&mut self) {\n-        self.object_comma = false;\n+        self.stack.push(State { obj: true, first: true });\n         self.buf.push('{');\n     }\n     fn end_object(&mut self) {\n+        self.stack.pop();\n         self.buf.push('}')\n     }\n     fn begin_array(&mut self) {\n-        self.array_comma = false;\n+        self.stack.push(State { obj: false, first: true });\n         self.buf.push('[');\n     }\n     fn end_array(&mut self) {\n+        self.stack.pop();\n         self.buf.push(']')\n     }\n     fn field(&mut self, name: &str) {\n@@ -194,17 +199,22 @@ impl Json {\n     }\n \n     fn array_comma(&mut self) {\n-        if self.array_comma {\n+        let state = self.stack.last_mut().unwrap();\n+        if state.obj {\n+            return;\n+        }\n+        if !state.first {\n             self.buf.push(',');\n         }\n-        self.array_comma = true;\n+        state.first = false;\n     }\n \n     fn object_comma(&mut self) {\n-        if self.object_comma {\n+        let state = self.stack.last_mut().unwrap();\n+        if !state.first {\n             self.buf.push(',');\n         }\n-        self.object_comma = true;\n+        state.first = false;\n     }\n }\n "}]}