{"sha": "35b2669219002529411fda269b193cd9d89b605a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1YjI2NjkyMTkwMDI1Mjk0MTFmZGEyNjliMTkzY2Q5ZDg5YjYwNWE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-10-20T07:02:32Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-10-20T07:02:32Z"}, "message": "Check the map for promotable instead for existance of a node (which is always the case)", "tree": {"sha": "e5d0ac2e6ed1e387d0650f334592c2705f81552a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5d0ac2e6ed1e387d0650f334592c2705f81552a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35b2669219002529411fda269b193cd9d89b605a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlnpn4gACgkQpp+NIls6\n19lh8w/+JuFIZCHHdoW2Mwr9CA3NtesofEVwGPoUBkgdPPZkvo/7A8ZtmMn52W/v\nizkA6mzVjBPi+m8qfF97qcbfUhWSHSb0HBQAPHaBBRR1ILGMxRxuxQhV71wpVumc\nxKx8kleWJgVSmbn01cXH0UNurB5wTZmmyZyKiAlOz0R8Oy+zsLlW44SutS+dFdfj\nVtEGXZXhqlZ6z1SGIQP+RSyRE5LkQ4+NS8L9yzZn16mDJexxkc6Nyrhu5rzl3/zH\nHiJSIWGogDremFhsUIcUJS1rKg5n1HzgUSNZMy1dLIp5JWelh3bUNEH8+TmLGcEk\nxvSW/JePtLp7NPDmi7zi5rFiUMoFUtpjVTN1O5acKf6SjknuE2awp8901lJPaVY1\nfvhl2ZwLObhuw9mT2YPu/cEKeLp59wgu0Lfe2DWyn8zA7pugtAAZnhjXBPf4mzmg\nljudk9NuakwSNPQ4H72PT4kzWZ8PWdz5gNb5b9sLeP3w2zn4EffBGu4qtlvtrOwG\nIDle0FS9xhyehKWNhuB5vks4O7bI7fHGECu3mKonRVQvFJMq94t6ItA9SSD9mBr0\n8zL3fq0m1dAMbmpHNyHymhPBPdVNkf0ApNmEcE4QVE+F0M21HljOOR7UisO5pmaG\n8aE6UHA+liAtXFYSNbHL2s8fktFm8nc5onE1CryDYzgYE1VTOE4=\n=iMq0\n-----END PGP SIGNATURE-----", "payload": "tree e5d0ac2e6ed1e387d0650f334592c2705f81552a\nparent 3e108b71907b8da09176cac271e9e8ae8b46f352\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1508482952 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1508482952 +0200\n\nCheck the map for promotable instead for existance of a node (which is always the case)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35b2669219002529411fda269b193cd9d89b605a", "html_url": "https://github.com/rust-lang/rust/commit/35b2669219002529411fda269b193cd9d89b605a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35b2669219002529411fda269b193cd9d89b605a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e108b71907b8da09176cac271e9e8ae8b46f352", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e108b71907b8da09176cac271e9e8ae8b46f352", "html_url": "https://github.com/rust-lang/rust/commit/3e108b71907b8da09176cac271e9e8ae8b46f352"}], "stats": {"total": 61, "additions": 57, "deletions": 4}, "files": [{"sha": "d8309ff6f8dc1598ef3e53435c4a5558ded7a34a", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/35b2669219002529411fda269b193cd9d89b605a/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35b2669219002529411fda269b193cd9d89b605a/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=35b2669219002529411fda269b193cd9d89b605a", "patch": "@@ -836,11 +836,10 @@ fn lint_or_fun_call(cx: &LateContext, expr: &hir::Expr, name: &str, args: &[hir:\n \n         // don't lint for constant values\n         // FIXME: can we `expect` here instead of match?\n-        let owner = cx.tcx.hir.get_parent(arg.id);\n-        let owner_def = cx.tcx.hir.local_def_id(owner);\n+        let owner_def = cx.tcx.hir.get_parent_did(arg.id);\n         let promotable = cx.tcx\n             .rvalue_promotable_map(owner_def)\n-            .contains_key(&arg.hir_id.local_id);\n+            [&arg.hir_id.local_id];\n         if promotable {\n             return;\n         }"}, {"sha": "97e8c25ad75876f19c39441d8be64aa1aa595199", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 55, "deletions": 1, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/35b2669219002529411fda269b193cd9d89b605a/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35b2669219002529411fda269b193cd9d89b605a/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=35b2669219002529411fda269b193cd9d89b605a", "patch": "@@ -318,13 +318,37 @@ error: unnecessary structure name repetition\n 263 |         fn new() -> Foo { Foo }\n     |                     ^^^ help: use the applicable keyword: `Self`\n \n+error: use of `unwrap_or` followed by a function call\n+   --> $DIR/methods.rs:281:5\n+    |\n+281 |     with_constructor.unwrap_or(make());\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_constructor.unwrap_or_else(make)`\n+    |\n+    = note: `-D or-fun-call` implied by `-D warnings`\n+\n error: use of `unwrap_or` followed by a call to `new`\n    --> $DIR/methods.rs:284:5\n     |\n 284 |     with_new.unwrap_or(Vec::new());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_new.unwrap_or_default()`\n+\n+error: use of `unwrap_or` followed by a function call\n+   --> $DIR/methods.rs:287:5\n     |\n-    = note: `-D or-fun-call` implied by `-D warnings`\n+287 |     with_const_args.unwrap_or(Vec::with_capacity(12));\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_const_args.unwrap_or_else(|| Vec::with_capacity(12))`\n+\n+error: use of `unwrap_or` followed by a function call\n+   --> $DIR/methods.rs:290:5\n+    |\n+290 |     with_err.unwrap_or(make());\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_err.unwrap_or_else(|_| make())`\n+\n+error: use of `unwrap_or` followed by a function call\n+   --> $DIR/methods.rs:293:5\n+    |\n+293 |     with_err_args.unwrap_or(Vec::with_capacity(12));\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_err_args.unwrap_or_else(|_| Vec::with_capacity(12))`\n \n error: use of `unwrap_or` followed by a call to `default`\n    --> $DIR/methods.rs:296:5\n@@ -338,6 +362,36 @@ error: use of `unwrap_or` followed by a call to `default`\n 299 |     with_default_type.unwrap_or(u64::default());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_default_type.unwrap_or_default()`\n \n+error: use of `unwrap_or` followed by a function call\n+   --> $DIR/methods.rs:302:5\n+    |\n+302 |     with_vec.unwrap_or(vec![]);\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `with_vec.unwrap_or_else(|| < [ _ ] > :: into_vec ( box [ $ ( $ x ) , * ] ))`\n+\n+error: use of `unwrap_or` followed by a function call\n+   --> $DIR/methods.rs:307:5\n+    |\n+307 |     without_default.unwrap_or(Foo::new());\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `without_default.unwrap_or_else(Foo::new)`\n+\n+error: use of `or_insert` followed by a function call\n+   --> $DIR/methods.rs:310:5\n+    |\n+310 |     map.entry(42).or_insert(String::new());\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `map.entry(42).or_insert_with(String::new)`\n+\n+error: use of `or_insert` followed by a function call\n+   --> $DIR/methods.rs:313:5\n+    |\n+313 |     btree.entry(42).or_insert(String::new());\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `btree.entry(42).or_insert_with(String::new)`\n+\n+error: use of `unwrap_or` followed by a function call\n+   --> $DIR/methods.rs:316:13\n+    |\n+316 |     let _ = stringy.unwrap_or(\"\".to_owned());\n+    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `stringy.unwrap_or_else(|| \"\".to_owned())`\n+\n error: called `.iter().nth()` on a Vec. Calling `.get()` is both faster and more readable\n    --> $DIR/methods.rs:327:23\n     |"}]}