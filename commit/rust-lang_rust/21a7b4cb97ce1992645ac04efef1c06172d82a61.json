{"sha": "21a7b4cb97ce1992645ac04efef1c06172d82a61", "node_id": "C_kwDOAAsO6NoAKDIxYTdiNGNiOTdjZTE5OTI2NDVhYzA0ZWZlZjFjMDYxNzJkODJhNjE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-05-23T05:06:27Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-05-23T05:07:09Z"}, "message": "Fix some typos in arg checking algorithm", "tree": {"sha": "237abe855fb29082615d5ff57e8cfd359de6ec57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/237abe855fb29082615d5ff57e8cfd359de6ec57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21a7b4cb97ce1992645ac04efef1c06172d82a61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21a7b4cb97ce1992645ac04efef1c06172d82a61", "html_url": "https://github.com/rust-lang/rust/commit/21a7b4cb97ce1992645ac04efef1c06172d82a61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21a7b4cb97ce1992645ac04efef1c06172d82a61/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07e7b4346c48fe6d5c3026207e2d04c9a9f00fb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/07e7b4346c48fe6d5c3026207e2d04c9a9f00fb8", "html_url": "https://github.com/rust-lang/rust/commit/07e7b4346c48fe6d5c3026207e2d04c9a9f00fb8"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "dff0a225871a457ea5da8e59b14f407bb89d5248", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/checks.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/21a7b4cb97ce1992645ac04efef1c06172d82a61/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21a7b4cb97ce1992645ac04efef1c06172d82a61/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs?ref=21a7b4cb97ce1992645ac04efef1c06172d82a61", "patch": "@@ -768,7 +768,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 let second_input_ty =\n                                     self.resolve_vars_if_possible(expected_input_tys[second_idx]);\n                                 let third_input_ty =\n-                                    self.resolve_vars_if_possible(expected_input_tys[second_idx]);\n+                                    self.resolve_vars_if_possible(expected_input_tys[third_idx]);\n                                 let span = if third_idx < provided_arg_count {\n                                     let first_arg_span = provided_args[first_idx].span;\n                                     let third_arg_span = provided_args[third_idx].span;\n@@ -809,16 +809,16 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             }\n                             missing_idxs => {\n                                 let first_idx = *missing_idxs.first().unwrap();\n-                                let second_idx = *missing_idxs.last().unwrap();\n+                                let last_idx = *missing_idxs.last().unwrap();\n                                 // NOTE: Because we might be re-arranging arguments, might have extra arguments, etc.\n                                 // It's hard to *really* know where we should provide this error label, so this is a\n                                 // decent heuristic\n-                                let span = if first_idx < provided_arg_count {\n+                                let span = if last_idx < provided_arg_count {\n                                     let first_arg_span = provided_args[first_idx].span;\n-                                    let second_arg_span = provided_args[second_idx].span;\n+                                    let last_arg_span = provided_args[last_idx].span;\n                                     Span::new(\n                                         first_arg_span.lo(),\n-                                        second_arg_span.hi(),\n+                                        last_arg_span.hi(),\n                                         first_arg_span.ctxt(),\n                                         None,\n                                     )"}, {"sha": "6f9f4293e49643d0ce312a24d805e3d3e4cb99fd", "filename": "src/test/ui/argument-suggestions/issue-97197.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21a7b4cb97ce1992645ac04efef1c06172d82a61/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97197.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21a7b4cb97ce1992645ac04efef1c06172d82a61/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97197.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97197.rs?ref=21a7b4cb97ce1992645ac04efef1c06172d82a61", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    g((), ());\n+    //~^ ERROR this function takes 6 arguments but 2 arguments were supplied\n+}\n+\n+pub fn g(a1: (), a2: bool, a3: bool, a4: bool, a5: bool, a6: ()) -> () {}"}, {"sha": "10689d5095748b75a4a4c0a9d08afafc7ee6be0a", "filename": "src/test/ui/argument-suggestions/issue-97197.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/21a7b4cb97ce1992645ac04efef1c06172d82a61/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97197.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21a7b4cb97ce1992645ac04efef1c06172d82a61/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97197.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97197.stderr?ref=21a7b4cb97ce1992645ac04efef1c06172d82a61", "patch": "@@ -0,0 +1,19 @@\n+error[E0061]: this function takes 6 arguments but 2 arguments were supplied\n+  --> $DIR/issue-97197.rs:2:5\n+   |\n+LL |     g((), ());\n+   |     ^-------- multiple arguments are missing\n+   |\n+note: function defined here\n+  --> $DIR/issue-97197.rs:6:8\n+   |\n+LL | pub fn g(a1: (), a2: bool, a3: bool, a4: bool, a5: bool, a6: ()) -> () {}\n+   |        ^ ------  --------  --------  --------  --------  ------\n+help: provide the arguments\n+   |\n+LL |     g((), {bool}, {bool}, {bool}, {bool}, ());\n+   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0061`."}, {"sha": "5236d15b94574107e8f9b863b2a3cdb7a5133c27", "filename": "src/test/ui/argument-suggestions/missing_arguments.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21a7b4cb97ce1992645ac04efef1c06172d82a61/src%2Ftest%2Fui%2Fargument-suggestions%2Fmissing_arguments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21a7b4cb97ce1992645ac04efef1c06172d82a61/src%2Ftest%2Fui%2Fargument-suggestions%2Fmissing_arguments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fmissing_arguments.stderr?ref=21a7b4cb97ce1992645ac04efef1c06172d82a61", "patch": "@@ -293,7 +293,7 @@ error[E0061]: this function takes 5 arguments but 2 arguments were supplied\n   --> $DIR/missing_arguments.rs:39:3\n    |\n LL |   complex(   1,                     \"\"   );\n-   |   ^^^^^^^--------------------------------- three arguments of type `f32`, `i32`, and `i32` are missing\n+   |   ^^^^^^^--------------------------------- three arguments of type `f32`, `i32`, and `f32` are missing\n    |\n note: function defined here\n   --> $DIR/missing_arguments.rs:7:4"}]}