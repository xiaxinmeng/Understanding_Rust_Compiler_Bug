{"sha": "7abbc6e3c556eb1a46f8de64c6acd31ea2c0c637", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhYmJjNmUzYzU1NmViMWE0NmY4ZGU2NGM2YWNkMzFlYTJjMGM2Mzc=", "commit": {"author": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-07-27T00:22:44Z"}, "committer": {"name": "Smitty", "email": "me@smitop.com", "date": "2021-07-27T00:22:44Z"}, "message": "Document math behind MIN/MAX consts on integers", "tree": {"sha": "b720c1dab55be593ddc5105f9634b0cbccea5d3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b720c1dab55be593ddc5105f9634b0cbccea5d3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7abbc6e3c556eb1a46f8de64c6acd31ea2c0c637", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7abbc6e3c556eb1a46f8de64c6acd31ea2c0c637", "html_url": "https://github.com/rust-lang/rust/commit/7abbc6e3c556eb1a46f8de64c6acd31ea2c0c637", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7abbc6e3c556eb1a46f8de64c6acd31ea2c0c637/comments", "author": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "syvb", "id": 10530973, "node_id": "MDQ6VXNlcjEwNTMwOTcz", "avatar_url": "https://avatars.githubusercontent.com/u/10530973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syvb", "html_url": "https://github.com/syvb", "followers_url": "https://api.github.com/users/syvb/followers", "following_url": "https://api.github.com/users/syvb/following{/other_user}", "gists_url": "https://api.github.com/users/syvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/syvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syvb/subscriptions", "organizations_url": "https://api.github.com/users/syvb/orgs", "repos_url": "https://api.github.com/users/syvb/repos", "events_url": "https://api.github.com/users/syvb/events{/privacy}", "received_events_url": "https://api.github.com/users/syvb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bddb59cf07efcf6e606f16b87f85e3ecd2c1ca69", "url": "https://api.github.com/repos/rust-lang/rust/commits/bddb59cf07efcf6e606f16b87f85e3ecd2c1ca69", "html_url": "https://github.com/rust-lang/rust/commit/bddb59cf07efcf6e606f16b87f85e3ecd2c1ca69"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "8bf2d9a6d14b7200ad542e7ce6b00cee72c4107d", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7abbc6e3c556eb1a46f8de64c6acd31ea2c0c637/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7abbc6e3c556eb1a46f8de64c6acd31ea2c0c637/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=7abbc6e3c556eb1a46f8de64c6acd31ea2c0c637", "patch": "@@ -1,9 +1,10 @@\n macro_rules! int_impl {\n-    ($SelfT:ty, $ActualT:ident, $UnsignedT:ty, $BITS:expr, $Min:expr, $Max:expr,\n+    ($SelfT:ty, $ActualT:ident, $UnsignedT:ty, $BITS:expr, $BITS_MINUS_ONE:expr, $Min:expr, $Max:expr,\n      $rot:expr, $rot_op:expr, $rot_result:expr, $swap_op:expr, $swapped:expr,\n      $reversed:expr, $le_bytes:expr, $be_bytes:expr,\n      $to_xe_bytes_doc:expr, $from_xe_bytes_doc:expr) => {\n-        /// The smallest value that can be represented by this integer type.\n+        /// The smallest value that can be represented by this integer type,\n+        #[doc = concat!(\"-2<sup>\", stringify!($BITS_MINUS_ONE), \"</sup>.\")]\n         ///\n         /// # Examples\n         ///\n@@ -15,7 +16,8 @@ macro_rules! int_impl {\n         #[stable(feature = \"assoc_int_consts\", since = \"1.43.0\")]\n         pub const MIN: Self = !0 ^ ((!0 as $UnsignedT) >> 1) as Self;\n \n-        /// The largest value that can be represented by this integer type.\n+        /// The largest value that can be represented by this integer type,\n+        #[doc = concat!(\"2<sup>\", stringify!($BITS_MINUS_ONE), \"</sup> - 1.\")]\n         ///\n         /// # Examples\n         ///"}, {"sha": "6c43d6d62128e71be7944f8ce9e35850920b6038", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7abbc6e3c556eb1a46f8de64c6acd31ea2c0c637/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7abbc6e3c556eb1a46f8de64c6acd31ea2c0c637/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=7abbc6e3c556eb1a46f8de64c6acd31ea2c0c637", "patch": "@@ -91,34 +91,34 @@ depending on the target pointer size.\n \n #[lang = \"i8\"]\n impl i8 {\n-    int_impl! { i8, i8, u8, 8, -128, 127, 2, \"-0x7e\", \"0xa\", \"0x12\", \"0x12\", \"0x48\",\n+    int_impl! { i8, i8, u8, 8, 7, -128, 127, 2, \"-0x7e\", \"0xa\", \"0x12\", \"0x12\", \"0x48\",\n     \"[0x12]\", \"[0x12]\", \"\", \"\" }\n }\n \n #[lang = \"i16\"]\n impl i16 {\n-    int_impl! { i16, i16, u16, 16, -32768, 32767, 4, \"-0x5ffd\", \"0x3a\", \"0x1234\", \"0x3412\",\n+    int_impl! { i16, i16, u16, 16, 15, -32768, 32767, 4, \"-0x5ffd\", \"0x3a\", \"0x1234\", \"0x3412\",\n     \"0x2c48\", \"[0x34, 0x12]\", \"[0x12, 0x34]\", \"\", \"\" }\n }\n \n #[lang = \"i32\"]\n impl i32 {\n-    int_impl! { i32, i32, u32, 32, -2147483648, 2147483647, 8, \"0x10000b3\", \"0xb301\",\n+    int_impl! { i32, i32, u32, 32, 31, -2147483648, 2147483647, 8, \"0x10000b3\", \"0xb301\",\n     \"0x12345678\", \"0x78563412\", \"0x1e6a2c48\", \"[0x78, 0x56, 0x34, 0x12]\",\n     \"[0x12, 0x34, 0x56, 0x78]\", \"\", \"\" }\n }\n \n #[lang = \"i64\"]\n impl i64 {\n-    int_impl! { i64, i64, u64, 64, -9223372036854775808, 9223372036854775807, 12,\n+    int_impl! { i64, i64, u64, 64, 63, -9223372036854775808, 9223372036854775807, 12,\n     \"0xaa00000000006e1\", \"0x6e10aa\", \"0x1234567890123456\", \"0x5634129078563412\",\n     \"0x6a2c48091e6a2c48\", \"[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\",\n     \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\", \"\", \"\" }\n }\n \n #[lang = \"i128\"]\n impl i128 {\n-    int_impl! { i128, i128, u128, 128, -170141183460469231731687303715884105728,\n+    int_impl! { i128, i128, u128, 128, 127, -170141183460469231731687303715884105728,\n     170141183460469231731687303715884105727, 16,\n     \"0x13f40000000000000000000000004f76\", \"0x4f7613f4\", \"0x12345678901234567890123456789012\",\n     \"0x12907856341290785634129078563412\", \"0x48091e6a2c48091e6a2c48091e6a2c48\",\n@@ -131,15 +131,15 @@ impl i128 {\n #[cfg(target_pointer_width = \"16\")]\n #[lang = \"isize\"]\n impl isize {\n-    int_impl! { isize, i16, usize, 16, -32768, 32767, 4, \"-0x5ffd\", \"0x3a\", \"0x1234\",\n+    int_impl! { isize, i16, usize, 16, 15, -32768, 32767, 4, \"-0x5ffd\", \"0x3a\", \"0x1234\",\n     \"0x3412\", \"0x2c48\", \"[0x34, 0x12]\", \"[0x12, 0x34]\",\n     usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n }\n \n #[cfg(target_pointer_width = \"32\")]\n #[lang = \"isize\"]\n impl isize {\n-    int_impl! { isize, i32, usize, 32, -2147483648, 2147483647, 8, \"0x10000b3\", \"0xb301\",\n+    int_impl! { isize, i32, usize, 32, 31, -2147483648, 2147483647, 8, \"0x10000b3\", \"0xb301\",\n     \"0x12345678\", \"0x78563412\", \"0x1e6a2c48\", \"[0x78, 0x56, 0x34, 0x12]\",\n     \"[0x12, 0x34, 0x56, 0x78]\",\n     usize_isize_to_xe_bytes_doc!(), usize_isize_from_xe_bytes_doc!() }\n@@ -148,7 +148,7 @@ impl isize {\n #[cfg(target_pointer_width = \"64\")]\n #[lang = \"isize\"]\n impl isize {\n-    int_impl! { isize, i64, usize, 64, -9223372036854775808, 9223372036854775807,\n+    int_impl! { isize, i64, usize, 64, 63, -9223372036854775808, 9223372036854775807,\n     12, \"0xaa00000000006e1\", \"0x6e10aa\",  \"0x1234567890123456\", \"0x5634129078563412\",\n      \"0x6a2c48091e6a2c48\", \"[0x56, 0x34, 0x12, 0x90, 0x78, 0x56, 0x34, 0x12]\",\n      \"[0x12, 0x34, 0x56, 0x78, 0x90, 0x12, 0x34, 0x56]\","}, {"sha": "0d04d1b3b4220a145463fc1e1546f48988deec1a", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7abbc6e3c556eb1a46f8de64c6acd31ea2c0c637/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7abbc6e3c556eb1a46f8de64c6acd31ea2c0c637/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=7abbc6e3c556eb1a46f8de64c6acd31ea2c0c637", "patch": "@@ -15,7 +15,8 @@ macro_rules! uint_impl {\n         #[stable(feature = \"assoc_int_consts\", since = \"1.43.0\")]\n         pub const MIN: Self = 0;\n \n-        /// The largest value that can be represented by this integer type.\n+        /// The largest value that can be represented by this integer type,\n+        #[doc = concat!(\"2<sup>\", stringify!($BITS), \"</sup> - 1.\")]\n         ///\n         /// # Examples\n         ///"}]}