{"sha": "0abec867c346a73e72410cbe9360eb16c2fbdd22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhYmVjODY3YzM0NmE3M2U3MjQxMGNiZTkzNjBlYjE2YzJmYmRkMjI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-28T06:06:17Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-08-31T04:08:07Z"}, "message": "Support istrs as fail argument. Issue #855", "tree": {"sha": "3c9dae55d438af396586de3befdfda374aa5db96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c9dae55d438af396586de3befdfda374aa5db96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0abec867c346a73e72410cbe9360eb16c2fbdd22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0abec867c346a73e72410cbe9360eb16c2fbdd22", "html_url": "https://github.com/rust-lang/rust/commit/0abec867c346a73e72410cbe9360eb16c2fbdd22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0abec867c346a73e72410cbe9360eb16c2fbdd22/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c936d7992123e029dedea0380f429b6844a9ab8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c936d7992123e029dedea0380f429b6844a9ab8", "html_url": "https://github.com/rust-lang/rust/commit/4c936d7992123e029dedea0380f429b6844a9ab8"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "ee31ae3e356916404e47a8e801f70edc8a7aefd8", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0abec867c346a73e72410cbe9360eb16c2fbdd22/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0abec867c346a73e72410cbe9360eb16c2fbdd22/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=0abec867c346a73e72410cbe9360eb16c2fbdd22", "patch": "@@ -4409,12 +4409,22 @@ fn trans_fail_expr(cx: &@block_ctxt, sp_opt: &option::t<span>,\n         let e_ty = ty::expr_ty(tcx, expr);\n         bcx = expr_res.bcx;\n \n-\n         if ty::type_is_str(tcx, e_ty) {\n-            let elt =\n-                GEP(bcx, expr_res.val,\n-                              [C_int(0), C_int(abi::vec_elt_data)]);\n-            ret trans_fail_value(bcx, sp_opt, elt);\n+            let is_istr = alt ty::struct(tcx, e_ty) {\n+              ty::ty_istr. { true }\n+              _ { false }\n+            };\n+            if !is_istr {\n+                let elt =\n+                    GEP(bcx, expr_res.val,\n+                        [C_int(0), C_int(abi::vec_elt_data)]);\n+                ret trans_fail_value(bcx, sp_opt, elt);\n+            } else {\n+                let data = ivec::get_dataptr(\n+                    bcx, expr_res.val,\n+                    type_of_or_i8(bcx, ty::mk_mach(tcx, ast::ty_u8)));\n+                ret trans_fail_value(bcx, sp_opt, data);\n+            }\n         } else {\n             bcx_ccx(cx).sess.span_bug(expr.span,\n                                       ~\"fail called with unsupported type \""}, {"sha": "c6e11bf722def1d53e63f093c4fb64c8bac72846", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0abec867c346a73e72410cbe9360eb16c2fbdd22/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0abec867c346a73e72410cbe9360eb16c2fbdd22/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=0abec867c346a73e72410cbe9360eb16c2fbdd22", "patch": "@@ -1860,7 +1860,15 @@ fn check_expr_with_unifier(fcx: &@fn_ctxt, expr: &@ast::expr, unify: &unifier,\n         bot = true;\n         alt expr_opt {\n           none. {/* do nothing */ }\n-          some(e) { check_expr_with(fcx, e, ty::mk_str(tcx)); }\n+          some(e) {\n+            // FIXME: istr transitional. Should be:\n+            // check_expr_with(fcx, e, ty::mk_str(tcx));\n+            check_expr(fcx, e);\n+            if !are_compatible(fcx, expr_ty(tcx, e), ty::mk_str(tcx))\n+                && !are_compatible(fcx, expr_ty(tcx, e), ty::mk_istr(tcx)) {\n+                check_expr_with(fcx, e, ty::mk_str(tcx));\n+            }\n+          }\n         }\n         write::bot_ty(tcx, id);\n       }"}, {"sha": "56937260b54eae59d579cd6c48fef7650ee23192", "filename": "src/test/run-fail/explicit-fail-msg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0abec867c346a73e72410cbe9360eb16c2fbdd22/src%2Ftest%2Frun-fail%2Fexplicit-fail-msg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0abec867c346a73e72410cbe9360eb16c2fbdd22/src%2Ftest%2Frun-fail%2Fexplicit-fail-msg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexplicit-fail-msg.rs?ref=0abec867c346a73e72410cbe9360eb16c2fbdd22", "patch": "@@ -1,3 +1,3 @@\n // error-pattern:wooooo\n // no-valgrind\n-fn main() { let a = 1; if 1 == 1 { a = 2; } fail \"woooo\" + \"o\"; }\n+fn main() { let a = 1; if 1 == 1 { a = 2; } fail ~\"woooo\" + ~\"o\"; }"}]}