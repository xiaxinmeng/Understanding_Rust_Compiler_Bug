{"sha": "c54dfee65126a0ac385d55389a316e89095a0713", "node_id": "C_kwDOAAsO6NoAKGM1NGRmZWU2NTEyNmEwYWMzODVkNTUzODlhMzE2ZTg5MDk1YTA3MTM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-25T22:30:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-25T22:30:07Z"}, "message": "Auto merge of #93308 - matthiaskrgr:rollup-9tc73ft, r=matthiaskrgr\n\nRollup of 5 pull requests\n\nSuccessful merges:\n\n - #93250 (Remove deduplication of early lints)\n - #93286 (Add white-space: nowrap to links in the sidebar)\n - #93291 (minor fix for #93231)\n - #93300 (make Windows abort_internal Miri-compatible)\n - #93303 (Fix ICE when parsing bad turbofish with lifetime argument)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "ff1327687a5b2cfaf76fd3a7990072a9fb6c8365", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff1327687a5b2cfaf76fd3a7990072a9fb6c8365"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c54dfee65126a0ac385d55389a316e89095a0713", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c54dfee65126a0ac385d55389a316e89095a0713", "html_url": "https://github.com/rust-lang/rust/commit/c54dfee65126a0ac385d55389a316e89095a0713", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c54dfee65126a0ac385d55389a316e89095a0713/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cdb3cd94efece1e17cbd8f6edb1dc1a482779a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cdb3cd94efece1e17cbd8f6edb1dc1a482779a0", "html_url": "https://github.com/rust-lang/rust/commit/8cdb3cd94efece1e17cbd8f6edb1dc1a482779a0"}, {"sha": "086be2b6c430386f86b00624d4e536e972fcdbb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/086be2b6c430386f86b00624d4e536e972fcdbb1", "html_url": "https://github.com/rust-lang/rust/commit/086be2b6c430386f86b00624d4e536e972fcdbb1"}], "stats": {"total": 474, "additions": 428, "deletions": 46}, "files": [{"sha": "3b5d636124d4cfe102834020388f0e3dacf55706", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -282,7 +282,7 @@ pub enum ExternDepSpec {\n \n // This could be a closure, but then implementing derive trait\n // becomes hacky (and it gets allocated).\n-#[derive(PartialEq, Debug)]\n+#[derive(Debug)]\n pub enum BuiltinLintDiagnostics {\n     Normal,\n     AbsPathWithModule(Span),\n@@ -309,7 +309,6 @@ pub enum BuiltinLintDiagnostics {\n \n /// Lints that are buffered up early on in the `Session` before the\n /// `LintLevels` is calculated.\n-#[derive(PartialEq)]\n pub struct BufferedEarlyLint {\n     /// The span of code that we are linting on.\n     pub span: MultiSpan,\n@@ -336,9 +335,7 @@ pub struct LintBuffer {\n impl LintBuffer {\n     pub fn add_early_lint(&mut self, early_lint: BufferedEarlyLint) {\n         let arr = self.map.entry(early_lint.node_id).or_default();\n-        if !arr.contains(&early_lint) {\n-            arr.push(early_lint);\n-        }\n+        arr.push(early_lint);\n     }\n \n     pub fn add_lint("}, {"sha": "17bac362ec81ff75bc7c51346bd3def318897a63", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -731,28 +731,22 @@ impl<'a> Parser<'a> {\n                     match x {\n                         Ok((_, _, false)) => {\n                             if self.eat(&token::Gt) {\n-                                let turbo_err = e.span_suggestion_verbose(\n+                                e.span_suggestion_verbose(\n                                     binop.span.shrink_to_lo(),\n                                     TURBOFISH_SUGGESTION_STR,\n                                     \"::\".to_string(),\n                                     Applicability::MaybeIncorrect,\n-                                );\n-                                if self.check(&TokenKind::Semi) {\n-                                    turbo_err.emit();\n-                                    *expr = self.mk_expr_err(expr.span);\n-                                    return Ok(());\n-                                } else {\n-                                    match self.parse_expr() {\n-                                        Ok(_) => {\n-                                            turbo_err.emit();\n-                                            *expr = self\n-                                                .mk_expr_err(expr.span.to(self.prev_token.span));\n-                                            return Ok(());\n-                                        }\n-                                        Err(mut err) => {\n-                                            turbo_err.cancel();\n-                                            err.cancel();\n-                                        }\n+                                )\n+                                .emit();\n+                                match self.parse_expr() {\n+                                    Ok(_) => {\n+                                        *expr =\n+                                            self.mk_expr_err(expr.span.to(self.prev_token.span));\n+                                        return Ok(());\n+                                    }\n+                                    Err(mut err) => {\n+                                        *expr = self.mk_expr_err(expr.span);\n+                                        err.cancel();\n                                     }\n                                 }\n                             }"}, {"sha": "693dd0051dad1f0a2feca51c91bed786dfb53bfe", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -1458,7 +1458,7 @@ impl<'a> Parser<'a> {\n             self.parse_block_expr(label, lo, BlockCheckMode::Default, attrs)\n         } else if !ate_colon && (self.check(&TokenKind::Comma) || self.check(&TokenKind::Gt)) {\n             // We're probably inside of a `Path<'a>` that needs a turbofish, so suppress the\n-            // \"must be followed by a colon\" error.\n+            // \"must be followed by a colon\" error, and the \"expected one of\" error.\n             self.diagnostic().delay_span_bug(lo, \"this label wasn't parsed correctly\");\n             consume_colon = false;\n             Ok(self.mk_expr_err(lo))"}, {"sha": "ad4492f9d1f92a8c5e74eb1fa393758ef85ab585", "filename": "library/std/src/sys/windows/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -285,6 +285,7 @@ pub fn dur2timeout(dur: Duration) -> c::DWORD {\n #[allow(unreachable_code)]\n pub fn abort_internal() -> ! {\n     const FAST_FAIL_FATAL_APP_EXIT: usize = 7;\n+    #[cfg(not(miri))] // inline assembly does not work in Miri\n     unsafe {\n         cfg_if::cfg_if! {\n             if #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))] {"}, {"sha": "4c79218f62a4dd0e58045b68a7aea7c6e4d36845", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -484,6 +484,10 @@ nav.sub {\n \toverflow: hidden;\n }\n \n+.sidebar-links a {\n+\twhite-space: nowrap;\n+}\n+\n .sidebar h2 {\n \tborder-bottom: none;\n \tfont-weight: 500;"}, {"sha": "edb346c23b48c7ea05b2cb6678c37f9cee4974c3", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -167,7 +167,7 @@ a.result-keyword:focus { background-color: #afc6e4; }\n .sidebar a.current.traitalias { color: #4b349e; }\n .sidebar a.current.fn,\n .sidebar a.current.method,\n-.sidebar a.current.tymethod { color: #32d479; }\n+.sidebar a.current.tymethod { color: #a67736; }\n .sidebar a.current.keyword { color: #356da4; }\n \n nav.main .current {"}, {"sha": "ef3a92ad7a6ced12f467c7f3cec63962a91811a8", "filename": "src/test/rustdoc-gui/sidebar.goml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -74,3 +74,7 @@ assert-text: (\".sidebar > .location\", \"Module sub_sub_module\")\n assert-false: \".sidebar-elems .crate\"\n assert-text: (\".sidebar-elems .items > ul > li:nth-child(1)\", \"Functions\")\n assert-text: (\"#functions + .item-table .item-left > a\", \"foo\")\n+\n+// Links to trait implementations in the sidebar should not wrap even if they are long.\n+goto: file://|DOC_PATH|/lib2/struct.HasALongTraitWithParams.html\n+assert-property: (\".sidebar-links a\", {\"offsetHeight\": 29})"}, {"sha": "5b6d236e8e00b82824a679261a088c99c2be2582", "filename": "src/test/rustdoc-gui/src/lib2/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flib2%2Flib.rs?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -114,3 +114,9 @@ pub mod too_long {\n         pub fn foo(&self) {}\n     }\n }\n+\n+pub struct HasALongTraitWithParams {}\n+\n+pub trait LongTraitWithParamsBananaBananaBanana<T> {}\n+\n+impl LongTraitWithParamsBananaBananaBanana<usize> for HasALongTraitWithParams {}"}, {"sha": "6cb2ff9d8136be4834fad727fb8323b85a962fd0", "filename": "src/test/ui/cfg/future-compat-crate-attributes-using-cfg_attr.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fcfg%2Ffuture-compat-crate-attributes-using-cfg_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fcfg%2Ffuture-compat-crate-attributes-using-cfg_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg%2Ffuture-compat-crate-attributes-using-cfg_attr.rs?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -5,8 +5,12 @@\n #![cfg_attr(foo, crate_type=\"bin\")]\n //~^ERROR `crate_type` within\n //~| WARN this was previously accepted\n+//~|ERROR `crate_type` within\n+//~| WARN this was previously accepted\n #![cfg_attr(foo, crate_name=\"bar\")]\n //~^ERROR `crate_name` within\n //~| WARN this was previously accepted\n+//~|ERROR `crate_name` within\n+//~| WARN this was previously accepted\n \n fn main() {}"}, {"sha": "5609f8e9d9f3610d26499267a4db99e87571205c", "filename": "src/test/ui/cfg/future-compat-crate-attributes-using-cfg_attr.stderr", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fcfg%2Ffuture-compat-crate-attributes-using-cfg_attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fcfg%2Ffuture-compat-crate-attributes-using-cfg_attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg%2Ffuture-compat-crate-attributes-using-cfg_attr.stderr?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -14,13 +14,31 @@ LL | #![deny(warnings)]\n    = note: for more information, see issue #91632 <https://github.com/rust-lang/rust/issues/91632>\n \n error: `crate_name` within an `#![cfg_attr] attribute is deprecated`\n-  --> $DIR/future-compat-crate-attributes-using-cfg_attr.rs:8:18\n+  --> $DIR/future-compat-crate-attributes-using-cfg_attr.rs:10:18\n    |\n LL | #![cfg_attr(foo, crate_name=\"bar\")]\n    |                  ^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #91632 <https://github.com/rust-lang/rust/issues/91632>\n \n-error: aborting due to 2 previous errors\n+error: `crate_type` within an `#![cfg_attr] attribute is deprecated`\n+  --> $DIR/future-compat-crate-attributes-using-cfg_attr.rs:5:18\n+   |\n+LL | #![cfg_attr(foo, crate_type=\"bin\")]\n+   |                  ^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #91632 <https://github.com/rust-lang/rust/issues/91632>\n+\n+error: `crate_name` within an `#![cfg_attr] attribute is deprecated`\n+  --> $DIR/future-compat-crate-attributes-using-cfg_attr.rs:10:18\n+   |\n+LL | #![cfg_attr(foo, crate_name=\"bar\")]\n+   |                  ^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #91632 <https://github.com/rust-lang/rust/issues/91632>\n+\n+error: aborting due to 4 previous errors\n "}, {"sha": "7be8b25363e09e750e294c98fe61bc5b40e0c364", "filename": "src/test/ui/parser/issues/issue-93282.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.rs?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    f<'a,>\n+    //~^ ERROR expected\n+}"}, {"sha": "20e6c3ed8a8d5d7a45e053c8717a1d46040ff76a", "filename": "src/test/ui/parser/issues/issue-93282.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.stderr?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -0,0 +1,13 @@\n+error: expected one of `.`, `:`, `;`, `?`, `for`, `loop`, `while`, `{`, `}`, or an operator, found `,`\n+  --> $DIR/issue-93282.rs:2:9\n+   |\n+LL |     f<'a,>\n+   |         ^ expected one of 10 possible tokens\n+   |\n+help: use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments\n+   |\n+LL |     f::<'a,>\n+   |      ++\n+\n+error: aborting due to previous error\n+"}, {"sha": "0c1c51c01a8847ddb05150051ce405afccd2e8a1", "filename": "src/test/ui/proc-macro/issue-73933-procedural-masquerade.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.rs?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -4,7 +4,14 @@\n extern crate test_macros;\n \n #[derive(Print)]\n-enum ProceduralMasqueradeDummyType { //~ ERROR using\n+enum ProceduralMasqueradeDummyType {\n+//~^ ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n+//~| WARN this was previously\n+//~| ERROR using\n //~| WARN this was previously\n     Input\n }"}, {"sha": "554613be65a082b09e77f877dd1e24371418244f", "filename": "src/test/ui/proc-macro/issue-73933-procedural-masquerade.stderr", "status": "modified", "additions": 64, "deletions": 1, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stderr?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -9,7 +9,37 @@ LL | enum ProceduralMasqueradeDummyType {\n    = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n    = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n \n-error: aborting due to previous error\n+error: using `procedural-masquerade` crate\n+  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n+\n+error: using `procedural-masquerade` crate\n+  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n+\n+error: using `procedural-masquerade` crate\n+  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n+\n+error: aborting due to 4 previous errors\n \n Future incompatibility report: Future breakage diagnostic:\n error: using `procedural-masquerade` crate\n@@ -23,3 +53,36 @@ LL | enum ProceduralMasqueradeDummyType {\n    = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n    = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n \n+Future breakage diagnostic:\n+error: using `procedural-masquerade` crate\n+  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n+\n+Future breakage diagnostic:\n+error: using `procedural-masquerade` crate\n+  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n+\n+Future breakage diagnostic:\n+error: using `procedural-masquerade` crate\n+  --> $DIR/issue-73933-procedural-masquerade.rs:7:6\n+   |\n+LL | enum ProceduralMasqueradeDummyType {\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n+   = note: The `procedural-masquerade` crate has been unnecessary since Rust 1.30.0. Versions of this crate below 0.1.7 will eventually stop compiling.\n+"}, {"sha": "50334589d0bba16b7e76b7ad7cbeec24e7befb92", "filename": "src/test/ui/proc-macro/issue-73933-procedural-masquerade.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-73933-procedural-masquerade.stdout?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -14,9 +14,9 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n         stream: TokenStream [\n             Ident {\n                 ident: \"Input\",\n-                span: #0 bytes(173..178),\n+                span: #0 bytes(315..320),\n             },\n         ],\n-        span: #0 bytes(121..180),\n+        span: #0 bytes(121..322),\n     },\n ]"}, {"sha": "69d72b55cdf01a03217db9179a18c7f7a89da3b5", "filename": "src/test/ui/proc-macro/issue-75930-derive-cfg.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fproc-macro%2Fissue-75930-derive-cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Fproc-macro%2Fissue-75930-derive-cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-75930-derive-cfg.stderr?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -11,5 +11,17 @@ LL | #[derive(Print)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #79202 <https://github.com/rust-lang/rust/issues/79202>\n \n-warning: 1 warning emitted\n+warning: derive helper attribute is used before it is introduced\n+  --> $DIR/issue-75930-derive-cfg.rs:19:3\n+   |\n+LL | #[print_helper(a)]\n+   |   ^^^^^^^^^^^^\n+...\n+LL | #[derive(Print)]\n+   |          ----- the attribute is introduced here\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #79202 <https://github.com/rust-lang/rust/issues/79202>\n+\n+warning: 2 warnings emitted\n "}, {"sha": "acb0aa420abcec559a167ec56dd5318119cdd09d", "filename": "src/test/ui/rust-2018/edition-lint-nested-empty-paths.fixed", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.fixed?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -17,14 +17,28 @@ crate mod foo {\n use crate::foo::{bar::{baz::{}}};\n //~^ ERROR absolute paths must start with\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n \n use crate::foo::{bar::{XX, baz::{}}};\n //~^ ERROR absolute paths must start with\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n \n use crate::foo::{bar::{baz::{}, baz1::{}}};\n //~^ ERROR absolute paths must start with\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n \n fn main() {\n }"}, {"sha": "4825528e97fa3279d5e396ed446c47ee7058146c", "filename": "src/test/ui/rust-2018/edition-lint-nested-empty-paths.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.rs?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -17,14 +17,28 @@ crate mod foo {\n use foo::{bar::{baz::{}}};\n //~^ ERROR absolute paths must start with\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n \n use foo::{bar::{XX, baz::{}}};\n //~^ ERROR absolute paths must start with\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n \n use foo::{bar::{baz::{}, baz1::{}}};\n //~^ ERROR absolute paths must start with\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| WARN this is accepted in the current edition\n \n fn main() {\n }"}, {"sha": "8a3113729b4692562d423947d0e66a49b85d9189", "filename": "src/test/ui/rust-2018/edition-lint-nested-empty-paths.stderr", "status": "modified", "additions": 66, "deletions": 3, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-empty-paths.stderr?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -13,7 +13,16 @@ LL | #![deny(absolute_paths_not_starting_with_crate)]\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-nested-empty-paths.rs:21:5\n+  --> $DIR/edition-lint-nested-empty-paths.rs:17:5\n+   |\n+LL | use foo::{bar::{baz::{}}};\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{baz::{}}}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-empty-paths.rs:23:5\n    |\n LL | use foo::{bar::{XX, baz::{}}};\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{XX, baz::{}}}`\n@@ -22,13 +31,67 @@ LL | use foo::{bar::{XX, baz::{}}};\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-nested-empty-paths.rs:25:5\n+  --> $DIR/edition-lint-nested-empty-paths.rs:23:5\n+   |\n+LL | use foo::{bar::{XX, baz::{}}};\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{XX, baz::{}}}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-empty-paths.rs:23:5\n+   |\n+LL | use foo::{bar::{XX, baz::{}}};\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{XX, baz::{}}}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-empty-paths.rs:23:5\n+   |\n+LL | use foo::{bar::{XX, baz::{}}};\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{XX, baz::{}}}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-empty-paths.rs:33:5\n+   |\n+LL | use foo::{bar::{baz::{}, baz1::{}}};\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{baz::{}, baz1::{}}}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-empty-paths.rs:33:5\n+   |\n+LL | use foo::{bar::{baz::{}, baz1::{}}};\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{baz::{}, baz1::{}}}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-empty-paths.rs:33:5\n+   |\n+LL | use foo::{bar::{baz::{}, baz1::{}}};\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{baz::{}, baz1::{}}}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-empty-paths.rs:33:5\n    |\n LL | use foo::{bar::{baz::{}, baz1::{}}};\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{bar::{baz::{}, baz1::{}}}`\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 10 previous errors\n "}, {"sha": "4eb1184cb6dff1b9e3ebb7ad23249441991adfca", "filename": "src/test/ui/rust-2018/edition-lint-nested-paths.fixed", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.fixed?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -6,6 +6,12 @@\n use crate::foo::{a, b};\n //~^ ERROR absolute paths must start with\n //~| this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| this is accepted in the current edition\n \n mod foo {\n     crate fn a() {}\n@@ -21,6 +27,10 @@ fn main() {\n         use crate::foo::{self as x, c};\n         //~^ ERROR absolute paths must start with\n         //~| this is accepted in the current edition\n+        //~| ERROR absolute paths must start with\n+        //~| this is accepted in the current edition\n+        //~| ERROR absolute paths must start with\n+        //~| this is accepted in the current edition\n         x::a();\n         c();\n     }"}, {"sha": "2a358224d9bf9edb8bb7054051ae564a33834922", "filename": "src/test/ui/rust-2018/edition-lint-nested-paths.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.rs?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -6,6 +6,12 @@\n use foo::{a, b};\n //~^ ERROR absolute paths must start with\n //~| this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| this is accepted in the current edition\n+//~| ERROR absolute paths must start with\n+//~| this is accepted in the current edition\n \n mod foo {\n     crate fn a() {}\n@@ -21,6 +27,10 @@ fn main() {\n         use foo::{self as x, c};\n         //~^ ERROR absolute paths must start with\n         //~| this is accepted in the current edition\n+        //~| ERROR absolute paths must start with\n+        //~| this is accepted in the current edition\n+        //~| ERROR absolute paths must start with\n+        //~| this is accepted in the current edition\n         x::a();\n         c();\n     }"}, {"sha": "3d596022b0af568a33149279e39c11f0073e47e4", "filename": "src/test/ui/rust-2018/edition-lint-nested-paths.stderr", "status": "modified", "additions": 47, "deletions": 2, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-nested-paths.stderr?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -13,13 +13,58 @@ LL | #![deny(absolute_paths_not_starting_with_crate)]\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-nested-paths.rs:21:13\n+  --> $DIR/edition-lint-nested-paths.rs:6:5\n+   |\n+LL | use foo::{a, b};\n+   |     ^^^^^^^^^^^ help: use `crate`: `crate::foo::{a, b}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-paths.rs:6:5\n+   |\n+LL | use foo::{a, b};\n+   |     ^^^^^^^^^^^ help: use `crate`: `crate::foo::{a, b}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-paths.rs:6:5\n+   |\n+LL | use foo::{a, b};\n+   |     ^^^^^^^^^^^ help: use `crate`: `crate::foo::{a, b}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-paths.rs:27:13\n+   |\n+LL |         use foo::{self as x, c};\n+   |             ^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{self as x, c}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-paths.rs:27:13\n+   |\n+LL |         use foo::{self as x, c};\n+   |             ^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{self as x, c}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-nested-paths.rs:27:13\n    |\n LL |         use foo::{self as x, c};\n    |             ^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::{self as x, c}`\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 7 previous errors\n "}, {"sha": "46adf02a391977158765201f83731e021bcb601b", "filename": "src/test/ui/rust-2018/edition-lint-paths.fixed", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.fixed?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -12,17 +12,25 @@ pub mod foo {\n     use crate::bar::Bar;\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+    //~| ERROR absolute\n+    //~| WARN this is accepted in the current edition\n+\n     use super::bar::Bar2;\n     use crate::bar::Bar3;\n \n     use crate::bar;\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+\n     use crate::bar as something_else;\n \n     use crate::{main, Bar as SomethingElse};\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+    //~| ERROR absolute\n+    //~| WARN this is accepted in the current edition\n+    //~| ERROR absolute\n+    //~| WARN this is accepted in the current edition\n \n     use crate::{main as another_main, Bar as SomethingElse2};\n \n@@ -34,6 +42,8 @@ pub mod foo {\n use crate::bar::Bar;\n //~^ ERROR absolute\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute\n+//~| WARN this is accepted in the current edition\n \n pub mod bar {\n     use edition_lint_paths as foo;\n@@ -51,11 +61,14 @@ mod baz {\n impl crate::foo::SomeTrait for u32 {}\n //~^ ERROR absolute\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute\n+//~| WARN this is accepted in the current edition\n \n fn main() {\n     let x = crate::bar::Bar;\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+\n     let x = bar::Bar;\n     let x = crate::bar::Bar;\n     let x = self::bar::Bar;"}, {"sha": "f70bf90d6816a2cebd4d23bbb7e7cc224c23e990", "filename": "src/test/ui/rust-2018/edition-lint-paths.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.rs?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -12,17 +12,25 @@ pub mod foo {\n     use bar::Bar;\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+    //~| ERROR absolute\n+    //~| WARN this is accepted in the current edition\n+\n     use super::bar::Bar2;\n     use crate::bar::Bar3;\n \n     use bar;\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+\n     use crate::bar as something_else;\n \n     use {main, Bar as SomethingElse};\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+    //~| ERROR absolute\n+    //~| WARN this is accepted in the current edition\n+    //~| ERROR absolute\n+    //~| WARN this is accepted in the current edition\n \n     use crate::{main as another_main, Bar as SomethingElse2};\n \n@@ -34,6 +42,8 @@ pub mod foo {\n use bar::Bar;\n //~^ ERROR absolute\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute\n+//~| WARN this is accepted in the current edition\n \n pub mod bar {\n     use edition_lint_paths as foo;\n@@ -51,11 +61,14 @@ mod baz {\n impl ::foo::SomeTrait for u32 {}\n //~^ ERROR absolute\n //~| WARN this is accepted in the current edition\n+//~| ERROR absolute\n+//~| WARN this is accepted in the current edition\n \n fn main() {\n     let x = ::bar::Bar;\n     //~^ ERROR absolute\n     //~| WARN this is accepted in the current edition\n+\n     let x = bar::Bar;\n     let x = crate::bar::Bar;\n     let x = self::bar::Bar;"}, {"sha": "481c68e10336309081a4b62d427fc1e2a96d0b6b", "filename": "src/test/ui/rust-2018/edition-lint-paths.stderr", "status": "modified", "additions": 52, "deletions": 7, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fedition-lint-paths.stderr?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -13,7 +13,16 @@ LL | #![deny(absolute_paths_not_starting_with_crate)]\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-paths.rs:18:9\n+  --> $DIR/edition-lint-paths.rs:12:9\n+   |\n+LL |     use bar::Bar;\n+   |         ^^^^^^^^ help: use `crate`: `crate::bar::Bar`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-paths.rs:21:9\n    |\n LL |     use bar;\n    |         ^^^ help: use `crate`: `crate::bar`\n@@ -22,7 +31,7 @@ LL |     use bar;\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-paths.rs:23:9\n+  --> $DIR/edition-lint-paths.rs:27:9\n    |\n LL |     use {main, Bar as SomethingElse};\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::{main, Bar as SomethingElse}`\n@@ -31,7 +40,34 @@ LL |     use {main, Bar as SomethingElse};\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-paths.rs:34:5\n+  --> $DIR/edition-lint-paths.rs:27:9\n+   |\n+LL |     use {main, Bar as SomethingElse};\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::{main, Bar as SomethingElse}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-paths.rs:27:9\n+   |\n+LL |     use {main, Bar as SomethingElse};\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::{main, Bar as SomethingElse}`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-paths.rs:42:5\n+   |\n+LL | use bar::Bar;\n+   |     ^^^^^^^^ help: use `crate`: `crate::bar::Bar`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-paths.rs:42:5\n    |\n LL | use bar::Bar;\n    |     ^^^^^^^^ help: use `crate`: `crate::bar::Bar`\n@@ -40,7 +76,7 @@ LL | use bar::Bar;\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-paths.rs:46:9\n+  --> $DIR/edition-lint-paths.rs:56:9\n    |\n LL |     use *;\n    |         ^ help: use `crate`: `crate::*`\n@@ -49,7 +85,16 @@ LL |     use *;\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-paths.rs:51:6\n+  --> $DIR/edition-lint-paths.rs:61:6\n+   |\n+LL | impl ::foo::SomeTrait for u32 {}\n+   |      ^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::SomeTrait`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/edition-lint-paths.rs:61:6\n    |\n LL | impl ::foo::SomeTrait for u32 {}\n    |      ^^^^^^^^^^^^^^^^ help: use `crate`: `crate::foo::SomeTrait`\n@@ -58,13 +103,13 @@ LL | impl ::foo::SomeTrait for u32 {}\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n-  --> $DIR/edition-lint-paths.rs:56:13\n+  --> $DIR/edition-lint-paths.rs:68:13\n    |\n LL |     let x = ::bar::Bar;\n    |             ^^^^^^^^^^ help: use `crate`: `crate::bar::Bar`\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 12 previous errors\n "}, {"sha": "05b881a9b08cfd3c942501831ad0a444973dfebf", "filename": "src/test/ui/rust-2018/extern-crate-rename.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.fixed?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -12,6 +12,8 @@ extern crate edition_lint_paths as my_crate;\n use crate::my_crate::foo;\n //~^ ERROR absolute paths must start\n //~| WARNING this is accepted in the current edition\n+//~| ERROR absolute paths must start\n+//~| WARNING this is accepted in the current edition\n \n fn main() {\n     foo();"}, {"sha": "6e327be193bf12e7c31f63502a1fba5172669f5c", "filename": "src/test/ui/rust-2018/extern-crate-rename.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.rs?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -12,6 +12,8 @@ extern crate edition_lint_paths as my_crate;\n use my_crate::foo;\n //~^ ERROR absolute paths must start\n //~| WARNING this is accepted in the current edition\n+//~| ERROR absolute paths must start\n+//~| WARNING this is accepted in the current edition\n \n fn main() {\n     foo();"}, {"sha": "f2f379ca396b58a5805c7e26cb971147560d33f5", "filename": "src/test/ui/rust-2018/extern-crate-rename.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-rename.stderr?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -12,5 +12,14 @@ LL | #![deny(absolute_paths_not_starting_with_crate)]\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n-error: aborting due to previous error\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/extern-crate-rename.rs:12:5\n+   |\n+LL | use my_crate::foo;\n+   |     ^^^^^^^^^^^^^ help: use `crate`: `crate::my_crate::foo`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: aborting due to 2 previous errors\n "}, {"sha": "fdbd893abed82a2ffbe8e046d0ccf2cd479287fe", "filename": "src/test/ui/rust-2018/extern-crate-submod.fixed", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.fixed?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -19,6 +19,9 @@ mod m {\n use crate::m::edition_lint_paths::foo;\n //~^ ERROR absolute paths must start\n //~| WARNING this is accepted in the current edition\n+//~| ERROR absolute paths must start\n+//~| WARNING this is accepted in the current edition\n+\n \n fn main() {\n     foo();"}, {"sha": "c2b915849f02235b1274ce8e685c03c820952a6a", "filename": "src/test/ui/rust-2018/extern-crate-submod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.rs?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -19,6 +19,9 @@ mod m {\n use m::edition_lint_paths::foo;\n //~^ ERROR absolute paths must start\n //~| WARNING this is accepted in the current edition\n+//~| ERROR absolute paths must start\n+//~| WARNING this is accepted in the current edition\n+\n \n fn main() {\n     foo();"}, {"sha": "c4c3168bc97df0ba733d74e61a6408ad702c023b", "filename": "src/test/ui/rust-2018/extern-crate-submod.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c54dfee65126a0ac385d55389a316e89095a0713/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fextern-crate-submod.stderr?ref=c54dfee65126a0ac385d55389a316e89095a0713", "patch": "@@ -12,5 +12,14 @@ LL | #![deny(absolute_paths_not_starting_with_crate)]\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n    = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n \n-error: aborting due to previous error\n+error: absolute paths must start with `self`, `super`, `crate`, or an external crate name in the 2018 edition\n+  --> $DIR/extern-crate-submod.rs:19:5\n+   |\n+LL | use m::edition_lint_paths::foo;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `crate`: `crate::m::edition_lint_paths::foo`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2018!\n+   = note: for more information, see issue #53130 <https://github.com/rust-lang/rust/issues/53130>\n+\n+error: aborting due to 2 previous errors\n "}]}