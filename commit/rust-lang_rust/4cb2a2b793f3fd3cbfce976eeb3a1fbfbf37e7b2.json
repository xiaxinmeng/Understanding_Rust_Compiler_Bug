{"sha": "4cb2a2b793f3fd3cbfce976eeb3a1fbfbf37e7b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjYjJhMmI3OTNmM2ZkM2NiZmNlOTc2ZWViM2ExZmJmYmYzN2U3YjI=", "commit": {"author": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2020-08-22T14:14:33Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2020-08-22T14:14:33Z"}, "message": "FunctionCx: Fix field usage in inline_asm and vtable modules", "tree": {"sha": "b74b9d61c54b10e1684e4ea099ea0aa55a7107b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b74b9d61c54b10e1684e4ea099ea0aa55a7107b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cb2a2b793f3fd3cbfce976eeb3a1fbfbf37e7b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cb2a2b793f3fd3cbfce976eeb3a1fbfbf37e7b2", "html_url": "https://github.com/rust-lang/rust/commit/4cb2a2b793f3fd3cbfce976eeb3a1fbfbf37e7b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cb2a2b793f3fd3cbfce976eeb3a1fbfbf37e7b2/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "429e75fe4007835e60e76bff38ed5d97cd134af3", "url": "https://api.github.com/repos/rust-lang/rust/commits/429e75fe4007835e60e76bff38ed5d97cd134af3", "html_url": "https://github.com/rust-lang/rust/commit/429e75fe4007835e60e76bff38ed5d97cd134af3"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "f0ae0854f84fc3586daa724dc3354d5f88ec92c3", "filename": "src/inline_asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4cb2a2b793f3fd3cbfce976eeb3a1fbfbf37e7b2/src%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cb2a2b793f3fd3cbfce976eeb3a1fbfbf37e7b2/src%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finline_asm.rs?ref=4cb2a2b793f3fd3cbfce976eeb3a1fbfbf37e7b2", "patch": "@@ -73,7 +73,7 @@ pub(crate) fn codegen_inline_asm<'tcx>(\n     let asm_name = format!(\"{}__inline_asm_{}\", fx.codegen_cx.tcx.symbol_name(fx.instance).name, inline_asm_index);\n \n     let generated_asm = generate_asm_wrapper(&asm_name, InlineAsmArch::X86_64, options, template, clobbered_regs, &inputs, &outputs);\n-    fx.global_asm.push_str(&generated_asm);\n+    fx.codegen_cx.global_asm.push_str(&generated_asm);\n \n     call_inline_asm(fx, &asm_name, slot_size, inputs, outputs);\n }"}, {"sha": "6be801c844597d90681821e0ef2fc0aee1a7c573", "filename": "src/vtable.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4cb2a2b793f3fd3cbfce976eeb3a1fbfbf37e7b2/src%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cb2a2b793f3fd3cbfce976eeb3a1fbfbf37e7b2/src%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvtable.rs?ref=4cb2a2b793f3fd3cbfce976eeb3a1fbfbf37e7b2", "patch": "@@ -72,11 +72,11 @@ pub(crate) fn get_vtable<'tcx>(\n     layout: TyAndLayout<'tcx>,\n     trait_ref: Option<ty::PolyExistentialTraitRef<'tcx>>,\n ) -> Value {\n-    let data_id = if let Some(data_id) = fx.vtables.get(&(layout.ty, trait_ref)) {\n+    let data_id = if let Some(data_id) = fx.codegen_cx.vtables.get(&(layout.ty, trait_ref)) {\n         *data_id\n     } else {\n         let data_id = build_vtable(fx, layout, trait_ref);\n-        fx.vtables.insert((layout.ty, trait_ref), data_id);\n+        fx.codegen_cx.vtables.insert((layout.ty, trait_ref), data_id);\n         data_id\n     };\n \n@@ -142,7 +142,7 @@ fn build_vtable<'tcx>(\n                     .map(|trait_ref| format!(\"{:?}\", trait_ref.skip_binder()).into())\n                     .unwrap_or(std::borrow::Cow::Borrowed(\"???\")),\n                 layout.ty,\n-                fx.vtables.len(),\n+                fx.codegen_cx.vtables.len(),\n             ),\n             Linkage::Local,\n             false,"}]}