{"sha": "68312e3e20a881f2bcde20db0c7ee385c0aa27c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MzEyZTNlMjBhODgxZjJiY2RlMjBkYjBjN2VlMzg1YzBhYTI3YzE=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-11-23T05:47:07Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-11-23T05:47:07Z"}, "message": "Fix a bunch of bugs shown by the test", "tree": {"sha": "f0ac97161010bd7fba16a82feba35c5044f2c18a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0ac97161010bd7fba16a82feba35c5044f2c18a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68312e3e20a881f2bcde20db0c7ee385c0aa27c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68312e3e20a881f2bcde20db0c7ee385c0aa27c1", "html_url": "https://github.com/rust-lang/rust/commit/68312e3e20a881f2bcde20db0c7ee385c0aa27c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68312e3e20a881f2bcde20db0c7ee385c0aa27c1/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ea1544b804818c8df259de60c0e26a85ac52850", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ea1544b804818c8df259de60c0e26a85ac52850", "html_url": "https://github.com/rust-lang/rust/commit/9ea1544b804818c8df259de60c0e26a85ac52850"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "0476fc621d13febaf4c0bcd51ab642b9b41c67e4", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/68312e3e20a881f2bcde20db0c7ee385c0aa27c1/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68312e3e20a881f2bcde20db0c7ee385c0aa27c1/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=68312e3e20a881f2bcde20db0c7ee385c0aa27c1", "patch": "@@ -275,7 +275,7 @@ impl<'l, 'tcx: 'l, 'll, D: Dump + 'll> DumpVisitor<'l, 'tcx, 'll, D> {\n     fn lookup_def_id(&self, ref_id: NodeId) -> Option<DefId> {\n         self.tcx.expect_def_or_none(ref_id).and_then(|def| {\n             match def {\n-                Def::PrimTy(..) | Def::SelfTy(..) => None,\n+                Def::Label(..) | Def::PrimTy(..) | Def::SelfTy(..) | Def::Err => None,\n                 def => Some(def.def_id()),\n             }\n         })\n@@ -357,7 +357,10 @@ impl<'l, 'tcx: 'l, 'll, D: Dump + 'll> DumpVisitor<'l, 'tcx, 'll, D> {\n             collector.visit_pat(&arg.pat);\n             let span_utils = self.span.clone();\n             for &(id, ref p, ..) in &collector.collected_paths {\n-                let typ = self.tcx.tables().node_types.get(&id).unwrap().to_string();\n+                let typ = match self.tcx.tables().node_types.get(&id) {\n+                    Some(s) => s.to_string(),\n+                    None => continue,\n+                };\n                 // get the span only for the name of the variable (I hope the path is only ever a\n                 // variable name, but who knows?)\n                 let sub_span = span_utils.span_for_last_ident(p.span);\n@@ -987,7 +990,13 @@ impl<'l, 'tcx: 'l, 'll, D: Dump + 'll> DumpVisitor<'l, 'tcx, 'll, D> {\n         match p.node {\n             PatKind::Struct(ref path, ref fields, _) => {\n                 visit::walk_path(self, path);\n-                let adt = self.tcx.tables().node_id_to_type(p.id).ty_adt_def().unwrap();\n+                let adt = match self.tcx.tables().node_id_to_type_opt(p.id) {\n+                    Some(ty) => ty.ty_adt_def().unwrap(),\n+                    None => {\n+                        visit::walk_pat(self, p);\n+                        return;\n+                    }\n+                };\n                 let variant = adt.variant_of_def(self.tcx.expect_def(p.id));\n \n                 for &Spanned { node: ref field, span } in fields {\n@@ -1353,7 +1362,13 @@ impl<'l, 'tcx: 'l, 'll, D: Dump +'ll> Visitor for DumpVisitor<'l, 'tcx, 'll, D>\n             }\n             ast::ExprKind::Struct(ref path, ref fields, ref base) => {\n                 let hir_expr = self.save_ctxt.tcx.map.expect_expr(ex.id);\n-                let adt = self.tcx.tables().expr_ty(&hir_expr).ty_adt_def().unwrap();\n+                let adt = match self.tcx.tables().expr_ty_opt(&hir_expr) {\n+                    Some(ty) => ty.ty_adt_def().unwrap(),\n+                    None => {\n+                        visit::walk_expr(self, ex);\n+                        return;\n+                    }\n+                };\n                 let def = self.tcx.expect_def(hir_expr.id);\n                 self.process_struct_lit(ex, path, fields, adt.variant_of_def(def), base)\n             }\n@@ -1379,7 +1394,13 @@ impl<'l, 'tcx: 'l, 'll, D: Dump +'ll> Visitor for DumpVisitor<'l, 'tcx, 'll, D>\n                         return;\n                     }\n                 };\n-                let ty = &self.tcx.tables().expr_ty_adjusted(&hir_node).sty;\n+                let ty = match self.tcx.tables().expr_ty_adjusted_opt(&hir_node) {\n+                    Some(ty) => &ty.sty,\n+                    None => {\n+                        visit::walk_expr(self, ex);\n+                        return;\n+                    }\n+                };\n                 match *ty {\n                     ty::TyAdt(def, _) => {\n                         let sub_span = self.span.sub_span_after_token(ex.span, token::Dot);"}, {"sha": "f29f907cf387eb55c4d21900a57460e31c4a814b", "filename": "src/test/run-make/save-analysis-fail/Makefile", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/68312e3e20a881f2bcde20db0c7ee385c0aa27c1/src%2Ftest%2Frun-make%2Fsave-analysis-fail%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/68312e3e20a881f2bcde20db0c7ee385c0aa27c1/src%2Ftest%2Frun-make%2Fsave-analysis-fail%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsave-analysis-fail%2FMakefile?ref=68312e3e20a881f2bcde20db0c7ee385c0aa27c1", "patch": "@@ -3,6 +3,4 @@ all: code\n krate2: krate2.rs\n \t$(RUSTC) $<\n code: foo.rs krate2\n-\t$(RUSTC) foo.rs -Zsave-analysis-csv\n-\t$(RUSTC) foo.rs -Zsave-analysis\n-\t$(RUSTC) foo.rs -Zsave-analysis-api\n+\t$(RUSTC) foo.rs -Zsave-analysis || exit 0"}]}