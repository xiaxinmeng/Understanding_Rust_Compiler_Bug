{"sha": "267cd1d2c5abf5f0d825822a4179ba807b69ffb4", "node_id": "C_kwDOAAsO6NoAKDI2N2NkMWQyYzVhYmY1ZjBkODI1ODIyYTQxNzliYTgwN2I2OWZmYjQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-20T13:23:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-20T13:23:47Z"}, "message": "Auto merge of #107721 - megakorre:issue_105700, r=petrochenkov\n\ncreate dummy placeholder crate to prevent compiler from panicing\n\nThis PR is to address the panic found in https://github.com/rust-lang/rust/issues/105700.\n\nThere are 2 separate things going on with this panic.\nFirst the code could not generate a dummy response for crate fragment types when it hits the recursion limit.\nThis PR adds the method to the trait implementation for `DymmyResult` to be able to create a dummy crate node.\nThis stops the panic from happening.\n\nThe second thing that is not addressed (and maybe does not need addressing? \ud83e\udd37\ud83c\udffb)\nis that when you have multiple attributes it ends up treating attributes that follow another as being the result of expanding the former (maybe there is a better way to say that). So you end up hitting the recursion limit. Even though you would think there is no expansion happening here.\n\nIf you did not hit the recursion limit the compiler would output that `invalid_attribute` does not exists. But it currently exits before the resolution step when the recursion limit is reached here.", "tree": {"sha": "45bf64c153d8a7bbfd5d9dbe7c9eb1da5be4042f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45bf64c153d8a7bbfd5d9dbe7c9eb1da5be4042f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/267cd1d2c5abf5f0d825822a4179ba807b69ffb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/267cd1d2c5abf5f0d825822a4179ba807b69ffb4", "html_url": "https://github.com/rust-lang/rust/commit/267cd1d2c5abf5f0d825822a4179ba807b69ffb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/267cd1d2c5abf5f0d825822a4179ba807b69ffb4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7eaed21d50d7bfb8d614d6ee7fcea940b39185d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7eaed21d50d7bfb8d614d6ee7fcea940b39185d", "html_url": "https://github.com/rust-lang/rust/commit/e7eaed21d50d7bfb8d614d6ee7fcea940b39185d"}, {"sha": "0fd2a70b90081c9536b89c95ca7f03755c13e9b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fd2a70b90081c9536b89c95ca7f03755c13e9b4", "html_url": "https://github.com/rust-lang/rust/commit/0fd2a70b90081c9536b89c95ca7f03755c13e9b4"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "00c5fe791f915e674ef41d8ec68add0d2064fda4", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/267cd1d2c5abf5f0d825822a4179ba807b69ffb4/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/267cd1d2c5abf5f0d825822a4179ba807b69ffb4/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=267cd1d2c5abf5f0d825822a4179ba807b69ffb4", "patch": "@@ -5,6 +5,7 @@ use crate::expand::{self, AstFragment, Invocation};\n use crate::module::DirOwnership;\n \n use rustc_ast::attr::MarkedAttrs;\n+use rustc_ast::mut_visit::DummyAstNode;\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, Nonterminal};\n use rustc_ast::tokenstream::TokenStream;\n@@ -640,6 +641,10 @@ impl MacResult for DummyResult {\n     fn make_variants(self: Box<DummyResult>) -> Option<SmallVec<[ast::Variant; 1]>> {\n         Some(SmallVec::new())\n     }\n+\n+    fn make_crate(self: Box<DummyResult>) -> Option<ast::Crate> {\n+        Some(DummyAstNode::dummy())\n+    }\n }\n \n /// A syntax extension kind."}, {"sha": "e1fee46313d50cfc560f9b6febd69ff5ca0174b0", "filename": "tests/ui/recursion_limit/issue_21102.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/267cd1d2c5abf5f0d825822a4179ba807b69ffb4/tests%2Fui%2Frecursion_limit%2Fissue_21102.rs", "raw_url": "https://github.com/rust-lang/rust/raw/267cd1d2c5abf5f0d825822a4179ba807b69ffb4/tests%2Fui%2Frecursion_limit%2Fissue_21102.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frecursion_limit%2Fissue_21102.rs?ref=267cd1d2c5abf5f0d825822a4179ba807b69ffb4", "patch": "@@ -0,0 +1,9 @@\n+#![recursion_limit=\"4\"]\n+#![invalid_attribute]\n+#![invalid_attribute]\n+#![invalid_attribute]\n+#![invalid_attribute]\n+#![invalid_attribute]\n+//~^ERROR recursion limit reached while expanding\n+\n+fn main() {}"}, {"sha": "1bd722c492badb28afc988c8bbc776fe503cd419", "filename": "tests/ui/recursion_limit/issue_21102.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/267cd1d2c5abf5f0d825822a4179ba807b69ffb4/tests%2Fui%2Frecursion_limit%2Fissue_21102.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/267cd1d2c5abf5f0d825822a4179ba807b69ffb4/tests%2Fui%2Frecursion_limit%2Fissue_21102.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frecursion_limit%2Fissue_21102.stderr?ref=267cd1d2c5abf5f0d825822a4179ba807b69ffb4", "patch": "@@ -0,0 +1,10 @@\n+error: recursion limit reached while expanding `#[invalid_attribute]`\n+  --> $DIR/issue_21102.rs:6:1\n+   |\n+LL | #![invalid_attribute]\n+   | ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"8\"]` attribute to your crate (`issue_21102`)\n+\n+error: aborting due to previous error\n+"}]}