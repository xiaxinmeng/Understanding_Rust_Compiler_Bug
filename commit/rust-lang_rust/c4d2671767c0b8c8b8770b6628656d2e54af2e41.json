{"sha": "c4d2671767c0b8c8b8770b6628656d2e54af2e41", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0ZDI2NzE3NjdjMGI4YzhiODc3MGI2NjI4NjU2ZDJlNTRhZjJlNDE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-04T14:32:59Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-04T14:32:59Z"}, "message": "minor: untangle complex condition", "tree": {"sha": "c756cffda6ce1f7e6e4f1266d8fed1e71684736e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c756cffda6ce1f7e6e4f1266d8fed1e71684736e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4d2671767c0b8c8b8770b6628656d2e54af2e41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4d2671767c0b8c8b8770b6628656d2e54af2e41", "html_url": "https://github.com/rust-lang/rust/commit/c4d2671767c0b8c8b8770b6628656d2e54af2e41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4d2671767c0b8c8b8770b6628656d2e54af2e41/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13161ab738af83a60205ab26d9da9f7ea8db855e", "url": "https://api.github.com/repos/rust-lang/rust/commits/13161ab738af83a60205ab26d9da9f7ea8db855e", "html_url": "https://github.com/rust-lang/rust/commit/13161ab738af83a60205ab26d9da9f7ea8db855e"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "aee90d3574b41797e2507090688238a0d137504c", "filename": "crates/syntax/src/ted.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c4d2671767c0b8c8b8770b6628656d2e54af2e41/crates%2Fsyntax%2Fsrc%2Fted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d2671767c0b8c8b8770b6628656d2e54af2e41/crates%2Fsyntax%2Fsrc%2Fted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fted.rs?ref=c4d2671767c0b8c8b8770b6628656d2e54af2e41", "patch": "@@ -150,18 +150,17 @@ pub fn append_child_raw(node: &(impl Into<SyntaxNode> + Clone), child: impl Elem\n fn ws_before(position: &Position, new: &SyntaxElement) -> Option<SyntaxToken> {\n     let prev = match &position.repr {\n         PositionRepr::FirstChild(_) => return None,\n-        PositionRepr::After(it) if it.kind() == SyntaxKind::L_CURLY => {\n-            if new.kind() == SyntaxKind::USE {\n-                if let Some(item_list) = it.parent().and_then(ast::ItemList::cast) {\n-                    let mut indent = IndentLevel::from_element(&item_list.syntax().clone().into());\n-                    indent.0 += 1;\n-                    return Some(make::tokens::whitespace(&format!(\"\\n{}\", indent)));\n-                }\n-            }\n-            it\n-        }\n         PositionRepr::After(it) => it,\n     };\n+\n+    if prev.kind() == T!['{'] && new.kind() == SyntaxKind::USE {\n+        if let Some(item_list) = prev.parent().and_then(ast::ItemList::cast) {\n+            let mut indent = IndentLevel::from_element(&item_list.syntax().clone().into());\n+            indent.0 += 1;\n+            return Some(make::tokens::whitespace(&format!(\"\\n{}\", indent)));\n+        }\n+    }\n+\n     ws_between(prev, new)\n }\n fn ws_after(position: &Position, new: &SyntaxElement) -> Option<SyntaxToken> {"}]}