{"sha": "3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMmJiY2YwMGUzYjk3YWIxZmIwMzY2NWI0YWZjN2I3ZGYwY2QyNWU=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-03-21T18:34:56Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-04-15T15:18:12Z"}, "message": "Better precedence case management + more tests", "tree": {"sha": "6ead91ce99eb41874c9d38f155e29110f1d6691a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ead91ce99eb41874c9d38f155e29110f1d6691a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e", "html_url": "https://github.com/rust-lang/rust/commit/3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72b9ae2a10b13a209f09c5ace0a7b9763b740e62", "url": "https://api.github.com/repos/rust-lang/rust/commits/72b9ae2a10b13a209f09c5ace0a7b9763b740e62", "html_url": "https://github.com/rust-lang/rust/commit/72b9ae2a10b13a209f09c5ace0a7b9763b740e62"}], "stats": {"total": 62, "additions": 47, "deletions": 15}, "files": [{"sha": "68ec07e2bcb0f58f874bdbce221741d1559c7c54", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{get_parent_expr, implements_trait, snippet, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc_ast::util::parser::ExprPrecedence;\n+use rustc_ast::util::parser::{ExprPrecedence, PREC_POSTFIX, PREC_PREFIX};\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n@@ -51,9 +51,16 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Dereferencing {\n                     if let ExprKind::MethodCall(..) = parent_expr.kind {\n                         return;\n                     }\n-                    // Check for unary precedence\n-                    if let ExprPrecedence::Unary = parent_expr.precedence() {\n-                        return;\n+                    // Check for Expr that we don't want to be linted\n+                    let precedence = parent_expr.precedence();\n+                    match precedence {\n+                        // Lint a Call is ok though\n+                        ExprPrecedence::Call | ExprPrecedence::AddrOf => (),\n+                        _ => {\n+                            if precedence.order() >= PREC_PREFIX && precedence.order() <= PREC_POSTFIX {\n+                                return;\n+                            }\n+                        }\n                     }\n                 }\n                 let name = method_name.ident.as_str();"}, {"sha": "de1bab3a0b9407d34ad9f7e6f0f5100800d90ed1", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e", "patch": "@@ -191,6 +191,7 @@ mod copies;\n mod copy_iterator;\n mod dbg_macro;\n mod default_trait_access;\n+mod dereference;\n mod derive;\n mod doc;\n mod double_comparison;"}, {"sha": "459ca91b93b9e5b7dc4f67d7481e8a32ad8a7884", "filename": "tests/ui/dereference.fixed", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e/tests%2Fui%2Fdereference.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e/tests%2Fui%2Fdereference.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdereference.fixed?ref=3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e", "patch": "@@ -13,6 +13,15 @@ fn just_return(deref_str: &str) -> &str {\n     deref_str\n }\n \n+struct CustomVec(Vec<u8>);\n+impl Deref for CustomVec {\n+    type Target = Vec<u8>;\n+\n+    fn deref(&self) -> &Vec<u8> {\n+        &self.0\n+    }\n+}\n+\n fn main() {\n     let a: &mut String = &mut String::from(\"foo\");\n \n@@ -45,6 +54,9 @@ fn main() {\n \n     // following should not require linting\n \n+    let cv = CustomVec(vec![0, 42]);\n+    let c = cv.deref()[0];\n+\n     let b: &str = &*a.deref();\n \n     let b: String = a.deref().clone();"}, {"sha": "8dc5272e67fa529fb5afc0bc8a6d1db62a51bdc1", "filename": "tests/ui/dereference.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e/tests%2Fui%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e/tests%2Fui%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdereference.rs?ref=3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e", "patch": "@@ -13,6 +13,15 @@ fn just_return(deref_str: &str) -> &str {\n     deref_str\n }\n \n+struct CustomVec(Vec<u8>);\n+impl Deref for CustomVec {\n+    type Target = Vec<u8>;\n+\n+    fn deref(&self) -> &Vec<u8> {\n+        &self.0\n+    }\n+}\n+\n fn main() {\n     let a: &mut String = &mut String::from(\"foo\");\n \n@@ -45,6 +54,9 @@ fn main() {\n \n     // following should not require linting\n \n+    let cv = CustomVec(vec![0, 42]);\n+    let c = cv.deref()[0];\n+\n     let b: &str = &*a.deref();\n \n     let b: String = a.deref().clone();"}, {"sha": "d26b462a4336236b79472bc5dd8b001f99c08473", "filename": "tests/ui/dereference.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e/tests%2Fui%2Fdereference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e/tests%2Fui%2Fdereference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdereference.stderr?ref=3c2bbcf00e3b97ab1fb03665b4afc7b7df0cd25e", "patch": "@@ -1,67 +1,67 @@\n error: explicit deref method call\n-  --> $DIR/dereference.rs:21:19\n+  --> $DIR/dereference.rs:30:19\n    |\n LL |     let b: &str = a.deref();\n    |                   ^^^^^^^^^ help: try this: `&*a`\n    |\n    = note: `-D clippy::explicit-deref-methods` implied by `-D warnings`\n \n error: explicit deref_mut method call\n-  --> $DIR/dereference.rs:23:23\n+  --> $DIR/dereference.rs:32:23\n    |\n LL |     let b: &mut str = a.deref_mut();\n    |                       ^^^^^^^^^^^^^ help: try this: `&mut *a`\n \n error: explicit deref method call\n-  --> $DIR/dereference.rs:26:39\n+  --> $DIR/dereference.rs:35:39\n    |\n LL |     let b: String = format!(\"{}, {}\", a.deref(), a.deref());\n    |                                       ^^^^^^^^^ help: try this: `&*a`\n \n error: explicit deref method call\n-  --> $DIR/dereference.rs:26:50\n+  --> $DIR/dereference.rs:35:50\n    |\n LL |     let b: String = format!(\"{}, {}\", a.deref(), a.deref());\n    |                                                  ^^^^^^^^^ help: try this: `&*a`\n \n error: explicit deref method call\n-  --> $DIR/dereference.rs:28:20\n+  --> $DIR/dereference.rs:37:20\n    |\n LL |     println!(\"{}\", a.deref());\n    |                    ^^^^^^^^^ help: try this: `&*a`\n \n error: explicit deref method call\n-  --> $DIR/dereference.rs:31:11\n+  --> $DIR/dereference.rs:40:11\n    |\n LL |     match a.deref() {\n    |           ^^^^^^^^^ help: try this: `&*a`\n \n error: explicit deref method call\n-  --> $DIR/dereference.rs:35:28\n+  --> $DIR/dereference.rs:44:28\n    |\n LL |     let b: String = concat(a.deref());\n    |                            ^^^^^^^^^ help: try this: `&*a`\n \n error: explicit deref method call\n-  --> $DIR/dereference.rs:37:13\n+  --> $DIR/dereference.rs:46:13\n    |\n LL |     let b = just_return(a).deref();\n    |             ^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&*just_return(a)`\n \n error: explicit deref method call\n-  --> $DIR/dereference.rs:39:28\n+  --> $DIR/dereference.rs:48:28\n    |\n LL |     let b: String = concat(just_return(a).deref());\n    |                            ^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&*just_return(a)`\n \n error: explicit deref method call\n-  --> $DIR/dereference.rs:41:19\n+  --> $DIR/dereference.rs:50:19\n    |\n LL |     let b: &str = a.deref().deref();\n    |                   ^^^^^^^^^^^^^^^^^ help: try this: `&*a.deref()`\n \n error: explicit deref method call\n-  --> $DIR/dereference.rs:44:13\n+  --> $DIR/dereference.rs:53:13\n    |\n LL |     let b = opt_a.unwrap().deref();\n    |             ^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&*opt_a.unwrap()`"}]}