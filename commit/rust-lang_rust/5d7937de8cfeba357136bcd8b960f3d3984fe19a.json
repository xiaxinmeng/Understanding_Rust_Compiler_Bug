{"sha": "5d7937de8cfeba357136bcd8b960f3d3984fe19a", "node_id": "C_kwDOAAsO6NoAKDVkNzkzN2RlOGNmZWJhMzU3MTM2YmNkOGI5NjBmM2QzOTg0ZmUxOWE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-23T02:29:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-23T02:29:15Z"}, "message": "Rollup merge of #100734 - ComputerDruid:afit_feature, r=compiler-errors\n\nSplit out async_fn_in_trait into a separate feature\n\nPR #101224 added support for async fn in trait desuraging behind the `return_position_impl_trait_in_trait` feature.\n\nSplit this out so that it's behind its own feature gate, since async fn in trait doesn't need to follow the same stabilization schedule.", "tree": {"sha": "fd63a12674b7bcfbc7696c84e7538b201604be07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd63a12674b7bcfbc7696c84e7538b201604be07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d7937de8cfeba357136bcd8b960f3d3984fe19a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjLRn7CRBK7hj4Ov3rIwAAvyUIAEjFPQLfR0FDgWdFJCBTgh+T\nK441ptR0Ssp7fWsfX5LTiwtPy1vYRJ+YL8kk8sILGmFbBrqgmdgmzHIy8Y/mRKje\n04cNXLqt/FfsEwAEyFoHJ0lcaWUwVPUfbcj/AwpC0H3SoY5Ll55eBqAiwkw1h2iy\nohHSXqpk3rAJdn5bku1+wtUDElMsSqFUCNGMwRr42eSCzvQU1zgjGM/Rhhzn9hIO\nSctzCWTUzOO9DQrCNKbs2t2MeFHMVvk42CfptDIkLRPwyH+CRaYYCxoiCx4cxVHI\nv+mXzLYXzF4gpsudIwQS4tGL9oEnq+VqH/8Y4E5Y6RCpGaTEP9ejLHtV7N3kI9A=\n=GTPs\n-----END PGP SIGNATURE-----\n", "payload": "tree fd63a12674b7bcfbc7696c84e7538b201604be07\nparent e7119a0300b87a3d670408ee8e847c6821b3ae80\nparent d0a07495be4906db5028a605f650aafeabee1879\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1663900155 +0200\ncommitter GitHub <noreply@github.com> 1663900155 +0200\n\nRollup merge of #100734 - ComputerDruid:afit_feature, r=compiler-errors\n\nSplit out async_fn_in_trait into a separate feature\n\nPR #101224 added support for async fn in trait desuraging behind the `return_position_impl_trait_in_trait` feature.\n\nSplit this out so that it's behind its own feature gate, since async fn in trait doesn't need to follow the same stabilization schedule.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d7937de8cfeba357136bcd8b960f3d3984fe19a", "html_url": "https://github.com/rust-lang/rust/commit/5d7937de8cfeba357136bcd8b960f3d3984fe19a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d7937de8cfeba357136bcd8b960f3d3984fe19a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7119a0300b87a3d670408ee8e847c6821b3ae80", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7119a0300b87a3d670408ee8e847c6821b3ae80", "html_url": "https://github.com/rust-lang/rust/commit/e7119a0300b87a3d670408ee8e847c6821b3ae80"}, {"sha": "d0a07495be4906db5028a605f650aafeabee1879", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0a07495be4906db5028a605f650aafeabee1879", "html_url": "https://github.com/rust-lang/rust/commit/d0a07495be4906db5028a605f650aafeabee1879"}], "stats": {"total": 152, "additions": 133, "deletions": 19}, "files": [{"sha": "a11721ba0213ad39b846c9321cd28b51fc052c47", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5d7937de8cfeba357136bcd8b960f3d3984fe19a/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7937de8cfeba357136bcd8b960f3d3984fe19a/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=5d7937de8cfeba357136bcd8b960f3d3984fe19a", "patch": "@@ -332,6 +332,15 @@ impl FnDeclKind {\n             _ => false,\n         }\n     }\n+\n+    fn async_fn_allowed(&self, tcx: TyCtxt<'_>) -> bool {\n+        match self {\n+            FnDeclKind::Fn | FnDeclKind::Inherent => true,\n+            FnDeclKind::Impl if tcx.features().async_fn_in_trait => true,\n+            FnDeclKind::Trait if tcx.features().async_fn_in_trait => true,\n+            _ => false,\n+        }\n+    }\n }\n \n #[derive(Copy, Clone)]\n@@ -1692,14 +1701,14 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         }));\n \n         let output = if let Some((ret_id, span)) = make_ret_async {\n-            if !kind.impl_trait_allowed(self.tcx) {\n+            if !kind.async_fn_allowed(self.tcx) {\n                 match kind {\n                     FnDeclKind::Trait | FnDeclKind::Impl => {\n                         self.tcx\n                             .sess\n                             .create_feature_err(\n                                 TraitFnAsync { fn_span, span },\n-                                sym::return_position_impl_trait_in_trait,\n+                                sym::async_fn_in_trait,\n                             )\n                             .emit();\n                     }\n@@ -1917,9 +1926,13 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                 let future_bound = this.lower_async_fn_output_type_to_future_bound(\n                     output,\n                     span,\n-                    ImplTraitContext::ReturnPositionOpaqueTy {\n-                        origin: hir::OpaqueTyOrigin::FnReturn(fn_def_id),\n-                        in_trait,\n+                    if in_trait && !this.tcx.features().return_position_impl_trait_in_trait {\n+                        ImplTraitContext::Disallowed(ImplTraitPosition::TraitReturn)\n+                    } else {\n+                        ImplTraitContext::ReturnPositionOpaqueTy {\n+                            origin: hir::OpaqueTyOrigin::FnReturn(fn_def_id),\n+                            in_trait,\n+                        }\n                     },\n                 );\n "}, {"sha": "4c891fbf16e94f8b40d9eea344451b792c4c7cf1", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d7937de8cfeba357136bcd8b960f3d3984fe19a/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7937de8cfeba357136bcd8b960f3d3984fe19a/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=5d7937de8cfeba357136bcd8b960f3d3984fe19a", "patch": "@@ -312,6 +312,8 @@ declare_features! (\n     (active, associated_type_defaults, \"1.2.0\", Some(29661), None),\n     /// Allows `async || body` closures.\n     (active, async_closure, \"1.37.0\", Some(62290), None),\n+    /// Alows async functions to be declared, implemented, and used in traits.\n+    (incomplete, async_fn_in_trait, \"CURRENT_RUSTC_VERSION\", Some(91611), None),\n     /// Allows `extern \"C-unwind\" fn` to enable unwinding across ABI boundaries.\n     (active, c_unwind, \"1.52.0\", Some(74990), None),\n     /// Allows using C-variadics."}, {"sha": "502ef67fc676754eb64ee17b25f2106c59d4495d", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5d7937de8cfeba357136bcd8b960f3d3984fe19a/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7937de8cfeba357136bcd8b960f3d3984fe19a/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=5d7937de8cfeba357136bcd8b960f3d3984fe19a", "patch": "@@ -396,6 +396,7 @@ symbols! {\n         assume_init,\n         async_await,\n         async_closure,\n+        async_fn_in_trait,\n         atomic,\n         atomic_mod,\n         atomics,"}, {"sha": "4fa54c6e3696023e0e7411ea84834e63f54d5575", "filename": "src/test/ui/async-await/async-trait-fn.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr?ref=5d7937de8cfeba357136bcd8b960f3d3984fe19a", "patch": "@@ -9,7 +9,7 @@ LL |     async fn foo() {}\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n    = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n-   = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n error[E0706]: functions in traits cannot be declared `async`\n   --> $DIR/async-trait-fn.rs:5:5\n@@ -22,7 +22,7 @@ LL |     async fn bar(&self) {}\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n    = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n-   = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n error[E0706]: functions in traits cannot be declared `async`\n   --> $DIR/async-trait-fn.rs:7:5\n@@ -35,7 +35,7 @@ LL |     async fn baz() {\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n    = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n-   = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n error[E0308]: mismatched types\n   --> $DIR/async-trait-fn.rs:3:20"}, {"sha": "62a243e69e7431593c5e2fce0428c1dff0313473", "filename": "src/test/ui/async-await/edition-deny-async-fns-2015.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr?ref=5d7937de8cfeba357136bcd8b960f3d3984fe19a", "patch": "@@ -90,7 +90,7 @@ LL |     async fn foo() {}\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n    = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n-   = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n error[E0308]: mismatched types\n   --> $DIR/edition-deny-async-fns-2015.rs:18:20"}, {"sha": "792f378cb57f1d015aab86757afcb7a4cc33888a", "filename": "src/test/ui/async-await/feature-gate-async_fn_in_trait.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fasync-await%2Ffeature-gate-async_fn_in_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fasync-await%2Ffeature-gate-async_fn_in_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Ffeature-gate-async_fn_in_trait.rs?ref=5d7937de8cfeba357136bcd8b960f3d3984fe19a", "patch": "@@ -0,0 +1,25 @@\n+// edition:2021\n+\n+// RPITIT is not enough to allow use of async functions\n+#![allow(incomplete_features)]\n+#![feature(return_position_impl_trait_in_trait)]\n+\n+trait T {\n+    async fn foo(); //~ ERROR functions in traits cannot be declared `async`\n+}\n+\n+// Both return_position_impl_trait_in_trait and async_fn_in_trait are required for this (see also\n+// feature-gate-return_position_impl_trait_in_trait.rs)\n+trait T2 {\n+    async fn foo() -> impl Sized; //~ ERROR functions in traits cannot be declared `async`\n+}\n+\n+trait T3 {\n+    fn foo() -> impl std::future::Future<Output = ()>;\n+}\n+\n+impl T3 for () {\n+    async fn foo() {} //~ ERROR functions in traits cannot be declared `async`\n+}\n+\n+fn main() {}"}, {"sha": "2a5fbd1ecd03d932d05ad986aef426bcc7d39d38", "filename": "src/test/ui/async-await/feature-gate-async_fn_in_trait.stderr", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fasync-await%2Ffeature-gate-async_fn_in_trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fasync-await%2Ffeature-gate-async_fn_in_trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Ffeature-gate-async_fn_in_trait.stderr?ref=5d7937de8cfeba357136bcd8b960f3d3984fe19a", "patch": "@@ -0,0 +1,42 @@\n+error[E0706]: functions in traits cannot be declared `async`\n+  --> $DIR/feature-gate-async_fn_in_trait.rs:8:5\n+   |\n+LL |     async fn foo();\n+   |     -----^^^^^^^^^^\n+   |     |\n+   |     `async` because of this\n+   |\n+   = note: `async` trait functions are not currently supported\n+   = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n+\n+error[E0706]: functions in traits cannot be declared `async`\n+  --> $DIR/feature-gate-async_fn_in_trait.rs:14:5\n+   |\n+LL |     async fn foo() -> impl Sized;\n+   |     -----^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     |\n+   |     `async` because of this\n+   |\n+   = note: `async` trait functions are not currently supported\n+   = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n+\n+error[E0706]: functions in traits cannot be declared `async`\n+  --> $DIR/feature-gate-async_fn_in_trait.rs:22:5\n+   |\n+LL |     async fn foo() {}\n+   |     -----^^^^^^^^^\n+   |     |\n+   |     `async` because of this\n+   |\n+   = note: `async` trait functions are not currently supported\n+   = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0706`."}, {"sha": "a497cebe3c3d8c0f27c8b897780a71106709e622", "filename": "src/test/ui/async-await/issues/issue-95307.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-95307.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-95307.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-95307.stderr?ref=5d7937de8cfeba357136bcd8b960f3d3984fe19a", "patch": "@@ -9,7 +9,7 @@ LL |     async fn new() -> [u8; _];\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n    = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n-   = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n error: in expressions, `_` can only be used on the left-hand side of an assignment\n   --> $DIR/issue-95307.rs:7:28"}, {"sha": "637765fff11e42b2446649bb43c8a2231d5329f6", "filename": "src/test/ui/feature-gates/feature-gate-return_position_impl_trait_in_trait.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-return_position_impl_trait_in_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-return_position_impl_trait_in_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-return_position_impl_trait_in_trait.rs?ref=5d7937de8cfeba357136bcd8b960f3d3984fe19a", "patch": "@@ -1,5 +1,18 @@\n+// edition:2021\n+\n+// async_fn_in_trait is not enough to allow use of RPITIT\n+#![allow(incomplete_features)]\n+#![feature(async_fn_in_trait)]\n+\n trait Foo {\n     fn bar() -> impl Sized; //~ ERROR `impl Trait` only allowed in function and inherent method return types, not in trait method return\n+    fn baz() -> Box<impl std::fmt::Display>; //~ ERROR `impl Trait` only allowed in function and inherent method return types, not in trait method return\n+}\n+\n+// Both return_position_impl_trait_in_trait and async_fn_in_trait are required for this (see also\n+// feature-gate-async_fn_in_trait.rs)\n+trait AsyncFoo {\n+    async fn bar() -> impl Sized; //~ ERROR `impl Trait` only allowed in function and inherent method return types, not in trait method return\n }\n \n fn main() {}"}, {"sha": "aeabed4a6ab66d550f9e1ed82f852eabbcb88d4b", "filename": "src/test/ui/feature-gates/feature-gate-return_position_impl_trait_in_trait.stderr", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-return_position_impl_trait_in_trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-return_position_impl_trait_in_trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-return_position_impl_trait_in_trait.stderr?ref=5d7937de8cfeba357136bcd8b960f3d3984fe19a", "patch": "@@ -1,12 +1,30 @@\n error[E0562]: `impl Trait` only allowed in function and inherent method return types, not in trait method return\n-  --> $DIR/feature-gate-return_position_impl_trait_in_trait.rs:2:17\n+  --> $DIR/feature-gate-return_position_impl_trait_in_trait.rs:8:17\n    |\n LL |     fn bar() -> impl Sized;\n    |                 ^^^^^^^^^^\n    |\n    = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n    = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n \n-error: aborting due to previous error\n+error[E0562]: `impl Trait` only allowed in function and inherent method return types, not in trait method return\n+  --> $DIR/feature-gate-return_position_impl_trait_in_trait.rs:9:21\n+   |\n+LL |     fn baz() -> Box<impl std::fmt::Display>;\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n+\n+error[E0562]: `impl Trait` only allowed in function and inherent method return types, not in trait method return\n+  --> $DIR/feature-gate-return_position_impl_trait_in_trait.rs:15:23\n+   |\n+LL |     async fn bar() -> impl Sized;\n+   |                       ^^^^^^^^^^\n+   |\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n+\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0562`."}, {"sha": "800b5a43a0066802da036d6ab63b25c38b62d95a", "filename": "src/test/ui/parser/fn-header-semantic-fail.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ffn-header-semantic-fail.stderr?ref=5d7937de8cfeba357136bcd8b960f3d3984fe19a", "patch": "@@ -147,7 +147,7 @@ LL |         async fn ft1();\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n    = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n-   = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n error[E0706]: functions in traits cannot be declared `async`\n   --> $DIR/fn-header-semantic-fail.rs:21:9\n@@ -160,7 +160,7 @@ LL |         const async unsafe extern \"C\" fn ft5();\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n    = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n-   = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n error[E0706]: functions in traits cannot be declared `async`\n   --> $DIR/fn-header-semantic-fail.rs:29:9\n@@ -173,7 +173,7 @@ LL |         async fn ft1() {}\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n    = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n-   = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n error[E0706]: functions in traits cannot be declared `async`\n   --> $DIR/fn-header-semantic-fail.rs:33:9\n@@ -186,7 +186,7 @@ LL |         const async unsafe extern \"C\" fn ft5() {}\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n    = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n-   = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n error[E0391]: cycle detected when computing type of `main::ff5::{opaque#0}`\n   --> $DIR/fn-header-semantic-fail.rs:12:44"}, {"sha": "1354abb4f144ba4d2b5e9cebb1d30ebccf0d90aa", "filename": "src/test/ui/resolve/issue-70736-async-fn-no-body-def-collector.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fresolve%2Fissue-70736-async-fn-no-body-def-collector.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fresolve%2Fissue-70736-async-fn-no-body-def-collector.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-70736-async-fn-no-body-def-collector.stderr?ref=5d7937de8cfeba357136bcd8b960f3d3984fe19a", "patch": "@@ -33,7 +33,7 @@ LL |     async fn associated();\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n    = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n-   = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n error[E0706]: functions in traits cannot be declared `async`\n   --> $DIR/issue-70736-async-fn-no-body-def-collector.rs:15:5\n@@ -46,7 +46,7 @@ LL |     async fn associated();\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n    = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n-   = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n error: aborting due to 5 previous errors\n "}, {"sha": "2c1fa7b36b60ea93fab5ea00265bb6d45be9476b", "filename": "src/test/ui/span/drop-location-span-error-rust-2021-incompatible-closure-captures-93117.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fspan%2Fdrop-location-span-error-rust-2021-incompatible-closure-captures-93117.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5d7937de8cfeba357136bcd8b960f3d3984fe19a/src%2Ftest%2Fui%2Fspan%2Fdrop-location-span-error-rust-2021-incompatible-closure-captures-93117.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdrop-location-span-error-rust-2021-incompatible-closure-captures-93117.stderr?ref=5d7937de8cfeba357136bcd8b960f3d3984fe19a", "patch": "@@ -51,7 +51,7 @@ LL | trait C{async fn new(val: T) {}\n    = note: `async` trait functions are not currently supported\n    = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n    = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n-   = help: add `#![feature(return_position_impl_trait_in_trait)]` to the crate attributes to enable\n+   = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n warning: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/drop-location-span-error-rust-2021-incompatible-closure-captures-93117.rs:6:57"}]}