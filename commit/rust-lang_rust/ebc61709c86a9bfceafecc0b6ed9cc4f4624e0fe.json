{"sha": "ebc61709c86a9bfceafecc0b6ed9cc4f4624e0fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViYzYxNzA5Yzg2YTliZmNlYWZlY2MwYjZlZDljYzRmNDYyNGUwZmU=", "commit": {"author": {"name": "IceSentry", "email": "c.giguere42@gmail.com", "date": "2020-04-09T16:26:49Z"}, "committer": {"name": "IceSentry", "email": "c.giguere42@gmail.com", "date": "2020-04-09T16:26:49Z"}, "message": "use .expr() to remove ref", "tree": {"sha": "4999b97b6b293ad47d6439ad0dde43ef89ad4606", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4999b97b6b293ad47d6439ad0dde43ef89ad4606"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebc61709c86a9bfceafecc0b6ed9cc4f4624e0fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebc61709c86a9bfceafecc0b6ed9cc4f4624e0fe", "html_url": "https://github.com/rust-lang/rust/commit/ebc61709c86a9bfceafecc0b6ed9cc4f4624e0fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebc61709c86a9bfceafecc0b6ed9cc4f4624e0fe/comments", "author": {"login": "IceSentry", "id": 8348954, "node_id": "MDQ6VXNlcjgzNDg5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8348954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IceSentry", "html_url": "https://github.com/IceSentry", "followers_url": "https://api.github.com/users/IceSentry/followers", "following_url": "https://api.github.com/users/IceSentry/following{/other_user}", "gists_url": "https://api.github.com/users/IceSentry/gists{/gist_id}", "starred_url": "https://api.github.com/users/IceSentry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IceSentry/subscriptions", "organizations_url": "https://api.github.com/users/IceSentry/orgs", "repos_url": "https://api.github.com/users/IceSentry/repos", "events_url": "https://api.github.com/users/IceSentry/events{/privacy}", "received_events_url": "https://api.github.com/users/IceSentry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "IceSentry", "id": 8348954, "node_id": "MDQ6VXNlcjgzNDg5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8348954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IceSentry", "html_url": "https://github.com/IceSentry", "followers_url": "https://api.github.com/users/IceSentry/followers", "following_url": "https://api.github.com/users/IceSentry/following{/other_user}", "gists_url": "https://api.github.com/users/IceSentry/gists{/gist_id}", "starred_url": "https://api.github.com/users/IceSentry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IceSentry/subscriptions", "organizations_url": "https://api.github.com/users/IceSentry/orgs", "repos_url": "https://api.github.com/users/IceSentry/repos", "events_url": "https://api.github.com/users/IceSentry/events{/privacy}", "received_events_url": "https://api.github.com/users/IceSentry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae416f3c6e90a8d2b2f9d1713d2db4ddce12df65", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae416f3c6e90a8d2b2f9d1713d2db4ddce12df65", "html_url": "https://github.com/rust-lang/rust/commit/ae416f3c6e90a8d2b2f9d1713d2db4ddce12df65"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "da9f55a6965f8201e3990941d82537c82bde6025", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ebc61709c86a9bfceafecc0b6ed9cc4f4624e0fe/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebc61709c86a9bfceafecc0b6ed9cc4f4624e0fe/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=ebc61709c86a9bfceafecc0b6ed9cc4f4624e0fe", "patch": "@@ -254,14 +254,19 @@ fn should_show_param_hint(\n }\n \n fn is_argument_similar_to_param(argument: &ast::Expr, param_name: &str) -> bool {\n-    let argument_string = if let ast::Expr::RefExpr(ref_expr) = argument {\n-        ref_expr.syntax().last_token().expect(\"RefExpr should have a last_token\").to_string()\n-    } else {\n-        argument.syntax().to_string()\n-    };\n+    let argument_string = remove_ref(argument.clone()).syntax().to_string();\n     argument_string.starts_with(&param_name) || argument_string.ends_with(&param_name)\n }\n \n+fn remove_ref(expr: ast::Expr) -> ast::Expr {\n+    if let ast::Expr::RefExpr(ref_expr) = &expr {\n+        if let Some(inner) = ref_expr.expr() {\n+            return inner;\n+        }\n+    }\n+    expr\n+}\n+\n fn is_obvious_param(param_name: &str) -> bool {\n     let is_obvious_param_name = match param_name {\n         \"predicate\" | \"value\" | \"pat\" | \"rhs\" | \"other\" => true,"}]}