{"sha": "64406c5996a0775493c8a2acd457e612bd84cde6", "node_id": "C_kwDOAAsO6NoAKDY0NDA2YzU5OTZhMDc3NTQ5M2M4YTJhY2Q0NTdlNjEyYmQ4NGNkZTY", "commit": {"author": {"name": "Tomoaki Kawada", "email": "kawada@kmckk.co.jp", "date": "2022-02-10T04:10:25Z"}, "committer": {"name": "Tomoaki Kawada", "email": "kawada@kmckk.co.jp", "date": "2022-02-10T04:33:35Z"}, "message": "kmc-solid: Use the filesystem thread-safety wrapper\n\nNeither the SOLID filesystem API nor built-in filesystems guarantee\nthread safety by default. Although this may suffice in general embedded-\nsystem use cases, and in fact the API can be used from multiple threads\nwithout any problems in many cases, this has been a source of\nunsoundness in `std::sys::solid::fs`.\n\nThis commit updates the `std` code to leverage the filesystem thread-\nsafety wrapper to enforce thread safety. This is done by prefixing all\npaths passed to the filesystem API with `\\TS`. (Note that relative paths\naren't supported in this platform.)", "tree": {"sha": "2c8e1a1d96f1e8596ecf858bf8ff998736a01bce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c8e1a1d96f1e8596ecf858bf8ff998736a01bce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64406c5996a0775493c8a2acd457e612bd84cde6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64406c5996a0775493c8a2acd457e612bd84cde6", "html_url": "https://github.com/rust-lang/rust/commit/64406c5996a0775493c8a2acd457e612bd84cde6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64406c5996a0775493c8a2acd457e612bd84cde6/comments", "author": {"login": "kawadakk", "id": 81723441, "node_id": "MDQ6VXNlcjgxNzIzNDQx", "avatar_url": "https://avatars.githubusercontent.com/u/81723441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kawadakk", "html_url": "https://github.com/kawadakk", "followers_url": "https://api.github.com/users/kawadakk/followers", "following_url": "https://api.github.com/users/kawadakk/following{/other_user}", "gists_url": "https://api.github.com/users/kawadakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kawadakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kawadakk/subscriptions", "organizations_url": "https://api.github.com/users/kawadakk/orgs", "repos_url": "https://api.github.com/users/kawadakk/repos", "events_url": "https://api.github.com/users/kawadakk/events{/privacy}", "received_events_url": "https://api.github.com/users/kawadakk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kawadakk", "id": 81723441, "node_id": "MDQ6VXNlcjgxNzIzNDQx", "avatar_url": "https://avatars.githubusercontent.com/u/81723441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kawadakk", "html_url": "https://github.com/kawadakk", "followers_url": "https://api.github.com/users/kawadakk/followers", "following_url": "https://api.github.com/users/kawadakk/following{/other_user}", "gists_url": "https://api.github.com/users/kawadakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kawadakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kawadakk/subscriptions", "organizations_url": "https://api.github.com/users/kawadakk/orgs", "repos_url": "https://api.github.com/users/kawadakk/repos", "events_url": "https://api.github.com/users/kawadakk/events{/privacy}", "received_events_url": "https://api.github.com/users/kawadakk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a5a961be97f405e751dd2cf966e1cdb80a612c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a5a961be97f405e751dd2cf966e1cdb80a612c2", "html_url": "https://github.com/rust-lang/rust/commit/9a5a961be97f405e751dd2cf966e1cdb80a612c2"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "a2cbee4dcf07b7ad8d665fb31417479c8c77e952", "filename": "library/std/src/sys/solid/fs.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/64406c5996a0775493c8a2acd457e612bd84cde6/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64406c5996a0775493c8a2acd457e612bd84cde6/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Ffs.rs?ref=64406c5996a0775493c8a2acd457e612bd84cde6", "patch": "@@ -289,7 +289,26 @@ impl OpenOptions {\n }\n \n fn cstr(path: &Path) -> io::Result<CString> {\n-    Ok(CString::new(path.as_os_str().as_bytes())?)\n+    let path = path.as_os_str().as_bytes();\n+\n+    if !path.starts_with(br\"\\\") {\n+        // Relative paths aren't supported\n+        return Err(crate::io::const_io_error!(\n+            crate::io::ErrorKind::Unsupported,\n+            \"relative path is not supported on this platform\",\n+        ));\n+    }\n+\n+    // Apply the thread-safety wrapper\n+    const SAFE_PREFIX: &[u8] = br\"\\TS\";\n+    let wrapped_path = [SAFE_PREFIX, &path, &[0]].concat();\n+\n+    CString::from_vec_with_nul(wrapped_path).map_err(|_| {\n+        crate::io::const_io_error!(\n+            io::ErrorKind::InvalidInput,\n+            \"path provided contains a nul byte\",\n+        )\n+    })\n }\n \n impl File {"}]}