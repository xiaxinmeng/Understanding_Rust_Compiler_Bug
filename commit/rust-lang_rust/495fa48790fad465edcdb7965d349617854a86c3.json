{"sha": "495fa48790fad465edcdb7965d349617854a86c3", "node_id": "C_kwDOAAsO6NoAKDQ5NWZhNDg3OTBmYWQ0NjVlZGNkYjc5NjVkMzQ5NjE3ODU0YTg2YzM", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-08-20T22:16:51Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-09-04T13:27:35Z"}, "message": "use `pointer::add` in memchr impl", "tree": {"sha": "71865b561fbd62a8dca73722bc7ebacd2b5737ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71865b561fbd62a8dca73722bc7ebacd2b5737ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/495fa48790fad465edcdb7965d349617854a86c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/495fa48790fad465edcdb7965d349617854a86c3", "html_url": "https://github.com/rust-lang/rust/commit/495fa48790fad465edcdb7965d349617854a86c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/495fa48790fad465edcdb7965d349617854a86c3/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2cdbf89637cd38fa5f1badbbc26b049a14345dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2cdbf89637cd38fa5f1badbbc26b049a14345dd", "html_url": "https://github.com/rust-lang/rust/commit/a2cdbf89637cd38fa5f1badbbc26b049a14345dd"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d8a4fd6c1ce0269f23039de37f677c8cede85808", "filename": "library/core/src/slice/memchr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/495fa48790fad465edcdb7965d349617854a86c3/library%2Fcore%2Fsrc%2Fslice%2Fmemchr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/495fa48790fad465edcdb7965d349617854a86c3/library%2Fcore%2Fsrc%2Fslice%2Fmemchr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmemchr.rs?ref=495fa48790fad465edcdb7965d349617854a86c3", "patch": "@@ -124,8 +124,8 @@ pub fn memrchr(x: u8, text: &[u8]) -> Option<usize> {\n         // SAFETY: offset starts at len - suffix.len(), as long as it is greater than\n         // min_aligned_offset (prefix.len()) the remaining distance is at least 2 * chunk_bytes.\n         unsafe {\n-            let u = *(ptr.offset(offset as isize - 2 * chunk_bytes as isize) as *const Chunk);\n-            let v = *(ptr.offset(offset as isize - chunk_bytes as isize) as *const Chunk);\n+            let u = *(ptr.add(offset - 2 * chunk_bytes) as *const Chunk);\n+            let v = *(ptr.add(offset - chunk_bytes) as *const Chunk);\n \n             // Break if there is a matching byte.\n             let zu = contains_zero_byte(u ^ repeated_x);"}]}