{"sha": "e68cd089358b04e50d8a4e740d6f471a72ff3049", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2OGNkMDg5MzU4YjA0ZTUwZDhhNGU3NDBkNmY0NzFhNzJmZjMwNDk=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas@schievink.net", "date": "2015-10-08T14:13:10Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas@schievink.net", "date": "2015-10-08T14:13:10Z"}, "message": "Fix typos in config descriptions", "tree": {"sha": "7f1b12f7278b8a72d725744c6685f1ed2a4f724f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f1b12f7278b8a72d725744c6685f1ed2a4f724f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e68cd089358b04e50d8a4e740d6f471a72ff3049", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e68cd089358b04e50d8a4e740d6f471a72ff3049", "html_url": "https://github.com/rust-lang/rust/commit/e68cd089358b04e50d8a4e740d6f471a72ff3049", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e68cd089358b04e50d8a4e740d6f471a72ff3049/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8880c0e5d3963c2ec75e22e70421d7185e746c7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8880c0e5d3963c2ec75e22e70421d7185e746c7c", "html_url": "https://github.com/rust-lang/rust/commit/8880c0e5d3963c2ec75e22e70421d7185e746c7c"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "6a7e686dc11ad65bf635241f04492efaae01ba05", "filename": "src/config.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e68cd089358b04e50d8a4e740d6f471a72ff3049/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e68cd089358b04e50d8a4e740d6f471a72ff3049/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=e68cd089358b04e50d8a4e740d6f471a72ff3049", "patch": "@@ -261,14 +261,14 @@ create_config! {\n     ideal_width: usize, 80, \"Ideal width of each line\";\n     tab_spaces: usize, 4, \"Number of spaces per tab\";\n     fn_call_width: usize, 60,\n-        \"Maximum width of the args of a function call before faling back to vertical formatting\";\n+        \"Maximum width of the args of a function call before falling back to vertical formatting\";\n     struct_lit_width: usize, 16,\n-        \"Maximum width in the body of a struct lit before faling back to vertical formatting\";\n+        \"Maximum width in the body of a struct lit before falling back to vertical formatting\";\n     newline_style: NewlineStyle, NewlineStyle::Unix, \"Unix or Windows line endings\";\n     fn_brace_style: BraceStyle, BraceStyle::SameLineWhere, \"Brace style for functions\";\n     fn_return_indent: ReturnIndent, ReturnIndent::WithArgs,\n         \"Location of return type in function declaration\";\n-    fn_args_paren_newline: bool, true, \"If function argument parenthases goes on a newline\";\n+    fn_args_paren_newline: bool, true, \"If function argument parenthesis goes on a newline\";\n     fn_args_density: Density, Density::Tall, \"Argument density in functions\";\n     fn_args_layout: StructLitStyle, StructLitStyle::Visual, \"Layout of function arguments\";\n     fn_arg_indent: BlockIndentStyle, BlockIndentStyle::Visual, \"Indent on function arguments\";\n@@ -287,12 +287,12 @@ create_config! {\n         \"If there is a trailing comma on literal structs\";\n     struct_lit_style: StructLitStyle, StructLitStyle::Block, \"Style of struct definition\";\n     struct_lit_multiline_style: MultilineStyle, MultilineStyle::PreferSingle,\n-        \"Multilline style on literal structs\";\n+        \"Multiline style on literal structs\";\n     enum_trailing_comma: bool, true, \"Put a trailing comma on enum declarations\";\n     report_todo: ReportTactic, ReportTactic::Always,\n-        \"Report all occurences of TODO in source file comments\";\n+        \"Report all occurrences of TODO in source file comments\";\n     report_fixme: ReportTactic, ReportTactic::Never,\n-        \"Report all occurences of FIXME in source file comments\";\n+        \"Report all occurrences of FIXME in source file comments\";\n     // Alphabetically, case sensitive.\n     reorder_imports: bool, false, \"Reorder import statements alphabetically\";\n     single_line_if_else: bool, false, \"Put else on same line as closing brace for if statements\";"}]}