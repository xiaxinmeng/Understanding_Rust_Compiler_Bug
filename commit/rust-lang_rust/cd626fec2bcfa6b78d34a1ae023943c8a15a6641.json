{"sha": "cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "node_id": "C_kwDOAAsO6NoAKGNkNjI2ZmVjMmJjZmE2Yjc4ZDM0YTFhZTAyMzk0M2M4YTE1YTY2NDE", "commit": {"author": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2021-12-06T22:09:24Z"}, "committer": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2022-01-09T21:22:50Z"}, "message": "Stabilize -Z print-link-args as --print link-args\n\nWe have stable options for adding linker arguments; we should have a\nstable option to help debug linker arguments.", "tree": {"sha": "c7067f69adca54d329ae71926a9f3f7b4354eb8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7067f69adca54d329ae71926a9f3f7b4354eb8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "html_url": "https://github.com/rust-lang/rust/commit/cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/comments", "author": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c", "html_url": "https://github.com/rust-lang/rust/commit/0fb1c371d4a14f9ce7a721d8aea683a6e6774f6c"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "5397547670931021702c9aa4e164a197b53ec0fe", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "patch": "@@ -722,7 +722,7 @@ fn link_natively<'a, B: ArchiveBuilder<'a>>(\n         cmd.env_remove(k);\n     }\n \n-    if sess.opts.debugging_opts.print_link_args {\n+    if sess.opts.prints.contains(&PrintRequest::LinkArgs) {\n         println!(\"{:?}\", &cmd);\n     }\n "}, {"sha": "19f4c22d4bba3f47f01054835dd52eb3f4c95cab", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "patch": "@@ -652,9 +652,9 @@ impl RustcDefaultCalls {\n         temps_dir: &Option<PathBuf>,\n     ) -> Compilation {\n         use rustc_session::config::PrintRequest::*;\n-        // PrintRequest::NativeStaticLibs is special - printed during linking\n+        // NativeStaticLibs and LinkArgs are special - printed during linking\n         // (empty iterator returns true)\n-        if sess.opts.prints.iter().all(|&p| p == PrintRequest::NativeStaticLibs) {\n+        if sess.opts.prints.iter().all(|&p| p == NativeStaticLibs || p == LinkArgs) {\n             return Compilation::Continue;\n         }\n \n@@ -745,7 +745,8 @@ impl RustcDefaultCalls {\n                     codegen_backend.print(*req, sess);\n                 }\n                 // Any output here interferes with Cargo's parsing of other printed output\n-                PrintRequest::NativeStaticLibs => {}\n+                NativeStaticLibs => {}\n+                LinkArgs => {}\n             }\n         }\n         Compilation::Stop"}, {"sha": "760187f04151caca92597e2462fc090e80b375b3", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "patch": "@@ -675,7 +675,6 @@ fn test_debugging_options_tracking_hash() {\n     // `pre_link_arg` is omitted because it just forwards to `pre_link_args`.\n     untracked!(pre_link_args, vec![String::from(\"abc\"), String::from(\"def\")]);\n     untracked!(profile_closures, true);\n-    untracked!(print_link_args, true);\n     untracked!(print_llvm_passes, true);\n     untracked!(print_mono_items, Some(String::from(\"abc\")));\n     untracked!(print_type_sizes, true);"}, {"sha": "ec32201c263170578976973e6c6e23947b9978b5", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "patch": "@@ -534,6 +534,7 @@ pub enum PrintRequest {\n     TargetSpec,\n     NativeStaticLibs,\n     StackProtectorStrategies,\n+    LinkArgs,\n }\n \n #[derive(Copy, Clone)]\n@@ -1115,7 +1116,8 @@ pub fn rustc_short_optgroups() -> Vec<RustcOptGroup> {\n             \"Compiler information to print on stdout\",\n             \"[crate-name|file-names|sysroot|target-libdir|cfg|target-list|\\\n              target-cpus|target-features|relocation-models|code-models|\\\n-             tls-models|target-spec-json|native-static-libs|stack-protector-strategies]\",\n+             tls-models|target-spec-json|native-static-libs|stack-protector-strategies\\\n+             link-args]\",\n         ),\n         opt::flagmulti_s(\"g\", \"\", \"Equivalent to -C debuginfo=2\"),\n         opt::flagmulti_s(\"O\", \"\", \"Equivalent to -C opt-level=2\"),\n@@ -1547,6 +1549,7 @@ fn collect_print_requests(\n                 );\n             }\n         }\n+        \"link-args\" => PrintRequest::LinkArgs,\n         req => early_error(error_format, &format!(\"unknown print request `{}`\", req)),\n     }));\n "}, {"sha": "7114b11703140b2f3fc2c002490a5cc3d99a86e2", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "patch": "@@ -1294,8 +1294,6 @@ options! {\n         See #77382 and #74551.\"),\n     print_fuel: Option<String> = (None, parse_opt_string, [TRACKED],\n         \"make rustc print the total optimization fuel used by a crate\"),\n-    print_link_args: bool = (false, parse_bool, [UNTRACKED],\n-        \"print the arguments passed to the linker (default: no)\"),\n     print_llvm_passes: bool = (false, parse_bool, [UNTRACKED],\n         \"print the LLVM optimization passes being run (default: no)\"),\n     print_mono_items: Option<String> = (None, parse_opt_string, [UNTRACKED],"}, {"sha": "f1410b69b3fceafe49a87bbab3a602b00610c3f0", "filename": "src/test/run-make-fulldeps/codegen-options-parsing/Makefile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/src%2Ftest%2Frun-make-fulldeps%2Fcodegen-options-parsing%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/src%2Ftest%2Frun-make-fulldeps%2Fcodegen-options-parsing%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcodegen-options-parsing%2FMakefile?ref=cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "patch": "@@ -24,8 +24,8 @@ all:\n \t$(RUSTC) -C lto dummy.rs\n \n \t# Should not link dead code...\n-\t$(RUSTC) -Z print-link-args dummy.rs 2>&1 | \\\n+\t$(RUSTC) --print link-args dummy.rs 2>&1 | \\\n \t\t$(CGREP) -e '--gc-sections|-z[^ ]* [^ ]*<ignore>|-dead_strip|/OPT:REF'\n \t# ... unless you specifically ask to keep it\n-\t$(RUSTC) -Z print-link-args -C link-dead-code dummy.rs 2>&1 | \\\n+\t$(RUSTC) --print link-args -C link-dead-code dummy.rs 2>&1 | \\\n \t\t$(CGREP) -ve '--gc-sections|-z[^ ]* [^ ]*<ignore>|-dead_strip|/OPT:REF'"}, {"sha": "0a50859cdaa4dd670423cb6cefcec9e546e38843", "filename": "src/test/run-make-fulldeps/interdependent-c-libraries/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/src%2Ftest%2Frun-make-fulldeps%2Finterdependent-c-libraries%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/src%2Ftest%2Frun-make-fulldeps%2Finterdependent-c-libraries%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Finterdependent-c-libraries%2FMakefile?ref=cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "patch": "@@ -11,4 +11,4 @@\n all: $(call NATIVE_STATICLIB,foo) $(call NATIVE_STATICLIB,bar)\n \t$(RUSTC) foo.rs\n \t$(RUSTC) bar.rs\n-\t$(RUSTC) main.rs -Z print-link-args\n+\t$(RUSTC) main.rs --print link-args"}, {"sha": "0360ede762551a673873abba499d6293992e2df0", "filename": "src/test/run-make-fulldeps/link-arg/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/src%2Ftest%2Frun-make-fulldeps%2Flink-arg%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/src%2Ftest%2Frun-make-fulldeps%2Flink-arg%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Flink-arg%2FMakefile?ref=cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "patch": "@@ -1,5 +1,5 @@\n -include ../tools.mk\n-RUSTC_FLAGS = -C link-arg=\"-lfoo\" -C link-arg=\"-lbar\" -Z print-link-args\n+RUSTC_FLAGS = -C link-arg=\"-lfoo\" -C link-arg=\"-lbar\" --print link-args\n \n all:\n \t$(RUSTC) $(RUSTC_FLAGS) empty.rs | $(CGREP) lfoo lbar"}, {"sha": "3ffbba9444bc2ea338d31e8e31c184c99f7980d2", "filename": "src/test/run-make-fulldeps/metadata-flag-frobs-symbols/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/src%2Ftest%2Frun-make-fulldeps%2Fmetadata-flag-frobs-symbols%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/src%2Ftest%2Frun-make-fulldeps%2Fmetadata-flag-frobs-symbols%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fmetadata-flag-frobs-symbols%2FMakefile?ref=cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "patch": "@@ -6,5 +6,5 @@ all:\n \t$(RUSTC) bar.rs \\\n \t\t--extern foo1=$(TMPDIR)/libfoo-a.rlib \\\n \t\t--extern foo2=$(TMPDIR)/libfoo-b.rlib \\\n-\t\t-Z print-link-args\n+\t\t--print link-args\n \t$(call RUN,bar)"}, {"sha": "2e41be39d5d00851348915f5ebfa2e2a200f5ed3", "filename": "src/test/run-make-fulldeps/no-builtins-lto/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/src%2Ftest%2Frun-make-fulldeps%2Fno-builtins-lto%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/src%2Ftest%2Frun-make-fulldeps%2Fno-builtins-lto%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fno-builtins-lto%2FMakefile?ref=cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "patch": "@@ -6,4 +6,4 @@ all:\n \t# Build an executable that depends on that crate using LTO. The no_builtins crate doesn't\n \t# participate in LTO, so its rlib must be explicitly linked into the final binary. Verify this by\n \t# grepping the linker arguments.\n-\t$(RUSTC) main.rs -C lto -Z print-link-args | $(CGREP) 'libno_builtins.rlib'\n+\t$(RUSTC) main.rs -C lto --print link-args | $(CGREP) 'libno_builtins.rlib'"}, {"sha": "e09841fb42e1876ae337328568d6994a20ac0e33", "filename": "src/test/run-make-fulldeps/redundant-libs/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/src%2Ftest%2Frun-make-fulldeps%2Fredundant-libs%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/src%2Ftest%2Frun-make-fulldeps%2Fredundant-libs%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fredundant-libs%2FMakefile?ref=cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "patch": "@@ -16,7 +16,7 @@ RUSTC_FLAGS = \\\n     -l foo \\\n     -l static=baz \\\n     -l foo \\\n-    -Z print-link-args\n+    --print link-args\n \n all: $(call DYLIB,foo) $(call STATICLIB,bar) $(call STATICLIB,baz)\n \t$(RUSTC) $(RUSTC_FLAGS) main.rs"}, {"sha": "8f78c401a11415fe9b4665d9117187b77734adb3", "filename": "src/test/run-make-fulldeps/static-nobundle/Makefile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/cd626fec2bcfa6b78d34a1ae023943c8a15a6641/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2FMakefile?ref=cd626fec2bcfa6b78d34a1ae023943c8a15a6641", "patch": "@@ -13,9 +13,9 @@ all: $(call NATIVE_STATICLIB,aaa)\n \tnm $(TMPDIR)/libbbb.rlib | $(CGREP) -e \"U _*native_func\"\n \n \t# Check that aaa gets linked (either as `-l aaa` or `aaa.lib`) when building ccc.\n-\t$(RUSTC) ccc.rs -C prefer-dynamic --crate-type=dylib -Z print-link-args | $(CGREP) -e '-l[\" ]*aaa|aaa\\.lib'\n+\t$(RUSTC) ccc.rs -C prefer-dynamic --crate-type=dylib --print link-args | $(CGREP) -e '-l[\" ]*aaa|aaa\\.lib'\n \n \t# Check that aaa does NOT get linked when building ddd.\n-\t$(RUSTC) ddd.rs -Z print-link-args | $(CGREP) -ve '-l[\" ]*aaa|aaa\\.lib'\n+\t$(RUSTC) ddd.rs --print link-args | $(CGREP) -ve '-l[\" ]*aaa|aaa\\.lib'\n \n \t$(call RUN,ddd)"}]}