{"sha": "399732bf797000b46bbe3e01f52ae3f64255d217", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5OTczMmJmNzk3MDAwYjQ2YmJlM2UwMWY1MmFlM2Y2NDI1NWQyMTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-25T10:16:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-25T10:16:23Z"}, "message": "Auto merge of #6103 - FrancisMurillo:mut_mutex_lock, r=flip1995\n\nAdd lint for `&mut Mutex::lock`\n\nFixes #1765\n\nchangelog: Add lint [`mut_mutex_lock`] for `&mut Mutex::lock` and suggests using `&mut Mutex::get_mut` instead.", "tree": {"sha": "8899e0c735df73efafef548953ddc4131039536a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8899e0c735df73efafef548953ddc4131039536a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/399732bf797000b46bbe3e01f52ae3f64255d217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/399732bf797000b46bbe3e01f52ae3f64255d217", "html_url": "https://github.com/rust-lang/rust/commit/399732bf797000b46bbe3e01f52ae3f64255d217", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/399732bf797000b46bbe3e01f52ae3f64255d217/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd62c180fef3279925934a317cd4dd3ccecff8dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd62c180fef3279925934a317cd4dd3ccecff8dc", "html_url": "https://github.com/rust-lang/rust/commit/fd62c180fef3279925934a317cd4dd3ccecff8dc"}, {"sha": "e7e03b791217645d48e407b28ed023723cedb24c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7e03b791217645d48e407b28ed023723cedb24c", "html_url": "https://github.com/rust-lang/rust/commit/e7e03b791217645d48e407b28ed023723cedb24c"}], "stats": {"total": 133, "additions": 133, "deletions": 0}, "files": [{"sha": "ebfb4c0acb5dee22757c30e7f604f348dd6946c2", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/399732bf797000b46bbe3e01f52ae3f64255d217/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/399732bf797000b46bbe3e01f52ae3f64255d217/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=399732bf797000b46bbe3e01f52ae3f64255d217", "patch": "@@ -1843,6 +1843,7 @@ Released 2018-09-13\n [`must_use_unit`]: https://rust-lang.github.io/rust-clippy/master/index.html#must_use_unit\n [`mut_from_ref`]: https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n [`mut_mut`]: https://rust-lang.github.io/rust-clippy/master/index.html#mut_mut\n+[`mut_mutex_lock`]: https://rust-lang.github.io/rust-clippy/master/index.html#mut_mutex_lock\n [`mut_range_bound`]: https://rust-lang.github.io/rust-clippy/master/index.html#mut_range_bound\n [`mutable_key_type`]: https://rust-lang.github.io/rust-clippy/master/index.html#mutable_key_type\n [`mutex_atomic`]: https://rust-lang.github.io/rust-clippy/master/index.html#mutex_atomic"}, {"sha": "ed9f32aee00af986a9f2d5540e893b4c0a38fcbc", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/399732bf797000b46bbe3e01f52ae3f64255d217/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/399732bf797000b46bbe3e01f52ae3f64255d217/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=399732bf797000b46bbe3e01f52ae3f64255d217", "patch": "@@ -255,6 +255,7 @@ mod modulo_arithmetic;\n mod multiple_crate_versions;\n mod mut_key;\n mod mut_mut;\n+mod mut_mutex_lock;\n mod mut_reference;\n mod mutable_debug_assertion;\n mod mutex_atomic;\n@@ -746,6 +747,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &multiple_crate_versions::MULTIPLE_CRATE_VERSIONS,\n         &mut_key::MUTABLE_KEY_TYPE,\n         &mut_mut::MUT_MUT,\n+        &mut_mutex_lock::MUT_MUTEX_LOCK,\n         &mut_reference::UNNECESSARY_MUT_PASSED,\n         &mutable_debug_assertion::DEBUG_ASSERT_WITH_MUT_CALL,\n         &mutex_atomic::MUTEX_ATOMIC,\n@@ -1115,6 +1117,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| box future_not_send::FutureNotSend);\n     store.register_late_pass(|| box utils::internal_lints::CollapsibleCalls);\n     store.register_late_pass(|| box if_let_mutex::IfLetMutex);\n+    store.register_late_pass(|| box mut_mutex_lock::MutMutexLock);\n     store.register_late_pass(|| box match_on_vec_items::MatchOnVecItems);\n     store.register_early_pass(|| box manual_non_exhaustive::ManualNonExhaustive);\n     store.register_late_pass(|| box manual_async_fn::ManualAsyncFn);\n@@ -1451,6 +1454,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&misc_early::UNNEEDED_WILDCARD_PATTERN),\n         LintId::of(&misc_early::ZERO_PREFIXED_LITERAL),\n         LintId::of(&mut_key::MUTABLE_KEY_TYPE),\n+        LintId::of(&mut_mutex_lock::MUT_MUTEX_LOCK),\n         LintId::of(&mut_reference::UNNECESSARY_MUT_PASSED),\n         LintId::of(&mutex_atomic::MUTEX_ATOMIC),\n         LintId::of(&needless_arbitrary_self_type::NEEDLESS_ARBITRARY_SELF_TYPE),\n@@ -1623,6 +1627,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&misc_early::DUPLICATE_UNDERSCORE_ARGUMENT),\n         LintId::of(&misc_early::MIXED_CASE_HEX_LITERALS),\n         LintId::of(&misc_early::REDUNDANT_PATTERN),\n+        LintId::of(&mut_mutex_lock::MUT_MUTEX_LOCK),\n         LintId::of(&mut_reference::UNNECESSARY_MUT_PASSED),\n         LintId::of(&neg_multiply::NEG_MULTIPLY),\n         LintId::of(&new_without_default::NEW_WITHOUT_DEFAULT),"}, {"sha": "df1cecb328cb151698aff17b375176e714e3619c", "filename": "clippy_lints/src/mut_mutex_lock.rs", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/399732bf797000b46bbe3e01f52ae3f64255d217/clippy_lints%2Fsrc%2Fmut_mutex_lock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/399732bf797000b46bbe3e01f52ae3f64255d217/clippy_lints%2Fsrc%2Fmut_mutex_lock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_mutex_lock.rs?ref=399732bf797000b46bbe3e01f52ae3f64255d217", "patch": "@@ -0,0 +1,68 @@\n+use crate::utils::{is_type_diagnostic_item, span_lint_and_sugg};\n+use if_chain::if_chain;\n+use rustc_errors::Applicability;\n+use rustc_hir::{Expr, ExprKind, Mutability};\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+    /// **What it does:** Checks for `&mut Mutex::lock` calls\n+    ///\n+    /// **Why is this bad?** `Mutex::lock` is less efficient than\n+    /// calling `Mutex::get_mut`. In addition you also have a statically\n+    /// guarantee that the mutex isn't locked, instead of just a runtime\n+    /// guarantee.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust\n+    /// use std::sync::{Arc, Mutex};\n+    ///\n+    /// let mut value_rc = Arc::new(Mutex::new(42_u8));\n+    /// let value_mutex = Arc::get_mut(&mut value_rc).unwrap();\n+    ///\n+    /// let mut value = value_mutex.lock().unwrap();\n+    /// *value += 1;\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// use std::sync::{Arc, Mutex};\n+    ///\n+    /// let mut value_rc = Arc::new(Mutex::new(42_u8));\n+    /// let value_mutex = Arc::get_mut(&mut value_rc).unwrap();\n+    ///\n+    /// let value = value_mutex.get_mut().unwrap();\n+    /// *value += 1;\n+    /// ```\n+    pub MUT_MUTEX_LOCK,\n+    style,\n+    \"`&mut Mutex::lock` does unnecessary locking\"\n+}\n+\n+declare_lint_pass!(MutMutexLock => [MUT_MUTEX_LOCK]);\n+\n+impl<'tcx> LateLintPass<'tcx> for MutMutexLock {\n+    fn check_expr(&mut self, cx: &LateContext<'tcx>, ex: &'tcx Expr<'tcx>) {\n+        if_chain! {\n+            if let ExprKind::MethodCall(path, method_span, args, _) = &ex.kind;\n+            if path.ident.name == sym!(lock);\n+            let ty = cx.typeck_results().expr_ty(&args[0]);\n+            if let ty::Ref(_, inner_ty, Mutability::Mut) = ty.kind();\n+            if is_type_diagnostic_item(cx, inner_ty, sym!(mutex_type));\n+            then {\n+                span_lint_and_sugg(\n+                    cx,\n+                    MUT_MUTEX_LOCK,\n+                    *method_span,\n+                    \"calling `&mut Mutex::lock` unnecessarily locks an exclusive (mutable) reference\",\n+                    \"change this to\",\n+                    \"get_mut\".to_owned(),\n+                    Applicability::MaybeIncorrect,\n+                );\n+            }\n+        }\n+    }\n+}"}, {"sha": "ff4a6d43f2539a488bfc18e9cb5c6ca28a49ec80", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/399732bf797000b46bbe3e01f52ae3f64255d217/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/399732bf797000b46bbe3e01f52ae3f64255d217/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=399732bf797000b46bbe3e01f52ae3f64255d217", "patch": "@@ -1502,6 +1502,13 @@ vec![\n         deprecation: None,\n         module: \"mut_mut\",\n     },\n+    Lint {\n+        name: \"mut_mutex_lock\",\n+        group: \"style\",\n+        desc: \"`&mut Mutex::lock` does unnecessary locking\",\n+        deprecation: None,\n+        module: \"mut_mutex_lock\",\n+    },\n     Lint {\n         name: \"mut_range_bound\",\n         group: \"complexity\","}, {"sha": "36bc52e3374e1a9747ddfdcad7da7306963bb092", "filename": "tests/ui/mut_mutex_lock.fixed", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/399732bf797000b46bbe3e01f52ae3f64255d217/tests%2Fui%2Fmut_mutex_lock.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/399732bf797000b46bbe3e01f52ae3f64255d217/tests%2Fui%2Fmut_mutex_lock.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mutex_lock.fixed?ref=399732bf797000b46bbe3e01f52ae3f64255d217", "patch": "@@ -0,0 +1,21 @@\n+// run-rustfix\n+#![allow(dead_code, unused_mut)]\n+#![warn(clippy::mut_mutex_lock)]\n+\n+use std::sync::{Arc, Mutex};\n+\n+fn mut_mutex_lock() {\n+    let mut value_rc = Arc::new(Mutex::new(42_u8));\n+    let value_mutex = Arc::get_mut(&mut value_rc).unwrap();\n+\n+    let mut value = value_mutex.get_mut().unwrap();\n+    *value += 1;\n+}\n+\n+fn no_owned_mutex_lock() {\n+    let mut value_rc = Arc::new(Mutex::new(42_u8));\n+    let mut value = value_rc.lock().unwrap();\n+    *value += 1;\n+}\n+\n+fn main() {}"}, {"sha": "ea60df5ae1bbc92cda19453e4756aefea50833b3", "filename": "tests/ui/mut_mutex_lock.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/399732bf797000b46bbe3e01f52ae3f64255d217/tests%2Fui%2Fmut_mutex_lock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/399732bf797000b46bbe3e01f52ae3f64255d217/tests%2Fui%2Fmut_mutex_lock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mutex_lock.rs?ref=399732bf797000b46bbe3e01f52ae3f64255d217", "patch": "@@ -0,0 +1,21 @@\n+// run-rustfix\n+#![allow(dead_code, unused_mut)]\n+#![warn(clippy::mut_mutex_lock)]\n+\n+use std::sync::{Arc, Mutex};\n+\n+fn mut_mutex_lock() {\n+    let mut value_rc = Arc::new(Mutex::new(42_u8));\n+    let value_mutex = Arc::get_mut(&mut value_rc).unwrap();\n+\n+    let mut value = value_mutex.lock().unwrap();\n+    *value += 1;\n+}\n+\n+fn no_owned_mutex_lock() {\n+    let mut value_rc = Arc::new(Mutex::new(42_u8));\n+    let mut value = value_rc.lock().unwrap();\n+    *value += 1;\n+}\n+\n+fn main() {}"}, {"sha": "21c1b3486cacf5f2a23a90c16e02e268b8ff0f6b", "filename": "tests/ui/mut_mutex_lock.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/399732bf797000b46bbe3e01f52ae3f64255d217/tests%2Fui%2Fmut_mutex_lock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/399732bf797000b46bbe3e01f52ae3f64255d217/tests%2Fui%2Fmut_mutex_lock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mutex_lock.stderr?ref=399732bf797000b46bbe3e01f52ae3f64255d217", "patch": "@@ -0,0 +1,10 @@\n+error: calling `&mut Mutex::lock` unnecessarily locks an exclusive (mutable) reference\n+  --> $DIR/mut_mutex_lock.rs:11:33\n+   |\n+LL |     let mut value = value_mutex.lock().unwrap();\n+   |                                 ^^^^ help: change this to: `get_mut`\n+   |\n+   = note: `-D clippy::mut-mutex-lock` implied by `-D warnings`\n+\n+error: aborting due to previous error\n+"}]}