{"sha": "ab91d5a5408cdb888b49ed3d893c0e28afef5861", "node_id": "C_kwDOAAsO6NoAKGFiOTFkNWE1NDA4Y2RiODg4YjQ5ZWQzZDg5M2MwZTI4YWZlZjU4NjE", "commit": {"author": {"name": "Sosth\u00e8ne Gu\u00e9don", "email": "sosthene@guedon.gdn", "date": "2022-08-17T16:58:17Z"}, "committer": {"name": "Sosth\u00e8ne Gu\u00e9don", "email": "sosthene@guedon.gdn", "date": "2022-08-17T16:58:17Z"}, "message": "unwrap_used: Fix error message for unwrap_err when expect_used is allowed", "tree": {"sha": "e0efdd5a4c2939ec94c6d0f2010c9b4c9a9b9125", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0efdd5a4c2939ec94c6d0f2010c9b4c9a9b9125"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab91d5a5408cdb888b49ed3d893c0e28afef5861", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab91d5a5408cdb888b49ed3d893c0e28afef5861", "html_url": "https://github.com/rust-lang/rust/commit/ab91d5a5408cdb888b49ed3d893c0e28afef5861", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab91d5a5408cdb888b49ed3d893c0e28afef5861/comments", "author": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1e04352bd220d2b912715aa07e1d04fe97d84f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1e04352bd220d2b912715aa07e1d04fe97d84f2", "html_url": "https://github.com/rust-lang/rust/commit/c1e04352bd220d2b912715aa07e1d04fe97d84f2"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "ee17f2d7889ee9f93b6f619bf0100d982a62ec3e", "filename": "clippy_lints/src/methods/unwrap_used.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab91d5a5408cdb888b49ed3d893c0e28afef5861/clippy_lints%2Fsrc%2Fmethods%2Funwrap_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab91d5a5408cdb888b49ed3d893c0e28afef5861/clippy_lints%2Fsrc%2Fmethods%2Funwrap_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funwrap_used.rs?ref=ab91d5a5408cdb888b49ed3d893c0e28afef5861", "patch": "@@ -25,7 +25,7 @@ pub(super) fn check(\n         None\n     };\n \n-    let method = if is_err { \"unwrap_err\" } else { \"unwrap\" };\n+    let method_suffix = if is_err { \"_err\" } else { \"\" };\n \n     if allow_unwrap_in_tests && is_in_test_function(cx.tcx, expr.hir_id) {\n         return;\n@@ -35,7 +35,7 @@ pub(super) fn check(\n         let help = if is_lint_allowed(cx, EXPECT_USED, expr.hir_id) {\n             format!(\n                 \"if you don't want to handle the `{none_value}` case gracefully, consider \\\n-                using `expect()` to provide a better panic message\"\n+                using `expect{method_suffix}()` to provide a better panic message\"\n             )\n         } else {\n             format!(\"if this value is {none_prefix}`{none_value}`, it will panic\")\n@@ -45,7 +45,7 @@ pub(super) fn check(\n             cx,\n             lint,\n             expr.span,\n-            &format!(\"used `{method}()` on `{kind}` value\"),\n+            &format!(\"used `unwrap{method_suffix}()` on `{kind}` value\"),\n             None,\n             &help,\n         );"}, {"sha": "d742595e14d4c17dfd987a6dbaab4aca98916da5", "filename": "tests/ui/expect.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab91d5a5408cdb888b49ed3d893c0e28afef5861/tests%2Fui%2Fexpect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab91d5a5408cdb888b49ed3d893c0e28afef5861/tests%2Fui%2Fexpect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexpect.rs?ref=ab91d5a5408cdb888b49ed3d893c0e28afef5861", "patch": "@@ -6,8 +6,9 @@ fn expect_option() {\n }\n \n fn expect_result() {\n-    let res: Result<u8, ()> = Ok(0);\n+    let res: Result<u8, u8> = Ok(0);\n     let _ = res.expect(\"\");\n+    let _ = res.expect_err(\"\");\n }\n \n fn main() {"}, {"sha": "904c090464523c17dce9196547b56f306115afdb", "filename": "tests/ui/expect.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ab91d5a5408cdb888b49ed3d893c0e28afef5861/tests%2Fui%2Fexpect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab91d5a5408cdb888b49ed3d893c0e28afef5861/tests%2Fui%2Fexpect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexpect.stderr?ref=ab91d5a5408cdb888b49ed3d893c0e28afef5861", "patch": "@@ -15,5 +15,13 @@ LL |     let _ = res.expect(\"\");\n    |\n    = help: if this value is an `Err`, it will panic\n \n-error: aborting due to 2 previous errors\n+error: used `expect_err()` on `a Result` value\n+  --> $DIR/expect.rs:11:13\n+   |\n+LL |     let _ = res.expect_err(\"\");\n+   |             ^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: if this value is an `Ok`, it will panic\n+\n+error: aborting due to 3 previous errors\n "}, {"sha": "d9fd402e7cfb9d200cc79f794e9b4b41c9c94c82", "filename": "tests/ui/unwrap.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab91d5a5408cdb888b49ed3d893c0e28afef5861/tests%2Fui%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab91d5a5408cdb888b49ed3d893c0e28afef5861/tests%2Fui%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funwrap.rs?ref=ab91d5a5408cdb888b49ed3d893c0e28afef5861", "patch": "@@ -6,8 +6,9 @@ fn unwrap_option() {\n }\n \n fn unwrap_result() {\n-    let res: Result<u8, ()> = Ok(0);\n+    let res: Result<u8, u8> = Ok(0);\n     let _ = res.unwrap();\n+    let _ = res.unwrap_err();\n }\n \n fn main() {"}, {"sha": "78422757819d502d3ba231fdc6b803e2a5407205", "filename": "tests/ui/unwrap.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ab91d5a5408cdb888b49ed3d893c0e28afef5861/tests%2Fui%2Funwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab91d5a5408cdb888b49ed3d893c0e28afef5861/tests%2Fui%2Funwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funwrap.stderr?ref=ab91d5a5408cdb888b49ed3d893c0e28afef5861", "patch": "@@ -15,5 +15,13 @@ LL |     let _ = res.unwrap();\n    |\n    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message\n \n-error: aborting due to 2 previous errors\n+error: used `unwrap_err()` on `a Result` value\n+  --> $DIR/unwrap.rs:11:13\n+   |\n+LL |     let _ = res.unwrap_err();\n+   |             ^^^^^^^^^^^^^^^^\n+   |\n+   = help: if you don't want to handle the `Ok` case gracefully, consider using `expect_err()` to provide a better panic message\n+\n+error: aborting due to 3 previous errors\n "}]}