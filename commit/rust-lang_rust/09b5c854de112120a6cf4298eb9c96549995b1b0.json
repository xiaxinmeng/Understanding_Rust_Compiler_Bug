{"sha": "09b5c854de112120a6cf4298eb9c96549995b1b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5YjVjODU0ZGUxMTIxMjBhNmNmNDI5OGViOWM5NjU0OTk5NWIxYjA=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-11T01:40:57Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-11T02:51:12Z"}, "message": "Remove unnecessary `const_fn` feature gates\n\nThis flag opts out of the min-const-fn checks entirely, which is usually\nnot what we want. The few cases where the flag is still necessary have\nbeen annotated.", "tree": {"sha": "f575eb0a2b96f9da75182df2405b697ce1d073b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f575eb0a2b96f9da75182df2405b697ce1d073b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09b5c854de112120a6cf4298eb9c96549995b1b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09b5c854de112120a6cf4298eb9c96549995b1b0", "html_url": "https://github.com/rust-lang/rust/commit/09b5c854de112120a6cf4298eb9c96549995b1b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09b5c854de112120a6cf4298eb9c96549995b1b0/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f1df30d06072f03407654b1cde11a1a067bdfad", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f1df30d06072f03407654b1cde11a1a067bdfad", "html_url": "https://github.com/rust-lang/rust/commit/8f1df30d06072f03407654b1cde11a1a067bdfad"}], "stats": {"total": 69, "additions": 29, "deletions": 40}, "files": [{"sha": "6c4956663841c21ce1217981d2f75ca3ddae862b", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -70,7 +70,6 @@\n #![feature(bound_cloned)]\n #![feature(cfg_target_has_atomic)]\n #![feature(concat_idents)]\n-#![feature(const_fn)]\n #![feature(const_if_match)]\n #![feature(const_panic)]\n #![feature(const_fn_union)]"}, {"sha": "1b9c7e35f416d17ac94f4fe88da70c8a8934a1bd", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -31,7 +31,6 @@\n #![feature(slice_internals)]\n #![feature(slice_partition_dedup)]\n #![feature(int_error_matching)]\n-#![feature(const_fn)]\n #![feature(array_value_iter)]\n #![feature(iter_partition_in_place)]\n #![feature(iter_is_partitioned)]"}, {"sha": "c51db695a5b1581efd9e7bdd7c81bcffe34edfb6", "filename": "src/libproc_macro/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibproc_macro%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibproc_macro%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Flib.rs?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -21,7 +21,6 @@\n #![feature(nll)]\n #![feature(staged_api)]\n #![feature(allow_internal_unstable)]\n-#![feature(const_fn)]\n #![feature(decl_macro)]\n #![feature(extern_types)]\n #![feature(in_band_lifetimes)]"}, {"sha": "3c0160a04527e1381e31d8195bc695aba7b33ac4", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -31,7 +31,6 @@\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n-#![feature(const_fn)]\n #![feature(const_transmute)]\n #![feature(core_intrinsics)]\n #![feature(drain_filter)]"}, {"sha": "f54fa291bd6e81e7c3620a8f044864ebdf37d345", "filename": "src/librustc_hir/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibrustc_hir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibrustc_hir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Flib.rs?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -3,7 +3,7 @@\n //! [rustc guide]: https://rust-lang.github.io/rustc-guide/hir.html\n \n #![feature(crate_visibility_modifier)]\n-#![feature(const_fn)]\n+#![feature(const_fn)] // For the unsizing cast on `&[]`\n #![feature(in_band_lifetimes)]\n #![feature(specialization)]\n #![recursion_limit = \"256\"]"}, {"sha": "d2565bf9c63d427270bd8b2eb45003b94000c6c5", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -13,7 +13,6 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![feature(box_syntax)]\n #![feature(crate_visibility_modifier)]\n #![feature(core_intrinsics)]\n-#![feature(const_fn)]\n #![feature(decl_macro)]\n #![feature(drain_filter)]\n #![feature(exhaustive_patterns)]"}, {"sha": "1dc7fc5aa3ad1aec7fa4b33d7cbbfdcf225ef5e7", "filename": "src/librustc_span/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibrustc_span%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibrustc_span%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Flib.rs?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -5,7 +5,6 @@\n //! This API is completely unstable and subject to change.\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n-#![feature(const_fn)]\n #![feature(crate_visibility_modifier)]\n #![feature(nll)]\n #![feature(optin_builtin_traits)]"}, {"sha": "22fcbde43663f1558ce02b42115133c662cbf103", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -12,7 +12,6 @@\n #![feature(test)]\n #![feature(ptr_offset_from)]\n #![feature(crate_visibility_modifier)]\n-#![feature(const_fn)]\n #![feature(drain_filter)]\n #![feature(never_type)]\n #![feature(unicode_internals)]"}, {"sha": "d67a7ba3413f52ae9d9ba8fad63a189b000f2417", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -7,7 +7,7 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\", test(attr(deny(warnings))))]\n #![feature(bool_to_option)]\n #![feature(box_syntax)]\n-#![feature(const_fn)]\n+#![feature(const_fn)] // For the `transmute` in `P::new`\n #![feature(const_transmute)]\n #![feature(crate_visibility_modifier)]\n #![feature(label_break_value)]"}, {"sha": "99006a20b1bcba56dfe6275b847724ea47185cc1", "filename": "src/test/ui/consts/const-mut-refs/const_mut_refs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fconst_mut_refs.rs?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -1,7 +1,6 @@\n // run-pass\n \n #![feature(const_mut_refs)]\n-#![feature(const_fn)]\n \n struct Foo {\n     x: usize"}, {"sha": "6bbbdd972a26c102b243a275b71352ed823d4815", "filename": "src/test/ui/consts/control-flow/exhaustive-c-like-enum-match.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fexhaustive-c-like-enum-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fexhaustive-c-like-enum-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fexhaustive-c-like-enum-match.rs?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -3,7 +3,6 @@\n // check-pass\n \n #![feature(const_if_match)]\n-#![feature(const_fn)]\n \n enum E {\n     A,"}, {"sha": "21e3f2af15ad6280ce4ca9b38300f7a023126f5f", "filename": "src/test/ui/consts/control-flow/feature-gate-const-if-match.if_match.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Ffeature-gate-const-if-match.if_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Ffeature-gate-const-if-match.if_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Ffeature-gate-const-if-match.if_match.stderr?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -1,5 +1,5 @@\n error: fatal error triggered by #[rustc_error]\n-  --> $DIR/feature-gate-const-if-match.rs:109:1\n+  --> $DIR/feature-gate-const-if-match.rs:108:1\n    |\n LL | / fn main() {\n LL | |     let _ = [0; {"}, {"sha": "00576d50ac66b46f3af78f3fc08de759b9436ea6", "filename": "src/test/ui/consts/control-flow/feature-gate-const-if-match.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Ffeature-gate-const-if-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Ffeature-gate-const-if-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Ffeature-gate-const-if-match.rs?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -6,7 +6,6 @@\n \n #![feature(rustc_attrs)]\n #![cfg_attr(if_match, feature(const_if_match))]\n-#![feature(const_fn)]\n \n const _: i32 = if true { //[stock]~ ERROR `if` is not allowed in a `const`\n     5"}, {"sha": "d3c6a51923ffb54317d6315399c92c61ba520b6e", "filename": "src/test/ui/consts/control-flow/feature-gate-const-if-match.stock.stderr", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Ffeature-gate-const-if-match.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Ffeature-gate-const-if-match.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Ffeature-gate-const-if-match.stock.stderr?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: `if` is not allowed in a `const`\n-  --> $DIR/feature-gate-const-if-match.rs:11:16\n+  --> $DIR/feature-gate-const-if-match.rs:10:16\n    |\n LL |   const _: i32 = if true {\n    |  ________________^\n@@ -13,7 +13,7 @@ LL | | };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `const`\n-  --> $DIR/feature-gate-const-if-match.rs:17:16\n+  --> $DIR/feature-gate-const-if-match.rs:16:16\n    |\n LL |   const _: i32 = if let Some(true) = Some(false) {\n    |  ________________^\n@@ -27,7 +27,7 @@ LL | | };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `match` is not allowed in a `const`\n-  --> $DIR/feature-gate-const-if-match.rs:23:16\n+  --> $DIR/feature-gate-const-if-match.rs:22:16\n    |\n LL |   const _: i32 = match 1 {\n    |  ________________^\n@@ -41,7 +41,7 @@ LL | | };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `static`\n-  --> $DIR/feature-gate-const-if-match.rs:30:13\n+  --> $DIR/feature-gate-const-if-match.rs:29:13\n    |\n LL |     let x = if true { 0 } else { 1 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -50,7 +50,7 @@ LL |     let x = if true { 0 } else { 1 };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `match` is not allowed in a `static`\n-  --> $DIR/feature-gate-const-if-match.rs:32:13\n+  --> $DIR/feature-gate-const-if-match.rs:31:13\n    |\n LL |     let x = match x { 0 => 1, _ => 0 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -59,7 +59,7 @@ LL |     let x = match x { 0 => 1, _ => 0 };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `static`\n-  --> $DIR/feature-gate-const-if-match.rs:34:5\n+  --> $DIR/feature-gate-const-if-match.rs:33:5\n    |\n LL |     if let Some(x) = Some(x) { x } else { 1 }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -68,7 +68,7 @@ LL |     if let Some(x) = Some(x) { x } else { 1 }\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `static mut`\n-  --> $DIR/feature-gate-const-if-match.rs:39:13\n+  --> $DIR/feature-gate-const-if-match.rs:38:13\n    |\n LL |     let x = if true { 0 } else { 1 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -77,7 +77,7 @@ LL |     let x = if true { 0 } else { 1 };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `match` is not allowed in a `static mut`\n-  --> $DIR/feature-gate-const-if-match.rs:41:13\n+  --> $DIR/feature-gate-const-if-match.rs:40:13\n    |\n LL |     let x = match x { 0 => 1, _ => 0 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -86,7 +86,7 @@ LL |     let x = match x { 0 => 1, _ => 0 };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `static mut`\n-  --> $DIR/feature-gate-const-if-match.rs:43:5\n+  --> $DIR/feature-gate-const-if-match.rs:42:5\n    |\n LL |     if let Some(x) = Some(x) { x } else { 1 }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -95,7 +95,7 @@ LL |     if let Some(x) = Some(x) { x } else { 1 }\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `const fn`\n-  --> $DIR/feature-gate-const-if-match.rs:48:5\n+  --> $DIR/feature-gate-const-if-match.rs:47:5\n    |\n LL |     if true { 5 } else { 6 }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -104,7 +104,7 @@ LL |     if true { 5 } else { 6 }\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `const fn`\n-  --> $DIR/feature-gate-const-if-match.rs:52:5\n+  --> $DIR/feature-gate-const-if-match.rs:51:5\n    |\n LL | /     if let Some(true) = a {\n LL | |         0\n@@ -117,7 +117,7 @@ LL | |     }\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `match` is not allowed in a `const fn`\n-  --> $DIR/feature-gate-const-if-match.rs:60:5\n+  --> $DIR/feature-gate-const-if-match.rs:59:5\n    |\n LL | /     match i {\n LL | |         i if i > 10 => i,\n@@ -130,7 +130,7 @@ LL | |     }\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `const fn`\n-  --> $DIR/feature-gate-const-if-match.rs:91:17\n+  --> $DIR/feature-gate-const-if-match.rs:90:17\n    |\n LL |         let x = if y { 0 } else { 1 };\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n@@ -139,7 +139,7 @@ LL |         let x = if y { 0 } else { 1 };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `match` is not allowed in a `const fn`\n-  --> $DIR/feature-gate-const-if-match.rs:93:17\n+  --> $DIR/feature-gate-const-if-match.rs:92:17\n    |\n LL |         let x = match x { 0 => 1, _ => 0 };\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -148,7 +148,7 @@ LL |         let x = match x { 0 => 1, _ => 0 };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `const fn`\n-  --> $DIR/feature-gate-const-if-match.rs:95:9\n+  --> $DIR/feature-gate-const-if-match.rs:94:9\n    |\n LL |         if let Some(x) = Some(x) { x } else { 1 }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -157,7 +157,7 @@ LL |         if let Some(x) = Some(x) { x } else { 1 }\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `const`\n-  --> $DIR/feature-gate-const-if-match.rs:111:17\n+  --> $DIR/feature-gate-const-if-match.rs:110:17\n    |\n LL |         let x = if false { 0 } else { 1 };\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -166,7 +166,7 @@ LL |         let x = if false { 0 } else { 1 };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `match` is not allowed in a `const`\n-  --> $DIR/feature-gate-const-if-match.rs:113:17\n+  --> $DIR/feature-gate-const-if-match.rs:112:17\n    |\n LL |         let x = match x { 0 => 1, _ => 0 };\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -175,7 +175,7 @@ LL |         let x = match x { 0 => 1, _ => 0 };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `const`\n-  --> $DIR/feature-gate-const-if-match.rs:115:9\n+  --> $DIR/feature-gate-const-if-match.rs:114:9\n    |\n LL |         if let Some(x) = Some(x) { x } else { 1 }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -184,7 +184,7 @@ LL |         if let Some(x) = Some(x) { x } else { 1 }\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `const`\n-  --> $DIR/feature-gate-const-if-match.rs:68:21\n+  --> $DIR/feature-gate-const-if-match.rs:67:21\n    |\n LL |     const IF: i32 = if true { 5 } else { 6 };\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -193,7 +193,7 @@ LL |     const IF: i32 = if true { 5 } else { 6 };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `const`\n-  --> $DIR/feature-gate-const-if-match.rs:71:25\n+  --> $DIR/feature-gate-const-if-match.rs:70:25\n    |\n LL |     const IF_LET: i32 = if let Some(true) = None { 5 } else { 6 };\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -202,7 +202,7 @@ LL |     const IF_LET: i32 = if let Some(true) = None { 5 } else { 6 };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `match` is not allowed in a `const`\n-  --> $DIR/feature-gate-const-if-match.rs:74:24\n+  --> $DIR/feature-gate-const-if-match.rs:73:24\n    |\n LL |     const MATCH: i32 = match 0 { 1 => 2, _ => 0 };\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -211,7 +211,7 @@ LL |     const MATCH: i32 = match 0 { 1 => 2, _ => 0 };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `const`\n-  --> $DIR/feature-gate-const-if-match.rs:79:21\n+  --> $DIR/feature-gate-const-if-match.rs:78:21\n    |\n LL |     const IF: i32 = if true { 5 } else { 6 };\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -220,7 +220,7 @@ LL |     const IF: i32 = if true { 5 } else { 6 };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `if` is not allowed in a `const`\n-  --> $DIR/feature-gate-const-if-match.rs:82:25\n+  --> $DIR/feature-gate-const-if-match.rs:81:25\n    |\n LL |     const IF_LET: i32 = if let Some(true) = None { 5 } else { 6 };\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -229,7 +229,7 @@ LL |     const IF_LET: i32 = if let Some(true) = None { 5 } else { 6 };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0658]: `match` is not allowed in a `const`\n-  --> $DIR/feature-gate-const-if-match.rs:85:24\n+  --> $DIR/feature-gate-const-if-match.rs:84:24\n    |\n LL |     const MATCH: i32 = match 0 { 1 => 2, _ => 0 };\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -238,7 +238,7 @@ LL |     const MATCH: i32 = match 0 { 1 => 2, _ => 0 };\n    = help: add `#![feature(const_if_match)]` to the crate attributes to enable\n \n error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/feature-gate-const-if-match.rs:115:21\n+  --> $DIR/feature-gate-const-if-match.rs:114:21\n    |\n LL |         if let Some(x) = Some(x) { x } else { 1 }\n    |                     ^"}, {"sha": "8cee2a54f56d3e4c08b1aeeeb272a068e9364959", "filename": "src/test/ui/consts/control-flow/short-circuit-let.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fshort-circuit-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fshort-circuit-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fshort-circuit-let.rs?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -4,7 +4,6 @@\n \n #![feature(const_if_match)]\n #![feature(const_panic)]\n-#![feature(const_fn)]\n \n const X: i32 = {\n     let mut x = 0;"}, {"sha": "823605ff034f10c8ca1c25bb2b53c6da78c021c8", "filename": "src/test/ui/consts/control-flow/single_variant_match_ice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fsingle_variant_match_ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09b5c854de112120a6cf4298eb9c96549995b1b0/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fsingle_variant_match_ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fsingle_variant_match_ice.rs?ref=09b5c854de112120a6cf4298eb9c96549995b1b0", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n \n-#![feature(const_if_match, const_fn)]\n+#![feature(const_if_match)]\n \n enum Foo {\n     Prob,"}]}