{"sha": "3370ac00428be662c0d4d6fea4817212486f474e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNzBhYzAwNDI4YmU2NjJjMGQ0ZDZmZWE0ODE3MjEyNDg2ZjQ3NGU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-08T21:41:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-08T21:41:18Z"}, "message": "Rollup merge of #75151 - pickfire:patch-4, r=LukasKalbertodt\n\nConsistent variable name alloc for raw_vec", "tree": {"sha": "7c1ed1a70312c9aa904c4179228f9bf207128f63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c1ed1a70312c9aa904c4179228f9bf207128f63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3370ac00428be662c0d4d6fea4817212486f474e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfLxv+CRBK7hj4Ov3rIwAAdHIIAJrcp7RTD/t/LyoslskKph1q\nhbhngOv+4+1RMP3mWYCxbSXkgWEmqtYs2oouZVQB3vonHpDLvhJobsiwhs91cDT+\nXNN7mTm1l9/OgBGcZDAonaH0O4iU9JRTopCHArW7i88mYwrQBucYDslJCRan4kVm\n+2/AkKvYfeEL8NV+EqKG+eEQhzjOfmaXubLrtrhAYVEbmEIDM8+aDmAAXImMDR1R\npxtaugAPS1mOGm3sdgUaSiqAVcT+iwEG0s4ruI9K5ynuC/mpToJvMmge5lWz7PE3\nz9tD+pBnN6a6EFRRs/amuBP9ByNZRf6C8qaRFem+rEnIK+X+7X7KsCDtJ7+QZy4=\n=O9ku\n-----END PGP SIGNATURE-----\n", "payload": "tree 7c1ed1a70312c9aa904c4179228f9bf207128f63\nparent dde4fb3fd21b333898740d7cdcc806ade9f46d51\nparent e1ef3fa686040a8c9aba34dd954a7ff7227a23ee\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1596922878 +0900\ncommitter GitHub <noreply@github.com> 1596922878 +0900\n\nRollup merge of #75151 - pickfire:patch-4, r=LukasKalbertodt\n\nConsistent variable name alloc for raw_vec\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3370ac00428be662c0d4d6fea4817212486f474e", "html_url": "https://github.com/rust-lang/rust/commit/3370ac00428be662c0d4d6fea4817212486f474e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3370ac00428be662c0d4d6fea4817212486f474e/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dde4fb3fd21b333898740d7cdcc806ade9f46d51", "url": "https://api.github.com/repos/rust-lang/rust/commits/dde4fb3fd21b333898740d7cdcc806ade9f46d51", "html_url": "https://github.com/rust-lang/rust/commit/dde4fb3fd21b333898740d7cdcc806ade9f46d51"}, {"sha": "e1ef3fa686040a8c9aba34dd954a7ff7227a23ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1ef3fa686040a8c9aba34dd954a7ff7227a23ee", "html_url": "https://github.com/rust-lang/rust/commit/e1ef3fa686040a8c9aba34dd954a7ff7227a23ee"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "247b636c808acf5e15a2b16acf212860872c73b3", "filename": "library/alloc/src/raw_vec.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3370ac00428be662c0d4d6fea4817212486f474e/library%2Falloc%2Fsrc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3370ac00428be662c0d4d6fea4817212486f474e/library%2Falloc%2Fsrc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fraw_vec.rs?ref=3370ac00428be662c0d4d6fea4817212486f474e", "patch": "@@ -203,13 +203,15 @@ impl<T, A: AllocRef> RawVec<T, A> {\n     ///\n     /// # Safety\n     ///\n-    /// The `ptr` must be allocated (via the given allocator `a`), and with the given `capacity`.\n+    /// The `ptr` must be allocated (via the given allocator `alloc`), and with the given\n+    /// `capacity`.\n     /// The `capacity` cannot exceed `isize::MAX` for sized types. (only a concern on 32-bit\n     /// systems). ZST vectors may have a capacity up to `usize::MAX`.\n-    /// If the `ptr` and `capacity` come from a `RawVec` created via `a`, then this is guaranteed.\n+    /// If the `ptr` and `capacity` come from a `RawVec` created via `alloc`, then this is\n+    /// guaranteed.\n     #[inline]\n-    pub unsafe fn from_raw_parts_in(ptr: *mut T, capacity: usize, a: A) -> Self {\n-        Self { ptr: unsafe { Unique::new_unchecked(ptr) }, cap: capacity, alloc: a }\n+    pub unsafe fn from_raw_parts_in(ptr: *mut T, capacity: usize, alloc: A) -> Self {\n+        Self { ptr: unsafe { Unique::new_unchecked(ptr) }, cap: capacity, alloc }\n     }\n \n     /// Gets a raw pointer to the start of the allocation. Note that this is"}]}