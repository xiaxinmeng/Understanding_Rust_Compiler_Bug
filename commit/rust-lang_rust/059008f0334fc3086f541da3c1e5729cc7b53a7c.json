{"sha": "059008f0334fc3086f541da3c1e5729cc7b53a7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1OTAwOGYwMzM0ZmMzMDg2ZjU0MWRhM2MxZTU3MjljYzdiNTNhN2M=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-05-06T16:21:58Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-06-21T10:57:14Z"}, "message": "Merge `sys_common::bytestring` into `os_str_bytes`", "tree": {"sha": "2a5469eeeffd5b87033010a2b2f8ce019ffca5b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a5469eeeffd5b87033010a2b2f8ce019ffca5b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/059008f0334fc3086f541da3c1e5729cc7b53a7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/059008f0334fc3086f541da3c1e5729cc7b53a7c", "html_url": "https://github.com/rust-lang/rust/commit/059008f0334fc3086f541da3c1e5729cc7b53a7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/059008f0334fc3086f541da3c1e5729cc7b53a7c/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3824017f8e57ce9dac6d69a1ce07f41c7034f82d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3824017f8e57ce9dac6d69a1ce07f41c7034f82d", "html_url": "https://github.com/rust-lang/rust/commit/3824017f8e57ce9dac6d69a1ce07f41c7034f82d"}], "stats": {"total": 78, "additions": 28, "deletions": 50}, "files": [{"sha": "97fba60c27109e3773cccf77c7ef9708be5cc084", "filename": "library/std/src/sys_common/bytestring.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/3824017f8e57ce9dac6d69a1ce07f41c7034f82d/library%2Fstd%2Fsrc%2Fsys_common%2Fbytestring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3824017f8e57ce9dac6d69a1ce07f41c7034f82d/library%2Fstd%2Fsrc%2Fsys_common%2Fbytestring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fbytestring.rs?ref=3824017f8e57ce9dac6d69a1ce07f41c7034f82d", "patch": "@@ -1,26 +0,0 @@\n-#![allow(dead_code)]\n-\n-#[cfg(test)]\n-mod tests;\n-\n-use crate::fmt::{Formatter, Result, Write};\n-use core::str::lossy::{Utf8Lossy, Utf8LossyChunk};\n-\n-pub fn debug_fmt_bytestring(slice: &[u8], f: &mut Formatter<'_>) -> Result {\n-    // Writes out a valid unicode string with the correct escape sequences\n-    fn write_str_escaped(f: &mut Formatter<'_>, s: &str) -> Result {\n-        for c in s.chars().flat_map(|c| c.escape_debug()) {\n-            f.write_char(c)?\n-        }\n-        Ok(())\n-    }\n-\n-    f.write_str(\"\\\"\")?;\n-    for Utf8LossyChunk { valid, broken } in Utf8Lossy::from_bytes(slice).chunks() {\n-        write_str_escaped(f, valid)?;\n-        for b in broken {\n-            write!(f, \"\\\\x{:02X}\", b)?;\n-        }\n-    }\n-    f.write_str(\"\\\"\")\n-}"}, {"sha": "1685f087d183e49f81d35ced27e8f480c9cada81", "filename": "library/std/src/sys_common/bytestring/tests.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3824017f8e57ce9dac6d69a1ce07f41c7034f82d/library%2Fstd%2Fsrc%2Fsys_common%2Fbytestring%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3824017f8e57ce9dac6d69a1ce07f41c7034f82d/library%2Fstd%2Fsrc%2Fsys_common%2Fbytestring%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fbytestring%2Ftests.rs?ref=3824017f8e57ce9dac6d69a1ce07f41c7034f82d", "patch": "@@ -1,19 +0,0 @@\n-use super::*;\n-use crate::fmt::{Debug, Formatter, Result};\n-\n-#[test]\n-fn smoke() {\n-    struct Helper<'a>(&'a [u8]);\n-\n-    impl Debug for Helper<'_> {\n-        fn fmt(&self, f: &mut Formatter<'_>) -> Result {\n-            debug_fmt_bytestring(self.0, f)\n-        }\n-    }\n-\n-    let input = b\"\\xF0hello,\\tworld\";\n-    let expected = r#\"\"\\xF0hello,\\tworld\"\"#;\n-    let output = format!(\"{:?}\", Helper(input));\n-\n-    assert!(output == expected);\n-}"}, {"sha": "db83bad60d84ccc7da38e5af755dbb37ab076022", "filename": "library/std/src/sys_common/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/059008f0334fc3086f541da3c1e5729cc7b53a7c/library%2Fstd%2Fsrc%2Fsys_common%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/059008f0334fc3086f541da3c1e5729cc7b53a7c/library%2Fstd%2Fsrc%2Fsys_common%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fmod.rs?ref=059008f0334fc3086f541da3c1e5729cc7b53a7c", "patch": "@@ -21,7 +21,6 @@\n mod tests;\n \n pub mod backtrace;\n-pub mod bytestring;\n pub mod condvar;\n pub mod fs;\n pub mod io;"}, {"sha": "569600470db77a22126e835facb44f913d85c17b", "filename": "library/std/src/sys_common/os_str_bytes.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/059008f0334fc3086f541da3c1e5729cc7b53a7c/library%2Fstd%2Fsrc%2Fsys_common%2Fos_str_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/059008f0334fc3086f541da3c1e5729cc7b53a7c/library%2Fstd%2Fsrc%2Fsys_common%2Fos_str_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fos_str_bytes.rs?ref=059008f0334fc3086f541da3c1e5729cc7b53a7c", "patch": "@@ -2,16 +2,18 @@\n //! systems: just a `Vec<u8>`/`[u8]`.\n \n use crate::borrow::Cow;\n-\n use crate::fmt;\n+use crate::fmt::Write;\n use crate::mem;\n use crate::rc::Rc;\n use crate::str;\n use crate::sync::Arc;\n-use crate::sys_common::bytestring::debug_fmt_bytestring;\n use crate::sys_common::{AsInner, IntoInner};\n \n-use core::str::lossy::Utf8Lossy;\n+use core::str::lossy::{Utf8Lossy, Utf8LossyChunk};\n+\n+#[cfg(test)]\n+mod tests;\n \n #[derive(Hash)]\n #[repr(transparent)]\n@@ -26,7 +28,19 @@ pub struct Slice {\n \n impl fmt::Debug for Slice {\n     fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        debug_fmt_bytestring(&self.inner, formatter)\n+        // Writes out a valid unicode string with the correct escape sequences\n+\n+        formatter.write_str(\"\\\"\")?;\n+        for Utf8LossyChunk { valid, broken } in Utf8Lossy::from_bytes(&self.inner).chunks() {\n+            for c in valid.chars().flat_map(|c| c.escape_debug()) {\n+                formatter.write_char(c)?\n+            }\n+\n+            for b in broken {\n+                write!(formatter, \"\\\\x{:02X}\", b)?;\n+            }\n+        }\n+        formatter.write_str(\"\\\"\")\n     }\n }\n "}, {"sha": "379673781557389d37828b7431b05a080a12a954", "filename": "library/std/src/sys_common/os_str_bytes/tests.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/059008f0334fc3086f541da3c1e5729cc7b53a7c/library%2Fstd%2Fsrc%2Fsys_common%2Fos_str_bytes%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/059008f0334fc3086f541da3c1e5729cc7b53a7c/library%2Fstd%2Fsrc%2Fsys_common%2Fos_str_bytes%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fos_str_bytes%2Ftests.rs?ref=059008f0334fc3086f541da3c1e5729cc7b53a7c", "patch": "@@ -0,0 +1,10 @@\n+use super::*;\n+\n+#[test]\n+fn slice_debug_output() {\n+    let input = Slice::from_u8_slice(b\"\\xF0hello,\\tworld\");\n+    let expected = r#\"\"\\xF0hello,\\tworld\"\"#;\n+    let output = format!(\"{:?}\", input);\n+\n+    assert_eq!(output, expected);\n+}"}]}