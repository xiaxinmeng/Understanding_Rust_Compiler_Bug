{"sha": "fc1a03d7d0b9b3cc612133c3368cbe45fb658abd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjMWEwM2Q3ZDBiOWIzY2M2MTIxMzNjMzM2OGNiZTQ1ZmI2NThhYmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-22T15:17:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-22T15:17:08Z"}, "message": "Auto merge of #45442 - matthewjasper:const-dynamic-capture-error, r=petrochenkov\n\nCleanly error for non-const variable in associated const\n\nNot sure if wrapping the whole `visit::walk_impl_item` call is correct.\nCloses #44239", "tree": {"sha": "3a015092701fb8bcec203779f06a96cb5ece1f05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a015092701fb8bcec203779f06a96cb5ece1f05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc1a03d7d0b9b3cc612133c3368cbe45fb658abd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc1a03d7d0b9b3cc612133c3368cbe45fb658abd", "html_url": "https://github.com/rust-lang/rust/commit/fc1a03d7d0b9b3cc612133c3368cbe45fb658abd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc1a03d7d0b9b3cc612133c3368cbe45fb658abd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "942f31f5eacfc8cbd40c20bbcabc9d37add37410", "url": "https://api.github.com/repos/rust-lang/rust/commits/942f31f5eacfc8cbd40c20bbcabc9d37add37410", "html_url": "https://github.com/rust-lang/rust/commit/942f31f5eacfc8cbd40c20bbcabc9d37add37410"}, {"sha": "02635c2d37b7f0a012c9fae1d67723513f3d19c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/02635c2d37b7f0a012c9fae1d67723513f3d19c8", "html_url": "https://github.com/rust-lang/rust/commit/02635c2d37b7f0a012c9fae1d67723513f3d19c8"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "c7ec1d072d0854fe733c9cb1ece2ac4135a5bfeb", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fc1a03d7d0b9b3cc612133c3368cbe45fb658abd/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1a03d7d0b9b3cc612133c3368cbe45fb658abd/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=fc1a03d7d0b9b3cc612133c3368cbe45fb658abd", "patch": "@@ -2084,7 +2084,9 @@ impl<'a> Resolver<'a> {\n                                                             ValueNS,\n                                                             impl_item.span,\n                                             |n, s| ResolutionError::ConstNotMemberOfTrait(n, s));\n-                                        visit::walk_impl_item(this, impl_item);\n+                                        this.with_constant_rib(|this|\n+                                            visit::walk_impl_item(this, impl_item)\n+                                        );\n                                     }\n                                     ImplItemKind::Method(ref sig, _) => {\n                                         // If this is a trait impl, ensure the method"}, {"sha": "131c65266425bf455bb261be110778ff3f627524", "filename": "src/test/compile-fail/issue-44239.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fc1a03d7d0b9b3cc612133c3368cbe45fb658abd/src%2Ftest%2Fcompile-fail%2Fissue-44239.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc1a03d7d0b9b3cc612133c3368cbe45fb658abd/src%2Ftest%2Fcompile-fail%2Fissue-44239.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-44239.rs?ref=fc1a03d7d0b9b3cc612133c3368cbe45fb658abd", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let n = 0;\n+\n+    struct Foo;\n+    impl Foo {\n+        const N: usize = n;\n+        //~^ ERROR attempt to use a non-constant value\n+    }\n+}"}]}