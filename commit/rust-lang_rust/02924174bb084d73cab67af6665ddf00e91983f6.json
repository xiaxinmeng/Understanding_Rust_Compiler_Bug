{"sha": "02924174bb084d73cab67af6665ddf00e91983f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyOTI0MTc0YmIwODRkNzNjYWI2N2FmNjY2NWRkZjAwZTkxOTgzZjY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-28T15:03:03Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-28T15:17:43Z"}, "message": "introduce FileRange", "tree": {"sha": "35e47a7e720a448a407fbca607f5895aacb68428", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35e47a7e720a448a407fbca607f5895aacb68428"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02924174bb084d73cab67af6665ddf00e91983f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02924174bb084d73cab67af6665ddf00e91983f6", "html_url": "https://github.com/rust-lang/rust/commit/02924174bb084d73cab67af6665ddf00e91983f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02924174bb084d73cab67af6665ddf00e91983f6/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7440a5f4928415f2d2a9f7b2badaff8a9376a09", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7440a5f4928415f2d2a9f7b2badaff8a9376a09", "html_url": "https://github.com/rust-lang/rust/commit/d7440a5f4928415f2d2a9f7b2badaff8a9376a09"}], "stats": {"total": 48, "additions": 29, "deletions": 19}, "files": [{"sha": "fcb4cd95740c19f25523ea859d95da62079eb2c0", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/02924174bb084d73cab67af6665ddf00e91983f6/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02924174bb084d73cab67af6665ddf00e91983f6/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=02924174bb084d73cab67af6665ddf00e91983f6", "patch": "@@ -23,7 +23,7 @@ use crate::{\n     AnalysisChange,\n     Cancelable,\n     completion::{CompletionItem, completions},\n-    CrateId, db, Diagnostic, FileId, FilePosition, FileSystemEdit,\n+    CrateId, db, Diagnostic, FileId, FilePosition, FileRange, FileSystemEdit,\n     Query, ReferenceResolution, RootChange, SourceChange, SourceFileEdit,\n     symbol_index::{LibrarySymbolsQuery, SymbolIndex, SymbolsDatabase},\n };\n@@ -404,19 +404,21 @@ impl AnalysisImpl {\n         Ok(res)\n     }\n \n-    pub fn assists(&self, file_id: FileId, range: TextRange) -> Vec<SourceChange> {\n-        let file = self.file_syntax(file_id);\n-        let offset = range.start();\n+    pub fn assists(&self, frange: FileRange) -> Vec<SourceChange> {\n+        let file = self.file_syntax(frange.file_id);\n+        let offset = frange.range.start();\n         let actions = vec![\n             ra_editor::flip_comma(&file, offset).map(|f| f()),\n             ra_editor::add_derive(&file, offset).map(|f| f()),\n             ra_editor::add_impl(&file, offset).map(|f| f()),\n             ra_editor::make_pub_crate(&file, offset).map(|f| f()),\n-            ra_editor::introduce_variable(&file, range).map(|f| f()),\n+            ra_editor::introduce_variable(&file, frange.range).map(|f| f()),\n         ];\n         actions\n             .into_iter()\n-            .filter_map(|local_edit| Some(SourceChange::from_local_edit(file_id, local_edit?)))\n+            .filter_map(|local_edit| {\n+                Some(SourceChange::from_local_edit(frange.file_id, local_edit?))\n+            })\n             .collect()\n     }\n \n@@ -487,13 +489,15 @@ impl AnalysisImpl {\n         Ok(None)\n     }\n \n-    pub fn type_of(&self, file_id: FileId, range: TextRange) -> Cancelable<Option<String>> {\n-        let file = self.db.source_file(file_id);\n+    pub fn type_of(&self, frange: FileRange) -> Cancelable<Option<String>> {\n+        let file = self.db.source_file(frange.file_id);\n         let syntax = file.syntax();\n-        let node = find_covering_node(syntax, range);\n+        let node = find_covering_node(syntax, frange.range);\n         let parent_fn = ctry!(node.ancestors().find_map(FnDef::cast));\n         let function = ctry!(source_binder::function_from_source(\n-            &*self.db, file_id, parent_fn\n+            &*self.db,\n+            frange.file_id,\n+            parent_fn\n         )?);\n         let infer = function.infer(&*self.db)?;\n         Ok(infer.type_of_node(node).map(|t| t.to_string()))"}, {"sha": "3fa4189ce2b175940242cb59b548bffec98dcbe2", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/02924174bb084d73cab67af6665ddf00e91983f6/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02924174bb084d73cab67af6665ddf00e91983f6/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=02924174bb084d73cab67af6665ddf00e91983f6", "patch": "@@ -38,7 +38,7 @@ pub use ra_editor::{\n pub use hir::FnSignatureInfo;\n \n pub use ra_db::{\n-    Canceled, Cancelable, FilePosition,\n+    Canceled, Cancelable, FilePosition, FileRange,\n     CrateGraph, CrateId, SourceRootId, FileId\n };\n \n@@ -287,9 +287,9 @@ impl Analysis {\n         let file = self.imp.file_syntax(file_id);\n         ra_editor::syntax_tree(&file)\n     }\n-    pub fn join_lines(&self, file_id: FileId, range: TextRange) -> SourceChange {\n-        let file = self.imp.file_syntax(file_id);\n-        SourceChange::from_local_edit(file_id, ra_editor::join_lines(&file, range))\n+    pub fn join_lines(&self, frange: FileRange) -> SourceChange {\n+        let file = self.imp.file_syntax(frange.file_id);\n+        SourceChange::from_local_edit(frange.file_id, ra_editor::join_lines(&file, frange.range))\n     }\n     pub fn on_enter(&self, position: FilePosition) -> Option<SourceChange> {\n         let file = self.imp.file_syntax(position.file_id);\n@@ -346,8 +346,8 @@ impl Analysis {\n     pub fn completions(&self, position: FilePosition) -> Cancelable<Option<Vec<CompletionItem>>> {\n         self.imp.completions(position)\n     }\n-    pub fn assists(&self, file_id: FileId, range: TextRange) -> Cancelable<Vec<SourceChange>> {\n-        Ok(self.imp.assists(file_id, range))\n+    pub fn assists(&self, frange: FileRange) -> Cancelable<Vec<SourceChange>> {\n+        Ok(self.imp.assists(frange))\n     }\n     pub fn diagnostics(&self, file_id: FileId) -> Cancelable<Vec<Diagnostic>> {\n         self.imp.diagnostics(file_id)\n@@ -358,8 +358,8 @@ impl Analysis {\n     ) -> Cancelable<Option<(FnSignatureInfo, Option<usize>)>> {\n         self.imp.resolve_callable(position)\n     }\n-    pub fn type_of(&self, file_id: FileId, range: TextRange) -> Cancelable<Option<String>> {\n-        self.imp.type_of(file_id, range)\n+    pub fn type_of(&self, frange: FileRange) -> Cancelable<Option<String>> {\n+        self.imp.type_of(frange)\n     }\n }\n "}, {"sha": "7181f295057b64876fa990478a014a6dbd619d40", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/02924174bb084d73cab67af6665ddf00e91983f6/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02924174bb084d73cab67af6665ddf00e91983f6/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=02924174bb084d73cab67af6665ddf00e91983f6", "patch": "@@ -8,7 +8,7 @@ pub mod mock;\n use std::sync::Arc;\n \n use ra_editor::LineIndex;\n-use ra_syntax::{TextUnit, SourceFileNode};\n+use ra_syntax::{TextUnit, TextRange, SourceFileNode};\n \n pub use crate::{\n     cancelation::{Canceled, Cancelable},\n@@ -70,3 +70,9 @@ pub struct FilePosition {\n     pub file_id: FileId,\n     pub offset: TextUnit,\n }\n+\n+#[derive(Clone, Copy, Debug)]\n+pub struct FileRange {\n+    pub file_id: FileId,\n+    pub range: TextRange,\n+}"}]}