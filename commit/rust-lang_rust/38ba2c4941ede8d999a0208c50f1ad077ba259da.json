{"sha": "38ba2c4941ede8d999a0208c50f1ad077ba259da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4YmEyYzQ5NDFlZGU4ZDk5OWEwMjA4YzUwZjFhZDA3N2JhMjU5ZGE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-30T09:31:56Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-30T09:52:26Z"}, "message": "core: Add docs about kind traits", "tree": {"sha": "272d05c345da50d268cb3441f1dae6c566a3e901", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/272d05c345da50d268cb3441f1dae6c566a3e901"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38ba2c4941ede8d999a0208c50f1ad077ba259da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38ba2c4941ede8d999a0208c50f1ad077ba259da", "html_url": "https://github.com/rust-lang/rust/commit/38ba2c4941ede8d999a0208c50f1ad077ba259da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38ba2c4941ede8d999a0208c50f1ad077ba259da/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b52a4b412e515620c2c3ccbe8b7f8c7e0300f6ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/b52a4b412e515620c2c3ccbe8b7f8c7e0300f6ff", "html_url": "https://github.com/rust-lang/rust/commit/b52a4b412e515620c2c3ccbe8b7f8c7e0300f6ff"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "aa25b0e88ccd45d762a9f8cf602e7828ac071966", "filename": "src/libcore/kinds.rs", "status": "modified", "additions": 36, "deletions": 5, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/38ba2c4941ede8d999a0208c50f1ad077ba259da/src%2Flibcore%2Fkinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38ba2c4941ede8d999a0208c50f1ad077ba259da/src%2Flibcore%2Fkinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fkinds.rs?ref=38ba2c4941ede8d999a0208c50f1ad077ba259da", "patch": "@@ -1,9 +1,35 @@\n-//! The kind traits\n+/*!\n+The kind traits\n \n-#[lang=\"const\"]\n-pub trait Const {\n-    // Empty.\n-}\n+Rust types can be classified in vairous useful ways according to\n+intrinsic properties of the type. These classifications, often called\n+'kinds', are represented as traits.\n+\n+They cannot be implemented by user code, but are instead implemented\n+by the compiler automatically for the types to which they apply.\n+\n+The 4 kinds are\n+\n+* Copy - types that may be copied without allocation. This includes\n+  scalar types and managed pointers, and exludes owned pointers. It\n+  also excludes types that implement `Drop`.\n+\n+* Send - owned types and types containing owned types.  These types\n+  may be transferred across task boundaries.\n+\n+* Const - types that are deeply immutable. Const types are used for\n+  freezable data structures.\n+\n+* Owned - types that do not contain borrowed pointers. Note that this\n+  meaning of 'owned' conflicts with 'owned pointers'. The two notions\n+  of ownership are different.\n+\n+`Copy` types include both implicitly copyable types that the compiler\n+will copy automatically and non-implicitly copyable types that require\n+the `copy` keyword to copy. Types that do not implement `Copy` may\n+instead implement `Clone`.\n+\n+*/\n \n #[lang=\"copy\"]\n pub trait Copy {\n@@ -15,6 +41,11 @@ pub trait Send {\n     // Empty.\n }\n \n+#[lang=\"const\"]\n+pub trait Const {\n+    // Empty.\n+}\n+\n #[lang=\"owned\"]\n pub trait Owned {\n     // Empty."}]}