{"sha": "d1494901d087e6c0a891def76b1f96048d70fe71", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNDk0OTAxZDA4N2U2YzBhODkxZGVmNzZiMWY5NjA0OGQ3MGZlNzE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-11T00:59:33Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-11T00:59:33Z"}, "message": "rustc: Declare GC-related intrinsics", "tree": {"sha": "151431e20df3259c9278fa01635635fe1f13e952", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/151431e20df3259c9278fa01635635fe1f13e952"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1494901d087e6c0a891def76b1f96048d70fe71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1494901d087e6c0a891def76b1f96048d70fe71", "html_url": "https://github.com/rust-lang/rust/commit/d1494901d087e6c0a891def76b1f96048d70fe71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1494901d087e6c0a891def76b1f96048d70fe71/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19424dfab6cf0432477396e73dea567678a715b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/19424dfab6cf0432477396e73dea567678a715b8", "html_url": "https://github.com/rust-lang/rust/commit/19424dfab6cf0432477396e73dea567678a715b8"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "be8c151d48950037129bddda3a973286495fede3", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d1494901d087e6c0a891def76b1f96048d70fe71/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1494901d087e6c0a891def76b1f96048d70fe71/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=d1494901d087e6c0a891def76b1f96048d70fe71", "patch": "@@ -6731,6 +6731,12 @@ fn declare_intrinsics(llmod: ModuleRef) -> hashmap[str, ValueRef] {\n     let T_memset64_args: [TypeRef] =\n         ~[T_ptr(T_i8()), T_i8(), T_i64(), T_i32(), T_i1()];\n     let T_trap_args: [TypeRef] = ~[];\n+    let gcroot =\n+        decl_cdecl_fn(llmod, \"llvm.gcroot\",\n+                      T_fn(~[T_ptr(T_ptr(T_i8())), T_ptr(T_i8())], T_void()));\n+    let gcread =\n+        decl_cdecl_fn(llmod, \"llvm.gcread\",\n+                      T_fn(~[T_ptr(T_i8()), T_ptr(T_ptr(T_i8()))], T_void()));\n     let memmove32 =\n         decl_cdecl_fn(llmod, \"llvm.memmove.p0i8.p0i8.i32\",\n                       T_fn(T_memmove32_args, T_void()));\n@@ -6745,6 +6751,8 @@ fn declare_intrinsics(llmod: ModuleRef) -> hashmap[str, ValueRef] {\n                       T_fn(T_memset64_args, T_void()));\n     let trap = decl_cdecl_fn(llmod, \"llvm.trap\", T_fn(T_trap_args, T_void()));\n     let intrinsics = new_str_hash[ValueRef]();\n+    intrinsics.insert(\"llvm.gcroot\", gcroot);\n+    intrinsics.insert(\"llvm.gcread\", gcread);\n     intrinsics.insert(\"llvm.memmove.p0i8.p0i8.i32\", memmove32);\n     intrinsics.insert(\"llvm.memmove.p0i8.p0i8.i64\", memmove64);\n     intrinsics.insert(\"llvm.memset.p0i8.i32\", memset32);"}]}