{"sha": "759526e513f28443b845b63176f15424686d0254", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1OTUyNmU1MTNmMjg0NDNiODQ1YjYzMTc2ZjE1NDI0Njg2ZDAyNTQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-02-15T23:57:48Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-02-15T23:57:48Z"}, "message": "Fix printing of `Yield` terminator", "tree": {"sha": "27744c148fdf9b4d45a186410747054dca0f89ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27744c148fdf9b4d45a186410747054dca0f89ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/759526e513f28443b845b63176f15424686d0254", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/759526e513f28443b845b63176f15424686d0254", "html_url": "https://github.com/rust-lang/rust/commit/759526e513f28443b845b63176f15424686d0254", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/759526e513f28443b845b63176f15424686d0254/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61d9231ff2604a0467987042d9ebf9ff9ea739b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/61d9231ff2604a0467987042d9ebf9ff9ea739b5", "html_url": "https://github.com/rust-lang/rust/commit/61d9231ff2604a0467987042d9ebf9ff9ea739b5"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "a3e3a26db05d6b2ec1d2ac986da15a0c78082367", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/759526e513f28443b845b63176f15424686d0254/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/759526e513f28443b845b63176f15424686d0254/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=759526e513f28443b845b63176f15424686d0254", "patch": "@@ -1468,21 +1468,23 @@ impl<'tcx> TerminatorKind<'tcx> {\n     /// successors, which may be rendered differently between the text and the graphviz format.\n     pub fn fmt_head<W: Write>(&self, fmt: &mut W) -> fmt::Result {\n         use self::TerminatorKind::*;\n-        match *self {\n+        match self {\n             Goto { .. } => write!(fmt, \"goto\"),\n-            SwitchInt { discr: ref place, .. } => write!(fmt, \"switchInt({:?})\", place),\n+            SwitchInt { discr, .. } => write!(fmt, \"switchInt({:?})\", discr),\n             Return => write!(fmt, \"return\"),\n             GeneratorDrop => write!(fmt, \"generator_drop\"),\n             Resume => write!(fmt, \"resume\"),\n             Abort => write!(fmt, \"abort\"),\n-            Yield { ref value, .. } => write!(fmt, \"_1 = suspend({:?})\", value),\n+            Yield { value, resume_arg, .. } => {\n+                write!(fmt, \"{:?} = suspend({:?})\", resume_arg, value)\n+            }\n             Unreachable => write!(fmt, \"unreachable\"),\n-            Drop { ref location, .. } => write!(fmt, \"drop({:?})\", location),\n-            DropAndReplace { ref location, ref value, .. } => {\n+            Drop { location, .. } => write!(fmt, \"drop({:?})\", location),\n+            DropAndReplace { location, value, .. } => {\n                 write!(fmt, \"replace({:?} <- {:?})\", location, value)\n             }\n-            Call { ref func, ref args, ref destination, .. } => {\n-                if let Some((ref destination, _)) = *destination {\n+            Call { func, args, destination, .. } => {\n+                if let Some((destination, _)) = destination {\n                     write!(fmt, \"{:?} = \", destination)?;\n                 }\n                 write!(fmt, \"{:?}(\", func)?;\n@@ -1494,7 +1496,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n                 }\n                 write!(fmt, \")\")\n             }\n-            Assert { ref cond, expected, ref msg, .. } => {\n+            Assert { cond, expected, msg, .. } => {\n                 write!(fmt, \"assert(\")?;\n                 if !expected {\n                     write!(fmt, \"!\")?;"}, {"sha": "98acce83759740dc5565071a1d53f4a915d12c99", "filename": "src/test/mir-opt/generator-storage-dead-unwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/759526e513f28443b845b63176f15424686d0254/src%2Ftest%2Fmir-opt%2Fgenerator-storage-dead-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/759526e513f28443b845b63176f15424686d0254/src%2Ftest%2Fmir-opt%2Fgenerator-storage-dead-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fgenerator-storage-dead-unwind.rs?ref=759526e513f28443b845b63176f15424686d0254", "patch": "@@ -49,7 +49,7 @@ fn main() {\n //     StorageLive(_4);\n //     _4 = Bar(const 6i32,);\n //     ...\n-//     _1 = suspend(move _6) -> [resume: bb2, drop: bb4];\n+//     _5 = suspend(move _6) -> [resume: bb2, drop: bb4];\n // }\n // bb1 (cleanup): {\n //     resume;"}]}