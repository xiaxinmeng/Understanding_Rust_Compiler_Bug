{"sha": "ba419539d5bfd3c1bde4216efa23e64697f44cb1", "node_id": "C_kwDOAAsO6NoAKGJhNDE5NTM5ZDViZmQzYzFiZGU0MjE2ZWZhMjNlNjQ2OTdmNDRjYjE", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-24T12:45:34Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-24T12:45:34Z"}, "message": "Reorder unwinding related builder methods to differentiate between dwarf and msvc instructions", "tree": {"sha": "9bd91af25a18fc8cacc3f3df2e23ae980d9186e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bd91af25a18fc8cacc3f3df2e23ae980d9186e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba419539d5bfd3c1bde4216efa23e64697f44cb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba419539d5bfd3c1bde4216efa23e64697f44cb1", "html_url": "https://github.com/rust-lang/rust/commit/ba419539d5bfd3c1bde4216efa23e64697f44cb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba419539d5bfd3c1bde4216efa23e64697f44cb1/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94dc3753aa6849de98f41dcb317c232443b28b89", "url": "https://api.github.com/repos/rust-lang/rust/commits/94dc3753aa6849de98f41dcb317c232443b28b89", "html_url": "https://github.com/rust-lang/rust/commit/94dc3753aa6849de98f41dcb317c232443b28b89"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "1b9e13873b0b9b837c3e663e9425bb7565313131", "filename": "src/builder.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ba419539d5bfd3c1bde4216efa23e64697f44cb1/src%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba419539d5bfd3c1bde4216efa23e64697f44cb1/src%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuilder.rs?ref=ba419539d5bfd3c1bde4216efa23e64697f44cb1", "patch": "@@ -1256,6 +1256,10 @@ impl<'a, 'gcc, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'gcc, 'tcx> {\n         aggregate_value\n     }\n \n+    fn set_personality_fn(&mut self, _personality: RValue<'gcc>) {\n+        // TODO(antoyo)\n+    }\n+\n     fn landing_pad(&mut self, _ty: Type<'gcc>, _pers_fn: RValue<'gcc>, _num_clauses: usize) -> RValue<'gcc> {\n         let field1 = self.context.new_field(None, self.u8_type, \"landing_pad_field_1\");\n         let field2 = self.context.new_field(None, self.i32_type, \"landing_pad_field_1\");\n@@ -1295,10 +1299,6 @@ impl<'a, 'gcc, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'gcc, 'tcx> {\n         unimplemented!();\n     }\n \n-    fn set_personality_fn(&mut self, _personality: RValue<'gcc>) {\n-        // TODO(antoyo)\n-    }\n-\n     // Atomic Operations\n     fn atomic_cmpxchg(&mut self, dst: RValue<'gcc>, cmp: RValue<'gcc>, src: RValue<'gcc>, order: AtomicOrdering, failure_order: AtomicOrdering, weak: bool) -> RValue<'gcc> {\n         let expected = self.current_func().new_local(None, cmp.get_type(), \"expected\");"}]}