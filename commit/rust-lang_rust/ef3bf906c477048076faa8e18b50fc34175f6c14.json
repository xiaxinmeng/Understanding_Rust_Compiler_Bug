{"sha": "ef3bf906c477048076faa8e18b50fc34175f6c14", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmM2JmOTA2YzQ3NzA0ODA3NmZhYThlMThiNTBmYzM0MTc1ZjZjMTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-19T10:38:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-19T10:38:26Z"}, "message": "Generalize", "tree": {"sha": "7e0134f8a0bc0a41e8cbcea91231b7a7be95262b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e0134f8a0bc0a41e8cbcea91231b7a7be95262b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef3bf906c477048076faa8e18b50fc34175f6c14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef3bf906c477048076faa8e18b50fc34175f6c14", "html_url": "https://github.com/rust-lang/rust/commit/ef3bf906c477048076faa8e18b50fc34175f6c14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef3bf906c477048076faa8e18b50fc34175f6c14/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b0a7c7d162c6c30b8fd52309f4473659d647452", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b0a7c7d162c6c30b8fd52309f4473659d647452", "html_url": "https://github.com/rust-lang/rust/commit/5b0a7c7d162c6c30b8fd52309f4473659d647452"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "e9c49b7d0dfc19598c175726f5fdde7e79b7078d", "filename": "crates/ra_assists/src/handlers/merge_imports.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ef3bf906c477048076faa8e18b50fc34175f6c14/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef3bf906c477048076faa8e18b50fc34175f6c14/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs?ref=ef3bf906c477048076faa8e18b50fc34175f6c14", "patch": "@@ -1,7 +1,10 @@\n use std::iter::successors;\n \n-use ast::{edit::AstNodeEdit, make};\n-use ra_syntax::{ast, AstNode, AstToken, Direction, InsertPosition, SyntaxElement, T};\n+use ra_syntax::{\n+    algo::neighbor,\n+    ast::{self, edit::AstNodeEdit, make},\n+    AstNode, AstToken, Direction, InsertPosition, SyntaxElement, T,\n+};\n \n use crate::{Assist, AssistCtx, AssistId};\n \n@@ -23,7 +26,7 @@ pub(crate) fn merge_imports(ctx: AssistCtx) -> Option<Assist> {\n     let (merged, to_delete) = [Direction::Prev, Direction::Next]\n         .iter()\n         .copied()\n-        .filter_map(|dir| next_use_item(&use_item, dir))\n+        .filter_map(|dir| neighbor(&use_item, dir))\n         .filter_map(|it| Some((it.clone(), it.use_tree()?)))\n         .find_map(|(use_item, use_tree)| {\n             Some((try_merge_trees(&tree, &use_tree)?, use_item.clone()))\n@@ -49,10 +52,6 @@ pub(crate) fn merge_imports(ctx: AssistCtx) -> Option<Assist> {\n     })\n }\n \n-fn next_use_item(this_use_item: &ast::UseItem, direction: Direction) -> Option<ast::UseItem> {\n-    this_use_item.syntax().siblings(direction).skip(1).find_map(ast::UseItem::cast)\n-}\n-\n fn try_merge_trees(old: &ast::UseTree, new: &ast::UseTree) -> Option<ast::UseTree> {\n     let lhs_path = old.path()?;\n     let rhs_path = new.path()?;"}, {"sha": "eb967ab929ea7b68115a30942a1ebd04ce462f79", "filename": "crates/ra_assists/src/handlers/merge_match_arms.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ef3bf906c477048076faa8e18b50fc34175f6c14/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef3bf906c477048076faa8e18b50fc34175f6c14/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs?ref=ef3bf906c477048076faa8e18b50fc34175f6c14", "patch": "@@ -1,6 +1,7 @@\n use std::iter::successors;\n \n use ra_syntax::{\n+    algo::neighbor,\n     ast::{self, AstNode},\n     Direction, TextUnit,\n };\n@@ -53,7 +54,7 @@ pub(crate) fn merge_match_arms(ctx: AssistCtx) -> Option<Assist> {\n \n     // We check if the following match arms match this one. We could, but don't,\n     // compare to the previous match arm as well.\n-    let arms_to_merge = successors(Some(current_arm), next_arm)\n+    let arms_to_merge = successors(Some(current_arm), |it| neighbor(it, Direction::Next))\n         .take_while(|arm| {\n             if arm.guard().is_some() {\n                 return false;\n@@ -102,15 +103,12 @@ fn contains_placeholder(a: &ast::MatchArm) -> bool {\n     }\n }\n \n-fn next_arm(arm: &ast::MatchArm) -> Option<ast::MatchArm> {\n-    arm.syntax().siblings(Direction::Next).skip(1).find_map(ast::MatchArm::cast)\n-}\n-\n #[cfg(test)]\n mod tests {\n-    use super::merge_match_arms;\n     use crate::helpers::{check_assist, check_assist_not_applicable};\n \n+    use super::*;\n+\n     #[test]\n     fn merge_match_arms_single_patterns() {\n         check_assist("}, {"sha": "344cf0fbedf9d30af915335c164b91eb82726c6d", "filename": "crates/ra_syntax/src/algo.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef3bf906c477048076faa8e18b50fc34175f6c14/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef3bf906c477048076faa8e18b50fc34175f6c14/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo.rs?ref=ef3bf906c477048076faa8e18b50fc34175f6c14", "patch": "@@ -73,6 +73,10 @@ pub fn least_common_ancestor(u: &SyntaxNode, v: &SyntaxNode) -> Option<SyntaxNod\n     v.ancestors().find(|it| u_ancestors.contains(it))\n }\n \n+pub fn neighbor<T: AstNode>(me: &T, direction: Direction) -> Option<T> {\n+    me.syntax().siblings(direction).skip(1).find_map(T::cast)\n+}\n+\n #[derive(Debug, PartialEq, Eq, Clone, Copy)]\n pub enum InsertPosition<T> {\n     First,"}]}