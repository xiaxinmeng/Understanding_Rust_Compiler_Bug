{"sha": "41f84c258ad5fc12775e25aafe4d67e3304a5bda", "node_id": "C_kwDOAAsO6NoAKDQxZjg0YzI1OGFkNWZjMTI3NzVlMjVhYWZlNGQ2N2UzMzA0YTViZGE", "commit": {"author": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2021-11-18T02:06:17Z"}, "committer": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2022-02-04T00:15:56Z"}, "message": "Require const stability on all stable const items\n\nThis was supposed to be the case previously, but a missed method call\nmeant that trait impls were not checked.", "tree": {"sha": "038c593d760c6f107d5d545fa4c97a5ed67ad6f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/038c593d760c6f107d5d545fa4c97a5ed67ad6f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41f84c258ad5fc12775e25aafe4d67e3304a5bda", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQTgxeqBxcDGar1sVhy4DhnkZitapAUCYfxwPAAKCRC4DhnkZita\npK0VAQCiswWOyxiDnqPvL3lel5Bc/zxH5x3I2FxT7riC6+bWlgEA+VFNRgRKW3j/\nu7wErWuYyMbE3UUxyuKbLoVFjdLIfws=\n=YhUW\n-----END PGP SIGNATURE-----", "payload": "tree 038c593d760c6f107d5d545fa4c97a5ed67ad6f1\nparent ad88831cd50ffe9cb9006bbdcb7fc9d97142e410\nauthor Jacob Pratt <jacob@jhpratt.dev> 1637201177 -0500\ncommitter Jacob Pratt <jacob@jhpratt.dev> 1643933756 -0500\n\nRequire const stability on all stable const items\n\nThis was supposed to be the case previously, but a missed method call\nmeant that trait impls were not checked.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41f84c258ad5fc12775e25aafe4d67e3304a5bda", "html_url": "https://github.com/rust-lang/rust/commit/41f84c258ad5fc12775e25aafe4d67e3304a5bda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41f84c258ad5fc12775e25aafe4d67e3304a5bda/comments", "author": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad88831cd50ffe9cb9006bbdcb7fc9d97142e410", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad88831cd50ffe9cb9006bbdcb7fc9d97142e410", "html_url": "https://github.com/rust-lang/rust/commit/ad88831cd50ffe9cb9006bbdcb7fc9d97142e410"}], "stats": {"total": 72, "additions": 45, "deletions": 27}, "files": [{"sha": "136059677c5ae94a80203d3768b13ee63901dc90", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/41f84c258ad5fc12775e25aafe4d67e3304a5bda/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41f84c258ad5fc12775e25aafe4d67e3304a5bda/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=41f84c258ad5fc12775e25aafe4d67e3304a5bda", "patch": "@@ -577,17 +577,21 @@ impl<'tcx> MissingStabilityAnnotations<'tcx> {\n     }\n \n     fn check_missing_const_stability(&self, def_id: LocalDefId, span: Span) {\n-        let stab_map = self.tcx.stability();\n-        let stab = stab_map.local_stability(def_id);\n-        if stab.map_or(false, |stab| stab.level.is_stable()) {\n-            let const_stab = stab_map.local_const_stability(def_id);\n-            if const_stab.is_none() {\n-                self.tcx.sess.span_err(\n-                    span,\n-                    \"`#[stable]` const functions must also be either \\\n-                    `#[rustc_const_stable]` or `#[rustc_const_unstable]`\",\n-                );\n-            }\n+        if !self.tcx.features().staged_api {\n+            return;\n+        }\n+\n+        let is_const = self.tcx.is_const_fn(def_id.to_def_id());\n+        let is_stable = self\n+            .tcx\n+            .lookup_stability(def_id)\n+            .map_or(false, |stability| stability.level.is_stable());\n+        let missing_const_stability_attribute = self.tcx.lookup_const_stability(def_id).is_none();\n+        let is_reachable = self.access_levels.is_reachable(def_id);\n+\n+        if is_const && is_stable && missing_const_stability_attribute && is_reachable {\n+            let descr = self.tcx.def_kind(def_id).descr(def_id.to_def_id());\n+            self.tcx.sess.span_err(span, &format!(\"{descr} has missing const stability attribute\"));\n         }\n     }\n }\n@@ -612,13 +616,8 @@ impl<'tcx> Visitor<'tcx> for MissingStabilityAnnotations<'tcx> {\n             self.check_missing_stability(i.def_id, i.span);\n         }\n \n-        // Ensure `const fn` that are `stable` have one of `rustc_const_unstable` or\n-        // `rustc_const_stable`.\n-        if self.tcx.features().staged_api\n-            && matches!(&i.kind, hir::ItemKind::Fn(sig, ..) if sig.header.is_const())\n-        {\n-            self.check_missing_const_stability(i.def_id, i.span);\n-        }\n+        // Ensure stable `const fn` have a const stability attribute.\n+        self.check_missing_const_stability(i.def_id, i.span);\n \n         intravisit::walk_item(self, i)\n     }\n@@ -632,6 +631,7 @@ impl<'tcx> Visitor<'tcx> for MissingStabilityAnnotations<'tcx> {\n         let impl_def_id = self.tcx.hir().get_parent_item(ii.hir_id());\n         if self.tcx.impl_trait_ref(impl_def_id).is_none() {\n             self.check_missing_stability(ii.def_id, ii.span);\n+            self.check_missing_const_stability(ii.def_id, ii.span);\n         }\n         intravisit::walk_impl_item(self, ii);\n     }"}, {"sha": "39af6e9e3b935a6467d59ad0e0fa7f7aefc2a67a", "filename": "src/test/ui/stability-attribute/missing-const-stability.rs", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/41f84c258ad5fc12775e25aafe4d67e3304a5bda/src%2Ftest%2Fui%2Fstability-attribute%2Fmissing-const-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41f84c258ad5fc12775e25aafe4d67e3304a5bda/src%2Ftest%2Fui%2Fstability-attribute%2Fmissing-const-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fmissing-const-stability.rs?ref=41f84c258ad5fc12775e25aafe4d67e3304a5bda", "patch": "@@ -1,12 +1,24 @@\n #![feature(staged_api)]\n+#![stable(feature = \"stable\", since = \"1.0.0\")]\n \n-#![stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+pub const fn foo() {} //~ ERROR function has missing const stability attribute\n \n-#[stable(feature = \"foo\", since = \"1.0.0\")]\n-pub const fn foo() {}\n-//~^ ERROR rustc_const_stable\n+#[unstable(feature = \"unstable\", issue = \"none\")]\n+pub const fn bar() {} // ok for now\n \n-#[unstable(feature = \"bar\", issue = \"none\")]\n-pub const fn bar() {} // ok\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+pub struct Foo;\n+impl Foo {\n+    #[stable(feature = \"stable\", since = \"1.0.0\")]\n+    pub const fn foo() {} //~ ERROR associated function has missing const stability attribute\n+\n+    #[unstable(feature = \"unstable\", issue = \"none\")]\n+    pub const fn bar() {} // ok for now\n+}\n+\n+// FIXME When #![feature(const_trait_impl)] is stabilized, add tests for const\n+// trait impls. Right now, a \"trait methods cannot be stable const fn\" error is\n+// emitted, but that's not in the scope of this test.\n \n fn main() {}"}, {"sha": "ee98e7b0e3fb1dbccc2534b3c813419312843919", "filename": "src/test/ui/stability-attribute/missing-const-stability.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/41f84c258ad5fc12775e25aafe4d67e3304a5bda/src%2Ftest%2Fui%2Fstability-attribute%2Fmissing-const-stability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41f84c258ad5fc12775e25aafe4d67e3304a5bda/src%2Ftest%2Fui%2Fstability-attribute%2Fmissing-const-stability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fmissing-const-stability.stderr?ref=41f84c258ad5fc12775e25aafe4d67e3304a5bda", "patch": "@@ -1,8 +1,14 @@\n-error: `#[stable]` const functions must also be either `#[rustc_const_stable]` or `#[rustc_const_unstable]`\n-  --> $DIR/missing-const-stability.rs:6:1\n+error: function has missing const stability attribute\n+  --> $DIR/missing-const-stability.rs:5:1\n    |\n LL | pub const fn foo() {}\n    | ^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: associated function has missing const stability attribute\n+  --> $DIR/missing-const-stability.rs:14:5\n+   |\n+LL |     pub const fn foo() {}\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n "}]}