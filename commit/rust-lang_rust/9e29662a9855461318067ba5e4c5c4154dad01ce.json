{"sha": "9e29662a9855461318067ba5e4c5c4154dad01ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMjk2NjJhOTg1NTQ2MTMxODA2N2JhNWU0YzVjNDE1NGRhZDAxY2U=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-16T01:44:02Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-16T10:58:16Z"}, "message": "obligations.rs: rustfmt", "tree": {"sha": "4ca0b976925f05e87eb5c214d350a88515e4008f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ca0b976925f05e87eb5c214d350a88515e4008f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e29662a9855461318067ba5e4c5c4154dad01ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e29662a9855461318067ba5e4c5c4154dad01ce", "html_url": "https://github.com/rust-lang/rust/commit/9e29662a9855461318067ba5e4c5c4154dad01ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e29662a9855461318067ba5e4c5c4154dad01ce/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a94d2a6b883186782c1152c9aca7742d32692930", "url": "https://api.github.com/repos/rust-lang/rust/commits/a94d2a6b883186782c1152c9aca7742d32692930", "html_url": "https://github.com/rust-lang/rust/commit/a94d2a6b883186782c1152c9aca7742d32692930"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "5d6217ebc80be6664a7e650d041e1f431dec0718", "filename": "src/librustc/infer/outlives/obligations.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9e29662a9855461318067ba5e4c5c4154dad01ce/src%2Flibrustc%2Finfer%2Foutlives%2Fobligations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e29662a9855461318067ba5e4c5c4154dad01ce/src%2Flibrustc%2Finfer%2Foutlives%2Fobligations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Foutlives%2Fobligations.rs?ref=9e29662a9855461318067ba5e4c5c4154dad01ce", "patch": "@@ -133,7 +133,10 @@ impl<'cx, 'gcx, 'tcx> InferCtxt<'cx, 'gcx, 'tcx> {\n         param_env: ty::ParamEnv<'tcx>,\n         body_id: ast::NodeId,\n     ) {\n-        assert!(!self.in_snapshot.get(), \"cannot process registered region obligations in a snapshot\");\n+        assert!(\n+            !self.in_snapshot.get(),\n+            \"cannot process registered region obligations in a snapshot\"\n+        );\n \n         // pull out the region obligations with the given `body_id` (leaving the rest)\n         let mut my_region_obligations = Vec::with_capacity(self.region_obligations.borrow().len());\n@@ -182,7 +185,10 @@ impl<'cx, 'gcx, 'tcx> InferCtxt<'cx, 'gcx, 'tcx> {\n     /// them. This function should not really exist; it is used to\n     /// accommodate some older code for the time being.\n     pub fn ignore_region_obligations(&self) {\n-        assert!(!self.in_snapshot.get(), \"cannot ignore registered region obligations in a snapshot\");\n+        assert!(\n+            !self.in_snapshot.get(),\n+            \"cannot ignore registered region obligations in a snapshot\"\n+        );\n \n         self.region_obligations.borrow_mut().clear();\n     }\n@@ -496,10 +502,7 @@ impl<'cx, 'gcx, 'tcx> TypeOutlives<'cx, 'gcx, 'tcx> {\n         // dubious for projections, but it will work for simple cases\n         // like `T` and `T::Item`. It may not work as well for things\n         // like `<T as Foo<'a>>::Item`.\n-        let mut param_bounds =\n-            self.collect_outlives_from_predicate_list(\n-                generic.to_ty(tcx),\n-                self.param_env.caller_bounds);\n+        let mut param_bounds = self.collect_outlives_from_predicate_list(generic.to_ty(tcx), self.param_env.caller_bounds);\n \n         // Next, collect regions we scraped from the well-formedness\n         // constraints in the fn signature. To do that, we walk the list\n@@ -588,7 +591,8 @@ impl<'cx, 'gcx, 'tcx> TypeOutlives<'cx, 'gcx, 'tcx> {\n         let identity_proj = tcx.mk_projection(assoc_item_def_id, identity_substs);\n         self.collect_outlives_from_predicate_list(\n             identity_proj,\n-            traits::elaborate_predicates(tcx, trait_predicates.predicates))\n+            traits::elaborate_predicates(tcx, trait_predicates.predicates),\n+        )\n     }\n \n     /// Searches through a predicate list for a predicate `T: 'a`."}]}