{"sha": "4d088bd5286b7946068953fe43efe1a9dd47193a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMDg4YmQ1Mjg2Yjc5NDYwNjg5NTNmZTQzZWZlMWE5ZGQ0NzE5M2E=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-22T00:41:42Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-22T17:26:34Z"}, "message": "Call drop glue on the thing in a unique box\n\nIssue #409", "tree": {"sha": "87e0e7270392d1f175cf5744753777a69475c952", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87e0e7270392d1f175cf5744753777a69475c952"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d088bd5286b7946068953fe43efe1a9dd47193a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d088bd5286b7946068953fe43efe1a9dd47193a", "html_url": "https://github.com/rust-lang/rust/commit/4d088bd5286b7946068953fe43efe1a9dd47193a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d088bd5286b7946068953fe43efe1a9dd47193a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aad1342e13c0c09932c5bfc6c9ca9a7430709194", "url": "https://api.github.com/repos/rust-lang/rust/commits/aad1342e13c0c09932c5bfc6c9ca9a7430709194", "html_url": "https://github.com/rust-lang/rust/commit/aad1342e13c0c09932c5bfc6c9ca9a7430709194"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "bb3c399dda4a724bd96b5839e6959b3d97c5d4d4", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4d088bd5286b7946068953fe43efe1a9dd47193a/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d088bd5286b7946068953fe43efe1a9dd47193a/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=4d088bd5286b7946068953fe43efe1a9dd47193a", "patch": "@@ -1313,7 +1313,21 @@ fn make_free_glue(bcx: @block_ctxt, v0: ValueRef, t: ty::t) {\n                 trans_non_gc_free(bcx, v)\n             } else { bcx }\n           }\n-          ty::ty_uniq(_) { fail \"free uniq unimplemented\"; }\n+          ty::ty_uniq(content_t) {\n+            let free_cx = new_sub_block_ctxt(bcx, \"uniq_free\");\n+            let next_cx = new_sub_block_ctxt(bcx, \"uniq_free_next\");\n+            let vptr = Load(bcx, v0);\n+            let null_test = IsNull(bcx, vptr);\n+            CondBr(bcx, null_test, next_cx.llbb, free_cx.llbb);\n+\n+            let bcx = free_cx;\n+            let bcx = drop_ty(bcx, vptr, content_t);\n+            let bcx = trans_shared_free(bcx, vptr);\n+            Store(bcx, C_null(val_ty(vptr)), v0);\n+            Br(bcx, next_cx.llbb);\n+\n+            next_cx\n+          }\n           ty::ty_obj(_) {\n             // Call through the obj's own fields-drop glue first.\n             // Then free the body.\n@@ -1366,10 +1380,7 @@ fn make_drop_glue(bcx: @block_ctxt, v0: ValueRef, t: ty::t) {\n           ty::ty_str. { tvec::make_drop_glue(bcx, v0, t) }\n           ty::ty_box(_) { decr_refcnt_maybe_free(bcx, v0, v0, t) }\n           ty::ty_uniq(_) {\n-            let vptr = Load(bcx, v0);\n-            let bcx = trans_shared_free(bcx, vptr);\n-            Store(bcx, C_null(val_ty(vptr)), v0);\n-            bcx\n+            free_ty(bcx, v0, t)\n           }\n           ty::ty_obj(_) {\n             let box_cell ="}, {"sha": "23048eb7868cb9d6ad7def47e650c8f7ddb755eb", "filename": "src/test/run-pass/unique-drop-complex.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d088bd5286b7946068953fe43efe1a9dd47193a/src%2Ftest%2Frun-pass%2Funique-drop-complex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d088bd5286b7946068953fe43efe1a9dd47193a/src%2Ftest%2Frun-pass%2Funique-drop-complex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-drop-complex.rs?ref=4d088bd5286b7946068953fe43efe1a9dd47193a", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    let x = ~[0,0,0,0,0];\n+}\n\\ No newline at end of file"}]}