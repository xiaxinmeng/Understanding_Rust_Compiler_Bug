{"sha": "b69c124255e25d5d1c16ee88c4f2a75964db9209", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2OWMxMjQyNTVlMjVkNWQxYzE2ZWU4OGM0ZjJhNzU5NjRkYjkyMDk=", "commit": {"author": {"name": "Sebastian Dr\u00f6ge", "email": "sebastian@centricular.com", "date": "2018-01-04T09:34:05Z"}, "committer": {"name": "Sebastian Dr\u00f6ge", "email": "sebastian@centricular.com", "date": "2018-01-04T09:34:05Z"}, "message": "Fix potential overflow in TrustedRandomAccess impl for slice::{Chunks,ChunksMut}", "tree": {"sha": "82cb568f71eecb77e012e6f4e28d66406790aba5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82cb568f71eecb77e012e6f4e28d66406790aba5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b69c124255e25d5d1c16ee88c4f2a75964db9209", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b69c124255e25d5d1c16ee88c4f2a75964db9209", "html_url": "https://github.com/rust-lang/rust/commit/b69c124255e25d5d1c16ee88c4f2a75964db9209", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b69c124255e25d5d1c16ee88c4f2a75964db9209/comments", "author": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f29e2b495a6b875af835f1fff64256e2d58d2b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f29e2b495a6b875af835f1fff64256e2d58d2b6", "html_url": "https://github.com/rust-lang/rust/commit/3f29e2b495a6b875af835f1fff64256e2d58d2b6"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "72036d6d3a248e0cff831c3d5d6e1cd1e3c6f007", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b69c124255e25d5d1c16ee88c4f2a75964db9209/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b69c124255e25d5d1c16ee88c4f2a75964db9209/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=b69c124255e25d5d1c16ee88c4f2a75964db9209", "patch": "@@ -2240,7 +2240,10 @@ impl<'a, T> FusedIterator for Chunks<'a, T> {}\n unsafe impl<'a, T> TrustedRandomAccess for Chunks<'a, T> {\n     unsafe fn get_unchecked(&mut self, i: usize) -> &'a [T] {\n         let start = i * self.chunk_size;\n-        let end = cmp::min(start + self.chunk_size, self.v.len());\n+        let end = match start.checked_add(self.chunk_size) {\n+            None => self.v.len(),\n+            Some(end) => cmp::min(end, self.v.len()),\n+        };\n         from_raw_parts(self.v.as_ptr().offset(start as isize), end - start)\n     }\n     fn may_have_side_effect() -> bool { false }\n@@ -2353,7 +2356,10 @@ impl<'a, T> FusedIterator for ChunksMut<'a, T> {}\n unsafe impl<'a, T> TrustedRandomAccess for ChunksMut<'a, T> {\n     unsafe fn get_unchecked(&mut self, i: usize) -> &'a mut [T] {\n         let start = i * self.chunk_size;\n-        let end = cmp::min(start + self.chunk_size, self.v.len());\n+        let end = match start.checked_add(self.chunk_size) {\n+            None => self.v.len(),\n+            Some(end) => cmp::min(end, self.v.len()),\n+        };\n         from_raw_parts_mut(self.v.as_mut_ptr().offset(start as isize), end - start)\n     }\n     fn may_have_side_effect() -> bool { false }"}]}