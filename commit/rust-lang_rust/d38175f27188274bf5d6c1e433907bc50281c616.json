{"sha": "d38175f27188274bf5d6c1e433907bc50281c616", "node_id": "C_kwDOAAsO6NoAKGQzODE3NWYyNzE4ODI3NGJmNWQ2YzFlNDMzOTA3YmM1MDI4MWM2MTY", "commit": {"author": {"name": "kraktus", "email": "kraktus@users.noreply.github.com", "date": "2022-10-15T12:57:08Z"}, "committer": {"name": "kraktus", "email": "kraktus@users.noreply.github.com", "date": "2022-10-15T12:57:08Z"}, "message": "`explicit_ty_bound` code golf", "tree": {"sha": "3cacd180ce5dc0dcffe8d8d903d64533de263489", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cacd180ce5dc0dcffe8d8d903d64533de263489"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d38175f27188274bf5d6c1e433907bc50281c616", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d38175f27188274bf5d6c1e433907bc50281c616", "html_url": "https://github.com/rust-lang/rust/commit/d38175f27188274bf5d6c1e433907bc50281c616", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d38175f27188274bf5d6c1e433907bc50281c616/comments", "author": {"login": "kraktus", "id": 56031107, "node_id": "MDQ6VXNlcjU2MDMxMTA3", "avatar_url": "https://avatars.githubusercontent.com/u/56031107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraktus", "html_url": "https://github.com/kraktus", "followers_url": "https://api.github.com/users/kraktus/followers", "following_url": "https://api.github.com/users/kraktus/following{/other_user}", "gists_url": "https://api.github.com/users/kraktus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraktus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraktus/subscriptions", "organizations_url": "https://api.github.com/users/kraktus/orgs", "repos_url": "https://api.github.com/users/kraktus/repos", "events_url": "https://api.github.com/users/kraktus/events{/privacy}", "received_events_url": "https://api.github.com/users/kraktus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kraktus", "id": 56031107, "node_id": "MDQ6VXNlcjU2MDMxMTA3", "avatar_url": "https://avatars.githubusercontent.com/u/56031107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraktus", "html_url": "https://github.com/kraktus", "followers_url": "https://api.github.com/users/kraktus/followers", "following_url": "https://api.github.com/users/kraktus/following{/other_user}", "gists_url": "https://api.github.com/users/kraktus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraktus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraktus/subscriptions", "organizations_url": "https://api.github.com/users/kraktus/orgs", "repos_url": "https://api.github.com/users/kraktus/repos", "events_url": "https://api.github.com/users/kraktus/events{/privacy}", "received_events_url": "https://api.github.com/users/kraktus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36b2685977bdd731a0ef28e12bf8ef0334507d9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/36b2685977bdd731a0ef28e12bf8ef0334507d9e", "html_url": "https://github.com/rust-lang/rust/commit/36b2685977bdd731a0ef28e12bf8ef0334507d9e"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "03460689e19ad7a5bdac313b6c2f6eade3fb7b77", "filename": "clippy_lints/src/default_numeric_fallback.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d38175f27188274bf5d6c1e433907bc50281c616/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d38175f27188274bf5d6c1e433907bc50281c616/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs?ref=d38175f27188274bf5d6c1e433907bc50281c616", "patch": "@@ -88,10 +88,9 @@ impl<'a, 'tcx> NumericFallbackVisitor<'a, 'tcx> {\n     fn check_lit(&self, lit: &Lit, lit_ty: Ty<'tcx>, emit_hir_id: HirId) {\n         if_chain! {\n                 if !in_external_macro(self.cx.sess(), lit.span);\n-                if let Some(explicit_ty_bounds) = self.ty_bounds.last();\n+                if matches!(self.ty_bounds.last(), Some(ExplicitTyBound(false)));\n                 if matches!(lit.node,\n                             LitKind::Int(_, LitIntType::Unsuffixed) | LitKind::Float(_, LitFloatType::Unsuffixed));\n-                if !explicit_ty_bounds.0;\n                 then {\n                     let (suffix, is_float) = match lit_ty.kind() {\n                         ty::Int(IntTy::I32) => (\"i32\", false),"}]}