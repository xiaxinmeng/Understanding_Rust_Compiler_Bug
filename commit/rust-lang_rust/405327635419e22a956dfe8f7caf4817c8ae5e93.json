{"sha": "405327635419e22a956dfe8f7caf4817c8ae5e93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNTMyNzYzNTQxOWUyMmE5NTZkZmU4ZjdjYWY0ODE3YzhhZTVlOTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-09T17:09:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-09T17:09:50Z"}, "message": "Auto merge of #38109 - tromey:main-subprogram, r=michaelwoerister\n\nEmit DW_AT_main_subprogram\n\nThis changes rustc to emit DW_AT_main_subprogram on the \"main\" program.\nThis lets gdb suitably stop at the user's main in response to\n\"start\" (rather than the library's main, which is what happens\ncurrently).\n\nFixes #32620\nr? michaelwoerister", "tree": {"sha": "ff15270c6e603dc05e997510737a9c8ac488cc6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff15270c6e603dc05e997510737a9c8ac488cc6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/405327635419e22a956dfe8f7caf4817c8ae5e93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/405327635419e22a956dfe8f7caf4817c8ae5e93", "html_url": "https://github.com/rust-lang/rust/commit/405327635419e22a956dfe8f7caf4817c8ae5e93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/405327635419e22a956dfe8f7caf4817c8ae5e93/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7fc53b8f0595d9b5be6a3b64d29d3cfed7c7199", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7fc53b8f0595d9b5be6a3b64d29d3cfed7c7199", "html_url": "https://github.com/rust-lang/rust/commit/e7fc53b8f0595d9b5be6a3b64d29d3cfed7c7199"}, {"sha": "b037c5211b9ba496252af5a0369b48649f91ccc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b037c5211b9ba496252af5a0369b48649f91ccc8", "html_url": "https://github.com/rust-lang/rust/commit/b037c5211b9ba496252af5a0369b48649f91ccc8"}], "stats": {"total": 75, "additions": 74, "deletions": 1}, "files": [{"sha": "5273910d1d954974a3624a279eeb53c281d8f1e2", "filename": "src/librustc_llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/405327635419e22a956dfe8f7caf4817c8ae5e93/src%2Flibrustc_llvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/405327635419e22a956dfe8f7caf4817c8ae5e93/src%2Flibrustc_llvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fffi.rs?ref=405327635419e22a956dfe8f7caf4817c8ae5e93", "patch": "@@ -468,6 +468,7 @@ pub mod debuginfo {\n             const FlagStaticMember        = (1 << 12),\n             const FlagLValueReference     = (1 << 13),\n             const FlagRValueReference     = (1 << 14),\n+            const FlagMainSubprogram      = (1 << 21),\n         }\n     }\n }"}, {"sha": "e9b592ec8fd79814ef6f5061b6aa08d3771749f8", "filename": "src/librustc_trans/debuginfo/mod.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/405327635419e22a956dfe8f7caf4817c8ae5e93/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/405327635419e22a956dfe8f7caf4817c8ae5e93/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs?ref=405327635419e22a956dfe8f7caf4817c8ae5e93", "patch": "@@ -257,6 +257,16 @@ pub fn create_function_debug_context<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n     let function_name = CString::new(name).unwrap();\n     let linkage_name = CString::new(linkage_name).unwrap();\n \n+    let mut flags = DIFlags::FlagPrototyped;\n+    match *cx.sess().entry_fn.borrow() {\n+        Some((id, _)) => {\n+            if local_id == Some(id) {\n+                flags = flags | DIFlags::FlagMainSubprogram;\n+            }\n+        }\n+        None => {}\n+    };\n+\n     let fn_metadata = unsafe {\n         llvm::LLVMRustDIBuilderCreateFunction(\n             DIB(cx),\n@@ -269,7 +279,7 @@ pub fn create_function_debug_context<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n             is_local_to_unit,\n             true,\n             scope_line as c_uint,\n-            DIFlags::FlagPrototyped,\n+            flags,\n             cx.sess().opts.optimize != config::OptLevel::No,\n             llfn,\n             template_parameters,"}, {"sha": "27233a8b075af16fd7fd1b4d4892c620f93b4ef1", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/405327635419e22a956dfe8f7caf4817c8ae5e93/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/405327635419e22a956dfe8f7caf4817c8ae5e93/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=405327635419e22a956dfe8f7caf4817c8ae5e93", "patch": "@@ -352,6 +352,7 @@ enum class LLVMRustDIFlags : uint32_t {\n   FlagStaticMember = (1 << 12),\n   FlagLValueReference = (1 << 13),\n   FlagRValueReference = (1 << 14),\n+  FlagMainSubprogram      = (1 << 21),\n   // Do not add values that are not supported by the minimum LLVM\n   // version we support!\n };\n@@ -438,6 +439,11 @@ static unsigned fromRust(LLVMRustDIFlags Flags) {\n   if (isSet(Flags & LLVMRustDIFlags::FlagRValueReference)) {\n     Result |= DINode::DIFlags::FlagRValueReference;\n   }\n+#if LLVM_RUSTLLVM || LLVM_VERSION_GE(4, 0)\n+  if (isSet(Flags & LLVMRustDIFlags::FlagMainSubprogram)) {\n+    Result |= DINode::DIFlags::FlagMainSubprogram;\n+  }\n+#endif\n \n   return Result;\n }"}, {"sha": "657f4b662f728e907a028b6b7a6bd376e18ca06c", "filename": "src/test/codegen/mainsubprogram.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/405327635419e22a956dfe8f7caf4817c8ae5e93/src%2Ftest%2Fcodegen%2Fmainsubprogram.rs", "raw_url": "https://github.com/rust-lang/rust/raw/405327635419e22a956dfe8f7caf4817c8ae5e93/src%2Ftest%2Fcodegen%2Fmainsubprogram.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fmainsubprogram.rs?ref=405327635419e22a956dfe8f7caf4817c8ae5e93", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// The minimum LLVM version is set to 3.8, but really this test\n+// depends on a patch that is was committed to upstream LLVM before\n+// 4.0; and also backported to the Rust LLVM fork.\n+\n+// ignore-tidy-linelength\n+// ignore-windows\n+// ignore-macos\n+// min-llvm-version 3.8\n+\n+// compile-flags: -g -C no-prepopulate-passes\n+\n+// CHECK-LABEL: @main\n+// CHECK: {{.*}}DISubprogram{{.*}}name: \"main\",{{.*}}DIFlagMainSubprogram{{.*}}\n+\n+pub fn main() {\n+}"}, {"sha": "cd34a1670dc7db7bd1b05f5363295cf01ff7dad3", "filename": "src/test/codegen/mainsubprogramstart.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/405327635419e22a956dfe8f7caf4817c8ae5e93/src%2Ftest%2Fcodegen%2Fmainsubprogramstart.rs", "raw_url": "https://github.com/rust-lang/rust/raw/405327635419e22a956dfe8f7caf4817c8ae5e93/src%2Ftest%2Fcodegen%2Fmainsubprogramstart.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fmainsubprogramstart.rs?ref=405327635419e22a956dfe8f7caf4817c8ae5e93", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// The minimum LLVM version is set to 3.8, but really this test\n+// depends on a patch that is was committed to upstream LLVM before\n+// 4.0; and also backported to the Rust LLVM fork.\n+\n+// ignore-tidy-linelength\n+// ignore-windows\n+// ignore-macos\n+// min-llvm-version 3.8\n+\n+// compile-flags: -g -C no-prepopulate-passes\n+\n+#![feature(start)]\n+\n+// CHECK-LABEL: @main\n+// CHECK: {{.*}}DISubprogram{{.*}}name: \"start\",{{.*}}DIFlagMainSubprogram{{.*}}\n+\n+#[start]\n+fn start(_: isize, _: *const *const u8) -> isize {\n+    return 0;\n+}"}]}