{"sha": "ca1f3e752ea8a1d59ef69de49deb68905afb2aef", "node_id": "C_kwDOAAsO6NoAKGNhMWYzZTc1MmVhOGExZDU5ZWY2OWRlNDlkZWI2ODkwNWFmYjJhZWY", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-02-23T10:38:28Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-02-23T10:38:28Z"}, "message": "Sync from rust bafe8d06e015eb00724d3d497516191d6681943f", "tree": {"sha": "92bfde4585c0ad9aedbe86a79434ff9b07e3b723", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92bfde4585c0ad9aedbe86a79434ff9b07e3b723"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca1f3e752ea8a1d59ef69de49deb68905afb2aef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca1f3e752ea8a1d59ef69de49deb68905afb2aef", "html_url": "https://github.com/rust-lang/rust/commit/ca1f3e752ea8a1d59ef69de49deb68905afb2aef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca1f3e752ea8a1d59ef69de49deb68905afb2aef/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc973aef2af4db8ddfc4e8e30f93b4e94560062c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc973aef2af4db8ddfc4e8e30f93b4e94560062c", "html_url": "https://github.com/rust-lang/rust/commit/dc973aef2af4db8ddfc4e8e30f93b4e94560062c"}, {"sha": "a063e138b6db9cd8dee2b6573d089fd4c843be7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a063e138b6db9cd8dee2b6573d089fd4c843be7f", "html_url": "https://github.com/rust-lang/rust/commit/a063e138b6db9cd8dee2b6573d089fd4c843be7f"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "deac5dfd3ec1adc43b8e2380446dba99a493eb6e", "filename": "src/inline_asm.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ca1f3e752ea8a1d59ef69de49deb68905afb2aef/src%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca1f3e752ea8a1d59ef69de49deb68905afb2aef/src%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finline_asm.rs?ref=ca1f3e752ea8a1d59ef69de49deb68905afb2aef", "patch": "@@ -106,6 +106,7 @@ pub(crate) fn codegen_inline_asm<'tcx>(\n     let mut asm_gen = InlineAssemblyGenerator {\n         tcx: fx.tcx,\n         arch: fx.tcx.sess.asm_arch.unwrap(),\n+        enclosing_def_id: fx.instance.def_id(),\n         template,\n         operands,\n         options,\n@@ -169,6 +170,7 @@ pub(crate) fn codegen_inline_asm<'tcx>(\n struct InlineAssemblyGenerator<'a, 'tcx> {\n     tcx: TyCtxt<'tcx>,\n     arch: InlineAsmArch,\n+    enclosing_def_id: DefId,\n     template: &'a [InlineAsmTemplatePiece],\n     operands: &'a [InlineAsmOperand<'tcx>],\n     options: InlineAsmOptions,\n@@ -182,7 +184,12 @@ struct InlineAssemblyGenerator<'a, 'tcx> {\n impl<'tcx> InlineAssemblyGenerator<'_, 'tcx> {\n     fn allocate_registers(&mut self) {\n         let sess = self.tcx.sess;\n-        let map = allocatable_registers(self.arch, &sess.target_features, &sess.target);\n+        let map = allocatable_registers(\n+            self.arch,\n+            sess.relocation_model(),\n+            self.tcx.asm_target_features(self.enclosing_def_id),\n+            &sess.target,\n+        );\n         let mut allocated = FxHashMap::<_, (bool, bool)>::default();\n         let mut regs = vec![None; self.operands.len()];\n \n@@ -313,14 +320,9 @@ impl<'tcx> InlineAssemblyGenerator<'_, 'tcx> {\n         let mut new_slot = |x| new_slot_fn(&mut slot_size, x);\n \n         // Allocate stack slots for saving clobbered registers\n-        let abi_clobber = InlineAsmClobberAbi::parse(\n-            self.arch,\n-            &self.tcx.sess.target_features,\n-            &self.tcx.sess.target,\n-            sym::C,\n-        )\n-        .unwrap()\n-        .clobbered_regs();\n+        let abi_clobber = InlineAsmClobberAbi::parse(self.arch, &self.tcx.sess.target, sym::C)\n+            .unwrap()\n+            .clobbered_regs();\n         for (i, reg) in self.registers.iter().enumerate().filter_map(|(i, r)| r.map(|r| (i, r))) {\n             let mut need_save = true;\n             // If the register overlaps with a register clobbered by function call, then"}]}