{"sha": "6d5f3922f7cf6d6c02521ad947abd63ab4764fca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkNWYzOTIyZjdjZjZkNmMwMjUyMWFkOTQ3YWJkNjNhYjQ3NjRmY2E=", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-05-02T10:31:11Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-05-02T10:31:11Z"}, "message": "Add unwrap block assist #4156\n\nSigned-off-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "c7d8fa0cf5ecc972c633f112c0dbc8e56b5b6040", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7d8fa0cf5ecc972c633f112c0dbc8e56b5b6040"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d5f3922f7cf6d6c02521ad947abd63ab4764fca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d5f3922f7cf6d6c02521ad947abd63ab4764fca", "html_url": "https://github.com/rust-lang/rust/commit/6d5f3922f7cf6d6c02521ad947abd63ab4764fca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d5f3922f7cf6d6c02521ad947abd63ab4764fca/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b40876b993ab30421624b831cb03b4042eb0142", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b40876b993ab30421624b831cb03b4042eb0142", "html_url": "https://github.com/rust-lang/rust/commit/0b40876b993ab30421624b831cb03b4042eb0142"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "58649c47eb6dac68a83f6489be3984ecb84a2db7", "filename": "crates/ra_assists/src/handlers/unwrap_block.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6d5f3922f7cf6d6c02521ad947abd63ab4764fca/crates%2Fra_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d5f3922f7cf6d6c02521ad947abd63ab4764fca/crates%2Fra_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Funwrap_block.rs?ref=6d5f3922f7cf6d6c02521ad947abd63ab4764fca", "patch": "@@ -76,12 +76,11 @@ pub(crate) fn unwrap_block(ctx: AssistCtx) -> Option<Assist> {\n     })\n }\n \n-fn extract_expr(cursor_range: TextRange, block_expr: BlockExpr) -> Option<Expr> {\n-    let block = block_expr.block()?;\n+fn extract_expr(cursor_range: TextRange, block: BlockExpr) -> Option<Expr> {\n     let cursor_in_range = block.l_curly_token()?.text_range().contains_range(cursor_range);\n \n     if cursor_in_range {\n-        Some(unwrap_trivial_block(block_expr))\n+        Some(unwrap_trivial_block(block))\n     } else {\n         None\n     }"}]}