{"sha": "ddc2598230e4bb67d8a30d3a5cd8431c1cecb63e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkYzI1OTgyMzBlNGJiNjdkOGEzMGQzYTVjZDg0MzFjMWNlY2I2M2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-16T06:44:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-16T06:44:26Z"}, "message": "Auto merge of #7093 - Jarcho:single_match_fp, r=llogiq\n\nFix `single_match`\n\nfixes: #7038\nchangelog: Don't suggest an equality check for types which don't implement `PartialEq` in `single_match`", "tree": {"sha": "dc8b89c9200e990c9f8d1508044323dcad9abeec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc8b89c9200e990c9f8d1508044323dcad9abeec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddc2598230e4bb67d8a30d3a5cd8431c1cecb63e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddc2598230e4bb67d8a30d3a5cd8431c1cecb63e", "html_url": "https://github.com/rust-lang/rust/commit/ddc2598230e4bb67d8a30d3a5cd8431c1cecb63e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddc2598230e4bb67d8a30d3a5cd8431c1cecb63e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faa97568a0ed3804339bec3becc2dda54ccdcafc", "url": "https://api.github.com/repos/rust-lang/rust/commits/faa97568a0ed3804339bec3becc2dda54ccdcafc", "html_url": "https://github.com/rust-lang/rust/commit/faa97568a0ed3804339bec3becc2dda54ccdcafc"}, {"sha": "9a55c0c1763cc5894ce1dbf1c40d03119e3de5f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a55c0c1763cc5894ce1dbf1c40d03119e3de5f3", "html_url": "https://github.com/rust-lang/rust/commit/9a55c0c1763cc5894ce1dbf1c40d03119e3de5f3"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "e4d1451b369182a976442445a42fbd26cdf1330d", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ddc2598230e4bb67d8a30d3a5cd8431c1cecb63e/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddc2598230e4bb67d8a30d3a5cd8431c1cecb63e/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=ddc2598230e4bb67d8a30d3a5cd8431c1cecb63e", "patch": "@@ -738,8 +738,11 @@ fn report_single_match_single_pattern(\n     let (msg, sugg) = if_chain! {\n         if let PatKind::Path(_) | PatKind::Lit(_) = pat.kind;\n         let (ty, ty_ref_count) = peel_mid_ty_refs(cx.typeck_results().expr_ty(ex));\n-        if let Some(trait_id) = cx.tcx.lang_items().structural_peq_trait();\n-        if ty.is_integral() || ty.is_char() || ty.is_str() || implements_trait(cx, ty, trait_id, &[]);\n+        if let Some(spe_trait_id) = cx.tcx.lang_items().structural_peq_trait();\n+        if let Some(pe_trait_id) = cx.tcx.lang_items().eq_trait();\n+        if ty.is_integral() || ty.is_char() || ty.is_str()\n+            || (implements_trait(cx, ty, spe_trait_id, &[])\n+                && implements_trait(cx, ty, pe_trait_id, &[ty.into()]));\n         then {\n             // scrutinee derives PartialEq and the pattern is a constant.\n             let pat_ref_count = match pat.kind {"}, {"sha": "b1819e08d53bf5dc9054e41cde25c580077082c5", "filename": "tests/ui/single_match.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ddc2598230e4bb67d8a30d3a5cd8431c1cecb63e/tests%2Fui%2Fsingle_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddc2598230e4bb67d8a30d3a5cd8431c1cecb63e/tests%2Fui%2Fsingle_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match.rs?ref=ddc2598230e4bb67d8a30d3a5cd8431c1cecb63e", "patch": "@@ -135,6 +135,14 @@ fn if_suggestion() {\n         Bar::A => println!(),\n         _ => (),\n     }\n+\n+    // issue #7038\n+    struct X;\n+    let x = Some(X);\n+    match x {\n+        None => println!(),\n+        _ => (),\n+    };\n }\n \n macro_rules! single_match {"}, {"sha": "9ef2a8668a6faffdcb9e92757bc742b597e0db1a", "filename": "tests/ui/single_match.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ddc2598230e4bb67d8a30d3a5cd8431c1cecb63e/tests%2Fui%2Fsingle_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ddc2598230e4bb67d8a30d3a5cd8431c1cecb63e/tests%2Fui%2Fsingle_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match.stderr?ref=ddc2598230e4bb67d8a30d3a5cd8431c1cecb63e", "patch": "@@ -119,5 +119,14 @@ LL | |         _ => (),\n LL | |     }\n    | |_____^ help: try this: `if let Bar::A = x { println!() }`\n \n-error: aborting due to 12 previous errors\n+error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n+  --> $DIR/single_match.rs:142:5\n+   |\n+LL | /     match x {\n+LL | |         None => println!(),\n+LL | |         _ => (),\n+LL | |     };\n+   | |_____^ help: try this: `if let None = x { println!() }`\n+\n+error: aborting due to 13 previous errors\n "}]}