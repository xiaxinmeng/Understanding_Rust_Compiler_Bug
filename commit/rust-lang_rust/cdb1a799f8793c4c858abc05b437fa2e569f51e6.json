{"sha": "cdb1a799f8793c4c858abc05b437fa2e569f51e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkYjFhNzk5Zjg3OTNjNGM4NThhYmMwNWI0MzdmYTJlNTY5ZjUxZTY=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-11-17T08:31:34Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-11-18T06:48:29Z"}, "message": "Add VecDeque::resize_with", "tree": {"sha": "ea62aaffd2f6b923c2e3347832bd363230faebb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea62aaffd2f6b923c2e3347832bd363230faebb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdb1a799f8793c4c858abc05b437fa2e569f51e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdb1a799f8793c4c858abc05b437fa2e569f51e6", "html_url": "https://github.com/rust-lang/rust/commit/cdb1a799f8793c4c858abc05b437fa2e569f51e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdb1a799f8793c4c858abc05b437fa2e569f51e6/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee821736ccdf1d370bf2c906ce3c133c0fc295d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee821736ccdf1d370bf2c906ce3c133c0fc295d4", "html_url": "https://github.com/rust-lang/rust/commit/ee821736ccdf1d370bf2c906ce3c133c0fc295d4"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "cbf104a8fcde9ac296a66fbd533eb54779fcf19b", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/cdb1a799f8793c4c858abc05b437fa2e569f51e6/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdb1a799f8793c4c858abc05b437fa2e569f51e6/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=cdb1a799f8793c4c858abc05b437fa2e569f51e6", "patch": "@@ -19,7 +19,7 @@\n \n use core::cmp::Ordering;\n use core::fmt;\n-use core::iter::{repeat, FromIterator, FusedIterator};\n+use core::iter::{repeat, repeat_with, FromIterator, FusedIterator};\n use core::mem;\n use core::ops::Bound::{Excluded, Included, Unbounded};\n use core::ops::{Index, IndexMut, RangeBounds};\n@@ -1920,6 +1920,44 @@ impl<T: Clone> VecDeque<T> {\n             self.truncate(new_len);\n         }\n     }\n+\n+    /// Modifies the `VecDeque` in-place so that `len()` is equal to `new_len`,\n+    /// either by removing excess elements from the back or by appending\n+    /// elements generated by calling `generator` to the back.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(vec_resize_with)]\n+    ///\n+    /// use std::collections::VecDeque;\n+    ///\n+    /// let mut buf = VecDeque::new();\n+    /// buf.push_back(5);\n+    /// buf.push_back(10);\n+    /// buf.push_back(15);\n+    /// assert_eq!(buf, [5, 10, 15]);\n+    ///\n+    /// buf.resize_with(5, Default::default);\n+    /// assert_eq!(buf, [5, 10, 15, 0, 0]);\n+    ///\n+    /// buf.resize_with(2, || unreachable!());\n+    /// assert_eq!(buf, [5, 10]);\n+    ///\n+    /// let mut state = 100;\n+    /// buf.resize_with(5, || { state += 1; state });\n+    /// assert_eq!(buf, [5, 10, 101, 102, 103]);\n+    /// ```\n+    #[unstable(feature = \"vec_resize_with\", issue = \"41758\")]\n+    pub fn resize_with(&mut self, new_len: usize, generator: impl FnMut()->T) {\n+        let len = self.len();\n+\n+        if new_len > len {\n+            self.extend(repeat_with(generator).take(new_len - len))\n+        } else {\n+            self.truncate(new_len);\n+        }\n+    }\n }\n \n /// Returns the index in the underlying buffer for a given logical element index."}]}