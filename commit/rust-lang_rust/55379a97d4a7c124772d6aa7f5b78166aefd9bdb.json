{"sha": "55379a97d4a7c124772d6aa7f5b78166aefd9bdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1Mzc5YTk3ZDRhN2MxMjQ3NzJkNmFhN2Y1Yjc4MTY2YWVmZDliZGI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-11T22:12:49Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-11T22:12:49Z"}, "message": "Use the correct function type for external bare functions\n\nIssue #1022", "tree": {"sha": "86875a43de220c737476a5804cd44215251c79d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86875a43de220c737476a5804cd44215251c79d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55379a97d4a7c124772d6aa7f5b78166aefd9bdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55379a97d4a7c124772d6aa7f5b78166aefd9bdb", "html_url": "https://github.com/rust-lang/rust/commit/55379a97d4a7c124772d6aa7f5b78166aefd9bdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55379a97d4a7c124772d6aa7f5b78166aefd9bdb/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8fb86d2e3e98feeb6ad419d1a4a43b444dac491", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8fb86d2e3e98feeb6ad419d1a4a43b444dac491", "html_url": "https://github.com/rust-lang/rust/commit/d8fb86d2e3e98feeb6ad419d1a4a43b444dac491"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6b9d3e96bf5f23e5b74b4aeb3ffbf8e95acbabfc", "filename": "src/comp/metadata/tydecode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55379a97d4a7c124772d6aa7f5b78166aefd9bdb/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55379a97d4a7c124772d6aa7f5b78166aefd9bdb/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftydecode.rs?ref=55379a97d4a7c124772d6aa7f5b78166aefd9bdb", "patch": "@@ -247,7 +247,7 @@ fn parse_ty(st: @pstate, sd: str_def) -> ty::t {\n       }\n       'f' {\n         let func = parse_ty_fn(st, sd);\n-        ret ty::mk_fn(st.tcx, ast::proto_fn, func.args, func.ty, func.cf,\n+        ret ty::mk_fn(st.tcx, ast::proto_bare, func.args, func.ty, func.cf,\n                       func.cs);\n       }\n       'W' {"}]}