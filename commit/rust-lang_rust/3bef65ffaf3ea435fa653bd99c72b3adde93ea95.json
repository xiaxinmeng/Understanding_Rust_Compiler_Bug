{"sha": "3bef65ffaf3ea435fa653bd99c72b3adde93ea95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZWY2NWZmYWYzZWE0MzVmYTY1M2JkOTljNzJiM2FkZGU5M2VhOTU=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-22T23:02:09Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-22T23:02:09Z"}, "message": "Remove `name` field from ExternalCrate", "tree": {"sha": "9a589148bbe07e33c271952bca7e922d578c679d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a589148bbe07e33c271952bca7e922d578c679d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bef65ffaf3ea435fa653bd99c72b3adde93ea95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bef65ffaf3ea435fa653bd99c72b3adde93ea95", "html_url": "https://github.com/rust-lang/rust/commit/3bef65ffaf3ea435fa653bd99c72b3adde93ea95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bef65ffaf3ea435fa653bd99c72b3adde93ea95/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5407a69aa4a816fdfd9cf6f659643f78659c1f88", "url": "https://api.github.com/repos/rust-lang/rust/commits/5407a69aa4a816fdfd9cf6f659643f78659c1f88", "html_url": "https://github.com/rust-lang/rust/commit/5407a69aa4a816fdfd9cf6f659643f78659c1f88"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "2ea119626fe424e4b0deac4bd373f352ae715b04", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3bef65ffaf3ea435fa653bd99c72b3adde93ea95/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bef65ffaf3ea435fa653bd99c72b3adde93ea95/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=3bef65ffaf3ea435fa653bd99c72b3adde93ea95", "patch": "@@ -194,7 +194,6 @@ impl Clean<ExternalCrate> for CrateNum {\n \n         ExternalCrate {\n             crate_num: *self,\n-            name: tcx.crate_name(*self),\n             attrs: tcx.get_attrs(root).clean(cx),\n             primitives,\n             keywords,"}, {"sha": "a28e94eb2c8c5f0485a5c4904962067a5490197f", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3bef65ffaf3ea435fa653bd99c72b3adde93ea95/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bef65ffaf3ea435fa653bd99c72b3adde93ea95/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=3bef65ffaf3ea435fa653bd99c72b3adde93ea95", "patch": "@@ -73,7 +73,6 @@ crate struct TraitWithExtraInfo {\n #[derive(Clone, Debug)]\n crate struct ExternalCrate {\n     crate crate_num: CrateNum,\n-    crate name: Symbol,\n     crate attrs: Attributes,\n     crate primitives: ThinVec<(DefId, PrimitiveType)>,\n     crate keywords: ThinVec<(DefId, Symbol)>,\n@@ -85,6 +84,10 @@ impl ExternalCrate {\n         let krate_span = tcx.def_span(root);\n         tcx.sess.source_map().span_to_filename(krate_span)\n     }\n+\n+    crate fn name(&self, tcx: TyCtxt<'_>) -> Symbol {\n+        tcx.crate_name(self.crate_num)\n+    }\n }\n \n /// Anything with a source location and set of attributes and, optionally, a"}, {"sha": "6f230e27534af71d1d6e79f003b04f3279711689", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3bef65ffaf3ea435fa653bd99c72b3adde93ea95/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bef65ffaf3ea435fa653bd99c72b3adde93ea95/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=3bef65ffaf3ea435fa653bd99c72b3adde93ea95", "patch": "@@ -56,7 +56,8 @@ crate fn krate(cx: &mut DocContext<'_>) -> Crate {\n \n     let local_crate = LOCAL_CRATE.clean(cx);\n     let src = local_crate.src(cx.tcx);\n-    let ExternalCrate { name, primitives, keywords, .. } = local_crate;\n+    let name = local_crate.name(cx.tcx);\n+    let ExternalCrate { primitives, keywords, .. } = local_crate;\n     {\n         let m = match *module.kind {\n             ItemKind::ModuleItem(ref mut m) => m,"}, {"sha": "5c011c5a13c191e091dc11384c79462e2bd001d2", "filename": "src/librustdoc/formats/cache.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3bef65ffaf3ea435fa653bd99c72b3adde93ea95/src%2Flibrustdoc%2Fformats%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bef65ffaf3ea435fa653bd99c72b3adde93ea95/src%2Flibrustdoc%2Fformats%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Fcache.rs?ref=3bef65ffaf3ea435fa653bd99c72b3adde93ea95", "patch": "@@ -162,12 +162,13 @@ impl Cache {\n                 },\n                 _ => PathBuf::new(),\n             };\n-            let extern_url = extern_html_root_urls.get(&*e.name.as_str()).map(|u| &**u);\n+            let name = e.name(tcx);\n+            let extern_url = extern_html_root_urls.get(&*name.as_str()).map(|u| &**u);\n             self.extern_locations\n-                .insert(n, (e.name, src_root, extern_location(e, extern_url, &dst)));\n+                .insert(n, (name, src_root, extern_location(e, extern_url, &dst, tcx)));\n \n             let did = DefId { krate: n, index: CRATE_DEF_INDEX };\n-            self.external_paths.insert(did, (vec![e.name.to_string()], ItemType::Module));\n+            self.external_paths.insert(did, (vec![name.to_string()], ItemType::Module));\n         }\n \n         // Cache where all known primitives have their documentation located."}, {"sha": "b8544a0f439a7e757fb2eb133da253dacaa3ab28", "filename": "src/librustdoc/html/render/cache.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3bef65ffaf3ea435fa653bd99c72b3adde93ea95/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bef65ffaf3ea435fa653bd99c72b3adde93ea95/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs?ref=3bef65ffaf3ea435fa653bd99c72b3adde93ea95", "patch": "@@ -31,10 +31,11 @@ crate fn extern_location(\n     e: &clean::ExternalCrate,\n     extern_url: Option<&str>,\n     dst: &Path,\n+    tcx: TyCtxt<'_>,\n ) -> ExternalLocation {\n     use ExternalLocation::*;\n     // See if there's documentation generated into the local directory\n-    let local_location = dst.join(&*e.name.as_str());\n+    let local_location = dst.join(&*e.name(tcx).as_str());\n     if local_location.is_dir() {\n         return Local;\n     }"}]}