{"sha": "df6ec4f8ea4bc9d56ec87a2410779dcd47221f79", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmNmVjNGY4ZWE0YmM5ZDU2ZWM4N2EyNDEwNzc5ZGNkNDcyMjFmNzk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-15T01:53:12Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-15T16:48:59Z"}, "message": "rustc: Pretty-print outer attributes of items\n\nIssue #487", "tree": {"sha": "b9c58557ced5b599ebe6cd3bff5d4715bfa5b8ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9c58557ced5b599ebe6cd3bff5d4715bfa5b8ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df6ec4f8ea4bc9d56ec87a2410779dcd47221f79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df6ec4f8ea4bc9d56ec87a2410779dcd47221f79", "html_url": "https://github.com/rust-lang/rust/commit/df6ec4f8ea4bc9d56ec87a2410779dcd47221f79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df6ec4f8ea4bc9d56ec87a2410779dcd47221f79/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c6d7c3916fade4549caf4dd9380d23fc3d3d040", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c6d7c3916fade4549caf4dd9380d23fc3d3d040", "html_url": "https://github.com/rust-lang/rust/commit/6c6d7c3916fade4549caf4dd9380d23fc3d3d040"}], "stats": {"total": 62, "additions": 47, "deletions": 15}, "files": [{"sha": "e8c960fc6346c4c537a982436793c01b62facba1", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 47, "deletions": 15, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/df6ec4f8ea4bc9d56ec87a2410779dcd47221f79/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df6ec4f8ea4bc9d56ec87a2410779dcd47221f79/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=df6ec4f8ea4bc9d56ec87a2410779dcd47221f79", "patch": "@@ -257,7 +257,8 @@ fn print_item(&ps s, &@ast::item item) {\n     hardbreak(s.s);\n     maybe_print_comment(s, item.span.lo);\n     alt (item.node) {\n-        case (ast::item_const(?id, ?ty, ?expr, _, _, _)) {\n+        case (ast::item_const(?id, ?ty, ?expr, ?attrs, _, _)) {\n+            print_outer_attributes(s, attrs);\n             head(s, \"const\");\n             print_type(s, *ty);\n             space(s.s);\n@@ -268,19 +269,22 @@ fn print_item(&ps s, &@ast::item item) {\n             word(s.s, \";\");\n             end(s); // end the outer cbox\n         }\n-        case (ast::item_fn(?name,?_fn,?typarams,_,_,_)) {\n+        case (ast::item_fn(?name,?_fn,?typarams,?attrs,_,_)) {\n+            print_outer_attributes(s, attrs);\n             print_fn(s, _fn.decl, _fn.proto, name, typarams);\n             word(s.s, \" \");\n             print_block(s, _fn.body);\n         }\n-        case (ast::item_mod(?id,?_mod,_,_)) {\n+        case (ast::item_mod(?id,?_mod,?attrs,_)) {\n+            print_outer_attributes(s, attrs);\n             head(s, \"mod\");\n             word_nbsp(s, id);\n             bopen(s);\n             for (@ast::item itm in _mod.items) {print_item(s, itm);}\n             bclose(s, item.span);\n         }\n-        case (ast::item_native_mod(?id,?nmod,_,_)) {\n+        case (ast::item_native_mod(?id,?nmod,?attrs,_)) {\n+            print_outer_attributes(s, attrs);\n             head(s, \"native\");\n             alt (nmod.abi) {\n                 case (ast::native_abi_rust) {word_nbsp(s, \"\\\"rust\\\"\");}\n@@ -317,7 +321,8 @@ fn print_item(&ps s, &@ast::item item) {\n             }\n             bclose(s, item.span);\n         }\n-        case (ast::item_ty(?id,?ty,?params,_,_,_)) {\n+        case (ast::item_ty(?id,?ty,?params,?attrs,_,_)) {\n+            print_outer_attributes(s, attrs);\n             ibox(s, indent_unit);\n             ibox(s, 0u);\n             word_nbsp(s, \"type\");\n@@ -331,7 +336,8 @@ fn print_item(&ps s, &@ast::item item) {\n             end(s); // end the outer ibox\n             break_offset(s.s, 0u, 0);\n         }\n-        case (ast::item_tag(?id,?variants,?params,_,_,_)) {\n+        case (ast::item_tag(?id,?variants,?params,?attrs,_,_)) {\n+            print_outer_attributes(s, attrs);\n             head(s, \"tag\");\n             word(s.s, id);\n             print_type_params(s, params);\n@@ -354,7 +360,8 @@ fn print_item(&ps s, &@ast::item item) {\n             }\n             bclose(s, item.span);\n         }\n-        case (ast::item_obj(?id,?_obj,?params,_,_,_)) {\n+        case (ast::item_obj(?id,?_obj,?params,?attrs,_,_)) {\n+            print_outer_attributes(s, attrs);\n             head(s, \"obj\");\n             word(s.s, id);\n             print_type_params(s, params);\n@@ -401,6 +408,30 @@ fn print_item(&ps s, &@ast::item item) {\n     }\n }\n \n+fn print_outer_attributes(&ps s, vec[ast::attribute] attrs) {\n+    auto count = 0;\n+    for (ast::attribute attr in attrs) {\n+        alt (attr.node.style) {\n+            case (ast::attr_outer) {\n+                print_attribute(s, attr);\n+                count += 1;\n+            }\n+            case (_) { /* fallthrough */ }\n+        }\n+    }\n+    if (count > 0) {\n+        hardbreak(s.s);\n+    }\n+}\n+\n+fn print_attribute(&ps s, &ast::attribute attr) {\n+    hardbreak(s.s);\n+    maybe_print_comment(s, attr.span.lo);\n+    word(s.s, \"#[\");\n+    print_meta_item(s, @attr.node.value);\n+    word(s.s, \"]\");\n+}\n+\n fn print_stmt(&ps s, &ast::stmt st) {\n     maybe_print_comment(s, st.span.lo);\n     alt (st.node) {\n@@ -987,6 +1018,14 @@ fn print_type_params(&ps s, &vec[ast::ty_param] params) {\n     }\n }\n \n+fn print_meta_item(&ps s, &@ast::meta_item item) {\n+    ibox(s, indent_unit);\n+    word_space(s, item.node.key);\n+    word_space(s, \"=\");\n+    print_string(s, item.node.value);\n+    end(s);\n+}\n+\n fn print_view_item(&ps s, &@ast::view_item item) {\n     hardbreak(s.s);\n     maybe_print_comment(s, item.span.lo);\n@@ -996,14 +1035,7 @@ fn print_view_item(&ps s, &@ast::view_item item) {\n             word(s.s, id);\n             if (vec::len(mta) > 0u) {\n                 popen(s);\n-                fn print_meta(&ps s, &@ast::meta_item item) {\n-                    ibox(s, indent_unit);\n-                    word_space(s, item.node.key);\n-                    word_space(s, \"=\");\n-                    print_string(s, item.node.value);\n-                    end(s);\n-                }\n-                commasep(s, consistent, mta, print_meta);\n+                commasep(s, consistent, mta, print_meta_item);\n                 pclose(s);\n             }\n         }"}]}