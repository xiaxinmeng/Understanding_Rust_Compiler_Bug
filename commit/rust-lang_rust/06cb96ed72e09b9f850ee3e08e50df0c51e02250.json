{"sha": "06cb96ed72e09b9f850ee3e08e50df0c51e02250", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2Y2I5NmVkNzJlMDliOWY4NTBlZTNlMDhlNTBkZjBjNTFlMDIyNTA=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-18T13:28:18Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-18T13:37:45Z"}, "message": "Clean up imports", "tree": {"sha": "b646453f45c1ecbc5c1da684754842dec0921401", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b646453f45c1ecbc5c1da684754842dec0921401"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06cb96ed72e09b9f850ee3e08e50df0c51e02250", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06cb96ed72e09b9f850ee3e08e50df0c51e02250", "html_url": "https://github.com/rust-lang/rust/commit/06cb96ed72e09b9f850ee3e08e50df0c51e02250", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06cb96ed72e09b9f850ee3e08e50df0c51e02250/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b", "html_url": "https://github.com/rust-lang/rust/commit/f4b80394d7b2fd24b3d3a1a3eeea2e22ddc8974b"}], "stats": {"total": 49, "additions": 19, "deletions": 30}, "files": [{"sha": "d37f77cf6cc32cf10a3a4af305055441450dffe5", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=06cb96ed72e09b9f850ee3e08e50df0c51e02250", "patch": "@@ -5,7 +5,6 @@ use crate::utils::{\n use if_chain::if_chain;\n use rustc::hir::map::Map;\n use rustc_errors::Applicability;\n-use rustc_hir::intravisit;\n use rustc_hir::intravisit::*;\n use rustc_hir::*;\n use rustc_lint::{LateContext, LateLintPass};\n@@ -60,7 +59,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NonminimalBool {\n     fn check_fn(\n         &mut self,\n         cx: &LateContext<'a, 'tcx>,\n-        _: intravisit::FnKind<'tcx>,\n+        _: FnKind<'tcx>,\n         _: &'tcx FnDecl<'_>,\n         body: &'tcx Body<'_>,\n         _: Span,"}, {"sha": "5a79848c12877d458fe573dc6934400a39bb358a", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=06cb96ed72e09b9f850ee3e08e50df0c51e02250", "patch": "@@ -11,7 +11,6 @@ use rustc_hir::*;\n use rustc_lint::LateContext;\n use rustc_span::symbol::Symbol;\n use std::cmp::Ordering::{self, Equal};\n-use std::cmp::PartialOrd;\n use std::convert::TryInto;\n use std::hash::{Hash, Hasher};\n use syntax::ast::{FloatTy, LitKind};"}, {"sha": "73bd7b3a143cbb562bfd629ee1c1a59fe7318832", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=06cb96ed72e09b9f850ee3e08e50df0c51e02250", "patch": "@@ -1,7 +1,6 @@\n use rustc::ty::layout::LayoutOf;\n use rustc::ty::{self, Ty};\n-use rustc_hir::intravisit as visit;\n-use rustc_hir::HirIdSet;\n+use rustc_hir::intravisit;\n use rustc_hir::{self, *};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, LateLintPass};\n@@ -54,7 +53,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BoxedLocal {\n     fn check_fn(\n         &mut self,\n         cx: &LateContext<'a, 'tcx>,\n-        _: visit::FnKind<'tcx>,\n+        _: intravisit::FnKind<'tcx>,\n         _: &'tcx FnDecl<'_>,\n         body: &'tcx Body<'_>,\n         _: Span,"}, {"sha": "ac9442e9607822fd1525363bb46942d63a7d8fc3", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=06cb96ed72e09b9f850ee3e08e50df0c51e02250", "patch": "@@ -1,9 +1,7 @@\n //! lint on indexing and slicing operations\n \n use crate::consts::{constant, Constant};\n-use crate::utils;\n-use crate::utils::higher;\n-use crate::utils::higher::Range;\n+use crate::utils::{higher, span_lint, span_lint_and_help};\n use rustc::ty;\n use rustc_hir::*;\n use rustc_lint::{LateContext, LateLintPass};\n@@ -100,7 +98,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IndexingSlicing {\n \n                     if let (Some(start), _) = const_range {\n                         if start > size {\n-                            utils::span_lint(\n+                            span_lint(\n                                 cx,\n                                 OUT_OF_BOUNDS_INDEXING,\n                                 range.start.map_or(expr.span, |start| start.span),\n@@ -112,7 +110,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IndexingSlicing {\n \n                     if let (_, Some(end)) = const_range {\n                         if end > size {\n-                            utils::span_lint(\n+                            span_lint(\n                                 cx,\n                                 OUT_OF_BOUNDS_INDEXING,\n                                 range.end.map_or(expr.span, |end| end.span),\n@@ -136,7 +134,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IndexingSlicing {\n                     (None, None) => return, // [..] is ok.\n                 };\n \n-                utils::span_lint_and_help(cx, INDEXING_SLICING, expr.span, \"slicing may panic.\", help_msg);\n+                span_lint_and_help(cx, INDEXING_SLICING, expr.span, \"slicing may panic.\", help_msg);\n             } else {\n                 // Catchall non-range index, i.e., [n] or [n << m]\n                 if let ty::Array(..) = ty.kind {\n@@ -147,7 +145,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IndexingSlicing {\n                     }\n                 }\n \n-                utils::span_lint_and_help(\n+                span_lint_and_help(\n                     cx,\n                     INDEXING_SLICING,\n                     expr.span,\n@@ -163,7 +161,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IndexingSlicing {\n /// the range. If the start or end is not constant, None is returned.\n fn to_const_range<'a, 'tcx>(\n     cx: &LateContext<'a, 'tcx>,\n-    range: Range<'_>,\n+    range: higher::Range<'_>,\n     array_size: u128,\n ) -> (Option<u128>, Option<u128>) {\n     let s = range.start.map(|expr| constant(cx, cx.tables, expr).map(|(c, _)| c));"}, {"sha": "393fbd2aaefc9e5a5a18bdd7545e615c5c64a488", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=06cb96ed72e09b9f850ee3e08e50df0c51e02250", "patch": "@@ -18,7 +18,6 @@ use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::Applicability;\n use rustc_hir::def::{DefKind, Res};\n-use rustc_hir::def_id;\n use rustc_hir::intravisit::{walk_block, walk_expr, walk_pat, walk_stmt, NestedVisitorMap, Visitor};\n use rustc_hir::*;\n use rustc_infer::infer::TyCtxtInferExt;"}, {"sha": "d868253b85cd9c12498900fbf2d2583d973d1ebe", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=06cb96ed72e09b9f850ee3e08e50df0c51e02250", "patch": "@@ -8,7 +8,6 @@ use crate::utils::{\n use if_chain::if_chain;\n use rustc::ty;\n use rustc_errors::Applicability;\n-use rustc_hir::QPath;\n use rustc_hir::*;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};"}, {"sha": "ffc59d43750e043974eb5f6a1dfb60381d66662f", "filename": "clippy_lints/src/ptr_offset_with_cast.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs?ref=06cb96ed72e09b9f850ee3e08e50df0c51e02250", "patch": "@@ -1,4 +1,4 @@\n-use crate::utils;\n+use crate::utils::{snippet_opt, span_lint, span_lint_and_sugg};\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n@@ -59,7 +59,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for PtrOffsetWithCast {\n \n         let msg = format!(\"use of `{}` with a `usize` casted to an `isize`\", method);\n         if let Some(sugg) = build_suggestion(cx, method, receiver_expr, cast_lhs_expr) {\n-            utils::span_lint_and_sugg(\n+            span_lint_and_sugg(\n                 cx,\n                 PTR_OFFSET_WITH_CAST,\n                 expr.span,\n@@ -69,7 +69,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for PtrOffsetWithCast {\n                 Applicability::MachineApplicable,\n             );\n         } else {\n-            utils::span_lint(cx, PTR_OFFSET_WITH_CAST, expr.span, &msg);\n+            span_lint(cx, PTR_OFFSET_WITH_CAST, expr.span, &msg);\n         }\n     }\n }\n@@ -119,8 +119,8 @@ fn build_suggestion<'a, 'tcx>(\n     receiver_expr: &Expr<'_>,\n     cast_lhs_expr: &Expr<'_>,\n ) -> Option<String> {\n-    let receiver = utils::snippet_opt(cx, receiver_expr.span)?;\n-    let cast_lhs = utils::snippet_opt(cx, cast_lhs_expr.span)?;\n+    let receiver = snippet_opt(cx, receiver_expr.span)?;\n+    let cast_lhs = snippet_opt(cx, cast_lhs_expr.span)?;\n     Some(format!(\"{}.{}({})\", receiver, method.suggestion(), cast_lhs))\n }\n "}, {"sha": "bbb883aaf328719555988ccfa567131f07399061", "filename": "clippy_lints/src/temporary_assignment.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftemporary_assignment.rs?ref=06cb96ed72e09b9f850ee3e08e50df0c51e02250", "patch": "@@ -1,5 +1,4 @@\n-use crate::utils::is_adjusted;\n-use crate::utils::span_lint;\n+use crate::utils::{is_adjusted, span_lint};\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "759feafc75b7fd8d4351245b98af0c27da619915", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=06cb96ed72e09b9f850ee3e08e50df0c51e02250", "patch": "@@ -11,12 +11,10 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::*;\n use rustc_lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass};\n-use rustc_session::declare_tool_lint;\n-use rustc_session::{declare_lint_pass, impl_lint_pass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::{Span, Spanned};\n use rustc_span::symbol::SymbolStr;\n-use syntax::ast;\n-use syntax::ast::{Crate as AstCrate, ItemKind, LitKind, Name};\n+use syntax::ast::{Crate as AstCrate, ItemKind, LitKind, Name, NodeId};\n use syntax::visit::FnKind;\n \n declare_clippy_lint! {\n@@ -380,7 +378,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for OuterExpnDataPass {\n declare_lint_pass!(ProduceIce => [PRODUCE_ICE]);\n \n impl EarlyLintPass for ProduceIce {\n-    fn check_fn(&mut self, _: &EarlyContext<'_>, fn_kind: FnKind<'_>, _: Span, _: ast::NodeId) {\n+    fn check_fn(&mut self, _: &EarlyContext<'_>, fn_kind: FnKind<'_>, _: Span, _: NodeId) {\n         if is_trigger_fn(fn_kind) {\n             panic!(\"Would you like some help with that?\");\n         }"}, {"sha": "5c9e3ab80bb595f6b35a7658981f41aeb19c6ad4", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06cb96ed72e09b9f850ee3e08e50df0c51e02250/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=06cb96ed72e09b9f850ee3e08e50df0c51e02250", "patch": "@@ -12,9 +12,8 @@ use rustc_span::{BytePos, Pos};\n use std::borrow::Cow;\n use std::convert::TryInto;\n use std::fmt::Display;\n-use syntax::ast;\n-use syntax::token;\n use syntax::util::parser::AssocOp;\n+use syntax::{ast, token};\n \n pub use crate::literal_representation::format_numeric_literal;\n "}]}