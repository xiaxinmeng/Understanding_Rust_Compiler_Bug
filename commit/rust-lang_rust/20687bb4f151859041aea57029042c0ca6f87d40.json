{"sha": "20687bb4f151859041aea57029042c0ca6f87d40", "node_id": "C_kwDOAAsO6NoAKDIwNjg3YmI0ZjE1MTg1OTA0MWFlYTU3MDI5MDQyYzBjYTZmODdkNDA", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-10-21T05:11:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-21T05:11:04Z"}, "message": "Rollup merge of #89292 - CleanCut:stabilize-cstring_from_vec_with_nul, r=JohnTitor\n\nStabilize CString::from_vec_with_nul[_unchecked]\n\nCloses the tracking issue #73179. I am keeping this in _draft_ mode until the FCP has ended.\n\nThis is my first time stabilizing a feature, so I would appreciate any guidance on things I should do differently.\n\nCloses #73179", "tree": {"sha": "e3ab23cbb9cf2f12a7b3b3258fd0228377192219", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3ab23cbb9cf2f12a7b3b3258fd0228377192219"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20687bb4f151859041aea57029042c0ca6f87d40", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhcPZoCRBK7hj4Ov3rIwAArBEIAAISF9IsnQNO3ZafPVOsfP0o\n8oaCoaZpt9tkLTTXMiit/EVvYcgUgbwn9GNyQQuRHhQ1sbja+3Etw1uqte4VfZ33\nilE4XXslllmNYdRHVp8PyrFa4qoAB+yEK+zPUdoaq57lMHS6zCf0jfYCoWiBok1q\ni4A4/x1RlCi75hy+RBG24c2Noy8xtnpf3e5xpxDBvFq60/+OGo71Wv0yrV1wn1a3\nM1zFrGHsyH3hdosyOq/M6LqYRBi3aQvHJ/1PbJPD4UBfc3Iv1D2gvDo9UjAmh11n\nY9hO+dBb/LCSOdo0S77Tii0yWPYMJPptlIUaK4qhrFWfCeC9hV62BAJ1A7/3Sss=\n=yeLB\n-----END PGP SIGNATURE-----\n", "payload": "tree e3ab23cbb9cf2f12a7b3b3258fd0228377192219\nparent 6f0acbcbd064d924afb0f3a04480fd0d69c5bc51\nparent 39af41ed65d7b5c3f9e4d6405b332642fbb431e6\nauthor Yuki Okushi <jtitor@2k36.org> 1634793064 +0900\ncommitter GitHub <noreply@github.com> 1634793064 +0900\n\nRollup merge of #89292 - CleanCut:stabilize-cstring_from_vec_with_nul, r=JohnTitor\n\nStabilize CString::from_vec_with_nul[_unchecked]\n\nCloses the tracking issue #73179. I am keeping this in _draft_ mode until the FCP has ended.\n\nThis is my first time stabilizing a feature, so I would appreciate any guidance on things I should do differently.\n\nCloses #73179\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20687bb4f151859041aea57029042c0ca6f87d40", "html_url": "https://github.com/rust-lang/rust/commit/20687bb4f151859041aea57029042c0ca6f87d40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20687bb4f151859041aea57029042c0ca6f87d40/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f0acbcbd064d924afb0f3a04480fd0d69c5bc51", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0acbcbd064d924afb0f3a04480fd0d69c5bc51", "html_url": "https://github.com/rust-lang/rust/commit/6f0acbcbd064d924afb0f3a04480fd0d69c5bc51"}, {"sha": "39af41ed65d7b5c3f9e4d6405b332642fbb431e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/39af41ed65d7b5c3f9e4d6405b332642fbb431e6", "html_url": "https://github.com/rust-lang/rust/commit/39af41ed65d7b5c3f9e4d6405b332642fbb431e6"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "cb09717bde577f1eb623505fc67a0670db12597b", "filename": "library/std/src/ffi/c_str.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/20687bb4f151859041aea57029042c0ca6f87d40/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20687bb4f151859041aea57029042c0ca6f87d40/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs?ref=20687bb4f151859041aea57029042c0ca6f87d40", "patch": "@@ -251,13 +251,12 @@ pub struct FromBytesWithNulError {\n /// # Examples\n ///\n /// ```\n-/// #![feature(cstring_from_vec_with_nul)]\n /// use std::ffi::{CString, FromVecWithNulError};\n ///\n /// let _: FromVecWithNulError = CString::from_vec_with_nul(b\"f\\0oo\".to_vec()).unwrap_err();\n /// ```\n #[derive(Clone, PartialEq, Eq, Debug)]\n-#[unstable(feature = \"cstring_from_vec_with_nul\", issue = \"73179\")]\n+#[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.58.0\")]\n pub struct FromVecWithNulError {\n     error_kind: FromBytesWithNulErrorKind,\n     bytes: Vec<u8>,\n@@ -278,7 +277,7 @@ impl FromBytesWithNulError {\n     }\n }\n \n-#[unstable(feature = \"cstring_from_vec_with_nul\", issue = \"73179\")]\n+#[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.58.0\")]\n impl FromVecWithNulError {\n     /// Returns a slice of [`u8`]s bytes that were attempted to convert to a [`CString`].\n     ///\n@@ -287,7 +286,6 @@ impl FromVecWithNulError {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// #![feature(cstring_from_vec_with_nul)]\n     /// use std::ffi::CString;\n     ///\n     /// // Some invalid bytes in a vector\n@@ -298,6 +296,7 @@ impl FromVecWithNulError {\n     /// assert_eq!(&bytes[..], value.unwrap_err().as_bytes());\n     /// ```\n     #[must_use]\n+    #[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.58.0\")]\n     pub fn as_bytes(&self) -> &[u8] {\n         &self.bytes[..]\n     }\n@@ -313,7 +312,6 @@ impl FromVecWithNulError {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// #![feature(cstring_from_vec_with_nul)]\n     /// use std::ffi::CString;\n     ///\n     /// // Some invalid bytes in a vector\n@@ -324,6 +322,7 @@ impl FromVecWithNulError {\n     /// assert_eq!(bytes, value.unwrap_err().into_bytes());\n     /// ```\n     #[must_use = \"`self` will be dropped if the result is not used\"]\n+    #[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.58.0\")]\n     pub fn into_bytes(self) -> Vec<u8> {\n         self.bytes\n     }\n@@ -704,15 +703,14 @@ impl CString {\n     /// # Example\n     ///\n     /// ```\n-    /// #![feature(cstring_from_vec_with_nul)]\n     /// use std::ffi::CString;\n     /// assert_eq!(\n     ///     unsafe { CString::from_vec_with_nul_unchecked(b\"abc\\0\".to_vec()) },\n     ///     unsafe { CString::from_vec_unchecked(b\"abc\".to_vec()) }\n     /// );\n     /// ```\n     #[must_use]\n-    #[unstable(feature = \"cstring_from_vec_with_nul\", issue = \"73179\")]\n+    #[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.58.0\")]\n     pub unsafe fn from_vec_with_nul_unchecked(v: Vec<u8>) -> Self {\n         Self { inner: v.into_boxed_slice() }\n     }\n@@ -733,7 +731,6 @@ impl CString {\n     /// when called without the ending nul byte.\n     ///\n     /// ```\n-    /// #![feature(cstring_from_vec_with_nul)]\n     /// use std::ffi::CString;\n     /// assert_eq!(\n     ///     CString::from_vec_with_nul(b\"abc\\0\".to_vec())\n@@ -745,14 +742,13 @@ impl CString {\n     /// An incorrectly formatted [`Vec`] will produce an error.\n     ///\n     /// ```\n-    /// #![feature(cstring_from_vec_with_nul)]\n     /// use std::ffi::{CString, FromVecWithNulError};\n     /// // Interior nul byte\n     /// let _: FromVecWithNulError = CString::from_vec_with_nul(b\"a\\0bc\".to_vec()).unwrap_err();\n     /// // No nul byte\n     /// let _: FromVecWithNulError = CString::from_vec_with_nul(b\"abc\".to_vec()).unwrap_err();\n     /// ```\n-    #[unstable(feature = \"cstring_from_vec_with_nul\", issue = \"73179\")]\n+    #[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.58.0\")]\n     pub fn from_vec_with_nul(v: Vec<u8>) -> Result<Self, FromVecWithNulError> {\n         let nul_pos = memchr::memchr(0, &v);\n         match nul_pos {\n@@ -1084,10 +1080,10 @@ impl fmt::Display for FromBytesWithNulError {\n     }\n }\n \n-#[unstable(feature = \"cstring_from_vec_with_nul\", issue = \"73179\")]\n+#[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.58.0\")]\n impl Error for FromVecWithNulError {}\n \n-#[unstable(feature = \"cstring_from_vec_with_nul\", issue = \"73179\")]\n+#[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.58.0\")]\n impl fmt::Display for FromVecWithNulError {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match self.error_kind {"}, {"sha": "7f3bb836754ed5396607dc6a4889a6f249edebc0", "filename": "library/std/src/ffi/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20687bb4f151859041aea57029042c0ca6f87d40/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20687bb4f151859041aea57029042c0ca6f87d40/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs?ref=20687bb4f151859041aea57029042c0ca6f87d40", "patch": "@@ -145,7 +145,7 @@\n \n #[stable(feature = \"cstr_from_bytes\", since = \"1.10.0\")]\n pub use self::c_str::FromBytesWithNulError;\n-#[unstable(feature = \"cstring_from_vec_with_nul\", issue = \"73179\")]\n+#[stable(feature = \"cstring_from_vec_with_nul\", since = \"1.58.0\")]\n pub use self::c_str::FromVecWithNulError;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::c_str::{CStr, CString, IntoStringError, NulError};"}]}