{"sha": "fc4483748c83e972a76dd3f2c215e2d8a480cb98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjNDQ4Mzc0OGM4M2U5NzJhNzZkZDNmMmMyMTVlMmQ4YTQ4MGNiOTg=", "commit": {"author": {"name": "Ga\u00ebtan Cassiers", "email": "gaetan.cassiers@gmail.com", "date": "2015-07-01T23:20:07Z"}, "committer": {"name": "Ga\u00ebtan Cassiers", "email": "gaetan.cassiers@gmail.com", "date": "2015-07-03T08:30:42Z"}, "message": "Fix fn decl rewriting in case of generics\n\nAn opening paren in generics caused a false-positive detection of args\nbeginning. The result was the creation of comments with some code into\nit.", "tree": {"sha": "6e67ad1688ce8941f69a2ef93596b93fcd7cff09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e67ad1688ce8941f69a2ef93596b93fcd7cff09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc4483748c83e972a76dd3f2c215e2d8a480cb98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc4483748c83e972a76dd3f2c215e2d8a480cb98", "html_url": "https://github.com/rust-lang/rust/commit/fc4483748c83e972a76dd3f2c215e2d8a480cb98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc4483748c83e972a76dd3f2c215e2d8a480cb98/comments", "author": {"login": "cassiersg", "id": 9348542, "node_id": "MDQ6VXNlcjkzNDg1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9348542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiersg", "html_url": "https://github.com/cassiersg", "followers_url": "https://api.github.com/users/cassiersg/followers", "following_url": "https://api.github.com/users/cassiersg/following{/other_user}", "gists_url": "https://api.github.com/users/cassiersg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiersg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiersg/subscriptions", "organizations_url": "https://api.github.com/users/cassiersg/orgs", "repos_url": "https://api.github.com/users/cassiersg/repos", "events_url": "https://api.github.com/users/cassiersg/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiersg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cassiersg", "id": 9348542, "node_id": "MDQ6VXNlcjkzNDg1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9348542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiersg", "html_url": "https://github.com/cassiersg", "followers_url": "https://api.github.com/users/cassiersg/followers", "following_url": "https://api.github.com/users/cassiersg/following{/other_user}", "gists_url": "https://api.github.com/users/cassiersg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiersg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiersg/subscriptions", "organizations_url": "https://api.github.com/users/cassiersg/orgs", "repos_url": "https://api.github.com/users/cassiersg/repos", "events_url": "https://api.github.com/users/cassiersg/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiersg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54d2620ead1dd8ace78f5877e58971b96cd14767", "url": "https://api.github.com/repos/rust-lang/rust/commits/54d2620ead1dd8ace78f5877e58971b96cd14767", "html_url": "https://github.com/rust-lang/rust/commit/54d2620ead1dd8ace78f5877e58971b96cd14767"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "396778352d154c5e001ade92690cdffe488bfc95", "filename": "src/items.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fc4483748c83e972a76dd3f2c215e2d8a480cb98/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc4483748c83e972a76dd3f2c215e2d8a480cb98/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=fc4483748c83e972a76dd3f2c215e2d8a480cb98", "patch": "@@ -11,7 +11,7 @@\n // Formatting top-level items - functions, structs, enums, traits, impls.\n \n use {ReturnIndent, BraceStyle};\n-use utils::{format_visibility, make_indent, contains_skip, span_after};\n+use utils::{format_visibility, make_indent, contains_skip, span_after, end_typaram};\n use lists::{write_list, itemize_list, ListItem, ListFormatting, SeparatorTactic, ListTactic};\n use comment::FindUncommented;\n use visitor::FmtVisitor;\n@@ -160,13 +160,20 @@ impl<'a> FmtVisitor<'a> {\n             result.push('(');\n         }\n \n+        // A conservative estimation, to goal is to be over all parens in generics\n+        let args_start = generics.ty_params\n+                                 .last()\n+                                 .map(|tp| end_typaram(tp))\n+                                 .unwrap_or(span.lo);\n+        let args_span = codemap::mk_sp(\n+            span_after(codemap::mk_sp(args_start, span.hi), \"(\", self.codemap),\n+            span_for_return(&fd.output).lo);\n         result.push_str(&self.rewrite_args(&fd.inputs,\n                                            explicit_self,\n                                            one_line_budget,\n                                            multi_line_budget,\n                                            arg_indent,\n-                                           codemap::mk_sp(span_after(span, \"(\", self.codemap),\n-                                                          span_for_return(&fd.output).lo)));\n+                                           args_span));\n         result.push(')');\n \n         // Return type."}, {"sha": "47203a0754f18336581074b4442ab6e9c33e737a", "filename": "src/utils.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fc4483748c83e972a76dd3f2c215e2d8a480cb98/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc4483748c83e972a76dd3f2c215e2d8a480cb98/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=fc4483748c83e972a76dd3f2c215e2d8a480cb98", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use syntax::ast::{Visibility, Attribute, MetaItem, MetaItem_};\n+use syntax::ast::{self, Visibility, Attribute, MetaItem, MetaItem_};\n use syntax::codemap::{CodeMap, Span, BytePos};\n \n use comment::FindUncommented;\n@@ -72,6 +72,14 @@ pub fn contains_skip(attrs: &[Attribute]) -> bool {\n     attrs.iter().any(|a| is_skip(&a.node.value))\n }\n \n+// Find the end of a TyParam\n+pub fn end_typaram(typaram: &ast::TyParam) -> BytePos {\n+    typaram.bounds.last().map(|bound| match *bound {\n+        ast::RegionTyParamBound(ref lt) => lt.span,\n+        ast::TraitTyParamBound(ref prt, _) => prt.span,\n+    }).unwrap_or(typaram.span).hi\n+}\n+\n #[inline]\n #[cfg(target_pointer_width=\"64\")]\n // Based on the trick layed out at"}, {"sha": "bc05efa53513f7655df2462a309918d8df3d0359", "filename": "tests/target/fn.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fc4483748c83e972a76dd3f2c215e2d8a480cb98/tests%2Ftarget%2Ffn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc4483748c83e972a76dd3f2c215e2d8a480cb98/tests%2Ftarget%2Ffn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn.rs?ref=fc4483748c83e972a76dd3f2c215e2d8a480cb98", "patch": "@@ -34,6 +34,9 @@ fn foo<U, T>(a: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA,\n \n }\n \n+fn foo<U: Fn(A) -> B /* paren inside generics */>() {\n+}\n+\n impl Foo {\n     fn with_no_errors<T, F>(&mut self, f: F) -> T\n         where F: FnOnce(&mut Resolver) -> T"}]}