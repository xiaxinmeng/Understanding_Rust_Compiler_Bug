{"sha": "700c83bc05ebeddbe3d3a10c2e309826d563b12b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMGM4M2JjMDVlYmVkZGJlM2QzYTEwYzJlMzA5ODI2ZDU2M2IxMmI=", "commit": {"author": {"name": "Bastian Gruber", "email": "gruberbastian@me.com", "date": "2018-06-24T07:38:56Z"}, "committer": {"name": "Bastian Gruber", "email": "gruberbastian@me.com", "date": "2018-11-21T08:59:01Z"}, "message": "Document `From` implementations", "tree": {"sha": "5e8f0058027d9b23aad91587ecba8411361ba49e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e8f0058027d9b23aad91587ecba8411361ba49e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/700c83bc05ebeddbe3d3a10c2e309826d563b12b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/700c83bc05ebeddbe3d3a10c2e309826d563b12b", "html_url": "https://github.com/rust-lang/rust/commit/700c83bc05ebeddbe3d3a10c2e309826d563b12b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/700c83bc05ebeddbe3d3a10c2e309826d563b12b/comments", "author": null, "committer": null, "parents": [{"sha": "780658a464603fa755d94b27f72a375bd81d07ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/780658a464603fa755d94b27f72a375bd81d07ea", "html_url": "https://github.com/rust-lang/rust/commit/780658a464603fa755d94b27f72a375bd81d07ea"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "ab37bb7520972a6bc428524ac852ccb04089d198", "filename": "src/libstd/path.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/700c83bc05ebeddbe3d3a10c2e309826d563b12b/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/700c83bc05ebeddbe3d3a10c2e309826d563b12b/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=700c83bc05ebeddbe3d3a10c2e309826d563b12b", "patch": "@@ -1397,13 +1397,17 @@ impl<'a> From<&'a Path> for Box<Path> {\n \n #[stable(feature = \"path_buf_from_box\", since = \"1.18.0\")]\n impl From<Box<Path>> for PathBuf {\n+    /// Converts a `Box<Path>` into a `PathBuf`.\n+    /// This conversion does not allocate memory\n     fn from(boxed: Box<Path>) -> PathBuf {\n         boxed.into_path_buf()\n     }\n }\n \n #[stable(feature = \"box_from_path_buf\", since = \"1.20.0\")]\n impl From<PathBuf> for Box<Path> {\n+    /// Converts a `PathBuf` into a `Box<Path>`.\n+    /// This conversion does not allocate memory\n     fn from(p: PathBuf) -> Box<Path> {\n         p.into_boxed_path()\n     }\n@@ -1426,20 +1430,28 @@ impl<'a, T: ?Sized + AsRef<OsStr>> From<&'a T> for PathBuf {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl From<OsString> for PathBuf {\n+    /// Converts a `OsString` into a `PathBuf`.\n+    /// This conversion copies the data.\n+    /// This conversion does allocate memory.\n     fn from(s: OsString) -> PathBuf {\n         PathBuf { inner: s }\n     }\n }\n \n #[stable(feature = \"from_path_buf_for_os_string\", since = \"1.14.0\")]\n impl From<PathBuf> for OsString {\n+    /// Converts a `PathBuf` into a `OsString`.\n+    /// This conversion copies the data.\n+    /// This conversion does allocate memory.\n     fn from(path_buf : PathBuf) -> OsString {\n         path_buf.inner\n     }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl From<String> for PathBuf {\n+    /// Converts a `String` into a `PathBuf`.\n+    /// This conversion does not allocate memory\n     fn from(s: String) -> PathBuf {\n         PathBuf::from(OsString::from(s))\n     }\n@@ -1536,6 +1548,10 @@ impl<'a> From<Cow<'a, Path>> for PathBuf {\n \n #[stable(feature = \"shared_from_slice2\", since = \"1.24.0\")]\n impl From<PathBuf> for Arc<Path> {\n+    /// Converts a `PathBuf` into a `Arc<Path>`.\n+    /// This conversion happens in place.\n+    /// This conversion does not allocate memory.\n+    /// This function is unsafe. Data can't be moved from this reference.\n     #[inline]\n     fn from(s: PathBuf) -> Arc<Path> {\n         let arc: Arc<OsStr> = Arc::from(s.into_os_string());\n@@ -1545,6 +1561,10 @@ impl From<PathBuf> for Arc<Path> {\n \n #[stable(feature = \"shared_from_slice2\", since = \"1.24.0\")]\n impl<'a> From<&'a Path> for Arc<Path> {\n+    /// Converts a `PathBuf` into a `Arc<Path>`.\n+    /// This conversion happens in place.\n+    /// This conversion does not allocate memory.\n+    /// This function is unsafe. Data can't be moved from this reference.\n     #[inline]\n     fn from(s: &Path) -> Arc<Path> {\n         let arc: Arc<OsStr> = Arc::from(s.as_os_str());\n@@ -1554,6 +1574,10 @@ impl<'a> From<&'a Path> for Arc<Path> {\n \n #[stable(feature = \"shared_from_slice2\", since = \"1.24.0\")]\n impl From<PathBuf> for Rc<Path> {\n+    /// Converts a `PathBuf` into a `Rc<Path>`.\n+    /// This conversion happens in place.\n+    /// This conversion does not allocate memory.\n+    /// This function is unsafe. Data can't be moved from this reference.\n     #[inline]\n     fn from(s: PathBuf) -> Rc<Path> {\n         let rc: Rc<OsStr> = Rc::from(s.into_os_string());"}]}