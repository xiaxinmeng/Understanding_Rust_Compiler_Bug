{"sha": "613e008593f1caa0b799c1ca5048bd50d28190fd", "node_id": "C_kwDOAAsO6NoAKDYxM2UwMDg1OTNmMWNhYTBiNzk5YzFjYTUwNDhiZDUwZDI4MTkwZmQ", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-04-02T10:45:39Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-04-02T11:13:34Z"}, "message": "Don't append \"!\" to non-bang macro name", "tree": {"sha": "b37bb4a5dff974fa292d9572839773a43abeeea0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b37bb4a5dff974fa292d9572839773a43abeeea0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/613e008593f1caa0b799c1ca5048bd50d28190fd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmQpY6MACgkQ4laYqTBY\nYXG92Q/7BT9e9oXV0mgVcHhvibpD0di0Gf35d6KxkmhBbSowpp7Bfu0IIL22h2Sv\nbq78a+lZS/BqBmbzg2H2WBibvdl/UQO3SuZ3uPDClPuRT80WiVvxxio6gUoImmWW\nrKa43jdcQ8XOfBnmY3ZGzXX+w120caThX+oMfAa1GT29gi3ee1zgrCDjC+1aPFnp\noVIYZPGoEsgmny6kRBrspyaY2BdeT5U/O6FWs2EhsSAVIy8p4S8QSZcC4lt4G1PD\nr43U1HVNIz+uqYaYaxSED84KCV2ob5Jh2uXxlCaulHSynL1MpFzx6wPndPogBNw/\ncTlbAFuz4zj34E8Q1Jv4rJo1Ltu3WiefkcrN3fq0kN801lP8F0ti4h2K5NFRaplq\nMLt1VwO7DbImZQMqRdDLoODdiHF/9R3kLFEKjK2Agidcl5jUk4R3Q8AW9d0pHwrM\nGZYgrrNbbNM4oye3V4N3muFHYLBDgWfh8uQI/FRIpCVla12ZHwJZeca+stm9uPHU\nKSZbN1Zc3KFm6f5Pictp4nTae2EtKTzje3xgbTYDXI7/qyAJ8ip3lTqy+Dfc6ZRw\nd0mR35eWzN4y4Obhr8Sh8iJ6K00AsbXAPl7DmF7ZAXChQRFgQaO6W1cZJXViJA+L\npK2xH+KLXWpE+Fx+2ivNXJ2Oi8hHfGGsB1i77a0hLFr2rg/ELvk=\n=G7K8\n-----END PGP SIGNATURE-----", "payload": "tree b37bb4a5dff974fa292d9572839773a43abeeea0\nparent 1ebac28f0d47341173a1271b050e4a07693c8bc6\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1680432339 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1680434014 +0900\n\nDon't append \"!\" to non-bang macro name\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/613e008593f1caa0b799c1ca5048bd50d28190fd", "html_url": "https://github.com/rust-lang/rust/commit/613e008593f1caa0b799c1ca5048bd50d28190fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/613e008593f1caa0b799c1ca5048bd50d28190fd/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ebac28f0d47341173a1271b050e4a07693c8bc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ebac28f0d47341173a1271b050e4a07693c8bc6", "html_url": "https://github.com/rust-lang/rust/commit/1ebac28f0d47341173a1271b050e4a07693c8bc6"}], "stats": {"total": 44, "additions": 23, "deletions": 21}, "files": [{"sha": "4382af434388d8909d2955320e7e400eb8f36063", "filename": "crates/ide/src/expand_macro.rs", "status": "modified", "additions": 22, "deletions": 20, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/613e008593f1caa0b799c1ca5048bd50d28190fd/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/613e008593f1caa0b799c1ca5048bd50d28190fd/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fexpand_macro.rs?ref=613e008593f1caa0b799c1ca5048bd50d28190fd", "patch": "@@ -83,8 +83,10 @@ pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<\n             }\n         }\n         if let Some(mac) = ast::MacroCall::cast(node) {\n+            let mut name = mac.path()?.segment()?.name_ref()?.to_string();\n+            name.push('!');\n             break (\n-                mac.path()?.segment()?.name_ref()?.to_string(),\n+                name,\n                 expand_macro_recur(&sema, &mac)?,\n                 mac.syntax().parent().map(|it| it.kind()).unwrap_or(SyntaxKind::MACRO_ITEMS),\n             );\n@@ -235,7 +237,7 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                bar\n+                bar!\n                 5i64 as _\"#]],\n         );\n     }\n@@ -252,7 +254,7 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                bar\n+                bar!\n                 for _ in 0..42{}\"#]],\n         );\n     }\n@@ -273,7 +275,7 @@ macro_rules! baz {\n f$0oo!();\n \"#,\n             expect![[r#\"\n-                foo\n+                foo!\n                 fn b(){}\n             \"#]],\n         );\n@@ -294,7 +296,7 @@ macro_rules! foo {\n f$0oo!();\n         \"#,\n             expect![[r#\"\n-                foo\n+                foo!\n                 fn some_thing() -> u32 {\n                   let a = 0;\n                   a+10\n@@ -328,16 +330,16 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-       match_ast\n-       {\n-         if let Some(it) = ast::TraitDef::cast(container.clone()){}\n-         else if let Some(it) = ast::ImplDef::cast(container.clone()){}\n-         else {\n-           {\n-             continue\n-           }\n-         }\n-       }\"#]],\n+                match_ast!\n+                {\n+                  if let Some(it) = ast::TraitDef::cast(container.clone()){}\n+                  else if let Some(it) = ast::ImplDef::cast(container.clone()){}\n+                  else {\n+                    {\n+                      continue\n+                    }\n+                  }\n+                }\"#]],\n         );\n     }\n \n@@ -358,7 +360,7 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                match_ast\n+                match_ast!\n                 {}\"#]],\n         );\n     }\n@@ -383,7 +385,7 @@ fn main() {\n }\n             \"#,\n             expect![[r#\"\n-                foo\n+                foo!\n                 {\n                   macro_rules! bar {\n                     () => {\n@@ -411,7 +413,7 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                foo\n+                foo!\n             \"#]],\n         );\n     }\n@@ -433,7 +435,7 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                foo\n+                foo!\n                 0\"#]],\n         );\n     }\n@@ -451,7 +453,7 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                foo\n+                foo!\n                 fn f<T>(_: &dyn ::std::marker::Copy){}\"#]],\n         );\n     }"}, {"sha": "7a8490e4767e34766d87526c6fd16f8bb92ae9e3", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/613e008593f1caa0b799c1ca5048bd50d28190fd/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/613e008593f1caa0b799c1ca5048bd50d28190fd/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=613e008593f1caa0b799c1ca5048bd50d28190fd", "patch": "@@ -699,7 +699,7 @@ export function viewFullCrateGraph(ctx: CtxInit): Cmd {\n // The contents of the file come from the `TextDocumentContentProvider`\n export function expandMacro(ctx: CtxInit): Cmd {\n     function codeFormat(expanded: ra.ExpandedMacro): string {\n-        let result = `// Recursive expansion of ${expanded.name}! macro\\n`;\n+        let result = `// Recursive expansion of ${expanded.name} macro\\n`;\n         result += \"// \" + \"=\".repeat(result.length - 3);\n         result += \"\\n\\n\";\n         result += expanded.expansion;"}]}