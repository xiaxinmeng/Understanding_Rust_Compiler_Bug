{"sha": "009ed88789d5351c763cd6d1056fe2c1a040bf33", "node_id": "C_kwDOAAsO6NoAKDAwOWVkODg3ODlkNTM1MWM3NjNjZDZkMTA1NmZlMmMxYTA0MGJmMzM", "commit": {"author": {"name": "Evgenii Zheltonozhskii", "email": "zheltonozhskiy@gmail.com", "date": "2023-03-20T14:38:38Z"}, "committer": {"name": "Evgenii Zheltonozhskii", "email": "zheltonozhskiy@gmail.com", "date": "2023-03-20T14:38:38Z"}, "message": "Add `known-bug` test for typeid unsoundness issue", "tree": {"sha": "0cfdfa2d53180a27179f695ca4b2a51ade01ccba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cfdfa2d53180a27179f695ca4b2a51ade01ccba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/009ed88789d5351c763cd6d1056fe2c1a040bf33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/009ed88789d5351c763cd6d1056fe2c1a040bf33", "html_url": "https://github.com/rust-lang/rust/commit/009ed88789d5351c763cd6d1056fe2c1a040bf33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/009ed88789d5351c763cd6d1056fe2c1a040bf33/comments", "author": {"login": "Randl", "id": 3028543, "node_id": "MDQ6VXNlcjMwMjg1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3028543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Randl", "html_url": "https://github.com/Randl", "followers_url": "https://api.github.com/users/Randl/followers", "following_url": "https://api.github.com/users/Randl/following{/other_user}", "gists_url": "https://api.github.com/users/Randl/gists{/gist_id}", "starred_url": "https://api.github.com/users/Randl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Randl/subscriptions", "organizations_url": "https://api.github.com/users/Randl/orgs", "repos_url": "https://api.github.com/users/Randl/repos", "events_url": "https://api.github.com/users/Randl/events{/privacy}", "received_events_url": "https://api.github.com/users/Randl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Randl", "id": 3028543, "node_id": "MDQ6VXNlcjMwMjg1NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/3028543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Randl", "html_url": "https://github.com/Randl", "followers_url": "https://api.github.com/users/Randl/followers", "following_url": "https://api.github.com/users/Randl/following{/other_user}", "gists_url": "https://api.github.com/users/Randl/gists{/gist_id}", "starred_url": "https://api.github.com/users/Randl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Randl/subscriptions", "organizations_url": "https://api.github.com/users/Randl/orgs", "repos_url": "https://api.github.com/users/Randl/repos", "events_url": "https://api.github.com/users/Randl/events{/privacy}", "received_events_url": "https://api.github.com/users/Randl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d0eac4d02da8a1b139ff3dca7fc4b458fb99eb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d0eac4d02da8a1b139ff3dca7fc4b458fb99eb6", "html_url": "https://github.com/rust-lang/rust/commit/9d0eac4d02da8a1b139ff3dca7fc4b458fb99eb6"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "64317b9d39aae4d99ea034982337a7821b3a61f4", "filename": "tests/ui/const-generics/generic_const_exprs/typeid-equality-by-subtyping.rs", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/009ed88789d5351c763cd6d1056fe2c1a040bf33/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Ftypeid-equality-by-subtyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/009ed88789d5351c763cd6d1056fe2c1a040bf33/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Ftypeid-equality-by-subtyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Ftypeid-equality-by-subtyping.rs?ref=009ed88789d5351c763cd6d1056fe2c1a040bf33", "patch": "@@ -0,0 +1,52 @@\n+// check-pass\n+// known-bug: #97156\n+\n+#![feature(const_type_id, generic_const_exprs)]\n+#![allow(incomplete_features)]\n+\n+use std::any::TypeId;\n+// `One` and `Two` are currently considered equal types, as both\n+// `One <: Two` and `One :> Two` holds.\n+type One = for<'a> fn(&'a (), &'a ());\n+type Two = for<'a, 'b> fn(&'a (), &'b ());\n+trait AssocCt {\n+    const ASSOC: usize;\n+}\n+const fn to_usize<T: 'static>() -> usize {\n+    const WHAT_A_TYPE: TypeId = TypeId::of::<One>();\n+    match TypeId::of::<T>() {\n+        WHAT_A_TYPE => 0,\n+        _ => 1000,\n+    } \n+}\n+impl<T: 'static> AssocCt for T {\n+    const ASSOC: usize = to_usize::<T>();\n+}\n+\n+trait WithAssoc<U> {\n+    type Assoc;\n+}\n+impl<T: 'static> WithAssoc<()> for T where [(); <T as AssocCt>::ASSOC]: {\n+    type Assoc = [u8; <T as AssocCt>::ASSOC];\n+}\n+\n+fn generic<T: 'static, U>(x: <T as WithAssoc<U>>::Assoc) -> <T as WithAssoc<U>>::Assoc\n+where\n+    [(); <T as AssocCt>::ASSOC]:,\n+    T: WithAssoc<U>,\n+{\n+    x\n+}\n+\n+\n+fn unsound<T>(x: <One as WithAssoc<T>>::Assoc) -> <Two as WithAssoc<T>>::Assoc\n+where\n+    One: WithAssoc<T>,\n+{\n+    let x: <Two as WithAssoc<T>>::Assoc = generic::<One, T>(x);\n+    x\n+}\n+\n+fn main() {\n+    println!(\"{:?}\", unsound::<()>([]));\n+}"}]}