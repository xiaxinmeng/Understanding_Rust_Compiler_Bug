{"sha": "9c71f4f1e097e2dbd434fa027f0638c77a9dc823", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNzFmNGYxZTA5N2UyZGJkNDM0ZmEwMjdmMDYzOGM3N2E5ZGM4MjM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-10T06:04:28Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-16T20:24:24Z"}, "message": "Remove the annihilate lang item", "tree": {"sha": "67a2ac00808c2f20aa34b649adcf5db96522283c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67a2ac00808c2f20aa34b649adcf5db96522283c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c71f4f1e097e2dbd434fa027f0638c77a9dc823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c71f4f1e097e2dbd434fa027f0638c77a9dc823", "html_url": "https://github.com/rust-lang/rust/commit/9c71f4f1e097e2dbd434fa027f0638c77a9dc823", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c71f4f1e097e2dbd434fa027f0638c77a9dc823/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5923cc37458d609c66849df3613464f474cad9cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/5923cc37458d609c66849df3613464f474cad9cd", "html_url": "https://github.com/rust-lang/rust/commit/5923cc37458d609c66849df3613464f474cad9cd"}], "stats": {"total": 111, "additions": 44, "deletions": 67}, "files": [{"sha": "ae9d3d5ec0e0b390186d768b5a5d7dbeebca7562", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 42, "deletions": 48, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/9c71f4f1e097e2dbd434fa027f0638c77a9dc823/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c71f4f1e097e2dbd434fa027f0638c77a9dc823/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=9c71f4f1e097e2dbd434fa027f0638c77a9dc823", "patch": "@@ -57,28 +57,27 @@ pub enum LangItem {\n \n     StrEqFnLangItem,                   // 19\n     UniqStrEqFnLangItem,               // 20\n-    AnnihilateFnLangItem,              // 21\n-    LogTypeFnLangItem,                 // 22\n-    FailFnLangItem,                    // 23\n-    FailBoundsCheckFnLangItem,         // 24\n-    ExchangeMallocFnLangItem,          // 25\n-    ClosureExchangeMallocFnLangItem,   // 26\n-    ExchangeFreeFnLangItem,            // 27\n-    MallocFnLangItem,                  // 28\n-    FreeFnLangItem,                    // 29\n-    BorrowAsImmFnLangItem,             // 30\n-    BorrowAsMutFnLangItem,             // 31\n-    ReturnToMutFnLangItem,             // 32\n-    CheckNotBorrowedFnLangItem,        // 33\n-    StrDupUniqFnLangItem,              // 34\n-    RecordBorrowFnLangItem,            // 35\n-    UnrecordBorrowFnLangItem,          // 36\n-\n-    StartFnLangItem,                   // 37\n-\n-    TyDescStructLangItem,              // 38\n-    TyVisitorTraitLangItem,            // 39\n-    OpaqueStructLangItem,              // 40\n+    LogTypeFnLangItem,                 // 21\n+    FailFnLangItem,                    // 22\n+    FailBoundsCheckFnLangItem,         // 23\n+    ExchangeMallocFnLangItem,          // 24\n+    ClosureExchangeMallocFnLangItem,   // 25\n+    ExchangeFreeFnLangItem,            // 26\n+    MallocFnLangItem,                  // 27\n+    FreeFnLangItem,                    // 28\n+    BorrowAsImmFnLangItem,             // 29\n+    BorrowAsMutFnLangItem,             // 30\n+    ReturnToMutFnLangItem,             // 31\n+    CheckNotBorrowedFnLangItem,        // 32\n+    StrDupUniqFnLangItem,              // 33\n+    RecordBorrowFnLangItem,            // 34\n+    UnrecordBorrowFnLangItem,          // 35\n+\n+    StartFnLangItem,                   // 36\n+\n+    TyDescStructLangItem,              // 37\n+    TyVisitorTraitLangItem,            // 38\n+    OpaqueStructLangItem,              // 39\n }\n \n pub struct LanguageItems {\n@@ -122,28 +121,27 @@ impl LanguageItems {\n \n             19 => \"str_eq\",\n             20 => \"uniq_str_eq\",\n-            21 => \"annihilate\",\n-            22 => \"log_type\",\n-            23 => \"fail_\",\n-            24 => \"fail_bounds_check\",\n-            25 => \"exchange_malloc\",\n-            26 => \"closure_exchange_malloc\",\n-            27 => \"exchange_free\",\n-            28 => \"malloc\",\n-            29 => \"free\",\n-            30 => \"borrow_as_imm\",\n-            31 => \"borrow_as_mut\",\n-            32 => \"return_to_mut\",\n-            33 => \"check_not_borrowed\",\n-            34 => \"strdup_uniq\",\n-            35 => \"record_borrow\",\n-            36 => \"unrecord_borrow\",\n-\n-            37 => \"start\",\n-\n-            38 => \"ty_desc\",\n-            39 => \"ty_visitor\",\n-            40 => \"opaque\",\n+            21 => \"log_type\",\n+            22 => \"fail_\",\n+            23 => \"fail_bounds_check\",\n+            24 => \"exchange_malloc\",\n+            25 => \"closure_exchange_malloc\",\n+            26 => \"exchange_free\",\n+            27 => \"malloc\",\n+            28 => \"free\",\n+            29 => \"borrow_as_imm\",\n+            30 => \"borrow_as_mut\",\n+            31 => \"return_to_mut\",\n+            32 => \"check_not_borrowed\",\n+            33 => \"strdup_uniq\",\n+            34 => \"record_borrow\",\n+            35 => \"unrecord_borrow\",\n+\n+            36 => \"start\",\n+\n+            37 => \"ty_desc\",\n+            38 => \"ty_visitor\",\n+            39 => \"opaque\",\n \n             _ => \"???\"\n         }\n@@ -226,9 +224,6 @@ impl LanguageItems {\n     pub fn uniq_str_eq_fn(&self) -> Option<def_id> {\n         self.items[UniqStrEqFnLangItem as uint]\n     }\n-    pub fn annihilate_fn(&self) -> Option<def_id> {\n-        self.items[AnnihilateFnLangItem as uint]\n-    }\n     pub fn log_type_fn(&self) -> Option<def_id> {\n         self.items[LogTypeFnLangItem as uint]\n     }\n@@ -327,7 +322,6 @@ impl<'self> LanguageItemCollector<'self> {\n \n         item_refs.insert(@\"str_eq\", StrEqFnLangItem as uint);\n         item_refs.insert(@\"uniq_str_eq\", UniqStrEqFnLangItem as uint);\n-        item_refs.insert(@\"annihilate\", AnnihilateFnLangItem as uint);\n         item_refs.insert(@\"log_type\", LogTypeFnLangItem as uint);\n         item_refs.insert(@\"fail_\", FailFnLangItem as uint);\n         item_refs.insert(@\"fail_bounds_check\","}, {"sha": "8fd5f7703676d859303b750ac35ae7cb5b6f17b7", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9c71f4f1e097e2dbd434fa027f0638c77a9dc823/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c71f4f1e097e2dbd434fa027f0638c77a9dc823/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=9c71f4f1e097e2dbd434fa027f0638c77a9dc823", "patch": "@@ -2906,24 +2906,12 @@ pub fn fill_crate_map(ccx: @mut CrateContext, map: ValueRef) {\n     }\n     subcrates.push(C_int(ccx, 0));\n \n-    let llannihilatefn = match ccx.tcx.lang_items.annihilate_fn() {\n-        Some(annihilate_def_id) => {\n-            if annihilate_def_id.crate == ast::LOCAL_CRATE {\n-                get_item_val(ccx, annihilate_def_id.node)\n-            } else {\n-                let annihilate_fn_type = csearch::get_type(ccx.tcx,\n-                                                           annihilate_def_id).ty;\n-                trans_external_path(ccx, annihilate_def_id, annihilate_fn_type)\n-            }\n-        }\n-        None => { C_null(Type::i8p()) }\n-    };\n-\n     unsafe {\n         let mod_map = create_module_map(ccx);\n         llvm::LLVMSetInitializer(map, C_struct(\n             [C_i32(1),\n-             lib::llvm::llvm::LLVMConstPointerCast(llannihilatefn, Type::i8p().to_ref()),\n+             // FIXME #8431 This used to be the annihilate function, now it's nothing\n+             C_null(Type::i8p()),\n              p2i(ccx, mod_map),\n              C_array(ccx.int_type, subcrates)]));\n     }"}, {"sha": "e47a3c49f96bfc6a101f9ae47b3ef4ac7f36d586", "filename": "src/libstd/unstable/lang.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9c71f4f1e097e2dbd434fa027f0638c77a9dc823/src%2Flibstd%2Funstable%2Flang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c71f4f1e097e2dbd434fa027f0638c77a9dc823/src%2Flibstd%2Funstable%2Flang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Flang.rs?ref=9c71f4f1e097e2dbd434fa027f0638c77a9dc823", "patch": "@@ -92,11 +92,6 @@ pub unsafe fn check_not_borrowed(a: *u8,\n     borrowck::check_not_borrowed(a, file, line)\n }\n \n-#[lang=\"annihilate\"]\n-pub unsafe fn annihilate() {\n-    ::cleanup::annihilate()\n-}\n-\n #[lang=\"start\"]\n pub fn start(main: *u8, argc: int, argv: **c_char,\n              crate_map: *u8) -> int {"}]}