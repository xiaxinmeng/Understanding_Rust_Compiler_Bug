{"sha": "54897f66f8daeec04042ab416718407b13641b86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0ODk3ZjY2ZjhkYWVlYzA0MDQyYWI0MTY3MTg0MDdiMTM2NDFiODY=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-22T02:17:54Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-22T02:17:54Z"}, "message": "Implement ftruncate64/ftruncate for File::set_len", "tree": {"sha": "b4567946c2a61c35a8be6336caee5050ea16797b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4567946c2a61c35a8be6336caee5050ea16797b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54897f66f8daeec04042ab416718407b13641b86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54897f66f8daeec04042ab416718407b13641b86", "html_url": "https://github.com/rust-lang/rust/commit/54897f66f8daeec04042ab416718407b13641b86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54897f66f8daeec04042ab416718407b13641b86/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d9db57a0dee6b2ed013c27fb312cef77a05e323", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d9db57a0dee6b2ed013c27fb312cef77a05e323", "html_url": "https://github.com/rust-lang/rust/commit/8d9db57a0dee6b2ed013c27fb312cef77a05e323"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "a32f0fa6067843dad5fd328fa45a2b57a5e18815", "filename": "src/shims/foreign_items/posix/linux.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/54897f66f8daeec04042ab416718407b13641b86/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54897f66f8daeec04042ab416718407b13641b86/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs?ref=54897f66f8daeec04042ab416718407b13641b86", "patch": "@@ -34,6 +34,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 let result = this.linux_readdir64_r(args[0], args[1], args[2])?;\n                 this.write_scalar(Scalar::from_i32(result), dest)?;\n             }\n+            \"ftruncate64\" => {\n+                let result = this.ftruncate64(args[0], args[1])?;\n+                this.write_scalar(Scalar::from_i32(result), dest)?;\n+            }\n             // Linux-only\n             \"posix_fadvise\" => {\n                 let _fd = this.read_scalar(args[0])?.to_i32()?;"}, {"sha": "dd3dba6ec07cc8b268ada4901a7bfec1397892d8", "filename": "src/shims/foreign_items/posix/macos.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/54897f66f8daeec04042ab416718407b13641b86/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54897f66f8daeec04042ab416718407b13641b86/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs?ref=54897f66f8daeec04042ab416718407b13641b86", "patch": "@@ -44,6 +44,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 let result = this.macos_readdir_r(args[0], args[1], args[2])?;\n                 this.write_scalar(Scalar::from_i32(result), dest)?;\n             }\n+            \"ftruncate\" => {\n+                let result = this.ftruncate64(args[0], args[1])?;\n+                this.write_scalar(Scalar::from_i32(result), dest)?;\n+            }\n \n             // Environment related shims\n             \"_NSGetEnviron\" => {"}, {"sha": "e7d41b36f5a6afc57e0b63eb45097fa51783cf47", "filename": "src/shims/fs.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/54897f66f8daeec04042ab416718407b13641b86/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54897f66f8daeec04042ab416718407b13641b86/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=54897f66f8daeec04042ab416718407b13641b86", "patch": "@@ -1062,6 +1062,36 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             this.handle_not_found()\n         }\n     }\n+\n+    fn ftruncate64(\n+        &mut self, fd_op: OpTy<'tcx, Tag>,\n+        length_op: OpTy<'tcx, Tag>,\n+    ) -> InterpResult<'tcx, i32> {\n+        let this = self.eval_context_mut();\n+\n+        this.check_no_isolation(\"ftruncate64\")?;\n+\n+        let fd = this.read_scalar(fd_op)?.to_i32()?;\n+        let length = this.read_scalar(length_op)?.to_i64()?;\n+        if let Some(FileHandle { file, writable }) = this.machine.file_handler.handles.get_mut(&fd) {\n+            if *writable {\n+                if let Ok(length) = length.try_into() {\n+                    let result = file.set_len(length);\n+                    this.try_unwrap_io_result(result.map(|_| 0i32))\n+                } else {\n+                    let einval = this.eval_libc(\"EINVAL\")?;\n+                    this.set_last_error(einval)?;\n+                    Ok(-1)\n+                }\n+            } else {\n+                let einval = this.eval_libc(\"EINVAL\")?;\n+                this.set_last_error(einval)?;\n+                Ok(-1)\n+            }\n+        } else {\n+            this.handle_not_found()\n+        }\n+    }\n }\n \n /// Extracts the number of seconds and nanoseconds elapsed between `time` and the unix epoch when"}, {"sha": "1a139de8148ae07ac52c5cc91b59baef6e300c61", "filename": "tests/run-pass/fs.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/54897f66f8daeec04042ab416718407b13641b86/tests%2Frun-pass%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54897f66f8daeec04042ab416718407b13641b86/tests%2Frun-pass%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffs.rs?ref=54897f66f8daeec04042ab416718407b13641b86", "patch": "@@ -13,6 +13,7 @@ fn main() {\n     test_file_create_new();\n     test_seek();\n     test_metadata();\n+    test_file_set_len();\n     test_symlink();\n     test_errors();\n     test_rename();\n@@ -155,6 +156,32 @@ fn test_metadata() {\n     remove_file(&path).unwrap();\n }\n \n+fn test_file_set_len() {\n+    let bytes = b\"Hello, World!\\n\";\n+    let path = prepare_with_content(\"miri_test_fs_set_len.txt\", bytes);\n+\n+    // Test extending the file\n+    let mut file = OpenOptions::new().read(true).write(true).open(&path).unwrap();\n+    let bytes_extended = b\"Hello, World!\\n\\x00\\x00\\x00\\x00\\x00\\x00\";\n+    file.set_len(20).unwrap();\n+    let mut contents = Vec::new();\n+    file.read_to_end(&mut contents).unwrap();\n+    assert_eq!(bytes_extended, contents.as_slice());\n+\n+    // Test truncating the file\n+    file.seek(SeekFrom::Start(0)).unwrap();\n+    file.set_len(10).unwrap();\n+    let mut contents = Vec::new();\n+    file.read_to_end(&mut contents).unwrap();\n+    assert_eq!(&bytes[..10], contents.as_slice());\n+\n+    // Can't use set_len on a file not opened for writing\n+    let file = OpenOptions::new().read(true).open(&path).unwrap();\n+    assert_eq!(ErrorKind::InvalidInput, file.set_len(14).unwrap_err().kind());\n+\n+    remove_file(&path).unwrap();\n+}\n+\n fn test_symlink() {\n     let bytes = b\"Hello, World!\\n\";\n     let path = prepare_with_content(\"miri_test_fs_link_target.txt\", bytes);"}]}