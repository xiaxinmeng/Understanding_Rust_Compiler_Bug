{"sha": "7e5705e5c657d7e29527406df06e64300b93fd82", "node_id": "C_kwDOAAsO6NoAKDdlNTcwNWU1YzY1N2Q3ZTI5NTI3NDA2ZGYwNmU2NDMwMGI5M2ZkODI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-17T23:05:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-17T23:05:54Z"}, "message": "Rollup merge of #109251 - MU001999:master, r=Nilstrieb\n\nSuggest surrounding the macro with `{}` to interpret as a statement\n\nFixes #109237", "tree": {"sha": "e797f27d8c43230b89ef0faa1df0ac9f509c7bd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e797f27d8c43230b89ef0faa1df0ac9f509c7bd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e5705e5c657d7e29527406df06e64300b93fd82", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkFPJSCRBK7hj4Ov3rIwAATpkIAGjEnsFHRjZfRPJWnIwaXAXq\nDvcisSqtTknKg3Y0I3awbR9SmJfhUebxr7NpnrUiAgfJ+HNOZk8IH+iN96gSh6zY\n/oETK0Wo6Jz2iccSLppSmffM8SRgRXIhvl7XXa3AGnGgsKmHm7LhzDmO4zG0qx++\nh0YhmAQgn0qmFajN6BsZ+QsaMInlRZn1YzoWSHAI53DAVcYgubCeOFlCWCuwITpZ\n1Y79kNFf321nqmAG4f4bfWiW6qrlxszLdX2ql817dL1PWm1EkeoRWGBhO6LVzqq5\n89xW66hGQHccjHi/9F+0DfO1KFxX/UrAdBF5JOw39gamMDl/Cxh4RbkI0TPX8zM=\n=TI7n\n-----END PGP SIGNATURE-----\n", "payload": "tree e797f27d8c43230b89ef0faa1df0ac9f509c7bd4\nparent d91858b0801c538d603ac6d9a53e75a4dc5956b4\nparent 550e3087d1b521f2b3b669ebaaf6d16e4c593fca\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679094354 +0100\ncommitter GitHub <noreply@github.com> 1679094354 +0100\n\nRollup merge of #109251 - MU001999:master, r=Nilstrieb\n\nSuggest surrounding the macro with `{}` to interpret as a statement\n\nFixes #109237\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e5705e5c657d7e29527406df06e64300b93fd82", "html_url": "https://github.com/rust-lang/rust/commit/7e5705e5c657d7e29527406df06e64300b93fd82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e5705e5c657d7e29527406df06e64300b93fd82/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d91858b0801c538d603ac6d9a53e75a4dc5956b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d91858b0801c538d603ac6d9a53e75a4dc5956b4", "html_url": "https://github.com/rust-lang/rust/commit/d91858b0801c538d603ac6d9a53e75a4dc5956b4"}, {"sha": "550e3087d1b521f2b3b669ebaaf6d16e4c593fca", "url": "https://api.github.com/repos/rust-lang/rust/commits/550e3087d1b521f2b3b669ebaaf6d16e4c593fca", "html_url": "https://github.com/rust-lang/rust/commit/550e3087d1b521f2b3b669ebaaf6d16e4c593fca"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "6bc393c6534f3597e2dd12deb9d3a0d05e4affbd", "filename": "compiler/rustc_expand/src/mbe/diagnostics.rs", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7e5705e5c657d7e29527406df06e64300b93fd82/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e5705e5c657d7e29527406df06e64300b93fd82/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fdiagnostics.rs?ref=7e5705e5c657d7e29527406df06e64300b93fd82", "patch": "@@ -245,12 +245,24 @@ pub(super) fn emit_frag_parse_err(\n                 e.note(\n                     \"the macro call doesn't expand to an expression, but it can expand to a statement\",\n                 );\n-                e.span_suggestion_verbose(\n-                    site_span.shrink_to_hi(),\n-                    \"add `;` to interpret the expansion as a statement\",\n-                    \";\",\n-                    Applicability::MaybeIncorrect,\n-                );\n+\n+                if parser.token == token::Semi {\n+                    if let Ok(snippet) = parser.sess.source_map().span_to_snippet(site_span) {\n+                        e.span_suggestion_verbose(\n+                            site_span,\n+                            \"surround the macro invocation with `{}` to interpret the expansion as a statement\",\n+                            format!(\"{{ {}; }}\", snippet),\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    }\n+                } else {\n+                    e.span_suggestion_verbose(\n+                        site_span.shrink_to_hi(),\n+                        \"add `;` to interpret the expansion as a statement\",\n+                        \";\",\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                }\n             }\n         },\n         _ => annotate_err_with_kind(&mut e, kind, site_span),"}, {"sha": "86a193c9e44acf54874186c917f37917b5d64474", "filename": "tests/ui/macros/issue-109237.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7e5705e5c657d7e29527406df06e64300b93fd82/tests%2Fui%2Fmacros%2Fissue-109237.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e5705e5c657d7e29527406df06e64300b93fd82/tests%2Fui%2Fmacros%2Fissue-109237.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fissue-109237.rs?ref=7e5705e5c657d7e29527406df06e64300b93fd82", "patch": "@@ -0,0 +1,7 @@\n+macro_rules! statement {\n+    () => {;}; //~ ERROR expected expression\n+}\n+\n+fn main() {\n+    let _ = statement!();\n+}"}, {"sha": "d125cff63eab217daff20e5e017549efca2933d0", "filename": "tests/ui/macros/issue-109237.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7e5705e5c657d7e29527406df06e64300b93fd82/tests%2Fui%2Fmacros%2Fissue-109237.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e5705e5c657d7e29527406df06e64300b93fd82/tests%2Fui%2Fmacros%2Fissue-109237.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fissue-109237.stderr?ref=7e5705e5c657d7e29527406df06e64300b93fd82", "patch": "@@ -0,0 +1,18 @@\n+error: expected expression, found `;`\n+  --> $DIR/issue-109237.rs:2:12\n+   |\n+LL |     () => {;};\n+   |            ^ expected expression\n+...\n+LL |     let _ = statement!();\n+   |             ------------ in this macro invocation\n+   |\n+   = note: the macro call doesn't expand to an expression, but it can expand to a statement\n+   = note: this error originates in the macro `statement` (in Nightly builds, run with -Z macro-backtrace for more info)\n+help: surround the macro invocation with `{}` to interpret the expansion as a statement\n+   |\n+LL |     let _ = { statement!(); };\n+   |             ~~~~~~~~~~~~~~~~~\n+\n+error: aborting due to previous error\n+"}]}