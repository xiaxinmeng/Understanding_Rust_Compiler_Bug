{"sha": "bb7ed64f457be500a74d53c9d12f1d0a8f7badf6", "node_id": "C_kwDOAAsO6NoAKGJiN2VkNjRmNDU3YmU1MDBhNzRkNTNjOWQxMmYxZDBhOGY3YmFkZjY", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-04-10T23:15:51Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-04-12T17:31:06Z"}, "message": "rustdoc: use CSS `overscroll-behavior` instead of JavaScript\n\nFixes the desktop scrolling weirdness mentioned in\nhttps://github.com/rust-lang/rust/pull/98775#issuecomment-1182575603\n\nAs described in the MDN page for this property:\n\n* The current Firefox ESR is 102, and the first Firefox version\n  to support this feature is 59.\n* The current Chrome version 112, and the first version to support\n  this is 63.\n* Edge is described as having a minor bug in `none` mode, but we\n  use `contain` mode anyway, so it doesn't matter.\n* Safari 16, released September 2022, is the last browser to\n  add this feature, and is also the oldest version we officially\n  support.", "tree": {"sha": "0ffb08571f4631765cef1defa0e14d7454a77ed4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ffb08571f4631765cef1defa0e14d7454a77ed4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb7ed64f457be500a74d53c9d12f1d0a8f7badf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb7ed64f457be500a74d53c9d12f1d0a8f7badf6", "html_url": "https://github.com/rust-lang/rust/commit/bb7ed64f457be500a74d53c9d12f1d0a8f7badf6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb7ed64f457be500a74d53c9d12f1d0a8f7badf6/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "661b33f5247debc4e0cd948caa388997e18e9cb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/661b33f5247debc4e0cd948caa388997e18e9cb8", "html_url": "https://github.com/rust-lang/rust/commit/661b33f5247debc4e0cd948caa388997e18e9cb8"}], "stats": {"total": 117, "additions": 20, "deletions": 97}, "files": [{"sha": "6fbb4508662c7a1418492da0b5a904301371d77b", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bb7ed64f457be500a74d53c9d12f1d0a8f7badf6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/bb7ed64f457be500a74d53c9d12f1d0a8f7badf6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=bb7ed64f457be500a74d53c9d12f1d0a8f7badf6", "patch": "@@ -384,6 +384,7 @@ img {\n \tfont-size: 0.875rem;\n \tflex: 0 0 200px;\n \toverflow-y: scroll;\n+\toverscroll-behavior: contain;\n \tposition: sticky;\n \theight: 100vh;\n \ttop: 0;\n@@ -1531,7 +1532,7 @@ However, it's not needed with smaller screen width because the doc/code block is\n /*\n WARNING: RUSTDOC_MOBILE_BREAKPOINT MEDIA QUERY\n If you update this line, then you also need to update the line with the same warning\n-in main.js\n+in source-script.js\n */\n @media (max-width: 700px) {\n \t/* When linking to an item with an `id` (for instance, by clicking a link in the sidebar,"}, {"sha": "6f5987e68bf1c91654acbacf161257a56ec2c59f", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/bb7ed64f457be500a74d53c9d12f1d0a8f7badf6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/bb7ed64f457be500a74d53c9d12f1d0a8f7badf6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=bb7ed64f457be500a74d53c9d12f1d0a8f7badf6", "patch": "@@ -4,11 +4,6 @@\n \n \"use strict\";\n \n-// WARNING: RUSTDOC_MOBILE_BREAKPOINT MEDIA QUERY\n-// If you update this line, then you also need to update the media query with the same\n-// warning in rustdoc.css\n-window.RUSTDOC_MOBILE_BREAKPOINT = 700;\n-\n // Given a basename (e.g. \"storage\") and an extension (e.g. \".js\"), return a URL\n // for a resource under the root-path, with the resource-suffix.\n function resourcePath(basename, extension) {\n@@ -730,65 +725,18 @@ function preLoadCss(cssUrl) {\n         window.rustdoc_add_line_numbers_to_examples();\n     }\n \n-    let oldSidebarScrollPosition = null;\n-\n-    // Scroll locking used both here and in source-script.js\n-\n-    window.rustdocMobileScrollLock = function() {\n-        const mobile_topbar = document.querySelector(\".mobile-topbar\");\n-        if (window.innerWidth <= window.RUSTDOC_MOBILE_BREAKPOINT) {\n-            // This is to keep the scroll position on mobile.\n-            oldSidebarScrollPosition = window.scrollY;\n-            document.body.style.width = `${document.body.offsetWidth}px`;\n-            document.body.style.position = \"fixed\";\n-            document.body.style.top = `-${oldSidebarScrollPosition}px`;\n-            if (mobile_topbar) {\n-                mobile_topbar.style.top = `${oldSidebarScrollPosition}px`;\n-                mobile_topbar.style.position = \"relative\";\n-            }\n-        } else {\n-            oldSidebarScrollPosition = null;\n-        }\n-    };\n-\n-    window.rustdocMobileScrollUnlock = function() {\n-        const mobile_topbar = document.querySelector(\".mobile-topbar\");\n-        if (oldSidebarScrollPosition !== null) {\n-            // This is to keep the scroll position on mobile.\n-            document.body.style.width = \"\";\n-            document.body.style.position = \"\";\n-            document.body.style.top = \"\";\n-            if (mobile_topbar) {\n-                mobile_topbar.style.top = \"\";\n-                mobile_topbar.style.position = \"\";\n-            }\n-            // The scroll position is lost when resetting the style, hence why we store it in\n-            // `oldSidebarScrollPosition`.\n-            window.scrollTo(0, oldSidebarScrollPosition);\n-            oldSidebarScrollPosition = null;\n-        }\n-    };\n-\n     function showSidebar() {\n         window.hideAllModals(false);\n-        window.rustdocMobileScrollLock();\n         const sidebar = document.getElementsByClassName(\"sidebar\")[0];\n         addClass(sidebar, \"shown\");\n     }\n \n     function hideSidebar() {\n-        window.rustdocMobileScrollUnlock();\n         const sidebar = document.getElementsByClassName(\"sidebar\")[0];\n         removeClass(sidebar, \"shown\");\n     }\n \n     window.addEventListener(\"resize\", () => {\n-        if (window.innerWidth > window.RUSTDOC_MOBILE_BREAKPOINT &&\n-            oldSidebarScrollPosition !== null) {\n-            // If the user opens the sidebar in \"mobile\" mode, and then grows the browser window,\n-            // we need to switch away from mobile mode and make the main content area scrollable.\n-            hideSidebar();\n-        }\n         if (window.CURRENT_TOOLTIP_ELEMENT) {\n             // As a workaround to the behavior of `contains: layout` used in doc togglers,\n             // tooltip popovers are positioned using javascript."}, {"sha": "9aa75517330cd5174c7c85ceba9b7793e1fbdaf8", "filename": "src/librustdoc/html/static/js/source-script.js", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bb7ed64f457be500a74d53c9d12f1d0a8f7badf6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/bb7ed64f457be500a74d53c9d12f1d0a8f7badf6/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js?ref=bb7ed64f457be500a74d53c9d12f1d0a8f7badf6", "patch": "@@ -15,8 +15,13 @@ const NAME_OFFSET = 0;\n const DIRS_OFFSET = 1;\n const FILES_OFFSET = 2;\n \n+// WARNING: RUSTDOC_MOBILE_BREAKPOINT MEDIA QUERY\n+// If you update this line, then you also need to update the media query with the same\n+// warning in rustdoc.css\n+const RUSTDOC_MOBILE_BREAKPOINT = 700;\n+\n function closeSidebarIfMobile() {\n-    if (window.innerWidth < window.RUSTDOC_MOBILE_BREAKPOINT) {\n+    if (window.innerWidth < RUSTDOC_MOBILE_BREAKPOINT) {\n         updateLocalStorage(\"source-sidebar-show\", \"false\");\n     }\n }\n@@ -69,12 +74,10 @@ function createDirEntry(elem, parent, fullPath, hasFoundFile) {\n function toggleSidebar() {\n     const child = this.parentNode.children[0];\n     if (child.innerText === \">\") {\n-        window.rustdocMobileScrollLock();\n         addClass(document.documentElement, \"source-sidebar-expanded\");\n         child.innerText = \"<\";\n         updateLocalStorage(\"source-sidebar-show\", \"true\");\n     } else {\n-        window.rustdocMobileScrollUnlock();\n         removeClass(document.documentElement, \"source-sidebar-expanded\");\n         child.innerText = \">\";\n         updateLocalStorage(\"source-sidebar-show\", \"false\");"}, {"sha": "d58d1d48726efc5c7e3b9dd7ab15bf3f4b11b1c5", "filename": "tests/rustdoc-gui/sidebar-mobile-scroll.goml", "status": "modified", "additions": 11, "deletions": 30, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/bb7ed64f457be500a74d53c9d12f1d0a8f7badf6/tests%2Frustdoc-gui%2Fsidebar-mobile-scroll.goml", "raw_url": "https://github.com/rust-lang/rust/raw/bb7ed64f457be500a74d53c9d12f1d0a8f7badf6/tests%2Frustdoc-gui%2Fsidebar-mobile-scroll.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsidebar-mobile-scroll.goml?ref=bb7ed64f457be500a74d53c9d12f1d0a8f7badf6", "patch": "@@ -1,31 +1,12 @@\n-// This test ensures that the mobile sidebar preserves scroll position.\n+// This test ensures that the mobile disables scrolling the page.\n go-to: \"file://\" + |DOC_PATH| + \"/test_docs/struct.Foo.html\"\n-// Switching to \"mobile view\" by reducing the width to 600px.\n-set-window-size: (700, 600)\n-assert-css: (\".sidebar\", {\"display\": \"block\", \"left\": \"-1000px\"})\n-\n-// Scroll down.\n-scroll-to: \"//h2[@id='blanket-implementations']\"\n-assert-window-property: {\"pageYOffset\": \"622\"}\n-\n-// Open the sidebar menu.\n-click: \".sidebar-menu-toggle\"\n-wait-for-css: (\".sidebar\", {\"left\": \"0px\"})\n-\n-// We are no longer \"scrolled\". It's important that the user can't\n-// scroll the body at all, but these test scripts are run only in Chrome,\n-// and we need to use a more complicated solution to this problem because\n-// of Mobile Safari...\n-assert-window-property: {\"pageYOffset\": \"0\"}\n-\n-// Close the sidebar menu. Make sure the scroll position gets restored.\n-click: \".sidebar-menu-toggle\"\n-wait-for-css: (\".sidebar\", {\"left\": \"-1000px\"})\n-assert-window-property: {\"pageYOffset\": \"622\"}\n-\n-// Now test that scrollability returns when the browser window is just resized.\n-click: \".sidebar-menu-toggle\"\n-wait-for-css: (\".sidebar\", {\"left\": \"0px\"})\n-assert-window-property: {\"pageYOffset\": \"0\"}\n-set-window-size: (900, 600)\n-assert-window-property: {\"pageYOffset\": \"622\"}\n+set-window-size: (1280, 800) // desktop\n+assert-css: (\".sidebar\", {\"overscroll-behavior\": \"contain\"})\n+set-window-size: (700, 600) // mobile\n+assert-css: (\".sidebar\", {\"overscroll-behavior\": \"contain\"})\n+\n+go-to: \"file://\" + |DOC_PATH| + \"/src/test_docs/lib.rs.html\"\n+set-window-size: (1280, 800) // desktop\n+assert-css: (\".sidebar\", {\"overscroll-behavior\": \"contain\"})\n+set-window-size: (700, 600) // mobile\n+assert-css: (\".sidebar\", {\"overscroll-behavior\": \"contain\"})"}, {"sha": "20bf0596f9589ed6299190b229d22f6ca7fd634b", "filename": "tests/rustdoc-gui/sidebar-source-code-display.goml", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bb7ed64f457be500a74d53c9d12f1d0a8f7badf6/tests%2Frustdoc-gui%2Fsidebar-source-code-display.goml", "raw_url": "https://github.com/rust-lang/rust/raw/bb7ed64f457be500a74d53c9d12f1d0a8f7badf6/tests%2Frustdoc-gui%2Fsidebar-source-code-display.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fsidebar-source-code-display.goml?ref=bb7ed64f457be500a74d53c9d12f1d0a8f7badf6", "patch": "@@ -183,22 +183,12 @@ wait-for-css: (\".sidebar\", {\"left\": \"-1000px\"})\n // The \"scrollTop\" property should be the same.\n assert-window-property: {\"pageYOffset\": \"2542\"}\n \n-// We now check that the scroll position is restored if the window is resized.\n-set-window-size: (500, 700)\n-click: \"#src-sidebar-toggle\"\n-wait-for-css: (\"#source-sidebar\", {\"visibility\": \"visible\"})\n-assert-window-property: {\"pageYOffset\": \"0\"}\n-set-window-size: (900, 900)\n-assert-window-property: {\"pageYOffset\": \"2542\"}\n-set-window-size: (500, 700)\n-click: \"#src-sidebar-toggle\"\n-wait-for-css: (\"#source-sidebar\", {\"visibility\": \"hidden\"})\n-\n // We now check that opening the sidebar and clicking a link will close it.\n // The behavior here on mobile is different than the behavior on desktop,\n // but common sense dictates that if you have a list of files that fills the entire screen, and\n // you click one of them, you probably want to actually see the file's contents, and not just\n // make it the current selection.\n+set-window-size: (500, 700)\n click: \"#src-sidebar-toggle\"\n wait-for-css: (\"#source-sidebar\", {\"visibility\": \"visible\"})\n assert-local-storage: {\"rustdoc-source-sidebar-show\": \"true\"}"}]}