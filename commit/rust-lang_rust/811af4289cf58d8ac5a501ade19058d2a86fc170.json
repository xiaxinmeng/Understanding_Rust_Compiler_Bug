{"sha": "811af4289cf58d8ac5a501ade19058d2a86fc170", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxMWFmNDI4OWNmNThkOGFjNWE1MDFhZGUxOTA1OGQyYTg2ZmMxNzA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-21T16:18:18Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-21T16:18:18Z"}, "message": "fix link", "tree": {"sha": "68fc810121816f0843960ef37fc99c75bd2929c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68fc810121816f0843960ef37fc99c75bd2929c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/811af4289cf58d8ac5a501ade19058d2a86fc170", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/811af4289cf58d8ac5a501ade19058d2a86fc170", "html_url": "https://github.com/rust-lang/rust/commit/811af4289cf58d8ac5a501ade19058d2a86fc170", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/811af4289cf58d8ac5a501ade19058d2a86fc170/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32a9614a4e466d5b27227948c9500743066628c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/32a9614a4e466d5b27227948c9500743066628c8", "html_url": "https://github.com/rust-lang/rust/commit/32a9614a4e466d5b27227948c9500743066628c8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "29606cb19038f46dd402b7cc86afd7a1ec9c05b3", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/811af4289cf58d8ac5a501ade19058d2a86fc170/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/811af4289cf58d8ac5a501ade19058d2a86fc170/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=811af4289cf58d8ac5a501ade19058d2a86fc170", "patch": "@@ -602,7 +602,7 @@ unsafe impl<T: ?Sized> Freeze for &mut T {}\n /// this trait cannot prevent types from moving by itself.\n ///\n /// Instead it is used to prevent moves through the type system,\n-/// by controlling the behavior of pointers wrapped in the [`Pin`] wrapper,\n+/// by controlling the behavior of pointers `P` wrapped in the [`Pin<P>`] wrapper,\n /// which \"pin\" the type in place by not allowing it to be moved out of them.\n /// See the [`pin module`] documentation for more information on pinning.\n ///"}]}