{"sha": "d8c9a287036f72bf078f868f8fe635b7a7fde32c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YzlhMjg3MDM2ZjcyYmYwNzhmODY4ZjhmZTYzNWI3YTdmZGUzMmM=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2020-08-12T01:45:16Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-03-08T07:18:50Z"}, "message": "Fix the tests", "tree": {"sha": "86b584193317bedf10c7f0c9d1c2d986b2f774c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86b584193317bedf10c7f0c9d1c2d986b2f774c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8c9a287036f72bf078f868f8fe635b7a7fde32c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8c9a287036f72bf078f868f8fe635b7a7fde32c", "html_url": "https://github.com/rust-lang/rust/commit/d8c9a287036f72bf078f868f8fe635b7a7fde32c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8c9a287036f72bf078f868f8fe635b7a7fde32c/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a62eb74db63f1b49d5e00c32192498abaf1640f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a62eb74db63f1b49d5e00c32192498abaf1640f", "html_url": "https://github.com/rust-lang/rust/commit/3a62eb74db63f1b49d5e00c32192498abaf1640f"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "5634467eeb7fbcbc3b59712ddcccd00c18a2534c", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d8c9a287036f72bf078f868f8fe635b7a7fde32c/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8c9a287036f72bf078f868f8fe635b7a7fde32c/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=d8c9a287036f72bf078f868f8fe635b7a7fde32c", "patch": "@@ -195,10 +195,16 @@ impl CStore {\n     }\n \n     pub fn report_unused_deps(&self, tcx: TyCtxt<'_>) {\n+        // We put the check for the option before the lint_level_at_node call\n+        // because the call mutates internal state and introducing it\n+        // leads to some ui tests failing.\n+        if !tcx.sess.opts.json_unused_externs {\n+            return;\n+        }\n         let level = tcx\n             .lint_level_at_node(lint::builtin::UNUSED_CRATE_DEPENDENCIES, rustc_hir::CRATE_HIR_ID)\n             .0;\n-        if level != lint::Level::Allow && tcx.sess.opts.json_unused_externs {\n+        if level != lint::Level::Allow {\n             let unused_externs =\n                 self.unused_externs.iter().map(|ident| ident.to_ident_string()).collect::<Vec<_>>();\n             let unused_externs = unused_externs.iter().map(String::as_str).collect::<Vec<&str>>();"}]}