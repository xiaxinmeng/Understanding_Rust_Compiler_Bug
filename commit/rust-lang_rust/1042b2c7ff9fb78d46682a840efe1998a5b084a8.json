{"sha": "1042b2c7ff9fb78d46682a840efe1998a5b084a8", "node_id": "C_kwDOAAsO6NoAKDEwNDJiMmM3ZmY5ZmI3OGQ0NjY4MmE4NDBlZmUxOTk4YTViMDg0YTg", "commit": {"author": {"name": "Josh Soref", "email": "2119212+jsoref@users.noreply.github.com", "date": "2023-04-19T03:39:02Z"}, "committer": {"name": "Josh Soref", "email": "2119212+jsoref@users.noreply.github.com", "date": "2023-04-26T06:11:13Z"}, "message": "rewrite: long_line_flushed description\n\nSigned-off-by: Josh Soref <2119212+jsoref@users.noreply.github.com>", "tree": {"sha": "bc66ebdb01c153ff63fc2a08b1c8c535545a0e3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc66ebdb01c153ff63fc2a08b1c8c535545a0e3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1042b2c7ff9fb78d46682a840efe1998a5b084a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1042b2c7ff9fb78d46682a840efe1998a5b084a8", "html_url": "https://github.com/rust-lang/rust/commit/1042b2c7ff9fb78d46682a840efe1998a5b084a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1042b2c7ff9fb78d46682a840efe1998a5b084a8/comments", "author": {"login": "jsoref", "id": 2119212, "node_id": "MDQ6VXNlcjIxMTkyMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2119212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsoref", "html_url": "https://github.com/jsoref", "followers_url": "https://api.github.com/users/jsoref/followers", "following_url": "https://api.github.com/users/jsoref/following{/other_user}", "gists_url": "https://api.github.com/users/jsoref/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsoref/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsoref/subscriptions", "organizations_url": "https://api.github.com/users/jsoref/orgs", "repos_url": "https://api.github.com/users/jsoref/repos", "events_url": "https://api.github.com/users/jsoref/events{/privacy}", "received_events_url": "https://api.github.com/users/jsoref/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsoref", "id": 2119212, "node_id": "MDQ6VXNlcjIxMTkyMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2119212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsoref", "html_url": "https://github.com/jsoref", "followers_url": "https://api.github.com/users/jsoref/followers", "following_url": "https://api.github.com/users/jsoref/following{/other_user}", "gists_url": "https://api.github.com/users/jsoref/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsoref/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsoref/subscriptions", "organizations_url": "https://api.github.com/users/jsoref/orgs", "repos_url": "https://api.github.com/users/jsoref/repos", "events_url": "https://api.github.com/users/jsoref/events{/privacy}", "received_events_url": "https://api.github.com/users/jsoref/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cb934600533f6bee22b7396d1ff013b381322a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cb934600533f6bee22b7396d1ff013b381322a8", "html_url": "https://github.com/rust-lang/rust/commit/9cb934600533f6bee22b7396d1ff013b381322a8"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "99084a74e5c1226b8344b9729e69580c19bb26d7", "filename": "library/std/src/io/buffered/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1042b2c7ff9fb78d46682a840efe1998a5b084a8/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1042b2c7ff9fb78d46682a840efe1998a5b084a8/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Ftests.rs?ref=1042b2c7ff9fb78d46682a840efe1998a5b084a8", "patch": "@@ -831,9 +831,9 @@ fn partial_line_buffered_after_line_write() {\n     assert_eq!(&writer.get_ref().buffer, b\"Line 1\\nLine 2\\nLine 3\");\n }\n \n-/// Test that, given a partial line that exceeds the length of\n-/// LineBuffer's buffer (that is, without a trailing newline), that that\n-/// line is written to the inner writer\n+/// Test that for calls to LineBuffer::write where the passed bytes do not contain\n+/// a newline and on their own are greater in length than the internal buffer, the\n+/// passed bytes are immediately written to the inner writer.\n #[test]\n fn long_line_flushed() {\n     let writer = ProgrammableSink::default();"}]}