{"sha": "7a39460e2488fe654b0b6f370e652a42c600e53e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhMzk0NjBlMjQ4OGZlNjU0YjBiNmYzNzBlNjUyYTQyYzYwMGU1M2U=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-09-24T23:19:41Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-03T08:34:48Z"}, "message": "Use the upstream `exact_div` implementation", "tree": {"sha": "4257b3031cc1f331df1fc5d221a892498bd72ef8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4257b3031cc1f331df1fc5d221a892498bd72ef8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a39460e2488fe654b0b6f370e652a42c600e53e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a39460e2488fe654b0b6f370e652a42c600e53e", "html_url": "https://github.com/rust-lang/rust/commit/7a39460e2488fe654b0b6f370e652a42c600e53e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a39460e2488fe654b0b6f370e652a42c600e53e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4e4fe71e6a9568f5d081d99f1c621c5a4ddd7db", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4e4fe71e6a9568f5d081d99f1c621c5a4ddd7db", "html_url": "https://github.com/rust-lang/rust/commit/d4e4fe71e6a9568f5d081d99f1c621c5a4ddd7db"}], "stats": {"total": 22, "additions": 5, "deletions": 17}, "files": [{"sha": "0c6e5f0af69dbdf27863b3713f2c349ad8318d34", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7a39460e2488fe654b0b6f370e652a42c600e53e/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a39460e2488fe654b0b6f370e652a42c600e53e/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=7a39460e2488fe654b0b6f370e652a42c600e53e", "patch": "@@ -313,23 +313,11 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(Scalar::from_f64(res), dest)?;\n             }\n \n-            \"exact_div\" => {\n-                // Performs an exact division, resulting in undefined behavior where\n-                // `x % y != 0` or `y == 0` or `x == T::min_value() && y == -1`\n-                let a = this.read_immediate(args[0])?;\n-                let b = this.read_immediate(args[1])?;\n-                // check x % y != 0\n-                if this.overflowing_binary_op(mir::BinOp::Rem, a, b)?.0.to_bits(dest.layout.size)? != 0 {\n-                    // Check if `b` is -1, which is the \"min_value / -1\" case.\n-                    let minus1 = Scalar::from_int(-1, dest.layout.size);\n-                    return Err(if b.to_scalar().unwrap() == minus1 {\n-                        err_ub_format!(\"exact_div: result of dividing MIN by -1 cannot be represented\")\n-                    } else {\n-                        err_ub_format!(\"exact_div: {:?} cannot be divided by {:?} without remainder\", *a, *b)\n-                    }.into());\n-                }\n-                this.binop_ignore_overflow(mir::BinOp::Div, a, b, dest)?;\n-            },\n+            \"exact_div\" => this.exact_div(\n+                this.read_immediate(args[0])?,\n+                this.read_immediate(args[1])?,\n+                dest,\n+            )?,\n \n             \"forget\" => {}\n "}]}