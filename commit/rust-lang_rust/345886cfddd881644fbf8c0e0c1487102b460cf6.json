{"sha": "345886cfddd881644fbf8c0e0c1487102b460cf6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NTg4NmNmZGRkODgxNjQ0ZmJmOGMwZTBjMTQ4NzEwMmI0NjBjZjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-10T17:16:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-10T17:16:30Z"}, "message": "auto merge of #14519 : hirschenberger/rust/issue-10934, r=alexcrichton\n\nIssue #10934", "tree": {"sha": "37e7d0e232323e7a6980b58e2c36bd5bb8a657cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37e7d0e232323e7a6980b58e2c36bd5bb8a657cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/345886cfddd881644fbf8c0e0c1487102b460cf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/345886cfddd881644fbf8c0e0c1487102b460cf6", "html_url": "https://github.com/rust-lang/rust/commit/345886cfddd881644fbf8c0e0c1487102b460cf6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/345886cfddd881644fbf8c0e0c1487102b460cf6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ab9bfab4e623f67ea32db1ec50f8b79c1514e40", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ab9bfab4e623f67ea32db1ec50f8b79c1514e40", "html_url": "https://github.com/rust-lang/rust/commit/7ab9bfab4e623f67ea32db1ec50f8b79c1514e40"}, {"sha": "f8bc571df70a0832890bbed82ff80d4c9921b6ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8bc571df70a0832890bbed82ff80d4c9921b6ac", "html_url": "https://github.com/rust-lang/rust/commit/f8bc571df70a0832890bbed82ff80d4c9921b6ac"}], "stats": {"total": 41, "additions": 32, "deletions": 9}, "files": [{"sha": "82745663e0cad3bd8711493bc88af8065e0e7ae7", "filename": "src/libcore/num/f32.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/345886cfddd881644fbf8c0e0c1487102b460cf6/src%2Flibcore%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/345886cfddd881644fbf8c0e0c1487102b460cf6/src%2Flibcore%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Ff32.rs?ref=345886cfddd881644fbf8c0e0c1487102b460cf6", "patch": "@@ -11,6 +11,8 @@\n //! Operations and constants for 32-bits floats (`f32` type)\n \n #![doc(primitive = \"f32\")]\n+// FIXME: MIN_VALUE and MAX_VALUE literals are parsed as -inf and inf #14353\n+#![allow(type_overflow)]\n \n use intrinsics;\n use mem;"}, {"sha": "a3a82aeec5ec78f1cb8cbf453a8435ee874f15fc", "filename": "src/libcore/num/f64.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/345886cfddd881644fbf8c0e0c1487102b460cf6/src%2Flibcore%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/345886cfddd881644fbf8c0e0c1487102b460cf6/src%2Flibcore%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Ff64.rs?ref=345886cfddd881644fbf8c0e0c1487102b460cf6", "patch": "@@ -11,6 +11,8 @@\n //! Operations and constants for 64-bits floats (`f64` type)\n \n #![doc(primitive = \"f64\")]\n+// FIXME: MIN_VALUE and MAX_VALUE literals are parsed as -inf and inf #14353\n+#![allow(type_overflow)]\n \n use intrinsics;\n use mem;"}, {"sha": "0f799e26cc7414bca4545549ccf3471ebb29136c", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/345886cfddd881644fbf8c0e0c1487102b460cf6/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/345886cfddd881644fbf8c0e0c1487102b460cf6/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=345886cfddd881644fbf8c0e0c1487102b460cf6", "patch": "@@ -37,14 +37,7 @@ use lint::{Context, LintPass, LintArray};\n \n use std::cmp;\n use std::collections::HashMap;\n-use std::i16;\n-use std::i32;\n-use std::i64;\n-use std::i8;\n-use std::u16;\n-use std::u32;\n-use std::u64;\n-use std::u8;\n+use std::{i8, i16, i32, i64, u8, u16, u32, u64, f32, f64};\n use std::gc::Gc;\n use syntax::abi;\n use syntax::ast_map;\n@@ -214,7 +207,21 @@ impl LintPass for TypeLimits {\n                                          \"literal out of range for its type\");\n                         }\n                     },\n-\n+                    ty::ty_float(t) => {\n+                        let (min, max) = float_ty_range(t);\n+                        let lit_val: f64 = match lit.node {\n+                            ast::LitFloat(ref v, _) |\n+                            ast::LitFloatUnsuffixed(ref v) => match from_str(v.get()) {\n+                                Some(f) => f,\n+                                None => return\n+                            },\n+                            _ => fail!()\n+                        };\n+                        if lit_val < min || lit_val > max {\n+                            cx.span_lint(TYPE_OVERFLOW, e.span,\n+                                         \"literal out of range for its type\");\n+                        }\n+                    },\n                     _ => ()\n                 };\n             },\n@@ -265,6 +272,13 @@ impl LintPass for TypeLimits {\n             }\n         }\n \n+        fn float_ty_range(float_ty: ast::FloatTy) -> (f64, f64) {\n+            match float_ty {\n+                ast::TyF32  => (f32::MIN_VALUE as f64, f32::MAX_VALUE as f64),\n+                ast::TyF64  => (f64::MIN_VALUE,        f64::MAX_VALUE)\n+            }\n+        }\n+\n         fn check_limits(tcx: &ty::ctxt, binop: ast::BinOp,\n                         l: &ast::Expr, r: &ast::Expr) -> bool {\n             let (lit, expr, swap) = match (&l.node, &r.node) {"}, {"sha": "676a6e7cb4452f5e2843c207a339084095626336", "filename": "src/test/compile-fail/lint-type-overflow.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/345886cfddd881644fbf8c0e0c1487102b460cf6/src%2Ftest%2Fcompile-fail%2Flint-type-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/345886cfddd881644fbf8c0e0c1487102b460cf6/src%2Ftest%2Fcompile-fail%2Flint-type-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-type-overflow.rs?ref=345886cfddd881644fbf8c0e0c1487102b460cf6", "patch": "@@ -47,4 +47,9 @@ fn main() {\n     let x = -2147483648_i32; // should be OK\n     let x: i32 = -2147483649; //~ error: literal out of range for its type\n     let x = -2147483649_i32; //~ error: literal out of range for its type\n+\n+    let x = -3.40282348e+38_f32; //~ error: literal out of range for its type\n+    let x =  3.40282348e+38_f32; //~ error: literal out of range for its type\n+    let x = -1.7976931348623159e+308_f64; //~ error: literal out of range for its type\n+    let x =  1.7976931348623159e+308_f64; //~ error: literal out of range for its type\n }"}]}