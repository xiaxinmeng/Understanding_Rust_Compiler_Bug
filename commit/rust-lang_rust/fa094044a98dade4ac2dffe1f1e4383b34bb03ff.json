{"sha": "fa094044a98dade4ac2dffe1f1e4383b34bb03ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMDk0MDQ0YTk4ZGFkZTRhYzJkZmZlMWYxZTQzODNiMzRiYjAzZmY=", "commit": {"author": {"name": "bishtpawan", "email": "pawan.bisht@knoldus.com", "date": "2020-10-20T17:43:21Z"}, "committer": {"name": "bishtpawan", "email": "pawan.bisht@knoldus.com", "date": "2020-10-20T17:43:21Z"}, "message": "Fix build failure of rustfmt", "tree": {"sha": "cccd95f1514e223007fe12f07a8d32d228a8184a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cccd95f1514e223007fe12f07a8d32d228a8184a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa094044a98dade4ac2dffe1f1e4383b34bb03ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa094044a98dade4ac2dffe1f1e4383b34bb03ff", "html_url": "https://github.com/rust-lang/rust/commit/fa094044a98dade4ac2dffe1f1e4383b34bb03ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa094044a98dade4ac2dffe1f1e4383b34bb03ff/comments", "author": {"login": "bishtpawan", "id": 46450720, "node_id": "MDQ6VXNlcjQ2NDUwNzIw", "avatar_url": "https://avatars.githubusercontent.com/u/46450720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bishtpawan", "html_url": "https://github.com/bishtpawan", "followers_url": "https://api.github.com/users/bishtpawan/followers", "following_url": "https://api.github.com/users/bishtpawan/following{/other_user}", "gists_url": "https://api.github.com/users/bishtpawan/gists{/gist_id}", "starred_url": "https://api.github.com/users/bishtpawan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bishtpawan/subscriptions", "organizations_url": "https://api.github.com/users/bishtpawan/orgs", "repos_url": "https://api.github.com/users/bishtpawan/repos", "events_url": "https://api.github.com/users/bishtpawan/events{/privacy}", "received_events_url": "https://api.github.com/users/bishtpawan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bishtpawan", "id": 46450720, "node_id": "MDQ6VXNlcjQ2NDUwNzIw", "avatar_url": "https://avatars.githubusercontent.com/u/46450720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bishtpawan", "html_url": "https://github.com/bishtpawan", "followers_url": "https://api.github.com/users/bishtpawan/followers", "following_url": "https://api.github.com/users/bishtpawan/following{/other_user}", "gists_url": "https://api.github.com/users/bishtpawan/gists{/gist_id}", "starred_url": "https://api.github.com/users/bishtpawan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bishtpawan/subscriptions", "organizations_url": "https://api.github.com/users/bishtpawan/orgs", "repos_url": "https://api.github.com/users/bishtpawan/repos", "events_url": "https://api.github.com/users/bishtpawan/events{/privacy}", "received_events_url": "https://api.github.com/users/bishtpawan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb2462c53f2cc3f140c0f1ea0976261cab968a34", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb2462c53f2cc3f140c0f1ea0976261cab968a34", "html_url": "https://github.com/rust-lang/rust/commit/cb2462c53f2cc3f140c0f1ea0976261cab968a34"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "b588bc1ad837ef6a00a3583c72a1a901def55abd", "filename": "compiler/rustc_mir_build/src/lints.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fa094044a98dade4ac2dffe1f1e4383b34bb03ff/compiler%2Frustc_mir_build%2Fsrc%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa094044a98dade4ac2dffe1f1e4383b34bb03ff/compiler%2Frustc_mir_build%2Fsrc%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Flints.rs?ref=fa094044a98dade4ac2dffe1f1e4383b34bb03ff", "patch": "@@ -71,11 +71,12 @@ impl<'mir, 'tcx> Search<'mir, 'tcx> {\n \n         let func_ty = func.ty(body, tcx);\n         if let ty::FnDef(callee, substs) = *func_ty.kind() {\n+            let normalized_substs = tcx.normalize_erasing_regions(param_env, substs);\n             let (callee, call_substs) =\n-                if let Ok(Some(instance)) = Instance::resolve(tcx, param_env, callee, substs) {\n+                if let Ok(Some(instance)) = Instance::resolve(tcx, param_env, callee, normalized_substs) {\n                     (instance.def_id(), instance.substs)\n                 } else {\n-                    (callee, substs)\n+                    (callee, normalized_substs)\n                 };\n \n             // FIXME(#57965): Make this work across function boundaries"}]}