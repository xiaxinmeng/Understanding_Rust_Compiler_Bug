{"sha": "3ae74cafe483b16c6810a4ff34de03da4974b1ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhZTc0Y2FmZTQ4M2IxNmM2ODEwYTRmZjM0ZGUwM2RhNDk3NGIxY2U=", "commit": {"author": {"name": "Without Boats", "email": "woboats@gmail.com", "date": "2020-02-02T15:51:54Z"}, "committer": {"name": "Without Boats", "email": "woboats@gmail.com", "date": "2020-03-23T14:45:30Z"}, "message": "More explicit; CFG on atomic pointer", "tree": {"sha": "b4e1fbda797ebe10f676e4446e3b7f72bd639eac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4e1fbda797ebe10f676e4446e3b7f72bd639eac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ae74cafe483b16c6810a4ff34de03da4974b1ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ae74cafe483b16c6810a4ff34de03da4974b1ce", "html_url": "https://github.com/rust-lang/rust/commit/3ae74cafe483b16c6810a4ff34de03da4974b1ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ae74cafe483b16c6810a4ff34de03da4974b1ce/comments", "author": {"login": "withoutboats", "id": 9063376, "node_id": "MDQ6VXNlcjkwNjMzNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/9063376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/withoutboats", "html_url": "https://github.com/withoutboats", "followers_url": "https://api.github.com/users/withoutboats/followers", "following_url": "https://api.github.com/users/withoutboats/following{/other_user}", "gists_url": "https://api.github.com/users/withoutboats/gists{/gist_id}", "starred_url": "https://api.github.com/users/withoutboats/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/withoutboats/subscriptions", "organizations_url": "https://api.github.com/users/withoutboats/orgs", "repos_url": "https://api.github.com/users/withoutboats/repos", "events_url": "https://api.github.com/users/withoutboats/events{/privacy}", "received_events_url": "https://api.github.com/users/withoutboats/received_events", "type": "User", "site_admin": false}, "committer": {"login": "withoutboats", "id": 9063376, "node_id": "MDQ6VXNlcjkwNjMzNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/9063376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/withoutboats", "html_url": "https://github.com/withoutboats", "followers_url": "https://api.github.com/users/withoutboats/followers", "following_url": "https://api.github.com/users/withoutboats/following{/other_user}", "gists_url": "https://api.github.com/users/withoutboats/gists{/gist_id}", "starred_url": "https://api.github.com/users/withoutboats/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/withoutboats/subscriptions", "organizations_url": "https://api.github.com/users/withoutboats/orgs", "repos_url": "https://api.github.com/users/withoutboats/repos", "events_url": "https://api.github.com/users/withoutboats/events{/privacy}", "received_events_url": "https://api.github.com/users/withoutboats/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ede03a417501eeb2c9913e69cde1a7407f6a91db", "url": "https://api.github.com/repos/rust-lang/rust/commits/ede03a417501eeb2c9913e69cde1a7407f6a91db", "html_url": "https://github.com/rust-lang/rust/commit/ede03a417501eeb2c9913e69cde1a7407f6a91db"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "d55a1a3b63584185cdb60e86ee6f26d650334796", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ae74cafe483b16c6810a4ff34de03da4974b1ce/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ae74cafe483b16c6810a4ff34de03da4974b1ce/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=3ae74cafe483b16c6810a4ff34de03da4974b1ce", "patch": "@@ -161,6 +161,7 @@ pub mod str;\n pub mod string;\n #[cfg(target_has_atomic = \"ptr\")]\n pub mod sync;\n+#[cfg(target_has_atomic = \"ptr\")]\n pub mod task;\n #[cfg(test)]\n mod tests;"}, {"sha": "3705ec9dcb6c90371a7c77f373f836256293a16d", "filename": "src/liballoc/task.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ae74cafe483b16c6810a4ff34de03da4974b1ce/src%2Fliballoc%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ae74cafe483b16c6810a4ff34de03da4974b1ce/src%2Fliballoc%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftask.rs?ref=3ae74cafe483b16c6810a4ff34de03da4974b1ce", "patch": "@@ -59,20 +59,20 @@ fn raw_waker<W: Wake + Send + Sync + 'static>(waker: Arc<W>) -> RawWaker {\n     // Increment the reference count of the arc to clone it.\n     unsafe fn clone_waker<W: Wake + Send + Sync + 'static>(waker: *const ()) -> RawWaker {\n         let waker: Arc<W> = Arc::from_raw(waker as *const W);\n-        mem::forget(waker.clone());\n+        mem::forget(Arc::clone(&waker));\n         raw_waker(waker)\n     }\n \n     // Wake by value, moving the Arc into the Wake::wake function\n     unsafe fn wake<W: Wake + Send + Sync + 'static>(waker: *const ()) {\n         let waker: Arc<W> = Arc::from_raw(waker as *const W);\n-        Wake::wake(waker);\n+        <W as Wake>::wake(waker);\n     }\n \n     // Wake by reference, wrap the waker in ManuallyDrop to avoid dropping it\n     unsafe fn wake_by_ref<W: Wake + Send + Sync + 'static>(waker: *const ()) {\n         let waker: ManuallyDrop<Arc<W>> = ManuallyDrop::new(Arc::from_raw(waker as *const W));\n-        Wake::wake_by_ref(&waker);\n+        <W as Wake>::wake_by_ref(&waker);\n     }\n \n     // Decrement the reference count of the Arc on drop"}]}