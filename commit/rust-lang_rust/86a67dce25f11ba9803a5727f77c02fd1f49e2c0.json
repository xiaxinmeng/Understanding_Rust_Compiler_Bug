{"sha": "86a67dce25f11ba9803a5727f77c02fd1f49e2c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2YTY3ZGNlMjVmMTFiYTk4MDNhNTcyN2Y3N2MwMmZkMWY0OWUyYzA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-20T13:48:06Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-20T13:48:06Z"}, "message": "fix tests", "tree": {"sha": "d02a22f02908fd3c89e50845a06a89b997220fc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d02a22f02908fd3c89e50845a06a89b997220fc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86a67dce25f11ba9803a5727f77c02fd1f49e2c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86a67dce25f11ba9803a5727f77c02fd1f49e2c0", "html_url": "https://github.com/rust-lang/rust/commit/86a67dce25f11ba9803a5727f77c02fd1f49e2c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86a67dce25f11ba9803a5727f77c02fd1f49e2c0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45fc91cc470fa91d5b8905fea2cab4d42bbe72b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/45fc91cc470fa91d5b8905fea2cab4d42bbe72b3", "html_url": "https://github.com/rust-lang/rust/commit/45fc91cc470fa91d5b8905fea2cab4d42bbe72b3"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "edf3fa2910b46143f2929fa23d74c3e4da792d1d", "filename": "crates/ra_syntax/src/parsing/reparsing.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/86a67dce25f11ba9803a5727f77c02fd1f49e2c0/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86a67dce25f11ba9803a5727f77c02fd1f49e2c0/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs?ref=86a67dce25f11ba9803a5727f77c02fd1f49e2c0", "patch": "@@ -79,10 +79,12 @@ fn is_contextual_kw(text: &str) -> bool {\n     }\n }\n \n-type ParseFn = fn(&mut Parser);\n-fn find_reparsable_node(node: &SyntaxNode, range: TextRange) -> Option<(&SyntaxNode, ParseFn)> {\n+fn find_reparsable_node(\n+    node: &SyntaxNode,\n+    range: TextRange,\n+) -> Option<(&SyntaxNode, fn(&mut Parser))> {\n     let node = algo::find_covering_node(node, range);\n-    node.ancestors().find_map(grammar::reparser).map(|r| (node, r))\n+    node.ancestors().find_map(|node| grammar::reparser(node).map(|r| (node, r)))\n }\n \n fn is_balanced(tokens: &[Token]) -> bool {"}, {"sha": "c1118c5ab4104e805f7afae53c4bd46f19154a8c", "filename": "crates/ra_syntax/src/syntax_kinds.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86a67dce25f11ba9803a5727f77c02fd1f49e2c0/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86a67dce25f11ba9803a5727f77c02fd1f49e2c0/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds.rs?ref=86a67dce25f11ba9803a5727f77c02fd1f49e2c0", "patch": "@@ -1,8 +1,9 @@\n mod generated;\n \n-use crate::SyntaxKind::*;\n use std::fmt;\n \n+use crate::SyntaxKind::*;\n+\n pub use self::generated::SyntaxKind;\n \n impl fmt::Debug for SyntaxKind {"}, {"sha": "0a10d2737edbe9c8e6696671df3dc4683471287e", "filename": "crates/tools/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86a67dce25f11ba9803a5727f77c02fd1f49e2c0/crates%2Ftools%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86a67dce25f11ba9803a5727f77c02fd1f49e2c0/crates%2Ftools%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Flib.rs?ref=86a67dce25f11ba9803a5727f77c02fd1f49e2c0", "patch": "@@ -14,7 +14,7 @@ pub use teraron::{Mode, Overwrite, Verify};\n pub type Result<T> = std::result::Result<T, failure::Error>;\n \n pub const GRAMMAR: &str = \"crates/ra_syntax/src/grammar.ron\";\n-const GRAMMAR_DIR: &str = \"crates/ra_syntax/src/grammar\";\n+const GRAMMAR_DIR: &str = \"crates/ra_syntax/src/parsing/grammar\";\n const OK_INLINE_TESTS_DIR: &str = \"crates/ra_syntax/tests/data/parser/inline/ok\";\n const ERR_INLINE_TESTS_DIR: &str = \"crates/ra_syntax/tests/data/parser/inline/err\";\n "}]}