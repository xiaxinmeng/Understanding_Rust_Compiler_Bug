{"sha": "8a3f17a4e263781deac5e503ad5116ec78004618", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhM2YxN2E0ZTI2Mzc4MWRlYWM1ZTUwM2FkNTExNmVjNzgwMDQ2MTg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-02-11T09:51:09Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-02-11T09:51:09Z"}, "message": "G: fn pointer type", "tree": {"sha": "0b489b1784c572011dd9e25d6d0ba53e8a50f148", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b489b1784c572011dd9e25d6d0ba53e8a50f148"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a3f17a4e263781deac5e503ad5116ec78004618", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a3f17a4e263781deac5e503ad5116ec78004618", "html_url": "https://github.com/rust-lang/rust/commit/8a3f17a4e263781deac5e503ad5116ec78004618", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a3f17a4e263781deac5e503ad5116ec78004618/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fb33b2d0d14f09ee06a42bca252dccbf57185e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fb33b2d0d14f09ee06a42bca252dccbf57185e1", "html_url": "https://github.com/rust-lang/rust/commit/2fb33b2d0d14f09ee06a42bca252dccbf57185e1"}], "stats": {"total": 172, "additions": 155, "deletions": 17}, "files": [{"sha": "d5ad595534febc5a2b9f40e4d40bdc752a5049cd", "filename": "grammar.ron", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8a3f17a4e263781deac5e503ad5116ec78004618/grammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/8a3f17a4e263781deac5e503ad5116ec78004618/grammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/grammar.ron?ref=8a3f17a4e263781deac5e503ad5116ec78004618", "patch": "@@ -110,6 +110,7 @@ Grammar(\n         \"SLICE_TYPE\",\n         \"REFERENCE_TYPE\",\n         \"PLACEHOLDER_TYPE\",\n+        \"FN_POINTER_TYPE\",\n \n         \"EXTERN_BLOCK\",\n         \"ENUM_VARIANT\","}, {"sha": "18ee8af86370dcc8ccc8574ee90b265de4850b69", "filename": "src/parser/grammar/items/mod.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8a3f17a4e263781deac5e503ad5116ec78004618/src%2Fparser%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a3f17a4e263781deac5e503ad5116ec78004618/src%2Fparser%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fgrammar%2Fitems%2Fmod.rs?ref=8a3f17a4e263781deac5e503ad5116ec78004618", "patch": "@@ -222,12 +222,6 @@ fn fn_item(p: &mut Parser) {\n         p.expect(L_CURLY);\n         p.expect(R_CURLY);\n     }\n-\n-    fn fn_value_parameters(p: &mut Parser) {\n-        assert!(p.at(L_PAREN));\n-        p.bump();\n-        p.expect(R_PAREN);\n-    }\n }\n \n // test type_item\n@@ -263,14 +257,3 @@ fn mod_item(p: &mut Parser) {\n         }\n     }\n }\n-\n-fn abi(p: &mut Parser) {\n-    assert!(p.at(EXTERN_KW));\n-    let abi = p.start();\n-    p.bump();\n-    match p.current() {\n-        STRING | RAW_STRING => p.bump(),\n-        _ => (),\n-    }\n-    abi.complete(p, ABI);\n-}"}, {"sha": "5266354c11115b6e424339acdfdab2af5496a7fe", "filename": "src/parser/grammar/mod.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8a3f17a4e263781deac5e503ad5116ec78004618/src%2Fparser%2Fgrammar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a3f17a4e263781deac5e503ad5116ec78004618/src%2Fparser%2Fgrammar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fgrammar%2Fmod.rs?ref=8a3f17a4e263781deac5e503ad5116ec78004618", "patch": "@@ -50,6 +50,30 @@ fn alias(p: &mut Parser) -> bool {\n     true //FIXME: return false if three are errors\n }\n \n+fn abi(p: &mut Parser) {\n+    assert!(p.at(EXTERN_KW));\n+    let abi = p.start();\n+    p.bump();\n+    match p.current() {\n+        STRING | RAW_STRING => p.bump(),\n+        _ => (),\n+    }\n+    abi.complete(p, ABI);\n+}\n+\n+fn fn_value_parameters(p: &mut Parser) {\n+    assert!(p.at(L_PAREN));\n+    p.bump();\n+    p.expect(R_PAREN);\n+}\n+\n+fn fn_ret_type(p: &mut Parser) {\n+    if p.at(THIN_ARROW) {\n+        p.bump();\n+        types::type_(p);\n+    }\n+}\n+\n fn name(p: &mut Parser) {\n     if p.at(IDENT) {\n         let m = p.start();"}, {"sha": "ea4df863937b1695478b2e851dd97990d811fc8c", "filename": "src/parser/grammar/types.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8a3f17a4e263781deac5e503ad5116ec78004618/src%2Fparser%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a3f17a4e263781deac5e503ad5116ec78004618/src%2Fparser%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fgrammar%2Ftypes.rs?ref=8a3f17a4e263781deac5e503ad5116ec78004618", "patch": "@@ -8,6 +8,7 @@ pub(super) fn type_(p: &mut Parser) {\n         L_BRACK => array_or_slice_type(p),\n         AMPERSAND => reference_type(p),\n         UNDERSCORE => placeholder_type(p),\n+        FN_KW | UNSAFE_KW | EXTERN_KW => fn_pointer_type(p),\n         IDENT => path_type(p),\n         _ => {\n             p.error(\"expected type\");\n@@ -140,6 +141,31 @@ fn placeholder_type(p: &mut Parser) {\n     m.complete(p, PLACEHOLDER_TYPE);\n }\n \n+// test fn_pointer_type\n+// type A = fn();\n+// type B = unsafe fn();\n+// type C = unsafe extern \"C\" fn();\n+fn fn_pointer_type(p: &mut Parser) {\n+    let m = p.start();\n+    p.eat(UNSAFE_KW);\n+    if p.at(EXTERN_KW) {\n+        abi(p);\n+    }\n+    // test fn_pointer_type_missing_fn\n+    // type F = unsafe ();\n+    if !p.eat(FN_KW) {\n+        m.abandon(p);\n+        p.error(\"expected `fn`\");\n+        return;\n+    }\n+\n+    fn_value_parameters(p);\n+    // test fn_pointer_type_with_ret\n+    // type F = fn() -> ();\n+    fn_ret_type(p);\n+    m.complete(p, FN_POINTER_TYPE);\n+}\n+\n fn path_type(p: &mut Parser) {\n     assert!(p.at(IDENT));\n     let m = p.start();"}, {"sha": "db0f51bebbae32bfe924f0fb4ec8c12425ba21e3", "filename": "src/syntax_kinds.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a3f17a4e263781deac5e503ad5116ec78004618/src%2Fsyntax_kinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a3f17a4e263781deac5e503ad5116ec78004618/src%2Fsyntax_kinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds.rs?ref=8a3f17a4e263781deac5e503ad5116ec78004618", "patch": "@@ -108,6 +108,7 @@ pub enum SyntaxKind {\n     SLICE_TYPE,\n     REFERENCE_TYPE,\n     PLACEHOLDER_TYPE,\n+    FN_POINTER_TYPE,\n     EXTERN_BLOCK,\n     ENUM_VARIANT,\n     NAMED_FIELD,\n@@ -242,6 +243,7 @@ impl SyntaxKind {\n             SLICE_TYPE => &SyntaxInfo { name: \"SLICE_TYPE\" },\n             REFERENCE_TYPE => &SyntaxInfo { name: \"REFERENCE_TYPE\" },\n             PLACEHOLDER_TYPE => &SyntaxInfo { name: \"PLACEHOLDER_TYPE\" },\n+            FN_POINTER_TYPE => &SyntaxInfo { name: \"FN_POINTER_TYPE\" },\n             EXTERN_BLOCK => &SyntaxInfo { name: \"EXTERN_BLOCK\" },\n             ENUM_VARIANT => &SyntaxInfo { name: \"ENUM_VARIANT\" },\n             NAMED_FIELD => &SyntaxInfo { name: \"NAMED_FIELD\" },"}, {"sha": "c9bf3bdb45164cca9765119ef6a21955238d5f9b", "filename": "tests/data/parser/inline/0028_fn_pointer_type.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8a3f17a4e263781deac5e503ad5116ec78004618/tests%2Fdata%2Fparser%2Finline%2F0028_fn_pointer_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a3f17a4e263781deac5e503ad5116ec78004618/tests%2Fdata%2Fparser%2Finline%2F0028_fn_pointer_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0028_fn_pointer_type.rs?ref=8a3f17a4e263781deac5e503ad5116ec78004618", "patch": "@@ -0,0 +1,3 @@\n+type A = fn();\n+type B = unsafe fn();\n+type C = unsafe extern \"C\" fn();"}, {"sha": "6c62b0051086224ef9c4341ba480878c6a492c20", "filename": "tests/data/parser/inline/0028_fn_pointer_type.txt", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/8a3f17a4e263781deac5e503ad5116ec78004618/tests%2Fdata%2Fparser%2Finline%2F0028_fn_pointer_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8a3f17a4e263781deac5e503ad5116ec78004618/tests%2Fdata%2Fparser%2Finline%2F0028_fn_pointer_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0028_fn_pointer_type.txt?ref=8a3f17a4e263781deac5e503ad5116ec78004618", "patch": "@@ -0,0 +1,52 @@\n+FILE@[0; 70)\n+  TYPE_ITEM@[0; 15)\n+    TYPE_KW@[0; 4)\n+    NAME@[4; 7)\n+      WHITESPACE@[4; 5)\n+      IDENT@[5; 6) \"A\"\n+      WHITESPACE@[6; 7)\n+    EQ@[7; 8)\n+    FN_POINTER_TYPE@[8; 13)\n+      WHITESPACE@[8; 9)\n+      FN_KW@[9; 11)\n+      L_PAREN@[11; 12)\n+      R_PAREN@[12; 13)\n+    SEMI@[13; 14)\n+    WHITESPACE@[14; 15)\n+  TYPE_ITEM@[15; 37)\n+    TYPE_KW@[15; 19)\n+    NAME@[19; 22)\n+      WHITESPACE@[19; 20)\n+      IDENT@[20; 21) \"B\"\n+      WHITESPACE@[21; 22)\n+    EQ@[22; 23)\n+    FN_POINTER_TYPE@[23; 35)\n+      WHITESPACE@[23; 24)\n+      UNSAFE_KW@[24; 30)\n+      WHITESPACE@[30; 31)\n+      FN_KW@[31; 33)\n+      L_PAREN@[33; 34)\n+      R_PAREN@[34; 35)\n+    SEMI@[35; 36)\n+    WHITESPACE@[36; 37)\n+  TYPE_ITEM@[37; 70)\n+    TYPE_KW@[37; 41)\n+    NAME@[41; 44)\n+      WHITESPACE@[41; 42)\n+      IDENT@[42; 43) \"C\"\n+      WHITESPACE@[43; 44)\n+    EQ@[44; 45)\n+    FN_POINTER_TYPE@[45; 68)\n+      WHITESPACE@[45; 46)\n+      UNSAFE_KW@[46; 52)\n+      ABI@[52; 64)\n+        WHITESPACE@[52; 53)\n+        EXTERN_KW@[53; 59)\n+        WHITESPACE@[59; 60)\n+        STRING@[60; 63)\n+        WHITESPACE@[63; 64)\n+      FN_KW@[64; 66)\n+      L_PAREN@[66; 67)\n+      R_PAREN@[67; 68)\n+    SEMI@[68; 69)\n+    WHITESPACE@[69; 70)"}, {"sha": "f014914ff9f493e2a034c655e46c86461b55fc06", "filename": "tests/data/parser/inline/0029_fn_pointer_type_missing_fn.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8a3f17a4e263781deac5e503ad5116ec78004618/tests%2Fdata%2Fparser%2Finline%2F0029_fn_pointer_type_missing_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a3f17a4e263781deac5e503ad5116ec78004618/tests%2Fdata%2Fparser%2Finline%2F0029_fn_pointer_type_missing_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0029_fn_pointer_type_missing_fn.rs?ref=8a3f17a4e263781deac5e503ad5116ec78004618", "patch": "@@ -0,0 +1 @@\n+type F = unsafe ();"}, {"sha": "dd6e24096825e783bc33fe15d5a9845fce4b9f32", "filename": "tests/data/parser/inline/0029_fn_pointer_type_missing_fn.txt", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8a3f17a4e263781deac5e503ad5116ec78004618/tests%2Fdata%2Fparser%2Finline%2F0029_fn_pointer_type_missing_fn.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8a3f17a4e263781deac5e503ad5116ec78004618/tests%2Fdata%2Fparser%2Finline%2F0029_fn_pointer_type_missing_fn.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0029_fn_pointer_type_missing_fn.txt?ref=8a3f17a4e263781deac5e503ad5116ec78004618", "patch": "@@ -0,0 +1,24 @@\n+FILE@[0; 20)\n+  TYPE_ITEM@[0; 16)\n+    TYPE_KW@[0; 4)\n+    NAME@[4; 7)\n+      WHITESPACE@[4; 5)\n+      IDENT@[5; 6) \"F\"\n+      WHITESPACE@[6; 7)\n+    EQ@[7; 8)\n+    WHITESPACE@[8; 9)\n+    UNSAFE_KW@[9; 15)\n+    err: `expected `fn``\n+    err: `expected SEMI`\n+    WHITESPACE@[15; 16)\n+  ERROR@[16; 17)\n+  err: `expected item`\n+    L_PAREN@[16; 17)\n+  ERROR@[17; 18)\n+  err: `expected item`\n+    R_PAREN@[17; 18)\n+  ERROR@[18; 20)\n+  err: `expected item, found `;`\n+consider removing this semicolon`\n+    SEMI@[18; 19)\n+    WHITESPACE@[19; 20)"}, {"sha": "e3ba5e87f5d4ee39a8f3175475cc76c431137992", "filename": "tests/data/parser/inline/0030_fn_pointer_type_with_ret.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8a3f17a4e263781deac5e503ad5116ec78004618/tests%2Fdata%2Fparser%2Finline%2F0030_fn_pointer_type_with_ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a3f17a4e263781deac5e503ad5116ec78004618/tests%2Fdata%2Fparser%2Finline%2F0030_fn_pointer_type_with_ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0030_fn_pointer_type_with_ret.rs?ref=8a3f17a4e263781deac5e503ad5116ec78004618", "patch": "@@ -0,0 +1 @@\n+type F = fn() -> ();"}, {"sha": "b41efa3682b398a8b122114b535354ced08ca355", "filename": "tests/data/parser/inline/0030_fn_pointer_type_with_ret.txt", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8a3f17a4e263781deac5e503ad5116ec78004618/tests%2Fdata%2Fparser%2Finline%2F0030_fn_pointer_type_with_ret.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8a3f17a4e263781deac5e503ad5116ec78004618/tests%2Fdata%2Fparser%2Finline%2F0030_fn_pointer_type_with_ret.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0030_fn_pointer_type_with_ret.txt?ref=8a3f17a4e263781deac5e503ad5116ec78004618", "patch": "@@ -0,0 +1,21 @@\n+FILE@[0; 21)\n+  TYPE_ITEM@[0; 21)\n+    TYPE_KW@[0; 4)\n+    NAME@[4; 7)\n+      WHITESPACE@[4; 5)\n+      IDENT@[5; 6) \"F\"\n+      WHITESPACE@[6; 7)\n+    EQ@[7; 8)\n+    FN_POINTER_TYPE@[8; 19)\n+      WHITESPACE@[8; 9)\n+      FN_KW@[9; 11)\n+      L_PAREN@[11; 12)\n+      R_PAREN@[12; 13)\n+      WHITESPACE@[13; 14)\n+      THIN_ARROW@[14; 16)\n+      TUPLE_TYPE@[16; 19)\n+        WHITESPACE@[16; 17)\n+        L_PAREN@[17; 18)\n+        R_PAREN@[18; 19)\n+    SEMI@[19; 20)\n+    WHITESPACE@[20; 21)"}]}