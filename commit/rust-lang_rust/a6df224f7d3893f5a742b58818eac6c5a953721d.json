{"sha": "a6df224f7d3893f5a742b58818eac6c5a953721d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZGYyMjRmN2QzODkzZjVhNzQyYjU4ODE4ZWFjNmM1YTk1MzcyMWQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-19T15:25:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-19T15:25:07Z"}, "message": "minor", "tree": {"sha": "12e2301c22b893d8f25abd7ded41f8b163e82efa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12e2301c22b893d8f25abd7ded41f8b163e82efa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6df224f7d3893f5a742b58818eac6c5a953721d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6df224f7d3893f5a742b58818eac6c5a953721d", "html_url": "https://github.com/rust-lang/rust/commit/a6df224f7d3893f5a742b58818eac6c5a953721d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6df224f7d3893f5a742b58818eac6c5a953721d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c594bcb48f01bdcf3068f72cefffda337a03533", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c594bcb48f01bdcf3068f72cefffda337a03533", "html_url": "https://github.com/rust-lang/rust/commit/5c594bcb48f01bdcf3068f72cefffda337a03533"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "66cb9633bbba08e72631e206f8a182c20ef9a947", "filename": "crates/ra_hir/src/expr.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a6df224f7d3893f5a742b58818eac6c5a953721d/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6df224f7d3893f5a742b58818eac6c5a953721d/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr.rs?ref=a6df224f7d3893f5a742b58818eac6c5a953721d", "patch": "@@ -564,11 +564,7 @@ where\n                         .else_branch()\n                         .map(|b| match b {\n                             ast::ElseBranch::Block(it) => self.collect_block(it),\n-                            ast::ElseBranch::IfExpr(elif) => {\n-                                let expr: ast::Expr =\n-                                    ast::Expr::cast(elif.syntax().clone()).unwrap();\n-                                self.collect_expr(expr)\n-                            }\n+                            ast::ElseBranch::IfExpr(elif) => self.collect_expr(elif.into()),\n                         })\n                         .unwrap_or_else(|| self.empty_block());\n                     let placeholder_pat = self.pats.alloc(Pat::Missing);"}]}