{"sha": "e16c56bf134c7be71bfdbb7d574995fc9012a497", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNmM1NmJmMTM0YzdiZTcxYmZkYmI3ZDU3NDk5NWZjOTAxMmE0OTc=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-09-28T09:06:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-28T09:06:56Z"}, "message": "Merge pull request #2000 from Badel2/dotdoteq\n\nSupport for `..=` syntax", "tree": {"sha": "6e50884fdd15b9fdbea469016efff9cebd5691e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e50884fdd15b9fdbea469016efff9cebd5691e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e16c56bf134c7be71bfdbb7d574995fc9012a497", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e16c56bf134c7be71bfdbb7d574995fc9012a497", "html_url": "https://github.com/rust-lang/rust/commit/e16c56bf134c7be71bfdbb7d574995fc9012a497", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e16c56bf134c7be71bfdbb7d574995fc9012a497/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22eb5241c0ee5bb7eaf95e270a2b1500e82bf767", "url": "https://api.github.com/repos/rust-lang/rust/commits/22eb5241c0ee5bb7eaf95e270a2b1500e82bf767", "html_url": "https://github.com/rust-lang/rust/commit/22eb5241c0ee5bb7eaf95e270a2b1500e82bf767"}, {"sha": "feb7a6a0a631fe89a27f55d0566d5c354ad6ddda", "url": "https://api.github.com/repos/rust-lang/rust/commits/feb7a6a0a631fe89a27f55d0566d5c354ad6ddda", "html_url": "https://github.com/rust-lang/rust/commit/feb7a6a0a631fe89a27f55d0566d5c354ad6ddda"}], "stats": {"total": 64, "additions": 28, "deletions": 36}, "files": [{"sha": "9b59e0cbd787b20f63f4d1d585a020479e87003d", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e16c56bf134c7be71bfdbb7d574995fc9012a497/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e16c56bf134c7be71bfdbb7d574995fc9012a497/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=e16c56bf134c7be71bfdbb7d574995fc9012a497", "patch": "@@ -232,7 +232,7 @@ pub fn format_expr(\n         ast::ExprKind::Range(ref lhs, ref rhs, limits) => {\n             let delim = match limits {\n                 ast::RangeLimits::HalfOpen => \"..\",\n-                ast::RangeLimits::Closed => \"...\",\n+                ast::RangeLimits::Closed => \"..=\",\n             };\n \n             fn needs_space_before_range(context: &RewriteContext, lhs: &ast::Expr) -> bool {"}, {"sha": "b05889c29e9a5a60a6907279c958c40286270f2e", "filename": "src/patterns.rs", "status": "modified", "additions": 11, "deletions": 19, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e16c56bf134c7be71bfdbb7d574995fc9012a497/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e16c56bf134c7be71bfdbb7d574995fc9012a497/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=e16c56bf134c7be71bfdbb7d574995fc9012a497", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use syntax::ast::{self, BindingMode, FieldPat, Pat, PatKind, RangeEnd};\n+use syntax::ast::{self, BindingMode, FieldPat, Pat, PatKind, RangeEnd, RangeSyntax};\n use syntax::codemap::{self, BytePos, Span};\n use syntax::ptr;\n \n@@ -58,31 +58,23 @@ impl Rewrite for Pat {\n             } else {\n                 None\n             },\n-            PatKind::Range(ref lhs, ref rhs, ref end_kind) => match *end_kind {\n-                RangeEnd::Excluded => rewrite_pair(\n-                    &**lhs,\n-                    &**rhs,\n-                    \"\",\n-                    \"..\",\n-                    \"\",\n-                    context,\n-                    shape,\n-                    SeparatorPlace::Front,\n-                ),\n-                // FIXME: Change _ to RangeEnd::Included(RangeSyntax::DotDotDot)\n-                // and add RangeEnd::Included(RangeSyntax::DotDotEq)\n-                // once rust PR #44709 gets merged\n-                _ => rewrite_pair(\n+            PatKind::Range(ref lhs, ref rhs, ref end_kind) => {\n+                let infix = match *end_kind {\n+                    RangeEnd::Included(RangeSyntax::DotDotDot) => \"...\",\n+                    RangeEnd::Included(RangeSyntax::DotDotEq) => \"..=\",\n+                    RangeEnd::Excluded => \"..\",\n+                };\n+                rewrite_pair(\n                     &**lhs,\n                     &**rhs,\n                     \"\",\n-                    \"...\",\n+                    infix,\n                     \"\",\n                     context,\n                     shape,\n                     SeparatorPlace::Front,\n-                ),\n-            },\n+                )\n+            }\n             PatKind::Ref(ref pat, mutability) => {\n                 let prefix = format!(\"&{}\", format_mutability(mutability));\n                 rewrite_unary_prefix(context, &prefix, &**pat, shape)"}, {"sha": "1a8d35f2f0c915a8a4d59410d68627260917dab8", "filename": "tests/source/expr.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e16c56bf134c7be71bfdbb7d574995fc9012a497/tests%2Fsource%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e16c56bf134c7be71bfdbb7d574995fc9012a497/tests%2Fsource%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr.rs?ref=e16c56bf134c7be71bfdbb7d574995fc9012a497", "patch": "@@ -250,17 +250,17 @@ fn issue767() {\n \n fn ranges() {\n     let x = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa .. bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;\n-    let y = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ... bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;\n-    let z = ... x ;\n+    let y = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ..= bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;\n+    let z = ..= x ;\n \n     // #1766\n     let x = [0. ..10.0];\n-    let x = [0. ...10.0];\n+    let x = [0. ..=10.0];\n \n-    a ... b\n+    a ..= b\n \n-    // the expr below won't compile for some reason...\n-    // let a = 0 ... ;\n+    // the expr below won't compile because inclusive ranges need a defined end\n+    // let a = 0 ..= ;\n }\n \n fn if_else() {"}, {"sha": "1936b5e161f825cc195bf2b223c228e73ab8cc18", "filename": "tests/source/spaces-around-ranges.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e16c56bf134c7be71bfdbb7d574995fc9012a497/tests%2Fsource%2Fspaces-around-ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e16c56bf134c7be71bfdbb7d574995fc9012a497/tests%2Fsource%2Fspaces-around-ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fspaces-around-ranges.rs?ref=e16c56bf134c7be71bfdbb7d574995fc9012a497", "patch": "@@ -4,12 +4,12 @@ fn bar(v: &[u8]) {}\n \n fn foo() {\n     let a = vec![0; 20];\n-    for j in 0...20 {\n+    for j in 0..=20 {\n         for i in 0..3 {\n             bar(a[i..j]);\n             bar(a[i..]);\n             bar(a[..j]);\n-            bar(a[...(j + 1)]);\n+            bar(a[..=(j + 1)]);\n         }\n     }\n }"}, {"sha": "4842dcb936676e9e29e1c2267a4b1a8268f99b33", "filename": "tests/target/expr.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e16c56bf134c7be71bfdbb7d574995fc9012a497/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e16c56bf134c7be71bfdbb7d574995fc9012a497/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=e16c56bf134c7be71bfdbb7d574995fc9012a497", "patch": "@@ -316,17 +316,17 @@ fn issue767() {\n fn ranges() {\n     let x = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa..bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;\n     let y =\n-        aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa...bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;\n-    let z = ...x;\n+        aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa..=bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb;\n+    let z = ..=x;\n \n     // #1766\n     let x = [0. ..10.0];\n-    let x = [0. ...10.0];\n+    let x = [0. ..=10.0];\n \n-    a...b\n+    a..=b\n \n-    // the expr below won't compile for some reason...\n-    // let a = 0 ... ;\n+    // the expr below won't compile because inclusive ranges need a defined end\n+    // let a = 0 ..= ;\n }\n \n fn if_else() {"}, {"sha": "b53e5b58b8cd62c9359f757ec43dfb2c0a703bee", "filename": "tests/target/spaces-around-ranges.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e16c56bf134c7be71bfdbb7d574995fc9012a497/tests%2Ftarget%2Fspaces-around-ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e16c56bf134c7be71bfdbb7d574995fc9012a497/tests%2Ftarget%2Fspaces-around-ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fspaces-around-ranges.rs?ref=e16c56bf134c7be71bfdbb7d574995fc9012a497", "patch": "@@ -4,12 +4,12 @@ fn bar(v: &[u8]) {}\n \n fn foo() {\n     let a = vec![0; 20];\n-    for j in 0 ... 20 {\n+    for j in 0 ..= 20 {\n         for i in 0 .. 3 {\n             bar(a[i .. j]);\n             bar(a[i ..]);\n             bar(a[.. j]);\n-            bar(a[... (j + 1)]);\n+            bar(a[..= (j + 1)]);\n         }\n     }\n }"}]}