{"sha": "f2966d1d0c439db338705200e58d55fb6f300469", "node_id": "C_kwDOAAsO6NoAKGYyOTY2ZDFkMGM0MzlkYjMzODcwNTIwMGU1OGQ1NWZiNmYzMDA0Njk", "commit": {"author": {"name": "Ibraheem Ahmed", "email": "ibraheem@ibraheem.ca", "date": "2022-10-17T23:36:46Z"}, "committer": {"name": "Ibraheem Ahmed", "email": "ibraheem@ibraheem.ca", "date": "2022-11-10T04:20:02Z"}, "message": "remove extra spinning from `mpsc` parker", "tree": {"sha": "2e8464ed969daa3cdbed0ebc0b238c619ff93a70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e8464ed969daa3cdbed0ebc0b238c619ff93a70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2966d1d0c439db338705200e58d55fb6f300469", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2966d1d0c439db338705200e58d55fb6f300469", "html_url": "https://github.com/rust-lang/rust/commit/f2966d1d0c439db338705200e58d55fb6f300469", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2966d1d0c439db338705200e58d55fb6f300469/comments", "author": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dddb2294310ad3e8ce0b2af735a702ad72a9a99", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dddb2294310ad3e8ce0b2af735a702ad72a9a99", "html_url": "https://github.com/rust-lang/rust/commit/8dddb2294310ad3e8ce0b2af735a702ad72a9a99"}], "stats": {"total": 15, "additions": 0, "deletions": 15}, "files": [{"sha": "dea6880017d97bdfa1f75d46a9103e278c725199", "filename": "library/std/src/sync/mpmc/context.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f2966d1d0c439db338705200e58d55fb6f300469/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2966d1d0c439db338705200e58d55fb6f300469/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Fcontext.rs?ref=f2966d1d0c439db338705200e58d55fb6f300469", "patch": "@@ -115,21 +115,6 @@ impl Context {\n     /// If the deadline is reached, `Selected::Aborted` will be selected.\n     #[inline]\n     pub fn wait_until(&self, deadline: Option<Instant>) -> Selected {\n-        // Spin for a short time, waiting until an operation is selected.\n-        let backoff = Backoff::new();\n-        loop {\n-            let sel = Selected::from(self.inner.select.load(Ordering::Acquire));\n-            if sel != Selected::Waiting {\n-                return sel;\n-            }\n-\n-            if backoff.is_completed() {\n-                break;\n-            } else {\n-                backoff.snooze();\n-            }\n-        }\n-\n         loop {\n             // Check whether an operation has been selected.\n             let sel = Selected::from(self.inner.select.load(Ordering::Acquire));"}]}