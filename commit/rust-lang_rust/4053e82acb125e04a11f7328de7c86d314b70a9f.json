{"sha": "4053e82acb125e04a11f7328de7c86d314b70a9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNTNlODJhY2IxMjVlMDRhMTFmNzMyOGRlN2M4NmQzMTRiNzBhOWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-12-04T15:03:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-12-04T15:03:39Z"}, "message": "auto merge of #19170 : erickt/rust/rustup, r=erickt\n\nThis closes #19168.\r\n\r\nPlease be careful reviewing this since this gets used all over the place. I've tested all the options and everything appears to be working though.", "tree": {"sha": "37e6b0f3eeda2a31451c428f78a9ffdead89ab15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37e6b0f3eeda2a31451c428f78a9ffdead89ab15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4053e82acb125e04a11f7328de7c86d314b70a9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4053e82acb125e04a11f7328de7c86d314b70a9f", "html_url": "https://github.com/rust-lang/rust/commit/4053e82acb125e04a11f7328de7c86d314b70a9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4053e82acb125e04a11f7328de7c86d314b70a9f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d965cc2c99787a949d38abf225412fe502d3ed8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d965cc2c99787a949d38abf225412fe502d3ed8", "html_url": "https://github.com/rust-lang/rust/commit/6d965cc2c99787a949d38abf225412fe502d3ed8"}, {"sha": "f86737973ac65a5c9d6c60d74acccfcfe0175fb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f86737973ac65a5c9d6c60d74acccfcfe0175fb4", "html_url": "https://github.com/rust-lang/rust/commit/f86737973ac65a5c9d6c60d74acccfcfe0175fb4"}], "stats": {"total": 151, "additions": 86, "deletions": 65}, "files": [{"sha": "b610bc65b09c61a7a344256a3be79fc64bc5a81c", "filename": "src/etc/rustup.sh", "status": "modified", "additions": 86, "deletions": 65, "changes": 151, "blob_url": "https://github.com/rust-lang/rust/blob/4053e82acb125e04a11f7328de7c86d314b70a9f/src%2Fetc%2Frustup.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4053e82acb125e04a11f7328de7c86d314b70a9f/src%2Fetc%2Frustup.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Frustup.sh?ref=4053e82acb125e04a11f7328de7c86d314b70a9f", "patch": "@@ -188,7 +188,7 @@ flag() {\n      fi\n }\n \n-validate_opt () {\n+validate_opt() {\n     for arg in $CFG_ARGS\n     do\n         isArgValid=0\n@@ -230,6 +230,7 @@ validate_opt () {\n }\n \n probe_need CFG_CURL  curl\n+probe_need CFG_TAR   tar\n \n CFG_SRC_DIR=\"$(cd $(dirname $0) && pwd)/\"\n CFG_SELF=\"$0\"\n@@ -388,89 +389,109 @@ esac\n \n msg \"host triple: ${HOST_TRIPLE}\"\n \n-PACKAGE_NAME=rust-nightly\n-PACKAGE_NAME_AND_TRIPLE=\"${PACKAGE_NAME}-${HOST_TRIPLE}\"\n-TARBALL_NAME=\"${PACKAGE_NAME_AND_TRIPLE}.tar.gz\"\n-REMOTE_TARBALL=\"https://static.rust-lang.org/dist/${TARBALL_NAME}\"\n-TMP_DIR=\"./rustup-tmp-install\"\n-LOCAL_TARBALL=\"${TMP_DIR}/${TARBALL_NAME}\"\n-LOCAL_INSTALL_DIR=\"${TMP_DIR}/${PACKAGE_NAME_AND_TRIPLE}\"\n-LOCAL_INSTALL_SCRIPT=\"${LOCAL_INSTALL_DIR}/install.sh\"\n+CFG_INSTALL_FLAGS=\"\"\n+if [ -n \"${CFG_UNINSTALL}\" ]\n+then\n+    CFG_INSTALL_FLAGS=\"${CFG_INSTALL_FLAGS} --uninstall\"\n+fi\n+\n+if [ -n \"${CFG_PREFIX}\" ]\n+then\n+    CFG_INSTALL_FLAGS=\"${CFG_INSTALL_FLAGS} --prefix=${CFG_PREFIX}\"\n+fi\n+\n+CFG_TMP_DIR=\"./rustup-tmp-install\"\n \n+RUST_URL=\"https://static.rust-lang.org/dist\"\n+RUST_PACKAGE_NAME=rust-nightly\n+RUST_PACKAGE_NAME_AND_TRIPLE=\"${RUST_PACKAGE_NAME}-${HOST_TRIPLE}\"\n+RUST_TARBALL_NAME=\"${RUST_PACKAGE_NAME_AND_TRIPLE}.tar.gz\"\n+RUST_LOCAL_INSTALL_DIR=\"${CFG_TMP_DIR}/${RUST_PACKAGE_NAME_AND_TRIPLE}\"\n+RUST_LOCAL_INSTALL_SCRIPT=\"${RUST_LOCAL_INSTALL_DIR}/install.sh\"\n+\n+CARGO_URL=\"https://static.rust-lang.org/cargo-dist\"\n CARGO_PACKAGE_NAME=cargo-nightly\n CARGO_PACKAGE_NAME_AND_TRIPLE=\"${CARGO_PACKAGE_NAME}-${HOST_TRIPLE}\"\n CARGO_TARBALL_NAME=\"${CARGO_PACKAGE_NAME_AND_TRIPLE}.tar.gz\"\n-CARGO_REMOTE_TARBALL=\"https://static.rust-lang.org/cargo-dist/${CARGO_TARBALL_NAME}\"\n-CARGO_LOCAL_TARBALL=\"${TMP_DIR}/${CARGO_TARBALL_NAME}\"\n-CARGO_LOCAL_INSTALL_DIR=\"${TMP_DIR}/${CARGO_PACKAGE_NAME_AND_TRIPLE}\"\n+CARGO_LOCAL_INSTALL_DIR=\"${CFG_TMP_DIR}/${CARGO_PACKAGE_NAME_AND_TRIPLE}\"\n CARGO_LOCAL_INSTALL_SCRIPT=\"${CARGO_LOCAL_INSTALL_DIR}/install.sh\"\n \n-rm -Rf \"${TMP_DIR}\"\n-need_ok \"failed to remove temporary installation directory\"\n+# Fetch the package.\n+download_package() {\n+    remote_tarball=\"$1\"\n+    local_tarball=\"$2\"\n \n-mkdir -p \"${TMP_DIR}\"\n-need_ok \"failed to create create temporary installation directory\"\n+    msg \"Downloading ${remote_tarball} to ${local_tarball}\"\n \n-msg \"downloading rust installer\"\n-\"${CFG_CURL}\" \"${REMOTE_TARBALL}\" > \"${LOCAL_TARBALL}\"\n-if [ $? -ne 0 ]\n-then\n-        rm -Rf \"${TMP_DIR}\"\n-        err \"failed to download installer\"\n-fi\n+    mkdir -p \"${CFG_TMP_DIR}\"\n+    need_ok \"failed to create create download directory\"\n \n-if [ -z \"${CFG_DISABLE_CARGO}\" ]; then\n-    msg \"downloading cargo installer\"\n-    \"${CFG_CURL}\" \"${CARGO_REMOTE_TARBALL}\" > \"${CARGO_LOCAL_TARBALL}\"\n+    \"${CFG_CURL}\" -f -o \"${local_tarball}\" \"${remote_tarball}\"\n     if [ $? -ne 0 ]\n     then\n-            rm -Rf \"${TMP_DIR}\"\n-            err \"failed to download cargo installer\"\n+        rm -Rf \"${CFG_TMP_DIR}\"\n+        err \"failed to download installer\"\n     fi\n-fi\n+}\n \n+# Wrap all the commands needed to install a package.\n+install_package() {\n+    tarball_name=\"$1\"\n+    install_script=\"$2\"\n \n-(cd \"${TMP_DIR}\" && tar xzf \"${TARBALL_NAME}\")\n-if [ $? -ne 0 ]\n-then\n-        rm -Rf \"${TMP_DIR}\"\n+    msg \"Extracting ${tarball_name}\"\n+    (cd \"${CFG_TMP_DIR}\" && \"${CFG_TAR}\" -xvf \"${tarball_name}\")\n+    if [ $? -ne 0 ]; then\n+        rm -Rf \"${CFG_TMP_DIR}\"\n         err \"failed to unpack installer\"\n-fi\n-\n-MAYBE_UNINSTALL=\n-if [ -n \"${CFG_UNINSTALL}\" ]\n-then\n-        MAYBE_UNINSTALL=\"--uninstall\"\n-fi\n-\n-MAYBE_PREFIX=\n-if [ -n \"${CFG_PREFIX}\" ]\n-then\n-        MAYBE_PREFIX=\"--prefix=${CFG_PREFIX}\"\n-fi\n-\n-sh \"${LOCAL_INSTALL_SCRIPT}\" \"${MAYBE_UNINSTALL}\" \"${MAYBE_PREFIX}\"\n-if [ $? -ne 0 ]\n-then\n-        rm -Rf \"${TMP_DIR}\"\n-        err \"failed to install Rust\"\n-fi\n+    fi\n \n-if [ -z \"${CFG_DISABLE_CARGO}\" ]; then\n-    (cd \"${TMP_DIR}\" && tar xzf \"${CARGO_TARBALL_NAME}\")\n+    sh \"${install_script}\" \"${CFG_INSTALL_FLAGS}\"\n     if [ $? -ne 0 ]\n     then\n-            rm -Rf \"${TMP_DIR}\"\n-            err \"failed to unpack cargo installer\"\n+        rm -Rf \"${CFG_TMP_DIR}\"\n+        err \"failed to install Rust\"\n     fi\n+}\n \n-    sh \"${CARGO_LOCAL_INSTALL_SCRIPT}\" \"${MAYBE_UNINSTALL}\" \"${MAYBE_PREFIX}\"\n-    if [ $? -ne 0 ]\n-    then\n-            rm -Rf \"${TMP_DIR}\"\n-            err \"failed to install Cargo\"\n+# It's possible that curl could be interrupted partway though downloading\n+# `rustup.sh`, truncating the file. This could be especially bad if we were in\n+# the middle of a line that would run \"rm -rf \". To protect against this, we\n+# wrap up the `rustup.sh` destructive functionality in this helper function,\n+# which we call as the last thing we do. This means we will not do anything\n+# unless we have the entire file downloaded.\n+install_packages() {\n+    rm -Rf \"${CFG_TMP_DIR}\"\n+    need_ok \"failed to remove temporary installation directory\"\n+\n+    mkdir -p \"${CFG_TMP_DIR}\"\n+    need_ok \"failed to create create temporary installation directory\"\n+\n+    RUST_LOCAL_TARBALL=\"${CFG_TMP_DIR}/${RUST_TARBALL_NAME}\"\n+    CARGO_LOCAL_TARBALL=\"${CFG_TMP_DIR}/${CARGO_TARBALL_NAME}\"\n+\n+    download_package \\\n+        \"${RUST_URL}/${RUST_TARBALL_NAME}\" \\\n+        \"${RUST_LOCAL_TARBALL}\"\n+\n+    if [ -z \"${CFG_DISABLE_CARGO}\" ]; then\n+        download_package \\\n+            \"${CARGO_URL}/${CARGO_TARBALL_NAME}\" \\\n+            \"${CARGO_LOCAL_TARBALL}\"\n     fi\n-fi\n \n-rm -Rf \"${TMP_DIR}\"\n-need_ok \"couldn't rm temporary installation directory\"\n+    install_package \\\n+        \"${RUST_TARBALL_NAME}\" \\\n+        \"${RUST_LOCAL_INSTALL_SCRIPT}\"\n+\n+    if [ -z \"${CFG_DISABLE_CARGO}\" ]; then\n+        install_package \\\n+            \"${CARGO_TARBALL_NAME}\" \\\n+            \"${CARGO_LOCAL_INSTALL_SCRIPT}\"\n+    fi\n+\n+    rm -Rf \"${CFG_TMP_DIR}\"\n+    need_ok \"couldn't rm temporary installation directory\"\n+}\n+\n+install_packages"}]}