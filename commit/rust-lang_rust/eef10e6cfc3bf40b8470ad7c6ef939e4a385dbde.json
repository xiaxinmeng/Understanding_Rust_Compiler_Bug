{"sha": "eef10e6cfc3bf40b8470ad7c6ef939e4a385dbde", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlZjEwZTZjZmMzYmY0MGI4NDcwYWQ3YzZlZjkzOWU0YTM4NWRiZGU=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-07-06T23:13:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-06T23:13:05Z"}, "message": "Rollup merge of #33265 - tshepang:peek, r=steveklabnik\n\ndoc: some `peek` improvements", "tree": {"sha": "a0482415aee442cbca2a460481b498ae2b1d8784", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0482415aee442cbca2a460481b498ae2b1d8784"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eef10e6cfc3bf40b8470ad7c6ef939e4a385dbde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eef10e6cfc3bf40b8470ad7c6ef939e4a385dbde", "html_url": "https://github.com/rust-lang/rust/commit/eef10e6cfc3bf40b8470ad7c6ef939e4a385dbde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eef10e6cfc3bf40b8470ad7c6ef939e4a385dbde/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "155f0ec5c9ec09daccbf5a00f5707964922c3141", "url": "https://api.github.com/repos/rust-lang/rust/commits/155f0ec5c9ec09daccbf5a00f5707964922c3141", "html_url": "https://github.com/rust-lang/rust/commit/155f0ec5c9ec09daccbf5a00f5707964922c3141"}, {"sha": "db26b3f5bcc49768a04867d5a21906f2bca4aa4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/db26b3f5bcc49768a04867d5a21906f2bca4aa4a", "html_url": "https://github.com/rust-lang/rust/commit/db26b3f5bcc49768a04867d5a21906f2bca4aa4a"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "dffe9dee022a68704fc565efa10467bc56c2725b", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eef10e6cfc3bf40b8470ad7c6ef939e4a385dbde/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eef10e6cfc3bf40b8470ad7c6ef939e4a385dbde/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=eef10e6cfc3bf40b8470ad7c6ef939e4a385dbde", "patch": "@@ -1198,17 +1198,15 @@ impl<I: ExactSizeIterator> ExactSizeIterator for Peekable<I> {}\n impl<I: Iterator> Peekable<I> {\n     /// Returns a reference to the next() value without advancing the iterator.\n     ///\n-    /// The `peek()` method will return the value that a call to [`next()`] would\n-    /// return, but does not advance the iterator. Like [`next()`], if there is\n-    /// a value, it's wrapped in a `Some(T)`, but if the iterator is over, it\n-    /// will return `None`.\n+    /// Like [`next()`], if there is a value, it is wrapped in a `Some(T)`.\n+    /// But if the iteration is over, `None` is returned.\n     ///\n     /// [`next()`]: trait.Iterator.html#tymethod.next\n     ///\n-    /// Because `peek()` returns reference, and many iterators iterate over\n-    /// references, this leads to a possibly confusing situation where the\n+    /// Because `peek()` returns a reference, and many iterators iterate over\n+    /// references, there can be a possibly confusing situation where the\n     /// return value is a double reference. You can see this effect in the\n-    /// examples below, with `&&i32`.\n+    /// examples below.\n     ///\n     /// # Examples\n     ///\n@@ -1225,13 +1223,13 @@ impl<I: Iterator> Peekable<I> {\n     ///\n     /// assert_eq!(iter.next(), Some(&2));\n     ///\n-    /// // we can peek() multiple times, the iterator won't advance\n+    /// // The iterator does not advance even if we `peek` multiple times\n     /// assert_eq!(iter.peek(), Some(&&3));\n     /// assert_eq!(iter.peek(), Some(&&3));\n     ///\n     /// assert_eq!(iter.next(), Some(&3));\n     ///\n-    /// // after the iterator is finished, so is peek()\n+    /// // After the iterator is finished, so is `peek()`\n     /// assert_eq!(iter.peek(), None);\n     /// assert_eq!(iter.next(), None);\n     /// ```\n@@ -1263,10 +1261,10 @@ impl<I: Iterator> Peekable<I> {\n     ///\n     /// let mut iter = xs.iter().peekable();\n     ///\n-    /// // there are still elements to iterate over\n+    /// // There are still elements to iterate over\n     /// assert_eq!(iter.is_empty(), false);\n     ///\n-    /// // let's consume the iterator\n+    /// // Let's consume the iterator\n     /// iter.next();\n     /// iter.next();\n     /// iter.next();"}]}