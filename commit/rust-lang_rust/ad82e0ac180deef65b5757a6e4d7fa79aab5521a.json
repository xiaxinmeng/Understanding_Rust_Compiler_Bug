{"sha": "ad82e0ac180deef65b5757a6e4d7fa79aab5521a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkODJlMGFjMTgwZGVlZjY1YjU3NTdhNmU0ZDdmYTc5YWFiNTUyMWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-22T22:42:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-22T22:42:00Z"}, "message": "Auto merge of #28504 - Eljay:fix-trait-privacy, r=nrc\n\nFixes #16264 / #18241.\r\n\r\nAs far as I can tell, it should be impossible for a trait to be inaccessible if it's in scope, so this check is unnecessary. Are there any cases where this check is actually needed?", "tree": {"sha": "9ccf7a87c2fb357ecc0c238c2663dcc56688f648", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ccf7a87c2fb357ecc0c238c2663dcc56688f648"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad82e0ac180deef65b5757a6e4d7fa79aab5521a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad82e0ac180deef65b5757a6e4d7fa79aab5521a", "html_url": "https://github.com/rust-lang/rust/commit/ad82e0ac180deef65b5757a6e4d7fa79aab5521a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad82e0ac180deef65b5757a6e4d7fa79aab5521a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecbd8c3b43d7d992938f7214b3bab1c017669e59", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecbd8c3b43d7d992938f7214b3bab1c017669e59", "html_url": "https://github.com/rust-lang/rust/commit/ecbd8c3b43d7d992938f7214b3bab1c017669e59"}, {"sha": "b3e1aca40f889a565bfa2607b82b80fe7cbcefea", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3e1aca40f889a565bfa2607b82b80fe7cbcefea", "html_url": "https://github.com/rust-lang/rust/commit/b3e1aca40f889a565bfa2607b82b80fe7cbcefea"}], "stats": {"total": 59, "additions": 53, "deletions": 6}, "files": [{"sha": "710341952a7e8e718e459752591e16e5748d96dd", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ad82e0ac180deef65b5757a6e4d7fa79aab5521a/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad82e0ac180deef65b5757a6e4d7fa79aab5521a/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=ad82e0ac180deef65b5757a6e4d7fa79aab5521a", "patch": "@@ -847,12 +847,8 @@ impl<'a, 'tcx> PrivacyVisitor<'a, 'tcx> {\n             ty::ImplContainer(_) => {\n                 self.check_static_method(span, method_def_id, name)\n             }\n-            // Trait methods are always all public. The only controlling factor\n-            // is whether the trait itself is accessible or not.\n-            ty::TraitContainer(trait_def_id) => {\n-                self.report_error(self.ensure_public(span, trait_def_id,\n-                                                     None, \"source trait\"));\n-            }\n+            // Trait methods are always accessible if the trait is in scope.\n+            ty::TraitContainer(_) => {}\n         }\n     }\n }"}, {"sha": "ccb379c717928d5da0daf112f526d910d8a98215", "filename": "src/test/compile-fail/privacy-ufcs.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ad82e0ac180deef65b5757a6e4d7fa79aab5521a/src%2Ftest%2Fcompile-fail%2Fprivacy-ufcs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad82e0ac180deef65b5757a6e4d7fa79aab5521a/src%2Ftest%2Fcompile-fail%2Fprivacy-ufcs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy-ufcs.rs?ref=ad82e0ac180deef65b5757a6e4d7fa79aab5521a", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test to ensure private traits are inaccessible with UFCS angle-bracket syntax.\n+\n+mod foo {\n+    trait Bar {\n+        fn baz() {}\n+    }\n+\n+    impl Bar for i32 {}\n+}\n+\n+fn main() {\n+    <i32 as ::foo::Bar>::baz(); //~ERROR method `baz` is inaccessible\n+                                //~^NOTE: trait `Bar` is private\n+}"}, {"sha": "67701de6386934333671dbe9647eb3029c89b4ad", "filename": "src/test/run-pass/issue-16264.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ad82e0ac180deef65b5757a6e4d7fa79aab5521a/src%2Ftest%2Frun-pass%2Fissue-16264.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad82e0ac180deef65b5757a6e4d7fa79aab5521a/src%2Ftest%2Frun-pass%2Fissue-16264.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16264.rs?ref=ad82e0ac180deef65b5757a6e4d7fa79aab5521a", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use outer::Foo;\n+\n+mod outer {\n+    pub use self::inner::Foo;\n+\n+    mod inner {\n+        pub trait Foo {\n+            fn bar(&self) {}\n+        }\n+        impl Foo for i32 {}\n+    }\n+}\n+\n+fn main() {\n+    let x: i32 = 0;\n+    x.bar();\n+}"}]}