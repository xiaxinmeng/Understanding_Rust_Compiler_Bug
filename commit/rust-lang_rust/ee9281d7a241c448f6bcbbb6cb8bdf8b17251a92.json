{"sha": "ee9281d7a241c448f6bcbbb6cb8bdf8b17251a92", "node_id": "C_kwDOAAsO6NoAKGVlOTI4MWQ3YTI0MWM0NDhmNmJjYmJiNmNiOGJkZjhiMTcyNTFhOTI", "commit": {"author": {"name": "infrandomness", "email": "infrandomness@gmail.com", "date": "2022-04-08T19:27:01Z"}, "committer": {"name": "infrandomness", "email": "infrandomness@gmail.com", "date": "2022-04-14T11:13:55Z"}, "message": "Implement checks to the expression\n\nThe implemented checks are for checking if the expression is either of\ntype `Option` and isn't a syntactical place", "tree": {"sha": "7bfe45699118e9d81359e4bd52660fb9c0fcf4a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bfe45699118e9d81359e4bd52660fb9c0fcf4a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee9281d7a241c448f6bcbbb6cb8bdf8b17251a92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee9281d7a241c448f6bcbbb6cb8bdf8b17251a92", "html_url": "https://github.com/rust-lang/rust/commit/ee9281d7a241c448f6bcbbb6cb8bdf8b17251a92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee9281d7a241c448f6bcbbb6cb8bdf8b17251a92/comments", "author": {"login": "InfRandomness", "id": 43730933, "node_id": "MDQ6VXNlcjQzNzMwOTMz", "avatar_url": "https://avatars.githubusercontent.com/u/43730933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/InfRandomness", "html_url": "https://github.com/InfRandomness", "followers_url": "https://api.github.com/users/InfRandomness/followers", "following_url": "https://api.github.com/users/InfRandomness/following{/other_user}", "gists_url": "https://api.github.com/users/InfRandomness/gists{/gist_id}", "starred_url": "https://api.github.com/users/InfRandomness/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/InfRandomness/subscriptions", "organizations_url": "https://api.github.com/users/InfRandomness/orgs", "repos_url": "https://api.github.com/users/InfRandomness/repos", "events_url": "https://api.github.com/users/InfRandomness/events{/privacy}", "received_events_url": "https://api.github.com/users/InfRandomness/received_events", "type": "User", "site_admin": false}, "committer": {"login": "InfRandomness", "id": 43730933, "node_id": "MDQ6VXNlcjQzNzMwOTMz", "avatar_url": "https://avatars.githubusercontent.com/u/43730933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/InfRandomness", "html_url": "https://github.com/InfRandomness", "followers_url": "https://api.github.com/users/InfRandomness/followers", "following_url": "https://api.github.com/users/InfRandomness/following{/other_user}", "gists_url": "https://api.github.com/users/InfRandomness/gists{/gist_id}", "starred_url": "https://api.github.com/users/InfRandomness/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/InfRandomness/subscriptions", "organizations_url": "https://api.github.com/users/InfRandomness/orgs", "repos_url": "https://api.github.com/users/InfRandomness/repos", "events_url": "https://api.github.com/users/InfRandomness/events{/privacy}", "received_events_url": "https://api.github.com/users/InfRandomness/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "262b35ea2c4dd9a16c28bf40cb5c124f664ce96c", "url": "https://api.github.com/repos/rust-lang/rust/commits/262b35ea2c4dd9a16c28bf40cb5c124f664ce96c", "html_url": "https://github.com/rust-lang/rust/commit/262b35ea2c4dd9a16c28bf40cb5c124f664ce96c"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "27ef90093289640168a2e2f2d96c1aaf9116e72a", "filename": "clippy_lints/src/methods/needless_option_take.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ee9281d7a241c448f6bcbbb6cb8bdf8b17251a92/clippy_lints%2Fsrc%2Fmethods%2Fneedless_option_take.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee9281d7a241c448f6bcbbb6cb8bdf8b17251a92/clippy_lints%2Fsrc%2Fmethods%2Fneedless_option_take.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fneedless_option_take.rs?ref=ee9281d7a241c448f6bcbbb6cb8bdf8b17251a92", "patch": "@@ -2,15 +2,17 @@ use clippy_utils::diagnostics::span_lint;\n use clippy_utils::ty::is_type_diagnostic_item;\n use rustc_hir::Expr;\n use rustc_lint::LateContext;\n-use rustc_span::sym::Result as sym_result;\n+use rustc_span::sym;\n \n use super::NEEDLESS_OPTION_TAKE;\n \n-pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, recv: &'tcx Expr<'_>) {\n-    if_chain! {\n-        if is_type_diagnostic_item(cx, cx.typeck_results().expr_ty(recv), sym_result);\n-        let result_type = cx.typeck_results().expr_ty(recv);\n-\n+pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, _recv: &'tcx Expr<'_>) {\n+    // Checks if expression type is equal to sym::Option and if the expr is not a syntactic place\n+    if is_expr_option(cx, expr) && !expr.is_syntactic_place_expr() {\n+        span_lint(cx, OPTION_TAKE_ON_TEMPORARY, expr.span, \"Format test\");\n+    }\n+    /*    if_chain! {\n+        is_expr_option(cx, expr);\n         then {\n             span_lint(\n                 cx,\n@@ -19,5 +21,10 @@ pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, recv: &'\n                 \"Format test\"\n             );\n         }\n-    };\n+    };*/\n+}\n+\n+fn is_expr_option(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n+    let expr_type = cx.typeck_results().expr_ty(expr);\n+    is_type_diagnostic_item(cx, expr_type, sym::Option)\n }"}]}