{"sha": "28eeea630faf1e7514da96c5eedd67e330fe8571", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4ZWVlYTYzMGZhZjFlNzUxNGRhOTZjNWVlZGQ2N2UzMzBmZTg1NzE=", "commit": {"author": {"name": "iximeow", "email": "me@iximeow.net", "date": "2020-03-13T05:21:36Z"}, "committer": {"name": "iximeow", "email": "me@iximeow.net", "date": "2020-03-13T05:21:36Z"}, "message": "fix formatting", "tree": {"sha": "be8ffe70deee4f42c8c7b0c716cec14fd6686e23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be8ffe70deee4f42c8c7b0c716cec14fd6686e23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28eeea630faf1e7514da96c5eedd67e330fe8571", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28eeea630faf1e7514da96c5eedd67e330fe8571", "html_url": "https://github.com/rust-lang/rust/commit/28eeea630faf1e7514da96c5eedd67e330fe8571", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28eeea630faf1e7514da96c5eedd67e330fe8571/comments", "author": {"login": "iximeow", "id": 4615790, "node_id": "MDQ6VXNlcjQ2MTU3OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/4615790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iximeow", "html_url": "https://github.com/iximeow", "followers_url": "https://api.github.com/users/iximeow/followers", "following_url": "https://api.github.com/users/iximeow/following{/other_user}", "gists_url": "https://api.github.com/users/iximeow/gists{/gist_id}", "starred_url": "https://api.github.com/users/iximeow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iximeow/subscriptions", "organizations_url": "https://api.github.com/users/iximeow/orgs", "repos_url": "https://api.github.com/users/iximeow/repos", "events_url": "https://api.github.com/users/iximeow/events{/privacy}", "received_events_url": "https://api.github.com/users/iximeow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iximeow", "id": 4615790, "node_id": "MDQ6VXNlcjQ2MTU3OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/4615790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iximeow", "html_url": "https://github.com/iximeow", "followers_url": "https://api.github.com/users/iximeow/followers", "following_url": "https://api.github.com/users/iximeow/following{/other_user}", "gists_url": "https://api.github.com/users/iximeow/gists{/gist_id}", "starred_url": "https://api.github.com/users/iximeow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iximeow/subscriptions", "organizations_url": "https://api.github.com/users/iximeow/orgs", "repos_url": "https://api.github.com/users/iximeow/repos", "events_url": "https://api.github.com/users/iximeow/events{/privacy}", "received_events_url": "https://api.github.com/users/iximeow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ca2ed364662351da9e8a1f4ba54e027e1f420df", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ca2ed364662351da9e8a1f4ba54e027e1f420df", "html_url": "https://github.com/rust-lang/rust/commit/0ca2ed364662351da9e8a1f4ba54e027e1f420df"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "2626ca37cf8b866d326e9e8665d226356c2d2568", "filename": "src/libstd/sys/unix/stack_overflow.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/28eeea630faf1e7514da96c5eedd67e330fe8571/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28eeea630faf1e7514da96c5eedd67e330fe8571/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs?ref=28eeea630faf1e7514da96c5eedd67e330fe8571", "patch": "@@ -138,8 +138,14 @@ mod imp {\n     }\n \n     unsafe fn get_stackp() -> *mut libc::c_void {\n-        let stackp =\n-            mmap(ptr::null_mut(), SIGSTKSZ + page_size(), PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANON, -1, 0);\n+        let stackp = mmap(\n+            ptr::null_mut(),\n+            SIGSTKSZ + page_size(),\n+            PROT_READ | PROT_WRITE,\n+            MAP_PRIVATE | MAP_ANON,\n+            -1,\n+            0,\n+        );\n         if stackp == MAP_FAILED {\n             panic!(\"failed to allocate an alternative stack\");\n         }"}]}