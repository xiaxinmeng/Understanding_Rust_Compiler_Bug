{"sha": "018b621f613e87af26d8f7880ea1012cb374216c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxOGI2MjFmNjEzZTg3YWYyNmQ4Zjc4ODBlYTEwMTJjYjM3NDIxNmM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-10-24T07:37:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-24T07:37:52Z"}, "message": "Merge #2057\n\n2057: add some profiling calls r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "c2f9015026a295d17b792e917c1b42b09f933a57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2f9015026a295d17b792e917c1b42b09f933a57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/018b621f613e87af26d8f7880ea1012cb374216c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdsVTQCRBK7hj4Ov3rIwAAdHIIAGvSi1aYmUjrv53Nex0zORxz\nDs1oKCLBlCJTVC+fCOw9qJl0WUfgU1NDwq70TrlaQ6AsFohUy8AOJsXoZSy+Sy/j\nS41JmIGuxaDfNW2JT/agNpvyC2GmjuBZtI2SM3VdBgMnBV99H/vOoJke/JLzqMDG\nDFEL2kkVZK4x6P2L36J3inaoAObVZd24ZPODI7zvu6aqqolWy2jiRMAm2ADaQXBo\nbnWiAvuKl3+AZD0EGVibPrHO2GeJBzFwE/wi0vyovm0dA0OTfLXag0oeb1jOAyoT\nL2vDW5kkfz6P1RvgKopoWs2bCWcCcMDgO0E3Ga/1/Fq9UHzsiCkYxoSTsPVnyQ0=\n=84DL\n-----END PGP SIGNATURE-----\n", "payload": "tree c2f9015026a295d17b792e917c1b42b09f933a57\nparent 778f50b1477ad3c33cd6220f71bac7b83a66176a\nparent ac1b7b07e770652bad72f024efebfd5790a509c3\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1571902672 +0000\ncommitter GitHub <noreply@github.com> 1571902672 +0000\n\nMerge #2057\n\n2057: add some profiling calls r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/018b621f613e87af26d8f7880ea1012cb374216c", "html_url": "https://github.com/rust-lang/rust/commit/018b621f613e87af26d8f7880ea1012cb374216c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/018b621f613e87af26d8f7880ea1012cb374216c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "778f50b1477ad3c33cd6220f71bac7b83a66176a", "url": "https://api.github.com/repos/rust-lang/rust/commits/778f50b1477ad3c33cd6220f71bac7b83a66176a", "html_url": "https://github.com/rust-lang/rust/commit/778f50b1477ad3c33cd6220f71bac7b83a66176a"}, {"sha": "ac1b7b07e770652bad72f024efebfd5790a509c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac1b7b07e770652bad72f024efebfd5790a509c3", "html_url": "https://github.com/rust-lang/rust/commit/ac1b7b07e770652bad72f024efebfd5790a509c3"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "8200bd1ef3e2e7ad47409c729d836d5a6b884f56", "filename": "crates/ra_ide_api/src/references.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/018b621f613e87af26d8f7880ea1012cb374216c/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/018b621f613e87af26d8f7880ea1012cb374216c/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Freferences.rs?ref=018b621f613e87af26d8f7880ea1012cb374216c", "patch": "@@ -16,6 +16,7 @@ mod search_scope;\n \n use once_cell::unsync::Lazy;\n use ra_db::{SourceDatabase, SourceDatabaseExt};\n+use ra_prof::profile;\n use ra_syntax::{algo::find_node_at_offset, ast, AstNode, SourceFile, SyntaxNode, TextUnit};\n \n use crate::{db::RootDatabase, FilePosition, FileRange, NavigationTarget, RangeInfo};\n@@ -107,6 +108,8 @@ fn find_name<'a>(\n }\n \n fn process_definition(db: &RootDatabase, def: NameDefinition, name: String) -> Vec<FileRange> {\n+    let _p = profile(\"process_definition\");\n+\n     let pat = name.as_str();\n     let scope = def.search_scope(db);\n     let mut refs = vec![];"}, {"sha": "153082d5bef919f0f59d207367e0f554cc271b8c", "filename": "crates/ra_ide_api/src/references/classify.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/018b621f613e87af26d8f7880ea1012cb374216c/crates%2Fra_ide_api%2Fsrc%2Freferences%2Fclassify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/018b621f613e87af26d8f7880ea1012cb374216c/crates%2Fra_ide_api%2Fsrc%2Freferences%2Fclassify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Freferences%2Fclassify.rs?ref=018b621f613e87af26d8f7880ea1012cb374216c", "patch": "@@ -2,6 +2,7 @@\n \n use hir::{Either, FromSource, Module, ModuleSource, Path, PathResolution, Source, SourceAnalyzer};\n use ra_db::FileId;\n+use ra_prof::profile;\n use ra_syntax::{ast, match_ast, AstNode, AstPtr};\n use test_utils::tested_by;\n \n@@ -16,6 +17,7 @@ pub(crate) fn classify_name(\n     file_id: FileId,\n     name: &ast::Name,\n ) -> Option<NameDefinition> {\n+    let _p = profile(\"classify_name\");\n     let parent = name.syntax().parent()?;\n     let file_id = file_id.into();\n \n@@ -108,6 +110,8 @@ pub(crate) fn classify_name_ref(\n ) -> Option<NameDefinition> {\n     use PathResolution::*;\n \n+    let _p = profile(\"classify_name_ref\");\n+\n     let parent = name_ref.syntax().parent()?;\n     let analyzer = SourceAnalyzer::new(db, file_id, name_ref.syntax(), None);\n "}, {"sha": "21e667c83b3e9dfcb41e0035d0ed226bf8abd9f0", "filename": "crates/ra_ide_api/src/references/search_scope.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/018b621f613e87af26d8f7880ea1012cb374216c/crates%2Fra_ide_api%2Fsrc%2Freferences%2Fsearch_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/018b621f613e87af26d8f7880ea1012cb374216c/crates%2Fra_ide_api%2Fsrc%2Freferences%2Fsearch_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Freferences%2Fsearch_scope.rs?ref=018b621f613e87af26d8f7880ea1012cb374216c", "patch": "@@ -5,6 +5,7 @@\n \n use hir::{DefWithBody, HasSource, ModuleSource};\n use ra_db::{FileId, SourceDatabase, SourceDatabaseExt};\n+use ra_prof::profile;\n use ra_syntax::{AstNode, TextRange};\n use rustc_hash::FxHashSet;\n \n@@ -14,6 +15,8 @@ use super::{NameDefinition, NameKind};\n \n impl NameDefinition {\n     pub(crate) fn search_scope(&self, db: &RootDatabase) -> FxHashSet<(FileId, Option<TextRange>)> {\n+        let _p = profile(\"search_scope\");\n+\n         let module_src = self.container.definition_source(db);\n         let file_id = module_src.file_id.original_file(db);\n "}]}