{"sha": "3e688d2a9340e8d8ca2da5bbdc441f2d6cce893c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNjg4ZDJhOTM0MGU4ZDhjYTJkYTViYmRjNDQxZjJkNmNjZTg5M2M=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-20T16:01:42Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-20T16:01:42Z"}, "message": "Simplify", "tree": {"sha": "dec88276e72c3e49f5946a16a1b01a163c34fe17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dec88276e72c3e49f5946a16a1b01a163c34fe17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e688d2a9340e8d8ca2da5bbdc441f2d6cce893c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e688d2a9340e8d8ca2da5bbdc441f2d6cce893c", "html_url": "https://github.com/rust-lang/rust/commit/3e688d2a9340e8d8ca2da5bbdc441f2d6cce893c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e688d2a9340e8d8ca2da5bbdc441f2d6cce893c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc4d047267232db485e24f74c05ad03f76b1786b", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc4d047267232db485e24f74c05ad03f76b1786b", "html_url": "https://github.com/rust-lang/rust/commit/bc4d047267232db485e24f74c05ad03f76b1786b"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "04e257f53f866bf071bc0eb7ec3fcb6a19eeb835", "filename": "crates/vfs/src/loader.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3e688d2a9340e8d8ca2da5bbdc441f2d6cce893c/crates%2Fvfs%2Fsrc%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e688d2a9340e8d8ca2da5bbdc441f2d6cce893c/crates%2Fvfs%2Fsrc%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Floader.rs?ref=3e688d2a9340e8d8ca2da5bbdc441f2d6cce893c", "patch": "@@ -83,11 +83,11 @@ impl Directories {\n         self.includes_path(path)\n     }\n     fn includes_path(&self, path: &AbsPath) -> bool {\n-        let mut include = None;\n+        let mut include: Option<&AbsPathBuf> = None;\n         for incl in &self.include {\n-            if is_prefix(incl, path) {\n+            if path.starts_with(incl) {\n                 include = Some(match include {\n-                    Some(prev) if is_prefix(incl, prev) => prev,\n+                    Some(prev) if prev.starts_with(incl) => prev,\n                     _ => incl,\n                 })\n             }\n@@ -97,15 +97,11 @@ impl Directories {\n             None => return false,\n         };\n         for excl in &self.exclude {\n-            if is_prefix(excl, path) && is_prefix(include, excl) {\n+            if path.starts_with(excl) && excl.starts_with(include) {\n                 return false;\n             }\n         }\n-        return true;\n-\n-        fn is_prefix(short: &AbsPath, long: &AbsPath) -> bool {\n-            long.strip_prefix(short).is_some()\n-        }\n+        true\n     }\n }\n "}]}