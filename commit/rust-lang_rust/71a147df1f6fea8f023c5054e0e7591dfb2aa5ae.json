{"sha": "71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "node_id": "C_kwDOAAsO6NoAKDcxYTE0N2RmMWY2ZmVhOGYwMjNjNTA1NGUwZTc1OTFkZmIyYWE1YWU", "commit": {"author": {"name": "Roland Strasser", "email": "rol1510@users.noreply.github.com", "date": "2022-11-26T00:51:50Z"}, "committer": {"name": "Roland Strasser", "email": "rol1510@users.noreply.github.com", "date": "2023-02-04T18:10:04Z"}, "message": "rustdoc: trait bound formatting\n\nrustdoc: fix item-spacer\n\nrustdoc: use proper comment style\n\nrustdoc: change formatting where clauses for traits\n\nrustdoc: remove semicolon from provided methods\n\nupdate provided methods formatting", "tree": {"sha": "2c3efef2a42aa403d1631f5ce73b950f04e79379", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c3efef2a42aa403d1631f5ce73b950f04e79379"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "html_url": "https://github.com/rust-lang/rust/commit/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/comments", "author": {"login": "rol1510", "id": 29011024, "node_id": "MDQ6VXNlcjI5MDExMDI0", "avatar_url": "https://avatars.githubusercontent.com/u/29011024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rol1510", "html_url": "https://github.com/rol1510", "followers_url": "https://api.github.com/users/rol1510/followers", "following_url": "https://api.github.com/users/rol1510/following{/other_user}", "gists_url": "https://api.github.com/users/rol1510/gists{/gist_id}", "starred_url": "https://api.github.com/users/rol1510/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rol1510/subscriptions", "organizations_url": "https://api.github.com/users/rol1510/orgs", "repos_url": "https://api.github.com/users/rol1510/repos", "events_url": "https://api.github.com/users/rol1510/events{/privacy}", "received_events_url": "https://api.github.com/users/rol1510/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rol1510", "id": 29011024, "node_id": "MDQ6VXNlcjI5MDExMDI0", "avatar_url": "https://avatars.githubusercontent.com/u/29011024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rol1510", "html_url": "https://github.com/rol1510", "followers_url": "https://api.github.com/users/rol1510/followers", "following_url": "https://api.github.com/users/rol1510/following{/other_user}", "gists_url": "https://api.github.com/users/rol1510/gists{/gist_id}", "starred_url": "https://api.github.com/users/rol1510/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rol1510/subscriptions", "organizations_url": "https://api.github.com/users/rol1510/orgs", "repos_url": "https://api.github.com/users/rol1510/repos", "events_url": "https://api.github.com/users/rol1510/events{/privacy}", "received_events_url": "https://api.github.com/users/rol1510/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4aa6afa7f8a418a7dae5dbe4c95371d4f3bcc0e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4aa6afa7f8a418a7dae5dbe4c95371d4f3bcc0e1", "html_url": "https://github.com/rust-lang/rust/commit/4aa6afa7f8a418a7dae5dbe4c95371d4f3bcc0e1"}], "stats": {"total": 87, "additions": 65, "deletions": 22}, "files": [{"sha": "a59cfbea8853e5428f4a4adf1682eea10d7a0fef", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "patch": "@@ -353,7 +353,11 @@ pub(crate) fn print_where_clause<'a, 'tcx: 'a>(\n         } else {\n             let mut br_with_padding = String::with_capacity(6 * indent + 28);\n             br_with_padding.push_str(\"<br>\");\n-            for _ in 0..indent + 4 {\n+\n+            let padding_amout =\n+                if ending == Ending::Newline { indent + 4 } else { indent + \"fn where \".len() };\n+\n+            for _ in 0..padding_amout {\n                 br_with_padding.push_str(\" \");\n             }\n             let where_preds = where_preds.to_string().replace(\"<br>\", &br_with_padding);\n@@ -367,8 +371,12 @@ pub(crate) fn print_where_clause<'a, 'tcx: 'a>(\n                 if indent == 0 {\n                     format!(\"<br><span class=\\\"where\\\">where{where_preds}</span>\")\n                 } else {\n+                    // put the first one on the same line as the 'where' keyword\n+                    let where_preds = where_preds.replacen(&br_with_padding, \" \", 1);\n+\n                     let mut clause = br_with_padding;\n-                    clause.truncate(clause.len() - 4);\n+                    clause.truncate(clause.len() - \"where \".len());\n+\n                     write!(clause, \"<span class=\\\"where\\\">where{where_preds}</span>\")?;\n                     clause\n                 }"}, {"sha": "c2d24e514845e0ba1aafe7cf379dd4a23c035141", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "patch": "@@ -645,6 +645,10 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n             if count_consts != 0 && count_methods != 0 {\n                 w.write_str(\"\\n\");\n             }\n+\n+            if !required_methods.is_empty() {\n+                write!(w, \"    // Required method{}\\n\", pluralize(required_methods.len()));\n+            }\n             for (pos, m) in required_methods.iter().enumerate() {\n                 render_assoc_item(\n                     w,\n@@ -663,6 +667,10 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n             if !required_methods.is_empty() && !provided_methods.is_empty() {\n                 w.write_str(\"\\n\");\n             }\n+\n+            if !provided_methods.is_empty() {\n+                write!(w, \"    // Provided method{}\\n\", pluralize(provided_methods.len()));\n+            }\n             for (pos, m) in provided_methods.iter().enumerate() {\n                 render_assoc_item(\n                     w,\n@@ -672,16 +680,8 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n                     cx,\n                     RenderMode::Normal,\n                 );\n-                match *m.kind {\n-                    clean::MethodItem(ref inner, _)\n-                        if !inner.generics.where_predicates.is_empty() =>\n-                    {\n-                        w.write_str(\",\\n    { ... }\\n\");\n-                    }\n-                    _ => {\n-                        w.write_str(\" { ... }\\n\");\n-                    }\n-                }\n+\n+                w.write_str(\" { ... }\\n\");\n \n                 if pos < provided_methods.len() - 1 {\n                     w.write_str(\"<span class=\\\"item-spacer\\\"></span>\");"}, {"sha": "2a9548712f08637a264d613a7811660d6a5aaf2f", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "patch": "@@ -1176,6 +1176,7 @@ a.test-arrow:hover {\n .item-spacer {\n \twidth: 100%;\n \theight: 12px;\n+\tdisplay: block;\n }\n \n .out-of-band > span.since {"}, {"sha": "f06a20b27dce79f9f5a6e556481ebffb3f2e285d", "filename": "tests/rustdoc/auxiliary/inline-default-methods.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Fauxiliary%2Finline-default-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Fauxiliary%2Finline-default-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fauxiliary%2Finline-default-methods.rs?ref=71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "patch": "@@ -4,3 +4,15 @@ pub trait Foo {\n     fn bar(&self);\n     fn foo(&mut self) {}\n }\n+\n+pub trait Bar {\n+    fn bar(&self);\n+    fn foo1(&mut self) {}\n+    fn foo2(&mut self) {}\n+}\n+\n+pub trait Baz {\n+    fn bar1(&self);\n+    fn bar2(&self);\n+    fn foo(&mut self) {}\n+}"}, {"sha": "a2500de79a0968b37420318d6e18dbbd929cdda3", "filename": "tests/rustdoc/decl-trailing-whitespace.declaration.html", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Fdecl-trailing-whitespace.declaration.html", "raw_url": "https://github.com/rust-lang/rust/raw/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Fdecl-trailing-whitespace.declaration.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fdecl-trailing-whitespace.declaration.html?ref=71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "patch": "@@ -1,7 +1,9 @@\n <code>pub trait Write {\n+    // Required methods\n     fn <a href=\"#tymethod.poll_write\" class=\"fn\">poll_write</a>(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self: <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cx: &amp;mut <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;buf: &amp;mut [<a class=\"primitive\" href=\"{{channel}}/std/primitive.usize.html\">usize</a>]<br />&#160;&#160;&#160;&#160;) -&gt; <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"{{channel}}/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"{{channel}}/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"struct.Error.html\" title=\"struct foo::Error\">Error</a>&gt;&gt;;\n <span class=\"item-spacer\" />    fn <a href=\"#tymethod.poll_flush\" class=\"fn\">poll_flush</a>(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self: <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cx: &amp;mut <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;<br />&#160;&#160;&#160;&#160;) -&gt; <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"{{channel}}/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"{{channel}}/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"struct.Error.html\" title=\"struct foo::Error\">Error</a>&gt;&gt;;\n <span class=\"item-spacer\" />    fn <a href=\"#tymethod.poll_close\" class=\"fn\">poll_close</a>(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self: <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cx: &amp;mut <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;<br />&#160;&#160;&#160;&#160;) -&gt; <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"{{channel}}/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"{{channel}}/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"struct.Error.html\" title=\"struct foo::Error\">Error</a>&gt;&gt;;\n \n+    // Provided method\n     fn <a href=\"#method.poll_write_vectored\" class=\"fn\">poll_write_vectored</a>(<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self: <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cx: &amp;mut <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"{{channel}}/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bufs: &amp;[<a class=\"primitive\" href=\"{{channel}}/std/primitive.usize.html\">usize</a>]<br />&#160;&#160;&#160;&#160;) -&gt; <a class=\"enum\" href=\"{{channel}}/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"{{channel}}/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"{{channel}}/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"struct.Error.html\" title=\"struct foo::Error\">Error</a>&gt;&gt; { ... }\n-}</code>\n\\ No newline at end of file\n+}</code>"}, {"sha": "7706cb139ac9444852ef2ff5d01d10ba3dd1cdc7", "filename": "tests/rustdoc/inline-default-methods.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Finline-default-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Finline-default-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Finline-default-methods.rs?ref=71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "patch": "@@ -4,6 +4,18 @@\n extern crate inline_default_methods;\n \n // @has inline_default_methods/trait.Foo.html\n-// @has - '//pre[@class=\"rust item-decl\"]' 'fn bar(&self);'\n-// @has - '//pre[@class=\"rust item-decl\"]' 'fn foo(&mut self) { ... }'\n+// @has - '//pre[@class=\"rust item-decl\"]' '// Required method fn bar(&self);'\n+// @has - '//pre[@class=\"rust item-decl\"]' '// Provided method fn foo(&mut self)'\n pub use inline_default_methods::Foo;\n+\n+// @has inline_default_methods/trait.Bar.html\n+// @has - '//pre[@class=\"rust item-decl\"]' '// Required method fn bar(&self);'\n+// @has - '//pre[@class=\"rust item-decl\"]' '// Provided methods fn foo1(&mut self)'\n+// @has - '//pre[@class=\"rust item-decl\"]' 'fn foo2(&mut self)'\n+pub use inline_default_methods::Bar;\n+\n+// @has inline_default_methods/trait.Baz.html\n+// @has - '//pre[@class=\"rust item-decl\"]' '// Required methods fn bar1(&self);'\n+// @has - '//pre[@class=\"rust item-decl\"]' 'fn bar2(&self);'\n+// @has - '//pre[@class=\"rust item-decl\"]' '// Provided method fn foo(&mut self)'\n+pub use inline_default_methods::Baz;"}, {"sha": "5a49a9d06519e87a7868d3608eef75ff7b2f2508", "filename": "tests/rustdoc/issue-85454.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Fissue-85454.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Fissue-85454.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-85454.rs?ref=71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "patch": "@@ -5,7 +5,7 @@\n extern crate issue_85454;\n \n // @has foo/trait.FromResidual.html\n-// @has - '//pre[@class=\"rust item-decl\"]' 'pub trait FromResidual<R = <Self as Try>::Residual> { fn from_residual(residual: R) -> Self; }'\n+// @has - '//pre[@class=\"rust item-decl\"]' 'pub trait FromResidual<R = <Self as Try>::Residual> { // Required method fn from_residual(residual: R) -> Self; }'\n pub trait FromResidual<R = <Self as Try>::Residual> {\n     fn from_residual(residual: R) -> Self;\n }\n@@ -24,6 +24,6 @@ pub enum ControlFlow<B, C = ()> {\n \n pub mod reexport {\n     // @has foo/reexport/trait.FromResidual.html\n-    // @has - '//pre[@class=\"rust item-decl\"]' 'pub trait FromResidual<R = <Self as Try>::Residual> { fn from_residual(residual: R) -> Self; }'\n+    // @has - '//pre[@class=\"rust item-decl\"]' 'pub trait FromResidual<R = <Self as Try>::Residual> { // Required method fn from_residual(residual: R) -> Self; }'\n     pub use issue_85454::*;\n }"}, {"sha": "858bc142f66e136ae65a8c9de67afc8d8a26e4c7", "filename": "tests/rustdoc/where.SWhere_TraitWhere_item-decl.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Fwhere.SWhere_TraitWhere_item-decl.html", "raw_url": "https://github.com/rust-lang/rust/raw/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Fwhere.SWhere_TraitWhere_item-decl.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fwhere.SWhere_TraitWhere_item-decl.html?ref=71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "patch": "@@ -1,8 +1,8 @@\n <pre class=\"rust item-decl\"><code>pub trait TraitWhere {\n-    type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'a&gt;<br />&#160;&#160;&#160;&#160;<span class=\"where\">where<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self: 'a</span>;\n+    type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a>&lt;'a&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class=\"where\">where Self: 'a</span>;\n \n-    fn <a href=\"#method.func\" class=\"fn\">func</a>(self)<br />&#160;&#160;&#160;&#160;<span class=\"where\">where<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self: <a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a></span>,\n-    { ... }\n-<span class=\"item-spacer\" />    fn <a href=\"#method.lines\" class=\"fn\">lines</a>(self) -&gt; <a class=\"struct\" href=\"{{channel}}/std/io/struct.Lines.html\" title=\"struct std::io::Lines\">Lines</a>&lt;Self&gt;<br />&#160;&#160;&#160;&#160;<span class=\"where\">where<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self: <a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a></span>,\n-    { ... }\n+    // Provided methods\n+    fn <a href=\"#method.func\" class=\"fn\">func</a>(self)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class=\"where\">where Self: <a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a></span> { ... }\n+<span class=\"item-spacer\" />    fn <a href=\"#method.lines\" class=\"fn\">lines</a>(self) -&gt; <a class=\"struct\" href=\"{{channel}}/std/io/struct.Lines.html\" title=\"struct std::io::Lines\">Lines</a>&lt;Self&gt;<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class=\"where\">where Self: <a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a></span> { ... }\n+<span class=\"item-spacer\" />    fn <a href=\"#method.merge\" class=\"fn\">merge</a>&lt;T&gt;(self, a: T)<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span class=\"where\">where Self: <a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,<br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;T: <a class=\"trait\" href=\"{{channel}}/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a></span> { ... }\n }</code></pre>\n\\ No newline at end of file"}, {"sha": "af3239b69470c3b24e1c562c8b26a5f7e5accf14", "filename": "tests/rustdoc/where.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Fwhere.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Fwhere.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fwhere.rs?ref=71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "patch": "@@ -41,6 +41,12 @@ pub trait TraitWhere {\n     where\n         Self: Sized,\n     { todo!() }\n+\n+    fn merge<T>(self, a: T)\n+    where\n+        Self: Sized,\n+        T: Sized,\n+    { todo!() }\n }\n \n // @has foo/struct.Echo.html '//*[@class=\"impl\"]//h3[@class=\"code-header\"]' \\"}, {"sha": "8a78e82dc71dca19394f518048d88da1eaffedb0", "filename": "tests/rustdoc/whitespace-after-where-clause.trait.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Fwhitespace-after-where-clause.trait.html", "raw_url": "https://github.com/rust-lang/rust/raw/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Fwhitespace-after-where-clause.trait.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fwhitespace-after-where-clause.trait.html?ref=71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "patch": "@@ -1,6 +1,7 @@\n <pre class=\"rust item-decl\"><code>pub trait ToOwned&lt;T&gt;<span class=\"where fmt-newline\">where<br />&#160;&#160;&#160;&#160;T: <a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</span>{\n     type <a href=\"#associatedtype.Owned\" class=\"associatedtype\">Owned</a>;\n \n+    // Required methods\n     fn <a href=\"#tymethod.to_owned\" class=\"fn\">to_owned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"trait.ToOwned.html#associatedtype.Owned\" title=\"type foo::ToOwned::Owned\">Owned</a>;\n <span class=\"item-spacer\" />    fn <a href=\"#tymethod.whatever\" class=\"fn\">whatever</a>(&amp;self) -&gt; T;\n }</code></pre>\n\\ No newline at end of file"}, {"sha": "e6fafde1effe3cc91c9155e8e568013139ac51a7", "filename": "tests/rustdoc/whitespace-after-where-clause.trait2.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Fwhitespace-after-where-clause.trait2.html", "raw_url": "https://github.com/rust-lang/rust/raw/71a147df1f6fea8f023c5054e0e7591dfb2aa5ae/tests%2Frustdoc%2Fwhitespace-after-where-clause.trait2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fwhitespace-after-where-clause.trait2.html?ref=71a147df1f6fea8f023c5054e0e7591dfb2aa5ae", "patch": "@@ -1,6 +1,7 @@\n <pre class=\"rust item-decl\"><code>pub trait ToOwned2&lt;T:&#160;<a class=\"trait\" href=\"{{channel}}/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; {\n     type <a href=\"#associatedtype.Owned\" class=\"associatedtype\">Owned</a>;\n \n+    // Required methods\n     fn <a href=\"#tymethod.to_owned\" class=\"fn\">to_owned</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"trait.ToOwned2.html#associatedtype.Owned\" title=\"type foo::ToOwned2::Owned\">Owned</a>;\n <span class=\"item-spacer\" />    fn <a href=\"#tymethod.whatever\" class=\"fn\">whatever</a>(&amp;self) -&gt; T;\n }</code></pre>\n\\ No newline at end of file"}]}