{"sha": "899400cd1a7465ffcc80d848d6cb2b6fb2436e02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5OTQwMGNkMWE3NDY1ZmZjYzgwZDg0OGQ2Y2IyYjZmYjI0MzZlMDI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-01T19:27:49Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-01T19:28:47Z"}, "message": "libsyntax: Fix a parsing problem with the temporary syntax for by-value pattern match bindings", "tree": {"sha": "723ae051f92b6c265481525ad340d76129b47fec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/723ae051f92b6c265481525ad340d76129b47fec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/899400cd1a7465ffcc80d848d6cb2b6fb2436e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/899400cd1a7465ffcc80d848d6cb2b6fb2436e02", "html_url": "https://github.com/rust-lang/rust/commit/899400cd1a7465ffcc80d848d6cb2b6fb2436e02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/899400cd1a7465ffcc80d848d6cb2b6fb2436e02/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "300e2b851324bac92c8e0cd21735b5550be51435", "url": "https://api.github.com/repos/rust-lang/rust/commits/300e2b851324bac92c8e0cd21735b5550be51435", "html_url": "https://github.com/rust-lang/rust/commit/300e2b851324bac92c8e0cd21735b5550be51435"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f97ddaf9150276b378120704a714cf8f6c56223a", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/899400cd1a7465ffcc80d848d6cb2b6fb2436e02/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899400cd1a7465ffcc80d848d6cb2b6fb2436e02/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=899400cd1a7465ffcc80d848d6cb2b6fb2436e02", "patch": "@@ -1693,8 +1693,8 @@ class parser {\n             }\n           }\n           tok {\n-            if !is_ident(tok) || self.is_keyword(~\"true\")\n-                || self.is_keyword(~\"false\") {\n+            if (!is_ident(tok) && tok != token::BINOP(token::PLUS)) ||\n+                    self.is_keyword(~\"true\") || self.is_keyword(~\"false\") {\n                 let val = self.parse_expr_res(RESTRICT_NO_BAR_OP);\n                 if self.eat_keyword(~\"to\") {\n                     let end = self.parse_expr_res(RESTRICT_NO_BAR_OP);"}]}