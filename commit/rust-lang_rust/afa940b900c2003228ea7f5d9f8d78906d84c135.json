{"sha": "afa940b900c2003228ea7f5d9f8d78906d84c135", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmYTk0MGI5MDBjMjAwMzIyOGVhN2Y1ZDlmOGQ3ODkwNmQ4NGMxMzU=", "commit": {"author": {"name": "Andreas Jonson", "email": "andjo403@users.noreply.github.com", "date": "2020-03-11T18:18:22Z"}, "committer": {"name": "Andreas Jonson", "email": "andjo403@users.noreply.github.com", "date": "2020-03-11T18:18:22Z"}, "message": "Update the mir inline costs\n\nhandle that when mir is lowered to llvm-ir more code is generated.\nlandingpads generates 10 llvm-ir instructions\nand resume 9 llvm-ir instructions.", "tree": {"sha": "fb9294a65b70a1b6070126a0734b1826b8d1e101", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb9294a65b70a1b6070126a0734b1826b8d1e101"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afa940b900c2003228ea7f5d9f8d78906d84c135", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afa940b900c2003228ea7f5d9f8d78906d84c135", "html_url": "https://github.com/rust-lang/rust/commit/afa940b900c2003228ea7f5d9f8d78906d84c135", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afa940b900c2003228ea7f5d9f8d78906d84c135/comments", "author": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c20d7eecbc0928b57da8fe30b2ef8528e2bdd5be", "url": "https://api.github.com/repos/rust-lang/rust/commits/c20d7eecbc0928b57da8fe30b2ef8528e2bdd5be", "html_url": "https://github.com/rust-lang/rust/commit/c20d7eecbc0928b57da8fe30b2ef8528e2bdd5be"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "7cdebf6267075e929db7394f22abbfce186428ee", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/afa940b900c2003228ea7f5d9f8d78906d84c135/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afa940b900c2003228ea7f5d9f8d78906d84c135/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=afa940b900c2003228ea7f5d9f8d78906d84c135", "patch": "@@ -25,6 +25,8 @@ const HINT_THRESHOLD: usize = 100;\n \n const INSTR_COST: usize = 5;\n const CALL_PENALTY: usize = 25;\n+const LANDINGPAD_PENALTY: usize = 50;\n+const RESUME_PENALTY: usize = 45;\n \n const UNKNOWN_SIZE_COST: usize = 10;\n \n@@ -328,6 +330,7 @@ impl Inliner<'tcx> {\n                     if ty.needs_drop(tcx, param_env) {\n                         cost += CALL_PENALTY;\n                         if let Some(unwind) = unwind {\n+                            cost += LANDINGPAD_PENALTY;\n                             work_list.push(unwind);\n                         }\n                     } else {\n@@ -343,7 +346,7 @@ impl Inliner<'tcx> {\n                     threshold = 0;\n                 }\n \n-                TerminatorKind::Call { func: Operand::Constant(ref f), .. } => {\n+                TerminatorKind::Call { func: Operand::Constant(ref f), cleanup, .. } => {\n                     if let ty::FnDef(def_id, _) = f.literal.ty.kind {\n                         // Don't give intrinsics the extra penalty for calls\n                         let f = tcx.fn_sig(def_id);\n@@ -352,9 +355,21 @@ impl Inliner<'tcx> {\n                         } else {\n                             cost += CALL_PENALTY;\n                         }\n+                    } else {\n+                        cost += CALL_PENALTY;\n+                    }\n+                    if cleanup.is_some() {\n+                        cost += LANDINGPAD_PENALTY;\n+                    }\n+                }\n+                TerminatorKind::Assert { cleanup, .. } => {\n+                    cost += CALL_PENALTY;\n+\n+                    if cleanup.is_some() {\n+                        cost += LANDINGPAD_PENALTY;\n                     }\n                 }\n-                TerminatorKind::Assert { .. } => cost += CALL_PENALTY,\n+                TerminatorKind::Resume => cost += RESUME_PENALTY,\n                 _ => cost += INSTR_COST,\n             }\n "}]}