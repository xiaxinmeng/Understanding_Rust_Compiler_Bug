{"sha": "f57ce6f5588fe62da6eab7a9ad3a3d06a9cd2ac0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1N2NlNmY1NTg4ZmU2MmRhNmVhYjdhOWFkM2EzZDA2YTljZDJhYzA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-18T19:16:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-18T19:16:05Z"}, "message": "Merge #8094\n\n8094: Fix infinite recursion when computing diagnostics for inner items r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "a0a23c8c03c224578ecb910e129742123d230844", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0a23c8c03c224578ecb910e129742123d230844"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f57ce6f5588fe62da6eab7a9ad3a3d06a9cd2ac0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgU6b1CRBK7hj4Ov3rIwAAdHIIADSgOTT5O9XpGLOwMPYqi1KU\nHIfZ5T3y9uVGbsmfh49PHoKZCLCt1Y+aLjPLe8kED2e3LdyRRY2AF1SpccBUIdUr\nlYWdz9223Tq0C6G4qUvFjy6lryirgGJUuWzdwaCcylh0JnWMOq0VjJmN3a9AN0XO\ndLfpyDJFDFJIMTUzc0auLykA8SLlG6TuTKrZkn6KMdmUpxYetx+ff5BWmcQOgeNU\nd1CAJdC5N8wYBsGnPoUKcWHccqmuQlplWBuJ+2GG+Yz9xZbGLN84sZ7M01gi73Vm\nIgOHQxa0H4DSwBqBEEvoHcYsmdn75M3PIi78xe5tZOChdgykJYxdxfVr/AOneU4=\n=mFGg\n-----END PGP SIGNATURE-----\n", "payload": "tree a0a23c8c03c224578ecb910e129742123d230844\nparent 017dd0b45a5d89eca58458fa7d2cc712019402cc\nparent ebd4c8c5dfd07b27f0cd083bc34b619ede3a6678\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1616094965 +0000\ncommitter GitHub <noreply@github.com> 1616094965 +0000\n\nMerge #8094\n\n8094: Fix infinite recursion when computing diagnostics for inner items r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f57ce6f5588fe62da6eab7a9ad3a3d06a9cd2ac0", "html_url": "https://github.com/rust-lang/rust/commit/f57ce6f5588fe62da6eab7a9ad3a3d06a9cd2ac0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f57ce6f5588fe62da6eab7a9ad3a3d06a9cd2ac0/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "017dd0b45a5d89eca58458fa7d2cc712019402cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/017dd0b45a5d89eca58458fa7d2cc712019402cc", "html_url": "https://github.com/rust-lang/rust/commit/017dd0b45a5d89eca58458fa7d2cc712019402cc"}, {"sha": "ebd4c8c5dfd07b27f0cd083bc34b619ede3a6678", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebd4c8c5dfd07b27f0cd083bc34b619ede3a6678", "html_url": "https://github.com/rust-lang/rust/commit/ebd4c8c5dfd07b27f0cd083bc34b619ede3a6678"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "33a0f4d7d484bbf9c8fd590054403900b1a6f736", "filename": "crates/hir_ty/src/diagnostics/decl_check.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f57ce6f5588fe62da6eab7a9ad3a3d06a9cd2ac0/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f57ce6f5588fe62da6eab7a9ad3a3d06a9cd2ac0/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check.rs?ref=f57ce6f5588fe62da6eab7a9ad3a3d06a9cd2ac0", "patch": "@@ -102,7 +102,7 @@ impl<'a, 'b> DeclValidator<'a, 'b> {\n         let db = self.db;\n         for block_def_map in body.block_scopes.iter().filter_map(|block| db.block_def_map(*block)) {\n             for (_, module) in block_def_map.modules() {\n-                for (def_id, _) in module.scope.values() {\n+                for def_id in module.scope.declarations() {\n                     let mut validator = DeclValidator::new(self.db, self.krate, self.sink);\n                     validator.validate_item(def_id);\n                 }\n@@ -902,4 +902,17 @@ extern {\n             \"#,\n         );\n     }\n+\n+    #[test]\n+    fn infinite_loop_inner_items() {\n+        check_diagnostics(\n+            r#\"\n+fn qualify() {\n+    mod foo {\n+        use super::*;\n+    }\n+}\n+            \"#,\n+        )\n+    }\n }"}]}