{"sha": "67336bb399deac766faed5e13a032f017c3353b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3MzM2YmIzOTlkZWFjNzY2ZmFlZDVlMTNhMDMyZjAxN2MzMzUzYjM=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-06T20:26:59Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-13T18:44:14Z"}, "message": "Extend const-loop and const-if to handle more cases\n\nThis makes sure that our HIR visitor is visiting as many\nconst-items as possible.", "tree": {"sha": "4adc35e7e0e9760f34d44e7e27bf2ed3c0496e52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4adc35e7e0e9760f34d44e7e27bf2ed3c0496e52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67336bb399deac766faed5e13a032f017c3353b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67336bb399deac766faed5e13a032f017c3353b3", "html_url": "https://github.com/rust-lang/rust/commit/67336bb399deac766faed5e13a032f017c3353b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67336bb399deac766faed5e13a032f017c3353b3/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92386e8e57acccc5894041c877c1da1fe3b50e10", "url": "https://api.github.com/repos/rust-lang/rust/commits/92386e8e57acccc5894041c877c1da1fe3b50e10", "html_url": "https://github.com/rust-lang/rust/commit/92386e8e57acccc5894041c877c1da1fe3b50e10"}], "stats": {"total": 92, "additions": 71, "deletions": 21}, "files": [{"sha": "440723a3fe1b9b78623d0b10deeddd0017b86a58", "filename": "src/test/ui/consts/const-if.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/67336bb399deac766faed5e13a032f017c3353b3/src%2Ftest%2Fui%2Fconsts%2Fconst-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67336bb399deac766faed5e13a032f017c3353b3/src%2Ftest%2Fui%2Fconsts%2Fconst-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-if.rs?ref=67336bb399deac766faed5e13a032f017c3353b3", "patch": "@@ -1,5 +1,21 @@\n-const _X: i32 = if true { 5 } else { 6 };\n-//~^ ERROR constant contains unimplemented expression type\n-//~| ERROR constant contains unimplemented expression type\n+const _: i32 = if true { //~ ERROR if expression is not allowed in a const\n+    5\n+} else {\n+    6\n+};\n+\n+const _: i32 = match 1 { //~ ERROR match expression is not allowed in a const\n+    2 => 3,\n+    4 => 5,\n+    _ => 0,\n+};\n+\n+const fn foo() -> i32 {\n+    if true { 5 } else { 6 } //~ ERROR if expression is not allowed in a const fn\n+}\n+\n+const fn bar() -> i32 {\n+    match 0 { 1 => 2, _ => 0 } //~ ERROR match expression is not allowed in a const fn\n+}\n \n fn main() {}"}, {"sha": "b94f3de4d47f1d1cb12dde88709fbc2fded9bc4e", "filename": "src/test/ui/consts/const-loop.rs", "status": "modified", "additions": 52, "deletions": 18, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/67336bb399deac766faed5e13a032f017c3353b3/src%2Ftest%2Fui%2Fconsts%2Fconst-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67336bb399deac766faed5e13a032f017c3353b3/src%2Ftest%2Fui%2Fconsts%2Fconst-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-loop.rs?ref=67336bb399deac766faed5e13a032f017c3353b3", "patch": "@@ -1,13 +1,49 @@\n+const _: () = loop {}; //~ ERROR loop is not allowed in a const\n+\n+static FOO: i32 = loop { break 4; }; //~ ERROR loop is not allowed in a static\n+\n+const fn foo() {\n+    loop {} //~ ERROR loop is not allowed in a const fn\n+}\n+\n+pub trait Foo {\n+    const BAR: i32 = loop { break 4; }; //~ ERROR loop is not allowed in a const\n+}\n+\n+impl Foo for () {\n+    const BAR: i32 = loop { break 4; }; //~ ERROR loop is not allowed in a const\n+}\n+\n+fn non_const_outside() {\n+    const fn const_inside() {\n+        loop {} //~ ERROR `loop` is not allowed in a `const fn`\n+    }\n+}\n+\n+const fn const_outside() {\n+    fn non_const_inside() {\n+        loop {}\n+    }\n+}\n+\n+fn main() {\n+    let x = [0; {\n+        while false {}\n+        //~^ ERROR `while` is not allowed in a `const`\n+        //~| ERROR constant contains unimplemented expression type\n+        //~| ERROR constant contains unimplemented expression type\n+        4\n+    }];\n+}\n+\n const _: i32 = {\n     let mut x = 0;\n \n-    while x < 4 {\n-        //~^ ERROR constant contains unimplemented expression type\n-        //~| ERROR constant contains unimplemented expression type\n+    while x < 4 { //~ ERROR while loop is not allowed in a const\n         x += 1;\n     }\n \n-    while x < 8 {\n+    while x < 8 { //~ ERROR while loop is not allowed in a const\n         x += 1;\n     }\n \n@@ -17,16 +53,11 @@ const _: i32 = {\n const _: i32 = {\n     let mut x = 0;\n \n-    for i in 0..4 {\n-        //~^ ERROR constant contains unimplemented expression type\n-        //~| ERROR constant contains unimplemented expression type\n-        //~| ERROR references in constants may only refer to immutable values\n-        //~| ERROR calls in constants are limited to constant functions, tuple\n-        //         structs and tuple variants\n+    for i in 0..4 { //~ ERROR for loop is not allowed in a const\n         x += i;\n     }\n \n-    for i in 0..4 {\n+    for i in 0..4 { //~ ERROR for loop is not allowed in a const\n         x += i;\n     }\n \n@@ -36,23 +67,26 @@ const _: i32 = {\n const _: i32 = {\n     let mut x = 0;\n \n-    loop {\n+    loop { //~ ERROR loop is not allowed in a const\n         x += 1;\n-        if x == 4 {\n-            //~^ ERROR constant contains unimplemented expression type\n-            //~| ERROR constant contains unimplemented expression type\n+        if x == 4 { //~ ERROR if expression is not allowed in a const\n             break;\n         }\n     }\n \n-    loop {\n+    loop { //~ ERROR loop is not allowed in a const\n         x += 1;\n-        if x == 8 {\n+        if x == 8 { //~ ERROR if expression is not allowed in a const\n             break;\n         }\n     }\n \n     x\n };\n \n-fn main() {}\n+const _: i32 = {\n+    let mut x = 0;\n+    while let None = Some(x) { } //~ ERROR while loop is not allowed in a const\n+    while let None = Some(x) { } //~ ERROR while loop is not allowed in a const\n+    x\n+};"}]}