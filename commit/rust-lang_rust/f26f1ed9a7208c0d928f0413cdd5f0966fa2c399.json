{"sha": "f26f1ed9a7208c0d928f0413cdd5f0966fa2c399", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyNmYxZWQ5YTcyMDhjMGQ5MjhmMDQxM2NkZDVmMDk2NmZhMmMzOTk=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2021-09-08T18:48:12Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2021-09-09T13:14:17Z"}, "message": "Re-add 71a7f8f1884b2c83eeb4a545eef16df1f2ea6476 post-revert.", "tree": {"sha": "721facb2ba6386f3a1ddcf852fa09c969784fdf4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/721facb2ba6386f3a1ddcf852fa09c969784fdf4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f26f1ed9a7208c0d928f0413cdd5f0966fa2c399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f26f1ed9a7208c0d928f0413cdd5f0966fa2c399", "html_url": "https://github.com/rust-lang/rust/commit/f26f1ed9a7208c0d928f0413cdd5f0966fa2c399", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f26f1ed9a7208c0d928f0413cdd5f0966fa2c399/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91feb76d133952825e3eb32bed399ec6e4bd9219", "url": "https://api.github.com/repos/rust-lang/rust/commits/91feb76d133952825e3eb32bed399ec6e4bd9219", "html_url": "https://github.com/rust-lang/rust/commit/91feb76d133952825e3eb32bed399ec6e4bd9219"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "c5b961f12b2abad4bfa7163e8864d5d1ae756e39", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f26f1ed9a7208c0d928f0413cdd5f0966fa2c399/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f26f1ed9a7208c0d928f0413cdd5f0966fa2c399/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=f26f1ed9a7208c0d928f0413cdd5f0966fa2c399", "patch": "@@ -1469,7 +1469,10 @@ impl<'a> Parser<'a> {\n         let (ident, is_raw) = self.ident_or_err()?;\n         if !is_raw && ident.is_reserved() {\n             let err = if self.check_fn_front_matter(false) {\n-                let _ = self.parse_fn(&mut Vec::new(), |_| true, lo);\n+                // We use `parse_fn` to get a span for the function\n+                if let Err(mut db) = self.parse_fn(&mut Vec::new(), |_| true, lo) {\n+                    db.delay_as_bug();\n+                }\n                 let mut err = self.struct_span_err(\n                     lo.to(self.prev_token.span),\n                     &format!(\"functions are not allowed in {} definitions\", adt_ty),"}]}