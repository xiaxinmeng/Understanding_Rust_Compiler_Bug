{"sha": "42ab1351f45ba602eba583288c28db26870d5e52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyYWIxMzUxZjQ1YmE2MDJlYmE1ODMyODhjMjhkYjI2ODcwZDVlNTI=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-05-07T08:42:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-07T08:42:15Z"}, "message": "Merge branch 'rustup' into alloc_fix", "tree": {"sha": "2c654118fe8214c4d86047a31213f93344af21ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c654118fe8214c4d86047a31213f93344af21ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42ab1351f45ba602eba583288c28db26870d5e52", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa8BFmCRBK7hj4Ov3rIwAAdHIIAHkmqH32ddO4lJgkcWwAD0AH\nPkZd/oFqVMblf4LC61p7McCdQs1Pv2KCHranGgkYyX2qX7NLJ6+A/CodmjPw5glB\nI+BTSx1sjwnWl+iy53VQ12jDN18H/o+HJzhXpdttRqHlO9NnoJWgzR7FPpf3WjA9\nsrOR4EXBLhSE+EluqxTbPgxy6UW8J9nKNecVZa3tRwLqbZbmtTPTyjQqte259QOR\n/8fG6Fh/l1SLDSV9uS3dfQVvKvHqpfJWJ5hgbRNpV8hlPxVYyUB38D9Kkno+gP+T\n+jkQm5WkMrGHdcWJ4V32b0zkvliydvQuD7pqzBeuUmCvsYhUYP9mmu4fDQdGKn0=\n=OAUk\n-----END PGP SIGNATURE-----\n", "payload": "tree 2c654118fe8214c4d86047a31213f93344af21ac\nparent 6bc35f77cec4947dd9cb38e34dc6354745645d82\nparent b0d3daed4050874bbc4cfeaaf1fb6b1ec4e29221\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1525682535 +0200\ncommitter GitHub <noreply@github.com> 1525682535 +0200\n\nMerge branch 'rustup' into alloc_fix"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42ab1351f45ba602eba583288c28db26870d5e52", "html_url": "https://github.com/rust-lang/rust/commit/42ab1351f45ba602eba583288c28db26870d5e52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42ab1351f45ba602eba583288c28db26870d5e52/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bc35f77cec4947dd9cb38e34dc6354745645d82", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc35f77cec4947dd9cb38e34dc6354745645d82", "html_url": "https://github.com/rust-lang/rust/commit/6bc35f77cec4947dd9cb38e34dc6354745645d82"}, {"sha": "b0d3daed4050874bbc4cfeaaf1fb6b1ec4e29221", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0d3daed4050874bbc4cfeaaf1fb6b1ec4e29221", "html_url": "https://github.com/rust-lang/rust/commit/b0d3daed4050874bbc4cfeaaf1fb6b1ec4e29221"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "de69c58fb4ac647e145d4ae06c73ddf0ccbb6818", "filename": "miri/fn_call.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/42ab1351f45ba602eba583288c28db26870d5e52/miri%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42ab1351f45ba602eba583288c28db26870d5e52/miri%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Ffn_call.rs?ref=42ab1351f45ba602eba583288c28db26870d5e52", "patch": "@@ -3,7 +3,6 @@ use rustc::ty::layout::{self, Align, LayoutOf};\n use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX};\n use rustc::mir;\n use rustc_data_structures::indexed_vec::Idx;\n-use rustc_target::spec::abi::Abi;\n use syntax::attr;\n use syntax::codemap::Span;\n "}, {"sha": "5b919a09bd91fa2acc03123f28a04375ea53febc", "filename": "miri/validation.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/42ab1351f45ba602eba583288c28db26870d5e52/miri%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42ab1351f45ba602eba583288c28db26870d5e52/miri%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Fvalidation.rs?ref=42ab1351f45ba602eba583288c28db26870d5e52", "patch": "@@ -455,7 +455,10 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx> for EvalContext<'a, 'mir, '\n                     }\n \n                     // Discriminant field for enums (where applicable).\n-                    Variants::Tagged { ref discr, .. } |\n+                    Variants::Tagged { ref tag, .. } => {\n+                        assert_eq!(i, 0);\n+                        return Ok(tag.value.to_ty(tcx))\n+                    },\n                     Variants::NicheFilling { niche: ref discr, .. } => {\n                         assert_eq!(i, 0);\n                         return Ok(discr.value.to_ty(tcx))"}]}