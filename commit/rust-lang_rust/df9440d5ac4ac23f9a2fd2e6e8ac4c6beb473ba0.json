{"sha": "df9440d5ac4ac23f9a2fd2e6e8ac4c6beb473ba0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmOTQ0MGQ1YWM0YWMyM2Y5YTJmZDJlNmU4YWM0YzZiZWI0NzNiYTA=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-04-25T15:08:12Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-04-25T15:08:12Z"}, "message": "Also test subdirectories of `rust/src/test/run-pass`", "tree": {"sha": "6c7e2ef92eb3b953000b4520773f0536ccba1994", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c7e2ef92eb3b953000b4520773f0536ccba1994"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df9440d5ac4ac23f9a2fd2e6e8ac4c6beb473ba0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df9440d5ac4ac23f9a2fd2e6e8ac4c6beb473ba0", "html_url": "https://github.com/rust-lang/rust/commit/df9440d5ac4ac23f9a2fd2e6e8ac4c6beb473ba0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df9440d5ac4ac23f9a2fd2e6e8ac4c6beb473ba0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76768479b55a7a5de69d8a525140dd0c44c052df", "url": "https://api.github.com/repos/rust-lang/rust/commits/76768479b55a7a5de69d8a525140dd0c44c052df", "html_url": "https://github.com/rust-lang/rust/commit/76768479b55a7a5de69d8a525140dd0c44c052df"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "6e5890d6ade00e485b7d1e25d6b23e756341c649", "filename": "tests/compiletest.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/df9440d5ac4ac23f9a2fd2e6e8ac4c6beb473ba0/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df9440d5ac4ac23f9a2fd2e6e8ac4c6beb473ba0/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=df9440d5ac4ac23f9a2fd2e6e8ac4c6beb473ba0", "patch": "@@ -92,9 +92,17 @@ fn compile_test() {\n         let mut unsupported = Vec::new();\n         let mut unimplemented_intrinsic = Vec::new();\n         let mut limits = Vec::new();\n-        for file in std::fs::read_dir(path).unwrap() {\n+        let mut files: Vec<_> = std::fs::read_dir(path).unwrap().collect();\n+        while let Some(file) = files.pop() {\n             let file = file.unwrap();\n             let path = file.path();\n+            if file.metadata().unwrap().is_dir() {\n+                if !path.to_str().unwrap().ends_with(\"auxiliary\") {\n+                    // add subdirs recursively\n+                    files.extend(std::fs::read_dir(path).unwrap());\n+                }\n+                continue;\n+            }\n             if !file.metadata().unwrap().is_file() || !path.to_str().unwrap().ends_with(\".rs\") {\n                 continue;\n             }"}]}