{"sha": "022e3fe550406c3fbdb64f241381bc14b1937cfb", "node_id": "C_kwDOAAsO6NoAKDAyMmUzZmU1NTA0MDZjM2ZiZGI2NGYyNDEzODFiYzE0YjE5MzdjZmI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-09T14:59:54Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-09T16:14:59Z"}, "message": "Equate fn outputs when inferring RPITIT hidden types", "tree": {"sha": "5255f5c9b335c8ca09b3ae31f58e048d0b4f4cc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5255f5c9b335c8ca09b3ae31f58e048d0b4f4cc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/022e3fe550406c3fbdb64f241381bc14b1937cfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/022e3fe550406c3fbdb64f241381bc14b1937cfb", "html_url": "https://github.com/rust-lang/rust/commit/022e3fe550406c3fbdb64f241381bc14b1937cfb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/022e3fe550406c3fbdb64f241381bc14b1937cfb/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98f3001eecbe4cbd091c10ffab45b4c164bb507b", "url": "https://api.github.com/repos/rust-lang/rust/commits/98f3001eecbe4cbd091c10ffab45b4c164bb507b", "html_url": "https://github.com/rust-lang/rust/commit/98f3001eecbe4cbd091c10ffab45b4c164bb507b"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "13a96df77b69d51699496629a0e0d9731540fa90", "filename": "compiler/rustc_typeck/src/check/compare_method.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/022e3fe550406c3fbdb64f241381bc14b1937cfb/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/022e3fe550406c3fbdb64f241381bc14b1937cfb/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcompare_method.rs?ref=022e3fe550406c3fbdb64f241381bc14b1937cfb", "patch": "@@ -295,12 +295,26 @@ pub(super) fn compare_predicates_and_trait_impl_trait_tys<'tcx>(\n         // type would be more appropriate. In other places we have a `Vec<Span>`\n         // corresponding to their `Vec<Predicate>`, but we don't have that here.\n         // Fixing this would improve the output of test `issue-83765.rs`.\n-        let sub_result = infcx\n+        let mut result = infcx\n             .at(&cause, param_env)\n             .sup(trait_fty, impl_fty)\n             .map(|infer_ok| ocx.register_infer_ok_obligations(infer_ok));\n \n-        if let Err(terr) = sub_result {\n+        // HACK(RPITIT): #101614. When we are trying to infer the hidden types for\n+        // RPITITs, we need to equate the output tys instead of just subtyping. If\n+        // we just use `sup` above, we'll end up `&'static str <: _#1t`, which causes\n+        // us to infer `_#1t = #'_#2r str`, where `'_#2r` is unconstrained, which gets\n+        // fixed up to `ReEmpty`, and which is certainly not what we want.\n+        if trait_fty.has_infer_types() {\n+            result = result.and_then(|()| {\n+                infcx\n+                    .at(&cause, param_env)\n+                    .eq(trait_sig.output(), impl_sig.output())\n+                    .map(|infer_ok| ocx.register_infer_ok_obligations(infer_ok))\n+            });\n+        }\n+\n+        if let Err(terr) = result {\n             debug!(\"sub_types failed: impl ty {:?}, trait ty {:?}\", impl_fty, trait_fty);\n \n             let (impl_err_span, trait_err_span) =\n@@ -445,6 +459,7 @@ pub(super) fn compare_predicates_and_trait_impl_trait_tys<'tcx>(\n                             region\n                         }\n                     });\n+                    debug!(%ty);\n                     collected_tys.insert(def_id, ty);\n                 }\n                 Err(err) => {"}]}