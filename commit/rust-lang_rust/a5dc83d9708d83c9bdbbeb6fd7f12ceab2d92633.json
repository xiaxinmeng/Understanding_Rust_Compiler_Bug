{"sha": "a5dc83d9708d83c9bdbbeb6fd7f12ceab2d92633", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZGM4M2Q5NzA4ZDgzYzliZGJiZWI2ZmQ3ZjEyY2VhYjJkOTI2MzM=", "commit": {"author": {"name": "Crazycolorz5", "email": "Crazycolorz5@gmail.com", "date": "2018-05-25T21:36:23Z"}, "committer": {"name": "Crazycolorz5", "email": "Crazycolorz5@gmail.com", "date": "2018-06-05T02:25:01Z"}, "message": "Tidy fixes.", "tree": {"sha": "10af295c7f38dbfb2ae6c5e6d6cf362bc606d7ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10af295c7f38dbfb2ae6c5e6d6cf362bc606d7ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5dc83d9708d83c9bdbbeb6fd7f12ceab2d92633", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5dc83d9708d83c9bdbbeb6fd7f12ceab2d92633", "html_url": "https://github.com/rust-lang/rust/commit/a5dc83d9708d83c9bdbbeb6fd7f12ceab2d92633", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5dc83d9708d83c9bdbbeb6fd7f12ceab2d92633/comments", "author": {"login": "Crazycolorz5", "id": 1497003, "node_id": "MDQ6VXNlcjE0OTcwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1497003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Crazycolorz5", "html_url": "https://github.com/Crazycolorz5", "followers_url": "https://api.github.com/users/Crazycolorz5/followers", "following_url": "https://api.github.com/users/Crazycolorz5/following{/other_user}", "gists_url": "https://api.github.com/users/Crazycolorz5/gists{/gist_id}", "starred_url": "https://api.github.com/users/Crazycolorz5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Crazycolorz5/subscriptions", "organizations_url": "https://api.github.com/users/Crazycolorz5/orgs", "repos_url": "https://api.github.com/users/Crazycolorz5/repos", "events_url": "https://api.github.com/users/Crazycolorz5/events{/privacy}", "received_events_url": "https://api.github.com/users/Crazycolorz5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Crazycolorz5", "id": 1497003, "node_id": "MDQ6VXNlcjE0OTcwMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1497003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Crazycolorz5", "html_url": "https://github.com/Crazycolorz5", "followers_url": "https://api.github.com/users/Crazycolorz5/followers", "following_url": "https://api.github.com/users/Crazycolorz5/following{/other_user}", "gists_url": "https://api.github.com/users/Crazycolorz5/gists{/gist_id}", "starred_url": "https://api.github.com/users/Crazycolorz5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Crazycolorz5/subscriptions", "organizations_url": "https://api.github.com/users/Crazycolorz5/orgs", "repos_url": "https://api.github.com/users/Crazycolorz5/repos", "events_url": "https://api.github.com/users/Crazycolorz5/events{/privacy}", "received_events_url": "https://api.github.com/users/Crazycolorz5/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a9ffa730740c18d23918add84c40bdf77f17dc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a9ffa730740c18d23918add84c40bdf77f17dc0", "html_url": "https://github.com/rust-lang/rust/commit/7a9ffa730740c18d23918add84c40bdf77f17dc0"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a5129998e0fb9e68bb45f11fb48787c7648a7951", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a5dc83d9708d83c9bdbbeb6fd7f12ceab2d92633/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5dc83d9708d83c9bdbbeb6fd7f12ceab2d92633/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=a5dc83d9708d83c9bdbbeb6fd7f12ceab2d92633", "patch": "@@ -880,11 +880,11 @@ impl<'a> Parser<'a> {\n             false\n         }\n     }\n-    \n+\n     /// Expect and consume a `+`. if `+=` is seen, replace it with a `=`\n     /// and continue. If a `+` is not seen, return false.\n     ///\n-    /// This is using when token splitting += into +. \n+    /// This is using when token splitting += into +.\n     /// See issue 47856 for an example of when this may occur.\n     fn eat_plus(&mut self) -> bool {\n         self.expected_tokens.push(TokenType::Token(token::BinOp(token::Plus)));\n@@ -901,8 +901,8 @@ impl<'a> Parser<'a> {\n             _ => false,\n         }\n     }\n-    \n-    \n+\n+\n     /// Checks to see if the next token is either `+` or `+=`.\n     /// Otherwise returns false.\n     fn check_plus(&mut self) -> bool {\n@@ -1679,7 +1679,7 @@ impl<'a> Parser<'a> {\n         let poly_trait_ref = PolyTraitRef::new(generic_params, path, lo.to(self.prev_span));\n         let mut bounds = vec![TraitTyParamBound(poly_trait_ref, TraitBoundModifier::None)];\n         if parse_plus {\n-            self.eat_plus(); // `+` or `+=` gets split and `+` is discarded \n+            self.eat_plus(); // `+`, or `+=` gets split and `+` is discarded\n             bounds.append(&mut self.parse_ty_param_bounds()?);\n         }\n         Ok(TyKind::TraitObject(bounds, TraitObjectSyntax::None))"}, {"sha": "b4300feced4fae7af89825a02714dd557eb8037d", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5dc83d9708d83c9bdbbeb6fd7f12ceab2d92633/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5dc83d9708d83c9bdbbeb6fd7f12ceab2d92633/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=a5dc83d9708d83c9bdbbeb6fd7f12ceab2d92633", "patch": "@@ -224,7 +224,7 @@ impl Token {\n             _ => false,\n         }\n     }\n-    \n+\n     pub fn is_like_plus(&self) -> bool {\n         match *self {\n             BinOp(Plus) | BinOpEq(Plus) => true,"}]}