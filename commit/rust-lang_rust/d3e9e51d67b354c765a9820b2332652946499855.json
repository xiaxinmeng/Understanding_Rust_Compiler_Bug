{"sha": "d3e9e51d67b354c765a9820b2332652946499855", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzZTllNTFkNjdiMzU0Yzc2NWE5ODIwYjIzMzI2NTI5NDY0OTk4NTU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-01-31T09:51:19Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-01-31T09:51:19Z"}, "message": "fix accessing fields other than the first in packed structs", "tree": {"sha": "52eee9a711c6763855638f6e0d47a939f88fbf0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52eee9a711c6763855638f6e0d47a939f88fbf0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3e9e51d67b354c765a9820b2332652946499855", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3e9e51d67b354c765a9820b2332652946499855", "html_url": "https://github.com/rust-lang/rust/commit/d3e9e51d67b354c765a9820b2332652946499855", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3e9e51d67b354c765a9820b2332652946499855/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "148c6de50703f611f272e86e568425349b3b1550", "url": "https://api.github.com/repos/rust-lang/rust/commits/148c6de50703f611f272e86e568425349b3b1550", "html_url": "https://github.com/rust-lang/rust/commit/148c6de50703f611f272e86e568425349b3b1550"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "586726d95ded56a345bd854781c0ed796a7495dc", "filename": "src/lvalue.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d3e9e51d67b354c765a9820b2332652946499855/src%2Flvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3e9e51d67b354c765a9820b2332652946499855/src%2Flvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flvalue.rs?ref=d3e9e51d67b354c765a9820b2332652946499855", "patch": "@@ -208,12 +208,13 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                     _ => bug!(\"field access on non-product type: {:?}\", base_layout),\n                 };\n \n+                let ptr = base_ptr.offset(offset.bytes());\n+\n                 if packed {\n                     let size = self.type_size(field_ty)?.expect(\"packed struct must be sized\");\n-                    self.memory.mark_packed(base_ptr, size);\n+                    self.memory.mark_packed(ptr, size);\n                 }\n \n-                let ptr = base_ptr.offset(offset.bytes());\n                 let extra = if self.type_is_sized(field_ty) {\n                     LvalueExtra::None\n                 } else {"}]}