{"sha": "03198da2add75a0bcec792ffd84fcc8d94e8637e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMTk4ZGEyYWRkNzVhMGJjZWM3OTJmZmQ4NGZjYzhkOTRlODYzN2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-21T10:06:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-21T10:06:13Z"}, "message": "Auto merge of #42750 - arielb1:unwind-stack, r=eddyb\n\nUpdate LLVM to pick StackColoring improvement\n\nFixes #40883.\n\nr? @eddyb", "tree": {"sha": "cf4cf36e22386cef3d403dbf82b66421b37bb293", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf4cf36e22386cef3d403dbf82b66421b37bb293"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03198da2add75a0bcec792ffd84fcc8d94e8637e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03198da2add75a0bcec792ffd84fcc8d94e8637e", "html_url": "https://github.com/rust-lang/rust/commit/03198da2add75a0bcec792ffd84fcc8d94e8637e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03198da2add75a0bcec792ffd84fcc8d94e8637e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37a991abc0271b3dc13aa46bed9381ed6aaa26d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/37a991abc0271b3dc13aa46bed9381ed6aaa26d4", "html_url": "https://github.com/rust-lang/rust/commit/37a991abc0271b3dc13aa46bed9381ed6aaa26d4"}, {"sha": "4f1da874b860655c2054481821f6b99cfe6ff250", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f1da874b860655c2054481821f6b99cfe6ff250", "html_url": "https://github.com/rust-lang/rust/commit/4f1da874b860655c2054481821f6b99cfe6ff250"}], "stats": {"total": 106, "additions": 104, "deletions": 2}, "files": [{"sha": "8e1e6e6ff18a24b417a5ec3254bb111b8a9b4713", "filename": "src/llvm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm?ref=03198da2add75a0bcec792ffd84fcc8d94e8637e", "patch": "@@ -1 +1 @@\n-Subproject commit 5415ff0264c134152cca65ae8f5d50b356d61162\n+Subproject commit 8e1e6e6ff18a24b417a5ec3254bb111b8a9b4713"}, {"sha": "e547659d19a61ad3d76686c52f987942ef03cfd9", "filename": "src/rustllvm/llvm-rebuild-trigger", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03198da2add75a0bcec792ffd84fcc8d94e8637e/src%2Frustllvm%2Fllvm-rebuild-trigger", "raw_url": "https://github.com/rust-lang/rust/raw/03198da2add75a0bcec792ffd84fcc8d94e8637e/src%2Frustllvm%2Fllvm-rebuild-trigger", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Fllvm-rebuild-trigger?ref=03198da2add75a0bcec792ffd84fcc8d94e8637e", "patch": "@@ -1,4 +1,4 @@\n # If this file is modified, then llvm will be (optionally) cleaned and then rebuilt.\n # The actual contents of this file do not matter, but to trigger a change on the\n # build bots then the contents should be changed so git updates the mtime.\n-2017-06-18\n+2017-06-19"}, {"sha": "feb4a88a1d1e15b0ff8d35be92c71895514b0a49", "filename": "src/test/run-pass/issue-40883.rs", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/03198da2add75a0bcec792ffd84fcc8d94e8637e/src%2Ftest%2Frun-pass%2Fissue-40883.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03198da2add75a0bcec792ffd84fcc8d94e8637e/src%2Ftest%2Frun-pass%2Fissue-40883.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-40883.rs?ref=03198da2add75a0bcec792ffd84fcc8d94e8637e", "patch": "@@ -0,0 +1,102 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// check that we don't have linear stack usage with multiple calls to `push`\n+// min-llvm-version 4.0\n+\n+#![feature(test)]\n+\n+extern crate test;\n+use std::mem;\n+\n+fn meal() -> Big {\n+    if test::black_box(false) {\n+        panic!()\n+    }\n+    Big { drop_me: [\n+        None, None, None, None, None, None, None, None,\n+        None, None, None, None, None, None, None, None,\n+        None, None, None, None, None, None, None, None,\n+        None, None, None, None, None, None, None, None,\n+        None, None, None, None, None, None, None, None,\n+        None, None, None, None, None, None, None, None,\n+    ]}\n+}\n+\n+pub struct Big {\n+    drop_me: [Option<Box<u8>>; 48],\n+}\n+\n+#[inline]\n+fn push(out: &mut Vec<Big>) {\n+    out.push(meal());\n+}\n+\n+#[inline(never)]\n+pub fn supersize_me(out: &mut Vec<Big>) {\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out); // 16 calls to `push`\n+\n+    verify_stack_usage(out);\n+\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out);\n+    push(out); // 16 calls to `push`\n+}\n+\n+#[inline(never)]\n+fn verify_stack_usage(before_ptr: *mut Vec<Big>) {\n+    // to check stack usage, create locals before and after\n+    // and check the difference in addresses between them.\n+    let mut stack_var: Vec<Big> = vec![];\n+    test::black_box(&mut stack_var);\n+    let stack_usage = isize::abs(\n+        (&mut stack_var as *mut _ as isize) -\n+            (before_ptr as isize)) as usize;\n+    // give space for 2 copies of `Big` + 128 \"misc\" bytes.\n+    if stack_usage > mem::size_of::<Big>() * 2 + 128 {\n+        panic!(\"used {} bytes of stack, but `struct Big` is only {} bytes\",\n+               stack_usage, mem::size_of::<Big>());\n+    }\n+\n+}\n+\n+pub fn main() {\n+    let mut v = vec![];\n+    test::black_box(&mut v);\n+    supersize_me(&mut v);\n+}"}]}