{"sha": "02b6f871f174f510cd258c5064dcbe08cadd11d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyYjZmODcxZjE3NGY1MTBjZDI1OGM1MDY0ZGNiZTA4Y2FkZDExZDM=", "commit": {"author": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-06-04T07:07:57Z"}, "committer": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-06-04T22:05:07Z"}, "message": "Fix clippy::iter_cloned_collect", "tree": {"sha": "ff75a4079e7059168a2acc70966a9f00ec21f437", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff75a4079e7059168a2acc70966a9f00ec21f437"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02b6f871f174f510cd258c5064dcbe08cadd11d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02b6f871f174f510cd258c5064dcbe08cadd11d3", "html_url": "https://github.com/rust-lang/rust/commit/02b6f871f174f510cd258c5064dcbe08cadd11d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02b6f871f174f510cd258c5064dcbe08cadd11d3/comments", "author": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b54b06ee3867cf632434b9cbb06d64d0d739cff", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b54b06ee3867cf632434b9cbb06d64d0d739cff", "html_url": "https://github.com/rust-lang/rust/commit/9b54b06ee3867cf632434b9cbb06d64d0d739cff"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "8b798d6c9a9f4f29c0f50022de0e4bb7dbfaf57d", "filename": "crates/ra_hir/src/nameres.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/02b6f871f174f510cd258c5064dcbe08cadd11d3/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02b6f871f174f510cd258c5064dcbe08cadd11d3/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres.rs?ref=02b6f871f174f510cd258c5064dcbe08cadd11d3", "patch": "@@ -422,10 +422,8 @@ impl CrateDefMap {\n             curr_per_ns = match curr {\n                 ModuleDef::Module(module) => {\n                     if module.krate != self.krate {\n-                        let path = Path {\n-                            segments: path.segments[i..].iter().cloned().collect(),\n-                            kind: PathKind::Self_,\n-                        };\n+                        let path =\n+                            Path { segments: path.segments[i..].to_vec(), kind: PathKind::Self_ };\n                         log::debug!(\"resolving {:?} in other crate\", path);\n                         let defp_map = db.crate_def_map(module.krate);\n                         let (def, s) ="}]}