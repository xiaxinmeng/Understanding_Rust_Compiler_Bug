{"sha": "a74138ed2253b792760f1fa6ab88d6b3d28a07e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3NDEzOGVkMjI1M2I3OTI3NjBmMWZhNmFiODhkNmIzZDI4YTA3ZTk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T04:55:55Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:30Z"}, "message": "librustc: De-`@mut` `FunctionDebugContextData::argument_counter`", "tree": {"sha": "0e8d87c3ba7f0034eb18d7f464b2ad68a089c0f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e8d87c3ba7f0034eb18d7f464b2ad68a089c0f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a74138ed2253b792760f1fa6ab88d6b3d28a07e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a74138ed2253b792760f1fa6ab88d6b3d28a07e9", "html_url": "https://github.com/rust-lang/rust/commit/a74138ed2253b792760f1fa6ab88d6b3d28a07e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a74138ed2253b792760f1fa6ab88d6b3d28a07e9/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b80a111e19d9ac8e1847ea406c099f42a8ff7310", "url": "https://api.github.com/repos/rust-lang/rust/commits/b80a111e19d9ac8e1847ea406c099f42a8ff7310", "html_url": "https://github.com/rust-lang/rust/commit/b80a111e19d9ac8e1847ea406c099f42a8ff7310"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "b3645a6df5f0d51d4bd9bb7e64550275efa9740b", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a74138ed2253b792760f1fa6ab88d6b3d28a07e9/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a74138ed2253b792760f1fa6ab88d6b3d28a07e9/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=a74138ed2253b792760f1fa6ab88d6b3d28a07e9", "patch": "@@ -250,7 +250,7 @@ impl FunctionDebugContext {\n struct FunctionDebugContextData {\n     scope_map: RefCell<HashMap<ast::NodeId, DIScope>>,\n     fn_metadata: DISubprogram,\n-    argument_counter: uint,\n+    argument_counter: Cell<uint>,\n     source_locations_enabled: bool,\n }\n \n@@ -460,8 +460,8 @@ pub fn create_self_argument_metadata(bcx: @Block,\n \n     let argument_index = {\n         let counter = &mut bcx.fcx.debug_context.get_mut_ref(bcx.ccx(), span).argument_counter;\n-        let argument_index = *counter;\n-        *counter += 1;\n+        let argument_index = counter.get();\n+        counter.set(argument_index + 1);\n         argument_index\n     };\n \n@@ -538,9 +538,9 @@ pub fn create_argument_metadata(bcx: @Block,\n         let argument_ident = ast_util::path_to_ident(path_ref);\n \n         let argument_index = {\n-            let counter = &mut fcx.debug_context.get_mut_ref(cx, span).argument_counter;\n-            let argument_index = *counter;\n-            *counter += 1;\n+            let counter = &fcx.debug_context.get_mut_ref(cx, span).argument_counter;\n+            let argument_index = counter.get();\n+            counter.set(argument_index + 1);\n             argument_index\n         };\n \n@@ -761,10 +761,10 @@ pub fn create_function_debug_context(cx: &CrateContext,\n     });\n \n     // Initialize fn debug context (including scope map and namespace map)\n-    let mut fn_debug_context = ~FunctionDebugContextData {\n+    let fn_debug_context = ~FunctionDebugContextData {\n         scope_map: RefCell::new(HashMap::new()),\n         fn_metadata: fn_metadata,\n-        argument_counter: 1,\n+        argument_counter: Cell::new(1),\n         source_locations_enabled: false,\n     };\n "}]}