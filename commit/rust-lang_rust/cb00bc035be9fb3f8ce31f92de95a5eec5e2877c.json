{"sha": "cb00bc035be9fb3f8ce31f92de95a5eec5e2877c", "node_id": "C_kwDOAAsO6NoAKGNiMDBiYzAzNWJlOWZiM2Y4Y2UzMWY5MmRlOTVhNWVlYzVlMjg3N2M", "commit": {"author": {"name": "nils", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-01-17T13:06:12Z"}, "committer": {"name": "nils", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-01-17T14:04:05Z"}, "message": "Hide `_use_mk_alias_ty_instead` in `<AliasTy as Debug>::fmt`", "tree": {"sha": "fd062fbc96b1e83735379144670d211aee3f2a69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd062fbc96b1e83735379144670d211aee3f2a69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb00bc035be9fb3f8ce31f92de95a5eec5e2877c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb00bc035be9fb3f8ce31f92de95a5eec5e2877c", "html_url": "https://github.com/rust-lang/rust/commit/cb00bc035be9fb3f8ce31f92de95a5eec5e2877c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb00bc035be9fb3f8ce31f92de95a5eec5e2877c/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "159ba8a92c9e2fa4121f106176309521f4af87e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/159ba8a92c9e2fa4121f106176309521f4af87e9", "html_url": "https://github.com/rust-lang/rust/commit/159ba8a92c9e2fa4121f106176309521f4af87e9"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "1e43e8bf30d846036604c7321c134f9462704511", "filename": "compiler/rustc_middle/src/ty/structural_impls.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cb00bc035be9fb3f8ce31f92de95a5eec5e2877c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb00bc035be9fb3f8ce31f92de95a5eec5e2877c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs?ref=cb00bc035be9fb3f8ce31f92de95a5eec5e2877c", "patch": "@@ -7,7 +7,7 @@ use crate::mir::{Field, ProjectionKind};\n use crate::ty::fold::{FallibleTypeFolder, TypeFoldable, TypeSuperFoldable};\n use crate::ty::print::{with_no_trimmed_paths, FmtPrinter, Printer};\n use crate::ty::visit::{TypeSuperVisitable, TypeVisitable, TypeVisitor};\n-use crate::ty::{self, InferConst, Lift, Term, TermKind, Ty, TyCtxt};\n+use crate::ty::{self, AliasTy, InferConst, Lift, Term, TermKind, Ty, TyCtxt};\n use rustc_data_structures::functor::IdFunctor;\n use rustc_hir::def::Namespace;\n use rustc_index::vec::{Idx, IndexVec};\n@@ -180,6 +180,15 @@ impl<'tcx> fmt::Debug for ty::PredicateKind<'tcx> {\n     }\n }\n \n+impl<'tcx> fmt::Debug for AliasTy<'tcx> {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.debug_struct(\"AliasTy\")\n+            .field(\"substs\", &self.substs)\n+            .field(\"def_id\", &self.def_id)\n+            .finish()\n+    }\n+}\n+\n ///////////////////////////////////////////////////////////////////////////\n // Atomic structs\n //"}, {"sha": "3f9e588358494d10228b609397c0448b1620bdb2", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb00bc035be9fb3f8ce31f92de95a5eec5e2877c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb00bc035be9fb3f8ce31f92de95a5eec5e2877c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=cb00bc035be9fb3f8ce31f92de95a5eec5e2877c", "patch": "@@ -1226,7 +1226,7 @@ impl<'tcx> FallibleTypeFolder<'tcx> for SkipBindersAt<'tcx> {\n /// For a projection, this would be `<Ty as Trait<...>>::N`.\n ///\n /// For an opaque type, there is no explicit syntax.\n-#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Debug, TyEncodable, TyDecodable)]\n+#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash, TyEncodable, TyDecodable)]\n #[derive(HashStable, TypeFoldable, TypeVisitable, Lift)]\n pub struct AliasTy<'tcx> {\n     /// The parameters of the associated or opaque item."}, {"sha": "8043f1e5a05820ee01ada4cdd9d569127a8ef9e8", "filename": "tests/ui/chalkify/bugs/async.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb00bc035be9fb3f8ce31f92de95a5eec5e2877c/tests%2Fui%2Fchalkify%2Fbugs%2Fasync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cb00bc035be9fb3f8ce31f92de95a5eec5e2877c/tests%2Fui%2Fchalkify%2Fbugs%2Fasync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchalkify%2Fbugs%2Fasync.stderr?ref=cb00bc035be9fb3f8ce31f92de95a5eec5e2877c", "patch": "@@ -37,7 +37,7 @@ LL | async fn foo(x: u32) -> u32 {\n    = help: the trait `Future` is not implemented for `[async fn body@$DIR/async.rs:23:29: 25:2]`\n    = note: [async fn body@$DIR/async.rs:23:29: 25:2] must be a future or must implement `IntoFuture` to be awaited\n \n-error: internal compiler error: projection clauses should be implied from elsewhere. obligation: `Obligation(predicate=Binder(ProjectionPredicate(AliasTy { substs: [[async fn body@$DIR/async.rs:23:29: 25:2]], def_id: ...), _use_mk_alias_ty_instead: () }, Term::Ty(u32)), []), depth=0)`\n+error: internal compiler error: projection clauses should be implied from elsewhere. obligation: `Obligation(predicate=Binder(ProjectionPredicate(AliasTy { substs: [[async fn body@$DIR/async.rs:23:29: 25:2]], def_id: ...) }, Term::Ty(u32)), []), depth=0)`\n   --> $DIR/async.rs:23:25\n    |\n LL | async fn foo(x: u32) -> u32 {"}]}