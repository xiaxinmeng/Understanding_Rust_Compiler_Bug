{"sha": "607716d213b88eddd34693c2e877c33bdd68aad1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNzcxNmQyMTNiODhlZGRkMzQ2OTNjMmU4NzdjMzNiZGQ2OGFhZDE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-03T18:11:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-03T18:11:56Z"}, "message": "Merge #7862\n\n7862: Remove incorrect broken test r=jonas-schievink a=jonas-schievink\n\n`Struct` cannot be named at all in that position, since `super` doesn't\r\nresolve to the block scope\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "af32d74c83e1680bc97a119a23bb92e603ab7efb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af32d74c83e1680bc97a119a23bb92e603ab7efb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/607716d213b88eddd34693c2e877c33bdd68aad1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgP9FsCRBK7hj4Ov3rIwAAdHIIAAhVYamWFWMixJ5aR0o95Q3c\ncW+hJWUwxHxpWh/WlFez3+c8UFP4Sh9kSFkGmZFgcLOkfLqUjoLSTBCNbZJ82V4b\n6RHXd9M9Cblf1O25UCLnia6luyABw7DQf6jUpKcc3s01xrSLRgjkFpUMlyokSMcc\nSffFHMdFpOZT3f9H3TN3/U/jMj8h7SoCMwNjehGbBVQL0Fo1QgCWpYnxh4nrxZ9j\nrAgwOdTHn9vmPeV32nQexAyqm5P1xy2h4r3q6aK7ijWwbjEJhVMi8tB/u5mk1BIT\nuCUTNBqe6cvvXzWWZ7CWjr1FAm7kXOtQzMnyXoP1i0A+9L/WfGBroMdqeDjouhc=\n=ya8/\n-----END PGP SIGNATURE-----\n", "payload": "tree af32d74c83e1680bc97a119a23bb92e603ab7efb\nparent 603481f534e7da99dc759e0d25f25f18a100ac10\nparent 1c057dc3c1b15eafd7ca682e371a3ba3d66daed4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1614795116 +0000\ncommitter GitHub <noreply@github.com> 1614795116 +0000\n\nMerge #7862\n\n7862: Remove incorrect broken test r=jonas-schievink a=jonas-schievink\n\n`Struct` cannot be named at all in that position, since `super` doesn't\r\nresolve to the block scope\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/607716d213b88eddd34693c2e877c33bdd68aad1", "html_url": "https://github.com/rust-lang/rust/commit/607716d213b88eddd34693c2e877c33bdd68aad1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/607716d213b88eddd34693c2e877c33bdd68aad1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "603481f534e7da99dc759e0d25f25f18a100ac10", "url": "https://api.github.com/repos/rust-lang/rust/commits/603481f534e7da99dc759e0d25f25f18a100ac10", "html_url": "https://github.com/rust-lang/rust/commit/603481f534e7da99dc759e0d25f25f18a100ac10"}, {"sha": "1c057dc3c1b15eafd7ca682e371a3ba3d66daed4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c057dc3c1b15eafd7ca682e371a3ba3d66daed4", "html_url": "https://github.com/rust-lang/rust/commit/1c057dc3c1b15eafd7ca682e371a3ba3d66daed4"}], "stats": {"total": 24, "additions": 0, "deletions": 24}, "files": [{"sha": "3a98ffbaac86e468756e58da89ebf1b4e12728ae", "filename": "crates/hir_def/src/find_path.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/607716d213b88eddd34693c2e877c33bdd68aad1/crates%2Fhir_def%2Fsrc%2Ffind_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/607716d213b88eddd34693c2e877c33bdd68aad1/crates%2Fhir_def%2Fsrc%2Ffind_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ffind_path.rs?ref=607716d213b88eddd34693c2e877c33bdd68aad1", "patch": "@@ -861,30 +861,6 @@ mod tests {\n         );\n     }\n \n-    #[test]\n-    #[ignore]\n-    fn inner_items_from_parent_module() {\n-        // FIXME: ItemTree currently associates all inner items with `main`. Luckily, this sort of\n-        // code is very rare, so this isn't terrible.\n-        // To fix it, we should probably build dedicated `ItemTree`s for inner items, and not store\n-        // them in the file's main ItemTree. This would also allow us to stop parsing function\n-        // bodies when we only want to compute the crate's main DefMap.\n-        check_found_path(\n-            r#\"\n-            fn main() {\n-                struct Struct {}\n-                mod module {\n-                    $0\n-                }\n-            }\n-        \"#,\n-            \"super::Struct\",\n-            \"super::Struct\",\n-            \"super::Struct\",\n-            \"super::Struct\",\n-        );\n-    }\n-\n     #[test]\n     fn outer_items_with_inner_items_present() {\n         check_found_path("}]}