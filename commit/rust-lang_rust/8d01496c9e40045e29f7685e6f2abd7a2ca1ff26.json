{"sha": "8d01496c9e40045e29f7685e6f2abd7a2ca1ff26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMDE0OTZjOWU0MDA0NWUyOWY3Njg1ZTZmMmFiZDdhMmNhMWZmMjY=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-06-06T01:46:18Z"}, "committer": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-06-06T01:46:18Z"}, "message": "Remove unreachable lines", "tree": {"sha": "7372d72606ee194ed4aef326e6fe85325b4fce84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7372d72606ee194ed4aef326e6fe85325b4fce84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d01496c9e40045e29f7685e6f2abd7a2ca1ff26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d01496c9e40045e29f7685e6f2abd7a2ca1ff26", "html_url": "https://github.com/rust-lang/rust/commit/8d01496c9e40045e29f7685e6f2abd7a2ca1ff26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d01496c9e40045e29f7685e6f2abd7a2ca1ff26/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f545dfe95eca33dfc753bd9b57bd2753efddf3e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f545dfe95eca33dfc753bd9b57bd2753efddf3e8", "html_url": "https://github.com/rust-lang/rust/commit/f545dfe95eca33dfc753bd9b57bd2753efddf3e8"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "cc5825048e4b8339c650fe5c37242da34ff0cc67", "filename": "src/items.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8d01496c9e40045e29f7685e6f2abd7a2ca1ff26/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d01496c9e40045e29f7685e6f2abd7a2ca1ff26/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=8d01496c9e40045e29f7685e6f2abd7a2ca1ff26", "patch": "@@ -709,11 +709,6 @@ pub fn format_impl(\n             return Some(result);\n         }\n \n-        if !where_clause_str.is_empty() && !where_clause_str.contains('\\n') {\n-            let width = offset.block_indent + context.config.tab_spaces() - 1;\n-            let where_indent = Indent::new(0, width);\n-            result.push_str(&where_indent.to_string_with_newline(context.config));\n-        }\n         result.push_str(&where_clause_str);\n \n         let need_newline = last_line_contains_single_line_comment(&result) || result.contains('\\n');"}]}