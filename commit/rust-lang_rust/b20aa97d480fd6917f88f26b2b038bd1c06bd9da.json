{"sha": "b20aa97d480fd6917f88f26b2b038bd1c06bd9da", "node_id": "C_kwDOAAsO6NoAKGIyMGFhOTdkNDgwZmQ2OTE3Zjg4ZjI2YjJiMDM4YmQxYzA2YmQ5ZGE", "commit": {"author": {"name": "Ali MJ Al-Nasrawy", "email": "alimjalnasrawy@gmail.com", "date": "2023-03-09T08:30:49Z"}, "committer": {"name": "Ali MJ Al-Nasrawy", "email": "alimjalnasrawy@gmail.com", "date": "2023-03-26T08:43:12Z"}, "message": "exhaustive match on implied bounds regions", "tree": {"sha": "f1dd13f45a4b91b487cfc4848b21d23c3343c0b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1dd13f45a4b91b487cfc4848b21d23c3343c0b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b20aa97d480fd6917f88f26b2b038bd1c06bd9da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b20aa97d480fd6917f88f26b2b038bd1c06bd9da", "html_url": "https://github.com/rust-lang/rust/commit/b20aa97d480fd6917f88f26b2b038bd1c06bd9da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b20aa97d480fd6917f88f26b2b038bd1c06bd9da/comments", "author": {"login": "aliemjay", "id": 28497461, "node_id": "MDQ6VXNlcjI4NDk3NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/28497461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliemjay", "html_url": "https://github.com/aliemjay", "followers_url": "https://api.github.com/users/aliemjay/followers", "following_url": "https://api.github.com/users/aliemjay/following{/other_user}", "gists_url": "https://api.github.com/users/aliemjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliemjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliemjay/subscriptions", "organizations_url": "https://api.github.com/users/aliemjay/orgs", "repos_url": "https://api.github.com/users/aliemjay/repos", "events_url": "https://api.github.com/users/aliemjay/events{/privacy}", "received_events_url": "https://api.github.com/users/aliemjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aliemjay", "id": 28497461, "node_id": "MDQ6VXNlcjI4NDk3NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/28497461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliemjay", "html_url": "https://github.com/aliemjay", "followers_url": "https://api.github.com/users/aliemjay/followers", "following_url": "https://api.github.com/users/aliemjay/following{/other_user}", "gists_url": "https://api.github.com/users/aliemjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliemjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliemjay/subscriptions", "organizations_url": "https://api.github.com/users/aliemjay/orgs", "repos_url": "https://api.github.com/users/aliemjay/repos", "events_url": "https://api.github.com/users/aliemjay/events{/privacy}", "received_events_url": "https://api.github.com/users/aliemjay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cfb5f73ba3c9b4c982ff4c0c54ab7ebd207408f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cfb5f73ba3c9b4c982ff4c0c54ab7ebd207408f", "html_url": "https://github.com/rust-lang/rust/commit/9cfb5f73ba3c9b4c982ff4c0c54ab7ebd207408f"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "a480ee5429eec1af6fd7693def13eb9e00415dcc", "filename": "compiler/rustc_infer/src/infer/outlives/env.rs", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b20aa97d480fd6917f88f26b2b038bd1c06bd9da/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b20aa97d480fd6917f88f26b2b038bd1c06bd9da/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fenv.rs?ref=b20aa97d480fd6917f88f26b2b038bd1c06bd9da", "patch": "@@ -136,21 +136,14 @@ impl<'tcx> OutlivesEnvironmentBuilder<'tcx> {\n                     self.region_bound_pairs\n                         .insert(ty::OutlivesPredicate(GenericKind::Alias(alias_b), r_a));\n                 }\n-                OutlivesBound::RegionSubRegion(r_a, r_b) => {\n-                    // In principle, we could record (and take\n-                    // advantage of) every relationship here, but\n-                    // we are also free not to -- it simply means\n-                    // strictly less that we can successfully type\n-                    // check. Right now we only look for things\n-                    // relationships between free regions. (It may\n-                    // also be that we should revise our inference\n-                    // system to be more general and to make use\n-                    // of *every* relationship that arises here,\n-                    // but presently we do not.)\n-                    if r_a.is_free_or_static() && r_b.is_free() {\n-                        self.region_relation.add(r_a, r_b)\n-                    }\n-                }\n+                OutlivesBound::RegionSubRegion(r_a, r_b) => match (*r_a, *r_b) {\n+                    (\n+                        ty::ReStatic | ty::ReEarlyBound(_) | ty::ReFree(_),\n+                        ty::ReStatic | ty::ReEarlyBound(_) | ty::ReFree(_),\n+                    ) => self.region_relation.add(r_a, r_b),\n+                    (ty::ReError(_), _) | (_, ty::ReError(_)) => {}\n+                    _ => bug!(\"add_outlives_bounds: unexpected regions\"),\n+                },\n             }\n         }\n     }"}]}