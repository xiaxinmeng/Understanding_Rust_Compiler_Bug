{"sha": "56411443f2421e6726413c212a697a45d45ddfa1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2NDExNDQzZjI0MjFlNjcyNjQxM2MyMTJhNjk3YTQ1ZDQ1ZGRmYTE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-04-24T23:27:07Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-05-05T22:51:48Z"}, "message": "Use diagnostics for trace_macro instead of println", "tree": {"sha": "a640e20d31181af77f9f7f3a5ba6fa70475ce84b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a640e20d31181af77f9f7f3a5ba6fa70475ce84b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56411443f2421e6726413c212a697a45d45ddfa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56411443f2421e6726413c212a697a45d45ddfa1", "html_url": "https://github.com/rust-lang/rust/commit/56411443f2421e6726413c212a697a45d45ddfa1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56411443f2421e6726413c212a697a45d45ddfa1/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96e2c34286099eea4f51daaadbb82a8fbe99e0f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/96e2c34286099eea4f51daaadbb82a8fbe99e0f6", "html_url": "https://github.com/rust-lang/rust/commit/96e2c34286099eea4f51daaadbb82a8fbe99e0f6"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "06aafa05052944276cab9bd93c2b471cb71c3758", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/56411443f2421e6726413c212a697a45d45ddfa1/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56411443f2421e6726413c212a697a45d45ddfa1/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=56411443f2421e6726413c212a697a45d45ddfa1", "patch": "@@ -388,6 +388,12 @@ impl Handler {\n     pub fn span_note_without_error<S: Into<MultiSpan>>(&self, sp: S, msg: &str) {\n         self.emit(&sp.into(), msg, Note);\n     }\n+    pub fn span_label_without_error(&self, sp: Span, msg: &str, lbl: &str) {\n+        let mut db = DiagnosticBuilder::new(self, Note, msg);\n+        db.set_span(sp);\n+        db.span_label(sp, &lbl);\n+        db.emit();\n+    }\n     pub fn span_unimpl<S: Into<MultiSpan>>(&self, sp: S, msg: &str) -> ! {\n         self.span_bug(sp, &format!(\"unimplemented {}\", msg));\n     }"}, {"sha": "3bfa63a022d088d4c070a57e704143d6b33f06c5", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/56411443f2421e6726413c212a697a45d45ddfa1/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56411443f2421e6726413c212a697a45d45ddfa1/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=56411443f2421e6726413c212a697a45d45ddfa1", "patch": "@@ -765,6 +765,9 @@ impl<'a> ExtCtxt<'a> {\n     pub fn span_bug(&self, sp: Span, msg: &str) -> ! {\n         self.parse_sess.span_diagnostic.span_bug(sp, msg);\n     }\n+    pub fn span_label_without_error(&self, sp: Span, msg: &str, label: &str) {\n+        self.parse_sess.span_diagnostic.span_label_without_error(sp, msg, label);\n+    }\n     pub fn bug(&self, msg: &str) -> ! {\n         self.parse_sess.span_diagnostic.bug(msg);\n     }"}, {"sha": "46c49ffb24c45db10ffe220145e55ace45225251", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56411443f2421e6726413c212a697a45d45ddfa1/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56411443f2421e6726413c212a697a45d45ddfa1/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=56411443f2421e6726413c212a697a45d45ddfa1", "patch": "@@ -93,7 +93,9 @@ fn generic_extension<'cx>(cx: &'cx ExtCtxt,\n                           rhses: &[quoted::TokenTree])\n                           -> Box<MacResult+'cx> {\n     if cx.trace_macros() {\n-        println!(\"{}! {{ {} }}\", name, arg);\n+        cx.span_label_without_error(sp,\n+                                    &\"trace_macro\",\n+                                    &format!(\"expands to `{}! {{ {} }}`\", name, arg));\n     }\n \n     // Which arm's failure should we report? (the one furthest along)"}, {"sha": "3338e394e0ef9005687b3a785cb9b0c95077dfd8", "filename": "src/test/run-make/trace-macros-flag/Makefile", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/96e2c34286099eea4f51daaadbb82a8fbe99e0f6/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/96e2c34286099eea4f51daaadbb82a8fbe99e0f6/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2FMakefile?ref=96e2c34286099eea4f51daaadbb82a8fbe99e0f6", "patch": "@@ -1,9 +0,0 @@\n-# This test verifies that \"-Z trace-macros\"  works as it should. The traditional\n-# \"hello world\" program provides a small example of this as not only println! is\n-# listed, but also print! (since println! expands to this)\n-\n--include ../tools.mk\n-\n-all:\n-\t$(RUSTC) -Z trace-macros hello.rs > $(TMPDIR)/hello.out\n-\tdiff -u $(TMPDIR)/hello.out hello.trace"}, {"sha": "cf733339eadf63ace80afc5d60b768188bf265ed", "filename": "src/test/run-make/trace-macros-flag/hello.trace", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/96e2c34286099eea4f51daaadbb82a8fbe99e0f6/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2Fhello.trace", "raw_url": "https://github.com/rust-lang/rust/raw/96e2c34286099eea4f51daaadbb82a8fbe99e0f6/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2Fhello.trace", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftrace-macros-flag%2Fhello.trace?ref=96e2c34286099eea4f51daaadbb82a8fbe99e0f6", "patch": "@@ -1,2 +0,0 @@\n-println! { \"Hello, World!\" }\n-print! { concat ! ( \"Hello, World!\" , \"\\n\" ) }"}, {"sha": "42d3d4c799df89a3cb816a84f6d814351c2863bf", "filename": "src/test/ui/macros/trace-macro.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/56411443f2421e6726413c212a697a45d45ddfa1/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56411443f2421e6726413c212a697a45d45ddfa1/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.rs?ref=56411443f2421e6726413c212a697a45d45ddfa1", "previous_filename": "src/test/run-make/trace-macros-flag/hello.rs"}, {"sha": "8f091ef9455478c41a0e67620d06c9359966e728", "filename": "src/test/ui/macros/trace-macro.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/56411443f2421e6726413c212a697a45d45ddfa1/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/56411443f2421e6726413c212a697a45d45ddfa1/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr?ref=56411443f2421e6726413c212a697a45d45ddfa1", "patch": "@@ -0,0 +1,14 @@\n+note: trace_macro\n+  --> $DIR/trace-macro.rs:12:5\n+   |\n+12 |     println!(\"Hello, World!\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ expands to `println! { \"Hello, World!\" }`\n+\n+note: trace_macro\n+  --> $DIR/trace-macro.rs:12:5\n+   |\n+12 |     println!(\"Hello, World!\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ expands to `print! { concat ! ( \"Hello, World!\" , \"\\n\" ) }`\n+   |\n+   = note: this error originates in a macro outside of the current crate\n+"}]}