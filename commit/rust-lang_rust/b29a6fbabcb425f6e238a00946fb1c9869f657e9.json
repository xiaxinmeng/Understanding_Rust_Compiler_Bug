{"sha": "b29a6fbabcb425f6e238a00946fb1c9869f657e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyOWE2ZmJhYmNiNDI1ZjZlMjM4YTAwOTQ2ZmIxYzk4NjlmNjU3ZTk=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-10T18:52:29Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-10T18:52:29Z"}, "message": "Add missing `dyn` for cloudabi, redox, unix and wasm", "tree": {"sha": "f359e96f7ee8358da2e54d68c1d18a947471e8d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f359e96f7ee8358da2e54d68c1d18a947471e8d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b29a6fbabcb425f6e238a00946fb1c9869f657e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b29a6fbabcb425f6e238a00946fb1c9869f657e9", "html_url": "https://github.com/rust-lang/rust/commit/b29a6fbabcb425f6e238a00946fb1c9869f657e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b29a6fbabcb425f6e238a00946fb1c9869f657e9/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "560d8079ec26f2a45ecb80e95d24917025e02104", "url": "https://api.github.com/repos/rust-lang/rust/commits/560d8079ec26f2a45ecb80e95d24917025e02104", "html_url": "https://github.com/rust-lang/rust/commit/560d8079ec26f2a45ecb80e95d24917025e02104"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "8cca47efd22d19bb4e152f79da603410926e1a58", "filename": "src/libstd/sys/cloudabi/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b29a6fbabcb425f6e238a00946fb1c9869f657e9/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b29a6fbabcb425f6e238a00946fb1c9869f657e9/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs?ref=b29a6fbabcb425f6e238a00946fb1c9869f657e9", "patch": "@@ -32,7 +32,7 @@ unsafe impl Send for Thread {}\n unsafe impl Sync for Thread {}\n \n impl Thread {\n-    pub unsafe fn new<'a>(stack: usize, p: Box<FnBox() + 'a>) -> io::Result<Thread> {\n+    pub unsafe fn new<'a>(stack: usize, p: Box<dyn FnBox() + 'a>) -> io::Result<Thread> {\n         let p = box p;\n         let mut native: libc::pthread_t = mem::zeroed();\n         let mut attr: libc::pthread_attr_t = mem::zeroed();"}, {"sha": "f4177087d77a1e24cd68dc06f0f5e52fa6332583", "filename": "src/libstd/sys/redox/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b29a6fbabcb425f6e238a00946fb1c9869f657e9/src%2Flibstd%2Fsys%2Fredox%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b29a6fbabcb425f6e238a00946fb1c9869f657e9/src%2Flibstd%2Fsys%2Fredox%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fthread.rs?ref=b29a6fbabcb425f6e238a00946fb1c9869f657e9", "patch": "@@ -28,7 +28,7 @@ unsafe impl Send for Thread {}\n unsafe impl Sync for Thread {}\n \n impl Thread {\n-    pub unsafe fn new<'a>(_stack: usize, p: Box<FnBox() + 'a>) -> io::Result<Thread> {\n+    pub unsafe fn new<'a>(_stack: usize, p: Box<dyn FnBox() + 'a>) -> io::Result<Thread> {\n         let p = box p;\n \n         let id = cvt(syscall::clone(syscall::CLONE_VM | syscall::CLONE_FS | syscall::CLONE_FILES))?;"}, {"sha": "77f125f3c5b569b2b9597592f09a53a116149cd9", "filename": "src/libstd/sys/unix/process/process_common.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b29a6fbabcb425f6e238a00946fb1c9869f657e9/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b29a6fbabcb425f6e238a00946fb1c9869f657e9/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs?ref=b29a6fbabcb425f6e238a00946fb1c9869f657e9", "patch": "@@ -52,7 +52,7 @@ pub struct Command {\n     uid: Option<uid_t>,\n     gid: Option<gid_t>,\n     saw_nul: bool,\n-    closures: Vec<Box<FnMut() -> io::Result<()> + Send + Sync>>,\n+    closures: Vec<Box<dyn FnMut() -> io::Result<()> + Send + Sync>>,\n     stdin: Option<Stdio>,\n     stdout: Option<Stdio>,\n     stderr: Option<Stdio>,\n@@ -155,12 +155,12 @@ impl Command {\n         self.gid\n     }\n \n-    pub fn get_closures(&mut self) -> &mut Vec<Box<FnMut() -> io::Result<()> + Send + Sync>> {\n+    pub fn get_closures(&mut self) -> &mut Vec<Box<dyn FnMut() -> io::Result<()> + Send + Sync>> {\n         &mut self.closures\n     }\n \n     pub fn before_exec(&mut self,\n-                       f: Box<FnMut() -> io::Result<()> + Send + Sync>) {\n+                       f: Box<dyn FnMut() -> io::Result<()> + Send + Sync>) {\n         self.closures.push(f);\n     }\n "}, {"sha": "e26306c045d310aa6b9cd99d685ed6b1c6594623", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b29a6fbabcb425f6e238a00946fb1c9869f657e9/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b29a6fbabcb425f6e238a00946fb1c9869f657e9/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=b29a6fbabcb425f6e238a00946fb1c9869f657e9", "patch": "@@ -49,7 +49,7 @@ unsafe fn pthread_attr_setstacksize(_attr: *mut libc::pthread_attr_t,\n }\n \n impl Thread {\n-    pub unsafe fn new<'a>(stack: usize, p: Box<FnBox() + 'a>)\n+    pub unsafe fn new<'a>(stack: usize, p: Box<dyn FnBox() + 'a>)\n                           -> io::Result<Thread> {\n         let p = box p;\n         let mut native: libc::pthread_t = mem::zeroed();"}, {"sha": "8173a62421117d4bb11b034a1bcee3978458a84c", "filename": "src/libstd/sys/wasm/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b29a6fbabcb425f6e238a00946fb1c9869f657e9/src%2Flibstd%2Fsys%2Fwasm%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b29a6fbabcb425f6e238a00946fb1c9869f657e9/src%2Flibstd%2Fsys%2Fwasm%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasm%2Fthread.rs?ref=b29a6fbabcb425f6e238a00946fb1c9869f657e9", "patch": "@@ -19,7 +19,7 @@ pub struct Thread(Void);\n pub const DEFAULT_MIN_STACK_SIZE: usize = 4096;\n \n impl Thread {\n-    pub unsafe fn new<'a>(_stack: usize, _p: Box<FnBox() + 'a>)\n+    pub unsafe fn new<'a>(_stack: usize, _p: Box<dyn FnBox() + 'a>)\n         -> io::Result<Thread>\n     {\n         unsupported()"}]}