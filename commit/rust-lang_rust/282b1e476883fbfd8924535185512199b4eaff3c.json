{"sha": "282b1e476883fbfd8924535185512199b4eaff3c", "node_id": "C_kwDOAAsO6NoAKDI4MmIxZTQ3Njg4M2ZiZmQ4OTI0NTM1MTg1NTEyMTk5YjRlYWZmM2M", "commit": {"author": {"name": "Tuna", "email": "dvt.tnhn.krlbs@icloud.com", "date": "2022-09-14T23:17:05Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-09-14T23:26:59Z"}, "message": "Distribute bootstrap in CI artifacts\n\n- Add a new `bootstrap` component\n\nOriginally, we planned to combine this with the `rust-dev` component.\nHowever, I realized that would force LLVM to be redownloaded whenever bootstrap is modified.\nLLVM is a much larger download, so split this to get better caching.\n\n- Build bootstrap for all tier 1 and 2 targets", "tree": {"sha": "873878e8bcb50cd1af88c79b77e89c87884f922c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/873878e8bcb50cd1af88c79b77e89c87884f922c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/282b1e476883fbfd8924535185512199b4eaff3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/282b1e476883fbfd8924535185512199b4eaff3c", "html_url": "https://github.com/rust-lang/rust/commit/282b1e476883fbfd8924535185512199b4eaff3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/282b1e476883fbfd8924535185512199b4eaff3c/comments", "author": {"login": "dvtkrlbs", "id": 24792168, "node_id": "MDQ6VXNlcjI0NzkyMTY4", "avatar_url": "https://avatars.githubusercontent.com/u/24792168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvtkrlbs", "html_url": "https://github.com/dvtkrlbs", "followers_url": "https://api.github.com/users/dvtkrlbs/followers", "following_url": "https://api.github.com/users/dvtkrlbs/following{/other_user}", "gists_url": "https://api.github.com/users/dvtkrlbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvtkrlbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvtkrlbs/subscriptions", "organizations_url": "https://api.github.com/users/dvtkrlbs/orgs", "repos_url": "https://api.github.com/users/dvtkrlbs/repos", "events_url": "https://api.github.com/users/dvtkrlbs/events{/privacy}", "received_events_url": "https://api.github.com/users/dvtkrlbs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f0c4a6c5c36f1f8f433a12e10a29918f3d40a31", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0c4a6c5c36f1f8f433a12e10a29918f3d40a31", "html_url": "https://github.com/rust-lang/rust/commit/6f0c4a6c5c36f1f8f433a12e10a29918f3d40a31"}], "stats": {"total": 78, "additions": 57, "deletions": 21}, "files": [{"sha": "5e458c5a987690f61f1cfd01f8c2fc1468f817d5", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/282b1e476883fbfd8924535185512199b4eaff3c/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/282b1e476883fbfd8924535185512199b4eaff3c/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=282b1e476883fbfd8924535185512199b4eaff3c", "patch": "@@ -291,7 +291,7 @@ jobs:\n             os: ubuntu-20.04-xl\n           - name: dist-x86_64-apple\n             env:\n-              SCRIPT: \"./x.py dist --host=x86_64-apple-darwin --target=x86_64-apple-darwin\"\n+              SCRIPT: \"./x.py dist bootstrap --include-default-paths --host=x86_64-apple-darwin --target=x86_64-apple-darwin\"\n               RUST_CONFIGURE_ARGS: \"--enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\"\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.7\n@@ -302,7 +302,7 @@ jobs:\n             os: macos-latest\n           - name: dist-apple-various\n             env:\n-              SCRIPT: \"./x.py dist --host='' --target=aarch64-apple-ios,x86_64-apple-ios,aarch64-apple-ios-sim\"\n+              SCRIPT: \"./x.py dist bootstrap --include-default-paths --host='' --target=aarch64-apple-ios,x86_64-apple-ios,aarch64-apple-ios-sim\"\n               RUST_CONFIGURE_ARGS: \"--enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\"\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.7\n@@ -312,7 +312,7 @@ jobs:\n             os: macos-latest\n           - name: dist-x86_64-apple-alt\n             env:\n-              SCRIPT: \"./x.py dist\"\n+              SCRIPT: \"./x.py dist bootstrap --include-default-paths\"\n               RUST_CONFIGURE_ARGS: \"--enable-extended --enable-profiler --set rust.jemalloc --set llvm.ninja=false\"\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.7\n@@ -344,7 +344,7 @@ jobs:\n             os: macos-latest\n           - name: dist-aarch64-apple\n             env:\n-              SCRIPT: \"./x.py dist --stage 2\"\n+              SCRIPT: \"./x.py dist bootstrap --include-default-paths --stage 2\"\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-apple-darwin --host=aarch64-apple-darwin --target=aarch64-apple-darwin --enable-full-tools --enable-sanitizers --enable-profiler --disable-docs --set rust.jemalloc --set llvm.ninja=false\"\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               USE_XCODE_CLANG: 1\n@@ -418,33 +418,33 @@ jobs:\n           - name: dist-x86_64-msvc\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-msvc --host=x86_64-pc-windows-msvc --target=x86_64-pc-windows-msvc --enable-full-tools --enable-profiler\"\n-              SCRIPT: PGO_HOST=x86_64-pc-windows-msvc src/ci/pgo.sh python x.py dist\n+              SCRIPT: PGO_HOST=x86_64-pc-windows-msvc src/ci/pgo.sh python x.py dist bootstrap --include-default-paths\n               DIST_REQUIRE_ALL_TOOLS: 1\n             os: windows-latest-xl\n           - name: dist-i686-msvc\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=i686-pc-windows-msvc --host=i686-pc-windows-msvc --target=i686-pc-windows-msvc,i586-pc-windows-msvc --enable-full-tools --enable-profiler\"\n-              SCRIPT: python x.py dist\n+              SCRIPT: python x.py dist bootstrap --include-default-paths\n               DIST_REQUIRE_ALL_TOOLS: 1\n             os: windows-latest-xl\n           - name: dist-aarch64-msvc\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-msvc --host=aarch64-pc-windows-msvc --enable-full-tools --enable-profiler\"\n-              SCRIPT: python x.py dist\n+              SCRIPT: python x.py dist bootstrap --include-default-paths\n               DIST_REQUIRE_ALL_TOOLS: 1\n               WINDOWS_SDK_20348_HACK: 1\n             os: windows-latest-xl\n           - name: dist-i686-mingw\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=i686-pc-windows-gnu --enable-full-tools --enable-profiler --set llvm.allow-old-toolchain\"\n               NO_DOWNLOAD_CI_LLVM: 1\n-              SCRIPT: python x.py dist\n+              SCRIPT: python x.py dist bootstrap --include-default-paths\n               CUSTOM_MINGW: 1\n               DIST_REQUIRE_ALL_TOOLS: 1\n             os: windows-latest-xl\n           - name: dist-x86_64-mingw\n             env:\n-              SCRIPT: python x.py dist\n+              SCRIPT: python x.py dist bootstrap --include-default-paths\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-gnu --enable-full-tools --enable-profiler --set llvm.allow-old-toolchain\"\n               NO_DOWNLOAD_CI_LLVM: 1\n               CUSTOM_MINGW: 1\n@@ -453,7 +453,7 @@ jobs:\n           - name: dist-x86_64-msvc-alt\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-msvc --enable-extended --enable-profiler\"\n-              SCRIPT: python x.py dist\n+              SCRIPT: python x.py dist bootstrap --include-default-paths\n             os: windows-latest-xl\n     timeout-minutes: 600\n     runs-on: \"${{ matrix.os }}\""}, {"sha": "8ec64657f47dd58e985ef5cbfe83fd7426bc5497", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/282b1e476883fbfd8924535185512199b4eaff3c/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/282b1e476883fbfd8924535185512199b4eaff3c/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=282b1e476883fbfd8924535185512199b4eaff3c", "patch": "@@ -723,6 +723,7 @@ impl<'a> Builder<'a> {\n                 dist::Miri,\n                 dist::LlvmTools,\n                 dist::RustDev,\n+                dist::Bootstrap,\n                 dist::Extended,\n                 // It seems that PlainSourceTarball somehow changes how some of the tools\n                 // perceive their dependencies (see #93033) which would invalidate fingerprints"}, {"sha": "679f017c77062d8d0fd28f3c040229044c8a57aa", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/282b1e476883fbfd8924535185512199b4eaff3c/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/282b1e476883fbfd8924535185512199b4eaff3c/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=282b1e476883fbfd8924535185512199b4eaff3c", "patch": "@@ -2050,6 +2050,41 @@ impl Step for RustDev {\n     }\n }\n \n+// Tarball intended for internal consumption to ease rustc/std development.\n+//\n+// Should not be considered stable by end users.\n+#[derive(Clone, Debug, Eq, Hash, PartialEq)]\n+pub struct Bootstrap {\n+    pub target: TargetSelection,\n+}\n+\n+impl Step for Bootstrap {\n+    type Output = Option<GeneratedTarball>;\n+    const DEFAULT: bool = false;\n+    const ONLY_HOSTS: bool = true;\n+\n+    fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n+        run.alias(\"bootstrap\")\n+    }\n+\n+    fn make_run(run: RunConfig<'_>) {\n+        run.builder.ensure(Bootstrap { target: run.target });\n+    }\n+\n+    fn run(self, builder: &Builder<'_>) -> Option<GeneratedTarball> {\n+        let target = self.target;\n+\n+        let tarball = Tarball::new(builder, \"bootstrap\", &target.triple);\n+\n+        let bootstrap_outdir = &builder.bootstrap_out;\n+        for file in &[\"bootstrap\", \"llvm-config-wrapper\", \"rustc\", \"rustdoc\", \"sccache-plus-cl\"] {\n+            tarball.add_file(bootstrap_outdir.join(file), \"bootstrap/bin\", 0o755);\n+        }\n+\n+        Some(tarball.generate())\n+    }\n+}\n+\n /// Tarball containing a prebuilt version of the build-manifest tool, intended to be used by the\n /// release process to avoid cloning the monorepo and building stuff.\n ///"}, {"sha": "b960239807af80013b1ad3fdacfd4e453fb6eb18", "filename": "src/ci/docker/host-x86_64/dist-x86_64-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/282b1e476883fbfd8924535185512199b4eaff3c/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/282b1e476883fbfd8924535185512199b4eaff3c/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-x86_64-linux%2FDockerfile?ref=282b1e476883fbfd8924535185512199b4eaff3c", "patch": "@@ -82,7 +82,7 @@ ENV RUST_CONFIGURE_ARGS \\\n ENV SCRIPT ../src/ci/pgo.sh python3 ../x.py dist \\\n     --host $HOSTS --target $HOSTS \\\n     --include-default-paths \\\n-    build-manifest\n+    build-manifest bootstrap\n ENV CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER=clang\n \n # This is the only builder which will create source tarballs"}, {"sha": "6056e722362a38f88c69fe759d243b1ef9dffe0c", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/282b1e476883fbfd8924535185512199b4eaff3c/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/282b1e476883fbfd8924535185512199b4eaff3c/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=282b1e476883fbfd8924535185512199b4eaff3c", "patch": "@@ -455,7 +455,7 @@ jobs:\n \n           - name: dist-x86_64-apple\n             env:\n-              SCRIPT: ./x.py dist --host=x86_64-apple-darwin --target=x86_64-apple-darwin\n+              SCRIPT: ./x.py dist bootstrap --include-default-paths --host=x86_64-apple-darwin --target=x86_64-apple-darwin\n               RUST_CONFIGURE_ARGS: --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.7\n@@ -467,7 +467,7 @@ jobs:\n \n           - name: dist-apple-various\n             env:\n-              SCRIPT: ./x.py dist --host='' --target=aarch64-apple-ios,x86_64-apple-ios,aarch64-apple-ios-sim\n+              SCRIPT: ./x.py dist bootstrap --include-default-paths --host='' --target=aarch64-apple-ios,x86_64-apple-ios,aarch64-apple-ios-sim\n               RUST_CONFIGURE_ARGS: --enable-sanitizers --enable-profiler --set rust.jemalloc --set llvm.ninja=false\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.7\n@@ -478,7 +478,7 @@ jobs:\n \n           - name: dist-x86_64-apple-alt\n             env:\n-              SCRIPT: ./x.py dist\n+              SCRIPT: ./x.py dist bootstrap --include-default-paths\n               RUST_CONFIGURE_ARGS: --enable-extended --enable-profiler --set rust.jemalloc --set llvm.ninja=false\n               RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n               MACOSX_DEPLOYMENT_TARGET: 10.7\n@@ -508,7 +508,7 @@ jobs:\n           # This target only needs to support 11.0 and up as nothing else supports the hardware\n           - name: dist-aarch64-apple\n             env:\n-              SCRIPT: ./x.py dist --stage 2\n+              SCRIPT: ./x.py dist bootstrap --include-default-paths --stage 2\n               RUST_CONFIGURE_ARGS: >-\n                 --build=x86_64-apple-darwin\n                 --host=aarch64-apple-darwin\n@@ -652,7 +652,7 @@ jobs:\n                 --target=x86_64-pc-windows-msvc\n                 --enable-full-tools\n                 --enable-profiler\n-              SCRIPT: PGO_HOST=x86_64-pc-windows-msvc src/ci/pgo.sh python x.py dist\n+              SCRIPT: PGO_HOST=x86_64-pc-windows-msvc src/ci/pgo.sh python x.py dist bootstrap --include-default-paths\n               DIST_REQUIRE_ALL_TOOLS: 1\n             <<: *job-windows-xl\n \n@@ -664,7 +664,7 @@ jobs:\n                 --target=i686-pc-windows-msvc,i586-pc-windows-msvc\n                 --enable-full-tools\n                 --enable-profiler\n-              SCRIPT: python x.py dist\n+              SCRIPT: python x.py dist bootstrap --include-default-paths\n               DIST_REQUIRE_ALL_TOOLS: 1\n             <<: *job-windows-xl\n \n@@ -675,7 +675,7 @@ jobs:\n                 --host=aarch64-pc-windows-msvc\n                 --enable-full-tools\n                 --enable-profiler\n-              SCRIPT: python x.py dist\n+              SCRIPT: python x.py dist bootstrap --include-default-paths\n               DIST_REQUIRE_ALL_TOOLS: 1\n               # Hack around this SDK version, because it doesn't work with clang.\n               # See https://github.com/rust-lang/rust/issues/88796\n@@ -692,14 +692,14 @@ jobs:\n               # We are intentionally allowing an old toolchain on this builder (and that's\n               # incompatible with LLVM downloads today).\n               NO_DOWNLOAD_CI_LLVM: 1\n-              SCRIPT: python x.py dist\n+              SCRIPT: python x.py dist bootstrap --include-default-paths\n               CUSTOM_MINGW: 1\n               DIST_REQUIRE_ALL_TOOLS: 1\n             <<: *job-windows-xl\n \n           - name: dist-x86_64-mingw\n             env:\n-              SCRIPT: python x.py dist\n+              SCRIPT: python x.py dist bootstrap --include-default-paths\n               RUST_CONFIGURE_ARGS: >-\n                 --build=x86_64-pc-windows-gnu\n                 --enable-full-tools\n@@ -715,7 +715,7 @@ jobs:\n           - name: dist-x86_64-msvc-alt\n             env:\n               RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-extended --enable-profiler\n-              SCRIPT: python x.py dist\n+              SCRIPT: python x.py dist bootstrap --include-default-paths\n             <<: *job-windows-xl\n \n   try:"}]}