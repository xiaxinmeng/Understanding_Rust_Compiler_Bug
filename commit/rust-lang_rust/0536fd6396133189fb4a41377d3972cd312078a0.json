{"sha": "0536fd6396133189fb4a41377d3972cd312078a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1MzZmZDYzOTYxMzMxODlmYjRhNDEzNzdkMzk3MmNkMzEyMDc4YTA=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-03-02T19:53:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-02T19:53:44Z"}, "message": "Rollup merge of #40117 - SimonSapin:to-err-is-for-the-formatter, r=alexcrichton\n\nPanic on errors in `format!` or `<T: Display>::to_string`\n\n\u2026 instead of silently ignoring a result.\n\n`fmt::Write for String` never returns `Err`, so implementations of `Display` (or other traits of that family) never should either.\n\nFixes #40103", "tree": {"sha": "7d4aa4ac6b26a96ee2817015ea498d5253dc84b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d4aa4ac6b26a96ee2817015ea498d5253dc84b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0536fd6396133189fb4a41377d3972cd312078a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0536fd6396133189fb4a41377d3972cd312078a0", "html_url": "https://github.com/rust-lang/rust/commit/0536fd6396133189fb4a41377d3972cd312078a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0536fd6396133189fb4a41377d3972cd312078a0/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aef07cd991d9b014e74684416ac032f6531cb93c", "url": "https://api.github.com/repos/rust-lang/rust/commits/aef07cd991d9b014e74684416ac032f6531cb93c", "html_url": "https://github.com/rust-lang/rust/commit/aef07cd991d9b014e74684416ac032f6531cb93c"}, {"sha": "f2017f4561852bf65c39fc498cf035a5f385a065", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2017f4561852bf65c39fc498cf035a5f385a065", "html_url": "https://github.com/rust-lang/rust/commit/f2017f4561852bf65c39fc498cf035a5f385a065"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "dfd292176d2f9c9bd67445291b3c68d7dad9a23e", "filename": "src/libcollections/fmt.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0536fd6396133189fb4a41377d3972cd312078a0/src%2Flibcollections%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0536fd6396133189fb4a41377d3972cd312078a0/src%2Flibcollections%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ffmt.rs?ref=0536fd6396133189fb4a41377d3972cd312078a0", "patch": "@@ -524,6 +524,7 @@ use string;\n pub fn format(args: Arguments) -> string::String {\n     let capacity = args.estimated_capacity();\n     let mut output = string::String::with_capacity(capacity);\n-    let _ = output.write_fmt(args);\n+    output.write_fmt(args)\n+          .expect(\"a formatting trait implementation returned an error\");\n     output\n }"}, {"sha": "396a917dfde261f87ba8823e17c533f2d0f8f660", "filename": "src/libcollections/macros.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0536fd6396133189fb4a41377d3972cd312078a0/src%2Flibcollections%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0536fd6396133189fb4a41377d3972cd312078a0/src%2Flibcollections%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fmacros.rs?ref=0536fd6396133189fb4a41377d3972cd312078a0", "patch": "@@ -72,6 +72,12 @@ macro_rules! vec {\n ///\n /// [fmt]: ../std/fmt/index.html\n ///\n+/// # Panics\n+///\n+/// `format!` panics if a formatting trait implementation returns an error.\n+/// This indicates an incorrect implementation\n+/// since `fmt::Write for String` never returns an error itself.\n+///\n /// # Examples\n ///\n /// ```"}, {"sha": "f2e4be49684a91af99a761ee4305bc7f9d4a2fd5", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0536fd6396133189fb4a41377d3972cd312078a0/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0536fd6396133189fb4a41377d3972cd312078a0/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=0536fd6396133189fb4a41377d3972cd312078a0", "patch": "@@ -1900,13 +1900,20 @@ pub trait ToString {\n     fn to_string(&self) -> String;\n }\n \n+/// # Panics\n+///\n+/// In this implementation, the `to_string` method panics\n+/// if the `Display` implementation returns an error.\n+/// This indicates an incorrect `Display` implementation\n+/// since `fmt::Write for String` never returns an error itself.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: fmt::Display + ?Sized> ToString for T {\n     #[inline]\n     default fn to_string(&self) -> String {\n         use core::fmt::Write;\n         let mut buf = String::new();\n-        let _ = buf.write_fmt(format_args!(\"{}\", self));\n+        buf.write_fmt(format_args!(\"{}\", self))\n+           .expect(\"a Display implementation return an error unexpectedly\");\n         buf.shrink_to_fit();\n         buf\n     }"}]}