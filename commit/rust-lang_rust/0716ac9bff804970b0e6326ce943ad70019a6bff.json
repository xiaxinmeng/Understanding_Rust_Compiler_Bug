{"sha": "0716ac9bff804970b0e6326ce943ad70019a6bff", "node_id": "C_kwDOAAsO6NoAKDA3MTZhYzliZmY4MDQ5NzBiMGU2MzI2Y2U5NDNhZDcwMDE5YTZiZmY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-04T17:41:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-04T17:41:16Z"}, "message": "Rollup merge of #112277 - jyn514:non-utf8-tests, r=ozkanonur\n\nDon't require the output from libtest to be valid UTF-8\n\nOn Windows this is sometimes not the case, for reasons I can't track down (maybe related to localization? the bug report had a french locale).\n\nThis works around the problem, although I'm not sure how to confirm we're not generating invalid build metrics in this case.\n\nFixes https://github.com/rust-lang/rust/issues/112273.", "tree": {"sha": "f009d1b711e9cc91d08f0e013eac65da09e089bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f009d1b711e9cc91d08f0e013eac65da09e089bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0716ac9bff804970b0e6326ce943ad70019a6bff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkfMy8CRBK7hj4Ov3rIwAANT4IAG+iq+k+BnzhVteC86j4vHGJ\n0mqOgUBHTCG0brVVbDZdt2ll8v7RspJ31fTI5vxoaPE8tC+bv6NiTMeB5OQRHD5L\nd1TNTrIQGbxEmINb3bD12Vt0Pc+7pcGUB5+GncmsklqjAtvfNJoX/aAng6dPz7Rk\nq0mHwfTGGdEmbo8RFZnp3zrZCoyCcRa2HwJ6wFZmfExR5pOVMK2hqiKFAUlXugXV\necFf6i3KKC/ynGmG9elyEVar86yOzUXgJoSaSdyGHLCEYkB6gA/fTOmWNvd+51Na\nF/ebT1Ry9fPsWeO7d0GPPfEvpfU+CO41L3PIboY34O0fD2HPhIHRsjNWBjKmX8s=\n=bWD+\n-----END PGP SIGNATURE-----\n", "payload": "tree f009d1b711e9cc91d08f0e013eac65da09e089bc\nparent 97b702fda918a0d1f5314ea50b621097b884fb06\nparent f9a81e476992b8c1a7e9b67cf8a943a0ff03b978\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1685900476 +0200\ncommitter GitHub <noreply@github.com> 1685900476 +0200\n\nRollup merge of #112277 - jyn514:non-utf8-tests, r=ozkanonur\n\nDon't require the output from libtest to be valid UTF-8\n\nOn Windows this is sometimes not the case, for reasons I can't track down (maybe related to localization? the bug report had a french locale).\n\nThis works around the problem, although I'm not sure how to confirm we're not generating invalid build metrics in this case.\n\nFixes https://github.com/rust-lang/rust/issues/112273.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0716ac9bff804970b0e6326ce943ad70019a6bff", "html_url": "https://github.com/rust-lang/rust/commit/0716ac9bff804970b0e6326ce943ad70019a6bff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0716ac9bff804970b0e6326ce943ad70019a6bff/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97b702fda918a0d1f5314ea50b621097b884fb06", "url": "https://api.github.com/repos/rust-lang/rust/commits/97b702fda918a0d1f5314ea50b621097b884fb06", "html_url": "https://github.com/rust-lang/rust/commit/97b702fda918a0d1f5314ea50b621097b884fb06"}, {"sha": "f9a81e476992b8c1a7e9b67cf8a943a0ff03b978", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9a81e476992b8c1a7e9b67cf8a943a0ff03b978", "html_url": "https://github.com/rust-lang/rust/commit/f9a81e476992b8c1a7e9b67cf8a943a0ff03b978"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "06ab820953d0817f1021b1495f9e99af51daac30", "filename": "src/bootstrap/render_tests.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0716ac9bff804970b0e6326ce943ad70019a6bff/src%2Fbootstrap%2Frender_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0716ac9bff804970b0e6326ce943ad70019a6bff/src%2Fbootstrap%2Frender_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Frender_tests.rs?ref=0716ac9bff804970b0e6326ce943ad70019a6bff", "patch": "@@ -88,10 +88,10 @@ impl<'a> Renderer<'a> {\n     }\n \n     fn render_all(mut self) {\n-        let mut line = String::new();\n+        let mut line = Vec::new();\n         loop {\n             line.clear();\n-            match self.stdout.read_line(&mut line) {\n+            match self.stdout.read_until(b'\\n', &mut line) {\n                 Ok(_) => {}\n                 Err(err) if err.kind() == std::io::ErrorKind::UnexpectedEof => break,\n                 Err(err) => panic!(\"failed to read output of test runner: {err}\"),\n@@ -100,12 +100,13 @@ impl<'a> Renderer<'a> {\n                 break;\n             }\n \n-            match serde_json::from_str(&line) {\n+            match serde_json::from_slice(&line) {\n                 Ok(parsed) => self.render_message(parsed),\n                 Err(_err) => {\n                     // Handle non-JSON output, for example when --nocapture is passed.\n-                    print!(\"{line}\");\n-                    let _ = std::io::stdout().flush();\n+                    let mut stdout = std::io::stdout();\n+                    stdout.write_all(&line).unwrap();\n+                    let _ = stdout.flush();\n                 }\n             }\n         }"}]}