{"sha": "2d0d41ff291bfb580cf1ce2d64ed32ee0b9aa37c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkMGQ0MWZmMjkxYmZiNTgwY2YxY2UyZDY0ZWQzMmVlMGI5YWEzN2M=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-11-15T15:50:28Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-11-15T15:50:28Z"}, "message": "rustup https://github.com/rust-lang/rust/pull/55852/", "tree": {"sha": "22de3ccf88b969117118f9dbe27958c8533d4c98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22de3ccf88b969117118f9dbe27958c8533d4c98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d0d41ff291bfb580cf1ce2d64ed32ee0b9aa37c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0d41ff291bfb580cf1ce2d64ed32ee0b9aa37c", "html_url": "https://github.com/rust-lang/rust/commit/2d0d41ff291bfb580cf1ce2d64ed32ee0b9aa37c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d0d41ff291bfb580cf1ce2d64ed32ee0b9aa37c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2c9d10da581cac9eb45d2c06124bc4eba9b280a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2c9d10da581cac9eb45d2c06124bc4eba9b280a", "html_url": "https://github.com/rust-lang/rust/commit/a2c9d10da581cac9eb45d2c06124bc4eba9b280a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4973db4a5e83f5a240207ea2435ff6e39ee5f161", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d0d41ff291bfb580cf1ce2d64ed32ee0b9aa37c/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d0d41ff291bfb580cf1ce2d64ed32ee0b9aa37c/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=2d0d41ff291bfb580cf1ce2d64ed32ee0b9aa37c", "patch": "@@ -241,7 +241,7 @@ impl EarlyLintPass for MiscEarly {\n         }\n     }\n \n-    fn check_pat(&mut self, cx: &EarlyContext<'_>, pat: &Pat) {\n+    fn check_pat(&mut self, cx: &EarlyContext<'_>, pat: &Pat, _: &mut bool) {\n         if let PatKind::Struct(ref npat, ref pfields, _) = pat.node {\n             let mut wilds = 0;\n             let type_name = npat.segments"}]}