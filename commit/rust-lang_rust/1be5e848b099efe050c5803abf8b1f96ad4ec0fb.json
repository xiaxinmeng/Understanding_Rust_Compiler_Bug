{"sha": "1be5e848b099efe050c5803abf8b1f96ad4ec0fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiZTVlODQ4YjA5OWVmZTA1MGM1ODAzYWJmOGIxZjk2YWQ0ZWMwZmI=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-07-01T07:46:27Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-07-01T07:46:27Z"}, "message": "Use dynamic dispatch in AstDiagnostic", "tree": {"sha": "55ab43beaaa310eb5eeca152bf71349aab0a359b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55ab43beaaa310eb5eeca152bf71349aab0a359b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1be5e848b099efe050c5803abf8b1f96ad4ec0fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1be5e848b099efe050c5803abf8b1f96ad4ec0fb", "html_url": "https://github.com/rust-lang/rust/commit/1be5e848b099efe050c5803abf8b1f96ad4ec0fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1be5e848b099efe050c5803abf8b1f96ad4ec0fb/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30c2e714cc1677cbea40a47d7c0944c92f66b7c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/30c2e714cc1677cbea40a47d7c0944c92f66b7c9", "html_url": "https://github.com/rust-lang/rust/commit/30c2e714cc1677cbea40a47d7c0944c92f66b7c9"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "545cff9bd169ec882a4f1be1dc53dfacb627edec", "filename": "crates/ra_hir_expand/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1be5e848b099efe050c5803abf8b1f96ad4ec0fb/crates%2Fra_hir_expand%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1be5e848b099efe050c5803abf8b1f96ad4ec0fb/crates%2Fra_hir_expand%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdiagnostics.rs?ref=1be5e848b099efe050c5803abf8b1f96ad4ec0fb", "patch": "@@ -28,7 +28,7 @@ pub trait Diagnostic: Any + Send + Sync + fmt::Debug + 'static {\n \n pub trait AstDiagnostic {\n     type AST;\n-    fn ast(&self, db: &impl AstDatabase) -> Self::AST;\n+    fn ast(&self, db: &dyn AstDatabase) -> Self::AST;\n }\n \n impl dyn Diagnostic {"}, {"sha": "0289911de0d92e0a8fcab141b9b6b08a86b23754", "filename": "crates/ra_hir_ty/src/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1be5e848b099efe050c5803abf8b1f96ad4ec0fb/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1be5e848b099efe050c5803abf8b1f96ad4ec0fb/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs?ref=1be5e848b099efe050c5803abf8b1f96ad4ec0fb", "patch": "@@ -32,7 +32,7 @@ impl Diagnostic for NoSuchField {\n impl AstDiagnostic for NoSuchField {\n     type AST = ast::RecordField;\n \n-    fn ast(&self, db: &impl AstDatabase) -> Self::AST {\n+    fn ast(&self, db: &dyn AstDatabase) -> Self::AST {\n         let root = db.parse_or_expand(self.source().file_id).unwrap();\n         let node = self.source().value.to_node(&root);\n         ast::RecordField::cast(node).unwrap()\n@@ -65,7 +65,7 @@ impl Diagnostic for MissingFields {\n impl AstDiagnostic for MissingFields {\n     type AST = ast::RecordFieldList;\n \n-    fn ast(&self, db: &impl AstDatabase) -> Self::AST {\n+    fn ast(&self, db: &dyn AstDatabase) -> Self::AST {\n         let root = db.parse_or_expand(self.source().file_id).unwrap();\n         let node = self.source().value.to_node(&root);\n         ast::RecordFieldList::cast(node).unwrap()\n@@ -135,7 +135,7 @@ impl Diagnostic for MissingOkInTailExpr {\n impl AstDiagnostic for MissingOkInTailExpr {\n     type AST = ast::Expr;\n \n-    fn ast(&self, db: &impl AstDatabase) -> Self::AST {\n+    fn ast(&self, db: &dyn AstDatabase) -> Self::AST {\n         let root = db.parse_or_expand(self.file).unwrap();\n         let node = self.source().value.to_node(&root);\n         ast::Expr::cast(node).unwrap()\n@@ -163,7 +163,7 @@ impl Diagnostic for BreakOutsideOfLoop {\n impl AstDiagnostic for BreakOutsideOfLoop {\n     type AST = ast::Expr;\n \n-    fn ast(&self, db: &impl AstDatabase) -> Self::AST {\n+    fn ast(&self, db: &dyn AstDatabase) -> Self::AST {\n         let root = db.parse_or_expand(self.file).unwrap();\n         let node = self.source().value.to_node(&root);\n         ast::Expr::cast(node).unwrap()\n@@ -191,7 +191,7 @@ impl Diagnostic for MissingUnsafe {\n impl AstDiagnostic for MissingUnsafe {\n     type AST = ast::Expr;\n \n-    fn ast(&self, db: &impl AstDatabase) -> Self::AST {\n+    fn ast(&self, db: &dyn AstDatabase) -> Self::AST {\n         let root = db.parse_or_expand(self.source().file_id).unwrap();\n         let node = self.source().value.to_node(&root);\n         ast::Expr::cast(node).unwrap()"}]}