{"sha": "b2db97347bc4373deea24eb7b7c6ecffb117fd8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyZGI5NzM0N2JjNDM3M2RlZWEyNGViN2I3YzZlY2ZmYjExN2ZkOGM=", "commit": {"author": {"name": "Raph Levien", "email": "raph@google.com", "date": "2016-04-10T00:11:20Z"}, "committer": {"name": "Raph Levien", "email": "raph@google.com", "date": "2016-04-10T00:16:54Z"}, "message": "Bit-magic for faster is_char_boundary\n\nThe asm generated for b < 128 || b >= 192 is not ideal, as it computes\nboth sub-inequalities. This patch replaces it with bit magic.\n\nFixes #32471", "tree": {"sha": "b56edebcd2012961de7fa7ecb829bb4c5afd2869", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b56edebcd2012961de7fa7ecb829bb4c5afd2869"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2db97347bc4373deea24eb7b7c6ecffb117fd8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2db97347bc4373deea24eb7b7c6ecffb117fd8c", "html_url": "https://github.com/rust-lang/rust/commit/b2db97347bc4373deea24eb7b7c6ecffb117fd8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2db97347bc4373deea24eb7b7c6ecffb117fd8c/comments", "author": {"login": "raphlinus", "id": 242367, "node_id": "MDQ6VXNlcjI0MjM2Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/242367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raphlinus", "html_url": "https://github.com/raphlinus", "followers_url": "https://api.github.com/users/raphlinus/followers", "following_url": "https://api.github.com/users/raphlinus/following{/other_user}", "gists_url": "https://api.github.com/users/raphlinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/raphlinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raphlinus/subscriptions", "organizations_url": "https://api.github.com/users/raphlinus/orgs", "repos_url": "https://api.github.com/users/raphlinus/repos", "events_url": "https://api.github.com/users/raphlinus/events{/privacy}", "received_events_url": "https://api.github.com/users/raphlinus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "raphlinus", "id": 242367, "node_id": "MDQ6VXNlcjI0MjM2Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/242367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raphlinus", "html_url": "https://github.com/raphlinus", "followers_url": "https://api.github.com/users/raphlinus/followers", "following_url": "https://api.github.com/users/raphlinus/following{/other_user}", "gists_url": "https://api.github.com/users/raphlinus/gists{/gist_id}", "starred_url": "https://api.github.com/users/raphlinus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raphlinus/subscriptions", "organizations_url": "https://api.github.com/users/raphlinus/orgs", "repos_url": "https://api.github.com/users/raphlinus/repos", "events_url": "https://api.github.com/users/raphlinus/events{/privacy}", "received_events_url": "https://api.github.com/users/raphlinus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "526f2bf5c534308193246e13ab2da8b3c0cf3cbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/526f2bf5c534308193246e13ab2da8b3c0cf3cbb", "html_url": "https://github.com/rust-lang/rust/commit/526f2bf5c534308193246e13ab2da8b3c0cf3cbb"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "f1be10da872411e80e6ffead263c559e91e89696", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b2db97347bc4373deea24eb7b7c6ecffb117fd8c/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2db97347bc4373deea24eb7b7c6ecffb117fd8c/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=b2db97347bc4373deea24eb7b7c6ecffb117fd8c", "patch": "@@ -1940,7 +1940,8 @@ impl StrExt for str {\n         if index == 0 || index == self.len() { return true; }\n         match self.as_bytes().get(index) {\n             None => false,\n-            Some(&b) => b < 128 || b >= 192,\n+            // This is bit magic equivalent to: b < 128 || b >= 192\n+            Some(&b) => (b as i8) >= -0x40,\n         }\n     }\n "}]}