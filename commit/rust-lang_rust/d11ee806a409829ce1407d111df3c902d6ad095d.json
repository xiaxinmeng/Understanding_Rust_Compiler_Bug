{"sha": "d11ee806a409829ce1407d111df3c902d6ad095d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxMWVlODA2YTQwOTgyOWNlMTQwN2QxMTFkZjNjOTAyZDZhZDA5NWQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-09-15T21:57:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-15T21:57:03Z"}, "message": "Rollup merge of #88933 - tmiasko:remove-min-align-of, r=oli-obk\n\nRemove implementation of `min_align_of` intrinsic\n\nSince #88839 `min_align_of` is lowered to AlignOf operator.", "tree": {"sha": "dd3e8d000b3f08424507db47cdd198f645fb228f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd3e8d000b3f08424507db47cdd198f645fb228f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d11ee806a409829ce1407d111df3c902d6ad095d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhQmwvCRBK7hj4Ov3rIwAApDsIAGqQ1fDtATrpa+NTJhjbgCAx\nJhxhiyA3c/S3ynrgTxeRZcRUzui31SMbtiFhZqzSMF07xW2GLwihfwd6ONuafHxb\nYBmGcOWOzloK2+g6yQhSINa/CbEw8+s66dKvQMqKTlzJuNLUuQ1pBUL7KX58lTid\nHqxF5OE7mh+TdVdgJXrq8FZN6cU9E/xeWLtLY/vtG1Qoujllp05jQIvz/WcDPdIP\n5sopg4tV+zMLPXPCbsYPILs97WXm4jpEwkbx76OqxiKO59QFnGOs8NPM7axIsZJ0\nwn+v1EwqwXy0tsIaKiInvxZbyVisUU9WgNTugK4pvyNYp/tvX6asGh1U9csYr7I=\n=6UjH\n-----END PGP SIGNATURE-----\n", "payload": "tree dd3e8d000b3f08424507db47cdd198f645fb228f\nparent cad1efae578da9b2a4d48fe2973fd8728d04515a\nparent f9b8191282da80fff41f496d4b2e8e4dcd3502ed\nauthor Manish Goregaokar <manishsmail@gmail.com> 1631743023 -0700\ncommitter GitHub <noreply@github.com> 1631743023 -0700\n\nRollup merge of #88933 - tmiasko:remove-min-align-of, r=oli-obk\n\nRemove implementation of `min_align_of` intrinsic\n\nSince #88839 `min_align_of` is lowered to AlignOf operator.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d11ee806a409829ce1407d111df3c902d6ad095d", "html_url": "https://github.com/rust-lang/rust/commit/d11ee806a409829ce1407d111df3c902d6ad095d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d11ee806a409829ce1407d111df3c902d6ad095d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cad1efae578da9b2a4d48fe2973fd8728d04515a", "url": "https://api.github.com/repos/rust-lang/rust/commits/cad1efae578da9b2a4d48fe2973fd8728d04515a", "html_url": "https://github.com/rust-lang/rust/commit/cad1efae578da9b2a4d48fe2973fd8728d04515a"}, {"sha": "f9b8191282da80fff41f496d4b2e8e4dcd3502ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9b8191282da80fff41f496d4b2e8e4dcd3502ed", "html_url": "https://github.com/rust-lang/rust/commit/f9b8191282da80fff41f496d4b2e8e4dcd3502ed"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "698742fe98ceb0e5868c2510b9cb9f4c6a955630", "filename": "compiler/rustc_const_eval/src/interpret/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d11ee806a409829ce1407d111df3c902d6ad095d/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d11ee806a409829ce1407d111df3c902d6ad095d/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs?ref=d11ee806a409829ce1407d111df3c902d6ad095d", "patch": "@@ -62,15 +62,10 @@ crate fn eval_nullary_intrinsic<'tcx>(\n             ensure_monomorphic_enough(tcx, tp_ty)?;\n             ConstValue::from_bool(tp_ty.needs_drop(tcx, param_env))\n         }\n-        sym::min_align_of | sym::pref_align_of => {\n+        sym::pref_align_of => {\n             // Correctly handles non-monomorphic calls, so there is no need for ensure_monomorphic_enough.\n             let layout = tcx.layout_of(param_env.and(tp_ty)).map_err(|e| err_inval!(Layout(e)))?;\n-            let n = match name {\n-                sym::pref_align_of => layout.align.pref.bytes(),\n-                sym::min_align_of => layout.align.abi.bytes(),\n-                _ => bug!(),\n-            };\n-            ConstValue::from_machine_usize(n, &tcx)\n+            ConstValue::from_machine_usize(layout.align.pref.bytes(), &tcx)\n         }\n         sym::type_id => {\n             ensure_monomorphic_enough(tcx, tp_ty)?;"}]}