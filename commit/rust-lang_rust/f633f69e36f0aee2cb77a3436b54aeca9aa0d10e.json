{"sha": "f633f69e36f0aee2cb77a3436b54aeca9aa0d10e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2MzNmNjllMzZmMGFlZTJjYjc3YTM0MzZiNTRhZWNhOWFhMGQxMGU=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-03-30T21:09:21Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2020-03-30T21:09:21Z"}, "message": "Do not call reserve since extend will handle it.\n\n`Take` implements `TrustedLen` so we are guaranteed that only one\nreserve call will be made.", "tree": {"sha": "4c5de31e2bf98664afb753d918e46b878afe88d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c5de31e2bf98664afb753d918e46b878afe88d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f633f69e36f0aee2cb77a3436b54aeca9aa0d10e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f633f69e36f0aee2cb77a3436b54aeca9aa0d10e", "html_url": "https://github.com/rust-lang/rust/commit/f633f69e36f0aee2cb77a3436b54aeca9aa0d10e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f633f69e36f0aee2cb77a3436b54aeca9aa0d10e/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c39725212c332bdc0914ca17947c8251b3b1e006", "url": "https://api.github.com/repos/rust-lang/rust/commits/c39725212c332bdc0914ca17947c8251b3b1e006", "html_url": "https://github.com/rust-lang/rust/commit/c39725212c332bdc0914ca17947c8251b3b1e006"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "e4ddbad42977d4554c0394faab0bfe6c47b261a9", "filename": "crates/ra_arena/src/map.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f633f69e36f0aee2cb77a3436b54aeca9aa0d10e/crates%2Fra_arena%2Fsrc%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f633f69e36f0aee2cb77a3436b54aeca9aa0d10e/crates%2Fra_arena%2Fsrc%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_arena%2Fsrc%2Fmap.rs?ref=f633f69e36f0aee2cb77a3436b54aeca9aa0d10e", "patch": "@@ -14,9 +14,6 @@ pub struct ArenaMap<ID, V> {\n impl<T, V> ArenaMap<Idx<T>, V> {\n     pub fn insert(&mut self, id: Idx<T>, t: V) {\n         let idx = Self::to_idx(id);\n-        if self.v.capacity() <= idx {\n-            self.v.reserve(idx + 1 - self.v.capacity());\n-        }\n \n         let fill = (idx + 1).saturating_sub(self.v.len());\n         self.v.extend(std::iter::repeat_with(|| None).take(fill));"}]}