{"sha": "bebd6221986764d4e98488a5a7b9730edacbc07a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYmQ2MjIxOTg2NzY0ZDRlOTg0ODhhNWE3Yjk3MzBlZGFjYmMwN2E=", "commit": {"author": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2017-07-25T03:17:51Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-09-05T16:19:35Z"}, "message": "Slightly modify hint messages.", "tree": {"sha": "ccd741b04a42fa36ab61bde1f04c2ca3d50715ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccd741b04a42fa36ab61bde1f04c2ca3d50715ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bebd6221986764d4e98488a5a7b9730edacbc07a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bebd6221986764d4e98488a5a7b9730edacbc07a", "html_url": "https://github.com/rust-lang/rust/commit/bebd6221986764d4e98488a5a7b9730edacbc07a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bebd6221986764d4e98488a5a7b9730edacbc07a/comments", "author": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d49f27826388ae62467d2111f9e82a828c3e2ea8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d49f27826388ae62467d2111f9e82a828c3e2ea8", "html_url": "https://github.com/rust-lang/rust/commit/d49f27826388ae62467d2111f9e82a828c3e2ea8"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "1c79190fd93bbaac1cc31d94f8c357c67a6e82b7", "filename": "src/librustc/traits/specialize/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bebd6221986764d4e98488a5a7b9730edacbc07a/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bebd6221986764d4e98488a5a7b9730edacbc07a/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs?ref=bebd6221986764d4e98488a5a7b9730edacbc07a", "patch": "@@ -342,11 +342,11 @@ pub(super) fn specialization_graph_provider<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx\n                 for cause in &overlap.intercrate_ambiguity_causes {\n                     match cause {\n                         &IntercrateAmbiguityCause::DownstreamCrate(def_id) => {\n-                            err.note(&format!(\"downstream crates may implement {}\",\n+                            err.note(&format!(\"downstream crates may implement `{}`\",\n                                               tcx.item_path_str(def_id)));\n                         }\n                         &IntercrateAmbiguityCause::UpstreamCrateUpdate(def_id) => {\n-                            err.note(&format!(\"upstream crates may add new impl for {} \\\n+                            err.note(&format!(\"upstream crates may add new impl for `{}` \\\n                                               in future versions\",\n                                               tcx.item_path_str(def_id)));\n                         }"}, {"sha": "e733b5328d3bad80d0c870b7a380c914562ac3b1", "filename": "src/librustc_typeck/coherence/inherent_impls_overlap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bebd6221986764d4e98488a5a7b9730edacbc07a/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bebd6221986764d4e98488a5a7b9730edacbc07a/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs?ref=bebd6221986764d4e98488a5a7b9730edacbc07a", "patch": "@@ -66,11 +66,11 @@ impl<'a, 'tcx> InherentOverlapChecker<'a, 'tcx> {\n                     for cause in &overlap.intercrate_ambiguity_causes {\n                         match cause {\n                             &IntercrateAmbiguityCause::DownstreamCrate(def_id) => {\n-                                err.note(&format!(\"downstream crates may implement {}\",\n+                                err.note(&format!(\"downstream crates may implement `{}`\",\n                                                   self.tcx.item_path_str(def_id)));\n                             }\n                             &IntercrateAmbiguityCause::UpstreamCrateUpdate(def_id) => {\n-                                err.note(&format!(\"upstream crates may add new impl for {} \\\n+                                err.note(&format!(\"upstream crates may add new impl for `{}` \\\n                                                   in future versions\",\n                                                   self.tcx.item_path_str(def_id)));\n                             }"}]}