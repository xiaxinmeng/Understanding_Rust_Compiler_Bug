{"sha": "629efae761d0a473ddeeb9a4f2e5c408d9ce99dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyOWVmYWU3NjFkMGE0NzNkZGVlYjlhNGYyZTVjNDA4ZDljZTk5ZGM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-08T09:46:44Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-08T10:29:03Z"}, "message": "look for the note on the guarantor, not the root cmt\n\nThis was causing upvar inference to fail for all cases where the move\nwas from a projection, not the root variable.", "tree": {"sha": "ac22b6828b0e32b27370010c942cf76501a432ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac22b6828b0e32b27370010c942cf76501a432ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/629efae761d0a473ddeeb9a4f2e5c408d9ce99dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/629efae761d0a473ddeeb9a4f2e5c408d9ce99dc", "html_url": "https://github.com/rust-lang/rust/commit/629efae761d0a473ddeeb9a4f2e5c408d9ce99dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/629efae761d0a473ddeeb9a4f2e5c408d9ce99dc/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc6af49258f0b90489a9a8216d35306b27aaeed9", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc6af49258f0b90489a9a8216d35306b27aaeed9", "html_url": "https://github.com/rust-lang/rust/commit/dc6af49258f0b90489a9a8216d35306b27aaeed9"}], "stats": {"total": 83, "additions": 82, "deletions": 1}, "files": [{"sha": "a6a81485b23df83c9a483507e3c36e6abec85639", "filename": "src/librustc_typeck/check/upvar.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/629efae761d0a473ddeeb9a4f2e5c408d9ce99dc/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/629efae761d0a473ddeeb9a4f2e5c408d9ce99dc/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs?ref=629efae761d0a473ddeeb9a4f2e5c408d9ce99dc", "patch": "@@ -289,10 +289,14 @@ impl<'a, 'gcx, 'tcx> InferBorrowKind<'a, 'gcx, 'tcx> {\n         let guarantor = cmt.guarantor();\n         debug!(\"adjust_upvar_borrow_kind_for_consume: guarantor={:?}\",\n                guarantor);\n+        debug!(\"adjust_upvar_borrow_kind_for_consume: guarantor.cat={:?}\",\n+               guarantor.cat);\n         match guarantor.cat {\n             Categorization::Deref(_, mc::BorrowedPtr(..)) |\n             Categorization::Deref(_, mc::Implicit(..)) => {\n-                match cmt.note {\n+                debug!(\"adjust_upvar_borrow_kind_for_consume: found deref with note {:?}\",\n+                       cmt.note);\n+                match guarantor.note {\n                     mc::NoteUpvarRef(upvar_id) => {\n                         debug!(\"adjust_upvar_borrow_kind_for_consume: \\\n                                 setting upvar_id={:?} to by value\","}, {"sha": "d902ebc9dc9d263043aecf7f6ca68abf1129a31b", "filename": "src/test/run-pass/unboxed-closures-move-from-projection-issue-30046.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/629efae761d0a473ddeeb9a4f2e5c408d9ce99dc/src%2Ftest%2Frun-pass%2Funboxed-closures-move-from-projection-issue-30046.rs", "raw_url": "https://github.com/rust-lang/rust/raw/629efae761d0a473ddeeb9a4f2e5c408d9ce99dc/src%2Ftest%2Frun-pass%2Funboxed-closures-move-from-projection-issue-30046.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funboxed-closures-move-from-projection-issue-30046.rs?ref=629efae761d0a473ddeeb9a4f2e5c408d9ce99dc", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(unused)]\n+\n+fn foo<F>(f: F)\n+    where F: FnOnce()\n+{\n+}\n+\n+fn main() {\n+    // Test that this closure is inferred to `FnOnce`\n+    // because it moves from `y.as<Option::Some>.0`:\n+    let x = Some(vec![1, 2, 3]);\n+    foo(|| {\n+        match x {\n+            Some(y) => { }\n+            None => { }\n+        }\n+    });\n+\n+    // Test that this closure is inferred to `FnOnce`\n+    // because it moves from `y.0`:\n+    let y = (vec![1, 2, 3], 0);\n+    foo(|| {\n+        let x = y.0;\n+    });\n+}"}, {"sha": "14ef3b5f178ac47ac3e4cfe6a9e7217544aaae01", "filename": "src/test/ui/unboxed-closures-infer-fn-once-move-from-projection.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/629efae761d0a473ddeeb9a4f2e5c408d9ce99dc/src%2Ftest%2Fui%2Funboxed-closures-infer-fn-once-move-from-projection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/629efae761d0a473ddeeb9a4f2e5c408d9ce99dc/src%2Ftest%2Fui%2Funboxed-closures-infer-fn-once-move-from-projection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures-infer-fn-once-move-from-projection.rs?ref=629efae761d0a473ddeeb9a4f2e5c408d9ce99dc", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(unused)]\n+\n+fn foo<F>(f: F)\n+    where F: Fn()\n+{\n+}\n+\n+fn main() {\n+    // Test that this closure is inferred to `FnOnce` because it moves\n+    // from `y.0`. This affects the error output (the error is that\n+    // the closure implements `FnOnce`, not that it moves from inside\n+    // a `Fn` closure.)\n+    let y = (vec![1, 2, 3], 0);\n+    let c = || drop(y.0);\n+    foo(c);\n+}"}, {"sha": "d968c409396311938a5f0f245bcec3ab34433504", "filename": "src/test/ui/unboxed-closures-infer-fn-once-move-from-projection.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/629efae761d0a473ddeeb9a4f2e5c408d9ce99dc/src%2Ftest%2Fui%2Funboxed-closures-infer-fn-once-move-from-projection.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/629efae761d0a473ddeeb9a4f2e5c408d9ce99dc/src%2Ftest%2Fui%2Funboxed-closures-infer-fn-once-move-from-projection.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures-infer-fn-once-move-from-projection.stderr?ref=629efae761d0a473ddeeb9a4f2e5c408d9ce99dc", "patch": "@@ -0,0 +1,16 @@\n+error[E0525]: expected a closure that implements the `Fn` trait, but this closure only implements `FnOnce`\n+  --> $DIR/unboxed-closures-infer-fn-once-move-from-projection.rs:24:13\n+   |\n+24 |     let c = || drop(y.0);\n+   |             ^^^^^^^^^^^^\n+25 |     foo(c);\n+   |     --- the requirement to implement `Fn` derives from here\n+   |\n+note: closure is `FnOnce` because it moves the variable `y` out of its environment\n+  --> $DIR/unboxed-closures-infer-fn-once-move-from-projection.rs:24:21\n+   |\n+24 |     let c = || drop(y.0);\n+   |                     ^\n+\n+error: aborting due to previous error\n+"}]}