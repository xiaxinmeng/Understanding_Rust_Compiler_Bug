{"sha": "89e0fcee4041e038b91dfbe0afbcc1d8306d404d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ZTBmY2VlNDA0MWUwMzhiOTFkZmJlMGFmYmNjMWQ4MzA2ZDQwNGQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-11-22T09:37:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-22T09:37:46Z"}, "message": "Rollup merge of #55784 - meltinglava:master, r=KodrAus\n\nClarifying documentation for collections::hash_map::Entry::or_insert\n\nPrevious version does not show that or_insert does not insert the passed value, as the passed value was the same value as what was already in the map.", "tree": {"sha": "8d21f44ac7817fe31224146570b50f822a54d39b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d21f44ac7817fe31224146570b50f822a54d39b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89e0fcee4041e038b91dfbe0afbcc1d8306d404d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb9njrCRBK7hj4Ov3rIwAAdHIIALC5RWciBv1ebzynbIJu8whC\nXCbHmNsIRA22ogEZQRNt4q3b0LXdTSrkoiMZtWO+zlGitr2JAD5+oHPyWNea9s9o\nb8sWLB5lzclizLLJYu0O23cgOE/MYzQz+JESMWXJ1q+3AKD6kg7xCWYcR/BOXn9x\n68mtjD1aF1fFR1kqGcRZe5x7fQJhAHtxQAGpdwRW/lebkyiVvRngVjl4QJ5w+Uj+\nWf6MtvSaRrBnvXzBRAwM4qb6pbODf+WuVXFHMz8mluLQSpwvBK9GnbsFm2+hYMLt\ns5nVCnrh21zjrz512sD6iicDcsKsVzwGV1bzC9BaEQSMv9TmP4LXzTis8KuKm+8=\n=KJtk\n-----END PGP SIGNATURE-----\n", "payload": "tree 8d21f44ac7817fe31224146570b50f822a54d39b\nparent 1c57f0ab9c58d8394b531de15423fbb4c57a2613\nparent 8b750a77fc73290635499494779f77848a8e2b09\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1542879466 +0100\ncommitter GitHub <noreply@github.com> 1542879466 +0100\n\nRollup merge of #55784 - meltinglava:master, r=KodrAus\n\nClarifying documentation for collections::hash_map::Entry::or_insert\n\nPrevious version does not show that or_insert does not insert the passed value, as the passed value was the same value as what was already in the map.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89e0fcee4041e038b91dfbe0afbcc1d8306d404d", "html_url": "https://github.com/rust-lang/rust/commit/89e0fcee4041e038b91dfbe0afbcc1d8306d404d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89e0fcee4041e038b91dfbe0afbcc1d8306d404d/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c57f0ab9c58d8394b531de15423fbb4c57a2613", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c57f0ab9c58d8394b531de15423fbb4c57a2613", "html_url": "https://github.com/rust-lang/rust/commit/1c57f0ab9c58d8394b531de15423fbb4c57a2613"}, {"sha": "8b750a77fc73290635499494779f77848a8e2b09", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b750a77fc73290635499494779f77848a8e2b09", "html_url": "https://github.com/rust-lang/rust/commit/8b750a77fc73290635499494779f77848a8e2b09"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "d4650bd68d637de38bd3994601ec5a7b3db0d585", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/89e0fcee4041e038b91dfbe0afbcc1d8306d404d/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89e0fcee4041e038b91dfbe0afbcc1d8306d404d/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=89e0fcee4041e038b91dfbe0afbcc1d8306d404d", "patch": "@@ -2026,12 +2026,12 @@ impl<'a, K, V, S> RawEntryMut<'a, K, V, S> {\n     /// use std::collections::HashMap;\n     ///\n     /// let mut map: HashMap<&str, u32> = HashMap::new();\n-    /// map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 12);\n     ///\n-    /// assert_eq!(map[\"poneyland\"], 12);\n+    /// map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 3);\n+    /// assert_eq!(map[\"poneyland\"], 3);\n     ///\n-    /// *map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 12).1 += 10;\n-    /// assert_eq!(map[\"poneyland\"], 22);\n+    /// *map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 10).1 *= 2;\n+    /// assert_eq!(map[\"poneyland\"], 6);\n     /// ```\n     #[unstable(feature = \"hash_raw_entry\", issue = \"54043\")]\n     pub fn or_insert(self, default_key: K, default_val: V) -> (&'a mut K, &'a mut V)\n@@ -2648,12 +2648,12 @@ impl<'a, K, V> Entry<'a, K, V> {\n     /// use std::collections::HashMap;\n     ///\n     /// let mut map: HashMap<&str, u32> = HashMap::new();\n-    /// map.entry(\"poneyland\").or_insert(12);\n     ///\n-    /// assert_eq!(map[\"poneyland\"], 12);\n+    /// map.entry(\"poneyland\").or_insert(3);\n+    /// assert_eq!(map[\"poneyland\"], 3);\n     ///\n-    /// *map.entry(\"poneyland\").or_insert(12) += 10;\n-    /// assert_eq!(map[\"poneyland\"], 22);\n+    /// *map.entry(\"poneyland\").or_insert(10) *= 2;\n+    /// assert_eq!(map[\"poneyland\"], 6);\n     /// ```\n     pub fn or_insert(self, default: V) -> &'a mut V {\n         match self {"}]}