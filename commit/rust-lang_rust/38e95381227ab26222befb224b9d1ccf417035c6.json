{"sha": "38e95381227ab26222befb224b9d1ccf417035c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZTk1MzgxMjI3YWIyNjIyMmJlZmIyMjRiOWQxY2NmNDE3MDM1YzY=", "commit": {"author": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2021-06-14T15:32:51Z"}, "committer": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2021-06-27T10:05:18Z"}, "message": "Revert \"Remove tests that were also added in PR 79684.\"\n\nThis reverts commit e118a2cbf1e590cb5a7586ad01c6c3431c2b4f48.", "tree": {"sha": "1cab5725706ae128c9bdbd70bc770724e1bdb6da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cab5725706ae128c9bdbd70bc770724e1bdb6da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38e95381227ab26222befb224b9d1ccf417035c6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEeQ9lb2ZjsXFBDRuFH1AezRu9cKcFAmDYTV4ACgkQH1AezRu9\ncKdfHxAAjN9ozNV7r5inFEaU2Zo+83+6hF9VE6F/JvXdjXMNQAl5sQoIZDQlHgJC\ncUVsmiZMwHIyNO/W9bhgHSYUfyrAqYlbCaqi2yYuHrwmCXHdFculi/pVbI4r2TG8\n6As4/Ndc4R1Styu+KbX3dJ8Pk/G8aVw+f43pDhQzYNacgu59cRf8o59SL3qBhLjZ\nB08mo1p959R2U/Kiyb0Wma2C9fHWLjcI1MtwS7aLFynodv3aRfAokeIJNP5WBX5d\nmo9tOYk6g1wqnewTS7hsRjpPnlFtuqJmVBqHBBfBSsvJgtZddOdCGw1eYZwocnqh\nbJfCd5wXgCNZtnYkWK9gC+TixHx5pIt22mHx6GeM6WJuN4Pjfr9vyJRkX/9dVxHw\nrIWkdls5q3RgjWLliuYrZ6C4O34tDOOhsf94hn1kw3z3hIRUHfyHnk/aDOgH6jSY\nSbwREQUQYzPBOZ1cyt7BelK7OGEAGZ9CX+d0XDUuSZlNk/Ihs8Wo0OFjFbVzI8ao\n9Q/qu4gRIoI7pQP9RFQ+kQ/eiNCkZsjHRLnRcnUb7Lyz38v8a1Ckxit96/yBrydY\nXQK1yqQXXEwubf2O6RzK/1uCJaMdJPMV2q04O5FMV3igUmg4yNMlhluG5hkPyNrO\nQHTngyqKtQKkdP4jtAgqtDjci2Ne/1hOQGCtO/xXmCWi0fpuwPQ=\n=Z2L/\n-----END PGP SIGNATURE-----", "payload": "tree 1cab5725706ae128c9bdbd70bc770724e1bdb6da\nparent 6c890bb9697c0971e70e1eba495b666516ecece6\nauthor Albin Hedman <albin9604@gmail.com> 1623684771 +0200\ncommitter Albin Hedman <albin9604@gmail.com> 1624788318 +0200\n\nRevert \"Remove tests that were also added in PR 79684.\"\n\nThis reverts commit e118a2cbf1e590cb5a7586ad01c6c3431c2b4f48.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38e95381227ab26222befb224b9d1ccf417035c6", "html_url": "https://github.com/rust-lang/rust/commit/38e95381227ab26222befb224b9d1ccf417035c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38e95381227ab26222befb224b9d1ccf417035c6/comments", "author": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c890bb9697c0971e70e1eba495b666516ecece6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c890bb9697c0971e70e1eba495b666516ecece6", "html_url": "https://github.com/rust-lang/rust/commit/6c890bb9697c0971e70e1eba495b666516ecece6"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "183aa9e51228c985651854a1134a7a6f098b8874", "filename": "src/test/ui/const-ptr/out_of_bounds_read.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/38e95381227ab26222befb224b9d1ccf417035c6/src%2Ftest%2Fui%2Fconst-ptr%2Fout_of_bounds_read.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e95381227ab26222befb224b9d1ccf417035c6/src%2Ftest%2Fui%2Fconst-ptr%2Fout_of_bounds_read.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-ptr%2Fout_of_bounds_read.rs?ref=38e95381227ab26222befb224b9d1ccf417035c6", "patch": "@@ -0,0 +1,16 @@\n+// error-pattern: any use of this value will cause an error\n+\n+#![feature(const_ptr_read)]\n+#![feature(const_ptr_offset)]\n+\n+fn main() {\n+    use std::ptr;\n+\n+    const DATA: [u32; 1] = [42];\n+\n+    const PAST_END_PTR: *const u32 = unsafe { DATA.as_ptr().add(1) };\n+\n+    const _READ: u32 = unsafe { ptr::read(PAST_END_PTR) };\n+    const _CONST_READ: u32 = unsafe { PAST_END_PTR.read() };\n+    const _MUT_READ: u32 = unsafe { (PAST_END_PTR as *mut u32).read() };\n+}"}, {"sha": "6c4092e3e5cc82d9c9f79eb753be09e41a338630", "filename": "src/test/ui/const-ptr/out_of_bounds_read.stderr", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/38e95381227ab26222befb224b9d1ccf417035c6/src%2Ftest%2Fui%2Fconst-ptr%2Fout_of_bounds_read.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/38e95381227ab26222befb224b9d1ccf417035c6/src%2Ftest%2Fui%2Fconst-ptr%2Fout_of_bounds_read.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-ptr%2Fout_of_bounds_read.stderr?ref=38e95381227ab26222befb224b9d1ccf417035c6", "patch": "@@ -0,0 +1,59 @@\n+error: any use of this value will cause an error\n+  --> $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n+   |\n+LL |         copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         |\n+   |         memory access failed: pointer must be in-bounds at offset 8, but is outside bounds of alloc6 which has size 4\n+   |         inside `std::ptr::read::<u32>` at $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n+   |         inside `_READ` at $DIR/out_of_bounds_read.rs:13:33\n+   | \n+  ::: $DIR/out_of_bounds_read.rs:13:5\n+   |\n+LL |     const _READ: u32 = unsafe { ptr::read(PAST_END_PTR) };\n+   |     ------------------------------------------------------\n+   |\n+   = note: `#[deny(const_err)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error: any use of this value will cause an error\n+  --> $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n+   |\n+LL |         copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         |\n+   |         memory access failed: pointer must be in-bounds at offset 8, but is outside bounds of alloc6 which has size 4\n+   |         inside `std::ptr::read::<u32>` at $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n+   |         inside `ptr::const_ptr::<impl *const u32>::read` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n+   |         inside `_CONST_READ` at $DIR/out_of_bounds_read.rs:14:39\n+   | \n+  ::: $DIR/out_of_bounds_read.rs:14:5\n+   |\n+LL |     const _CONST_READ: u32 = unsafe { PAST_END_PTR.read() };\n+   |     --------------------------------------------------------\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error: any use of this value will cause an error\n+  --> $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n+   |\n+LL |         copy_nonoverlapping(src, tmp.as_mut_ptr(), 1);\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         |\n+   |         memory access failed: pointer must be in-bounds at offset 8, but is outside bounds of alloc6 which has size 4\n+   |         inside `std::ptr::read::<u32>` at $SRC_DIR/core/src/ptr/mod.rs:LL:COL\n+   |         inside `ptr::mut_ptr::<impl *mut u32>::read` at $SRC_DIR/core/src/ptr/mut_ptr.rs:LL:COL\n+   |         inside `_MUT_READ` at $DIR/out_of_bounds_read.rs:15:37\n+   | \n+  ::: $DIR/out_of_bounds_read.rs:15:5\n+   |\n+LL |     const _MUT_READ: u32 = unsafe { (PAST_END_PTR as *mut u32).read() };\n+   |     --------------------------------------------------------------------\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error: aborting due to 3 previous errors\n+"}]}