{"sha": "8507b8e42fbe8b763bb8a7375133d95445813946", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1MDdiOGU0MmZiZThiNzYzYmI4YTczNzUxMzNkOTU0NDU4MTM5NDY=", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-07-15T16:09:25Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-07-27T03:28:06Z"}, "message": "Add test for multiple ref-self", "tree": {"sha": "894a1510eecedafa6f1d89e9d690e3e7978f7c08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/894a1510eecedafa6f1d89e9d690e3e7978f7c08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8507b8e42fbe8b763bb8a7375133d95445813946", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8507b8e42fbe8b763bb8a7375133d95445813946", "html_url": "https://github.com/rust-lang/rust/commit/8507b8e42fbe8b763bb8a7375133d95445813946", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8507b8e42fbe8b763bb8a7375133d95445813946/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aab9edc68ab034f94bc956e145d155eb6d26fb3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/aab9edc68ab034f94bc956e145d155eb6d26fb3d", "html_url": "https://github.com/rust-lang/rust/commit/aab9edc68ab034f94bc956e145d155eb6d26fb3d"}], "stats": {"total": 80, "additions": 73, "deletions": 7}, "files": [{"sha": "f39613d0c90072edb30f67e9bb485503f4a083fb", "filename": "src/test/ui/self/elision/multiple-ref-self.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/8507b8e42fbe8b763bb8a7375133d95445813946/src%2Ftest%2Fui%2Fself%2Felision%2Fmultiple-ref-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8507b8e42fbe8b763bb8a7375133d95445813946/src%2Ftest%2Fui%2Fself%2Felision%2Fmultiple-ref-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fmultiple-ref-self.rs?ref=8507b8e42fbe8b763bb8a7375133d95445813946", "patch": "@@ -0,0 +1,43 @@\n+// check-pass\n+\n+#![feature(arbitrary_self_types)]\n+#![allow(non_snake_case)]\n+\n+use std::marker::PhantomData;\n+use std::ops::Deref;\n+use std::pin::Pin;\n+\n+struct Struct { }\n+\n+struct Wrap<T, P>(T, PhantomData<P>);\n+\n+impl<T, P> Deref for Wrap<T, P> {\n+    type Target = T;\n+    fn deref(&self) -> &T { &self.0 }\n+}\n+\n+impl Struct {\n+    // Test using multiple `&Self`:\n+\n+    fn wrap_ref_Self_ref_Self(self: Wrap<&Self, &Self>, f: &u8) -> &u8 {\n+        f\n+    }\n+\n+    fn box_wrap_ref_Self_ref_Self(self: Box<Wrap<&Self, &Self>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn pin_wrap_ref_Self_ref_Self(self: Pin<Wrap<&Self, &Self>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn box_box_wrap_ref_Self_ref_Self(self: Box<Box<Wrap<&Self, &Self>>>, f: &u32) -> &u32 {\n+        f\n+    }\n+\n+    fn box_pin_wrap_ref_Self_ref_Self(self: Box<Pin<Wrap<&Self, &Self>>>, f: &u32) -> &u32 {\n+        f\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "e389d8518ada4f6a375e4d48c8cba91324aed168", "filename": "src/test/ui/self/elision/ref-self.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8507b8e42fbe8b763bb8a7375133d95445813946/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8507b8e42fbe8b763bb8a7375133d95445813946/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.rs?ref=8507b8e42fbe8b763bb8a7375133d95445813946", "patch": "@@ -1,10 +1,19 @@\n #![feature(arbitrary_self_types)]\n #![allow(non_snake_case)]\n \n+use std::marker::PhantomData;\n+use std::ops::Deref;\n use std::pin::Pin;\n \n struct Struct { }\n \n+struct Wrap<T, P>(T, PhantomData<P>);\n+\n+impl<T, P> Deref for Wrap<T, P> {\n+    type Target = T;\n+    fn deref(&self) -> &T { &self.0 }\n+}\n+\n impl Struct {\n     // Test using `&self` sugar:\n \n@@ -33,6 +42,10 @@ impl Struct {\n     fn box_pin_ref_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n         f //~ ERROR lifetime mismatch\n     }\n+\n+    fn wrap_ref_Self_Self(self: Wrap<&Self, Self>, f: &u8) -> &u8 {\n+        f //~ ERROR lifetime mismatch\n+    }\n }\n \n fn main() { }"}, {"sha": "611498f18da4232030acf5c7713950cd75c96186", "filename": "src/test/ui/self/elision/ref-self.stderr", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8507b8e42fbe8b763bb8a7375133d95445813946/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8507b8e42fbe8b763bb8a7375133d95445813946/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.stderr?ref=8507b8e42fbe8b763bb8a7375133d95445813946", "patch": "@@ -1,5 +1,5 @@\n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-self.rs:14:9\n+  --> $DIR/ref-self.rs:21:9\n    |\n LL |     fn ref_self(&self, f: &u32) -> &u32 {\n    |                           ----     ----\n@@ -9,7 +9,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-self.rs:20:9\n+  --> $DIR/ref-self.rs:27:9\n    |\n LL |     fn ref_Self(self: &Self, f: &u32) -> &u32 {\n    |                                 ----     ----\n@@ -19,7 +19,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-self.rs:24:9\n+  --> $DIR/ref-self.rs:31:9\n    |\n LL |     fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n    |                                          ----     ----\n@@ -29,7 +29,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-self.rs:28:9\n+  --> $DIR/ref-self.rs:35:9\n    |\n LL |     fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n    |                                          ----     ----\n@@ -39,7 +39,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-self.rs:32:9\n+  --> $DIR/ref-self.rs:39:9\n    |\n LL |     fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n    |                                                   ----     ----\n@@ -49,7 +49,7 @@ LL |         f\n    |         ^ ...but data from `f` is returned here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ref-self.rs:36:9\n+  --> $DIR/ref-self.rs:43:9\n    |\n LL |     fn box_pin_ref_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n    |                                                   ----     ----\n@@ -58,5 +58,15 @@ LL |     fn box_pin_ref_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n LL |         f\n    |         ^ ...but data from `f` is returned here\n \n-error: aborting due to 6 previous errors\n+error[E0623]: lifetime mismatch\n+  --> $DIR/ref-self.rs:47:9\n+   |\n+LL |     fn wrap_ref_Self_Self(self: Wrap<&Self, Self>, f: &u8) -> &u8 {\n+   |                                                       ---     ---\n+   |                                                       |\n+   |                                                       this parameter and the return type are declared with different lifetimes...\n+LL |         f\n+   |         ^ ...but data from `f` is returned here\n+\n+error: aborting due to 7 previous errors\n "}]}