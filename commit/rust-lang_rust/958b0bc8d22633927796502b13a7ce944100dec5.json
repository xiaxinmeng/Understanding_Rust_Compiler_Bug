{"sha": "958b0bc8d22633927796502b13a7ce944100dec5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OGIwYmM4ZDIyNjMzOTI3Nzk2NTAyYjEzYTdjZTk0NDEwMGRlYzU=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-14T04:30:25Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-20T07:41:44Z"}, "message": "Store `impl const` in `ItemKind::Impl`", "tree": {"sha": "ec2426f5d32721335d35c211728616f3b6c6e5ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec2426f5d32721335d35c211728616f3b6c6e5ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/958b0bc8d22633927796502b13a7ce944100dec5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/958b0bc8d22633927796502b13a7ce944100dec5", "html_url": "https://github.com/rust-lang/rust/commit/958b0bc8d22633927796502b13a7ce944100dec5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/958b0bc8d22633927796502b13a7ce944100dec5/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a790f9bb2d277b5c7c267b15b812db12cc20b7a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a790f9bb2d277b5c7c267b15b812db12cc20b7a1", "html_url": "https://github.com/rust-lang/rust/commit/a790f9bb2d277b5c7c267b15b812db12cc20b7a1"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "7dbd2362f04c9b3d7a393b1c71eea570dd0cf55e", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/958b0bc8d22633927796502b13a7ce944100dec5/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958b0bc8d22633927796502b13a7ce944100dec5/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=958b0bc8d22633927796502b13a7ce944100dec5", "patch": "@@ -616,7 +616,7 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                 unsafety,\n                 polarity,\n                 defaultness: _,\n-                constness: _, // TODO\n+                constness: _,\n                 generics: _,\n                 of_trait: Some(_),\n                 ref self_ty,\n@@ -650,7 +650,7 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                 unsafety,\n                 polarity,\n                 defaultness,\n-                constness: _, // TODO\n+                constness,\n                 generics: _,\n                 of_trait: None,\n                 self_ty: _,\n@@ -678,6 +678,12 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                         .note(\"only trait implementations may be annotated with default\")\n                         .emit();\n                 }\n+                if constness == Constness::Const {\n+                    self.err_handler()\n+                        .struct_span_err(item.span, \"inherent impls cannot be `const`\")\n+                        .note(\"only trait implementations may be annotated with `const`\")\n+                        .emit();\n+                }\n             }\n             ItemKind::Fn(ref sig, ref generics, _) => {\n                 self.visit_fn_header(&sig.header);"}, {"sha": "43495da192839e8f7c4951b7772fa41294e5766a", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/958b0bc8d22633927796502b13a7ce944100dec5/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958b0bc8d22633927796502b13a7ce944100dec5/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=958b0bc8d22633927796502b13a7ce944100dec5", "patch": "@@ -5,7 +5,7 @@ use crate::maybe_whole;\n \n use rustc_error_codes::*;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder, PResult, StashKey};\n-use rustc_span::source_map::{self, respan, Span, Spanned};\n+use rustc_span::source_map::{self, respan, Span};\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::BytePos;\n use syntax::ast::{self, AttrKind, AttrStyle, AttrVec, Attribute, Ident, DUMMY_NODE_ID};\n@@ -566,9 +566,9 @@ impl<'a> Parser<'a> {\n         let constness = if self.eat_keyword(kw::Const) {\n             let span = self.prev_span;\n             self.sess.gated_spans.gate(sym::const_trait_impl, span);\n-            Some(respan(span, Constness::Const))\n+            Constness::Const\n         } else {\n-            None\n+            Constness::NotConst\n         };\n \n         // Disambiguate `impl !Trait for Type { ... }` and `impl ! { ... }` for the never type.\n@@ -631,8 +631,7 @@ impl<'a> Parser<'a> {\n                         err_path(ty_first.span)\n                     }\n                 };\n-                let constness = constness.map(|c| c.node);\n-                let trait_ref = TraitRef { path, constness, ref_id: ty_first.id };\n+                let trait_ref = TraitRef { path, ref_id: ty_first.id };\n \n                 ItemKind::Impl {\n                     unsafety,\n@@ -646,13 +645,6 @@ impl<'a> Parser<'a> {\n                 }\n             }\n             None => {\n-                // Reject `impl const Type {}` here\n-                if let Some(Spanned { node: Constness::Const, span }) = constness {\n-                    self.struct_span_err(span, \"`const` cannot modify an inherent impl\")\n-                        .help(\"only a trait impl can be `const`\")\n-                        .emit();\n-                }\n-\n                 // impl Type\n                 ItemKind::Impl {\n                     unsafety,"}]}