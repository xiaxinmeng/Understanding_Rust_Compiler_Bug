{"sha": "5c45420bdad8d3bf950ff3c46e1856348a7ddc7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNDU0MjBiZGFkOGQzYmY5NTBmZjNjNDZlMTg1NjM0OGE3ZGRjN2I=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2019-08-05T02:23:32Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2019-08-22T10:36:31Z"}, "message": "Changed tests", "tree": {"sha": "38ded6515e33195d4feab362e5f7416b11ea0761", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38ded6515e33195d4feab362e5f7416b11ea0761"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b", "html_url": "https://github.com/rust-lang/rust/commit/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84556502e69e1741938610e4af5800fe0cee9975", "url": "https://api.github.com/repos/rust-lang/rust/commits/84556502e69e1741938610e4af5800fe0cee9975", "html_url": "https://github.com/rust-lang/rust/commit/84556502e69e1741938610e4af5800fe0cee9975"}], "stats": {"total": 55, "additions": 17, "deletions": 38}, "files": [{"sha": "5d0b8b867b22f4e8059aa5cfbd7c5cdb5411d3ac", "filename": "src/test/incremental/hashes/for_loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs?ref=5c45420bdad8d3bf950ff3c46e1856348a7ddc7b", "patch": "@@ -94,7 +94,7 @@ pub fn change_iterable() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built, optimized_mir\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, mir_built\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_iterable() {\n     let mut _x = 0;"}, {"sha": "492182921ba347b377b682c3e92025b6dcc8d36b", "filename": "src/test/ui/consts/array-literal-index-oob.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b/src%2Ftest%2Fui%2Fconsts%2Farray-literal-index-oob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b/src%2Ftest%2Fui%2Fconsts%2Farray-literal-index-oob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Farray-literal-index-oob.rs?ref=5c45420bdad8d3bf950ff3c46e1856348a7ddc7b", "patch": "@@ -2,5 +2,4 @@ fn main() {\n     &{[1, 2, 3][4]};\n     //~^ ERROR index out of bounds\n     //~| ERROR reaching this expression at runtime will panic or abort\n-    //~| ERROR this expression will panic at runtime\n }"}, {"sha": "0ddc2a0e79cd35c8729ffb97329b49936f186745", "filename": "src/test/ui/consts/array-literal-index-oob.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b/src%2Ftest%2Fui%2Fconsts%2Farray-literal-index-oob.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b/src%2Ftest%2Fui%2Fconsts%2Farray-literal-index-oob.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Farray-literal-index-oob.stderr?ref=5c45420bdad8d3bf950ff3c46e1856348a7ddc7b", "patch": "@@ -6,12 +6,6 @@ LL |     &{[1, 2, 3][4]};\n    |\n    = note: `#[deny(const_err)]` on by default\n \n-error: this expression will panic at runtime\n-  --> $DIR/array-literal-index-oob.rs:2:5\n-   |\n-LL |     &{[1, 2, 3][4]};\n-   |     ^^^^^^^^^^^^^^^ index out of bounds: the len is 3 but the index is 4\n-\n error: reaching this expression at runtime will panic or abort\n   --> $DIR/array-literal-index-oob.rs:2:7\n    |\n@@ -20,5 +14,5 @@ LL |     &{[1, 2, 3][4]};\n    |       |\n    |       index out of bounds: the len is 3 but the index is 4\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n "}, {"sha": "d971d825f278ccd0f7cc5f5f3b500d5e9c9f1872", "filename": "src/test/ui/consts/const-eval/issue-43197.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.stderr?ref=5c45420bdad8d3bf950ff3c46e1856348a7ddc7b", "patch": "@@ -21,16 +21,16 @@ LL |     const Y: u32 = foo(0-1);\n    |                        attempt to subtract with overflow\n \n error[E0080]: evaluation of constant expression failed\n-  --> $DIR/issue-43197.rs:12:26\n+  --> $DIR/issue-43197.rs:12:23\n    |\n LL |     println!(\"{} {}\", X, Y);\n-   |                          ^ referenced constant has errors\n+   |                       ^ referenced constant has errors\n \n error[E0080]: evaluation of constant expression failed\n-  --> $DIR/issue-43197.rs:12:23\n+  --> $DIR/issue-43197.rs:12:26\n    |\n LL |     println!(\"{} {}\", X, Y);\n-   |                       ^ referenced constant has errors\n+   |                          ^ referenced constant has errors\n \n error: aborting due to 2 previous errors\n "}, {"sha": "cd989731452b348c581473173d69447a96ef2723", "filename": "src/test/ui/consts/const-eval/promoted_errors.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.rs?ref=5c45420bdad8d3bf950ff3c46e1856348a7ddc7b", "patch": "@@ -7,15 +7,13 @@ fn main() {\n     let _x = 0u32 - 1;\n     //~^ ERROR this expression will panic at runtime [const_err]\n     println!(\"{}\", 1/(1-1));\n-    //~^ ERROR this expression will panic at runtime [const_err]\n-    //~| ERROR attempt to divide by zero [const_err]\n+    //~^ ERROR attempt to divide by zero [const_err]\n     //~| ERROR reaching this expression at runtime will panic or abort [const_err]\n     let _x = 1/(1-1);\n     //~^ ERROR const_err\n     //~| ERROR const_err\n     println!(\"{}\", 1/(false as u32));\n-    //~^ ERROR this expression will panic at runtime [const_err]\n-    //~| ERROR attempt to divide by zero [const_err]\n+    //~^ ERROR attempt to divide by zero [const_err]\n     //~| ERROR reaching this expression at runtime will panic or abort [const_err]\n     let _x = 1/(false as u32);\n     //~^ ERROR const_err"}, {"sha": "40d5c73e86679580ea8d7275c204edaf12c2ba30", "filename": "src/test/ui/consts/const-eval/promoted_errors.stderr", "status": "modified", "additions": 9, "deletions": 21, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c45420bdad8d3bf950ff3c46e1856348a7ddc7b/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.stderr?ref=5c45420bdad8d3bf950ff3c46e1856348a7ddc7b", "patch": "@@ -16,59 +16,47 @@ error: attempt to divide by zero\n LL |     println!(\"{}\", 1/(1-1));\n    |                    ^^^^^^^\n \n-error: this expression will panic at runtime\n+error: reaching this expression at runtime will panic or abort\n   --> $DIR/promoted_errors.rs:9:20\n    |\n LL |     println!(\"{}\", 1/(1-1));\n    |                    ^^^^^^^ attempt to divide by zero\n \n error: attempt to divide by zero\n-  --> $DIR/promoted_errors.rs:13:14\n+  --> $DIR/promoted_errors.rs:12:14\n    |\n LL |     let _x = 1/(1-1);\n    |              ^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/promoted_errors.rs:13:14\n+  --> $DIR/promoted_errors.rs:12:14\n    |\n LL |     let _x = 1/(1-1);\n    |              ^^^^^^^ attempt to divide by zero\n \n error: attempt to divide by zero\n-  --> $DIR/promoted_errors.rs:16:20\n+  --> $DIR/promoted_errors.rs:15:20\n    |\n LL |     println!(\"{}\", 1/(false as u32));\n    |                    ^^^^^^^^^^^^^^^^\n \n-error: this expression will panic at runtime\n-  --> $DIR/promoted_errors.rs:16:20\n+error: reaching this expression at runtime will panic or abort\n+  --> $DIR/promoted_errors.rs:15:20\n    |\n LL |     println!(\"{}\", 1/(false as u32));\n    |                    ^^^^^^^^^^^^^^^^ attempt to divide by zero\n \n error: attempt to divide by zero\n-  --> $DIR/promoted_errors.rs:20:14\n+  --> $DIR/promoted_errors.rs:18:14\n    |\n LL |     let _x = 1/(false as u32);\n    |              ^^^^^^^^^^^^^^^^\n \n error: this expression will panic at runtime\n-  --> $DIR/promoted_errors.rs:20:14\n+  --> $DIR/promoted_errors.rs:18:14\n    |\n LL |     let _x = 1/(false as u32);\n    |              ^^^^^^^^^^^^^^^^ attempt to divide by zero\n \n-error: reaching this expression at runtime will panic or abort\n-  --> $DIR/promoted_errors.rs:16:20\n-   |\n-LL |     println!(\"{}\", 1/(false as u32));\n-   |                    ^^^^^^^^^^^^^^^^ attempt to divide by zero\n-\n-error: reaching this expression at runtime will panic or abort\n-  --> $DIR/promoted_errors.rs:9:20\n-   |\n-LL |     println!(\"{}\", 1/(1-1));\n-   |                    ^^^^^^^ attempt to divide by zero\n-\n-error: aborting due to 11 previous errors\n+error: aborting due to 9 previous errors\n "}]}