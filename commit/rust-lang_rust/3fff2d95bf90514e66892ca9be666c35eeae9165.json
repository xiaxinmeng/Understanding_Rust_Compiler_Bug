{"sha": "3fff2d95bf90514e66892ca9be666c35eeae9165", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZmYyZDk1YmY5MDUxNGU2Njg5MmNhOWJlNjY2YzM1ZWVhZTkxNjU=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2017-10-07T19:33:36Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2017-10-07T23:09:55Z"}, "message": "core: Ensure std::mem::Discriminant is Send + Sync\n\n`PhantomData<*const T>` has the implication of Send / Syncness following\nthe *const T type, but the discriminant should always be Send and Sync.\n\nUse `PhantomData<fn() -> T>` which has the same variance in T, but is Send + Sync", "tree": {"sha": "51c40561542c0e085dea45a93c5198eb2fe9f3ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51c40561542c0e085dea45a93c5198eb2fe9f3ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fff2d95bf90514e66892ca9be666c35eeae9165", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fff2d95bf90514e66892ca9be666c35eeae9165", "html_url": "https://github.com/rust-lang/rust/commit/3fff2d95bf90514e66892ca9be666c35eeae9165", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fff2d95bf90514e66892ca9be666c35eeae9165/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2146c613d12de8dc44bc26e50af55251fc7e4f9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2146c613d12de8dc44bc26e50af55251fc7e4f9c", "html_url": "https://github.com/rust-lang/rust/commit/2146c613d12de8dc44bc26e50af55251fc7e4f9c"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "680a0f5b2c03febe0f73663c7b7f476e469e1fb4", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fff2d95bf90514e66892ca9be666c35eeae9165/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fff2d95bf90514e66892ca9be666c35eeae9165/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=3fff2d95bf90514e66892ca9be666c35eeae9165", "patch": "@@ -836,7 +836,7 @@ pub unsafe fn transmute_copy<T, U>(src: &T) -> U {\n ///\n /// See the `discriminant` function in this module for more information.\n #[stable(feature = \"discriminant_value\", since = \"1.21.0\")]\n-pub struct Discriminant<T>(u64, PhantomData<*const T>);\n+pub struct Discriminant<T>(u64, PhantomData<fn() -> T>);\n \n // N.B. These trait implementations cannot be derived because we don't want any bounds on T.\n "}, {"sha": "f55a1c81463f77ab0a8a6dd7c1946ae3c0c33a4a", "filename": "src/libcore/tests/mem.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3fff2d95bf90514e66892ca9be666c35eeae9165/src%2Flibcore%2Ftests%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fff2d95bf90514e66892ca9be666c35eeae9165/src%2Flibcore%2Ftests%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fmem.rs?ref=3fff2d95bf90514e66892ca9be666c35eeae9165", "patch": "@@ -121,3 +121,19 @@ fn test_transmute() {\n     }\n }\n \n+#[test]\n+#[allow(dead_code)]\n+fn test_discriminant_send_sync() {\n+    enum Regular {\n+        A,\n+        B(i32)\n+    }\n+    enum NotSendSync {\n+        A(*const i32)\n+    }\n+\n+    fn is_send_sync<T: Send + Sync>() { }\n+\n+    is_send_sync::<Discriminant<Regular>>();\n+    is_send_sync::<Discriminant<NotSendSync>>();\n+}"}]}