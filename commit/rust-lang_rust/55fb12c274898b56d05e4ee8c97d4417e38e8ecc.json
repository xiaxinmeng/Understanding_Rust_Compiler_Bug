{"sha": "55fb12c274898b56d05e4ee8c97d4417e38e8ecc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZmIxMmMyNzQ4OThiNTZkMDVlNGVlOGM5N2Q0NDE3ZTM4ZThlY2M=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-04-11T18:11:51Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-04-11T23:02:14Z"}, "message": "Fix unsoundness bug in functions input references\n\nCheck that function input references are well formed", "tree": {"sha": "8300e8db9024c27fda2ed755b9dd53529c00c6d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8300e8db9024c27fda2ed755b9dd53529c00c6d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55fb12c274898b56d05e4ee8c97d4417e38e8ecc", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAlrOk/YACgkQiMlBzaHU\nZDI3ShAAqTPM0Cyd70tyI5/Xq1MnomTMvMl1G5G90xG+amxjfYU3dsWCbxlTkcWw\nsyRbFHGoztA8jVgPFiJ2h5YI/Mv8aud3zuEd24ErjG0+94dwT9Q1EZu1dA7UmBFK\n0jl7KKL+ZdBZTAPkZWxC+knDfuu3Te+TzI49kErRchnqlRL1HeZQvgF0KGdb6OOX\nIBbr5zXx0x3uA7NVfc6m7WSJRBGaI1o2kuAJqjhQMBfrF9EvgfoKmWFXStSQ6gOU\nYx0A8gYQ7c9lYEfdhSy1CQPADcJzygr/3+cMUaREfpxSOlwfve8EkEv47oDQse4z\nYWqcVJssiY2CPMY4NZ9Q05bSNoZX1VGYL/+BmVqFUvP7eq3w9sMnOax8gC+Sv9Lu\nXUevJzzG7tDt6VLAD2DAO+iXQCYw6ulGJeHxQrLhFngBUqG7OE/BDHytO0f/NSIg\naJ6D96vVhQNFE7yV2rNDnJkEEr2tSqWJDABkLPRzhu3vlcRhF+NLzimzrjlU7tAS\nYrjvxhyF7kPyVYXocm4xI10lMhFxocjBIvM/RcMG7Fft2wBsoZgD1Hq+pFRD4856\nWfUy/stSQQ2MqT0uX888kzp0iBOVyDbn8RVNgpQQJNXRF7cKsVDLwEva2LM/0ylP\ngZ2F7pm7K2tc2cC4KLxVRFHaRpC30aJVh3bjfvrRqD3lKvFFGyQ=\n=9Wcz\n-----END PGP SIGNATURE-----", "payload": "tree 8300e8db9024c27fda2ed755b9dd53529c00c6d0\nparent 0e2e1795714b50f764bac56e3ce857bbc85568be\nauthor Santiago Pastorino <spastorino@gmail.com> 1523470311 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1523487734 -0300\n\nFix unsoundness bug in functions input references\n\nCheck that function input references are well formed\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55fb12c274898b56d05e4ee8c97d4417e38e8ecc", "html_url": "https://github.com/rust-lang/rust/commit/55fb12c274898b56d05e4ee8c97d4417e38e8ecc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55fb12c274898b56d05e4ee8c97d4417e38e8ecc/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e2e1795714b50f764bac56e3ce857bbc85568be", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e2e1795714b50f764bac56e3ce857bbc85568be", "html_url": "https://github.com/rust-lang/rust/commit/0e2e1795714b50f764bac56e3ce857bbc85568be"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "faa382738b06f6fe071b0545ebed0533946a225e", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/55fb12c274898b56d05e4ee8c97d4417e38e8ecc/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55fb12c274898b56d05e4ee8c97d4417e38e8ecc/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=55fb12c274898b56d05e4ee8c97d4417e38e8ecc", "patch": "@@ -898,6 +898,11 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n                 let sig = self.normalize(&sig, term_location);\n                 self.check_call_dest(mir, term, &sig, destination, term_location);\n \n+                self.prove_predicates(\n+                    sig.inputs().iter().map(|ty| ty::Predicate::WellFormed(ty)),\n+                    term_location,\n+                );\n+\n                 // The ordinary liveness rules will ensure that all\n                 // regions in the type of the callee are live here. We\n                 // then further constrain the late-bound regions that"}, {"sha": "c6d14ace8b3440c5687c01afe225f903ced056b0", "filename": "src/test/ui/issue-48803.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/55fb12c274898b56d05e4ee8c97d4417e38e8ecc/src%2Ftest%2Fui%2Fissue-48803.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55fb12c274898b56d05e4ee8c97d4417e38e8ecc/src%2Ftest%2Fui%2Fissue-48803.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-48803.rs?ref=55fb12c274898b56d05e4ee8c97d4417e38e8ecc", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(nll)]\n+\n+fn flatten<'a, 'b, T>(x: &'a &'b T) -> &'a T {\n+    x\n+}\n+\n+fn main() {\n+    let mut x = \"original\";\n+    let y = &x;\n+    let z = &y;\n+    let w = flatten(z);\n+    x = \"modified\";\n+    //~^ ERROR cannot assign to `x` because it is borrowed [E0506]\n+    println!(\"{}\", w); // prints \"modified\"\n+}"}, {"sha": "b37e2c07d23d7894c40612d85d860880ecdb1e55", "filename": "src/test/ui/issue-48803.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/55fb12c274898b56d05e4ee8c97d4417e38e8ecc/src%2Ftest%2Fui%2Fissue-48803.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/55fb12c274898b56d05e4ee8c97d4417e38e8ecc/src%2Ftest%2Fui%2Fissue-48803.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-48803.stderr?ref=55fb12c274898b56d05e4ee8c97d4417e38e8ecc", "patch": "@@ -0,0 +1,15 @@\n+error[E0506]: cannot assign to `x` because it is borrowed\n+  --> $DIR/issue-48803.rs:22:5\n+   |\n+LL |     let y = &x;\n+   |             -- borrow of `x` occurs here\n+...\n+LL |     x = \"modified\";\n+   |     ^^^^^^^^^^^^^^ assignment to borrowed `x` occurs here\n+LL |     //~^ ERROR cannot assign to `x` because it is borrowed [E0506]\n+LL |     println!(\"{}\", w); // prints \"modified\"\n+   |                    - borrow later used here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0506`."}]}