{"sha": "3358e64b8e0a435d428f5303729b8563890abccd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNThlNjRiOGUwYTQzNWQ0MjhmNTMwMzcyOWI4NTYzODkwYWJjY2Q=", "commit": {"author": {"name": "Ivan Petkov", "email": "ivanppetkov@gmail.com", "date": "2014-12-26T19:07:24Z"}, "committer": {"name": "Ivan Petkov", "email": "ivanppetkov@gmail.com", "date": "2014-12-26T19:07:24Z"}, "message": "Derive Clone, PartialEq, and Eq for std::io::{FileAccess, FileMode}\n\n* Both enums already derived `Copy`, but storing them in any\n  struct/container would prevent implementing `Clone` for said\n  struct/container even though they should be clonable.\n* Also add PartialEq and Eq for good measure.", "tree": {"sha": "a60a1be688c7926f4c32edd21022a33238845d6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a60a1be688c7926f4c32edd21022a33238845d6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3358e64b8e0a435d428f5303729b8563890abccd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3358e64b8e0a435d428f5303729b8563890abccd", "html_url": "https://github.com/rust-lang/rust/commit/3358e64b8e0a435d428f5303729b8563890abccd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3358e64b8e0a435d428f5303729b8563890abccd/comments", "author": {"login": "ipetkov", "id": 1638690, "node_id": "MDQ6VXNlcjE2Mzg2OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1638690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ipetkov", "html_url": "https://github.com/ipetkov", "followers_url": "https://api.github.com/users/ipetkov/followers", "following_url": "https://api.github.com/users/ipetkov/following{/other_user}", "gists_url": "https://api.github.com/users/ipetkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ipetkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ipetkov/subscriptions", "organizations_url": "https://api.github.com/users/ipetkov/orgs", "repos_url": "https://api.github.com/users/ipetkov/repos", "events_url": "https://api.github.com/users/ipetkov/events{/privacy}", "received_events_url": "https://api.github.com/users/ipetkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ipetkov", "id": 1638690, "node_id": "MDQ6VXNlcjE2Mzg2OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1638690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ipetkov", "html_url": "https://github.com/ipetkov", "followers_url": "https://api.github.com/users/ipetkov/followers", "following_url": "https://api.github.com/users/ipetkov/following{/other_user}", "gists_url": "https://api.github.com/users/ipetkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ipetkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ipetkov/subscriptions", "organizations_url": "https://api.github.com/users/ipetkov/orgs", "repos_url": "https://api.github.com/users/ipetkov/repos", "events_url": "https://api.github.com/users/ipetkov/events{/privacy}", "received_events_url": "https://api.github.com/users/ipetkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd3cf4c05fdec03ab22df27f33191f4851e18cc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd3cf4c05fdec03ab22df27f33191f4851e18cc9", "html_url": "https://github.com/rust-lang/rust/commit/bd3cf4c05fdec03ab22df27f33191f4851e18cc9"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "31eddb42dfc44754b73f9000122c29c519c2ca8d", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3358e64b8e0a435d428f5303729b8563890abccd/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3358e64b8e0a435d428f5303729b8563890abccd/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=3358e64b8e0a435d428f5303729b8563890abccd", "patch": "@@ -1682,7 +1682,7 @@ pub fn standard_error(kind: IoErrorKind) -> IoError {\n /// A mode specifies how a file should be opened or created. These modes are\n /// passed to `File::open_mode` and are used to control where the file is\n /// positioned when it is initially opened.\n-#[deriving(Copy)]\n+#[deriving(Copy, Clone, PartialEq, Eq)]\n pub enum FileMode {\n     /// Opens a file positioned at the beginning.\n     Open,\n@@ -1694,7 +1694,7 @@ pub enum FileMode {\n \n /// Access permissions with which the file should be opened. `File`s\n /// opened with `Read` will return an error if written to.\n-#[deriving(Copy)]\n+#[deriving(Copy, Clone, PartialEq, Eq)]\n pub enum FileAccess {\n     /// Read-only access, requests to write will result in an error\n     Read,"}]}