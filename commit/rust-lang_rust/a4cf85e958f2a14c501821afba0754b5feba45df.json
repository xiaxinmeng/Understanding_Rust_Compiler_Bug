{"sha": "a4cf85e958f2a14c501821afba0754b5feba45df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0Y2Y4NWU5NThmMmExNGM1MDE4MjFhZmJhMDc1NGI1ZmViYTQ1ZGY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-29T09:18:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-29T09:18:10Z"}, "message": "Rollup merge of #62023 - RalfJung:miri-toolstate, r=kennytm\n\npublish_toolstate: don't use 'new' from inside the loop\n\nI think I made a mistake in https://github.com/rust-lang/rust/pull/61938 by using `new` outside the inner loop. This PR fixes that.\n\nHowever, no issue got created at all for https://github.com/rust-lang/rust/pull/62003#issuecomment-504356964, and I don't know why that is.   The script should be [triggered by Traivs](https://github.com/rust-lang/rust/blob/56a12b2ad058f22f1ef090713df15598525ba4a4/.travis.yml#L240), and I can find no trace of that in [the build log](https://travis-ci.com/rust-lang/rust/jobs/209880042).", "tree": {"sha": "ee2c9c682250b1015ac2e7fd7601660319541bbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee2c9c682250b1015ac2e7fd7601660319541bbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4cf85e958f2a14c501821afba0754b5feba45df", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdFyzSCRBK7hj4Ov3rIwAAdHIIAJwoMxh53R5N2IxIqc+TbyXT\nrhXncpHXWWV7zq1Dc++wdXI1kuHPqCaZ1DsS07p0WFCqaVgVcuvhlBPzBNmEMdfJ\nMM4jwKXZyU8/oIAeppgn8fe/6tAnekjOuHSm3gd8stXADSEt2AUHxTb3unuRzkSf\nxVAaK9HH9Qbo+VGcbpNPQAOk3sRoDdAQQrpVjuksZad2MXjldmXwiOizj8Z6movJ\n5lWMZ8yOMcFGHGbHeCfLLzyHPX1ab0BYhRXaFk8h0tG/tXOGqQ9/M/ods1iZ1jk2\nRCc0m8lnOoNpeo6QVS6H1HHAWT5Yb64po23aQsrf8bHzeBdOQSK2sT5w5YTLnCc=\n=ZJ7E\n-----END PGP SIGNATURE-----\n", "payload": "tree ee2c9c682250b1015ac2e7fd7601660319541bbe\nparent 2238a94b96380846353821c0f8d5bb1300727e38\nparent 02863a3554a1b0aea93871bbfb7a92738cd2fe89\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1561799890 +0200\ncommitter GitHub <noreply@github.com> 1561799890 +0200\n\nRollup merge of #62023 - RalfJung:miri-toolstate, r=kennytm\n\npublish_toolstate: don't use 'new' from inside the loop\n\nI think I made a mistake in https://github.com/rust-lang/rust/pull/61938 by using `new` outside the inner loop. This PR fixes that.\n\nHowever, no issue got created at all for https://github.com/rust-lang/rust/pull/62003#issuecomment-504356964, and I don't know why that is.   The script should be [triggered by Traivs](https://github.com/rust-lang/rust/blob/56a12b2ad058f22f1ef090713df15598525ba4a4/.travis.yml#L240), and I can find no trace of that in [the build log](https://travis-ci.com/rust-lang/rust/jobs/209880042).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4cf85e958f2a14c501821afba0754b5feba45df", "html_url": "https://github.com/rust-lang/rust/commit/a4cf85e958f2a14c501821afba0754b5feba45df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4cf85e958f2a14c501821afba0754b5feba45df/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2238a94b96380846353821c0f8d5bb1300727e38", "url": "https://api.github.com/repos/rust-lang/rust/commits/2238a94b96380846353821c0f8d5bb1300727e38", "html_url": "https://github.com/rust-lang/rust/commit/2238a94b96380846353821c0f8d5bb1300727e38"}, {"sha": "02863a3554a1b0aea93871bbfb7a92738cd2fe89", "url": "https://api.github.com/repos/rust-lang/rust/commits/02863a3554a1b0aea93871bbfb7a92738cd2fe89", "html_url": "https://github.com/rust-lang/rust/commit/02863a3554a1b0aea93871bbfb7a92738cd2fe89"}], "stats": {"total": 61, "additions": 33, "deletions": 28}, "files": [{"sha": "d5dff1dcae0d5c68e691a1153353ebae239e1917", "filename": "src/tools/publish_toolstate.py", "status": "modified", "additions": 33, "deletions": 28, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/a4cf85e958f2a14c501821afba0754b5feba45df/src%2Ftools%2Fpublish_toolstate.py", "raw_url": "https://github.com/rust-lang/rust/raw/a4cf85e958f2a14c501821afba0754b5feba45df/src%2Ftools%2Fpublish_toolstate.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fpublish_toolstate.py?ref=a4cf85e958f2a14c501821afba0754b5feba45df", "patch": "@@ -72,32 +72,33 @@ def issue(\n ):\n     # Open an issue about the toolstate failure.\n     assignees = [x.strip() for x in maintainers.split('@') if x != '']\n-    assignees.append(relevant_pr_user)\n     if status == 'test-fail':\n         status_description = 'has failing tests'\n     else:\n         status_description = 'no longer builds'\n+    request = json.dumps({\n+        'body': maybe_delink(textwrap.dedent('''\\\n+        Hello, this is your friendly neighborhood mergebot.\n+        After merging PR {}, I observed that the tool {} {}.\n+        A follow-up PR to the repository {} is needed to fix the fallout.\n+\n+        cc @{}, do you think you would have time to do the follow-up work?\n+        If so, that would be great!\n+\n+        cc @{}, the PR reviewer, and @rust-lang/compiler -- nominating for prioritization.\n+\n+        ''').format(\n+            relevant_pr_number, tool, status_description,\n+            REPOS.get(tool), relevant_pr_user, pr_reviewer\n+        )),\n+        'title': '`{}` no longer builds after {}'.format(tool, relevant_pr_number),\n+        'assignees': assignees,\n+        'labels': ['T-compiler', 'I-nominated'],\n+    })\n+    print(\"Creating issue:\\n{}\".format(request))\n     response = urllib2.urlopen(urllib2.Request(\n         gh_url(),\n-        json.dumps({\n-            'body': maybe_delink(textwrap.dedent('''\\\n-            Hello, this is your friendly neighborhood mergebot.\n-            After merging PR {}, I observed that the tool {} {}.\n-            A follow-up PR to the repository {} is needed to fix the fallout.\n-\n-            cc @{}, do you think you would have time to do the follow-up work?\n-            If so, that would be great!\n-\n-            cc @{}, the PR reviewer, and @rust-lang/compiler -- nominating for prioritization.\n-\n-            ''').format(\n-                relevant_pr_number, tool, status_description,\n-                REPOS.get(tool), relevant_pr_user, pr_reviewer\n-            )),\n-            'title': '`{}` no longer builds after {}'.format(tool, relevant_pr_number),\n-            'assignees': assignees,\n-            'labels': ['T-compiler', 'I-nominated'],\n-        }),\n+        request,\n         {\n             'Authorization': 'token ' + github_token,\n             'Content-Type': 'application/json',\n@@ -135,13 +136,13 @@ def update_latest(\n         for status in latest:\n             tool = status['tool']\n             changed = False\n-            create_issue = False\n+            create_issue_for_status = None # set to the status that caused the issue\n \n             for os, s in current_status.items():\n                 old = status[os]\n                 new = s.get(tool, old)\n                 status[os] = new\n-                if new > old:\n+                if new > old: # comparing the strings, but they are ordered appropriately!\n                     # things got fixed or at least the status quo improved\n                     changed = True\n                     message += '\ud83c\udf89 {} on {}: {} \u2192 {} (cc {}, @rust-lang/infra).\\n' \\\n@@ -156,20 +157,24 @@ def update_latest(\n                     # Most tools only create issues for build failures.\n                     # Other failures can be spurious.\n                     if new == 'build-fail' or (tool == 'miri' and new == 'test-fail'):\n-                        create_issue = True\n+                        create_issue_for_status = new\n \n-            if create_issue:\n+            if create_issue_for_status is not None:\n                 try:\n                     issue(\n-                        tool, new, MAINTAINERS.get(tool, ''),\n+                        tool, create_issue_for_status, MAINTAINERS.get(tool, ''),\n                         relevant_pr_number, relevant_pr_user, pr_reviewer,\n                     )\n-                except IOError as e:\n+                except urllib2.HTTPError as e:\n                     # network errors will simply end up not creating an issue, but that's better\n                     # than failing the entire build job\n-                    print(\"I/O error: {0}\".format(e))\n+                    print(\"HTTPError when creating issue for status regression: {0}\\n{1}\"\n+                          .format(e, e.read()))\n+                except IOError as e:\n+                    print(\"I/O error when creating issue for status regression: {0}\".format(e))\n                 except:\n-                    print(\"Unexpected error: {0}\".format(sys.exc_info()[0]))\n+                    print(\"Unexpected error when creating issue for status regression: {0}\"\n+                          .format(sys.exc_info()[0]))\n                     raise\n \n             if changed:"}]}