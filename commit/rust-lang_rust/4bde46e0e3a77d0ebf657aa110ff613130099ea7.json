{"sha": "4bde46e0e3a77d0ebf657aa110ff613130099ea7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZGU0NmUwZTNhNzdkMGViZjY1N2FhMTEwZmY2MTMxMzAwOTllYTc=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-04T23:49:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-04T23:49:32Z"}, "message": "Rollup merge of #71587 - matthewjasper:promoted-move-errors, r=nikomatsakis\n\nReport cannot move errors in promoted MIR\n\nCloses #70934", "tree": {"sha": "c4e7cb4f4919c7757f4a6afa79a312124a34e714", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4e7cb4f4919c7757f4a6afa79a312124a34e714"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bde46e0e3a77d0ebf657aa110ff613130099ea7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJesKoNCRBK7hj4Ov3rIwAAdHIIAEbN+NgrhWjFBUttVj7rxPhO\n7SIZxE3J+4fxVB8AapV6TTbIn8fhB6F2mFGkTOhQxaEJFmFLrk+Rjfubw8qX8bRI\nvu5k+U+dBLreJ0/QpFYYOkrnpGD7yhccUeKIom9CdehYZrWb6tVjRBdMVErb3Kl5\ncwWGztUBzNQhHKLaRKyHNIBZymXRl64hj9JHMlJYnPiyvGIRymw2NCjADqJbtW65\nH+C1jjx19cl6lUm8fcyqfMpUdFM1vUsMcQa1Dt6UqLI/zv+w90pFQCUtyYQ4glzx\niJ1AV9+YmBlzccMex570W2TAf6TUIg391AnoKjExROY/dCmlDb5j/EuooP2nO64=\n=T9BX\n-----END PGP SIGNATURE-----\n", "payload": "tree c4e7cb4f4919c7757f4a6afa79a312124a34e714\nparent 2454a68cfbb63aa7b8e09fe05114d5f98b2f9740\nparent 34eb2c1d4ff61693ab45863ee0f9ee298148a1ab\nauthor Dylan DPC <dylan.dpc@gmail.com> 1588636172 +0200\ncommitter GitHub <noreply@github.com> 1588636172 +0200\n\nRollup merge of #71587 - matthewjasper:promoted-move-errors, r=nikomatsakis\n\nReport cannot move errors in promoted MIR\n\nCloses #70934\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bde46e0e3a77d0ebf657aa110ff613130099ea7", "html_url": "https://github.com/rust-lang/rust/commit/4bde46e0e3a77d0ebf657aa110ff613130099ea7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bde46e0e3a77d0ebf657aa110ff613130099ea7/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2454a68cfbb63aa7b8e09fe05114d5f98b2f9740", "url": "https://api.github.com/repos/rust-lang/rust/commits/2454a68cfbb63aa7b8e09fe05114d5f98b2f9740", "html_url": "https://github.com/rust-lang/rust/commit/2454a68cfbb63aa7b8e09fe05114d5f98b2f9740"}, {"sha": "34eb2c1d4ff61693ab45863ee0f9ee298148a1ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/34eb2c1d4ff61693ab45863ee0f9ee298148a1ab", "html_url": "https://github.com/rust-lang/rust/commit/34eb2c1d4ff61693ab45863ee0f9ee298148a1ab"}], "stats": {"total": 99, "additions": 93, "deletions": 6}, "files": [{"sha": "b19d035ab04c079e8e5e5b946592008f34035d73", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 42, "deletions": 6, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/4bde46e0e3a77d0ebf657aa110ff613130099ea7/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bde46e0e3a77d0ebf657aa110ff613130099ea7/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=4bde46e0e3a77d0ebf657aa110ff613130099ea7", "patch": "@@ -180,11 +180,14 @@ fn do_mir_borrowck<'a, 'tcx>(\n     let location_table = &LocationTable::new(&body);\n \n     let mut errors_buffer = Vec::new();\n-    let (move_data, move_errors): (MoveData<'tcx>, Option<Vec<(Place<'tcx>, MoveError<'tcx>)>>) =\n+    let (move_data, move_errors): (MoveData<'tcx>, Vec<(Place<'tcx>, MoveError<'tcx>)>) =\n         match MoveData::gather_moves(&body, tcx, param_env) {\n-            Ok(move_data) => (move_data, None),\n-            Err((move_data, move_errors)) => (move_data, Some(move_errors)),\n+            Ok(move_data) => (move_data, Vec::new()),\n+            Err((move_data, move_errors)) => (move_data, move_errors),\n         };\n+    let promoted_errors = promoted\n+        .iter_enumerated()\n+        .map(|(idx, body)| (idx, MoveData::gather_moves(&body, tcx, param_env)));\n \n     let mdpe = MoveDataParamEnv { move_data, param_env };\n \n@@ -264,6 +267,41 @@ fn do_mir_borrowck<'a, 'tcx>(\n         _ => true,\n     };\n \n+    for (idx, move_data_results) in promoted_errors {\n+        let promoted_body = &promoted[idx];\n+        let dominators = promoted_body.dominators();\n+\n+        if let Err((move_data, move_errors)) = move_data_results {\n+            let mut promoted_mbcx = MirBorrowckCtxt {\n+                infcx,\n+                body: promoted_body,\n+                mir_def_id: def_id.to_def_id(),\n+                move_data: &move_data,\n+                location_table: &LocationTable::new(promoted_body),\n+                movable_generator,\n+                locals_are_invalidated_at_exit,\n+                access_place_error_reported: Default::default(),\n+                reservation_error_reported: Default::default(),\n+                reservation_warnings: Default::default(),\n+                move_error_reported: BTreeMap::new(),\n+                uninitialized_error_reported: Default::default(),\n+                errors_buffer,\n+                regioncx: regioncx.clone(),\n+                used_mut: Default::default(),\n+                used_mut_upvars: SmallVec::new(),\n+                borrow_set: borrow_set.clone(),\n+                dominators,\n+                upvars: Vec::new(),\n+                local_names: IndexVec::from_elem(None, &promoted_body.local_decls),\n+                region_names: RefCell::default(),\n+                next_region_name: RefCell::new(1),\n+                polonius_output: None,\n+            };\n+            promoted_mbcx.report_move_errors(move_errors);\n+            errors_buffer = promoted_mbcx.errors_buffer;\n+        };\n+    }\n+\n     let dominators = body.dominators();\n \n     let mut mbcx = MirBorrowckCtxt {\n@@ -301,9 +339,7 @@ fn do_mir_borrowck<'a, 'tcx>(\n         borrows: flow_borrows,\n     };\n \n-    if let Some(errors) = move_errors {\n-        mbcx.report_move_errors(errors);\n-    }\n+    mbcx.report_move_errors(move_errors);\n \n     dataflow::visit_results(\n         &body,"}, {"sha": "13da34f3922c2516ef0c8baec99da3c85b849c93", "filename": "src/test/ui/borrowck/move-error-in-promoted-2.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4bde46e0e3a77d0ebf657aa110ff613130099ea7/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-in-promoted-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bde46e0e3a77d0ebf657aa110ff613130099ea7/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-in-promoted-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-in-promoted-2.rs?ref=4bde46e0e3a77d0ebf657aa110ff613130099ea7", "patch": "@@ -0,0 +1,10 @@\n+// Regression test for #70934\n+\n+struct S;\n+\n+fn foo() {\n+    &([S][0],);\n+    //~^ ERROR cannot move out of type `[S; 1]`\n+}\n+\n+fn main() {}"}, {"sha": "38dba94bdd41b53a133db1f586fe4833574d7844", "filename": "src/test/ui/borrowck/move-error-in-promoted-2.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4bde46e0e3a77d0ebf657aa110ff613130099ea7/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-in-promoted-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bde46e0e3a77d0ebf657aa110ff613130099ea7/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-in-promoted-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-in-promoted-2.stderr?ref=4bde46e0e3a77d0ebf657aa110ff613130099ea7", "patch": "@@ -0,0 +1,12 @@\n+error[E0508]: cannot move out of type `[S; 1]`, a non-copy array\n+  --> $DIR/move-error-in-promoted-2.rs:6:7\n+   |\n+LL |     &([S][0],);\n+   |       ^^^^^^\n+   |       |\n+   |       cannot move out of here\n+   |       move occurs because value has type `S`, which does not implement the `Copy` trait\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0508`."}, {"sha": "b94db6451312390ec185701c857c287881b43a60", "filename": "src/test/ui/borrowck/move-error-in-promoted.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4bde46e0e3a77d0ebf657aa110ff613130099ea7/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-in-promoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bde46e0e3a77d0ebf657aa110ff613130099ea7/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-in-promoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-in-promoted.rs?ref=4bde46e0e3a77d0ebf657aa110ff613130099ea7", "patch": "@@ -0,0 +1,17 @@\n+// Regression test for #70934\n+\n+fn f() {\n+    const C: [S2; 1] = [S2];\n+    let _ = S1(C[0]).clone();\n+    //~^ ERROR cannot move out of type `[S2; 1]`\n+}\n+\n+#[derive(Clone)]\n+struct S1(S2);\n+\n+#[derive(Clone)]\n+struct S2;\n+\n+fn main() {\n+    f();\n+}"}, {"sha": "a4432e38da0e457141c36fc4667c2da82b86e8dd", "filename": "src/test/ui/borrowck/move-error-in-promoted.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4bde46e0e3a77d0ebf657aa110ff613130099ea7/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-in-promoted.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bde46e0e3a77d0ebf657aa110ff613130099ea7/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-in-promoted.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-in-promoted.stderr?ref=4bde46e0e3a77d0ebf657aa110ff613130099ea7", "patch": "@@ -0,0 +1,12 @@\n+error[E0508]: cannot move out of type `[S2; 1]`, a non-copy array\n+  --> $DIR/move-error-in-promoted.rs:5:16\n+   |\n+LL |     let _ = S1(C[0]).clone();\n+   |                ^^^^\n+   |                |\n+   |                cannot move out of here\n+   |                move occurs because value has type `S2`, which does not implement the `Copy` trait\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0508`."}]}