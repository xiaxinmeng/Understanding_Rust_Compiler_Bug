{"sha": "bd176ee591cd391835bfbcb3409a743bac2128ca", "node_id": "C_kwDOAAsO6NoAKGJkMTc2ZWU1OTFjZDM5MTgzNWJmYmNiMzQwOWE3NDNiYWMyMTI4Y2E", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-02-01T17:44:48Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-02-14T20:22:10Z"}, "message": "Make removal suggestion not verbose", "tree": {"sha": "43ff75755e5c815c5085ed330a14c1e18b6fc297", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43ff75755e5c815c5085ed330a14c1e18b6fc297"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd176ee591cd391835bfbcb3409a743bac2128ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd176ee591cd391835bfbcb3409a743bac2128ca", "html_url": "https://github.com/rust-lang/rust/commit/bd176ee591cd391835bfbcb3409a743bac2128ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd176ee591cd391835bfbcb3409a743bac2128ca/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb", "html_url": "https://github.com/rust-lang/rust/commit/5d63e10318ea76efc4d4d6a33cf1f74c9839adfb"}], "stats": {"total": 332, "additions": 136, "deletions": 196}, "files": [{"sha": "005225b665c3a51bda48e72aebe20b037d0b334d", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -1167,7 +1167,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 Some(format!(\"provide the argument{}\", if plural { \"s\" } else { \"\" }))\n             }\n             SuggestionText::Remove(plural) => {\n-                err.multipart_suggestion_verbose(\n+                err.multipart_suggestion(\n                     &format!(\"remove the extra argument{}\", if plural { \"s\" } else { \"\" }),\n                     suggestions,\n                     Applicability::HasPlaceholders,"}, {"sha": "d1b9d7a40b47b7cb245812660d498ff4d187f8a4", "filename": "tests/ui/alloc-error/alloc-error-handler-bad-signature-3.stderr", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Falloc-error%2Falloc-error-handler-bad-signature-3.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -7,20 +7,17 @@ LL |   fn oom() -> ! {\n    |  _-^^^^^^^^^^^^\n LL | |     loop {}\n LL | | }\n-   | |_- unexpected argument of type `core::alloc::Layout`\n+   | | -\n+   | | |\n+   | |_unexpected argument of type `core::alloc::Layout`\n+   |   help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/alloc-error-handler-bad-signature-3.rs:10:4\n    |\n LL | fn oom() -> ! {\n    |    ^^^\n    = note: this error originates in the attribute macro `alloc_error_handler` (in Nightly builds, run with -Z macro-backtrace for more info)\n-help: remove the extra argument\n-   |\n-LL - fn oom() -> ! {\n-LL -     loop {}\n-LL - }\n-   |\n \n error: aborting due to previous error\n "}, {"sha": "c74186285f9f08560355849adce977f599333491", "filename": "tests/ui/argument-suggestions/basic.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fargument-suggestions%2Fbasic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fargument-suggestions%2Fbasic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fargument-suggestions%2Fbasic.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -16,18 +16,16 @@ error[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/basic.rs:21:5\n    |\n LL |     extra(\"\");\n-   |     ^^^^^ -- unexpected argument of type `&'static str`\n+   |     ^^^^^ --\n+   |           |\n+   |           unexpected argument of type `&'static str`\n+   |           help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/basic.rs:14:4\n    |\n LL | fn extra() {}\n    |    ^^^^^\n-help: remove the extra argument\n-   |\n-LL -     extra(\"\");\n-LL +     extra();\n-   |\n \n error[E0061]: this function takes 1 argument but 0 arguments were supplied\n   --> $DIR/basic.rs:22:5"}, {"sha": "ff795b507f218db0eb7e2c0387852f7ec517f6f1", "filename": "tests/ui/argument-suggestions/exotic-calls.stderr", "status": "modified", "additions": 16, "deletions": 24, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fargument-suggestions%2Fexotic-calls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fargument-suggestions%2Fexotic-calls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fargument-suggestions%2Fexotic-calls.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -2,69 +2,61 @@ error[E0057]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/exotic-calls.rs:2:5\n    |\n LL |     t(1i32);\n-   |     ^ ---- unexpected argument of type `i32`\n+   |     ^ ----\n+   |       |\n+   |       unexpected argument of type `i32`\n+   |       help: remove the extra argument\n    |\n note: callable defined here\n   --> $DIR/exotic-calls.rs:1:11\n    |\n LL | fn foo<T: Fn()>(t: T) {\n    |           ^^^^\n-help: remove the extra argument\n-   |\n-LL -     t(1i32);\n-LL +     t();\n-   |\n \n error[E0057]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/exotic-calls.rs:7:5\n    |\n LL |     t(1i32);\n-   |     ^ ---- unexpected argument of type `i32`\n+   |     ^ ----\n+   |       |\n+   |       unexpected argument of type `i32`\n+   |       help: remove the extra argument\n    |\n note: type parameter defined here\n   --> $DIR/exotic-calls.rs:6:11\n    |\n LL | fn bar(t: impl Fn()) {\n    |           ^^^^^^^^^\n-help: remove the extra argument\n-   |\n-LL -     t(1i32);\n-LL +     t();\n-   |\n \n error[E0057]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/exotic-calls.rs:16:5\n    |\n LL |     baz()(1i32)\n-   |     ^^^^^ ---- unexpected argument of type `i32`\n+   |     ^^^^^ ----\n+   |           |\n+   |           unexpected argument of type `i32`\n+   |           help: remove the extra argument\n    |\n note: opaque type defined here\n   --> $DIR/exotic-calls.rs:11:13\n    |\n LL | fn baz() -> impl Fn() {\n    |             ^^^^^^^^^\n-help: remove the extra argument\n-   |\n-LL -     baz()(1i32)\n-LL +     baz()()\n-   |\n \n error[E0057]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/exotic-calls.rs:22:5\n    |\n LL |     x(1i32);\n-   |     ^ ---- unexpected argument of type `i32`\n+   |     ^ ----\n+   |       |\n+   |       unexpected argument of type `i32`\n+   |       help: remove the extra argument\n    |\n note: closure defined here\n   --> $DIR/exotic-calls.rs:21:13\n    |\n LL |     let x = || {};\n    |             ^^\n-help: remove the extra argument\n-   |\n-LL -     x(1i32);\n-LL +     x();\n-   |\n \n error: aborting due to 4 previous errors\n "}, {"sha": "0911685b4280a3e2dd65f497182b7f7ecd7e3e21", "filename": "tests/ui/argument-suggestions/extra_arguments.stderr", "status": "modified", "additions": 55, "deletions": 74, "changes": 129, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fargument-suggestions%2Fextra_arguments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fargument-suggestions%2Fextra_arguments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fargument-suggestions%2Fextra_arguments.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -2,52 +2,46 @@ error[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/extra_arguments.rs:7:3\n    |\n LL |   empty(\"\");\n-   |   ^^^^^ -- unexpected argument of type `&'static str`\n+   |   ^^^^^ --\n+   |         |\n+   |         unexpected argument of type `&'static str`\n+   |         help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:1:4\n    |\n LL | fn empty() {}\n    |    ^^^^^\n-help: remove the extra argument\n-   |\n-LL -   empty(\"\");\n-LL +   empty();\n-   |\n \n error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/extra_arguments.rs:9:3\n    |\n LL |   one_arg(1, 1);\n-   |   ^^^^^^^    - unexpected argument of type `{integer}`\n+   |   ^^^^^^^  ---\n+   |            | |\n+   |            | unexpected argument of type `{integer}`\n+   |            help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:2:4\n    |\n LL | fn one_arg(_a: i32) {}\n    |    ^^^^^^^ -------\n-help: remove the extra argument\n-   |\n-LL -   one_arg(1, 1);\n-LL +   one_arg(1);\n-   |\n \n error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/extra_arguments.rs:10:3\n    |\n LL |   one_arg(1, \"\");\n-   |   ^^^^^^^    -- unexpected argument of type `&'static str`\n+   |   ^^^^^^^  ----\n+   |            | |\n+   |            | unexpected argument of type `&'static str`\n+   |            help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:2:4\n    |\n LL | fn one_arg(_a: i32) {}\n    |    ^^^^^^^ -------\n-help: remove the extra argument\n-   |\n-LL -   one_arg(1, \"\");\n-LL +   one_arg(1);\n-   |\n \n error[E0061]: this function takes 1 argument but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:11:3\n@@ -72,69 +66,61 @@ error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:13:3\n    |\n LL |   two_arg_same(1, 1, 1);\n-   |   ^^^^^^^^^^^^       - unexpected argument of type `{integer}`\n+   |   ^^^^^^^^^^^^     ---\n+   |                    | |\n+   |                    | unexpected argument of type `{integer}`\n+   |                    help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:3:4\n    |\n LL | fn two_arg_same(_a: i32, _b: i32) {}\n    |    ^^^^^^^^^^^^ -------  -------\n-help: remove the extra argument\n-   |\n-LL -   two_arg_same(1, 1, 1);\n-LL +   two_arg_same(1, 1);\n-   |\n \n error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:14:3\n    |\n LL |   two_arg_same(1, 1, 1.0);\n-   |   ^^^^^^^^^^^^       --- unexpected argument of type `{float}`\n+   |   ^^^^^^^^^^^^     -----\n+   |                    | |\n+   |                    | unexpected argument of type `{float}`\n+   |                    help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:3:4\n    |\n LL | fn two_arg_same(_a: i32, _b: i32) {}\n    |    ^^^^^^^^^^^^ -------  -------\n-help: remove the extra argument\n-   |\n-LL -   two_arg_same(1, 1, 1.0);\n-LL +   two_arg_same(1, 1);\n-   |\n \n error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:16:3\n    |\n LL |   two_arg_diff(1, 1, \"\");\n-   |   ^^^^^^^^^^^^    - unexpected argument of type `{integer}`\n+   |   ^^^^^^^^^^^^  ---\n+   |                 | |\n+   |                 | unexpected argument of type `{integer}`\n+   |                 help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:4:4\n    |\n LL | fn two_arg_diff(_a: i32, _b: &str) {}\n    |    ^^^^^^^^^^^^ -------  --------\n-help: remove the extra argument\n-   |\n-LL -   two_arg_diff(1, 1, \"\");\n-LL +   two_arg_diff(1, \"\");\n-   |\n \n error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:17:3\n    |\n LL |   two_arg_diff(1, \"\", \"\");\n-   |   ^^^^^^^^^^^^        -- unexpected argument of type `&'static str`\n+   |   ^^^^^^^^^^^^      ----\n+   |                     | |\n+   |                     | unexpected argument of type `&'static str`\n+   |                     help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:4:4\n    |\n LL | fn two_arg_diff(_a: i32, _b: &str) {}\n    |    ^^^^^^^^^^^^ -------  --------\n-help: remove the extra argument\n-   |\n-LL -   two_arg_diff(1, \"\", \"\");\n-LL +   two_arg_diff(1, \"\");\n-   |\n \n error[E0061]: this function takes 2 arguments but 4 arguments were supplied\n   --> $DIR/extra_arguments.rs:18:3\n@@ -178,75 +164,70 @@ error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:22:3\n    |\n LL |   two_arg_same(1, 1,     \"\");\n-   |   ^^^^^^^^^^^^           -- unexpected argument of type `&'static str`\n+   |   ^^^^^^^^^^^^     --------\n+   |                    |     |\n+   |                    |     unexpected argument of type `&'static str`\n+   |                    help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:3:4\n    |\n LL | fn two_arg_same(_a: i32, _b: i32) {}\n    |    ^^^^^^^^^^^^ -------  -------\n-help: remove the extra argument\n-   |\n-LL -   two_arg_same(1, 1,     \"\");\n-LL +   two_arg_same(1, 1);\n-   |\n \n error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:23:3\n    |\n LL |   two_arg_diff(1, 1,     \"\");\n-   |   ^^^^^^^^^^^^    - unexpected argument of type `{integer}`\n+   |   ^^^^^^^^^^^^  ---\n+   |                 | |\n+   |                 | unexpected argument of type `{integer}`\n+   |                 help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:4:4\n    |\n LL | fn two_arg_diff(_a: i32, _b: &str) {}\n    |    ^^^^^^^^^^^^ -------  --------\n-help: remove the extra argument\n-   |\n-LL -   two_arg_diff(1, 1,     \"\");\n-LL +   two_arg_diff(1,     \"\");\n-   |\n \n error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:24:3\n    |\n-LL |   two_arg_same(\n-   |   ^^^^^^^^^^^^\n-...\n-LL |     \"\"\n-   |     -- unexpected argument of type `&'static str`\n+LL |     two_arg_same(\n+   |     ^^^^^^^^^^^^\n+LL |       1,\n+LL |       1,\n+   |  ______-\n+LL | |     \"\"\n+   | |     --\n+   | |_____||\n+   |       |help: remove the extra argument\n+   |       unexpected argument of type `&'static str`\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:3:4\n    |\n LL | fn two_arg_same(_a: i32, _b: i32) {}\n    |    ^^^^^^^^^^^^ -------  -------\n-help: remove the extra argument\n-   |\n-LL -     1,\n-LL +     1\n-   |\n \n error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/extra_arguments.rs:30:3\n    |\n-LL |   two_arg_diff(\n-   |   ^^^^^^^^^^^^\n-LL |     1,\n-LL |     1,\n-   |     - unexpected argument of type `{integer}`\n+LL |     two_arg_diff(\n+   |     ^^^^^^^^^^^^\n+LL |       1,\n+   |  ______-\n+LL | |     1,\n+   | |     -\n+   | |     |\n+   | |_____unexpected argument of type `{integer}`\n+   |       help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/extra_arguments.rs:4:4\n    |\n LL | fn two_arg_diff(_a: i32, _b: &str) {}\n    |    ^^^^^^^^^^^^ -------  --------\n-help: remove the extra argument\n-   |\n-LL -     1,\n-LL +     1,\n-   |\n \n error: aborting due to 14 previous errors\n "}, {"sha": "9b0cf069824a6155691a9e29dff53cae8cab205c", "filename": "tests/ui/error-codes/E0057.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Ferror-codes%2FE0057.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Ferror-codes%2FE0057.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0057.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -18,18 +18,16 @@ error[E0057]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/E0057.rs:5:13\n    |\n LL |     let c = f(2, 3);\n-   |             ^    - unexpected argument of type `{integer}`\n+   |             ^  ---\n+   |                | |\n+   |                | unexpected argument of type `{integer}`\n+   |                help: remove the extra argument\n    |\n note: closure defined here\n   --> $DIR/E0057.rs:2:13\n    |\n LL |     let f = |x| x * 3;\n    |             ^^^\n-help: remove the extra argument\n-   |\n-LL -     let c = f(2, 3);\n-LL +     let c = f(2);\n-   |\n \n error: aborting due to 2 previous errors\n "}, {"sha": "6db29bc61b12aa716d19e2060a9371963d9d96b4", "filename": "tests/ui/issues/issue-16939.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fissues%2Fissue-16939.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fissues%2Fissue-16939.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-16939.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -2,18 +2,16 @@ error[E0057]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/issue-16939.rs:5:9\n    |\n LL |     |t| f(t);\n-   |         ^ - unexpected argument\n+   |         ^ -\n+   |           |\n+   |           unexpected argument\n+   |           help: remove the extra argument\n    |\n note: callable defined here\n   --> $DIR/issue-16939.rs:4:12\n    |\n LL | fn _foo<F: Fn()> (f: F) {\n    |            ^^^^\n-help: remove the extra argument\n-   |\n-LL -     |t| f(t);\n-LL +     |t| f();\n-   |\n \n error: aborting due to previous error\n "}, {"sha": "608d2c7aff93f59ac2722183559f3864ec5aa667", "filename": "tests/ui/issues/issue-26094.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fissues%2Fissue-26094.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fissues%2Fissue-26094.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-26094.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -2,7 +2,10 @@ error[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/issue-26094.rs:10:17\n    |\n LL |         $other(None)\n-   |                ---- unexpected argument of type `Option<_>`\n+   |                ----\n+   |                |\n+   |                unexpected argument of type `Option<_>`\n+   |                help: remove the extra argument\n ...\n LL |     some_macro!(some_function);\n    |                 ^^^^^^^^^^^^^\n@@ -12,11 +15,6 @@ note: function defined here\n    |\n LL | fn some_function() {}\n    |    ^^^^^^^^^^^^^\n-help: remove the extra argument\n-   |\n-LL -         $other(None)\n-LL +         $other()\n-   |\n \n error: aborting due to previous error\n "}, {"sha": "e544e4244034df0cd69c4bc407ae3d0e9c6a4b90", "filename": "tests/ui/issues/issue-4935.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fissues%2Fissue-4935.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fissues%2Fissue-4935.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-4935.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -2,18 +2,16 @@ error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/issue-4935.rs:5:13\n    |\n LL | fn main() { foo(5, 6) }\n-   |             ^^^    - unexpected argument of type `{integer}`\n+   |             ^^^  ---\n+   |                  | |\n+   |                  | unexpected argument of type `{integer}`\n+   |                  help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/issue-4935.rs:3:4\n    |\n LL | fn foo(a: usize) {}\n    |    ^^^ --------\n-help: remove the extra argument\n-   |\n-LL - fn main() { foo(5, 6) }\n-LL + fn main() { foo(5) }\n-   |\n \n error: aborting due to previous error\n "}, {"sha": "0f37e8f09a964153b9d4972eea114c40dbee3ac0", "filename": "tests/ui/methods/method-call-err-msg.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -2,18 +2,16 @@ error[E0061]: this method takes 0 arguments but 1 argument was supplied\n   --> $DIR/method-call-err-msg.rs:13:7\n    |\n LL |     x.zero(0)\n-   |       ^^^^ - unexpected argument of type `{integer}`\n+   |       ^^^^ -\n+   |            |\n+   |            unexpected argument of type `{integer}`\n+   |            help: remove the extra argument\n    |\n note: associated function defined here\n   --> $DIR/method-call-err-msg.rs:5:8\n    |\n LL |     fn zero(self) -> Foo { self }\n    |        ^^^^\n-help: remove the extra argument\n-   |\n-LL -     x.zero(0)\n-LL +     x.zero()\n-   |\n \n error[E0061]: this method takes 1 argument but 0 arguments were supplied\n   --> $DIR/method-call-err-msg.rs:14:7"}, {"sha": "f803f9da2af1a5f08cb68455d13c223f72fd68b2", "filename": "tests/ui/resolve/resolve-primitive-fallback.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fresolve%2Fresolve-primitive-fallback.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fresolve%2Fresolve-primitive-fallback.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresolve%2Fresolve-primitive-fallback.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -24,15 +24,13 @@ error[E0061]: this function takes 0 arguments but 1 argument was supplied\n   --> $DIR/resolve-primitive-fallback.rs:3:5\n    |\n LL |     std::mem::size_of(u16);\n-   |     ^^^^^^^^^^^^^^^^^ --- unexpected argument\n+   |     ^^^^^^^^^^^^^^^^^ ---\n+   |                       |\n+   |                       unexpected argument\n+   |                       help: remove the extra argument\n    |\n note: function defined here\n   --> $SRC_DIR/core/src/mem/mod.rs:LL:COL\n-help: remove the extra argument\n-   |\n-LL -     std::mem::size_of(u16);\n-LL +     std::mem::size_of();\n-   |\n \n error: aborting due to 3 previous errors\n "}, {"sha": "f0dea66f6128d77c94f59359198e6f873a04eaed", "filename": "tests/ui/span/issue-34264.stderr", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fspan%2Fissue-34264.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Fspan%2Fissue-34264.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fspan%2Fissue-34264.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -54,18 +54,16 @@ error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/issue-34264.rs:7:5\n    |\n LL |     foo(Some(42), 2, \"\");\n-   |     ^^^              -- unexpected argument of type `&'static str`\n+   |     ^^^            ----\n+   |                    | |\n+   |                    | unexpected argument of type `&'static str`\n+   |                    help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/issue-34264.rs:1:4\n    |\n LL | fn foo(Option<i32>, String) {}\n    |    ^^^ -----------  ------\n-help: remove the extra argument\n-   |\n-LL -     foo(Some(42), 2, \"\");\n-LL +     foo(Some(42), 2);\n-   |\n \n error[E0308]: mismatched types\n   --> $DIR/issue-34264.rs:8:13\n@@ -85,18 +83,16 @@ error[E0061]: this function takes 2 arguments but 3 arguments were supplied\n   --> $DIR/issue-34264.rs:10:5\n    |\n LL |     bar(1, 2, 3);\n-   |     ^^^       - unexpected argument of type `{integer}`\n+   |     ^^^     ---\n+   |             | |\n+   |             | unexpected argument of type `{integer}`\n+   |             help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/issue-34264.rs:3:4\n    |\n LL | fn bar(x, y: usize) {}\n    |    ^^^ -  --------\n-help: remove the extra argument\n-   |\n-LL -     bar(1, 2, 3);\n-LL +     bar(1, 2);\n-   |\n \n error: aborting due to 6 previous errors\n "}, {"sha": "d8569ebf6b6e29fa38f163a50a24d9c31250717c", "filename": "tests/ui/tuple/wrong_argument_ice-4.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Ftuple%2Fwrong_argument_ice-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Ftuple%2Fwrong_argument_ice-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftuple%2Fwrong_argument_ice-4.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -6,18 +6,16 @@ LL |       (|| {})(|| {\n LL | |\n LL | |         let b = 1;\n LL | |     });\n-   | |_____- unexpected argument of type `[closure@$DIR/wrong_argument_ice-4.rs:2:13: 2:15]`\n+   | |     -\n+   | |     |\n+   | |_____unexpected argument of type `[closure@$DIR/wrong_argument_ice-4.rs:2:13: 2:15]`\n+   |       help: remove the extra argument\n    |\n note: closure defined here\n   --> $DIR/wrong_argument_ice-4.rs:2:6\n    |\n LL |     (|| {})(|| {\n    |      ^^\n-help: remove the extra argument\n-   |\n-LL -     (|| {})(|| {\n-LL +     (|| {})();\n-   |\n \n error: aborting due to previous error\n "}, {"sha": "429501c2762fc61ba27a017d5b32a81ad1ecde27", "filename": "tests/ui/type/type-ascription-instead-of-initializer.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Ftype%2Ftype-ascription-instead-of-initializer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Ftype%2Ftype-ascription-instead-of-initializer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype%2Ftype-ascription-instead-of-initializer.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -11,15 +11,13 @@ error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/type-ascription-instead-of-initializer.rs:2:12\n    |\n LL |     let x: Vec::with_capacity(10, 20);\n-   |            ^^^^^^^^^^^^^^^^^^     -- unexpected argument of type `{integer}`\n+   |            ^^^^^^^^^^^^^^^^^^   ----\n+   |                                 | |\n+   |                                 | unexpected argument of type `{integer}`\n+   |                                 help: remove the extra argument\n    |\n note: associated function defined here\n   --> $SRC_DIR/alloc/src/vec/mod.rs:LL:COL\n-help: remove the extra argument\n-   |\n-LL -     let x: Vec::with_capacity(10, 20);\n-LL +     let x: Vec::with_capacity(10);\n-   |\n \n error: aborting due to 2 previous errors\n "}, {"sha": "72ddebab486ce07820a0a9f3d388612d17adefb0", "filename": "tests/ui/typeck/remove-extra-argument.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Ftypeck%2Fremove-extra-argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Ftypeck%2Fremove-extra-argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fremove-extra-argument.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -2,18 +2,16 @@ error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/remove-extra-argument.rs:6:5\n    |\n LL |     l(vec![], vec![])\n-   |     ^         ------ unexpected argument of type `Vec<_>`\n+   |     ^       --------\n+   |             | |\n+   |             | unexpected argument of type `Vec<_>`\n+   |             help: remove the extra argument\n    |\n note: function defined here\n   --> $DIR/remove-extra-argument.rs:3:4\n    |\n LL | fn l(_a: Vec<u8>) {}\n    |    ^ -----------\n-help: remove the extra argument\n-   |\n-LL -     l(vec![], vec![])\n-LL +     l(vec![])\n-   |\n \n error: aborting due to previous error\n "}, {"sha": "57cbd1d2005c3411905b9a28ce864db7f13c7ca7", "filename": "tests/ui/typeck/struct-enum-wrong-args.stderr", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd176ee591cd391835bfbcb3409a743bac2128ca/tests%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr?ref=bd176ee591cd391835bfbcb3409a743bac2128ca", "patch": "@@ -2,15 +2,13 @@ error[E0061]: this enum variant takes 1 argument but 2 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:6:13\n    |\n LL |     let _ = Some(3, 2);\n-   |             ^^^^    - unexpected argument of type `{integer}`\n+   |             ^^^^  ---\n+   |                   | |\n+   |                   | unexpected argument of type `{integer}`\n+   |                   help: remove the extra argument\n    |\n note: tuple variant defined here\n   --> $SRC_DIR/core/src/option.rs:LL:COL\n-help: remove the extra argument\n-   |\n-LL -     let _ = Some(3, 2);\n-LL +     let _ = Some(3);\n-   |\n \n error[E0061]: this enum variant takes 1 argument but 3 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:7:13\n@@ -61,18 +59,16 @@ error[E0061]: this struct takes 1 argument but 2 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:10:13\n    |\n LL |     let _ = Wrapper(5, 2);\n-   |             ^^^^^^^    - unexpected argument of type `{integer}`\n+   |             ^^^^^^^  ---\n+   |                      | |\n+   |                      | unexpected argument of type `{integer}`\n+   |                      help: remove the extra argument\n    |\n note: tuple struct defined here\n   --> $DIR/struct-enum-wrong-args.rs:2:8\n    |\n LL | struct Wrapper(i32);\n    |        ^^^^^^^\n-help: remove the extra argument\n-   |\n-LL -     let _ = Wrapper(5, 2);\n-LL +     let _ = Wrapper(5);\n-   |\n \n error[E0061]: this struct takes 2 arguments but 0 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:11:13\n@@ -110,18 +106,16 @@ error[E0061]: this struct takes 2 arguments but 3 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:13:13\n    |\n LL |     let _ = DoubleWrapper(5, 2, 7);\n-   |             ^^^^^^^^^^^^^       - unexpected argument of type `{integer}`\n+   |             ^^^^^^^^^^^^^     ---\n+   |                               | |\n+   |                               | unexpected argument of type `{integer}`\n+   |                               help: remove the extra argument\n    |\n note: tuple struct defined here\n   --> $DIR/struct-enum-wrong-args.rs:3:8\n    |\n LL | struct DoubleWrapper(i32, i32);\n    |        ^^^^^^^^^^^^^\n-help: remove the extra argument\n-   |\n-LL -     let _ = DoubleWrapper(5, 2, 7);\n-LL +     let _ = DoubleWrapper(5, 2);\n-   |\n \n error: aborting due to 8 previous errors\n "}]}