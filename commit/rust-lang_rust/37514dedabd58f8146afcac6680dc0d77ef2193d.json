{"sha": "37514dedabd58f8146afcac6680dc0d77ef2193d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NTE0ZGVkYWJkNThmODE0NmFmY2FjNjY4MGRjMGQ3N2VmMjE5M2Q=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-04-11T18:11:59Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-04-11T18:11:59Z"}, "message": "Document unsafety in `core::option`", "tree": {"sha": "869c14d07f9ea9b56f73a014b6cf7f4957803c1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/869c14d07f9ea9b56f73a014b6cf7f4957803c1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37514dedabd58f8146afcac6680dc0d77ef2193d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37514dedabd58f8146afcac6680dc0d77ef2193d", "html_url": "https://github.com/rust-lang/rust/commit/37514dedabd58f8146afcac6680dc0d77ef2193d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37514dedabd58f8146afcac6680dc0d77ef2193d/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76882666eba15a186402a911c227f8e9c1682186", "url": "https://api.github.com/repos/rust-lang/rust/commits/76882666eba15a186402a911c227f8e9c1682186", "html_url": "https://github.com/rust-lang/rust/commit/76882666eba15a186402a911c227f8e9c1682186"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "63a5277100fa81be381c58a382f184d1e4e9d793", "filename": "src/libcore/option.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/37514dedabd58f8146afcac6680dc0d77ef2193d/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37514dedabd58f8146afcac6680dc0d77ef2193d/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=37514dedabd58f8146afcac6680dc0d77ef2193d", "patch": "@@ -133,8 +133,6 @@\n //! [`Box<T>`]: ../../std/boxed/struct.Box.html\n //! [`i32`]: ../../std/primitive.i32.html\n \n-// ignore-tidy-undocumented-unsafe\n-\n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n use crate::iter::{FromIterator, FusedIterator, TrustedLen};\n@@ -301,6 +299,8 @@ impl<T> Option<T> {\n     #[inline]\n     #[stable(feature = \"pin\", since = \"1.33.0\")]\n     pub fn as_pin_ref(self: Pin<&Self>) -> Option<Pin<&T>> {\n+        // SAFETY: `x` is guaranteed to be pinned because it comes from `self`\n+        // which is pinned.\n         unsafe { Pin::get_ref(self).as_ref().map(|x| Pin::new_unchecked(x)) }\n     }\n \n@@ -310,6 +310,8 @@ impl<T> Option<T> {\n     #[inline]\n     #[stable(feature = \"pin\", since = \"1.33.0\")]\n     pub fn as_pin_mut(self: Pin<&mut Self>) -> Option<Pin<&mut T>> {\n+        // SAFETY: `get_unchecked_mut` is never used to move the `Option` inside `self`.\n+        // `x` is guaranteed to be pinned because it comes from `self` which is pinned.\n         unsafe { Pin::get_unchecked_mut(self).as_mut().map(|x| Pin::new_unchecked(x)) }\n     }\n \n@@ -858,6 +860,8 @@ impl<T> Option<T> {\n \n         match *self {\n             Some(ref mut v) => v,\n+            // SAFETY: a `None` variant for `self` would have been replaced by a `Some`\n+            // variant in the code above.\n             None => unsafe { hint::unreachable_unchecked() },\n         }\n     }"}]}