{"sha": "938efe6f498b24734e68647aefb1e17459ef49b2", "node_id": "C_kwDOAAsO6NoAKDkzOGVmZTZmNDk4YjI0NzM0ZTY4NjQ3YWVmYjFlMTc0NTllZjQ5YjI", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-04-20T16:05:35Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-04-20T16:05:35Z"}, "message": "Rename fmt::rt::Argument to Placeholder.", "tree": {"sha": "50238dea89413b2af2abdf5297147e56d31615d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50238dea89413b2af2abdf5297147e56d31615d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/938efe6f498b24734e68647aefb1e17459ef49b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/938efe6f498b24734e68647aefb1e17459ef49b2", "html_url": "https://github.com/rust-lang/rust/commit/938efe6f498b24734e68647aefb1e17459ef49b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/938efe6f498b24734e68647aefb1e17459ef49b2/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc11b459af451e4c35bf611a0baacba2b7919629", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc11b459af451e4c35bf611a0baacba2b7919629", "html_url": "https://github.com/rust-lang/rust/commit/bc11b459af451e4c35bf611a0baacba2b7919629"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "bbbfe06656cd770dfe081e697d5348aac74cb290", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/938efe6f498b24734e68647aefb1e17459ef49b2/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/938efe6f498b24734e68647aefb1e17459ef49b2/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=938efe6f498b24734e68647aefb1e17459ef49b2", "patch": "@@ -428,7 +428,7 @@ impl<'a> Arguments<'a> {\n     /// An `UnsafeArg` is required because the following invariants must be held\n     /// in order for this function to be safe:\n     /// 1. The `pieces` slice must be at least as long as `fmt`.\n-    /// 2. Every [`rt::Argument::position`] value within `fmt` must be a\n+    /// 2. Every [`rt::Placeholder::position`] value within `fmt` must be a\n     ///    valid index of `args`.\n     /// 3. Every [`rt::Count::Param`] within `fmt` must contain a valid index of\n     ///    `args`.\n@@ -438,7 +438,7 @@ impl<'a> Arguments<'a> {\n     pub fn new_v1_formatted(\n         pieces: &'a [&'static str],\n         args: &'a [ArgumentV1<'a>],\n-        fmt: &'a [rt::Argument],\n+        fmt: &'a [rt::Placeholder],\n         _unsafe_arg: UnsafeArg,\n     ) -> Arguments<'a> {\n         Arguments { pieces, fmt: Some(fmt), args }\n@@ -500,7 +500,7 @@ pub struct Arguments<'a> {\n     pieces: &'a [&'static str],\n \n     // Placeholder specs, or `None` if all specs are default (as in \"{}{}\").\n-    fmt: Option<&'a [rt::Argument]>,\n+    fmt: Option<&'a [rt::Placeholder]>,\n \n     // Dynamic arguments for interpolation, to be interleaved with string\n     // pieces. (Every argument is preceded by a string piece.)\n@@ -1276,7 +1276,7 @@ pub fn write(output: &mut dyn Write, args: Arguments<'_>) -> Result {\n     Ok(())\n }\n \n-unsafe fn run(fmt: &mut Formatter<'_>, arg: &rt::Argument, args: &[ArgumentV1<'_>]) -> Result {\n+unsafe fn run(fmt: &mut Formatter<'_>, arg: &rt::Placeholder, args: &[ArgumentV1<'_>]) -> Result {\n     fmt.fill = arg.format.fill;\n     fmt.align = arg.format.align;\n     fmt.flags = arg.format.flags;"}, {"sha": "497b2e27739f99e6267c37c9c7ac588de973c378", "filename": "library/core/src/fmt/rt.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/938efe6f498b24734e68647aefb1e17459ef49b2/library%2Fcore%2Fsrc%2Ffmt%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/938efe6f498b24734e68647aefb1e17459ef49b2/library%2Fcore%2Fsrc%2Ffmt%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Frt.rs?ref=938efe6f498b24734e68647aefb1e17459ef49b2", "patch": "@@ -5,8 +5,7 @@\n \n #[lang = \"format_placeholder\"]\n #[derive(Copy, Clone)]\n-// FIXME: Rename this to Placeholder\n-pub struct Argument {\n+pub struct Placeholder {\n     pub position: usize,\n     pub format: FormatSpec,\n }\n@@ -20,7 +19,7 @@ pub struct FormatSpec {\n     pub width: Count,\n }\n \n-impl Argument {\n+impl Placeholder {\n     #[inline(always)]\n     pub const fn new(\n         position: usize,"}]}