{"sha": "dfae0a12efe4d4920782f1f808f56913097162e9", "node_id": "C_kwDOAAsO6NoAKGRmYWUwYTEyZWZlNGQ0OTIwNzgyZjFmODA4ZjU2OTEzMDk3MTYyZTk", "commit": {"author": {"name": "harpsword", "email": "harpswordyyl@gmail.com", "date": "2022-05-18T10:35:51Z"}, "committer": {"name": "harpsword", "email": "harpswordyyl@gmail.com", "date": "2022-05-18T13:08:18Z"}, "message": "fix: calculate right range for Dos line ending in mapping rustc range to lsp range", "tree": {"sha": "efd9d764e898692d53fafb77aad9acf713536c9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efd9d764e898692d53fafb77aad9acf713536c9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfae0a12efe4d4920782f1f808f56913097162e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfae0a12efe4d4920782f1f808f56913097162e9", "html_url": "https://github.com/rust-lang/rust/commit/dfae0a12efe4d4920782f1f808f56913097162e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfae0a12efe4d4920782f1f808f56913097162e9/comments", "author": {"login": "harpsword", "id": 10148927, "node_id": "MDQ6VXNlcjEwMTQ4OTI3", "avatar_url": "https://avatars.githubusercontent.com/u/10148927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harpsword", "html_url": "https://github.com/harpsword", "followers_url": "https://api.github.com/users/harpsword/followers", "following_url": "https://api.github.com/users/harpsword/following{/other_user}", "gists_url": "https://api.github.com/users/harpsword/gists{/gist_id}", "starred_url": "https://api.github.com/users/harpsword/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harpsword/subscriptions", "organizations_url": "https://api.github.com/users/harpsword/orgs", "repos_url": "https://api.github.com/users/harpsword/repos", "events_url": "https://api.github.com/users/harpsword/events{/privacy}", "received_events_url": "https://api.github.com/users/harpsword/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harpsword", "id": 10148927, "node_id": "MDQ6VXNlcjEwMTQ4OTI3", "avatar_url": "https://avatars.githubusercontent.com/u/10148927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harpsword", "html_url": "https://github.com/harpsword", "followers_url": "https://api.github.com/users/harpsword/followers", "following_url": "https://api.github.com/users/harpsword/following{/other_user}", "gists_url": "https://api.github.com/users/harpsword/gists{/gist_id}", "starred_url": "https://api.github.com/users/harpsword/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harpsword/subscriptions", "organizations_url": "https://api.github.com/users/harpsword/orgs", "repos_url": "https://api.github.com/users/harpsword/repos", "events_url": "https://api.github.com/users/harpsword/events{/privacy}", "received_events_url": "https://api.github.com/users/harpsword/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "187bd7d48afda84d6aff578274585d9835cbd4bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/187bd7d48afda84d6aff578274585d9835cbd4bb", "html_url": "https://github.com/rust-lang/rust/commit/187bd7d48afda84d6aff578274585d9835cbd4bb"}], "stats": {"total": 27, "additions": 5, "deletions": 22}, "files": [{"sha": "aac8e9222d31f48283e9d26ba061eea666666bd8", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 5, "deletions": 22, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/dfae0a12efe4d4920782f1f808f56913097162e9/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfae0a12efe4d4920782f1f808f56913097162e9/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=dfae0a12efe4d4920782f1f808f56913097162e9", "patch": "@@ -3,18 +3,13 @@\n use std::collections::HashMap;\n \n use flycheck::{Applicability, DiagnosticLevel, DiagnosticSpan};\n-use ide::TextRange;\n use itertools::Itertools;\n use stdx::format_to;\n use vfs::{AbsPath, AbsPathBuf};\n \n use crate::{\n-    from_proto,\n-    global_state::GlobalStateSnapshot,\n-    line_index::OffsetEncoding,\n-    lsp_ext,\n-    to_proto::{self, url_from_abs_path},\n-    Result,\n+    global_state::GlobalStateSnapshot, line_index::OffsetEncoding, lsp_ext,\n+    to_proto::url_from_abs_path,\n };\n \n use super::{DiagnosticsMapConfig, Fix};\n@@ -70,28 +65,16 @@ fn location(\n     let file_name = resolve_path(config, workspace_root, &span.file_name);\n     let uri = url_from_abs_path(&file_name);\n \n-    let range = range(span, snap, &uri).unwrap_or_else(|_| {\n+    let range = {\n         let offset_encoding = snap.config.offset_encoding();\n         lsp_types::Range::new(\n             position(&offset_encoding, span, span.line_start, span.column_start),\n             position(&offset_encoding, span, span.line_end, span.column_end),\n         )\n-    });\n+    };\n     lsp_types::Location::new(uri, range)\n }\n \n-fn range(\n-    span: &DiagnosticSpan,\n-    snap: &GlobalStateSnapshot,\n-    uri: &lsp_types::Url,\n-) -> Result<lsp_types::Range> {\n-    let file_id = from_proto::file_id(snap, &uri)?;\n-    let line_index = snap.file_line_index(file_id)?;\n-    let range =\n-        to_proto::range(&line_index, TextRange::new(span.byte_start.into(), span.byte_end.into()));\n-    Ok(range)\n-}\n-\n fn position(\n     offset_encoding: &OffsetEncoding,\n     span: &DiagnosticSpan,\n@@ -103,7 +86,7 @@ fn position(\n     let mut true_column_offset = column_offset;\n     if let Some(line) = span.text.get(line_index) {\n         if line.text.chars().count() == line.text.len() {\n-            // all utf-8\n+            // all one byte utf-8 char\n             return lsp_types::Position {\n                 line: (line_offset as u32).saturating_sub(1),\n                 character: (column_offset as u32).saturating_sub(1),"}]}