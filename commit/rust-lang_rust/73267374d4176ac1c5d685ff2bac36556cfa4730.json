{"sha": "73267374d4176ac1c5d685ff2bac36556cfa4730", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczMjY3Mzc0ZDQxNzZhYzFjNWQ2ODVmZjJiYWMzNjU1NmNmYTQ3MzA=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-06-16T13:44:09Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-06-16T13:44:09Z"}, "message": "Use custom cargo/rustc paths when parsing flags.", "tree": {"sha": "c3894c6c07ef710edfc721f00bdcdbc371c97110", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3894c6c07ef710edfc721f00bdcdbc371c97110"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73267374d4176ac1c5d685ff2bac36556cfa4730", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73267374d4176ac1c5d685ff2bac36556cfa4730", "html_url": "https://github.com/rust-lang/rust/commit/73267374d4176ac1c5d685ff2bac36556cfa4730", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73267374d4176ac1c5d685ff2bac36556cfa4730/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16c27bf713ac7c0afeada808e274c73e10eb96bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/16c27bf713ac7c0afeada808e274c73e10eb96bd", "html_url": "https://github.com/rust-lang/rust/commit/16c27bf713ac7c0afeada808e274c73e10eb96bd"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "dc9dac73627880b864916fc24816c3a23fd185b5", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/73267374d4176ac1c5d685ff2bac36556cfa4730/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73267374d4176ac1c5d685ff2bac36556cfa4730/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=73267374d4176ac1c5d685ff2bac36556cfa4730", "patch": "@@ -242,11 +242,18 @@ Arguments:\n         let cwd = t!(env::current_dir());\n         let paths = matches.free[1..].iter().map(|p| cwd.join(p)).collect::<Vec<_>>();\n \n+        let cfg_file = matches.opt_str(\"config\").map(PathBuf::from).or_else(|| {\n+            if fs::metadata(\"config.toml\").is_ok() {\n+                Some(PathBuf::from(\"config.toml\"))\n+            } else {\n+                None\n+            }\n+        });\n \n         // All subcommands can have an optional \"Available paths\" section\n         if matches.opt_present(\"verbose\") {\n             let flags = Flags::parse(&[\"build\".to_string()]);\n-            let mut config = Config::default();\n+            let mut config = Config::parse(&flags.build, cfg_file.clone());\n             config.build = flags.build.clone();\n             let mut build = Build::new(flags, config);\n             metadata::build(&mut build);\n@@ -307,14 +314,6 @@ Arguments:\n         };\n \n \n-        let cfg_file = matches.opt_str(\"config\").map(PathBuf::from).or_else(|| {\n-            if fs::metadata(\"config.toml\").is_ok() {\n-                Some(PathBuf::from(\"config.toml\"))\n-            } else {\n-                None\n-            }\n-        });\n-\n         let mut stage = matches.opt_str(\"stage\").map(|j| j.parse().unwrap());\n \n         if matches.opt_present(\"incremental\") {"}]}