{"sha": "83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzYzViNGVjNDBjZWFkZmJjZjNjNTU4ZjA2ZTA0YzQ4ZjAxYzFlNTI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-13T19:37:31Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-25T06:18:05Z"}, "message": "Avoid output dependency on std spans", "tree": {"sha": "dcc9c207ee9ed074afbe2d19a6130aaf66307d3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcc9c207ee9ed074afbe2d19a6130aaf66307d3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52", "html_url": "https://github.com/rust-lang/rust/commit/83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d316a5a67f3039f2437c4bc284d6f954e1d6806", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d316a5a67f3039f2437c4bc284d6f954e1d6806", "html_url": "https://github.com/rust-lang/rust/commit/8d316a5a67f3039f2437c4bc284d6f954e1d6806"}], "stats": {"total": 127, "additions": 60, "deletions": 67}, "files": [{"sha": "72a98bd8ddd8a7ba9f9aefc8cbc86b4e82102e63", "filename": "src/test/ui/issues/issue-21950.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52/src%2Ftest%2Fui%2Fissues%2Fissue-21950.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52/src%2Ftest%2Fui%2Fissues%2Fissue-21950.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21950.rs?ref=83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52", "patch": "@@ -1,8 +1,13 @@\n-use std::ops::Add;\n+trait Add<Rhs=Self> {\n+    type Output;\n+}\n+\n+impl Add for i32 {\n+    type Output = i32;\n+}\n \n fn main() {\n-    let x = &10 as\n-            &dyn Add;\n-            //~^ ERROR E0393\n-            //~| ERROR E0191\n+    let x = &10 as &dyn Add;\n+    //~^ ERROR E0393\n+    //~| ERROR E0191\n }"}, {"sha": "93c2444f884de0bcea87ddbdd17c3e374f82c0e3", "filename": "src/test/ui/issues/issue-21950.stderr", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52/src%2Ftest%2Fui%2Fissues%2Fissue-21950.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52/src%2Ftest%2Fui%2Fissues%2Fissue-21950.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21950.stderr?ref=83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52", "patch": "@@ -1,27 +1,24 @@\n error[E0393]: the type parameter `Rhs` must be explicitly specified\n-  --> $DIR/issue-21950.rs:5:18\n+  --> $DIR/issue-21950.rs:10:25\n    |\n-LL |               &dyn Add;\n-   |                    ^^^ help: set the type parameter to the desired type: `Add<Rhs>`\n-   | \n-  ::: $SRC_DIR/libcore/ops/arith.rs:LL:COL\n-   |\n-LL | / pub trait Add<Rhs = Self> {\n-LL | |     /// The resulting type after applying the `+` operator.\n-LL | |     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+LL | / trait Add<Rhs=Self> {\n LL | |     type Output;\n-...  |\n-LL | |     fn add(self, rhs: Rhs) -> Self::Output;\n LL | | }\n    | |_- type parameter `Rhs` must be specified for this\n+...\n+LL |       let x = &10 as &dyn Add;\n+   |                           ^^^ help: set the type parameter to the desired type: `Add<Rhs>`\n    |\n    = note: because of the default `Self` reference, type parameters must be specified on object types\n \n-error[E0191]: the value of the associated type `Output` (from trait `std::ops::Add`) must be specified\n-  --> $DIR/issue-21950.rs:5:18\n+error[E0191]: the value of the associated type `Output` (from trait `Add`) must be specified\n+  --> $DIR/issue-21950.rs:10:25\n    |\n-LL |             &dyn Add;\n-   |                  ^^^ help: specify the associated type: `Add<Output = Type>`\n+LL |     type Output;\n+   |     ------------ `Output` defined here\n+...\n+LL |     let x = &10 as &dyn Add;\n+   |                         ^^^ help: specify the associated type: `Add<Output = Type>`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "44be8817b08c7f4e85a512afbd601c16c9679802", "filename": "src/test/ui/issues/issue-22560.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52/src%2Ftest%2Fui%2Fissues%2Fissue-22560.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52/src%2Ftest%2Fui%2Fissues%2Fissue-22560.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22560.rs?ref=83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52", "patch": "@@ -1,10 +1,15 @@\n-use std::ops::{Add, Sub};\n+trait Add<Rhs=Self> {\n+    type Output;\n+}\n \n-type Test = dyn Add +\n-            //~^ ERROR E0393\n-            //~| ERROR E0191\n-            Sub;\n-            //~^ ERROR E0393\n-            //~| ERROR E0225\n+trait Sub<Rhs=Self> {\n+    type Output;\n+}\n+\n+type Test = dyn Add + Sub;\n+//~^ ERROR E0393\n+//~| ERROR E0191\n+//~| ERROR E0393\n+//~| ERROR E0225\n \n fn main() { }"}, {"sha": "4466a40f0da611c6ad1692e4be9481ae49bbb681", "filename": "src/test/ui/issues/issue-22560.stderr", "status": "modified", "additions": 26, "deletions": 40, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr?ref=83c5b4ec40ceadfbcf3c558f06e04c48f01c1e52", "patch": "@@ -1,65 +1,51 @@\n error[E0393]: the type parameter `Rhs` must be explicitly specified\n-  --> $DIR/issue-22560.rs:6:13\n+  --> $DIR/issue-22560.rs:9:23\n    |\n-LL |               Sub;\n-   |               ^^^ help: set the type parameter to the desired type: `Sub<Rhs>`\n-   | \n-  ::: $SRC_DIR/libcore/ops/arith.rs:LL:COL\n-   |\n-LL | / pub trait Sub<Rhs = Self> {\n-LL | |     /// The resulting type after applying the `-` operator.\n-LL | |     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+LL | / trait Sub<Rhs=Self> {\n LL | |     type Output;\n-...  |\n-LL | |     fn sub(self, rhs: Rhs) -> Self::Output;\n LL | | }\n    | |_- type parameter `Rhs` must be specified for this\n+LL | \n+LL |   type Test = dyn Add + Sub;\n+   |                         ^^^ help: set the type parameter to the desired type: `Sub<Rhs>`\n    |\n    = note: because of the default `Self` reference, type parameters must be specified on object types\n \n error[E0393]: the type parameter `Rhs` must be explicitly specified\n-  --> $DIR/issue-22560.rs:3:17\n-   |\n-LL |   type Test = dyn Add +\n-   |                   ^^^ help: set the type parameter to the desired type: `Add<Rhs>`\n-   | \n-  ::: $SRC_DIR/libcore/ops/arith.rs:LL:COL\n+  --> $DIR/issue-22560.rs:9:17\n    |\n-LL | / pub trait Add<Rhs = Self> {\n-LL | |     /// The resulting type after applying the `+` operator.\n-LL | |     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+LL | / trait Add<Rhs=Self> {\n LL | |     type Output;\n-...  |\n-LL | |     fn add(self, rhs: Rhs) -> Self::Output;\n LL | | }\n    | |_- type parameter `Rhs` must be specified for this\n+...\n+LL |   type Test = dyn Add + Sub;\n+   |                   ^^^ help: set the type parameter to the desired type: `Add<Rhs>`\n    |\n    = note: because of the default `Self` reference, type parameters must be specified on object types\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n-  --> $DIR/issue-22560.rs:6:13\n+  --> $DIR/issue-22560.rs:9:23\n    |\n-LL | type Test = dyn Add +\n-   |                 ---\n-   |                 |\n+LL | type Test = dyn Add + Sub;\n+   |                 ---   ^^^\n+   |                 |     |\n+   |                 |     additional non-auto trait\n+   |                 |     trait alias used in trait object type (additional use)\n    |                 first non-auto trait\n    |                 trait alias used in trait object type (first use)\n-...\n-LL |             Sub;\n-   |             ^^^\n-   |             |\n-   |             additional non-auto trait\n-   |             trait alias used in trait object type (additional use)\n \n-error[E0191]: the value of the associated types `Output` (from trait `std::ops::Add`), `Output` (from trait `std::ops::Sub`) must be specified\n-  --> $DIR/issue-22560.rs:3:13\n+error[E0191]: the value of the associated types `Output` (from trait `Add`), `Output` (from trait `Sub`) must be specified\n+  --> $DIR/issue-22560.rs:9:13\n    |\n-LL |   type Test = dyn Add +\n-   |  _____________^\n-LL | |\n-LL | |\n-LL | |             Sub;\n-   | |_______________^ associated types `Output`, `Output` must be specified\n+LL |     type Output;\n+   |     ------------ `Output` defined here\n+...\n+LL |     type Output;\n+   |     ------------ `Output` defined here\n+...\n+LL | type Test = dyn Add + Sub;\n+   |             ^^^^^^^^^^^^^ associated types `Output`, `Output` must be specified\n \n error: aborting due to 4 previous errors\n "}]}